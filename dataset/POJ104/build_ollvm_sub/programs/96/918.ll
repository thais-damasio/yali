; ModuleID = 'source-C-CXX/96/918.c'
source_filename = "source-C-CXX/96/918.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"%d\0A%d\0A%d\0A%d\0A%d\0A%d\00", align 1

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %2)
  %10 = load i32, i32* %2, align 4
  %11 = load i32, i32* %2, align 4
  %12 = srem i32 %11, 100
  %13 = sub i32 0, %12
  %14 = add i32 %10, %13
  %15 = sub nsw i32 %10, %12
  %16 = sdiv i32 %14, 100
  store i32 %16, i32* %3, align 4
  %17 = load i32, i32* %2, align 4
  %18 = load i32, i32* %3, align 4
  %19 = mul nsw i32 %18, 100
  %20 = sub i32 %17, -233366321
  %21 = sub i32 %20, %19
  %22 = add i32 %21, -233366321
  %23 = sub nsw i32 %17, %19
  %24 = load i32, i32* %2, align 4
  %25 = load i32, i32* %3, align 4
  %26 = mul nsw i32 %25, 100
  %27 = add i32 %24, 1007350025
  %28 = sub i32 %27, %26
  %29 = sub i32 %28, 1007350025
  %30 = sub nsw i32 %24, %26
  %31 = srem i32 %29, 50
  %32 = sub i32 0, %31
  %33 = add i32 %22, %32
  %34 = sub nsw i32 %22, %31
  %35 = sdiv i32 %33, 50
  store i32 %35, i32* %4, align 4
  %36 = load i32, i32* %2, align 4
  %37 = load i32, i32* %3, align 4
  %38 = mul nsw i32 %37, 100
  %39 = sub i32 0, %38
  %40 = add i32 %36, %39
  %41 = sub nsw i32 %36, %38
  %42 = load i32, i32* %4, align 4
  %43 = mul nsw i32 %42, 50
  %44 = add i32 %40, -1336078473
  %45 = sub i32 %44, %43
  %46 = sub i32 %45, -1336078473
  %47 = sub nsw i32 %40, %43
  %48 = load i32, i32* %2, align 4
  %49 = load i32, i32* %3, align 4
  %50 = mul nsw i32 %49, 100
  %51 = add i32 %48, 210859084
  %52 = sub i32 %51, %50
  %53 = sub i32 %52, 210859084
  %54 = sub nsw i32 %48, %50
  %55 = load i32, i32* %4, align 4
  %56 = mul nsw i32 %55, 50
  %57 = sub i32 %53, 2042163695
  %58 = sub i32 %57, %56
  %59 = add i32 %58, 2042163695
  %60 = sub nsw i32 %53, %56
  %61 = srem i32 %59, 20
  %62 = add i32 %46, 1056752334
  %63 = sub i32 %62, %61
  %64 = sub i32 %63, 1056752334
  %65 = sub nsw i32 %46, %61
  %66 = sdiv i32 %64, 20
  store i32 %66, i32* %5, align 4
  %67 = load i32, i32* %2, align 4
  %68 = load i32, i32* %3, align 4
  %69 = mul nsw i32 %68, 100
  %70 = sub i32 0, %69
  %71 = add i32 %67, %70
  %72 = sub nsw i32 %67, %69
  %73 = load i32, i32* %4, align 4
  %74 = mul nsw i32 %73, 50
  %75 = sub i32 0, %74
  %76 = add i32 %71, %75
  %77 = sub nsw i32 %71, %74
  %78 = load i32, i32* %5, align 4
  %79 = mul nsw i32 %78, 20
  %80 = sub i32 0, %79
  %81 = add i32 %76, %80
  %82 = sub nsw i32 %76, %79
  %83 = load i32, i32* %2, align 4
  %84 = load i32, i32* %3, align 4
  %85 = mul nsw i32 %84, 100
  %86 = sub i32 %83, -1825919449
  %87 = sub i32 %86, %85
  %88 = add i32 %87, -1825919449
  %89 = sub nsw i32 %83, %85
  %90 = load i32, i32* %4, align 4
  %91 = mul nsw i32 %90, 50
  %92 = sub i32 0, %91
  %93 = add i32 %88, %92
  %94 = sub nsw i32 %88, %91
  %95 = load i32, i32* %5, align 4
  %96 = mul nsw i32 %95, 20
  %97 = sub i32 0, %96
  %98 = add i32 %93, %97
  %99 = sub nsw i32 %93, %96
  %100 = srem i32 %98, 10
  %101 = add i32 %81, -1624234277
  %102 = sub i32 %101, %100
  %103 = sub i32 %102, -1624234277
  %104 = sub nsw i32 %81, %100
  %105 = sdiv i32 %103, 10
  store i32 %105, i32* %6, align 4
  %106 = load i32, i32* %2, align 4
  %107 = load i32, i32* %3, align 4
  %108 = mul nsw i32 %107, 100
  %109 = sub i32 0, %108
  %110 = add i32 %106, %109
  %111 = sub nsw i32 %106, %108
  %112 = load i32, i32* %4, align 4
  %113 = mul nsw i32 %112, 50
  %114 = sub i32 %110, 1942229464
  %115 = sub i32 %114, %113
  %116 = add i32 %115, 1942229464
  %117 = sub nsw i32 %110, %113
  %118 = load i32, i32* %5, align 4
  %119 = mul nsw i32 %118, 20
  %120 = sub i32 0, %119
  %121 = add i32 %116, %120
  %122 = sub nsw i32 %116, %119
  %123 = load i32, i32* %6, align 4
  %124 = mul nsw i32 %123, 10
  %125 = add i32 %121, 685392779
  %126 = sub i32 %125, %124
  %127 = sub i32 %126, 685392779
  %128 = sub nsw i32 %121, %124
  %129 = load i32, i32* %2, align 4
  %130 = load i32, i32* %3, align 4
  %131 = mul nsw i32 %130, 100
  %132 = add i32 %129, -1458565962
  %133 = sub i32 %132, %131
  %134 = sub i32 %133, -1458565962
  %135 = sub nsw i32 %129, %131
  %136 = load i32, i32* %4, align 4
  %137 = mul nsw i32 %136, 50
  %138 = add i32 %134, 320446991
  %139 = sub i32 %138, %137
  %140 = sub i32 %139, 320446991
  %141 = sub nsw i32 %134, %137
  %142 = load i32, i32* %5, align 4
  %143 = mul nsw i32 %142, 20
  %144 = sub i32 %140, 848530972
  %145 = sub i32 %144, %143
  %146 = add i32 %145, 848530972
  %147 = sub nsw i32 %140, %143
  %148 = load i32, i32* %6, align 4
  %149 = mul nsw i32 %148, 10
  %150 = sub i32 %146, -1124533697
  %151 = sub i32 %150, %149
  %152 = add i32 %151, -1124533697
  %153 = sub nsw i32 %146, %149
  %154 = srem i32 %152, 5
  %155 = sub i32 %127, -849307989
  %156 = sub i32 %155, %154
  %157 = add i32 %156, -849307989
  %158 = sub nsw i32 %127, %154
  %159 = sdiv i32 %157, 5
  store i32 %159, i32* %7, align 4
  %160 = load i32, i32* %2, align 4
  %161 = load i32, i32* %3, align 4
  %162 = mul nsw i32 %161, 100
  %163 = sub i32 %160, 572697179
  %164 = sub i32 %163, %162
  %165 = add i32 %164, 572697179
  %166 = sub nsw i32 %160, %162
  %167 = load i32, i32* %4, align 4
  %168 = mul nsw i32 %167, 50
  %169 = add i32 %165, 1249314303
  %170 = sub i32 %169, %168
  %171 = sub i32 %170, 1249314303
  %172 = sub nsw i32 %165, %168
  %173 = load i32, i32* %5, align 4
  %174 = mul nsw i32 %173, 20
  %175 = add i32 %171, 1401873231
  %176 = sub i32 %175, %174
  %177 = sub i32 %176, 1401873231
  %178 = sub nsw i32 %171, %174
  %179 = load i32, i32* %6, align 4
  %180 = mul nsw i32 %179, 10
  %181 = add i32 %177, 1086277048
  %182 = sub i32 %181, %180
  %183 = sub i32 %182, 1086277048
  %184 = sub nsw i32 %177, %180
  %185 = load i32, i32* %7, align 4
  %186 = mul nsw i32 %185, 5
  %187 = add i32 %183, 1949183329
  %188 = sub i32 %187, %186
  %189 = sub i32 %188, 1949183329
  %190 = sub nsw i32 %183, %186
  %191 = load i32, i32* %2, align 4
  %192 = load i32, i32* %3, align 4
  %193 = mul nsw i32 %192, 100
  %194 = sub i32 %191, -1056921983
  %195 = sub i32 %194, %193
  %196 = add i32 %195, -1056921983
  %197 = sub nsw i32 %191, %193
  %198 = load i32, i32* %4, align 4
  %199 = mul nsw i32 %198, 50
  %200 = sub i32 %196, -581376739
  %201 = sub i32 %200, %199
  %202 = add i32 %201, -581376739
  %203 = sub nsw i32 %196, %199
  %204 = load i32, i32* %5, align 4
  %205 = mul nsw i32 %204, 20
  %206 = sub i32 0, %205
  %207 = add i32 %202, %206
  %208 = sub nsw i32 %202, %205
  %209 = load i32, i32* %6, align 4
  %210 = mul nsw i32 %209, 10
  %211 = sub i32 0, %210
  %212 = add i32 %207, %211
  %213 = sub nsw i32 %207, %210
  %214 = load i32, i32* %7, align 4
  %215 = mul nsw i32 %214, 5
  %216 = add i32 %212, -1010788507
  %217 = sub i32 %216, %215
  %218 = sub i32 %217, -1010788507
  %219 = sub nsw i32 %212, %215
  %220 = srem i32 %218, 1
  %221 = sub i32 %189, 132580911
  %222 = sub i32 %221, %220
  %223 = add i32 %222, 132580911
  %224 = sub nsw i32 %189, %220
  %225 = sdiv i32 %223, 1
  store i32 %225, i32* %8, align 4
  %226 = load i32, i32* %3, align 4
  %227 = load i32, i32* %4, align 4
  %228 = load i32, i32* %5, align 4
  %229 = load i32, i32* %6, align 4
  %230 = load i32, i32* %7, align 4
  %231 = load i32, i32* %8, align 4
  %232 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i32 %226, i32 %227, i32 %228, i32 %229, i32 %230, i32 %231)
  ret i32 0
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
