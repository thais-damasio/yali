; ModuleID = 'source-C-CXX/65/396.c'
source_filename = "source-C-CXX/65/396.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [8 x i8] c"%ld%d%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Sun.\0A\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"Mon.\0A\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"Tue.\0A\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"Wed.\0A\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Thu.\0A\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"Fri.\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"Sat.\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define void @main() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i64* %1, i32* %2, i32* %3)
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %51

; <label>:8:                                      ; preds = %0
  %9 = load i64, i64* %1, align 8
  %10 = sub i64 %9, -6747477028362103286
  %11 = sub i64 %10, 1
  %12 = add i64 %11, -6747477028362103286
  %13 = sub nsw i64 %9, 1
  %14 = srem i64 %12, 7
  %15 = mul nsw i64 365, %14
  %16 = load i64, i64* %1, align 8
  %17 = sub i64 0, 1
  %18 = add i64 %16, %17
  %19 = sub nsw i64 %16, 1
  %20 = sdiv i64 %18, 4
  %21 = load i64, i64* %1, align 8
  %22 = add i64 %21, 2568463076735724219
  %23 = sub i64 %22, 1
  %24 = sub i64 %23, 2568463076735724219
  %25 = sub nsw i64 %21, 1
  %26 = sdiv i64 %24, 400
  %27 = add i64 %20, -5175442962164108029
  %28 = add i64 %27, %26
  %29 = sub i64 %28, -5175442962164108029
  %30 = add nsw i64 %20, %26
  %31 = load i64, i64* %1, align 8
  %32 = add i64 %31, 6657952444624104050
  %33 = sub i64 %32, 1
  %34 = sub i64 %33, 6657952444624104050
  %35 = sub nsw i64 %31, 1
  %36 = sdiv i64 %34, 100
  %37 = add i64 %29, 3151727829863683076
  %38 = sub i64 %37, %36
  %39 = sub i64 %38, 3151727829863683076
  %40 = sub nsw i64 %29, %36
  %41 = sub i64 0, %39
  %42 = sub i64 %15, %41
  %43 = add nsw i64 %15, %39
  %44 = load i32, i32* %3, align 4
  %45 = sext i32 %44 to i64
  %46 = sub i64 0, %42
  %47 = sub i64 0, %45
  %48 = add i64 %46, %47
  %49 = sub i64 0, %48
  %50 = add nsw i64 %42, %45
  store i64 %49, i64* %4, align 8
  br label %1129

; <label>:51:                                     ; preds = %0
  %52 = load i32, i32* %2, align 4
  %53 = icmp eq i32 %52, 2
  br i1 %53, label %54, label %100

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %1, align 8
  %56 = add i64 %55, 8920371890444965808
  %57 = sub i64 %56, 1
  %58 = sub i64 %57, 8920371890444965808
  %59 = sub nsw i64 %55, 1
  %60 = srem i64 %58, 7
  %61 = mul nsw i64 365, %60
  %62 = load i64, i64* %1, align 8
  %63 = sub i64 0, 1
  %64 = add i64 %62, %63
  %65 = sub nsw i64 %62, 1
  %66 = sdiv i64 %64, 4
  %67 = load i64, i64* %1, align 8
  %68 = sub i64 %67, 2520725727267605820
  %69 = sub i64 %68, 1
  %70 = add i64 %69, 2520725727267605820
  %71 = sub nsw i64 %67, 1
  %72 = sdiv i64 %70, 400
  %73 = sub i64 0, %72
  %74 = sub i64 %66, %73
  %75 = add nsw i64 %66, %72
  %76 = load i64, i64* %1, align 8
  %77 = sub i64 %76, -9078114432720041042
  %78 = sub i64 %77, 1
  %79 = add i64 %78, -9078114432720041042
  %80 = sub nsw i64 %76, 1
  %81 = sdiv i64 %79, 100
  %82 = sub i64 %74, 122303029018271791
  %83 = sub i64 %82, %81
  %84 = add i64 %83, 122303029018271791
  %85 = sub nsw i64 %74, %81
  %86 = sub i64 0, %84
  %87 = sub i64 %61, %86
  %88 = add nsw i64 %61, %84
  %89 = add i64 %87, -3965086461969102992
  %90 = add i64 %89, 31
  %91 = sub i64 %90, -3965086461969102992
  %92 = add nsw i64 %87, 31
  %93 = load i32, i32* %3, align 4
  %94 = sext i32 %93 to i64
  %95 = sub i64 0, %91
  %96 = sub i64 0, %94
  %97 = add i64 %95, %96
  %98 = sub i64 0, %97
  %99 = add nsw i64 %91, %94
  store i64 %98, i64* %4, align 8
  br label %1128

; <label>:100:                                    ; preds = %51
  %101 = load i64, i64* %1, align 8
  %102 = srem i64 %101, 400
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %112, label %104

; <label>:104:                                    ; preds = %100
  %105 = load i64, i64* %1, align 8
  %106 = srem i64 %105, 4
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %615

; <label>:108:                                    ; preds = %104
  %109 = load i64, i64* %1, align 8
  %110 = srem i64 %109, 100
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %112, label %615

; <label>:112:                                    ; preds = %108, %100
  %113 = load i32, i32* %2, align 4
  %114 = icmp eq i32 %113, 3
  br i1 %114, label %115, label %162

; <label>:115:                                    ; preds = %112
  %116 = load i64, i64* %1, align 8
  %117 = sub i64 %116, -6190654592903980852
  %118 = sub i64 %117, 1
  %119 = add i64 %118, -6190654592903980852
  %120 = sub nsw i64 %116, 1
  %121 = srem i64 %119, 7
  %122 = mul nsw i64 365, %121
  %123 = load i64, i64* %1, align 8
  %124 = sub i64 0, 1
  %125 = add i64 %123, %124
  %126 = sub nsw i64 %123, 1
  %127 = sdiv i64 %125, 4
  %128 = load i64, i64* %1, align 8
  %129 = sub i64 0, 1
  %130 = add i64 %128, %129
  %131 = sub nsw i64 %128, 1
  %132 = sdiv i64 %130, 400
  %133 = add i64 %127, -4957587892347076104
  %134 = add i64 %133, %132
  %135 = sub i64 %134, -4957587892347076104
  %136 = add nsw i64 %127, %132
  %137 = load i64, i64* %1, align 8
  %138 = sub i64 0, 1
  %139 = add i64 %137, %138
  %140 = sub nsw i64 %137, 1
  %141 = sdiv i64 %139, 100
  %142 = sub i64 0, %141
  %143 = add i64 %135, %142
  %144 = sub nsw i64 %135, %141
  %145 = sub i64 0, %122
  %146 = sub i64 0, %143
  %147 = add i64 %145, %146
  %148 = sub i64 0, %147
  %149 = add nsw i64 %122, %143
  %150 = sub i64 0, %148
  %151 = sub i64 0, 60
  %152 = add i64 %150, %151
  %153 = sub i64 0, %152
  %154 = add nsw i64 %148, 60
  %155 = load i32, i32* %3, align 4
  %156 = sext i32 %155 to i64
  %157 = sub i64 0, %153
  %158 = sub i64 0, %156
  %159 = add i64 %157, %158
  %160 = sub i64 0, %159
  %161 = add nsw i64 %153, %156
  store i64 %160, i64* %4, align 8
  br label %614

; <label>:162:                                    ; preds = %112
  %163 = load i32, i32* %2, align 4
  %164 = icmp eq i32 %163, 4
  br i1 %164, label %165, label %213

; <label>:165:                                    ; preds = %162
  %166 = load i64, i64* %1, align 8
  %167 = sub i64 %166, -5550763401905728555
  %168 = sub i64 %167, 1
  %169 = add i64 %168, -5550763401905728555
  %170 = sub nsw i64 %166, 1
  %171 = srem i64 %169, 7
  %172 = mul nsw i64 365, %171
  %173 = load i64, i64* %1, align 8
  %174 = sub i64 0, 1
  %175 = add i64 %173, %174
  %176 = sub nsw i64 %173, 1
  %177 = sdiv i64 %175, 4
  %178 = load i64, i64* %1, align 8
  %179 = sub i64 %178, -4827623689752297535
  %180 = sub i64 %179, 1
  %181 = add i64 %180, -4827623689752297535
  %182 = sub nsw i64 %178, 1
  %183 = sdiv i64 %181, 400
  %184 = sub i64 %177, 2320300130962580988
  %185 = add i64 %184, %183
  %186 = add i64 %185, 2320300130962580988
  %187 = add nsw i64 %177, %183
  %188 = load i64, i64* %1, align 8
  %189 = sub i64 %188, 1905410653023071848
  %190 = sub i64 %189, 1
  %191 = add i64 %190, 1905410653023071848
  %192 = sub nsw i64 %188, 1
  %193 = sdiv i64 %191, 100
  %194 = sub i64 0, %193
  %195 = add i64 %186, %194
  %196 = sub nsw i64 %186, %193
  %197 = sub i64 0, %172
  %198 = sub i64 0, %195
  %199 = add i64 %197, %198
  %200 = sub i64 0, %199
  %201 = add nsw i64 %172, %195
  %202 = sub i64 0, %200
  %203 = sub i64 0, 91
  %204 = add i64 %202, %203
  %205 = sub i64 0, %204
  %206 = add nsw i64 %200, 91
  %207 = load i32, i32* %3, align 4
  %208 = sext i32 %207 to i64
  %209 = sub i64 %205, 8283243031201128580
  %210 = add i64 %209, %208
  %211 = add i64 %210, 8283243031201128580
  %212 = add nsw i64 %205, %208
  store i64 %211, i64* %4, align 8
  br label %613

; <label>:213:                                    ; preds = %162
  %214 = load i32, i32* %2, align 4
  %215 = icmp eq i32 %214, 5
  br i1 %215, label %216, label %263

; <label>:216:                                    ; preds = %213
  %217 = load i64, i64* %1, align 8
  %218 = sub i64 0, 1
  %219 = add i64 %217, %218
  %220 = sub nsw i64 %217, 1
  %221 = srem i64 %219, 7
  %222 = mul nsw i64 365, %221
  %223 = load i64, i64* %1, align 8
  %224 = add i64 %223, -5695907228042942576
  %225 = sub i64 %224, 1
  %226 = sub i64 %225, -5695907228042942576
  %227 = sub nsw i64 %223, 1
  %228 = sdiv i64 %226, 4
  %229 = load i64, i64* %1, align 8
  %230 = add i64 %229, 1851396129762934696
  %231 = sub i64 %230, 1
  %232 = sub i64 %231, 1851396129762934696
  %233 = sub nsw i64 %229, 1
  %234 = sdiv i64 %232, 400
  %235 = sub i64 0, %228
  %236 = sub i64 0, %234
  %237 = add i64 %235, %236
  %238 = sub i64 0, %237
  %239 = add nsw i64 %228, %234
  %240 = load i64, i64* %1, align 8
  %241 = sub i64 %240, 7638682773118441120
  %242 = sub i64 %241, 1
  %243 = add i64 %242, 7638682773118441120
  %244 = sub nsw i64 %240, 1
  %245 = sdiv i64 %243, 100
  %246 = add i64 %238, -6314722684394324922
  %247 = sub i64 %246, %245
  %248 = sub i64 %247, -6314722684394324922
  %249 = sub nsw i64 %238, %245
  %250 = sub i64 0, %248
  %251 = sub i64 %222, %250
  %252 = add nsw i64 %222, %248
  %253 = sub i64 0, %251
  %254 = sub i64 0, 121
  %255 = add i64 %253, %254
  %256 = sub i64 0, %255
  %257 = add nsw i64 %251, 121
  %258 = load i32, i32* %3, align 4
  %259 = sext i32 %258 to i64
  %260 = sub i64 0, %259
  %261 = sub i64 %256, %260
  %262 = add nsw i64 %256, %259
  store i64 %261, i64* %4, align 8
  br label %612

; <label>:263:                                    ; preds = %213
  %264 = load i32, i32* %2, align 4
  %265 = icmp eq i32 %264, 6
  br i1 %265, label %266, label %310

; <label>:266:                                    ; preds = %263
  %267 = load i64, i64* %1, align 8
  %268 = add i64 %267, 3156773366889601025
  %269 = sub i64 %268, 1
  %270 = sub i64 %269, 3156773366889601025
  %271 = sub nsw i64 %267, 1
  %272 = srem i64 %270, 7
  %273 = mul nsw i64 365, %272
  %274 = load i64, i64* %1, align 8
  %275 = sub i64 0, 1
  %276 = add i64 %274, %275
  %277 = sub nsw i64 %274, 1
  %278 = sdiv i64 %276, 4
  %279 = load i64, i64* %1, align 8
  %280 = sub i64 %279, -7888558243407898928
  %281 = sub i64 %280, 1
  %282 = add i64 %281, -7888558243407898928
  %283 = sub nsw i64 %279, 1
  %284 = sdiv i64 %282, 400
  %285 = sub i64 0, %284
  %286 = sub i64 %278, %285
  %287 = add nsw i64 %278, %284
  %288 = load i64, i64* %1, align 8
  %289 = add i64 %288, 2267975102625474899
  %290 = sub i64 %289, 1
  %291 = sub i64 %290, 2267975102625474899
  %292 = sub nsw i64 %288, 1
  %293 = sdiv i64 %291, 100
  %294 = add i64 %286, -6491251360412082164
  %295 = sub i64 %294, %293
  %296 = sub i64 %295, -6491251360412082164
  %297 = sub nsw i64 %286, %293
  %298 = sub i64 0, %296
  %299 = sub i64 %273, %298
  %300 = add nsw i64 %273, %296
  %301 = sub i64 0, 152
  %302 = sub i64 %299, %301
  %303 = add nsw i64 %299, 152
  %304 = load i32, i32* %3, align 4
  %305 = sext i32 %304 to i64
  %306 = sub i64 %302, -1273155224053174254
  %307 = add i64 %306, %305
  %308 = add i64 %307, -1273155224053174254
  %309 = add nsw i64 %302, %305
  store i64 %308, i64* %4, align 8
  br label %611

; <label>:310:                                    ; preds = %263
  %311 = load i32, i32* %2, align 4
  %312 = icmp eq i32 %311, 7
  br i1 %312, label %313, label %361

; <label>:313:                                    ; preds = %310
  %314 = load i64, i64* %1, align 8
  %315 = add i64 %314, -7751535460481126098
  %316 = sub i64 %315, 1
  %317 = sub i64 %316, -7751535460481126098
  %318 = sub nsw i64 %314, 1
  %319 = srem i64 %317, 7
  %320 = mul nsw i64 365, %319
  %321 = load i64, i64* %1, align 8
  %322 = add i64 %321, 692877347219341297
  %323 = sub i64 %322, 1
  %324 = sub i64 %323, 692877347219341297
  %325 = sub nsw i64 %321, 1
  %326 = sdiv i64 %324, 4
  %327 = load i64, i64* %1, align 8
  %328 = add i64 %327, 5709066303764237667
  %329 = sub i64 %328, 1
  %330 = sub i64 %329, 5709066303764237667
  %331 = sub nsw i64 %327, 1
  %332 = sdiv i64 %330, 400
  %333 = sub i64 0, %332
  %334 = sub i64 %326, %333
  %335 = add nsw i64 %326, %332
  %336 = load i64, i64* %1, align 8
  %337 = sub i64 %336, 7453953323638070329
  %338 = sub i64 %337, 1
  %339 = add i64 %338, 7453953323638070329
  %340 = sub nsw i64 %336, 1
  %341 = sdiv i64 %339, 100
  %342 = add i64 %334, -686535249134681956
  %343 = sub i64 %342, %341
  %344 = sub i64 %343, -686535249134681956
  %345 = sub nsw i64 %334, %341
  %346 = add i64 %320, -2753534909931324236
  %347 = add i64 %346, %344
  %348 = sub i64 %347, -2753534909931324236
  %349 = add nsw i64 %320, %344
  %350 = sub i64 %348, -3836068456412355278
  %351 = add i64 %350, 182
  %352 = add i64 %351, -3836068456412355278
  %353 = add nsw i64 %348, 182
  %354 = load i32, i32* %3, align 4
  %355 = sext i32 %354 to i64
  %356 = sub i64 0, %352
  %357 = sub i64 0, %355
  %358 = add i64 %356, %357
  %359 = sub i64 0, %358
  %360 = add nsw i64 %352, %355
  store i64 %359, i64* %4, align 8
  br label %610

; <label>:361:                                    ; preds = %310
  %362 = load i32, i32* %2, align 4
  %363 = icmp eq i32 %362, 8
  br i1 %363, label %364, label %408

; <label>:364:                                    ; preds = %361
  %365 = load i64, i64* %1, align 8
  %366 = add i64 %365, 9125147797283554791
  %367 = sub i64 %366, 1
  %368 = sub i64 %367, 9125147797283554791
  %369 = sub nsw i64 %365, 1
  %370 = srem i64 %368, 7
  %371 = mul nsw i64 365, %370
  %372 = load i64, i64* %1, align 8
  %373 = sub i64 0, 1
  %374 = add i64 %372, %373
  %375 = sub nsw i64 %372, 1
  %376 = sdiv i64 %374, 4
  %377 = load i64, i64* %1, align 8
  %378 = add i64 %377, 2116506466988350477
  %379 = sub i64 %378, 1
  %380 = sub i64 %379, 2116506466988350477
  %381 = sub nsw i64 %377, 1
  %382 = sdiv i64 %380, 400
  %383 = sub i64 0, %382
  %384 = sub i64 %376, %383
  %385 = add nsw i64 %376, %382
  %386 = load i64, i64* %1, align 8
  %387 = sub i64 0, 1
  %388 = add i64 %386, %387
  %389 = sub nsw i64 %386, 1
  %390 = sdiv i64 %388, 100
  %391 = sub i64 0, %390
  %392 = add i64 %384, %391
  %393 = sub nsw i64 %384, %390
  %394 = sub i64 %371, -4250000305965871646
  %395 = add i64 %394, %392
  %396 = add i64 %395, -4250000305965871646
  %397 = add nsw i64 %371, %392
  %398 = sub i64 %396, 5293528740174154162
  %399 = add i64 %398, 213
  %400 = add i64 %399, 5293528740174154162
  %401 = add nsw i64 %396, 213
  %402 = load i32, i32* %3, align 4
  %403 = sext i32 %402 to i64
  %404 = sub i64 %400, -8890882143930826697
  %405 = add i64 %404, %403
  %406 = add i64 %405, -8890882143930826697
  %407 = add nsw i64 %400, %403
  store i64 %406, i64* %4, align 8
  br label %609

; <label>:408:                                    ; preds = %361
  %409 = load i32, i32* %2, align 4
  %410 = icmp eq i32 %409, 9
  br i1 %410, label %411, label %455

; <label>:411:                                    ; preds = %408
  %412 = load i64, i64* %1, align 8
  %413 = add i64 %412, -2057587520559617676
  %414 = sub i64 %413, 1
  %415 = sub i64 %414, -2057587520559617676
  %416 = sub nsw i64 %412, 1
  %417 = srem i64 %415, 7
  %418 = mul nsw i64 365, %417
  %419 = load i64, i64* %1, align 8
  %420 = sub i64 0, 1
  %421 = add i64 %419, %420
  %422 = sub nsw i64 %419, 1
  %423 = sdiv i64 %421, 4
  %424 = load i64, i64* %1, align 8
  %425 = add i64 %424, -7914175076063481981
  %426 = sub i64 %425, 1
  %427 = sub i64 %426, -7914175076063481981
  %428 = sub nsw i64 %424, 1
  %429 = sdiv i64 %427, 400
  %430 = sub i64 %423, 3879140449800273727
  %431 = add i64 %430, %429
  %432 = add i64 %431, 3879140449800273727
  %433 = add nsw i64 %423, %429
  %434 = load i64, i64* %1, align 8
  %435 = add i64 %434, -5844395295696404916
  %436 = sub i64 %435, 1
  %437 = sub i64 %436, -5844395295696404916
  %438 = sub nsw i64 %434, 1
  %439 = sdiv i64 %437, 100
  %440 = sub i64 0, %439
  %441 = add i64 %432, %440
  %442 = sub nsw i64 %432, %439
  %443 = sub i64 0, %441
  %444 = sub i64 %418, %443
  %445 = add nsw i64 %418, %441
  %446 = add i64 %444, -2740825498190314415
  %447 = add i64 %446, 244
  %448 = sub i64 %447, -2740825498190314415
  %449 = add nsw i64 %444, 244
  %450 = load i32, i32* %3, align 4
  %451 = sext i32 %450 to i64
  %452 = sub i64 0, %451
  %453 = sub i64 %448, %452
  %454 = add nsw i64 %448, %451
  store i64 %453, i64* %4, align 8
  br label %608

; <label>:455:                                    ; preds = %408
  %456 = load i32, i32* %2, align 4
  %457 = icmp eq i32 %456, 10
  br i1 %457, label %458, label %504

; <label>:458:                                    ; preds = %455
  %459 = load i64, i64* %1, align 8
  %460 = sub i64 0, 1
  %461 = add i64 %459, %460
  %462 = sub nsw i64 %459, 1
  %463 = srem i64 %461, 7
  %464 = mul nsw i64 365, %463
  %465 = load i64, i64* %1, align 8
  %466 = sub i64 0, 1
  %467 = add i64 %465, %466
  %468 = sub nsw i64 %465, 1
  %469 = sdiv i64 %467, 4
  %470 = load i64, i64* %1, align 8
  %471 = add i64 %470, 7157324244291693027
  %472 = sub i64 %471, 1
  %473 = sub i64 %472, 7157324244291693027
  %474 = sub nsw i64 %470, 1
  %475 = sdiv i64 %473, 400
  %476 = sub i64 %469, -1094160422092932640
  %477 = add i64 %476, %475
  %478 = add i64 %477, -1094160422092932640
  %479 = add nsw i64 %469, %475
  %480 = load i64, i64* %1, align 8
  %481 = sub i64 0, 1
  %482 = add i64 %480, %481
  %483 = sub nsw i64 %480, 1
  %484 = sdiv i64 %482, 100
  %485 = sub i64 %478, 7649096536489670063
  %486 = sub i64 %485, %484
  %487 = add i64 %486, 7649096536489670063
  %488 = sub nsw i64 %478, %484
  %489 = sub i64 0, %464
  %490 = sub i64 0, %487
  %491 = add i64 %489, %490
  %492 = sub i64 0, %491
  %493 = add nsw i64 %464, %487
  %494 = sub i64 %492, 2103710734448332485
  %495 = add i64 %494, 274
  %496 = add i64 %495, 2103710734448332485
  %497 = add nsw i64 %492, 274
  %498 = load i32, i32* %3, align 4
  %499 = sext i32 %498 to i64
  %500 = sub i64 %496, -4095730593226561293
  %501 = add i64 %500, %499
  %502 = add i64 %501, -4095730593226561293
  %503 = add nsw i64 %496, %499
  store i64 %502, i64* %4, align 8
  br label %607

; <label>:504:                                    ; preds = %455
  %505 = load i32, i32* %2, align 4
  %506 = icmp eq i32 %505, 11
  br i1 %506, label %507, label %556

; <label>:507:                                    ; preds = %504
  %508 = load i64, i64* %1, align 8
  %509 = sub i64 %508, 137927987476733825
  %510 = sub i64 %509, 1
  %511 = add i64 %510, 137927987476733825
  %512 = sub nsw i64 %508, 1
  %513 = srem i64 %511, 7
  %514 = mul nsw i64 365, %513
  %515 = load i64, i64* %1, align 8
  %516 = add i64 %515, -4012190115209743858
  %517 = sub i64 %516, 1
  %518 = sub i64 %517, -4012190115209743858
  %519 = sub nsw i64 %515, 1
  %520 = sdiv i64 %518, 4
  %521 = load i64, i64* %1, align 8
  %522 = sub i64 0, 1
  %523 = add i64 %521, %522
  %524 = sub nsw i64 %521, 1
  %525 = sdiv i64 %523, 400
  %526 = add i64 %520, -7743385166028100488
  %527 = add i64 %526, %525
  %528 = sub i64 %527, -7743385166028100488
  %529 = add nsw i64 %520, %525
  %530 = load i64, i64* %1, align 8
  %531 = sub i64 0, 1
  %532 = add i64 %530, %531
  %533 = sub nsw i64 %530, 1
  %534 = sdiv i64 %532, 100
  %535 = add i64 %528, 4780291155458491798
  %536 = sub i64 %535, %534
  %537 = sub i64 %536, 4780291155458491798
  %538 = sub nsw i64 %528, %534
  %539 = sub i64 0, %514
  %540 = sub i64 0, %537
  %541 = add i64 %539, %540
  %542 = sub i64 0, %541
  %543 = add nsw i64 %514, %537
  %544 = sub i64 0, %542
  %545 = sub i64 0, 305
  %546 = add i64 %544, %545
  %547 = sub i64 0, %546
  %548 = add nsw i64 %542, 305
  %549 = load i32, i32* %3, align 4
  %550 = sext i32 %549 to i64
  %551 = sub i64 0, %547
  %552 = sub i64 0, %550
  %553 = add i64 %551, %552
  %554 = sub i64 0, %553
  %555 = add nsw i64 %547, %550
  store i64 %554, i64* %4, align 8
  br label %606

; <label>:556:                                    ; preds = %504
  %557 = load i32, i32* %2, align 4
  %558 = icmp eq i32 %557, 12
  br i1 %558, label %559, label %605

; <label>:559:                                    ; preds = %556
  %560 = load i64, i64* %1, align 8
  %561 = sub i64 %560, 5839434771921978606
  %562 = sub i64 %561, 1
  %563 = add i64 %562, 5839434771921978606
  %564 = sub nsw i64 %560, 1
  %565 = srem i64 %563, 7
  %566 = mul nsw i64 365, %565
  %567 = load i64, i64* %1, align 8
  %568 = add i64 %567, -9178045297388003668
  %569 = sub i64 %568, 1
  %570 = sub i64 %569, -9178045297388003668
  %571 = sub nsw i64 %567, 1
  %572 = sdiv i64 %570, 4
  %573 = load i64, i64* %1, align 8
  %574 = sub i64 %573, -4075691594516264157
  %575 = sub i64 %574, 1
  %576 = add i64 %575, -4075691594516264157
  %577 = sub nsw i64 %573, 1
  %578 = sdiv i64 %576, 400
  %579 = add i64 %572, -8772916731230876754
  %580 = add i64 %579, %578
  %581 = sub i64 %580, -8772916731230876754
  %582 = add nsw i64 %572, %578
  %583 = load i64, i64* %1, align 8
  %584 = sub i64 0, 1
  %585 = add i64 %583, %584
  %586 = sub nsw i64 %583, 1
  %587 = sdiv i64 %585, 100
  %588 = sub i64 %581, -878551660348550217
  %589 = sub i64 %588, %587
  %590 = add i64 %589, -878551660348550217
  %591 = sub nsw i64 %581, %587
  %592 = add i64 %566, 492041917370497189
  %593 = add i64 %592, %590
  %594 = sub i64 %593, 492041917370497189
  %595 = add nsw i64 %566, %590
  %596 = sub i64 0, 335
  %597 = sub i64 %594, %596
  %598 = add nsw i64 %594, 335
  %599 = load i32, i32* %3, align 4
  %600 = sext i32 %599 to i64
  %601 = sub i64 %597, 489476029857540348
  %602 = add i64 %601, %600
  %603 = add i64 %602, 489476029857540348
  %604 = add nsw i64 %597, %600
  store i64 %603, i64* %4, align 8
  br label %605

; <label>:605:                                    ; preds = %559, %556
  br label %606

; <label>:606:                                    ; preds = %605, %507
  br label %607

; <label>:607:                                    ; preds = %606, %458
  br label %608

; <label>:608:                                    ; preds = %607, %411
  br label %609

; <label>:609:                                    ; preds = %608, %364
  br label %610

; <label>:610:                                    ; preds = %609, %313
  br label %611

; <label>:611:                                    ; preds = %610, %266
  br label %612

; <label>:612:                                    ; preds = %611, %216
  br label %613

; <label>:613:                                    ; preds = %612, %165
  br label %614

; <label>:614:                                    ; preds = %613, %115
  br label %1127

; <label>:615:                                    ; preds = %108, %104
  %616 = load i32, i32* %2, align 4
  %617 = icmp eq i32 %616, 3
  br i1 %617, label %618, label %666

; <label>:618:                                    ; preds = %615
  %619 = load i64, i64* %1, align 8
  %620 = sub i64 %619, -5955998301352644371
  %621 = sub i64 %620, 1
  %622 = add i64 %621, -5955998301352644371
  %623 = sub nsw i64 %619, 1
  %624 = srem i64 %622, 7
  %625 = mul nsw i64 365, %624
  %626 = load i64, i64* %1, align 8
  %627 = sub i64 %626, 6745276396334149070
  %628 = sub i64 %627, 1
  %629 = add i64 %628, 6745276396334149070
  %630 = sub nsw i64 %626, 1
  %631 = sdiv i64 %629, 4
  %632 = load i64, i64* %1, align 8
  %633 = sub i64 0, 1
  %634 = add i64 %632, %633
  %635 = sub nsw i64 %632, 1
  %636 = sdiv i64 %634, 400
  %637 = sub i64 0, %631
  %638 = sub i64 0, %636
  %639 = add i64 %637, %638
  %640 = sub i64 0, %639
  %641 = add nsw i64 %631, %636
  %642 = load i64, i64* %1, align 8
  %643 = sub i64 0, 1
  %644 = add i64 %642, %643
  %645 = sub nsw i64 %642, 1
  %646 = sdiv i64 %644, 100
  %647 = sub i64 %640, 1079824458880129168
  %648 = sub i64 %647, %646
  %649 = add i64 %648, 1079824458880129168
  %650 = sub nsw i64 %640, %646
  %651 = add i64 %625, 2621921437443078909
  %652 = add i64 %651, %649
  %653 = sub i64 %652, 2621921437443078909
  %654 = add nsw i64 %625, %649
  %655 = sub i64 0, %653
  %656 = sub i64 0, 59
  %657 = add i64 %655, %656
  %658 = sub i64 0, %657
  %659 = add nsw i64 %653, 59
  %660 = load i32, i32* %3, align 4
  %661 = sext i32 %660 to i64
  %662 = sub i64 %658, 811846431851908011
  %663 = add i64 %662, %661
  %664 = add i64 %663, 811846431851908011
  %665 = add nsw i64 %658, %661
  store i64 %664, i64* %4, align 8
  br label %1126

; <label>:666:                                    ; preds = %615
  %667 = load i32, i32* %2, align 4
  %668 = icmp eq i32 %667, 4
  br i1 %668, label %669, label %716

; <label>:669:                                    ; preds = %666
  %670 = load i64, i64* %1, align 8
  %671 = sub i64 %670, 4625715071971921959
  %672 = sub i64 %671, 1
  %673 = add i64 %672, 4625715071971921959
  %674 = sub nsw i64 %670, 1
  %675 = srem i64 %673, 7
  %676 = mul nsw i64 365, %675
  %677 = load i64, i64* %1, align 8
  %678 = add i64 %677, 7303454318030223311
  %679 = sub i64 %678, 1
  %680 = sub i64 %679, 7303454318030223311
  %681 = sub nsw i64 %677, 1
  %682 = sdiv i64 %680, 4
  %683 = load i64, i64* %1, align 8
  %684 = sub i64 %683, 6758298251610991869
  %685 = sub i64 %684, 1
  %686 = add i64 %685, 6758298251610991869
  %687 = sub nsw i64 %683, 1
  %688 = sdiv i64 %686, 400
  %689 = sub i64 %682, 548549709615034283
  %690 = add i64 %689, %688
  %691 = add i64 %690, 548549709615034283
  %692 = add nsw i64 %682, %688
  %693 = load i64, i64* %1, align 8
  %694 = sub i64 %693, -6852241056436013789
  %695 = sub i64 %694, 1
  %696 = add i64 %695, -6852241056436013789
  %697 = sub nsw i64 %693, 1
  %698 = sdiv i64 %696, 100
  %699 = add i64 %691, 3050828791521218893
  %700 = sub i64 %699, %698
  %701 = sub i64 %700, 3050828791521218893
  %702 = sub nsw i64 %691, %698
  %703 = sub i64 0, %676
  %704 = sub i64 0, %701
  %705 = add i64 %703, %704
  %706 = sub i64 0, %705
  %707 = add nsw i64 %676, %701
  %708 = sub i64 0, 90
  %709 = sub i64 %706, %708
  %710 = add nsw i64 %706, 90
  %711 = load i32, i32* %3, align 4
  %712 = sext i32 %711 to i64
  %713 = sub i64 0, %712
  %714 = sub i64 %709, %713
  %715 = add nsw i64 %709, %712
  store i64 %714, i64* %4, align 8
  br label %1125

; <label>:716:                                    ; preds = %666
  %717 = load i32, i32* %2, align 4
  %718 = icmp eq i32 %717, 5
  br i1 %718, label %719, label %764

; <label>:719:                                    ; preds = %716
  %720 = load i64, i64* %1, align 8
  %721 = sub i64 %720, 2008516005843307467
  %722 = sub i64 %721, 1
  %723 = add i64 %722, 2008516005843307467
  %724 = sub nsw i64 %720, 1
  %725 = srem i64 %723, 7
  %726 = mul nsw i64 365, %725
  %727 = load i64, i64* %1, align 8
  %728 = sub i64 0, 1
  %729 = add i64 %727, %728
  %730 = sub nsw i64 %727, 1
  %731 = sdiv i64 %729, 4
  %732 = load i64, i64* %1, align 8
  %733 = add i64 %732, 8548470137880047478
  %734 = sub i64 %733, 1
  %735 = sub i64 %734, 8548470137880047478
  %736 = sub nsw i64 %732, 1
  %737 = sdiv i64 %735, 400
  %738 = add i64 %731, 2401465399316412960
  %739 = add i64 %738, %737
  %740 = sub i64 %739, 2401465399316412960
  %741 = add nsw i64 %731, %737
  %742 = load i64, i64* %1, align 8
  %743 = sub i64 0, 1
  %744 = add i64 %742, %743
  %745 = sub nsw i64 %742, 1
  %746 = sdiv i64 %744, 100
  %747 = sub i64 %740, -3081051927496596969
  %748 = sub i64 %747, %746
  %749 = add i64 %748, -3081051927496596969
  %750 = sub nsw i64 %740, %746
  %751 = sub i64 %726, 5087251097461413130
  %752 = add i64 %751, %749
  %753 = add i64 %752, 5087251097461413130
  %754 = add nsw i64 %726, %749
  %755 = add i64 %753, 3022810746172375080
  %756 = add i64 %755, 120
  %757 = sub i64 %756, 3022810746172375080
  %758 = add nsw i64 %753, 120
  %759 = load i32, i32* %3, align 4
  %760 = sext i32 %759 to i64
  %761 = sub i64 0, %760
  %762 = sub i64 %757, %761
  %763 = add nsw i64 %757, %760
  store i64 %762, i64* %4, align 8
  br label %1124

; <label>:764:                                    ; preds = %716
  %765 = load i32, i32* %2, align 4
  %766 = icmp eq i32 %765, 6
  br i1 %766, label %767, label %813

; <label>:767:                                    ; preds = %764
  %768 = load i64, i64* %1, align 8
  %769 = add i64 %768, -7461325347530112771
  %770 = sub i64 %769, 1
  %771 = sub i64 %770, -7461325347530112771
  %772 = sub nsw i64 %768, 1
  %773 = srem i64 %771, 7
  %774 = mul nsw i64 365, %773
  %775 = load i64, i64* %1, align 8
  %776 = add i64 %775, -6714938483600844437
  %777 = sub i64 %776, 1
  %778 = sub i64 %777, -6714938483600844437
  %779 = sub nsw i64 %775, 1
  %780 = sdiv i64 %778, 4
  %781 = load i64, i64* %1, align 8
  %782 = sub i64 0, 1
  %783 = add i64 %781, %782
  %784 = sub nsw i64 %781, 1
  %785 = sdiv i64 %783, 400
  %786 = sub i64 0, %785
  %787 = sub i64 %780, %786
  %788 = add nsw i64 %780, %785
  %789 = load i64, i64* %1, align 8
  %790 = add i64 %789, -8152059097794536567
  %791 = sub i64 %790, 1
  %792 = sub i64 %791, -8152059097794536567
  %793 = sub nsw i64 %789, 1
  %794 = sdiv i64 %792, 100
  %795 = sub i64 %787, -2062747923497377365
  %796 = sub i64 %795, %794
  %797 = add i64 %796, -2062747923497377365
  %798 = sub nsw i64 %787, %794
  %799 = sub i64 0, %797
  %800 = sub i64 %774, %799
  %801 = add nsw i64 %774, %797
  %802 = sub i64 0, %800
  %803 = sub i64 0, 151
  %804 = add i64 %802, %803
  %805 = sub i64 0, %804
  %806 = add nsw i64 %800, 151
  %807 = load i32, i32* %3, align 4
  %808 = sext i32 %807 to i64
  %809 = sub i64 %805, -739264997984893039
  %810 = add i64 %809, %808
  %811 = add i64 %810, -739264997984893039
  %812 = add nsw i64 %805, %808
  store i64 %811, i64* %4, align 8
  br label %1123

; <label>:813:                                    ; preds = %764
  %814 = load i32, i32* %2, align 4
  %815 = icmp eq i32 %814, 7
  br i1 %815, label %816, label %860

; <label>:816:                                    ; preds = %813
  %817 = load i64, i64* %1, align 8
  %818 = sub i64 0, 1
  %819 = add i64 %817, %818
  %820 = sub nsw i64 %817, 1
  %821 = srem i64 %819, 7
  %822 = mul nsw i64 365, %821
  %823 = load i64, i64* %1, align 8
  %824 = add i64 %823, -8294916881623373662
  %825 = sub i64 %824, 1
  %826 = sub i64 %825, -8294916881623373662
  %827 = sub nsw i64 %823, 1
  %828 = sdiv i64 %826, 4
  %829 = load i64, i64* %1, align 8
  %830 = sub i64 %829, 7748956147447287911
  %831 = sub i64 %830, 1
  %832 = add i64 %831, 7748956147447287911
  %833 = sub nsw i64 %829, 1
  %834 = sdiv i64 %832, 400
  %835 = sub i64 0, %834
  %836 = sub i64 %828, %835
  %837 = add nsw i64 %828, %834
  %838 = load i64, i64* %1, align 8
  %839 = sub i64 0, 1
  %840 = add i64 %838, %839
  %841 = sub nsw i64 %838, 1
  %842 = sdiv i64 %840, 100
  %843 = add i64 %836, 4969775190449591536
  %844 = sub i64 %843, %842
  %845 = sub i64 %844, 4969775190449591536
  %846 = sub nsw i64 %836, %842
  %847 = sub i64 %822, 4258581571215889399
  %848 = add i64 %847, %845
  %849 = add i64 %848, 4258581571215889399
  %850 = add nsw i64 %822, %845
  %851 = sub i64 %849, -3078506745884726115
  %852 = add i64 %851, 181
  %853 = add i64 %852, -3078506745884726115
  %854 = add nsw i64 %849, 181
  %855 = load i32, i32* %3, align 4
  %856 = sext i32 %855 to i64
  %857 = sub i64 0, %856
  %858 = sub i64 %853, %857
  %859 = add nsw i64 %853, %856
  store i64 %858, i64* %4, align 8
  br label %1122

; <label>:860:                                    ; preds = %813
  %861 = load i32, i32* %2, align 4
  %862 = icmp eq i32 %861, 8
  br i1 %862, label %863, label %912

; <label>:863:                                    ; preds = %860
  %864 = load i64, i64* %1, align 8
  %865 = sub i64 %864, -2347184438382829607
  %866 = sub i64 %865, 1
  %867 = add i64 %866, -2347184438382829607
  %868 = sub nsw i64 %864, 1
  %869 = srem i64 %867, 7
  %870 = mul nsw i64 365, %869
  %871 = load i64, i64* %1, align 8
  %872 = add i64 %871, 5185609647081366155
  %873 = sub i64 %872, 1
  %874 = sub i64 %873, 5185609647081366155
  %875 = sub nsw i64 %871, 1
  %876 = sdiv i64 %874, 4
  %877 = load i64, i64* %1, align 8
  %878 = add i64 %877, 135963943275964369
  %879 = sub i64 %878, 1
  %880 = sub i64 %879, 135963943275964369
  %881 = sub nsw i64 %877, 1
  %882 = sdiv i64 %880, 400
  %883 = add i64 %876, -8532046176736752761
  %884 = add i64 %883, %882
  %885 = sub i64 %884, -8532046176736752761
  %886 = add nsw i64 %876, %882
  %887 = load i64, i64* %1, align 8
  %888 = sub i64 %887, -1212165628375533546
  %889 = sub i64 %888, 1
  %890 = add i64 %889, -1212165628375533546
  %891 = sub nsw i64 %887, 1
  %892 = sdiv i64 %890, 100
  %893 = sub i64 %885, -6313561235988852487
  %894 = sub i64 %893, %892
  %895 = add i64 %894, -6313561235988852487
  %896 = sub nsw i64 %885, %892
  %897 = sub i64 0, %870
  %898 = sub i64 0, %895
  %899 = add i64 %897, %898
  %900 = sub i64 0, %899
  %901 = add nsw i64 %870, %895
  %902 = add i64 %900, -99070327546762534
  %903 = add i64 %902, 212
  %904 = sub i64 %903, -99070327546762534
  %905 = add nsw i64 %900, 212
  %906 = load i32, i32* %3, align 4
  %907 = sext i32 %906 to i64
  %908 = sub i64 %904, -2700641171184328271
  %909 = add i64 %908, %907
  %910 = add i64 %909, -2700641171184328271
  %911 = add nsw i64 %904, %907
  store i64 %910, i64* %4, align 8
  br label %1121

; <label>:912:                                    ; preds = %860
  %913 = load i32, i32* %2, align 4
  %914 = icmp eq i32 %913, 9
  br i1 %914, label %915, label %961

; <label>:915:                                    ; preds = %912
  %916 = load i64, i64* %1, align 8
  %917 = sub i64 0, 1
  %918 = add i64 %916, %917
  %919 = sub nsw i64 %916, 1
  %920 = srem i64 %918, 7
  %921 = mul nsw i64 365, %920
  %922 = load i64, i64* %1, align 8
  %923 = sub i64 %922, -6427567651963727889
  %924 = sub i64 %923, 1
  %925 = add i64 %924, -6427567651963727889
  %926 = sub nsw i64 %922, 1
  %927 = sdiv i64 %925, 4
  %928 = load i64, i64* %1, align 8
  %929 = sub i64 %928, -2522826706396386727
  %930 = sub i64 %929, 1
  %931 = add i64 %930, -2522826706396386727
  %932 = sub nsw i64 %928, 1
  %933 = sdiv i64 %931, 400
  %934 = sub i64 0, %927
  %935 = sub i64 0, %933
  %936 = add i64 %934, %935
  %937 = sub i64 0, %936
  %938 = add nsw i64 %927, %933
  %939 = load i64, i64* %1, align 8
  %940 = sub i64 0, 1
  %941 = add i64 %939, %940
  %942 = sub nsw i64 %939, 1
  %943 = sdiv i64 %941, 100
  %944 = sub i64 0, %943
  %945 = add i64 %937, %944
  %946 = sub nsw i64 %937, %943
  %947 = add i64 %921, -5797981944396169492
  %948 = add i64 %947, %945
  %949 = sub i64 %948, -5797981944396169492
  %950 = add nsw i64 %921, %945
  %951 = sub i64 %949, 7958318238189655617
  %952 = add i64 %951, 243
  %953 = add i64 %952, 7958318238189655617
  %954 = add nsw i64 %949, 243
  %955 = load i32, i32* %3, align 4
  %956 = sext i32 %955 to i64
  %957 = sub i64 %953, 966395493818169355
  %958 = add i64 %957, %956
  %959 = add i64 %958, 966395493818169355
  %960 = add nsw i64 %953, %956
  store i64 %959, i64* %4, align 8
  br label %1120

; <label>:961:                                    ; preds = %912
  %962 = load i32, i32* %2, align 4
  %963 = icmp eq i32 %962, 10
  br i1 %963, label %964, label %1012

; <label>:964:                                    ; preds = %961
  %965 = load i64, i64* %1, align 8
  %966 = sub i64 0, 1
  %967 = add i64 %965, %966
  %968 = sub nsw i64 %965, 1
  %969 = srem i64 %967, 7
  %970 = mul nsw i64 365, %969
  %971 = load i64, i64* %1, align 8
  %972 = sub i64 %971, 1831872658618296051
  %973 = sub i64 %972, 1
  %974 = add i64 %973, 1831872658618296051
  %975 = sub nsw i64 %971, 1
  %976 = sdiv i64 %974, 4
  %977 = load i64, i64* %1, align 8
  %978 = sub i64 0, 1
  %979 = add i64 %977, %978
  %980 = sub nsw i64 %977, 1
  %981 = sdiv i64 %979, 400
  %982 = sub i64 0, %976
  %983 = sub i64 0, %981
  %984 = add i64 %982, %983
  %985 = sub i64 0, %984
  %986 = add nsw i64 %976, %981
  %987 = load i64, i64* %1, align 8
  %988 = add i64 %987, 2239069937319186382
  %989 = sub i64 %988, 1
  %990 = sub i64 %989, 2239069937319186382
  %991 = sub nsw i64 %987, 1
  %992 = sdiv i64 %990, 100
  %993 = add i64 %985, 5092443252571986486
  %994 = sub i64 %993, %992
  %995 = sub i64 %994, 5092443252571986486
  %996 = sub nsw i64 %985, %992
  %997 = add i64 %970, -2365359926664044793
  %998 = add i64 %997, %995
  %999 = sub i64 %998, -2365359926664044793
  %1000 = add nsw i64 %970, %995
  %1001 = sub i64 %999, -8003404401138847312
  %1002 = add i64 %1001, 273
  %1003 = add i64 %1002, -8003404401138847312
  %1004 = add nsw i64 %999, 273
  %1005 = load i32, i32* %3, align 4
  %1006 = sext i32 %1005 to i64
  %1007 = sub i64 0, %1003
  %1008 = sub i64 0, %1006
  %1009 = add i64 %1007, %1008
  %1010 = sub i64 0, %1009
  %1011 = add nsw i64 %1003, %1006
  store i64 %1010, i64* %4, align 8
  br label %1119

; <label>:1012:                                   ; preds = %961
  %1013 = load i32, i32* %2, align 4
  %1014 = icmp eq i32 %1013, 11
  br i1 %1014, label %1015, label %1063

; <label>:1015:                                   ; preds = %1012
  %1016 = load i64, i64* %1, align 8
  %1017 = add i64 %1016, -1483360393581081786
  %1018 = sub i64 %1017, 1
  %1019 = sub i64 %1018, -1483360393581081786
  %1020 = sub nsw i64 %1016, 1
  %1021 = srem i64 %1019, 7
  %1022 = mul nsw i64 365, %1021
  %1023 = load i64, i64* %1, align 8
  %1024 = sub i64 %1023, 5484400858182458340
  %1025 = sub i64 %1024, 1
  %1026 = add i64 %1025, 5484400858182458340
  %1027 = sub nsw i64 %1023, 1
  %1028 = sdiv i64 %1026, 4
  %1029 = load i64, i64* %1, align 8
  %1030 = sub i64 %1029, 4172468723051777810
  %1031 = sub i64 %1030, 1
  %1032 = add i64 %1031, 4172468723051777810
  %1033 = sub nsw i64 %1029, 1
  %1034 = sdiv i64 %1032, 400
  %1035 = sub i64 0, %1028
  %1036 = sub i64 0, %1034
  %1037 = add i64 %1035, %1036
  %1038 = sub i64 0, %1037
  %1039 = add nsw i64 %1028, %1034
  %1040 = load i64, i64* %1, align 8
  %1041 = sub i64 %1040, 3031283609238577864
  %1042 = sub i64 %1041, 1
  %1043 = add i64 %1042, 3031283609238577864
  %1044 = sub nsw i64 %1040, 1
  %1045 = sdiv i64 %1043, 100
  %1046 = sub i64 0, %1045
  %1047 = add i64 %1038, %1046
  %1048 = sub nsw i64 %1038, %1045
  %1049 = sub i64 0, %1047
  %1050 = sub i64 %1022, %1049
  %1051 = add nsw i64 %1022, %1047
  %1052 = sub i64 0, %1050
  %1053 = sub i64 0, 304
  %1054 = add i64 %1052, %1053
  %1055 = sub i64 0, %1054
  %1056 = add nsw i64 %1050, 304
  %1057 = load i32, i32* %3, align 4
  %1058 = sext i32 %1057 to i64
  %1059 = add i64 %1055, -5026368825993015412
  %1060 = add i64 %1059, %1058
  %1061 = sub i64 %1060, -5026368825993015412
  %1062 = add nsw i64 %1055, %1058
  store i64 %1061, i64* %4, align 8
  br label %1118

; <label>:1063:                                   ; preds = %1012
  %1064 = load i32, i32* %2, align 4
  %1065 = icmp eq i32 %1064, 12
  br i1 %1065, label %1066, label %1117

; <label>:1066:                                   ; preds = %1063
  %1067 = load i64, i64* %1, align 8
  %1068 = sub i64 %1067, 7032279429776664397
  %1069 = sub i64 %1068, 1
  %1070 = add i64 %1069, 7032279429776664397
  %1071 = sub nsw i64 %1067, 1
  %1072 = srem i64 %1070, 7
  %1073 = mul nsw i64 365, %1072
  %1074 = load i64, i64* %1, align 8
  %1075 = add i64 %1074, 5895396415569204570
  %1076 = sub i64 %1075, 1
  %1077 = sub i64 %1076, 5895396415569204570
  %1078 = sub nsw i64 %1074, 1
  %1079 = sdiv i64 %1077, 4
  %1080 = load i64, i64* %1, align 8
  %1081 = add i64 %1080, -6435099218936733283
  %1082 = sub i64 %1081, 1
  %1083 = sub i64 %1082, -6435099218936733283
  %1084 = sub nsw i64 %1080, 1
  %1085 = sdiv i64 %1083, 400
  %1086 = add i64 %1079, -3113132021808837995
  %1087 = add i64 %1086, %1085
  %1088 = sub i64 %1087, -3113132021808837995
  %1089 = add nsw i64 %1079, %1085
  %1090 = load i64, i64* %1, align 8
  %1091 = sub i64 %1090, 550405863780540406
  %1092 = sub i64 %1091, 1
  %1093 = add i64 %1092, 550405863780540406
  %1094 = sub nsw i64 %1090, 1
  %1095 = sdiv i64 %1093, 100
  %1096 = add i64 %1088, 8036427297592350520
  %1097 = sub i64 %1096, %1095
  %1098 = sub i64 %1097, 8036427297592350520
  %1099 = sub nsw i64 %1088, %1095
  %1100 = sub i64 0, %1073
  %1101 = sub i64 0, %1098
  %1102 = add i64 %1100, %1101
  %1103 = sub i64 0, %1102
  %1104 = add nsw i64 %1073, %1098
  %1105 = sub i64 0, %1103
  %1106 = sub i64 0, 334
  %1107 = add i64 %1105, %1106
  %1108 = sub i64 0, %1107
  %1109 = add nsw i64 %1103, 334
  %1110 = load i32, i32* %3, align 4
  %1111 = sext i32 %1110 to i64
  %1112 = sub i64 0, %1108
  %1113 = sub i64 0, %1111
  %1114 = add i64 %1112, %1113
  %1115 = sub i64 0, %1114
  %1116 = add nsw i64 %1108, %1111
  store i64 %1115, i64* %4, align 8
  br label %1117

; <label>:1117:                                   ; preds = %1066, %1063
  br label %1118

; <label>:1118:                                   ; preds = %1117, %1015
  br label %1119

; <label>:1119:                                   ; preds = %1118, %964
  br label %1120

; <label>:1120:                                   ; preds = %1119, %915
  br label %1121

; <label>:1121:                                   ; preds = %1120, %863
  br label %1122

; <label>:1122:                                   ; preds = %1121, %816
  br label %1123

; <label>:1123:                                   ; preds = %1122, %767
  br label %1124

; <label>:1124:                                   ; preds = %1123, %719
  br label %1125

; <label>:1125:                                   ; preds = %1124, %669
  br label %1126

; <label>:1126:                                   ; preds = %1125, %618
  br label %1127

; <label>:1127:                                   ; preds = %1126, %614
  br label %1128

; <label>:1128:                                   ; preds = %1127, %54
  br label %1129

; <label>:1129:                                   ; preds = %1128, %8
  %1130 = load i64, i64* %4, align 8
  %1131 = srem i64 %1130, 7
  %1132 = icmp eq i64 %1131, 0
  br i1 %1132, label %1133, label %1135

; <label>:1133:                                   ; preds = %1129
  %1134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0))
  br label %1177

; <label>:1135:                                   ; preds = %1129
  %1136 = load i64, i64* %4, align 8
  %1137 = srem i64 %1136, 7
  %1138 = icmp eq i64 %1137, 1
  br i1 %1138, label %1139, label %1141

; <label>:1139:                                   ; preds = %1135
  %1140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0))
  br label %1176

; <label>:1141:                                   ; preds = %1135
  %1142 = load i64, i64* %4, align 8
  %1143 = srem i64 %1142, 7
  %1144 = icmp eq i64 %1143, 2
  br i1 %1144, label %1145, label %1147

; <label>:1145:                                   ; preds = %1141
  %1146 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0))
  br label %1175

; <label>:1147:                                   ; preds = %1141
  %1148 = load i64, i64* %4, align 8
  %1149 = srem i64 %1148, 7
  %1150 = icmp eq i64 %1149, 3
  br i1 %1150, label %1151, label %1153

; <label>:1151:                                   ; preds = %1147
  %1152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0))
  br label %1174

; <label>:1153:                                   ; preds = %1147
  %1154 = load i64, i64* %4, align 8
  %1155 = srem i64 %1154, 7
  %1156 = icmp eq i64 %1155, 4
  br i1 %1156, label %1157, label %1159

; <label>:1157:                                   ; preds = %1153
  %1158 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0))
  br label %1173

; <label>:1159:                                   ; preds = %1153
  %1160 = load i64, i64* %4, align 8
  %1161 = srem i64 %1160, 7
  %1162 = icmp eq i64 %1161, 5
  br i1 %1162, label %1163, label %1165

; <label>:1163:                                   ; preds = %1159
  %1164 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0))
  br label %1172

; <label>:1165:                                   ; preds = %1159
  %1166 = load i64, i64* %4, align 8
  %1167 = srem i64 %1166, 7
  %1168 = icmp eq i64 %1167, 6
  br i1 %1168, label %1169, label %1171

; <label>:1169:                                   ; preds = %1165
  %1170 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0))
  br label %1171

; <label>:1171:                                   ; preds = %1169, %1165
  br label %1172

; <label>:1172:                                   ; preds = %1171, %1163
  br label %1173

; <label>:1173:                                   ; preds = %1172, %1157
  br label %1174

; <label>:1174:                                   ; preds = %1173, %1151
  br label %1175

; <label>:1175:                                   ; preds = %1174, %1145
  br label %1176

; <label>:1176:                                   ; preds = %1175, %1139
  br label %1177

; <label>:1177:                                   ; preds = %1176, %1133
  ret void
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
