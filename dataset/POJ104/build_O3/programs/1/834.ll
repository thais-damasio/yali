; ModuleID = 'source-C-CXX/1/834.c'
source_filename = "source-C-CXX/1/834.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.shu = type { i32, [26 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca [1000 x %struct.shu], align 16
  %2 = alloca i32, align 4
  %3 = alloca [1000 x i32], align 16
  %4 = bitcast [1000 x %struct.shu]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32000, i8* nonnull %4) #4
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #4
  %6 = bitcast [1000 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %6) #4
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %2)
  %8 = load i32, i32* %2, align 4, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %14, label %129

10:                                               ; preds = %14
  %11 = icmp sgt i32 %20, 0
  br i1 %11, label %12, label %129

12:                                               ; preds = %10
  %13 = zext i32 %20 to i64
  br label %26

14:                                               ; preds = %0, %14
  %15 = phi i64 [ %19, %14 ], [ 0, %0 ]
  %16 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %15, i32 0
  %17 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %15, i32 1, i64 0
  %18 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %16, i8* nonnull %17)
  %19 = add nuw nsw i64 %15, 1
  %20 = load i32, i32* %2, align 4, !tbaa !5
  %21 = sext i32 %20 to i64
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %14, label %10, !llvm.loop !9

23:                                               ; preds = %26
  br i1 %11, label %24, label %129

24:                                               ; preds = %23
  %25 = zext i32 %20 to i64
  br label %34

26:                                               ; preds = %12, %26
  %27 = phi i64 [ 0, %12 ], [ %32, %26 ]
  %28 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %27, i32 1, i64 0
  %29 = call i64 @strlen(i8* noundef nonnull %28) #5
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i64 0, i64 %27
  store i32 %30, i32* %31, align 4, !tbaa !5
  %32 = add nuw nsw i64 %27, 1
  %33 = icmp eq i64 %32, %13
  br i1 %33, label %23, label %26, !llvm.loop !11

34:                                               ; preds = %24, %100
  %35 = phi i32 [ 0, %24 ], [ %101, %100 ]
  %36 = phi i32 [ 0, %24 ], [ %102, %100 ]
  %37 = phi i32 [ 0, %24 ], [ %103, %100 ]
  %38 = phi i32 [ 0, %24 ], [ %104, %100 ]
  %39 = phi i32 [ 0, %24 ], [ %105, %100 ]
  %40 = phi i32 [ 0, %24 ], [ %106, %100 ]
  %41 = phi i32 [ 0, %24 ], [ %107, %100 ]
  %42 = phi i32 [ 0, %24 ], [ %108, %100 ]
  %43 = phi i32 [ 0, %24 ], [ %109, %100 ]
  %44 = phi i32 [ 0, %24 ], [ %110, %100 ]
  %45 = phi i32 [ 0, %24 ], [ %111, %100 ]
  %46 = phi i32 [ 0, %24 ], [ %112, %100 ]
  %47 = phi i32 [ 0, %24 ], [ %113, %100 ]
  %48 = phi i32 [ 0, %24 ], [ %114, %100 ]
  %49 = phi i32 [ 0, %24 ], [ %115, %100 ]
  %50 = phi i32 [ 0, %24 ], [ %116, %100 ]
  %51 = phi i32 [ 0, %24 ], [ %117, %100 ]
  %52 = phi i32 [ 0, %24 ], [ %118, %100 ]
  %53 = phi i32 [ 0, %24 ], [ %119, %100 ]
  %54 = phi i32 [ 0, %24 ], [ %120, %100 ]
  %55 = phi i32 [ 0, %24 ], [ %121, %100 ]
  %56 = phi i32 [ 0, %24 ], [ %122, %100 ]
  %57 = phi i32 [ 0, %24 ], [ %123, %100 ]
  %58 = phi i32 [ 0, %24 ], [ %124, %100 ]
  %59 = phi i32 [ 0, %24 ], [ %125, %100 ]
  %60 = phi i32 [ 0, %24 ], [ %126, %100 ]
  %61 = phi i64 [ 0, %24 ], [ %127, %100 ]
  %62 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4, !tbaa !5
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %100

65:                                               ; preds = %34
  %66 = zext i32 %63 to i64
  br label %67

67:                                               ; preds = %65, %301
  %68 = phi i32 [ %35, %65 ], [ %314, %301 ]
  %69 = phi i32 [ %36, %65 ], [ %315, %301 ]
  %70 = phi i32 [ %37, %65 ], [ %313, %301 ]
  %71 = phi i32 [ %38, %65 ], [ %316, %301 ]
  %72 = phi i32 [ %39, %65 ], [ %312, %301 ]
  %73 = phi i32 [ %40, %65 ], [ %317, %301 ]
  %74 = phi i32 [ %41, %65 ], [ %311, %301 ]
  %75 = phi i32 [ %42, %65 ], [ %318, %301 ]
  %76 = phi i32 [ %43, %65 ], [ %310, %301 ]
  %77 = phi i32 [ %44, %65 ], [ %319, %301 ]
  %78 = phi i32 [ %45, %65 ], [ %309, %301 ]
  %79 = phi i32 [ %46, %65 ], [ %320, %301 ]
  %80 = phi i32 [ %47, %65 ], [ %308, %301 ]
  %81 = phi i32 [ %48, %65 ], [ %321, %301 ]
  %82 = phi i32 [ %49, %65 ], [ %307, %301 ]
  %83 = phi i32 [ %50, %65 ], [ %322, %301 ]
  %84 = phi i32 [ %51, %65 ], [ %306, %301 ]
  %85 = phi i32 [ %52, %65 ], [ %323, %301 ]
  %86 = phi i32 [ %53, %65 ], [ %305, %301 ]
  %87 = phi i32 [ %54, %65 ], [ %324, %301 ]
  %88 = phi i32 [ %55, %65 ], [ %304, %301 ]
  %89 = phi i32 [ %56, %65 ], [ %325, %301 ]
  %90 = phi i32 [ %57, %65 ], [ %303, %301 ]
  %91 = phi i32 [ %58, %65 ], [ %326, %301 ]
  %92 = phi i32 [ %59, %65 ], [ %302, %301 ]
  %93 = phi i32 [ %60, %65 ], [ %327, %301 ]
  %94 = phi i64 [ 0, %65 ], [ %328, %301 ]
  %95 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %61, i32 1, i64 %94
  %96 = load i8, i8* %95, align 1, !tbaa !12
  %97 = sext i8 %96 to i32
  switch i32 %97, label %301 [
    i32 65, label %98
    i32 66, label %251
    i32 67, label %253
    i32 68, label %255
    i32 69, label %257
    i32 70, label %259
    i32 71, label %261
    i32 72, label %263
    i32 73, label %265
    i32 74, label %267
    i32 75, label %269
    i32 76, label %271
    i32 77, label %273
    i32 78, label %275
    i32 79, label %277
    i32 80, label %279
    i32 81, label %281
    i32 82, label %283
    i32 83, label %285
    i32 84, label %287
    i32 85, label %289
    i32 86, label %291
    i32 87, label %293
    i32 88, label %295
    i32 89, label %297
    i32 90, label %299
  ]

98:                                               ; preds = %67
  %99 = add nsw i32 %68, 1
  br label %301

100:                                              ; preds = %301, %34
  %101 = phi i32 [ %35, %34 ], [ %314, %301 ]
  %102 = phi i32 [ %36, %34 ], [ %315, %301 ]
  %103 = phi i32 [ %37, %34 ], [ %313, %301 ]
  %104 = phi i32 [ %38, %34 ], [ %316, %301 ]
  %105 = phi i32 [ %39, %34 ], [ %312, %301 ]
  %106 = phi i32 [ %40, %34 ], [ %317, %301 ]
  %107 = phi i32 [ %41, %34 ], [ %311, %301 ]
  %108 = phi i32 [ %42, %34 ], [ %318, %301 ]
  %109 = phi i32 [ %43, %34 ], [ %310, %301 ]
  %110 = phi i32 [ %44, %34 ], [ %319, %301 ]
  %111 = phi i32 [ %45, %34 ], [ %309, %301 ]
  %112 = phi i32 [ %46, %34 ], [ %320, %301 ]
  %113 = phi i32 [ %47, %34 ], [ %308, %301 ]
  %114 = phi i32 [ %48, %34 ], [ %321, %301 ]
  %115 = phi i32 [ %49, %34 ], [ %307, %301 ]
  %116 = phi i32 [ %50, %34 ], [ %322, %301 ]
  %117 = phi i32 [ %51, %34 ], [ %306, %301 ]
  %118 = phi i32 [ %52, %34 ], [ %323, %301 ]
  %119 = phi i32 [ %53, %34 ], [ %305, %301 ]
  %120 = phi i32 [ %54, %34 ], [ %324, %301 ]
  %121 = phi i32 [ %55, %34 ], [ %304, %301 ]
  %122 = phi i32 [ %56, %34 ], [ %325, %301 ]
  %123 = phi i32 [ %57, %34 ], [ %303, %301 ]
  %124 = phi i32 [ %58, %34 ], [ %326, %301 ]
  %125 = phi i32 [ %59, %34 ], [ %302, %301 ]
  %126 = phi i32 [ %60, %34 ], [ %327, %301 ]
  %127 = add nuw nsw i64 %61, 1
  %128 = icmp eq i64 %127, %25
  br i1 %128, label %129, label %34, !llvm.loop !13

129:                                              ; preds = %100, %10, %0, %23
  %130 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %101, %100 ]
  %131 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %102, %100 ]
  %132 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %103, %100 ]
  %133 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %104, %100 ]
  %134 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %105, %100 ]
  %135 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %106, %100 ]
  %136 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %107, %100 ]
  %137 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %108, %100 ]
  %138 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %109, %100 ]
  %139 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %110, %100 ]
  %140 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %111, %100 ]
  %141 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %112, %100 ]
  %142 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %113, %100 ]
  %143 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %114, %100 ]
  %144 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %115, %100 ]
  %145 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %116, %100 ]
  %146 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %117, %100 ]
  %147 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %118, %100 ]
  %148 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %119, %100 ]
  %149 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %120, %100 ]
  %150 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %121, %100 ]
  %151 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %122, %100 ]
  %152 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %123, %100 ]
  %153 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %124, %100 ]
  %154 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %125, %100 ]
  %155 = phi i32 [ 0, %23 ], [ 0, %0 ], [ 0, %10 ], [ %126, %100 ]
  %156 = icmp sgt i32 %131, %130
  %157 = select i1 %156, i32 %131, i32 %130
  %158 = icmp sgt i32 %132, %157
  %159 = select i1 %158, i32 %132, i32 %157
  %160 = icmp sgt i32 %133, %159
  %161 = select i1 %160, i32 %133, i32 %159
  %162 = icmp sgt i32 %134, %161
  %163 = select i1 %162, i32 %134, i32 %161
  %164 = icmp sgt i32 %135, %163
  %165 = select i1 %164, i32 %135, i32 %163
  %166 = icmp sgt i32 %136, %165
  %167 = select i1 %166, i32 %136, i32 %165
  %168 = icmp sgt i32 %137, %167
  %169 = select i1 %168, i32 %137, i32 %167
  %170 = icmp sgt i32 %138, %169
  %171 = select i1 %170, i32 %138, i32 %169
  %172 = icmp sgt i32 %139, %171
  %173 = select i1 %172, i32 %139, i32 %171
  %174 = icmp sgt i32 %140, %173
  %175 = select i1 %174, i32 %140, i32 %173
  %176 = icmp sgt i32 %141, %175
  %177 = select i1 %176, i32 %141, i32 %175
  %178 = icmp sgt i32 %142, %177
  %179 = select i1 %178, i32 %142, i32 %177
  %180 = icmp sgt i32 %143, %179
  %181 = select i1 %180, i32 %143, i32 %179
  %182 = icmp sgt i32 %144, %181
  %183 = select i1 %182, i32 %144, i32 %181
  %184 = icmp sgt i32 %145, %183
  %185 = select i1 %184, i32 %145, i32 %183
  %186 = icmp sgt i32 %146, %185
  %187 = select i1 %186, i32 %146, i32 %185
  %188 = icmp sgt i32 %147, %187
  %189 = select i1 %188, i32 %147, i32 %187
  %190 = icmp sgt i32 %148, %189
  %191 = select i1 %190, i32 %148, i32 %189
  %192 = icmp sgt i32 %149, %191
  %193 = select i1 %192, i32 %149, i32 %191
  %194 = icmp sgt i32 %150, %193
  %195 = select i1 %194, i32 %150, i32 %193
  %196 = icmp sgt i32 %151, %195
  %197 = select i1 %196, i32 %151, i32 %195
  %198 = icmp sgt i32 %152, %197
  %199 = select i1 %198, i32 %152, i32 %197
  %200 = icmp sgt i32 %153, %199
  %201 = select i1 %200, i32 %153, i32 %199
  %202 = icmp sgt i32 %154, %201
  %203 = select i1 %202, i32 %154, i32 %201
  %204 = icmp sgt i32 %155, %203
  %205 = select i1 %204, i32 %155, i32 %203
  %206 = select i1 %156, i32 66, i32 65
  %207 = select i1 %158, i32 67, i32 %206
  %208 = select i1 %160, i32 68, i32 %207
  %209 = select i1 %162, i32 69, i32 %208
  %210 = select i1 %164, i32 70, i32 %209
  %211 = select i1 %166, i32 71, i32 %210
  %212 = select i1 %168, i32 72, i32 %211
  %213 = select i1 %170, i32 73, i32 %212
  %214 = select i1 %172, i32 74, i32 %213
  %215 = select i1 %174, i32 75, i32 %214
  %216 = select i1 %176, i32 76, i32 %215
  %217 = select i1 %178, i32 77, i32 %216
  %218 = select i1 %180, i32 78, i32 %217
  %219 = select i1 %182, i32 79, i32 %218
  %220 = select i1 %184, i32 80, i32 %219
  %221 = select i1 %186, i32 81, i32 %220
  %222 = select i1 %188, i32 82, i32 %221
  %223 = select i1 %190, i32 83, i32 %222
  %224 = select i1 %192, i32 84, i32 %223
  %225 = select i1 %194, i32 85, i32 %224
  %226 = select i1 %196, i32 86, i32 %225
  %227 = select i1 %198, i32 87, i32 %226
  %228 = select i1 %200, i32 88, i32 %227
  %229 = select i1 %202, i32 89, i32 %228
  %230 = select i1 %204, i32 90, i32 %229
  %231 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %230)
  %232 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %205)
  %233 = load i32, i32* %2, align 4, !tbaa !5
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %235, label %250

235:                                              ; preds = %129, %525
  %236 = phi i64 [ %526, %525 ], [ 0, %129 ]
  %237 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 0
  %238 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 0
  %239 = load i8, i8* %238, align 4, !tbaa !12
  %240 = sext i8 %239 to i32
  %241 = icmp eq i32 %230, %240
  br i1 %241, label %242, label %245

242:                                              ; preds = %235
  %243 = load i32, i32* %237, align 16, !tbaa !14
  %244 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %243)
  br label %245

245:                                              ; preds = %235, %242
  %246 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 1
  %247 = load i8, i8* %246, align 1, !tbaa !12
  %248 = sext i8 %247 to i32
  %249 = icmp eq i32 %230, %248
  br i1 %249, label %330, label %333

250:                                              ; preds = %525, %129
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 32000, i8* nonnull %4) #4
  ret void

251:                                              ; preds = %67
  %252 = add nsw i32 %69, 1
  br label %301

253:                                              ; preds = %67
  %254 = add nsw i32 %70, 1
  br label %301

255:                                              ; preds = %67
  %256 = add nsw i32 %71, 1
  br label %301

257:                                              ; preds = %67
  %258 = add nsw i32 %72, 1
  br label %301

259:                                              ; preds = %67
  %260 = add nsw i32 %73, 1
  br label %301

261:                                              ; preds = %67
  %262 = add nsw i32 %74, 1
  br label %301

263:                                              ; preds = %67
  %264 = add nsw i32 %75, 1
  br label %301

265:                                              ; preds = %67
  %266 = add nsw i32 %76, 1
  br label %301

267:                                              ; preds = %67
  %268 = add nsw i32 %77, 1
  br label %301

269:                                              ; preds = %67
  %270 = add nsw i32 %78, 1
  br label %301

271:                                              ; preds = %67
  %272 = add nsw i32 %79, 1
  br label %301

273:                                              ; preds = %67
  %274 = add nsw i32 %80, 1
  br label %301

275:                                              ; preds = %67
  %276 = add nsw i32 %81, 1
  br label %301

277:                                              ; preds = %67
  %278 = add nsw i32 %82, 1
  br label %301

279:                                              ; preds = %67
  %280 = add nsw i32 %83, 1
  br label %301

281:                                              ; preds = %67
  %282 = add nsw i32 %84, 1
  br label %301

283:                                              ; preds = %67
  %284 = add nsw i32 %85, 1
  br label %301

285:                                              ; preds = %67
  %286 = add nsw i32 %86, 1
  br label %301

287:                                              ; preds = %67
  %288 = add nsw i32 %87, 1
  br label %301

289:                                              ; preds = %67
  %290 = add nsw i32 %88, 1
  br label %301

291:                                              ; preds = %67
  %292 = add nsw i32 %89, 1
  br label %301

293:                                              ; preds = %67
  %294 = add nsw i32 %90, 1
  br label %301

295:                                              ; preds = %67
  %296 = add nsw i32 %91, 1
  br label %301

297:                                              ; preds = %67
  %298 = add nsw i32 %92, 1
  br label %301

299:                                              ; preds = %67
  %300 = add nsw i32 %93, 1
  br label %301

301:                                              ; preds = %67, %251, %98, %253, %255, %257, %259, %261, %263, %265, %267, %269, %271, %273, %275, %277, %279, %281, %283, %285, %287, %289, %291, %293, %295, %297, %299
  %302 = phi i32 [ %92, %299 ], [ %298, %297 ], [ %92, %295 ], [ %92, %293 ], [ %92, %291 ], [ %92, %289 ], [ %92, %287 ], [ %92, %285 ], [ %92, %283 ], [ %92, %281 ], [ %92, %279 ], [ %92, %277 ], [ %92, %275 ], [ %92, %273 ], [ %92, %271 ], [ %92, %269 ], [ %92, %267 ], [ %92, %265 ], [ %92, %263 ], [ %92, %261 ], [ %92, %259 ], [ %92, %257 ], [ %92, %255 ], [ %92, %253 ], [ %92, %98 ], [ %92, %251 ], [ %92, %67 ]
  %303 = phi i32 [ %90, %299 ], [ %90, %297 ], [ %90, %295 ], [ %294, %293 ], [ %90, %291 ], [ %90, %289 ], [ %90, %287 ], [ %90, %285 ], [ %90, %283 ], [ %90, %281 ], [ %90, %279 ], [ %90, %277 ], [ %90, %275 ], [ %90, %273 ], [ %90, %271 ], [ %90, %269 ], [ %90, %267 ], [ %90, %265 ], [ %90, %263 ], [ %90, %261 ], [ %90, %259 ], [ %90, %257 ], [ %90, %255 ], [ %90, %253 ], [ %90, %98 ], [ %90, %251 ], [ %90, %67 ]
  %304 = phi i32 [ %88, %299 ], [ %88, %297 ], [ %88, %295 ], [ %88, %293 ], [ %88, %291 ], [ %290, %289 ], [ %88, %287 ], [ %88, %285 ], [ %88, %283 ], [ %88, %281 ], [ %88, %279 ], [ %88, %277 ], [ %88, %275 ], [ %88, %273 ], [ %88, %271 ], [ %88, %269 ], [ %88, %267 ], [ %88, %265 ], [ %88, %263 ], [ %88, %261 ], [ %88, %259 ], [ %88, %257 ], [ %88, %255 ], [ %88, %253 ], [ %88, %98 ], [ %88, %251 ], [ %88, %67 ]
  %305 = phi i32 [ %86, %299 ], [ %86, %297 ], [ %86, %295 ], [ %86, %293 ], [ %86, %291 ], [ %86, %289 ], [ %86, %287 ], [ %286, %285 ], [ %86, %283 ], [ %86, %281 ], [ %86, %279 ], [ %86, %277 ], [ %86, %275 ], [ %86, %273 ], [ %86, %271 ], [ %86, %269 ], [ %86, %267 ], [ %86, %265 ], [ %86, %263 ], [ %86, %261 ], [ %86, %259 ], [ %86, %257 ], [ %86, %255 ], [ %86, %253 ], [ %86, %98 ], [ %86, %251 ], [ %86, %67 ]
  %306 = phi i32 [ %84, %299 ], [ %84, %297 ], [ %84, %295 ], [ %84, %293 ], [ %84, %291 ], [ %84, %289 ], [ %84, %287 ], [ %84, %285 ], [ %84, %283 ], [ %282, %281 ], [ %84, %279 ], [ %84, %277 ], [ %84, %275 ], [ %84, %273 ], [ %84, %271 ], [ %84, %269 ], [ %84, %267 ], [ %84, %265 ], [ %84, %263 ], [ %84, %261 ], [ %84, %259 ], [ %84, %257 ], [ %84, %255 ], [ %84, %253 ], [ %84, %98 ], [ %84, %251 ], [ %84, %67 ]
  %307 = phi i32 [ %82, %299 ], [ %82, %297 ], [ %82, %295 ], [ %82, %293 ], [ %82, %291 ], [ %82, %289 ], [ %82, %287 ], [ %82, %285 ], [ %82, %283 ], [ %82, %281 ], [ %82, %279 ], [ %278, %277 ], [ %82, %275 ], [ %82, %273 ], [ %82, %271 ], [ %82, %269 ], [ %82, %267 ], [ %82, %265 ], [ %82, %263 ], [ %82, %261 ], [ %82, %259 ], [ %82, %257 ], [ %82, %255 ], [ %82, %253 ], [ %82, %98 ], [ %82, %251 ], [ %82, %67 ]
  %308 = phi i32 [ %80, %299 ], [ %80, %297 ], [ %80, %295 ], [ %80, %293 ], [ %80, %291 ], [ %80, %289 ], [ %80, %287 ], [ %80, %285 ], [ %80, %283 ], [ %80, %281 ], [ %80, %279 ], [ %80, %277 ], [ %80, %275 ], [ %274, %273 ], [ %80, %271 ], [ %80, %269 ], [ %80, %267 ], [ %80, %265 ], [ %80, %263 ], [ %80, %261 ], [ %80, %259 ], [ %80, %257 ], [ %80, %255 ], [ %80, %253 ], [ %80, %98 ], [ %80, %251 ], [ %80, %67 ]
  %309 = phi i32 [ %78, %299 ], [ %78, %297 ], [ %78, %295 ], [ %78, %293 ], [ %78, %291 ], [ %78, %289 ], [ %78, %287 ], [ %78, %285 ], [ %78, %283 ], [ %78, %281 ], [ %78, %279 ], [ %78, %277 ], [ %78, %275 ], [ %78, %273 ], [ %78, %271 ], [ %270, %269 ], [ %78, %267 ], [ %78, %265 ], [ %78, %263 ], [ %78, %261 ], [ %78, %259 ], [ %78, %257 ], [ %78, %255 ], [ %78, %253 ], [ %78, %98 ], [ %78, %251 ], [ %78, %67 ]
  %310 = phi i32 [ %76, %299 ], [ %76, %297 ], [ %76, %295 ], [ %76, %293 ], [ %76, %291 ], [ %76, %289 ], [ %76, %287 ], [ %76, %285 ], [ %76, %283 ], [ %76, %281 ], [ %76, %279 ], [ %76, %277 ], [ %76, %275 ], [ %76, %273 ], [ %76, %271 ], [ %76, %269 ], [ %76, %267 ], [ %266, %265 ], [ %76, %263 ], [ %76, %261 ], [ %76, %259 ], [ %76, %257 ], [ %76, %255 ], [ %76, %253 ], [ %76, %98 ], [ %76, %251 ], [ %76, %67 ]
  %311 = phi i32 [ %74, %299 ], [ %74, %297 ], [ %74, %295 ], [ %74, %293 ], [ %74, %291 ], [ %74, %289 ], [ %74, %287 ], [ %74, %285 ], [ %74, %283 ], [ %74, %281 ], [ %74, %279 ], [ %74, %277 ], [ %74, %275 ], [ %74, %273 ], [ %74, %271 ], [ %74, %269 ], [ %74, %267 ], [ %74, %265 ], [ %74, %263 ], [ %262, %261 ], [ %74, %259 ], [ %74, %257 ], [ %74, %255 ], [ %74, %253 ], [ %74, %98 ], [ %74, %251 ], [ %74, %67 ]
  %312 = phi i32 [ %72, %299 ], [ %72, %297 ], [ %72, %295 ], [ %72, %293 ], [ %72, %291 ], [ %72, %289 ], [ %72, %287 ], [ %72, %285 ], [ %72, %283 ], [ %72, %281 ], [ %72, %279 ], [ %72, %277 ], [ %72, %275 ], [ %72, %273 ], [ %72, %271 ], [ %72, %269 ], [ %72, %267 ], [ %72, %265 ], [ %72, %263 ], [ %72, %261 ], [ %72, %259 ], [ %258, %257 ], [ %72, %255 ], [ %72, %253 ], [ %72, %98 ], [ %72, %251 ], [ %72, %67 ]
  %313 = phi i32 [ %70, %299 ], [ %70, %297 ], [ %70, %295 ], [ %70, %293 ], [ %70, %291 ], [ %70, %289 ], [ %70, %287 ], [ %70, %285 ], [ %70, %283 ], [ %70, %281 ], [ %70, %279 ], [ %70, %277 ], [ %70, %275 ], [ %70, %273 ], [ %70, %271 ], [ %70, %269 ], [ %70, %267 ], [ %70, %265 ], [ %70, %263 ], [ %70, %261 ], [ %70, %259 ], [ %70, %257 ], [ %70, %255 ], [ %254, %253 ], [ %70, %98 ], [ %70, %251 ], [ %70, %67 ]
  %314 = phi i32 [ %68, %299 ], [ %68, %297 ], [ %68, %295 ], [ %68, %293 ], [ %68, %291 ], [ %68, %289 ], [ %68, %287 ], [ %68, %285 ], [ %68, %283 ], [ %68, %281 ], [ %68, %279 ], [ %68, %277 ], [ %68, %275 ], [ %68, %273 ], [ %68, %271 ], [ %68, %269 ], [ %68, %267 ], [ %68, %265 ], [ %68, %263 ], [ %68, %261 ], [ %68, %259 ], [ %68, %257 ], [ %68, %255 ], [ %68, %253 ], [ %99, %98 ], [ %68, %251 ], [ %68, %67 ]
  %315 = phi i32 [ %69, %299 ], [ %69, %297 ], [ %69, %295 ], [ %69, %293 ], [ %69, %291 ], [ %69, %289 ], [ %69, %287 ], [ %69, %285 ], [ %69, %283 ], [ %69, %281 ], [ %69, %279 ], [ %69, %277 ], [ %69, %275 ], [ %69, %273 ], [ %69, %271 ], [ %69, %269 ], [ %69, %267 ], [ %69, %265 ], [ %69, %263 ], [ %69, %261 ], [ %69, %259 ], [ %69, %257 ], [ %69, %255 ], [ %69, %253 ], [ %69, %98 ], [ %252, %251 ], [ %69, %67 ]
  %316 = phi i32 [ %71, %299 ], [ %71, %297 ], [ %71, %295 ], [ %71, %293 ], [ %71, %291 ], [ %71, %289 ], [ %71, %287 ], [ %71, %285 ], [ %71, %283 ], [ %71, %281 ], [ %71, %279 ], [ %71, %277 ], [ %71, %275 ], [ %71, %273 ], [ %71, %271 ], [ %71, %269 ], [ %71, %267 ], [ %71, %265 ], [ %71, %263 ], [ %71, %261 ], [ %71, %259 ], [ %71, %257 ], [ %256, %255 ], [ %71, %253 ], [ %71, %98 ], [ %71, %251 ], [ %71, %67 ]
  %317 = phi i32 [ %73, %299 ], [ %73, %297 ], [ %73, %295 ], [ %73, %293 ], [ %73, %291 ], [ %73, %289 ], [ %73, %287 ], [ %73, %285 ], [ %73, %283 ], [ %73, %281 ], [ %73, %279 ], [ %73, %277 ], [ %73, %275 ], [ %73, %273 ], [ %73, %271 ], [ %73, %269 ], [ %73, %267 ], [ %73, %265 ], [ %73, %263 ], [ %73, %261 ], [ %260, %259 ], [ %73, %257 ], [ %73, %255 ], [ %73, %253 ], [ %73, %98 ], [ %73, %251 ], [ %73, %67 ]
  %318 = phi i32 [ %75, %299 ], [ %75, %297 ], [ %75, %295 ], [ %75, %293 ], [ %75, %291 ], [ %75, %289 ], [ %75, %287 ], [ %75, %285 ], [ %75, %283 ], [ %75, %281 ], [ %75, %279 ], [ %75, %277 ], [ %75, %275 ], [ %75, %273 ], [ %75, %271 ], [ %75, %269 ], [ %75, %267 ], [ %75, %265 ], [ %264, %263 ], [ %75, %261 ], [ %75, %259 ], [ %75, %257 ], [ %75, %255 ], [ %75, %253 ], [ %75, %98 ], [ %75, %251 ], [ %75, %67 ]
  %319 = phi i32 [ %77, %299 ], [ %77, %297 ], [ %77, %295 ], [ %77, %293 ], [ %77, %291 ], [ %77, %289 ], [ %77, %287 ], [ %77, %285 ], [ %77, %283 ], [ %77, %281 ], [ %77, %279 ], [ %77, %277 ], [ %77, %275 ], [ %77, %273 ], [ %77, %271 ], [ %77, %269 ], [ %268, %267 ], [ %77, %265 ], [ %77, %263 ], [ %77, %261 ], [ %77, %259 ], [ %77, %257 ], [ %77, %255 ], [ %77, %253 ], [ %77, %98 ], [ %77, %251 ], [ %77, %67 ]
  %320 = phi i32 [ %79, %299 ], [ %79, %297 ], [ %79, %295 ], [ %79, %293 ], [ %79, %291 ], [ %79, %289 ], [ %79, %287 ], [ %79, %285 ], [ %79, %283 ], [ %79, %281 ], [ %79, %279 ], [ %79, %277 ], [ %79, %275 ], [ %79, %273 ], [ %272, %271 ], [ %79, %269 ], [ %79, %267 ], [ %79, %265 ], [ %79, %263 ], [ %79, %261 ], [ %79, %259 ], [ %79, %257 ], [ %79, %255 ], [ %79, %253 ], [ %79, %98 ], [ %79, %251 ], [ %79, %67 ]
  %321 = phi i32 [ %81, %299 ], [ %81, %297 ], [ %81, %295 ], [ %81, %293 ], [ %81, %291 ], [ %81, %289 ], [ %81, %287 ], [ %81, %285 ], [ %81, %283 ], [ %81, %281 ], [ %81, %279 ], [ %81, %277 ], [ %276, %275 ], [ %81, %273 ], [ %81, %271 ], [ %81, %269 ], [ %81, %267 ], [ %81, %265 ], [ %81, %263 ], [ %81, %261 ], [ %81, %259 ], [ %81, %257 ], [ %81, %255 ], [ %81, %253 ], [ %81, %98 ], [ %81, %251 ], [ %81, %67 ]
  %322 = phi i32 [ %83, %299 ], [ %83, %297 ], [ %83, %295 ], [ %83, %293 ], [ %83, %291 ], [ %83, %289 ], [ %83, %287 ], [ %83, %285 ], [ %83, %283 ], [ %83, %281 ], [ %280, %279 ], [ %83, %277 ], [ %83, %275 ], [ %83, %273 ], [ %83, %271 ], [ %83, %269 ], [ %83, %267 ], [ %83, %265 ], [ %83, %263 ], [ %83, %261 ], [ %83, %259 ], [ %83, %257 ], [ %83, %255 ], [ %83, %253 ], [ %83, %98 ], [ %83, %251 ], [ %83, %67 ]
  %323 = phi i32 [ %85, %299 ], [ %85, %297 ], [ %85, %295 ], [ %85, %293 ], [ %85, %291 ], [ %85, %289 ], [ %85, %287 ], [ %85, %285 ], [ %284, %283 ], [ %85, %281 ], [ %85, %279 ], [ %85, %277 ], [ %85, %275 ], [ %85, %273 ], [ %85, %271 ], [ %85, %269 ], [ %85, %267 ], [ %85, %265 ], [ %85, %263 ], [ %85, %261 ], [ %85, %259 ], [ %85, %257 ], [ %85, %255 ], [ %85, %253 ], [ %85, %98 ], [ %85, %251 ], [ %85, %67 ]
  %324 = phi i32 [ %87, %299 ], [ %87, %297 ], [ %87, %295 ], [ %87, %293 ], [ %87, %291 ], [ %87, %289 ], [ %288, %287 ], [ %87, %285 ], [ %87, %283 ], [ %87, %281 ], [ %87, %279 ], [ %87, %277 ], [ %87, %275 ], [ %87, %273 ], [ %87, %271 ], [ %87, %269 ], [ %87, %267 ], [ %87, %265 ], [ %87, %263 ], [ %87, %261 ], [ %87, %259 ], [ %87, %257 ], [ %87, %255 ], [ %87, %253 ], [ %87, %98 ], [ %87, %251 ], [ %87, %67 ]
  %325 = phi i32 [ %89, %299 ], [ %89, %297 ], [ %89, %295 ], [ %89, %293 ], [ %292, %291 ], [ %89, %289 ], [ %89, %287 ], [ %89, %285 ], [ %89, %283 ], [ %89, %281 ], [ %89, %279 ], [ %89, %277 ], [ %89, %275 ], [ %89, %273 ], [ %89, %271 ], [ %89, %269 ], [ %89, %267 ], [ %89, %265 ], [ %89, %263 ], [ %89, %261 ], [ %89, %259 ], [ %89, %257 ], [ %89, %255 ], [ %89, %253 ], [ %89, %98 ], [ %89, %251 ], [ %89, %67 ]
  %326 = phi i32 [ %91, %299 ], [ %91, %297 ], [ %296, %295 ], [ %91, %293 ], [ %91, %291 ], [ %91, %289 ], [ %91, %287 ], [ %91, %285 ], [ %91, %283 ], [ %91, %281 ], [ %91, %279 ], [ %91, %277 ], [ %91, %275 ], [ %91, %273 ], [ %91, %271 ], [ %91, %269 ], [ %91, %267 ], [ %91, %265 ], [ %91, %263 ], [ %91, %261 ], [ %91, %259 ], [ %91, %257 ], [ %91, %255 ], [ %91, %253 ], [ %91, %98 ], [ %91, %251 ], [ %91, %67 ]
  %327 = phi i32 [ %300, %299 ], [ %93, %297 ], [ %93, %295 ], [ %93, %293 ], [ %93, %291 ], [ %93, %289 ], [ %93, %287 ], [ %93, %285 ], [ %93, %283 ], [ %93, %281 ], [ %93, %279 ], [ %93, %277 ], [ %93, %275 ], [ %93, %273 ], [ %93, %271 ], [ %93, %269 ], [ %93, %267 ], [ %93, %265 ], [ %93, %263 ], [ %93, %261 ], [ %93, %259 ], [ %93, %257 ], [ %93, %255 ], [ %93, %253 ], [ %93, %98 ], [ %93, %251 ], [ %93, %67 ]
  %328 = add nuw nsw i64 %94, 1
  %329 = icmp eq i64 %328, %66
  br i1 %329, label %100, label %67, !llvm.loop !16

330:                                              ; preds = %245
  %331 = load i32, i32* %237, align 16, !tbaa !14
  %332 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %331)
  br label %333

333:                                              ; preds = %330, %245
  %334 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 2
  %335 = load i8, i8* %334, align 2, !tbaa !12
  %336 = sext i8 %335 to i32
  %337 = icmp eq i32 %230, %336
  br i1 %337, label %338, label %341

338:                                              ; preds = %333
  %339 = load i32, i32* %237, align 16, !tbaa !14
  %340 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %339)
  br label %341

341:                                              ; preds = %338, %333
  %342 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 3
  %343 = load i8, i8* %342, align 1, !tbaa !12
  %344 = sext i8 %343 to i32
  %345 = icmp eq i32 %230, %344
  br i1 %345, label %346, label %349

346:                                              ; preds = %341
  %347 = load i32, i32* %237, align 16, !tbaa !14
  %348 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %347)
  br label %349

349:                                              ; preds = %346, %341
  %350 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 4
  %351 = load i8, i8* %350, align 8, !tbaa !12
  %352 = sext i8 %351 to i32
  %353 = icmp eq i32 %230, %352
  br i1 %353, label %354, label %357

354:                                              ; preds = %349
  %355 = load i32, i32* %237, align 16, !tbaa !14
  %356 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %355)
  br label %357

357:                                              ; preds = %354, %349
  %358 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 5
  %359 = load i8, i8* %358, align 1, !tbaa !12
  %360 = sext i8 %359 to i32
  %361 = icmp eq i32 %230, %360
  br i1 %361, label %362, label %365

362:                                              ; preds = %357
  %363 = load i32, i32* %237, align 16, !tbaa !14
  %364 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %363)
  br label %365

365:                                              ; preds = %362, %357
  %366 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 6
  %367 = load i8, i8* %366, align 2, !tbaa !12
  %368 = sext i8 %367 to i32
  %369 = icmp eq i32 %230, %368
  br i1 %369, label %370, label %373

370:                                              ; preds = %365
  %371 = load i32, i32* %237, align 16, !tbaa !14
  %372 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %371)
  br label %373

373:                                              ; preds = %370, %365
  %374 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 7
  %375 = load i8, i8* %374, align 1, !tbaa !12
  %376 = sext i8 %375 to i32
  %377 = icmp eq i32 %230, %376
  br i1 %377, label %378, label %381

378:                                              ; preds = %373
  %379 = load i32, i32* %237, align 16, !tbaa !14
  %380 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %379)
  br label %381

381:                                              ; preds = %378, %373
  %382 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 8
  %383 = load i8, i8* %382, align 4, !tbaa !12
  %384 = sext i8 %383 to i32
  %385 = icmp eq i32 %230, %384
  br i1 %385, label %386, label %389

386:                                              ; preds = %381
  %387 = load i32, i32* %237, align 16, !tbaa !14
  %388 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %387)
  br label %389

389:                                              ; preds = %386, %381
  %390 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 9
  %391 = load i8, i8* %390, align 1, !tbaa !12
  %392 = sext i8 %391 to i32
  %393 = icmp eq i32 %230, %392
  br i1 %393, label %394, label %397

394:                                              ; preds = %389
  %395 = load i32, i32* %237, align 16, !tbaa !14
  %396 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %395)
  br label %397

397:                                              ; preds = %394, %389
  %398 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 10
  %399 = load i8, i8* %398, align 2, !tbaa !12
  %400 = sext i8 %399 to i32
  %401 = icmp eq i32 %230, %400
  br i1 %401, label %402, label %405

402:                                              ; preds = %397
  %403 = load i32, i32* %237, align 16, !tbaa !14
  %404 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %403)
  br label %405

405:                                              ; preds = %402, %397
  %406 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 11
  %407 = load i8, i8* %406, align 1, !tbaa !12
  %408 = sext i8 %407 to i32
  %409 = icmp eq i32 %230, %408
  br i1 %409, label %410, label %413

410:                                              ; preds = %405
  %411 = load i32, i32* %237, align 16, !tbaa !14
  %412 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %411)
  br label %413

413:                                              ; preds = %410, %405
  %414 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 12
  %415 = load i8, i8* %414, align 16, !tbaa !12
  %416 = sext i8 %415 to i32
  %417 = icmp eq i32 %230, %416
  br i1 %417, label %418, label %421

418:                                              ; preds = %413
  %419 = load i32, i32* %237, align 16, !tbaa !14
  %420 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %419)
  br label %421

421:                                              ; preds = %418, %413
  %422 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 13
  %423 = load i8, i8* %422, align 1, !tbaa !12
  %424 = sext i8 %423 to i32
  %425 = icmp eq i32 %230, %424
  br i1 %425, label %426, label %429

426:                                              ; preds = %421
  %427 = load i32, i32* %237, align 16, !tbaa !14
  %428 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %427)
  br label %429

429:                                              ; preds = %426, %421
  %430 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 14
  %431 = load i8, i8* %430, align 2, !tbaa !12
  %432 = sext i8 %431 to i32
  %433 = icmp eq i32 %230, %432
  br i1 %433, label %434, label %437

434:                                              ; preds = %429
  %435 = load i32, i32* %237, align 16, !tbaa !14
  %436 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %435)
  br label %437

437:                                              ; preds = %434, %429
  %438 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 15
  %439 = load i8, i8* %438, align 1, !tbaa !12
  %440 = sext i8 %439 to i32
  %441 = icmp eq i32 %230, %440
  br i1 %441, label %442, label %445

442:                                              ; preds = %437
  %443 = load i32, i32* %237, align 16, !tbaa !14
  %444 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %443)
  br label %445

445:                                              ; preds = %442, %437
  %446 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 16
  %447 = load i8, i8* %446, align 4, !tbaa !12
  %448 = sext i8 %447 to i32
  %449 = icmp eq i32 %230, %448
  br i1 %449, label %450, label %453

450:                                              ; preds = %445
  %451 = load i32, i32* %237, align 16, !tbaa !14
  %452 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %451)
  br label %453

453:                                              ; preds = %450, %445
  %454 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 17
  %455 = load i8, i8* %454, align 1, !tbaa !12
  %456 = sext i8 %455 to i32
  %457 = icmp eq i32 %230, %456
  br i1 %457, label %458, label %461

458:                                              ; preds = %453
  %459 = load i32, i32* %237, align 16, !tbaa !14
  %460 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %459)
  br label %461

461:                                              ; preds = %458, %453
  %462 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 18
  %463 = load i8, i8* %462, align 2, !tbaa !12
  %464 = sext i8 %463 to i32
  %465 = icmp eq i32 %230, %464
  br i1 %465, label %466, label %469

466:                                              ; preds = %461
  %467 = load i32, i32* %237, align 16, !tbaa !14
  %468 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %467)
  br label %469

469:                                              ; preds = %466, %461
  %470 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 19
  %471 = load i8, i8* %470, align 1, !tbaa !12
  %472 = sext i8 %471 to i32
  %473 = icmp eq i32 %230, %472
  br i1 %473, label %474, label %477

474:                                              ; preds = %469
  %475 = load i32, i32* %237, align 16, !tbaa !14
  %476 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %475)
  br label %477

477:                                              ; preds = %474, %469
  %478 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 20
  %479 = load i8, i8* %478, align 8, !tbaa !12
  %480 = sext i8 %479 to i32
  %481 = icmp eq i32 %230, %480
  br i1 %481, label %482, label %485

482:                                              ; preds = %477
  %483 = load i32, i32* %237, align 16, !tbaa !14
  %484 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %483)
  br label %485

485:                                              ; preds = %482, %477
  %486 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 21
  %487 = load i8, i8* %486, align 1, !tbaa !12
  %488 = sext i8 %487 to i32
  %489 = icmp eq i32 %230, %488
  br i1 %489, label %490, label %493

490:                                              ; preds = %485
  %491 = load i32, i32* %237, align 16, !tbaa !14
  %492 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %491)
  br label %493

493:                                              ; preds = %490, %485
  %494 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 22
  %495 = load i8, i8* %494, align 2, !tbaa !12
  %496 = sext i8 %495 to i32
  %497 = icmp eq i32 %230, %496
  br i1 %497, label %498, label %501

498:                                              ; preds = %493
  %499 = load i32, i32* %237, align 16, !tbaa !14
  %500 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %499)
  br label %501

501:                                              ; preds = %498, %493
  %502 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 23
  %503 = load i8, i8* %502, align 1, !tbaa !12
  %504 = sext i8 %503 to i32
  %505 = icmp eq i32 %230, %504
  br i1 %505, label %506, label %509

506:                                              ; preds = %501
  %507 = load i32, i32* %237, align 16, !tbaa !14
  %508 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %507)
  br label %509

509:                                              ; preds = %506, %501
  %510 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 24
  %511 = load i8, i8* %510, align 4, !tbaa !12
  %512 = sext i8 %511 to i32
  %513 = icmp eq i32 %230, %512
  br i1 %513, label %514, label %517

514:                                              ; preds = %509
  %515 = load i32, i32* %237, align 16, !tbaa !14
  %516 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %515)
  br label %517

517:                                              ; preds = %514, %509
  %518 = getelementptr inbounds [1000 x %struct.shu], [1000 x %struct.shu]* %1, i64 0, i64 %236, i32 1, i64 25
  %519 = load i8, i8* %518, align 1, !tbaa !12
  %520 = sext i8 %519 to i32
  %521 = icmp eq i32 %230, %520
  br i1 %521, label %522, label %525

522:                                              ; preds = %517
  %523 = load i32, i32* %237, align 16, !tbaa !14
  %524 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %523)
  br label %525

525:                                              ; preds = %522, %517
  %526 = add nuw nsw i64 %236, 1
  %527 = load i32, i32* %2, align 4, !tbaa !5
  %528 = sext i32 %527 to i64
  %529 = icmp slt i64 %526, %528
  br i1 %529, label %235, label %250, !llvm.loop !17
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = distinct !{!11, !10}
!12 = !{!7, !7, i64 0}
!13 = distinct !{!13, !10}
!14 = !{!15, !6, i64 0}
!15 = !{!"shu", !6, i64 0, !7, i64 4}
!16 = distinct !{!16, !10}
!17 = distinct !{!17, !10}
