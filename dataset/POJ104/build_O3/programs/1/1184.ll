; ModuleID = 'source-C-CXX/1/1184.c'
source_filename = "source-C-CXX/1/1184.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.book = type { i32, [27 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@book = dso_local global [1000 x %struct.book] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [26 x i8], align 16
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #4
  %4 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %4) #4
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %6 = load i32, i32* %1, align 4, !tbaa !5
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %22, %0
  %9 = phi i32 [ %6, %0 ], [ %28, %22 ]
  %10 = bitcast [26 x i8]* %2 to <16 x i8>*
  store <16 x i8> <i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79, i8 80>, <16 x i8>* %10, align 16, !tbaa !9
  %11 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 16
  store i8 81, i8* %11, align 16, !tbaa !9
  %12 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 17
  store i8 82, i8* %12, align 1, !tbaa !9
  %13 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 18
  store i8 83, i8* %13, align 2, !tbaa !9
  %14 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 19
  store i8 84, i8* %14, align 1, !tbaa !9
  %15 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 20
  store i8 85, i8* %15, align 4, !tbaa !9
  %16 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 21
  store i8 86, i8* %16, align 1, !tbaa !9
  %17 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 22
  store i8 87, i8* %17, align 2, !tbaa !9
  %18 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 23
  store i8 88, i8* %18, align 1, !tbaa !9
  %19 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 24
  store i8 89, i8* %19, align 8, !tbaa !9
  %20 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 25
  store i8 90, i8* %20, align 1, !tbaa !9
  %21 = icmp sgt i32 %9, 0
  br i1 %21, label %31, label %129

22:                                               ; preds = %0, %22
  %23 = phi i64 [ %27, %22 ], [ 0, %0 ]
  %24 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* @book, i64 0, i64 %23, i32 0
  %25 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* @book, i64 0, i64 %23, i32 1, i64 0
  %26 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %24, i8* nonnull %25)
  %27 = add nuw nsw i64 %23, 1
  %28 = load i32, i32* %1, align 4, !tbaa !5
  %29 = sext i32 %28 to i64
  %30 = icmp slt i64 %27, %29
  br i1 %30, label %22, label %8, !llvm.loop !10

31:                                               ; preds = %8
  %32 = zext i32 %9 to i64
  br label %33

33:                                               ; preds = %31, %100
  %34 = phi i32 [ 0, %31 ], [ %101, %100 ]
  %35 = phi i32 [ 0, %31 ], [ %102, %100 ]
  %36 = phi i32 [ 0, %31 ], [ %103, %100 ]
  %37 = phi i32 [ 0, %31 ], [ %104, %100 ]
  %38 = phi i32 [ 0, %31 ], [ %105, %100 ]
  %39 = phi i32 [ 0, %31 ], [ %106, %100 ]
  %40 = phi i32 [ 0, %31 ], [ %107, %100 ]
  %41 = phi i32 [ 0, %31 ], [ %108, %100 ]
  %42 = phi i32 [ 0, %31 ], [ %109, %100 ]
  %43 = phi i32 [ 0, %31 ], [ %110, %100 ]
  %44 = phi i32 [ 0, %31 ], [ %111, %100 ]
  %45 = phi i32 [ 0, %31 ], [ %112, %100 ]
  %46 = phi i32 [ 0, %31 ], [ %113, %100 ]
  %47 = phi i32 [ 0, %31 ], [ %114, %100 ]
  %48 = phi i32 [ 0, %31 ], [ %115, %100 ]
  %49 = phi i32 [ 0, %31 ], [ %116, %100 ]
  %50 = phi i32 [ 0, %31 ], [ %117, %100 ]
  %51 = phi i32 [ 0, %31 ], [ %118, %100 ]
  %52 = phi i32 [ 0, %31 ], [ %119, %100 ]
  %53 = phi i32 [ 0, %31 ], [ %120, %100 ]
  %54 = phi i32 [ 0, %31 ], [ %121, %100 ]
  %55 = phi i32 [ 0, %31 ], [ %122, %100 ]
  %56 = phi i32 [ 0, %31 ], [ %123, %100 ]
  %57 = phi i32 [ 0, %31 ], [ %124, %100 ]
  %58 = phi i32 [ 0, %31 ], [ %125, %100 ]
  %59 = phi i32 [ 0, %31 ], [ %126, %100 ]
  %60 = phi i64 [ 0, %31 ], [ %127, %100 ]
  %61 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* @book, i64 0, i64 %60, i32 1, i64 0
  %62 = call i64 @strlen(i8* noundef nonnull %61) #5
  %63 = trunc i64 %62 to i32
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %100

65:                                               ; preds = %33
  %66 = shl i64 %62, 32
  %67 = ashr exact i64 %66, 32
  br label %68

68:                                               ; preds = %65, %317
  %69 = phi i32 [ %34, %65 ], [ %330, %317 ]
  %70 = phi i32 [ %35, %65 ], [ %331, %317 ]
  %71 = phi i32 [ %36, %65 ], [ %329, %317 ]
  %72 = phi i32 [ %37, %65 ], [ %332, %317 ]
  %73 = phi i32 [ %38, %65 ], [ %328, %317 ]
  %74 = phi i32 [ %39, %65 ], [ %333, %317 ]
  %75 = phi i32 [ %40, %65 ], [ %327, %317 ]
  %76 = phi i32 [ %41, %65 ], [ %334, %317 ]
  %77 = phi i32 [ %42, %65 ], [ %326, %317 ]
  %78 = phi i32 [ %43, %65 ], [ %335, %317 ]
  %79 = phi i32 [ %44, %65 ], [ %325, %317 ]
  %80 = phi i32 [ %45, %65 ], [ %336, %317 ]
  %81 = phi i32 [ %46, %65 ], [ %324, %317 ]
  %82 = phi i32 [ %47, %65 ], [ %337, %317 ]
  %83 = phi i32 [ %48, %65 ], [ %323, %317 ]
  %84 = phi i32 [ %49, %65 ], [ %338, %317 ]
  %85 = phi i32 [ %50, %65 ], [ %322, %317 ]
  %86 = phi i32 [ %51, %65 ], [ %339, %317 ]
  %87 = phi i32 [ %52, %65 ], [ %321, %317 ]
  %88 = phi i32 [ %53, %65 ], [ %340, %317 ]
  %89 = phi i32 [ %54, %65 ], [ %320, %317 ]
  %90 = phi i32 [ %55, %65 ], [ %341, %317 ]
  %91 = phi i32 [ %56, %65 ], [ %319, %317 ]
  %92 = phi i32 [ %57, %65 ], [ %342, %317 ]
  %93 = phi i32 [ %58, %65 ], [ %318, %317 ]
  %94 = phi i32 [ %59, %65 ], [ %343, %317 ]
  %95 = phi i64 [ 0, %65 ], [ %344, %317 ]
  %96 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* @book, i64 0, i64 %60, i32 1, i64 %95
  %97 = load i8, i8* %96, align 1, !tbaa !9
  switch i8 %97, label %317 [
    i8 65, label %98
    i8 66, label %267
    i8 67, label %269
    i8 68, label %271
    i8 69, label %273
    i8 70, label %275
    i8 71, label %277
    i8 72, label %279
    i8 73, label %281
    i8 74, label %283
    i8 75, label %285
    i8 76, label %287
    i8 77, label %289
    i8 78, label %291
    i8 79, label %293
    i8 80, label %295
    i8 81, label %297
    i8 82, label %299
    i8 83, label %301
    i8 84, label %303
    i8 85, label %305
    i8 86, label %307
    i8 87, label %309
    i8 88, label %311
    i8 89, label %313
    i8 90, label %315
  ]

98:                                               ; preds = %68
  %99 = add nsw i32 %69, 1
  br label %317

100:                                              ; preds = %317, %33
  %101 = phi i32 [ %34, %33 ], [ %330, %317 ]
  %102 = phi i32 [ %35, %33 ], [ %331, %317 ]
  %103 = phi i32 [ %36, %33 ], [ %329, %317 ]
  %104 = phi i32 [ %37, %33 ], [ %332, %317 ]
  %105 = phi i32 [ %38, %33 ], [ %328, %317 ]
  %106 = phi i32 [ %39, %33 ], [ %333, %317 ]
  %107 = phi i32 [ %40, %33 ], [ %327, %317 ]
  %108 = phi i32 [ %41, %33 ], [ %334, %317 ]
  %109 = phi i32 [ %42, %33 ], [ %326, %317 ]
  %110 = phi i32 [ %43, %33 ], [ %335, %317 ]
  %111 = phi i32 [ %44, %33 ], [ %325, %317 ]
  %112 = phi i32 [ %45, %33 ], [ %336, %317 ]
  %113 = phi i32 [ %46, %33 ], [ %324, %317 ]
  %114 = phi i32 [ %47, %33 ], [ %337, %317 ]
  %115 = phi i32 [ %48, %33 ], [ %323, %317 ]
  %116 = phi i32 [ %49, %33 ], [ %338, %317 ]
  %117 = phi i32 [ %50, %33 ], [ %322, %317 ]
  %118 = phi i32 [ %51, %33 ], [ %339, %317 ]
  %119 = phi i32 [ %52, %33 ], [ %321, %317 ]
  %120 = phi i32 [ %53, %33 ], [ %340, %317 ]
  %121 = phi i32 [ %54, %33 ], [ %320, %317 ]
  %122 = phi i32 [ %55, %33 ], [ %341, %317 ]
  %123 = phi i32 [ %56, %33 ], [ %319, %317 ]
  %124 = phi i32 [ %57, %33 ], [ %342, %317 ]
  %125 = phi i32 [ %58, %33 ], [ %318, %317 ]
  %126 = phi i32 [ %59, %33 ], [ %343, %317 ]
  %127 = add nuw nsw i64 %60, 1
  %128 = icmp eq i64 %127, %32
  br i1 %128, label %129, label %33, !llvm.loop !12

129:                                              ; preds = %100, %8
  %130 = phi i32 [ 0, %8 ], [ %101, %100 ]
  %131 = phi i32 [ 0, %8 ], [ %102, %100 ]
  %132 = phi i32 [ 0, %8 ], [ %103, %100 ]
  %133 = phi i32 [ 0, %8 ], [ %104, %100 ]
  %134 = phi i32 [ 0, %8 ], [ %105, %100 ]
  %135 = phi i32 [ 0, %8 ], [ %106, %100 ]
  %136 = phi i32 [ 0, %8 ], [ %107, %100 ]
  %137 = phi i32 [ 0, %8 ], [ %108, %100 ]
  %138 = phi i32 [ 0, %8 ], [ %109, %100 ]
  %139 = phi i32 [ 0, %8 ], [ %110, %100 ]
  %140 = phi i32 [ 0, %8 ], [ %111, %100 ]
  %141 = phi i32 [ 0, %8 ], [ %112, %100 ]
  %142 = phi i32 [ 0, %8 ], [ %113, %100 ]
  %143 = phi i32 [ 0, %8 ], [ %114, %100 ]
  %144 = phi i32 [ 0, %8 ], [ %115, %100 ]
  %145 = phi i32 [ 0, %8 ], [ %116, %100 ]
  %146 = phi i32 [ 0, %8 ], [ %117, %100 ]
  %147 = phi i32 [ 0, %8 ], [ %118, %100 ]
  %148 = phi i32 [ 0, %8 ], [ %119, %100 ]
  %149 = phi i32 [ 0, %8 ], [ %120, %100 ]
  %150 = phi i32 [ 0, %8 ], [ %121, %100 ]
  %151 = phi i32 [ 0, %8 ], [ %122, %100 ]
  %152 = phi i32 [ 0, %8 ], [ %123, %100 ]
  %153 = phi i32 [ 0, %8 ], [ %124, %100 ]
  %154 = phi i32 [ 0, %8 ], [ %125, %100 ]
  %155 = phi i32 [ 0, %8 ], [ %126, %100 ]
  %156 = icmp sgt i32 %131, %130
  %157 = select i1 %156, i32 %131, i32 %130
  %158 = zext i1 %156 to i64
  %159 = icmp sgt i32 %132, %157
  %160 = select i1 %159, i32 %132, i32 %157
  %161 = select i1 %159, i64 2, i64 %158
  %162 = icmp sgt i32 %133, %160
  %163 = select i1 %162, i32 %133, i32 %160
  %164 = select i1 %162, i64 3, i64 %161
  %165 = icmp sgt i32 %134, %163
  %166 = select i1 %165, i32 %134, i32 %163
  %167 = select i1 %165, i64 4, i64 %164
  %168 = icmp sgt i32 %135, %166
  %169 = select i1 %168, i32 %135, i32 %166
  %170 = select i1 %168, i64 5, i64 %167
  %171 = icmp sgt i32 %136, %169
  %172 = select i1 %171, i32 %136, i32 %169
  %173 = icmp sgt i32 %137, %172
  %174 = select i1 %173, i32 %137, i32 %172
  %175 = icmp sgt i32 %138, %174
  %176 = select i1 %175, i32 %138, i32 %174
  %177 = icmp sgt i32 %139, %176
  %178 = select i1 %177, i32 %139, i32 %176
  %179 = icmp sgt i32 %140, %178
  %180 = select i1 %179, i32 %140, i32 %178
  %181 = icmp sgt i32 %141, %180
  %182 = select i1 %181, i32 %141, i32 %180
  %183 = icmp sgt i32 %142, %182
  %184 = select i1 %183, i32 %142, i32 %182
  %185 = icmp sgt i32 %143, %184
  %186 = select i1 %185, i32 %143, i32 %184
  %187 = icmp sgt i32 %144, %186
  %188 = select i1 %187, i32 %144, i32 %186
  %189 = icmp sgt i32 %145, %188
  %190 = select i1 %189, i32 %145, i32 %188
  %191 = icmp sgt i32 %146, %190
  %192 = select i1 %191, i32 %146, i32 %190
  %193 = icmp sgt i32 %147, %192
  %194 = select i1 %193, i32 %147, i32 %192
  %195 = icmp sgt i32 %148, %194
  %196 = select i1 %195, i32 %148, i32 %194
  %197 = icmp sgt i32 %149, %196
  %198 = select i1 %197, i32 %149, i32 %196
  %199 = icmp sgt i32 %150, %198
  %200 = select i1 %199, i32 %150, i32 %198
  %201 = icmp sgt i32 %151, %200
  %202 = select i1 %201, i32 %151, i32 %200
  %203 = icmp sgt i32 %152, %202
  %204 = select i1 %203, i32 %152, i32 %202
  %205 = icmp sgt i32 %153, %204
  %206 = select i1 %205, i32 %153, i32 %204
  %207 = icmp sgt i32 %154, %206
  %208 = select i1 %207, i32 %154, i32 %206
  %209 = icmp sgt i32 %155, %208
  %210 = select i1 %209, i32 %155, i32 %208
  %211 = select i1 %171, i64 6, i64 %170
  %212 = select i1 %173, i64 7, i64 %211
  %213 = select i1 %175, i64 8, i64 %212
  %214 = select i1 %177, i64 9, i64 %213
  %215 = select i1 %179, i64 10, i64 %214
  %216 = select i1 %181, i64 11, i64 %215
  %217 = select i1 %183, i64 12, i64 %216
  %218 = select i1 %185, i64 13, i64 %217
  %219 = select i1 %187, i64 14, i64 %218
  %220 = select i1 %189, i64 15, i64 %219
  %221 = select i1 %191, i64 16, i64 %220
  %222 = select i1 %193, i64 17, i64 %221
  %223 = select i1 %195, i64 18, i64 %222
  %224 = select i1 %197, i64 19, i64 %223
  %225 = select i1 %199, i64 20, i64 %224
  %226 = select i1 %201, i64 21, i64 %225
  %227 = select i1 %203, i64 22, i64 %226
  %228 = select i1 %205, i64 23, i64 %227
  %229 = select i1 %207, i64 24, i64 %228
  %230 = select i1 %209, i64 25, i64 %229
  %231 = getelementptr inbounds [26 x i8], [26 x i8]* %2, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1, !tbaa !9
  %233 = sext i8 %232 to i32
  %234 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %233, i32 %210)
  %235 = load i32, i32* %1, align 4, !tbaa !5
  %236 = icmp sgt i32 %235, 0
  br i1 %236, label %237, label %266

237:                                              ; preds = %129, %261
  %238 = phi i32 [ %262, %261 ], [ %235, %129 ]
  %239 = phi i64 [ %263, %261 ], [ 0, %129 ]
  %240 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* @book, i64 0, i64 %239, i32 1, i64 0
  %241 = call i64 @strlen(i8* noundef nonnull %240) #5
  %242 = trunc i64 %241 to i32
  %243 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* @book, i64 0, i64 %239, i32 0
  %244 = icmp sgt i32 %242, 0
  br i1 %244, label %245, label %261

245:                                              ; preds = %237
  %246 = shl i64 %241, 32
  %247 = ashr exact i64 %246, 32
  br label %248

248:                                              ; preds = %245, %256
  %249 = phi i64 [ 0, %245 ], [ %257, %256 ]
  %250 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* @book, i64 0, i64 %239, i32 1, i64 %249
  %251 = load i8, i8* %250, align 1, !tbaa !9
  %252 = icmp eq i8 %251, %232
  br i1 %252, label %253, label %256

253:                                              ; preds = %248
  %254 = load i32, i32* %243, align 16, !tbaa !13
  %255 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %254)
  br label %256

256:                                              ; preds = %248, %253
  %257 = add nuw nsw i64 %249, 1
  %258 = icmp eq i64 %257, %247
  br i1 %258, label %259, label %248, !llvm.loop !15

259:                                              ; preds = %256
  %260 = load i32, i32* %1, align 4, !tbaa !5
  br label %261

261:                                              ; preds = %259, %237
  %262 = phi i32 [ %260, %259 ], [ %238, %237 ]
  %263 = add nuw nsw i64 %239, 1
  %264 = sext i32 %262 to i64
  %265 = icmp slt i64 %263, %264
  br i1 %265, label %237, label %266, !llvm.loop !16

266:                                              ; preds = %261, %129
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #4
  ret void

267:                                              ; preds = %68
  %268 = add nsw i32 %70, 1
  br label %317

269:                                              ; preds = %68
  %270 = add nsw i32 %71, 1
  br label %317

271:                                              ; preds = %68
  %272 = add nsw i32 %72, 1
  br label %317

273:                                              ; preds = %68
  %274 = add nsw i32 %73, 1
  br label %317

275:                                              ; preds = %68
  %276 = add nsw i32 %74, 1
  br label %317

277:                                              ; preds = %68
  %278 = add nsw i32 %75, 1
  br label %317

279:                                              ; preds = %68
  %280 = add nsw i32 %76, 1
  br label %317

281:                                              ; preds = %68
  %282 = add nsw i32 %77, 1
  br label %317

283:                                              ; preds = %68
  %284 = add nsw i32 %78, 1
  br label %317

285:                                              ; preds = %68
  %286 = add nsw i32 %79, 1
  br label %317

287:                                              ; preds = %68
  %288 = add nsw i32 %80, 1
  br label %317

289:                                              ; preds = %68
  %290 = add nsw i32 %81, 1
  br label %317

291:                                              ; preds = %68
  %292 = add nsw i32 %82, 1
  br label %317

293:                                              ; preds = %68
  %294 = add nsw i32 %83, 1
  br label %317

295:                                              ; preds = %68
  %296 = add nsw i32 %84, 1
  br label %317

297:                                              ; preds = %68
  %298 = add nsw i32 %85, 1
  br label %317

299:                                              ; preds = %68
  %300 = add nsw i32 %86, 1
  br label %317

301:                                              ; preds = %68
  %302 = add nsw i32 %87, 1
  br label %317

303:                                              ; preds = %68
  %304 = add nsw i32 %88, 1
  br label %317

305:                                              ; preds = %68
  %306 = add nsw i32 %89, 1
  br label %317

307:                                              ; preds = %68
  %308 = add nsw i32 %90, 1
  br label %317

309:                                              ; preds = %68
  %310 = add nsw i32 %91, 1
  br label %317

311:                                              ; preds = %68
  %312 = add nsw i32 %92, 1
  br label %317

313:                                              ; preds = %68
  %314 = add nsw i32 %93, 1
  br label %317

315:                                              ; preds = %68
  %316 = add nsw i32 %94, 1
  br label %317

317:                                              ; preds = %68, %267, %98, %269, %271, %273, %275, %277, %279, %281, %283, %285, %287, %289, %291, %293, %295, %297, %299, %301, %303, %305, %307, %309, %311, %313, %315
  %318 = phi i32 [ %93, %315 ], [ %314, %313 ], [ %93, %311 ], [ %93, %309 ], [ %93, %307 ], [ %93, %305 ], [ %93, %303 ], [ %93, %301 ], [ %93, %299 ], [ %93, %297 ], [ %93, %295 ], [ %93, %293 ], [ %93, %291 ], [ %93, %289 ], [ %93, %287 ], [ %93, %285 ], [ %93, %283 ], [ %93, %281 ], [ %93, %279 ], [ %93, %277 ], [ %93, %275 ], [ %93, %273 ], [ %93, %271 ], [ %93, %269 ], [ %93, %98 ], [ %93, %267 ], [ %93, %68 ]
  %319 = phi i32 [ %91, %315 ], [ %91, %313 ], [ %91, %311 ], [ %310, %309 ], [ %91, %307 ], [ %91, %305 ], [ %91, %303 ], [ %91, %301 ], [ %91, %299 ], [ %91, %297 ], [ %91, %295 ], [ %91, %293 ], [ %91, %291 ], [ %91, %289 ], [ %91, %287 ], [ %91, %285 ], [ %91, %283 ], [ %91, %281 ], [ %91, %279 ], [ %91, %277 ], [ %91, %275 ], [ %91, %273 ], [ %91, %271 ], [ %91, %269 ], [ %91, %98 ], [ %91, %267 ], [ %91, %68 ]
  %320 = phi i32 [ %89, %315 ], [ %89, %313 ], [ %89, %311 ], [ %89, %309 ], [ %89, %307 ], [ %306, %305 ], [ %89, %303 ], [ %89, %301 ], [ %89, %299 ], [ %89, %297 ], [ %89, %295 ], [ %89, %293 ], [ %89, %291 ], [ %89, %289 ], [ %89, %287 ], [ %89, %285 ], [ %89, %283 ], [ %89, %281 ], [ %89, %279 ], [ %89, %277 ], [ %89, %275 ], [ %89, %273 ], [ %89, %271 ], [ %89, %269 ], [ %89, %98 ], [ %89, %267 ], [ %89, %68 ]
  %321 = phi i32 [ %87, %315 ], [ %87, %313 ], [ %87, %311 ], [ %87, %309 ], [ %87, %307 ], [ %87, %305 ], [ %87, %303 ], [ %302, %301 ], [ %87, %299 ], [ %87, %297 ], [ %87, %295 ], [ %87, %293 ], [ %87, %291 ], [ %87, %289 ], [ %87, %287 ], [ %87, %285 ], [ %87, %283 ], [ %87, %281 ], [ %87, %279 ], [ %87, %277 ], [ %87, %275 ], [ %87, %273 ], [ %87, %271 ], [ %87, %269 ], [ %87, %98 ], [ %87, %267 ], [ %87, %68 ]
  %322 = phi i32 [ %85, %315 ], [ %85, %313 ], [ %85, %311 ], [ %85, %309 ], [ %85, %307 ], [ %85, %305 ], [ %85, %303 ], [ %85, %301 ], [ %85, %299 ], [ %298, %297 ], [ %85, %295 ], [ %85, %293 ], [ %85, %291 ], [ %85, %289 ], [ %85, %287 ], [ %85, %285 ], [ %85, %283 ], [ %85, %281 ], [ %85, %279 ], [ %85, %277 ], [ %85, %275 ], [ %85, %273 ], [ %85, %271 ], [ %85, %269 ], [ %85, %98 ], [ %85, %267 ], [ %85, %68 ]
  %323 = phi i32 [ %83, %315 ], [ %83, %313 ], [ %83, %311 ], [ %83, %309 ], [ %83, %307 ], [ %83, %305 ], [ %83, %303 ], [ %83, %301 ], [ %83, %299 ], [ %83, %297 ], [ %83, %295 ], [ %294, %293 ], [ %83, %291 ], [ %83, %289 ], [ %83, %287 ], [ %83, %285 ], [ %83, %283 ], [ %83, %281 ], [ %83, %279 ], [ %83, %277 ], [ %83, %275 ], [ %83, %273 ], [ %83, %271 ], [ %83, %269 ], [ %83, %98 ], [ %83, %267 ], [ %83, %68 ]
  %324 = phi i32 [ %81, %315 ], [ %81, %313 ], [ %81, %311 ], [ %81, %309 ], [ %81, %307 ], [ %81, %305 ], [ %81, %303 ], [ %81, %301 ], [ %81, %299 ], [ %81, %297 ], [ %81, %295 ], [ %81, %293 ], [ %81, %291 ], [ %290, %289 ], [ %81, %287 ], [ %81, %285 ], [ %81, %283 ], [ %81, %281 ], [ %81, %279 ], [ %81, %277 ], [ %81, %275 ], [ %81, %273 ], [ %81, %271 ], [ %81, %269 ], [ %81, %98 ], [ %81, %267 ], [ %81, %68 ]
  %325 = phi i32 [ %79, %315 ], [ %79, %313 ], [ %79, %311 ], [ %79, %309 ], [ %79, %307 ], [ %79, %305 ], [ %79, %303 ], [ %79, %301 ], [ %79, %299 ], [ %79, %297 ], [ %79, %295 ], [ %79, %293 ], [ %79, %291 ], [ %79, %289 ], [ %79, %287 ], [ %286, %285 ], [ %79, %283 ], [ %79, %281 ], [ %79, %279 ], [ %79, %277 ], [ %79, %275 ], [ %79, %273 ], [ %79, %271 ], [ %79, %269 ], [ %79, %98 ], [ %79, %267 ], [ %79, %68 ]
  %326 = phi i32 [ %77, %315 ], [ %77, %313 ], [ %77, %311 ], [ %77, %309 ], [ %77, %307 ], [ %77, %305 ], [ %77, %303 ], [ %77, %301 ], [ %77, %299 ], [ %77, %297 ], [ %77, %295 ], [ %77, %293 ], [ %77, %291 ], [ %77, %289 ], [ %77, %287 ], [ %77, %285 ], [ %77, %283 ], [ %282, %281 ], [ %77, %279 ], [ %77, %277 ], [ %77, %275 ], [ %77, %273 ], [ %77, %271 ], [ %77, %269 ], [ %77, %98 ], [ %77, %267 ], [ %77, %68 ]
  %327 = phi i32 [ %75, %315 ], [ %75, %313 ], [ %75, %311 ], [ %75, %309 ], [ %75, %307 ], [ %75, %305 ], [ %75, %303 ], [ %75, %301 ], [ %75, %299 ], [ %75, %297 ], [ %75, %295 ], [ %75, %293 ], [ %75, %291 ], [ %75, %289 ], [ %75, %287 ], [ %75, %285 ], [ %75, %283 ], [ %75, %281 ], [ %75, %279 ], [ %278, %277 ], [ %75, %275 ], [ %75, %273 ], [ %75, %271 ], [ %75, %269 ], [ %75, %98 ], [ %75, %267 ], [ %75, %68 ]
  %328 = phi i32 [ %73, %315 ], [ %73, %313 ], [ %73, %311 ], [ %73, %309 ], [ %73, %307 ], [ %73, %305 ], [ %73, %303 ], [ %73, %301 ], [ %73, %299 ], [ %73, %297 ], [ %73, %295 ], [ %73, %293 ], [ %73, %291 ], [ %73, %289 ], [ %73, %287 ], [ %73, %285 ], [ %73, %283 ], [ %73, %281 ], [ %73, %279 ], [ %73, %277 ], [ %73, %275 ], [ %274, %273 ], [ %73, %271 ], [ %73, %269 ], [ %73, %98 ], [ %73, %267 ], [ %73, %68 ]
  %329 = phi i32 [ %71, %315 ], [ %71, %313 ], [ %71, %311 ], [ %71, %309 ], [ %71, %307 ], [ %71, %305 ], [ %71, %303 ], [ %71, %301 ], [ %71, %299 ], [ %71, %297 ], [ %71, %295 ], [ %71, %293 ], [ %71, %291 ], [ %71, %289 ], [ %71, %287 ], [ %71, %285 ], [ %71, %283 ], [ %71, %281 ], [ %71, %279 ], [ %71, %277 ], [ %71, %275 ], [ %71, %273 ], [ %71, %271 ], [ %270, %269 ], [ %71, %98 ], [ %71, %267 ], [ %71, %68 ]
  %330 = phi i32 [ %69, %315 ], [ %69, %313 ], [ %69, %311 ], [ %69, %309 ], [ %69, %307 ], [ %69, %305 ], [ %69, %303 ], [ %69, %301 ], [ %69, %299 ], [ %69, %297 ], [ %69, %295 ], [ %69, %293 ], [ %69, %291 ], [ %69, %289 ], [ %69, %287 ], [ %69, %285 ], [ %69, %283 ], [ %69, %281 ], [ %69, %279 ], [ %69, %277 ], [ %69, %275 ], [ %69, %273 ], [ %69, %271 ], [ %69, %269 ], [ %99, %98 ], [ %69, %267 ], [ %69, %68 ]
  %331 = phi i32 [ %70, %315 ], [ %70, %313 ], [ %70, %311 ], [ %70, %309 ], [ %70, %307 ], [ %70, %305 ], [ %70, %303 ], [ %70, %301 ], [ %70, %299 ], [ %70, %297 ], [ %70, %295 ], [ %70, %293 ], [ %70, %291 ], [ %70, %289 ], [ %70, %287 ], [ %70, %285 ], [ %70, %283 ], [ %70, %281 ], [ %70, %279 ], [ %70, %277 ], [ %70, %275 ], [ %70, %273 ], [ %70, %271 ], [ %70, %269 ], [ %70, %98 ], [ %268, %267 ], [ %70, %68 ]
  %332 = phi i32 [ %72, %315 ], [ %72, %313 ], [ %72, %311 ], [ %72, %309 ], [ %72, %307 ], [ %72, %305 ], [ %72, %303 ], [ %72, %301 ], [ %72, %299 ], [ %72, %297 ], [ %72, %295 ], [ %72, %293 ], [ %72, %291 ], [ %72, %289 ], [ %72, %287 ], [ %72, %285 ], [ %72, %283 ], [ %72, %281 ], [ %72, %279 ], [ %72, %277 ], [ %72, %275 ], [ %72, %273 ], [ %272, %271 ], [ %72, %269 ], [ %72, %98 ], [ %72, %267 ], [ %72, %68 ]
  %333 = phi i32 [ %74, %315 ], [ %74, %313 ], [ %74, %311 ], [ %74, %309 ], [ %74, %307 ], [ %74, %305 ], [ %74, %303 ], [ %74, %301 ], [ %74, %299 ], [ %74, %297 ], [ %74, %295 ], [ %74, %293 ], [ %74, %291 ], [ %74, %289 ], [ %74, %287 ], [ %74, %285 ], [ %74, %283 ], [ %74, %281 ], [ %74, %279 ], [ %74, %277 ], [ %276, %275 ], [ %74, %273 ], [ %74, %271 ], [ %74, %269 ], [ %74, %98 ], [ %74, %267 ], [ %74, %68 ]
  %334 = phi i32 [ %76, %315 ], [ %76, %313 ], [ %76, %311 ], [ %76, %309 ], [ %76, %307 ], [ %76, %305 ], [ %76, %303 ], [ %76, %301 ], [ %76, %299 ], [ %76, %297 ], [ %76, %295 ], [ %76, %293 ], [ %76, %291 ], [ %76, %289 ], [ %76, %287 ], [ %76, %285 ], [ %76, %283 ], [ %76, %281 ], [ %280, %279 ], [ %76, %277 ], [ %76, %275 ], [ %76, %273 ], [ %76, %271 ], [ %76, %269 ], [ %76, %98 ], [ %76, %267 ], [ %76, %68 ]
  %335 = phi i32 [ %78, %315 ], [ %78, %313 ], [ %78, %311 ], [ %78, %309 ], [ %78, %307 ], [ %78, %305 ], [ %78, %303 ], [ %78, %301 ], [ %78, %299 ], [ %78, %297 ], [ %78, %295 ], [ %78, %293 ], [ %78, %291 ], [ %78, %289 ], [ %78, %287 ], [ %78, %285 ], [ %284, %283 ], [ %78, %281 ], [ %78, %279 ], [ %78, %277 ], [ %78, %275 ], [ %78, %273 ], [ %78, %271 ], [ %78, %269 ], [ %78, %98 ], [ %78, %267 ], [ %78, %68 ]
  %336 = phi i32 [ %80, %315 ], [ %80, %313 ], [ %80, %311 ], [ %80, %309 ], [ %80, %307 ], [ %80, %305 ], [ %80, %303 ], [ %80, %301 ], [ %80, %299 ], [ %80, %297 ], [ %80, %295 ], [ %80, %293 ], [ %80, %291 ], [ %80, %289 ], [ %288, %287 ], [ %80, %285 ], [ %80, %283 ], [ %80, %281 ], [ %80, %279 ], [ %80, %277 ], [ %80, %275 ], [ %80, %273 ], [ %80, %271 ], [ %80, %269 ], [ %80, %98 ], [ %80, %267 ], [ %80, %68 ]
  %337 = phi i32 [ %82, %315 ], [ %82, %313 ], [ %82, %311 ], [ %82, %309 ], [ %82, %307 ], [ %82, %305 ], [ %82, %303 ], [ %82, %301 ], [ %82, %299 ], [ %82, %297 ], [ %82, %295 ], [ %82, %293 ], [ %292, %291 ], [ %82, %289 ], [ %82, %287 ], [ %82, %285 ], [ %82, %283 ], [ %82, %281 ], [ %82, %279 ], [ %82, %277 ], [ %82, %275 ], [ %82, %273 ], [ %82, %271 ], [ %82, %269 ], [ %82, %98 ], [ %82, %267 ], [ %82, %68 ]
  %338 = phi i32 [ %84, %315 ], [ %84, %313 ], [ %84, %311 ], [ %84, %309 ], [ %84, %307 ], [ %84, %305 ], [ %84, %303 ], [ %84, %301 ], [ %84, %299 ], [ %84, %297 ], [ %296, %295 ], [ %84, %293 ], [ %84, %291 ], [ %84, %289 ], [ %84, %287 ], [ %84, %285 ], [ %84, %283 ], [ %84, %281 ], [ %84, %279 ], [ %84, %277 ], [ %84, %275 ], [ %84, %273 ], [ %84, %271 ], [ %84, %269 ], [ %84, %98 ], [ %84, %267 ], [ %84, %68 ]
  %339 = phi i32 [ %86, %315 ], [ %86, %313 ], [ %86, %311 ], [ %86, %309 ], [ %86, %307 ], [ %86, %305 ], [ %86, %303 ], [ %86, %301 ], [ %300, %299 ], [ %86, %297 ], [ %86, %295 ], [ %86, %293 ], [ %86, %291 ], [ %86, %289 ], [ %86, %287 ], [ %86, %285 ], [ %86, %283 ], [ %86, %281 ], [ %86, %279 ], [ %86, %277 ], [ %86, %275 ], [ %86, %273 ], [ %86, %271 ], [ %86, %269 ], [ %86, %98 ], [ %86, %267 ], [ %86, %68 ]
  %340 = phi i32 [ %88, %315 ], [ %88, %313 ], [ %88, %311 ], [ %88, %309 ], [ %88, %307 ], [ %88, %305 ], [ %304, %303 ], [ %88, %301 ], [ %88, %299 ], [ %88, %297 ], [ %88, %295 ], [ %88, %293 ], [ %88, %291 ], [ %88, %289 ], [ %88, %287 ], [ %88, %285 ], [ %88, %283 ], [ %88, %281 ], [ %88, %279 ], [ %88, %277 ], [ %88, %275 ], [ %88, %273 ], [ %88, %271 ], [ %88, %269 ], [ %88, %98 ], [ %88, %267 ], [ %88, %68 ]
  %341 = phi i32 [ %90, %315 ], [ %90, %313 ], [ %90, %311 ], [ %90, %309 ], [ %308, %307 ], [ %90, %305 ], [ %90, %303 ], [ %90, %301 ], [ %90, %299 ], [ %90, %297 ], [ %90, %295 ], [ %90, %293 ], [ %90, %291 ], [ %90, %289 ], [ %90, %287 ], [ %90, %285 ], [ %90, %283 ], [ %90, %281 ], [ %90, %279 ], [ %90, %277 ], [ %90, %275 ], [ %90, %273 ], [ %90, %271 ], [ %90, %269 ], [ %90, %98 ], [ %90, %267 ], [ %90, %68 ]
  %342 = phi i32 [ %92, %315 ], [ %92, %313 ], [ %312, %311 ], [ %92, %309 ], [ %92, %307 ], [ %92, %305 ], [ %92, %303 ], [ %92, %301 ], [ %92, %299 ], [ %92, %297 ], [ %92, %295 ], [ %92, %293 ], [ %92, %291 ], [ %92, %289 ], [ %92, %287 ], [ %92, %285 ], [ %92, %283 ], [ %92, %281 ], [ %92, %279 ], [ %92, %277 ], [ %92, %275 ], [ %92, %273 ], [ %92, %271 ], [ %92, %269 ], [ %92, %98 ], [ %92, %267 ], [ %92, %68 ]
  %343 = phi i32 [ %316, %315 ], [ %94, %313 ], [ %94, %311 ], [ %94, %309 ], [ %94, %307 ], [ %94, %305 ], [ %94, %303 ], [ %94, %301 ], [ %94, %299 ], [ %94, %297 ], [ %94, %295 ], [ %94, %293 ], [ %94, %291 ], [ %94, %289 ], [ %94, %287 ], [ %94, %285 ], [ %94, %283 ], [ %94, %281 ], [ %94, %279 ], [ %94, %277 ], [ %94, %275 ], [ %94, %273 ], [ %94, %271 ], [ %94, %269 ], [ %94, %98 ], [ %94, %267 ], [ %94, %68 ]
  %344 = add nuw nsw i64 %95, 1
  %345 = icmp eq i64 %344, %67
  br i1 %345, label %100, label %68, !llvm.loop !17
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = distinct !{!12, !11}
!13 = !{!14, !6, i64 0}
!14 = !{!"book", !6, i64 0, !7, i64 4}
!15 = distinct !{!15, !11}
!16 = distinct !{!16, !11}
!17 = distinct !{!17, !11}
