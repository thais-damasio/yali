; ModuleID = 'source-C-CXX/1/595.c'
source_filename = "source-C-CXX/1/595.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.list = type { i32, [27 x i8], i32 }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [999 x %struct.list], align 16
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5
  %4 = bitcast [999 x %struct.list]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 35964, i8* nonnull %4) #5
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %6 = load i32, i32* %1, align 4, !tbaa !5
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %10, label %60

8:                                                ; preds = %10
  %9 = icmp sgt i32 %20, 0
  br i1 %9, label %23, label %60

10:                                               ; preds = %0, %10
  %11 = phi i64 [ %19, %10 ], [ 0, %0 ]
  %12 = getelementptr inbounds [999 x %struct.list], [999 x %struct.list]* %2, i64 0, i64 %11, i32 0
  %13 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %12)
  %14 = getelementptr inbounds [999 x %struct.list], [999 x %struct.list]* %2, i64 0, i64 %11, i32 1, i64 0
  %15 = call i32 (i8*, ...) bitcast (i32 (...)* @gets to i32 (i8*, ...)*)(i8* nonnull %14) #5
  %16 = call i64 @strlen(i8* noundef nonnull %14) #6
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds [999 x %struct.list], [999 x %struct.list]* %2, i64 0, i64 %11, i32 2
  store i32 %17, i32* %18, align 4, !tbaa !9
  %19 = add nuw nsw i64 %11, 1
  %20 = load i32, i32* %1, align 4, !tbaa !5
  %21 = sext i32 %20 to i64
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %10, label %8, !llvm.loop !11

23:                                               ; preds = %8
  %24 = zext i32 %20 to i64
  br label %25

25:                                               ; preds = %23, %278
  %26 = phi i32 [ 0, %23 ], [ %279, %278 ]
  %27 = phi i32 [ 0, %23 ], [ %280, %278 ]
  %28 = phi i32 [ 0, %23 ], [ %281, %278 ]
  %29 = phi i32 [ 0, %23 ], [ %282, %278 ]
  %30 = phi i32 [ 0, %23 ], [ %283, %278 ]
  %31 = phi i32 [ 0, %23 ], [ %284, %278 ]
  %32 = phi i32 [ 0, %23 ], [ %285, %278 ]
  %33 = phi i32 [ 0, %23 ], [ %286, %278 ]
  %34 = phi i32 [ 0, %23 ], [ %287, %278 ]
  %35 = phi i32 [ 0, %23 ], [ %288, %278 ]
  %36 = phi i32 [ 0, %23 ], [ %289, %278 ]
  %37 = phi i32 [ 0, %23 ], [ %290, %278 ]
  %38 = phi i32 [ 0, %23 ], [ %291, %278 ]
  %39 = phi i32 [ 0, %23 ], [ %292, %278 ]
  %40 = phi i32 [ 0, %23 ], [ %293, %278 ]
  %41 = phi i32 [ 0, %23 ], [ %294, %278 ]
  %42 = phi i32 [ 0, %23 ], [ %295, %278 ]
  %43 = phi i32 [ 0, %23 ], [ %296, %278 ]
  %44 = phi i32 [ 0, %23 ], [ %297, %278 ]
  %45 = phi i32 [ 0, %23 ], [ %298, %278 ]
  %46 = phi i32 [ 0, %23 ], [ %299, %278 ]
  %47 = phi i32 [ 0, %23 ], [ %300, %278 ]
  %48 = phi i32 [ 0, %23 ], [ %301, %278 ]
  %49 = phi i32 [ 0, %23 ], [ %302, %278 ]
  %50 = phi i32 [ 0, %23 ], [ %303, %278 ]
  %51 = phi i32 [ 0, %23 ], [ %304, %278 ]
  %52 = phi i64 [ 0, %23 ], [ %305, %278 ]
  %53 = getelementptr inbounds [999 x %struct.list], [999 x %struct.list]* %2, i64 0, i64 %52, i32 2
  %54 = load i32, i32* %53, align 4, !tbaa !9
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %278

56:                                               ; preds = %25
  %57 = zext i32 %54 to i64
  br label %166

58:                                               ; preds = %278
  %59 = icmp sgt i32 %279, -1
  br i1 %59, label %60, label %87

60:                                               ; preds = %0, %8, %58
  %61 = phi i32 [ %304, %58 ], [ 0, %8 ], [ 0, %0 ]
  %62 = phi i32 [ %303, %58 ], [ 0, %8 ], [ 0, %0 ]
  %63 = phi i32 [ %302, %58 ], [ 0, %8 ], [ 0, %0 ]
  %64 = phi i32 [ %301, %58 ], [ 0, %8 ], [ 0, %0 ]
  %65 = phi i32 [ %300, %58 ], [ 0, %8 ], [ 0, %0 ]
  %66 = phi i32 [ %299, %58 ], [ 0, %8 ], [ 0, %0 ]
  %67 = phi i32 [ %298, %58 ], [ 0, %8 ], [ 0, %0 ]
  %68 = phi i32 [ %297, %58 ], [ 0, %8 ], [ 0, %0 ]
  %69 = phi i32 [ %296, %58 ], [ 0, %8 ], [ 0, %0 ]
  %70 = phi i32 [ %295, %58 ], [ 0, %8 ], [ 0, %0 ]
  %71 = phi i32 [ %294, %58 ], [ 0, %8 ], [ 0, %0 ]
  %72 = phi i32 [ %293, %58 ], [ 0, %8 ], [ 0, %0 ]
  %73 = phi i32 [ %292, %58 ], [ 0, %8 ], [ 0, %0 ]
  %74 = phi i32 [ %291, %58 ], [ 0, %8 ], [ 0, %0 ]
  %75 = phi i32 [ %290, %58 ], [ 0, %8 ], [ 0, %0 ]
  %76 = phi i32 [ %289, %58 ], [ 0, %8 ], [ 0, %0 ]
  %77 = phi i32 [ %288, %58 ], [ 0, %8 ], [ 0, %0 ]
  %78 = phi i32 [ %287, %58 ], [ 0, %8 ], [ 0, %0 ]
  %79 = phi i32 [ %286, %58 ], [ 0, %8 ], [ 0, %0 ]
  %80 = phi i32 [ %285, %58 ], [ 0, %8 ], [ 0, %0 ]
  %81 = phi i32 [ %284, %58 ], [ 0, %8 ], [ 0, %0 ]
  %82 = phi i32 [ %283, %58 ], [ 0, %8 ], [ 0, %0 ]
  %83 = phi i32 [ %282, %58 ], [ 0, %8 ], [ 0, %0 ]
  %84 = phi i32 [ %281, %58 ], [ 0, %8 ], [ 0, %0 ]
  %85 = phi i32 [ %280, %58 ], [ 0, %8 ], [ 0, %0 ]
  %86 = phi i32 [ %279, %58 ], [ 0, %8 ], [ 0, %0 ]
  br label %87

87:                                               ; preds = %58, %60
  %88 = phi i32 [ %61, %60 ], [ %304, %58 ]
  %89 = phi i32 [ %62, %60 ], [ %303, %58 ]
  %90 = phi i32 [ %63, %60 ], [ %302, %58 ]
  %91 = phi i32 [ %64, %60 ], [ %301, %58 ]
  %92 = phi i32 [ %65, %60 ], [ %300, %58 ]
  %93 = phi i32 [ %66, %60 ], [ %299, %58 ]
  %94 = phi i32 [ %67, %60 ], [ %298, %58 ]
  %95 = phi i32 [ %68, %60 ], [ %297, %58 ]
  %96 = phi i32 [ %69, %60 ], [ %296, %58 ]
  %97 = phi i32 [ %70, %60 ], [ %295, %58 ]
  %98 = phi i32 [ %71, %60 ], [ %294, %58 ]
  %99 = phi i32 [ %72, %60 ], [ %293, %58 ]
  %100 = phi i32 [ %73, %60 ], [ %292, %58 ]
  %101 = phi i32 [ %74, %60 ], [ %291, %58 ]
  %102 = phi i32 [ %75, %60 ], [ %290, %58 ]
  %103 = phi i32 [ %76, %60 ], [ %289, %58 ]
  %104 = phi i32 [ %77, %60 ], [ %288, %58 ]
  %105 = phi i32 [ %78, %60 ], [ %287, %58 ]
  %106 = phi i32 [ %79, %60 ], [ %286, %58 ]
  %107 = phi i32 [ %80, %60 ], [ %285, %58 ]
  %108 = phi i32 [ %81, %60 ], [ %284, %58 ]
  %109 = phi i32 [ %82, %60 ], [ %283, %58 ]
  %110 = phi i32 [ %83, %60 ], [ %282, %58 ]
  %111 = phi i32 [ %84, %60 ], [ %281, %58 ]
  %112 = phi i32 [ %85, %60 ], [ %280, %58 ]
  %113 = phi i32 [ %86, %60 ], [ %279, %58 ]
  %114 = phi i32 [ %86, %60 ], [ -1, %58 ]
  %115 = icmp sgt i32 %112, %114
  %116 = select i1 %115, i32 %112, i32 %114
  %117 = icmp sgt i32 %111, %116
  %118 = select i1 %117, i32 %111, i32 %116
  %119 = icmp sgt i32 %110, %118
  %120 = select i1 %119, i32 %110, i32 %118
  %121 = icmp sgt i32 %109, %120
  %122 = select i1 %121, i32 %109, i32 %120
  %123 = icmp sgt i32 %108, %122
  %124 = select i1 %123, i32 %108, i32 %122
  %125 = icmp sgt i32 %107, %124
  %126 = select i1 %125, i32 %107, i32 %124
  %127 = icmp sgt i32 %106, %126
  %128 = select i1 %127, i32 %106, i32 %126
  %129 = icmp sgt i32 %105, %128
  %130 = select i1 %129, i32 %105, i32 %128
  %131 = icmp sgt i32 %104, %130
  %132 = select i1 %131, i32 %104, i32 %130
  %133 = icmp sgt i32 %103, %132
  %134 = select i1 %133, i32 %103, i32 %132
  %135 = icmp sgt i32 %102, %134
  %136 = select i1 %135, i32 %102, i32 %134
  %137 = icmp sgt i32 %101, %136
  %138 = select i1 %137, i32 %101, i32 %136
  %139 = icmp sgt i32 %100, %138
  %140 = select i1 %139, i32 %100, i32 %138
  %141 = icmp sgt i32 %99, %140
  %142 = select i1 %141, i32 %99, i32 %140
  %143 = icmp sgt i32 %98, %142
  %144 = select i1 %143, i32 %98, i32 %142
  %145 = icmp sgt i32 %97, %144
  %146 = select i1 %145, i32 %97, i32 %144
  %147 = icmp sgt i32 %96, %146
  %148 = select i1 %147, i32 %96, i32 %146
  %149 = icmp sgt i32 %95, %148
  %150 = select i1 %149, i32 %95, i32 %148
  %151 = icmp sgt i32 %94, %150
  %152 = select i1 %151, i32 %94, i32 %150
  %153 = icmp sgt i32 %93, %152
  %154 = select i1 %153, i32 %93, i32 %152
  %155 = icmp sgt i32 %92, %154
  %156 = select i1 %155, i32 %92, i32 %154
  %157 = icmp sgt i32 %91, %156
  %158 = select i1 %157, i32 %91, i32 %156
  %159 = icmp sgt i32 %90, %158
  %160 = select i1 %159, i32 %90, i32 %158
  %161 = icmp sgt i32 %89, %160
  %162 = select i1 %161, i32 %89, i32 %160
  %163 = icmp sgt i32 %88, %162
  %164 = select i1 %163, i32 %88, i32 %162
  %165 = icmp eq i32 %113, %164
  br i1 %165, label %307, label %340

166:                                              ; preds = %56, %249
  %167 = phi i32 [ %26, %56 ], [ %250, %249 ]
  %168 = phi i32 [ %27, %56 ], [ %251, %249 ]
  %169 = phi i32 [ %28, %56 ], [ %252, %249 ]
  %170 = phi i32 [ %29, %56 ], [ %253, %249 ]
  %171 = phi i32 [ %30, %56 ], [ %254, %249 ]
  %172 = phi i32 [ %31, %56 ], [ %255, %249 ]
  %173 = phi i32 [ %32, %56 ], [ %256, %249 ]
  %174 = phi i32 [ %33, %56 ], [ %257, %249 ]
  %175 = phi i32 [ %34, %56 ], [ %258, %249 ]
  %176 = phi i32 [ %35, %56 ], [ %259, %249 ]
  %177 = phi i32 [ %36, %56 ], [ %260, %249 ]
  %178 = phi i32 [ %37, %56 ], [ %261, %249 ]
  %179 = phi i32 [ %38, %56 ], [ %262, %249 ]
  %180 = phi i32 [ %39, %56 ], [ %263, %249 ]
  %181 = phi i32 [ %40, %56 ], [ %264, %249 ]
  %182 = phi i32 [ %41, %56 ], [ %265, %249 ]
  %183 = phi i32 [ %42, %56 ], [ %266, %249 ]
  %184 = phi i32 [ %43, %56 ], [ %267, %249 ]
  %185 = phi i32 [ %44, %56 ], [ %268, %249 ]
  %186 = phi i32 [ %45, %56 ], [ %269, %249 ]
  %187 = phi i32 [ %46, %56 ], [ %270, %249 ]
  %188 = phi i32 [ %47, %56 ], [ %271, %249 ]
  %189 = phi i32 [ %48, %56 ], [ %272, %249 ]
  %190 = phi i32 [ %49, %56 ], [ %273, %249 ]
  %191 = phi i32 [ %50, %56 ], [ %274, %249 ]
  %192 = phi i32 [ %51, %56 ], [ %275, %249 ]
  %193 = phi i64 [ 0, %56 ], [ %276, %249 ]
  %194 = getelementptr inbounds [999 x %struct.list], [999 x %struct.list]* %2, i64 0, i64 %52, i32 1, i64 %193
  %195 = load i8, i8* %194, align 1, !tbaa !13
  %196 = sext i8 %195 to i32
  switch i32 %196, label %249 [
    i32 65, label %197
    i32 66, label %199
    i32 67, label %201
    i32 68, label %203
    i32 69, label %205
    i32 70, label %207
    i32 71, label %209
    i32 72, label %211
    i32 73, label %213
    i32 74, label %215
    i32 75, label %217
    i32 76, label %219
    i32 77, label %221
    i32 78, label %223
    i32 79, label %225
    i32 80, label %227
    i32 81, label %229
    i32 82, label %231
    i32 83, label %233
    i32 84, label %235
    i32 85, label %237
    i32 86, label %239
    i32 87, label %241
    i32 88, label %243
    i32 89, label %245
    i32 90, label %247
  ]

197:                                              ; preds = %166
  %198 = add nsw i32 %167, 1
  br label %249

199:                                              ; preds = %166
  %200 = add nsw i32 %168, 1
  br label %249

201:                                              ; preds = %166
  %202 = add nsw i32 %169, 1
  br label %249

203:                                              ; preds = %166
  %204 = add nsw i32 %170, 1
  br label %249

205:                                              ; preds = %166
  %206 = add nsw i32 %171, 1
  br label %249

207:                                              ; preds = %166
  %208 = add nsw i32 %172, 1
  br label %249

209:                                              ; preds = %166
  %210 = add nsw i32 %173, 1
  br label %249

211:                                              ; preds = %166
  %212 = add nsw i32 %174, 1
  br label %249

213:                                              ; preds = %166
  %214 = add nsw i32 %175, 1
  br label %249

215:                                              ; preds = %166
  %216 = add nsw i32 %176, 1
  br label %249

217:                                              ; preds = %166
  %218 = add nsw i32 %177, 1
  br label %249

219:                                              ; preds = %166
  %220 = add nsw i32 %178, 1
  br label %249

221:                                              ; preds = %166
  %222 = add nsw i32 %179, 1
  br label %249

223:                                              ; preds = %166
  %224 = add nsw i32 %180, 1
  br label %249

225:                                              ; preds = %166
  %226 = add nsw i32 %181, 1
  br label %249

227:                                              ; preds = %166
  %228 = add nsw i32 %182, 1
  br label %249

229:                                              ; preds = %166
  %230 = add nsw i32 %183, 1
  br label %249

231:                                              ; preds = %166
  %232 = add nsw i32 %184, 1
  br label %249

233:                                              ; preds = %166
  %234 = add nsw i32 %185, 1
  br label %249

235:                                              ; preds = %166
  %236 = add nsw i32 %186, 1
  br label %249

237:                                              ; preds = %166
  %238 = add nsw i32 %187, 1
  br label %249

239:                                              ; preds = %166
  %240 = add nsw i32 %188, 1
  br label %249

241:                                              ; preds = %166
  %242 = add nsw i32 %189, 1
  br label %249

243:                                              ; preds = %166
  %244 = add nsw i32 %190, 1
  br label %249

245:                                              ; preds = %166
  %246 = add nsw i32 %191, 1
  br label %249

247:                                              ; preds = %166
  %248 = add nsw i32 %192, 1
  br label %249

249:                                              ; preds = %197, %199, %201, %203, %205, %207, %209, %211, %213, %215, %217, %219, %221, %223, %225, %227, %229, %231, %233, %235, %237, %239, %241, %243, %245, %247, %166
  %250 = phi i32 [ %167, %166 ], [ %167, %247 ], [ %167, %245 ], [ %167, %243 ], [ %167, %241 ], [ %167, %239 ], [ %167, %237 ], [ %167, %235 ], [ %167, %233 ], [ %167, %231 ], [ %167, %229 ], [ %167, %227 ], [ %167, %225 ], [ %167, %223 ], [ %167, %221 ], [ %167, %219 ], [ %167, %217 ], [ %167, %215 ], [ %167, %213 ], [ %167, %211 ], [ %167, %209 ], [ %167, %207 ], [ %167, %205 ], [ %167, %203 ], [ %167, %201 ], [ %167, %199 ], [ %198, %197 ]
  %251 = phi i32 [ %168, %166 ], [ %168, %247 ], [ %168, %245 ], [ %168, %243 ], [ %168, %241 ], [ %168, %239 ], [ %168, %237 ], [ %168, %235 ], [ %168, %233 ], [ %168, %231 ], [ %168, %229 ], [ %168, %227 ], [ %168, %225 ], [ %168, %223 ], [ %168, %221 ], [ %168, %219 ], [ %168, %217 ], [ %168, %215 ], [ %168, %213 ], [ %168, %211 ], [ %168, %209 ], [ %168, %207 ], [ %168, %205 ], [ %168, %203 ], [ %168, %201 ], [ %200, %199 ], [ %168, %197 ]
  %252 = phi i32 [ %169, %166 ], [ %169, %247 ], [ %169, %245 ], [ %169, %243 ], [ %169, %241 ], [ %169, %239 ], [ %169, %237 ], [ %169, %235 ], [ %169, %233 ], [ %169, %231 ], [ %169, %229 ], [ %169, %227 ], [ %169, %225 ], [ %169, %223 ], [ %169, %221 ], [ %169, %219 ], [ %169, %217 ], [ %169, %215 ], [ %169, %213 ], [ %169, %211 ], [ %169, %209 ], [ %169, %207 ], [ %169, %205 ], [ %169, %203 ], [ %202, %201 ], [ %169, %199 ], [ %169, %197 ]
  %253 = phi i32 [ %170, %166 ], [ %170, %247 ], [ %170, %245 ], [ %170, %243 ], [ %170, %241 ], [ %170, %239 ], [ %170, %237 ], [ %170, %235 ], [ %170, %233 ], [ %170, %231 ], [ %170, %229 ], [ %170, %227 ], [ %170, %225 ], [ %170, %223 ], [ %170, %221 ], [ %170, %219 ], [ %170, %217 ], [ %170, %215 ], [ %170, %213 ], [ %170, %211 ], [ %170, %209 ], [ %170, %207 ], [ %170, %205 ], [ %204, %203 ], [ %170, %201 ], [ %170, %199 ], [ %170, %197 ]
  %254 = phi i32 [ %171, %166 ], [ %171, %247 ], [ %171, %245 ], [ %171, %243 ], [ %171, %241 ], [ %171, %239 ], [ %171, %237 ], [ %171, %235 ], [ %171, %233 ], [ %171, %231 ], [ %171, %229 ], [ %171, %227 ], [ %171, %225 ], [ %171, %223 ], [ %171, %221 ], [ %171, %219 ], [ %171, %217 ], [ %171, %215 ], [ %171, %213 ], [ %171, %211 ], [ %171, %209 ], [ %171, %207 ], [ %206, %205 ], [ %171, %203 ], [ %171, %201 ], [ %171, %199 ], [ %171, %197 ]
  %255 = phi i32 [ %172, %166 ], [ %172, %247 ], [ %172, %245 ], [ %172, %243 ], [ %172, %241 ], [ %172, %239 ], [ %172, %237 ], [ %172, %235 ], [ %172, %233 ], [ %172, %231 ], [ %172, %229 ], [ %172, %227 ], [ %172, %225 ], [ %172, %223 ], [ %172, %221 ], [ %172, %219 ], [ %172, %217 ], [ %172, %215 ], [ %172, %213 ], [ %172, %211 ], [ %172, %209 ], [ %208, %207 ], [ %172, %205 ], [ %172, %203 ], [ %172, %201 ], [ %172, %199 ], [ %172, %197 ]
  %256 = phi i32 [ %173, %166 ], [ %173, %247 ], [ %173, %245 ], [ %173, %243 ], [ %173, %241 ], [ %173, %239 ], [ %173, %237 ], [ %173, %235 ], [ %173, %233 ], [ %173, %231 ], [ %173, %229 ], [ %173, %227 ], [ %173, %225 ], [ %173, %223 ], [ %173, %221 ], [ %173, %219 ], [ %173, %217 ], [ %173, %215 ], [ %173, %213 ], [ %173, %211 ], [ %210, %209 ], [ %173, %207 ], [ %173, %205 ], [ %173, %203 ], [ %173, %201 ], [ %173, %199 ], [ %173, %197 ]
  %257 = phi i32 [ %174, %166 ], [ %174, %247 ], [ %174, %245 ], [ %174, %243 ], [ %174, %241 ], [ %174, %239 ], [ %174, %237 ], [ %174, %235 ], [ %174, %233 ], [ %174, %231 ], [ %174, %229 ], [ %174, %227 ], [ %174, %225 ], [ %174, %223 ], [ %174, %221 ], [ %174, %219 ], [ %174, %217 ], [ %174, %215 ], [ %174, %213 ], [ %212, %211 ], [ %174, %209 ], [ %174, %207 ], [ %174, %205 ], [ %174, %203 ], [ %174, %201 ], [ %174, %199 ], [ %174, %197 ]
  %258 = phi i32 [ %175, %166 ], [ %175, %247 ], [ %175, %245 ], [ %175, %243 ], [ %175, %241 ], [ %175, %239 ], [ %175, %237 ], [ %175, %235 ], [ %175, %233 ], [ %175, %231 ], [ %175, %229 ], [ %175, %227 ], [ %175, %225 ], [ %175, %223 ], [ %175, %221 ], [ %175, %219 ], [ %175, %217 ], [ %175, %215 ], [ %214, %213 ], [ %175, %211 ], [ %175, %209 ], [ %175, %207 ], [ %175, %205 ], [ %175, %203 ], [ %175, %201 ], [ %175, %199 ], [ %175, %197 ]
  %259 = phi i32 [ %176, %166 ], [ %176, %247 ], [ %176, %245 ], [ %176, %243 ], [ %176, %241 ], [ %176, %239 ], [ %176, %237 ], [ %176, %235 ], [ %176, %233 ], [ %176, %231 ], [ %176, %229 ], [ %176, %227 ], [ %176, %225 ], [ %176, %223 ], [ %176, %221 ], [ %176, %219 ], [ %176, %217 ], [ %216, %215 ], [ %176, %213 ], [ %176, %211 ], [ %176, %209 ], [ %176, %207 ], [ %176, %205 ], [ %176, %203 ], [ %176, %201 ], [ %176, %199 ], [ %176, %197 ]
  %260 = phi i32 [ %177, %166 ], [ %177, %247 ], [ %177, %245 ], [ %177, %243 ], [ %177, %241 ], [ %177, %239 ], [ %177, %237 ], [ %177, %235 ], [ %177, %233 ], [ %177, %231 ], [ %177, %229 ], [ %177, %227 ], [ %177, %225 ], [ %177, %223 ], [ %177, %221 ], [ %177, %219 ], [ %218, %217 ], [ %177, %215 ], [ %177, %213 ], [ %177, %211 ], [ %177, %209 ], [ %177, %207 ], [ %177, %205 ], [ %177, %203 ], [ %177, %201 ], [ %177, %199 ], [ %177, %197 ]
  %261 = phi i32 [ %178, %166 ], [ %178, %247 ], [ %178, %245 ], [ %178, %243 ], [ %178, %241 ], [ %178, %239 ], [ %178, %237 ], [ %178, %235 ], [ %178, %233 ], [ %178, %231 ], [ %178, %229 ], [ %178, %227 ], [ %178, %225 ], [ %178, %223 ], [ %178, %221 ], [ %220, %219 ], [ %178, %217 ], [ %178, %215 ], [ %178, %213 ], [ %178, %211 ], [ %178, %209 ], [ %178, %207 ], [ %178, %205 ], [ %178, %203 ], [ %178, %201 ], [ %178, %199 ], [ %178, %197 ]
  %262 = phi i32 [ %179, %166 ], [ %179, %247 ], [ %179, %245 ], [ %179, %243 ], [ %179, %241 ], [ %179, %239 ], [ %179, %237 ], [ %179, %235 ], [ %179, %233 ], [ %179, %231 ], [ %179, %229 ], [ %179, %227 ], [ %179, %225 ], [ %179, %223 ], [ %222, %221 ], [ %179, %219 ], [ %179, %217 ], [ %179, %215 ], [ %179, %213 ], [ %179, %211 ], [ %179, %209 ], [ %179, %207 ], [ %179, %205 ], [ %179, %203 ], [ %179, %201 ], [ %179, %199 ], [ %179, %197 ]
  %263 = phi i32 [ %180, %166 ], [ %180, %247 ], [ %180, %245 ], [ %180, %243 ], [ %180, %241 ], [ %180, %239 ], [ %180, %237 ], [ %180, %235 ], [ %180, %233 ], [ %180, %231 ], [ %180, %229 ], [ %180, %227 ], [ %180, %225 ], [ %224, %223 ], [ %180, %221 ], [ %180, %219 ], [ %180, %217 ], [ %180, %215 ], [ %180, %213 ], [ %180, %211 ], [ %180, %209 ], [ %180, %207 ], [ %180, %205 ], [ %180, %203 ], [ %180, %201 ], [ %180, %199 ], [ %180, %197 ]
  %264 = phi i32 [ %181, %166 ], [ %181, %247 ], [ %181, %245 ], [ %181, %243 ], [ %181, %241 ], [ %181, %239 ], [ %181, %237 ], [ %181, %235 ], [ %181, %233 ], [ %181, %231 ], [ %181, %229 ], [ %181, %227 ], [ %226, %225 ], [ %181, %223 ], [ %181, %221 ], [ %181, %219 ], [ %181, %217 ], [ %181, %215 ], [ %181, %213 ], [ %181, %211 ], [ %181, %209 ], [ %181, %207 ], [ %181, %205 ], [ %181, %203 ], [ %181, %201 ], [ %181, %199 ], [ %181, %197 ]
  %265 = phi i32 [ %182, %166 ], [ %182, %247 ], [ %182, %245 ], [ %182, %243 ], [ %182, %241 ], [ %182, %239 ], [ %182, %237 ], [ %182, %235 ], [ %182, %233 ], [ %182, %231 ], [ %182, %229 ], [ %228, %227 ], [ %182, %225 ], [ %182, %223 ], [ %182, %221 ], [ %182, %219 ], [ %182, %217 ], [ %182, %215 ], [ %182, %213 ], [ %182, %211 ], [ %182, %209 ], [ %182, %207 ], [ %182, %205 ], [ %182, %203 ], [ %182, %201 ], [ %182, %199 ], [ %182, %197 ]
  %266 = phi i32 [ %183, %166 ], [ %183, %247 ], [ %183, %245 ], [ %183, %243 ], [ %183, %241 ], [ %183, %239 ], [ %183, %237 ], [ %183, %235 ], [ %183, %233 ], [ %183, %231 ], [ %230, %229 ], [ %183, %227 ], [ %183, %225 ], [ %183, %223 ], [ %183, %221 ], [ %183, %219 ], [ %183, %217 ], [ %183, %215 ], [ %183, %213 ], [ %183, %211 ], [ %183, %209 ], [ %183, %207 ], [ %183, %205 ], [ %183, %203 ], [ %183, %201 ], [ %183, %199 ], [ %183, %197 ]
  %267 = phi i32 [ %184, %166 ], [ %184, %247 ], [ %184, %245 ], [ %184, %243 ], [ %184, %241 ], [ %184, %239 ], [ %184, %237 ], [ %184, %235 ], [ %184, %233 ], [ %232, %231 ], [ %184, %229 ], [ %184, %227 ], [ %184, %225 ], [ %184, %223 ], [ %184, %221 ], [ %184, %219 ], [ %184, %217 ], [ %184, %215 ], [ %184, %213 ], [ %184, %211 ], [ %184, %209 ], [ %184, %207 ], [ %184, %205 ], [ %184, %203 ], [ %184, %201 ], [ %184, %199 ], [ %184, %197 ]
  %268 = phi i32 [ %185, %166 ], [ %185, %247 ], [ %185, %245 ], [ %185, %243 ], [ %185, %241 ], [ %185, %239 ], [ %185, %237 ], [ %185, %235 ], [ %234, %233 ], [ %185, %231 ], [ %185, %229 ], [ %185, %227 ], [ %185, %225 ], [ %185, %223 ], [ %185, %221 ], [ %185, %219 ], [ %185, %217 ], [ %185, %215 ], [ %185, %213 ], [ %185, %211 ], [ %185, %209 ], [ %185, %207 ], [ %185, %205 ], [ %185, %203 ], [ %185, %201 ], [ %185, %199 ], [ %185, %197 ]
  %269 = phi i32 [ %186, %166 ], [ %186, %247 ], [ %186, %245 ], [ %186, %243 ], [ %186, %241 ], [ %186, %239 ], [ %186, %237 ], [ %236, %235 ], [ %186, %233 ], [ %186, %231 ], [ %186, %229 ], [ %186, %227 ], [ %186, %225 ], [ %186, %223 ], [ %186, %221 ], [ %186, %219 ], [ %186, %217 ], [ %186, %215 ], [ %186, %213 ], [ %186, %211 ], [ %186, %209 ], [ %186, %207 ], [ %186, %205 ], [ %186, %203 ], [ %186, %201 ], [ %186, %199 ], [ %186, %197 ]
  %270 = phi i32 [ %187, %166 ], [ %187, %247 ], [ %187, %245 ], [ %187, %243 ], [ %187, %241 ], [ %187, %239 ], [ %238, %237 ], [ %187, %235 ], [ %187, %233 ], [ %187, %231 ], [ %187, %229 ], [ %187, %227 ], [ %187, %225 ], [ %187, %223 ], [ %187, %221 ], [ %187, %219 ], [ %187, %217 ], [ %187, %215 ], [ %187, %213 ], [ %187, %211 ], [ %187, %209 ], [ %187, %207 ], [ %187, %205 ], [ %187, %203 ], [ %187, %201 ], [ %187, %199 ], [ %187, %197 ]
  %271 = phi i32 [ %188, %166 ], [ %188, %247 ], [ %188, %245 ], [ %188, %243 ], [ %188, %241 ], [ %240, %239 ], [ %188, %237 ], [ %188, %235 ], [ %188, %233 ], [ %188, %231 ], [ %188, %229 ], [ %188, %227 ], [ %188, %225 ], [ %188, %223 ], [ %188, %221 ], [ %188, %219 ], [ %188, %217 ], [ %188, %215 ], [ %188, %213 ], [ %188, %211 ], [ %188, %209 ], [ %188, %207 ], [ %188, %205 ], [ %188, %203 ], [ %188, %201 ], [ %188, %199 ], [ %188, %197 ]
  %272 = phi i32 [ %189, %166 ], [ %189, %247 ], [ %189, %245 ], [ %189, %243 ], [ %242, %241 ], [ %189, %239 ], [ %189, %237 ], [ %189, %235 ], [ %189, %233 ], [ %189, %231 ], [ %189, %229 ], [ %189, %227 ], [ %189, %225 ], [ %189, %223 ], [ %189, %221 ], [ %189, %219 ], [ %189, %217 ], [ %189, %215 ], [ %189, %213 ], [ %189, %211 ], [ %189, %209 ], [ %189, %207 ], [ %189, %205 ], [ %189, %203 ], [ %189, %201 ], [ %189, %199 ], [ %189, %197 ]
  %273 = phi i32 [ %190, %166 ], [ %190, %247 ], [ %190, %245 ], [ %244, %243 ], [ %190, %241 ], [ %190, %239 ], [ %190, %237 ], [ %190, %235 ], [ %190, %233 ], [ %190, %231 ], [ %190, %229 ], [ %190, %227 ], [ %190, %225 ], [ %190, %223 ], [ %190, %221 ], [ %190, %219 ], [ %190, %217 ], [ %190, %215 ], [ %190, %213 ], [ %190, %211 ], [ %190, %209 ], [ %190, %207 ], [ %190, %205 ], [ %190, %203 ], [ %190, %201 ], [ %190, %199 ], [ %190, %197 ]
  %274 = phi i32 [ %191, %166 ], [ %191, %247 ], [ %246, %245 ], [ %191, %243 ], [ %191, %241 ], [ %191, %239 ], [ %191, %237 ], [ %191, %235 ], [ %191, %233 ], [ %191, %231 ], [ %191, %229 ], [ %191, %227 ], [ %191, %225 ], [ %191, %223 ], [ %191, %221 ], [ %191, %219 ], [ %191, %217 ], [ %191, %215 ], [ %191, %213 ], [ %191, %211 ], [ %191, %209 ], [ %191, %207 ], [ %191, %205 ], [ %191, %203 ], [ %191, %201 ], [ %191, %199 ], [ %191, %197 ]
  %275 = phi i32 [ %192, %166 ], [ %248, %247 ], [ %192, %245 ], [ %192, %243 ], [ %192, %241 ], [ %192, %239 ], [ %192, %237 ], [ %192, %235 ], [ %192, %233 ], [ %192, %231 ], [ %192, %229 ], [ %192, %227 ], [ %192, %225 ], [ %192, %223 ], [ %192, %221 ], [ %192, %219 ], [ %192, %217 ], [ %192, %215 ], [ %192, %213 ], [ %192, %211 ], [ %192, %209 ], [ %192, %207 ], [ %192, %205 ], [ %192, %203 ], [ %192, %201 ], [ %192, %199 ], [ %192, %197 ]
  %276 = add nuw nsw i64 %193, 1
  %277 = icmp eq i64 %276, %57
  br i1 %277, label %278, label %166, !llvm.loop !14

278:                                              ; preds = %249, %25
  %279 = phi i32 [ %26, %25 ], [ %250, %249 ]
  %280 = phi i32 [ %27, %25 ], [ %251, %249 ]
  %281 = phi i32 [ %28, %25 ], [ %252, %249 ]
  %282 = phi i32 [ %29, %25 ], [ %253, %249 ]
  %283 = phi i32 [ %30, %25 ], [ %254, %249 ]
  %284 = phi i32 [ %31, %25 ], [ %255, %249 ]
  %285 = phi i32 [ %32, %25 ], [ %256, %249 ]
  %286 = phi i32 [ %33, %25 ], [ %257, %249 ]
  %287 = phi i32 [ %34, %25 ], [ %258, %249 ]
  %288 = phi i32 [ %35, %25 ], [ %259, %249 ]
  %289 = phi i32 [ %36, %25 ], [ %260, %249 ]
  %290 = phi i32 [ %37, %25 ], [ %261, %249 ]
  %291 = phi i32 [ %38, %25 ], [ %262, %249 ]
  %292 = phi i32 [ %39, %25 ], [ %263, %249 ]
  %293 = phi i32 [ %40, %25 ], [ %264, %249 ]
  %294 = phi i32 [ %41, %25 ], [ %265, %249 ]
  %295 = phi i32 [ %42, %25 ], [ %266, %249 ]
  %296 = phi i32 [ %43, %25 ], [ %267, %249 ]
  %297 = phi i32 [ %44, %25 ], [ %268, %249 ]
  %298 = phi i32 [ %45, %25 ], [ %269, %249 ]
  %299 = phi i32 [ %46, %25 ], [ %270, %249 ]
  %300 = phi i32 [ %47, %25 ], [ %271, %249 ]
  %301 = phi i32 [ %48, %25 ], [ %272, %249 ]
  %302 = phi i32 [ %49, %25 ], [ %273, %249 ]
  %303 = phi i32 [ %50, %25 ], [ %274, %249 ]
  %304 = phi i32 [ %51, %25 ], [ %275, %249 ]
  %305 = add nuw nsw i64 %52, 1
  %306 = icmp eq i64 %305, %24
  br i1 %306, label %58, label %25, !llvm.loop !15

307:                                              ; preds = %389, %387, %385, %383, %381, %379, %377, %375, %373, %371, %369, %367, %365, %363, %361, %359, %357, %355, %353, %351, %349, %347, %345, %343, %340, %87
  %308 = phi i32 [ 65, %87 ], [ 66, %340 ], [ 67, %343 ], [ 68, %345 ], [ 69, %347 ], [ 70, %349 ], [ 71, %351 ], [ 72, %353 ], [ 73, %355 ], [ 74, %357 ], [ 75, %359 ], [ 76, %361 ], [ 77, %363 ], [ 78, %365 ], [ 79, %367 ], [ 80, %369 ], [ 81, %371 ], [ 82, %373 ], [ 83, %375 ], [ 84, %377 ], [ 85, %379 ], [ 86, %381 ], [ 87, %383 ], [ 88, %385 ], [ 89, %387 ], [ 90, %389 ]
  %309 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %308)
  %310 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %164)
  %311 = load i32, i32* %1, align 4, !tbaa !5
  %312 = icmp sgt i32 %311, 0
  br i1 %312, label %313, label %342

313:                                              ; preds = %307, %335
  %314 = phi i32 [ %336, %335 ], [ %311, %307 ]
  %315 = phi i64 [ %337, %335 ], [ 0, %307 ]
  %316 = getelementptr inbounds [999 x %struct.list], [999 x %struct.list]* %2, i64 0, i64 %315, i32 2
  %317 = load i32, i32* %316, align 4, !tbaa !9
  %318 = icmp sgt i32 %317, 0
  br i1 %318, label %319, label %335

319:                                              ; preds = %313
  %320 = zext i32 %317 to i64
  br label %323

321:                                              ; preds = %323
  %322 = icmp eq i64 %329, %320
  br i1 %322, label %335, label %323, !llvm.loop !16

323:                                              ; preds = %319, %321
  %324 = phi i64 [ 0, %319 ], [ %329, %321 ]
  %325 = getelementptr inbounds [999 x %struct.list], [999 x %struct.list]* %2, i64 0, i64 %315, i32 1, i64 %324
  %326 = load i8, i8* %325, align 1, !tbaa !13
  %327 = sext i8 %326 to i32
  %328 = icmp eq i32 %308, %327
  %329 = add nuw nsw i64 %324, 1
  br i1 %328, label %330, label %321

330:                                              ; preds = %323
  %331 = getelementptr inbounds [999 x %struct.list], [999 x %struct.list]* %2, i64 0, i64 %315, i32 0
  %332 = load i32, i32* %331, align 4, !tbaa !17
  %333 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %332)
  %334 = load i32, i32* %1, align 4, !tbaa !5
  br label %335

335:                                              ; preds = %321, %313, %330
  %336 = phi i32 [ %314, %313 ], [ %334, %330 ], [ %314, %321 ]
  %337 = add nuw nsw i64 %315, 1
  %338 = sext i32 %336 to i64
  %339 = icmp slt i64 %337, %338
  br i1 %339, label %313, label %342, !llvm.loop !18

340:                                              ; preds = %87
  %341 = icmp eq i32 %112, %164
  br i1 %341, label %307, label %343

342:                                              ; preds = %335, %389, %307
  call void @llvm.lifetime.end.p0i8(i64 35964, i8* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5
  ret i32 0

343:                                              ; preds = %340
  %344 = icmp eq i32 %111, %164
  br i1 %344, label %307, label %345

345:                                              ; preds = %343
  %346 = icmp eq i32 %110, %164
  br i1 %346, label %307, label %347

347:                                              ; preds = %345
  %348 = icmp eq i32 %109, %164
  br i1 %348, label %307, label %349

349:                                              ; preds = %347
  %350 = icmp eq i32 %108, %164
  br i1 %350, label %307, label %351

351:                                              ; preds = %349
  %352 = icmp eq i32 %107, %164
  br i1 %352, label %307, label %353

353:                                              ; preds = %351
  %354 = icmp eq i32 %106, %164
  br i1 %354, label %307, label %355

355:                                              ; preds = %353
  %356 = icmp eq i32 %105, %164
  br i1 %356, label %307, label %357

357:                                              ; preds = %355
  %358 = icmp eq i32 %104, %164
  br i1 %358, label %307, label %359

359:                                              ; preds = %357
  %360 = icmp eq i32 %103, %164
  br i1 %360, label %307, label %361

361:                                              ; preds = %359
  %362 = icmp eq i32 %102, %164
  br i1 %362, label %307, label %363

363:                                              ; preds = %361
  %364 = icmp eq i32 %101, %164
  br i1 %364, label %307, label %365

365:                                              ; preds = %363
  %366 = icmp eq i32 %100, %164
  br i1 %366, label %307, label %367

367:                                              ; preds = %365
  %368 = icmp eq i32 %99, %164
  br i1 %368, label %307, label %369

369:                                              ; preds = %367
  %370 = icmp eq i32 %98, %164
  br i1 %370, label %307, label %371

371:                                              ; preds = %369
  %372 = icmp eq i32 %97, %164
  br i1 %372, label %307, label %373

373:                                              ; preds = %371
  %374 = icmp eq i32 %96, %164
  br i1 %374, label %307, label %375

375:                                              ; preds = %373
  %376 = icmp eq i32 %95, %164
  br i1 %376, label %307, label %377

377:                                              ; preds = %375
  %378 = icmp eq i32 %94, %164
  br i1 %378, label %307, label %379

379:                                              ; preds = %377
  %380 = icmp eq i32 %93, %164
  br i1 %380, label %307, label %381

381:                                              ; preds = %379
  %382 = icmp eq i32 %92, %164
  br i1 %382, label %307, label %383

383:                                              ; preds = %381
  %384 = icmp eq i32 %91, %164
  br i1 %384, label %307, label %385

385:                                              ; preds = %383
  %386 = icmp eq i32 %90, %164
  br i1 %386, label %307, label %387

387:                                              ; preds = %385
  %388 = icmp eq i32 %89, %164
  br i1 %388, label %307, label %389

389:                                              ; preds = %387
  %390 = icmp slt i32 %88, %162
  br i1 %390, label %342, label %307
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

declare i32 @gets(...) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !6, i64 32}
!10 = !{!"list", !6, i64 0, !7, i64 4, !6, i64 32}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = !{!7, !7, i64 0}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !12}
!16 = distinct !{!16, !12}
!17 = !{!10, !6, i64 0}
!18 = distinct !{!18, !12}
