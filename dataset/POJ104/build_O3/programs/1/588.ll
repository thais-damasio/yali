; ModuleID = 'source-C-CXX/1/588.c'
source_filename = "source-C-CXX/1/588.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.l = private unnamed_addr constant [26 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZ", align 16
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1000 x i32], align 16
  %3 = alloca [1000 x [27 x i8]], align 16
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #4
  %5 = bitcast [1000 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %5) #4
  %6 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 27000, i8* nonnull %6) #4
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %8 = load i32, i32* %1, align 4, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %14, label %57

10:                                               ; preds = %14
  %11 = icmp sgt i32 %20, 0
  br i1 %11, label %12, label %57

12:                                               ; preds = %10
  %13 = zext i32 %20 to i64
  br label %23

14:                                               ; preds = %0, %14
  %15 = phi i64 [ %19, %14 ], [ 0, %0 ]
  %16 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %15
  %17 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %15, i64 0
  %18 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %16, i8* nonnull %17)
  %19 = add nuw nsw i64 %15, 1
  %20 = load i32, i32* %1, align 4, !tbaa !5
  %21 = sext i32 %20 to i64
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %14, label %10, !llvm.loop !9

23:                                               ; preds = %12, %197
  %24 = phi i32 [ 0, %12 ], [ %198, %197 ]
  %25 = phi i32 [ 0, %12 ], [ %199, %197 ]
  %26 = phi i32 [ 0, %12 ], [ %200, %197 ]
  %27 = phi i32 [ 0, %12 ], [ %201, %197 ]
  %28 = phi i32 [ 0, %12 ], [ %202, %197 ]
  %29 = phi i32 [ 0, %12 ], [ %203, %197 ]
  %30 = phi i32 [ 0, %12 ], [ %204, %197 ]
  %31 = phi i32 [ 0, %12 ], [ %205, %197 ]
  %32 = phi i32 [ 0, %12 ], [ %206, %197 ]
  %33 = phi i32 [ 0, %12 ], [ %207, %197 ]
  %34 = phi i32 [ 0, %12 ], [ %208, %197 ]
  %35 = phi i32 [ 0, %12 ], [ %209, %197 ]
  %36 = phi i32 [ 0, %12 ], [ %210, %197 ]
  %37 = phi i32 [ 0, %12 ], [ %211, %197 ]
  %38 = phi i32 [ 0, %12 ], [ %212, %197 ]
  %39 = phi i32 [ 0, %12 ], [ %213, %197 ]
  %40 = phi i32 [ 0, %12 ], [ %214, %197 ]
  %41 = phi i32 [ 0, %12 ], [ %215, %197 ]
  %42 = phi i32 [ 0, %12 ], [ %216, %197 ]
  %43 = phi i32 [ 0, %12 ], [ %217, %197 ]
  %44 = phi i32 [ 0, %12 ], [ %218, %197 ]
  %45 = phi i32 [ 0, %12 ], [ %219, %197 ]
  %46 = phi i32 [ 0, %12 ], [ %220, %197 ]
  %47 = phi i32 [ 0, %12 ], [ %221, %197 ]
  %48 = phi i32 [ 0, %12 ], [ %222, %197 ]
  %49 = phi i32 [ 0, %12 ], [ %223, %197 ]
  %50 = phi i64 [ 0, %12 ], [ %224, %197 ]
  %51 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %50, i64 0
  %52 = call i64 @strlen(i8* noundef nonnull %51) #5
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %197, label %165

54:                                               ; preds = %197
  %55 = icmp sgt i32 %198, 0
  %56 = select i1 %55, i32 %198, i32 0
  br label %57

57:                                               ; preds = %54, %0, %10
  %58 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %223, %54 ]
  %59 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %222, %54 ]
  %60 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %221, %54 ]
  %61 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %220, %54 ]
  %62 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %219, %54 ]
  %63 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %218, %54 ]
  %64 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %217, %54 ]
  %65 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %216, %54 ]
  %66 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %215, %54 ]
  %67 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %214, %54 ]
  %68 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %213, %54 ]
  %69 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %212, %54 ]
  %70 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %211, %54 ]
  %71 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %210, %54 ]
  %72 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %209, %54 ]
  %73 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %208, %54 ]
  %74 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %207, %54 ]
  %75 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %206, %54 ]
  %76 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %205, %54 ]
  %77 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %204, %54 ]
  %78 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %203, %54 ]
  %79 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %202, %54 ]
  %80 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %201, %54 ]
  %81 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %200, %54 ]
  %82 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %199, %54 ]
  %83 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %56, %54 ]
  %84 = icmp sgt i32 %82, %83
  %85 = select i1 %84, i32 %82, i32 %83
  %86 = zext i1 %84 to i64
  %87 = icmp sgt i32 %81, %85
  %88 = select i1 %87, i32 %81, i32 %85
  %89 = select i1 %87, i64 2, i64 %86
  %90 = icmp sgt i32 %80, %88
  %91 = select i1 %90, i32 %80, i32 %88
  %92 = select i1 %90, i64 3, i64 %89
  %93 = icmp sgt i32 %79, %91
  %94 = select i1 %93, i32 %79, i32 %91
  %95 = select i1 %93, i64 4, i64 %92
  %96 = icmp sgt i32 %78, %94
  %97 = select i1 %96, i32 %78, i32 %94
  %98 = select i1 %96, i64 5, i64 %95
  %99 = icmp sgt i32 %77, %97
  %100 = select i1 %99, i32 %77, i32 %97
  %101 = icmp sgt i32 %76, %100
  %102 = select i1 %101, i32 %76, i32 %100
  %103 = icmp sgt i32 %75, %102
  %104 = select i1 %103, i32 %75, i32 %102
  %105 = icmp sgt i32 %74, %104
  %106 = select i1 %105, i32 %74, i32 %104
  %107 = icmp sgt i32 %73, %106
  %108 = select i1 %107, i32 %73, i32 %106
  %109 = icmp sgt i32 %72, %108
  %110 = select i1 %109, i32 %72, i32 %108
  %111 = icmp sgt i32 %71, %110
  %112 = select i1 %111, i32 %71, i32 %110
  %113 = icmp sgt i32 %70, %112
  %114 = select i1 %113, i32 %70, i32 %112
  %115 = icmp sgt i32 %69, %114
  %116 = select i1 %115, i32 %69, i32 %114
  %117 = icmp sgt i32 %68, %116
  %118 = select i1 %117, i32 %68, i32 %116
  %119 = icmp sgt i32 %67, %118
  %120 = select i1 %119, i32 %67, i32 %118
  %121 = icmp sgt i32 %66, %120
  %122 = select i1 %121, i32 %66, i32 %120
  %123 = icmp sgt i32 %65, %122
  %124 = select i1 %123, i32 %65, i32 %122
  %125 = icmp sgt i32 %64, %124
  %126 = select i1 %125, i32 %64, i32 %124
  %127 = icmp sgt i32 %63, %126
  %128 = select i1 %127, i32 %63, i32 %126
  %129 = icmp sgt i32 %62, %128
  %130 = select i1 %129, i32 %62, i32 %128
  %131 = icmp sgt i32 %61, %130
  %132 = select i1 %131, i32 %61, i32 %130
  %133 = icmp sgt i32 %60, %132
  %134 = select i1 %133, i32 %60, i32 %132
  %135 = icmp sgt i32 %59, %134
  %136 = select i1 %135, i32 %59, i32 %134
  %137 = icmp sgt i32 %58, %136
  %138 = select i1 %137, i32 %58, i32 %136
  %139 = select i1 %99, i64 6, i64 %98
  %140 = select i1 %101, i64 7, i64 %139
  %141 = select i1 %103, i64 8, i64 %140
  %142 = select i1 %105, i64 9, i64 %141
  %143 = select i1 %107, i64 10, i64 %142
  %144 = select i1 %109, i64 11, i64 %143
  %145 = select i1 %111, i64 12, i64 %144
  %146 = select i1 %113, i64 13, i64 %145
  %147 = select i1 %115, i64 14, i64 %146
  %148 = select i1 %117, i64 15, i64 %147
  %149 = select i1 %119, i64 16, i64 %148
  %150 = select i1 %121, i64 17, i64 %149
  %151 = select i1 %123, i64 18, i64 %150
  %152 = select i1 %125, i64 19, i64 %151
  %153 = select i1 %127, i64 20, i64 %152
  %154 = select i1 %129, i64 21, i64 %153
  %155 = select i1 %131, i64 22, i64 %154
  %156 = select i1 %133, i64 23, i64 %155
  %157 = select i1 %135, i64 24, i64 %156
  %158 = select i1 %137, i64 25, i64 %157
  %159 = getelementptr inbounds [26 x i8], [26 x i8]* @__const.main.l, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1, !tbaa !11
  %161 = sext i8 %160 to i32
  %162 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %161, i32 %138)
  %163 = load i32, i32* %1, align 4, !tbaa !5
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %226, label %250

165:                                              ; preds = %23, %301
  %166 = phi i32 [ %314, %301 ], [ %24, %23 ]
  %167 = phi i32 [ %315, %301 ], [ %25, %23 ]
  %168 = phi i32 [ %313, %301 ], [ %26, %23 ]
  %169 = phi i32 [ %316, %301 ], [ %27, %23 ]
  %170 = phi i32 [ %312, %301 ], [ %28, %23 ]
  %171 = phi i32 [ %317, %301 ], [ %29, %23 ]
  %172 = phi i32 [ %311, %301 ], [ %30, %23 ]
  %173 = phi i32 [ %318, %301 ], [ %31, %23 ]
  %174 = phi i32 [ %310, %301 ], [ %32, %23 ]
  %175 = phi i32 [ %319, %301 ], [ %33, %23 ]
  %176 = phi i32 [ %309, %301 ], [ %34, %23 ]
  %177 = phi i32 [ %320, %301 ], [ %35, %23 ]
  %178 = phi i32 [ %308, %301 ], [ %36, %23 ]
  %179 = phi i32 [ %321, %301 ], [ %37, %23 ]
  %180 = phi i32 [ %307, %301 ], [ %38, %23 ]
  %181 = phi i32 [ %322, %301 ], [ %39, %23 ]
  %182 = phi i32 [ %306, %301 ], [ %40, %23 ]
  %183 = phi i32 [ %323, %301 ], [ %41, %23 ]
  %184 = phi i32 [ %305, %301 ], [ %42, %23 ]
  %185 = phi i32 [ %324, %301 ], [ %43, %23 ]
  %186 = phi i32 [ %304, %301 ], [ %44, %23 ]
  %187 = phi i32 [ %325, %301 ], [ %45, %23 ]
  %188 = phi i32 [ %303, %301 ], [ %46, %23 ]
  %189 = phi i32 [ %326, %301 ], [ %47, %23 ]
  %190 = phi i32 [ %302, %301 ], [ %48, %23 ]
  %191 = phi i32 [ %327, %301 ], [ %49, %23 ]
  %192 = phi i64 [ %328, %301 ], [ 0, %23 ]
  %193 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %50, i64 %192
  %194 = load i8, i8* %193, align 1, !tbaa !11
  switch i8 %194, label %301 [
    i8 65, label %195
    i8 66, label %251
    i8 67, label %253
    i8 68, label %255
    i8 69, label %257
    i8 70, label %259
    i8 71, label %261
    i8 72, label %263
    i8 73, label %265
    i8 74, label %267
    i8 75, label %269
    i8 76, label %271
    i8 77, label %273
    i8 78, label %275
    i8 79, label %277
    i8 80, label %279
    i8 81, label %281
    i8 82, label %283
    i8 83, label %285
    i8 84, label %287
    i8 85, label %289
    i8 86, label %291
    i8 87, label %293
    i8 88, label %295
    i8 89, label %297
    i8 90, label %299
  ]

195:                                              ; preds = %165
  %196 = add nsw i32 %166, 1
  br label %301

197:                                              ; preds = %301, %23
  %198 = phi i32 [ %24, %23 ], [ %314, %301 ]
  %199 = phi i32 [ %25, %23 ], [ %315, %301 ]
  %200 = phi i32 [ %26, %23 ], [ %313, %301 ]
  %201 = phi i32 [ %27, %23 ], [ %316, %301 ]
  %202 = phi i32 [ %28, %23 ], [ %312, %301 ]
  %203 = phi i32 [ %29, %23 ], [ %317, %301 ]
  %204 = phi i32 [ %30, %23 ], [ %311, %301 ]
  %205 = phi i32 [ %31, %23 ], [ %318, %301 ]
  %206 = phi i32 [ %32, %23 ], [ %310, %301 ]
  %207 = phi i32 [ %33, %23 ], [ %319, %301 ]
  %208 = phi i32 [ %34, %23 ], [ %309, %301 ]
  %209 = phi i32 [ %35, %23 ], [ %320, %301 ]
  %210 = phi i32 [ %36, %23 ], [ %308, %301 ]
  %211 = phi i32 [ %37, %23 ], [ %321, %301 ]
  %212 = phi i32 [ %38, %23 ], [ %307, %301 ]
  %213 = phi i32 [ %39, %23 ], [ %322, %301 ]
  %214 = phi i32 [ %40, %23 ], [ %306, %301 ]
  %215 = phi i32 [ %41, %23 ], [ %323, %301 ]
  %216 = phi i32 [ %42, %23 ], [ %305, %301 ]
  %217 = phi i32 [ %43, %23 ], [ %324, %301 ]
  %218 = phi i32 [ %44, %23 ], [ %304, %301 ]
  %219 = phi i32 [ %45, %23 ], [ %325, %301 ]
  %220 = phi i32 [ %46, %23 ], [ %303, %301 ]
  %221 = phi i32 [ %47, %23 ], [ %326, %301 ]
  %222 = phi i32 [ %48, %23 ], [ %302, %301 ]
  %223 = phi i32 [ %49, %23 ], [ %327, %301 ]
  %224 = add nuw nsw i64 %50, 1
  %225 = icmp eq i64 %224, %13
  br i1 %225, label %54, label %23, !llvm.loop !12

226:                                              ; preds = %57, %245
  %227 = phi i32 [ %246, %245 ], [ %163, %57 ]
  %228 = phi i64 [ %247, %245 ], [ 0, %57 ]
  %229 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %228, i64 0
  %230 = call i64 @strlen(i8* noundef nonnull %229) #5
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %245, label %234

232:                                              ; preds = %234
  %233 = icmp eq i64 %239, %230
  br i1 %233, label %245, label %234, !llvm.loop !13

234:                                              ; preds = %226, %232
  %235 = phi i64 [ %239, %232 ], [ 0, %226 ]
  %236 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %228, i64 %235
  %237 = load i8, i8* %236, align 1, !tbaa !11
  %238 = icmp eq i8 %237, %160
  %239 = add nuw i64 %235, 1
  br i1 %238, label %240, label %232

240:                                              ; preds = %234
  %241 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %228
  %242 = load i32, i32* %241, align 4, !tbaa !5
  %243 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %242)
  %244 = load i32, i32* %1, align 4, !tbaa !5
  br label %245

245:                                              ; preds = %232, %226, %240
  %246 = phi i32 [ %227, %226 ], [ %244, %240 ], [ %227, %232 ]
  %247 = add nuw nsw i64 %228, 1
  %248 = sext i32 %246 to i64
  %249 = icmp slt i64 %247, %248
  br i1 %249, label %226, label %250, !llvm.loop !14

250:                                              ; preds = %245, %57
  call void @llvm.lifetime.end.p0i8(i64 27000, i8* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #4
  ret void

251:                                              ; preds = %165
  %252 = add nsw i32 %167, 1
  br label %301

253:                                              ; preds = %165
  %254 = add nsw i32 %168, 1
  br label %301

255:                                              ; preds = %165
  %256 = add nsw i32 %169, 1
  br label %301

257:                                              ; preds = %165
  %258 = add nsw i32 %170, 1
  br label %301

259:                                              ; preds = %165
  %260 = add nsw i32 %171, 1
  br label %301

261:                                              ; preds = %165
  %262 = add nsw i32 %172, 1
  br label %301

263:                                              ; preds = %165
  %264 = add nsw i32 %173, 1
  br label %301

265:                                              ; preds = %165
  %266 = add nsw i32 %174, 1
  br label %301

267:                                              ; preds = %165
  %268 = add nsw i32 %175, 1
  br label %301

269:                                              ; preds = %165
  %270 = add nsw i32 %176, 1
  br label %301

271:                                              ; preds = %165
  %272 = add nsw i32 %177, 1
  br label %301

273:                                              ; preds = %165
  %274 = add nsw i32 %178, 1
  br label %301

275:                                              ; preds = %165
  %276 = add nsw i32 %179, 1
  br label %301

277:                                              ; preds = %165
  %278 = add nsw i32 %180, 1
  br label %301

279:                                              ; preds = %165
  %280 = add nsw i32 %181, 1
  br label %301

281:                                              ; preds = %165
  %282 = add nsw i32 %182, 1
  br label %301

283:                                              ; preds = %165
  %284 = add nsw i32 %183, 1
  br label %301

285:                                              ; preds = %165
  %286 = add nsw i32 %184, 1
  br label %301

287:                                              ; preds = %165
  %288 = add nsw i32 %185, 1
  br label %301

289:                                              ; preds = %165
  %290 = add nsw i32 %186, 1
  br label %301

291:                                              ; preds = %165
  %292 = add nsw i32 %187, 1
  br label %301

293:                                              ; preds = %165
  %294 = add nsw i32 %188, 1
  br label %301

295:                                              ; preds = %165
  %296 = add nsw i32 %189, 1
  br label %301

297:                                              ; preds = %165
  %298 = add nsw i32 %190, 1
  br label %301

299:                                              ; preds = %165
  %300 = add nsw i32 %191, 1
  br label %301

301:                                              ; preds = %165, %251, %195, %253, %255, %257, %259, %261, %263, %265, %267, %269, %271, %273, %275, %277, %279, %281, %283, %285, %287, %289, %291, %293, %295, %297, %299
  %302 = phi i32 [ %190, %299 ], [ %298, %297 ], [ %190, %295 ], [ %190, %293 ], [ %190, %291 ], [ %190, %289 ], [ %190, %287 ], [ %190, %285 ], [ %190, %283 ], [ %190, %281 ], [ %190, %279 ], [ %190, %277 ], [ %190, %275 ], [ %190, %273 ], [ %190, %271 ], [ %190, %269 ], [ %190, %267 ], [ %190, %265 ], [ %190, %263 ], [ %190, %261 ], [ %190, %259 ], [ %190, %257 ], [ %190, %255 ], [ %190, %253 ], [ %190, %195 ], [ %190, %251 ], [ %190, %165 ]
  %303 = phi i32 [ %188, %299 ], [ %188, %297 ], [ %188, %295 ], [ %294, %293 ], [ %188, %291 ], [ %188, %289 ], [ %188, %287 ], [ %188, %285 ], [ %188, %283 ], [ %188, %281 ], [ %188, %279 ], [ %188, %277 ], [ %188, %275 ], [ %188, %273 ], [ %188, %271 ], [ %188, %269 ], [ %188, %267 ], [ %188, %265 ], [ %188, %263 ], [ %188, %261 ], [ %188, %259 ], [ %188, %257 ], [ %188, %255 ], [ %188, %253 ], [ %188, %195 ], [ %188, %251 ], [ %188, %165 ]
  %304 = phi i32 [ %186, %299 ], [ %186, %297 ], [ %186, %295 ], [ %186, %293 ], [ %186, %291 ], [ %290, %289 ], [ %186, %287 ], [ %186, %285 ], [ %186, %283 ], [ %186, %281 ], [ %186, %279 ], [ %186, %277 ], [ %186, %275 ], [ %186, %273 ], [ %186, %271 ], [ %186, %269 ], [ %186, %267 ], [ %186, %265 ], [ %186, %263 ], [ %186, %261 ], [ %186, %259 ], [ %186, %257 ], [ %186, %255 ], [ %186, %253 ], [ %186, %195 ], [ %186, %251 ], [ %186, %165 ]
  %305 = phi i32 [ %184, %299 ], [ %184, %297 ], [ %184, %295 ], [ %184, %293 ], [ %184, %291 ], [ %184, %289 ], [ %184, %287 ], [ %286, %285 ], [ %184, %283 ], [ %184, %281 ], [ %184, %279 ], [ %184, %277 ], [ %184, %275 ], [ %184, %273 ], [ %184, %271 ], [ %184, %269 ], [ %184, %267 ], [ %184, %265 ], [ %184, %263 ], [ %184, %261 ], [ %184, %259 ], [ %184, %257 ], [ %184, %255 ], [ %184, %253 ], [ %184, %195 ], [ %184, %251 ], [ %184, %165 ]
  %306 = phi i32 [ %182, %299 ], [ %182, %297 ], [ %182, %295 ], [ %182, %293 ], [ %182, %291 ], [ %182, %289 ], [ %182, %287 ], [ %182, %285 ], [ %182, %283 ], [ %282, %281 ], [ %182, %279 ], [ %182, %277 ], [ %182, %275 ], [ %182, %273 ], [ %182, %271 ], [ %182, %269 ], [ %182, %267 ], [ %182, %265 ], [ %182, %263 ], [ %182, %261 ], [ %182, %259 ], [ %182, %257 ], [ %182, %255 ], [ %182, %253 ], [ %182, %195 ], [ %182, %251 ], [ %182, %165 ]
  %307 = phi i32 [ %180, %299 ], [ %180, %297 ], [ %180, %295 ], [ %180, %293 ], [ %180, %291 ], [ %180, %289 ], [ %180, %287 ], [ %180, %285 ], [ %180, %283 ], [ %180, %281 ], [ %180, %279 ], [ %278, %277 ], [ %180, %275 ], [ %180, %273 ], [ %180, %271 ], [ %180, %269 ], [ %180, %267 ], [ %180, %265 ], [ %180, %263 ], [ %180, %261 ], [ %180, %259 ], [ %180, %257 ], [ %180, %255 ], [ %180, %253 ], [ %180, %195 ], [ %180, %251 ], [ %180, %165 ]
  %308 = phi i32 [ %178, %299 ], [ %178, %297 ], [ %178, %295 ], [ %178, %293 ], [ %178, %291 ], [ %178, %289 ], [ %178, %287 ], [ %178, %285 ], [ %178, %283 ], [ %178, %281 ], [ %178, %279 ], [ %178, %277 ], [ %178, %275 ], [ %274, %273 ], [ %178, %271 ], [ %178, %269 ], [ %178, %267 ], [ %178, %265 ], [ %178, %263 ], [ %178, %261 ], [ %178, %259 ], [ %178, %257 ], [ %178, %255 ], [ %178, %253 ], [ %178, %195 ], [ %178, %251 ], [ %178, %165 ]
  %309 = phi i32 [ %176, %299 ], [ %176, %297 ], [ %176, %295 ], [ %176, %293 ], [ %176, %291 ], [ %176, %289 ], [ %176, %287 ], [ %176, %285 ], [ %176, %283 ], [ %176, %281 ], [ %176, %279 ], [ %176, %277 ], [ %176, %275 ], [ %176, %273 ], [ %176, %271 ], [ %270, %269 ], [ %176, %267 ], [ %176, %265 ], [ %176, %263 ], [ %176, %261 ], [ %176, %259 ], [ %176, %257 ], [ %176, %255 ], [ %176, %253 ], [ %176, %195 ], [ %176, %251 ], [ %176, %165 ]
  %310 = phi i32 [ %174, %299 ], [ %174, %297 ], [ %174, %295 ], [ %174, %293 ], [ %174, %291 ], [ %174, %289 ], [ %174, %287 ], [ %174, %285 ], [ %174, %283 ], [ %174, %281 ], [ %174, %279 ], [ %174, %277 ], [ %174, %275 ], [ %174, %273 ], [ %174, %271 ], [ %174, %269 ], [ %174, %267 ], [ %266, %265 ], [ %174, %263 ], [ %174, %261 ], [ %174, %259 ], [ %174, %257 ], [ %174, %255 ], [ %174, %253 ], [ %174, %195 ], [ %174, %251 ], [ %174, %165 ]
  %311 = phi i32 [ %172, %299 ], [ %172, %297 ], [ %172, %295 ], [ %172, %293 ], [ %172, %291 ], [ %172, %289 ], [ %172, %287 ], [ %172, %285 ], [ %172, %283 ], [ %172, %281 ], [ %172, %279 ], [ %172, %277 ], [ %172, %275 ], [ %172, %273 ], [ %172, %271 ], [ %172, %269 ], [ %172, %267 ], [ %172, %265 ], [ %172, %263 ], [ %262, %261 ], [ %172, %259 ], [ %172, %257 ], [ %172, %255 ], [ %172, %253 ], [ %172, %195 ], [ %172, %251 ], [ %172, %165 ]
  %312 = phi i32 [ %170, %299 ], [ %170, %297 ], [ %170, %295 ], [ %170, %293 ], [ %170, %291 ], [ %170, %289 ], [ %170, %287 ], [ %170, %285 ], [ %170, %283 ], [ %170, %281 ], [ %170, %279 ], [ %170, %277 ], [ %170, %275 ], [ %170, %273 ], [ %170, %271 ], [ %170, %269 ], [ %170, %267 ], [ %170, %265 ], [ %170, %263 ], [ %170, %261 ], [ %170, %259 ], [ %258, %257 ], [ %170, %255 ], [ %170, %253 ], [ %170, %195 ], [ %170, %251 ], [ %170, %165 ]
  %313 = phi i32 [ %168, %299 ], [ %168, %297 ], [ %168, %295 ], [ %168, %293 ], [ %168, %291 ], [ %168, %289 ], [ %168, %287 ], [ %168, %285 ], [ %168, %283 ], [ %168, %281 ], [ %168, %279 ], [ %168, %277 ], [ %168, %275 ], [ %168, %273 ], [ %168, %271 ], [ %168, %269 ], [ %168, %267 ], [ %168, %265 ], [ %168, %263 ], [ %168, %261 ], [ %168, %259 ], [ %168, %257 ], [ %168, %255 ], [ %254, %253 ], [ %168, %195 ], [ %168, %251 ], [ %168, %165 ]
  %314 = phi i32 [ %166, %299 ], [ %166, %297 ], [ %166, %295 ], [ %166, %293 ], [ %166, %291 ], [ %166, %289 ], [ %166, %287 ], [ %166, %285 ], [ %166, %283 ], [ %166, %281 ], [ %166, %279 ], [ %166, %277 ], [ %166, %275 ], [ %166, %273 ], [ %166, %271 ], [ %166, %269 ], [ %166, %267 ], [ %166, %265 ], [ %166, %263 ], [ %166, %261 ], [ %166, %259 ], [ %166, %257 ], [ %166, %255 ], [ %166, %253 ], [ %196, %195 ], [ %166, %251 ], [ %166, %165 ]
  %315 = phi i32 [ %167, %299 ], [ %167, %297 ], [ %167, %295 ], [ %167, %293 ], [ %167, %291 ], [ %167, %289 ], [ %167, %287 ], [ %167, %285 ], [ %167, %283 ], [ %167, %281 ], [ %167, %279 ], [ %167, %277 ], [ %167, %275 ], [ %167, %273 ], [ %167, %271 ], [ %167, %269 ], [ %167, %267 ], [ %167, %265 ], [ %167, %263 ], [ %167, %261 ], [ %167, %259 ], [ %167, %257 ], [ %167, %255 ], [ %167, %253 ], [ %167, %195 ], [ %252, %251 ], [ %167, %165 ]
  %316 = phi i32 [ %169, %299 ], [ %169, %297 ], [ %169, %295 ], [ %169, %293 ], [ %169, %291 ], [ %169, %289 ], [ %169, %287 ], [ %169, %285 ], [ %169, %283 ], [ %169, %281 ], [ %169, %279 ], [ %169, %277 ], [ %169, %275 ], [ %169, %273 ], [ %169, %271 ], [ %169, %269 ], [ %169, %267 ], [ %169, %265 ], [ %169, %263 ], [ %169, %261 ], [ %169, %259 ], [ %169, %257 ], [ %256, %255 ], [ %169, %253 ], [ %169, %195 ], [ %169, %251 ], [ %169, %165 ]
  %317 = phi i32 [ %171, %299 ], [ %171, %297 ], [ %171, %295 ], [ %171, %293 ], [ %171, %291 ], [ %171, %289 ], [ %171, %287 ], [ %171, %285 ], [ %171, %283 ], [ %171, %281 ], [ %171, %279 ], [ %171, %277 ], [ %171, %275 ], [ %171, %273 ], [ %171, %271 ], [ %171, %269 ], [ %171, %267 ], [ %171, %265 ], [ %171, %263 ], [ %171, %261 ], [ %260, %259 ], [ %171, %257 ], [ %171, %255 ], [ %171, %253 ], [ %171, %195 ], [ %171, %251 ], [ %171, %165 ]
  %318 = phi i32 [ %173, %299 ], [ %173, %297 ], [ %173, %295 ], [ %173, %293 ], [ %173, %291 ], [ %173, %289 ], [ %173, %287 ], [ %173, %285 ], [ %173, %283 ], [ %173, %281 ], [ %173, %279 ], [ %173, %277 ], [ %173, %275 ], [ %173, %273 ], [ %173, %271 ], [ %173, %269 ], [ %173, %267 ], [ %173, %265 ], [ %264, %263 ], [ %173, %261 ], [ %173, %259 ], [ %173, %257 ], [ %173, %255 ], [ %173, %253 ], [ %173, %195 ], [ %173, %251 ], [ %173, %165 ]
  %319 = phi i32 [ %175, %299 ], [ %175, %297 ], [ %175, %295 ], [ %175, %293 ], [ %175, %291 ], [ %175, %289 ], [ %175, %287 ], [ %175, %285 ], [ %175, %283 ], [ %175, %281 ], [ %175, %279 ], [ %175, %277 ], [ %175, %275 ], [ %175, %273 ], [ %175, %271 ], [ %175, %269 ], [ %268, %267 ], [ %175, %265 ], [ %175, %263 ], [ %175, %261 ], [ %175, %259 ], [ %175, %257 ], [ %175, %255 ], [ %175, %253 ], [ %175, %195 ], [ %175, %251 ], [ %175, %165 ]
  %320 = phi i32 [ %177, %299 ], [ %177, %297 ], [ %177, %295 ], [ %177, %293 ], [ %177, %291 ], [ %177, %289 ], [ %177, %287 ], [ %177, %285 ], [ %177, %283 ], [ %177, %281 ], [ %177, %279 ], [ %177, %277 ], [ %177, %275 ], [ %177, %273 ], [ %272, %271 ], [ %177, %269 ], [ %177, %267 ], [ %177, %265 ], [ %177, %263 ], [ %177, %261 ], [ %177, %259 ], [ %177, %257 ], [ %177, %255 ], [ %177, %253 ], [ %177, %195 ], [ %177, %251 ], [ %177, %165 ]
  %321 = phi i32 [ %179, %299 ], [ %179, %297 ], [ %179, %295 ], [ %179, %293 ], [ %179, %291 ], [ %179, %289 ], [ %179, %287 ], [ %179, %285 ], [ %179, %283 ], [ %179, %281 ], [ %179, %279 ], [ %179, %277 ], [ %276, %275 ], [ %179, %273 ], [ %179, %271 ], [ %179, %269 ], [ %179, %267 ], [ %179, %265 ], [ %179, %263 ], [ %179, %261 ], [ %179, %259 ], [ %179, %257 ], [ %179, %255 ], [ %179, %253 ], [ %179, %195 ], [ %179, %251 ], [ %179, %165 ]
  %322 = phi i32 [ %181, %299 ], [ %181, %297 ], [ %181, %295 ], [ %181, %293 ], [ %181, %291 ], [ %181, %289 ], [ %181, %287 ], [ %181, %285 ], [ %181, %283 ], [ %181, %281 ], [ %280, %279 ], [ %181, %277 ], [ %181, %275 ], [ %181, %273 ], [ %181, %271 ], [ %181, %269 ], [ %181, %267 ], [ %181, %265 ], [ %181, %263 ], [ %181, %261 ], [ %181, %259 ], [ %181, %257 ], [ %181, %255 ], [ %181, %253 ], [ %181, %195 ], [ %181, %251 ], [ %181, %165 ]
  %323 = phi i32 [ %183, %299 ], [ %183, %297 ], [ %183, %295 ], [ %183, %293 ], [ %183, %291 ], [ %183, %289 ], [ %183, %287 ], [ %183, %285 ], [ %284, %283 ], [ %183, %281 ], [ %183, %279 ], [ %183, %277 ], [ %183, %275 ], [ %183, %273 ], [ %183, %271 ], [ %183, %269 ], [ %183, %267 ], [ %183, %265 ], [ %183, %263 ], [ %183, %261 ], [ %183, %259 ], [ %183, %257 ], [ %183, %255 ], [ %183, %253 ], [ %183, %195 ], [ %183, %251 ], [ %183, %165 ]
  %324 = phi i32 [ %185, %299 ], [ %185, %297 ], [ %185, %295 ], [ %185, %293 ], [ %185, %291 ], [ %185, %289 ], [ %288, %287 ], [ %185, %285 ], [ %185, %283 ], [ %185, %281 ], [ %185, %279 ], [ %185, %277 ], [ %185, %275 ], [ %185, %273 ], [ %185, %271 ], [ %185, %269 ], [ %185, %267 ], [ %185, %265 ], [ %185, %263 ], [ %185, %261 ], [ %185, %259 ], [ %185, %257 ], [ %185, %255 ], [ %185, %253 ], [ %185, %195 ], [ %185, %251 ], [ %185, %165 ]
  %325 = phi i32 [ %187, %299 ], [ %187, %297 ], [ %187, %295 ], [ %187, %293 ], [ %292, %291 ], [ %187, %289 ], [ %187, %287 ], [ %187, %285 ], [ %187, %283 ], [ %187, %281 ], [ %187, %279 ], [ %187, %277 ], [ %187, %275 ], [ %187, %273 ], [ %187, %271 ], [ %187, %269 ], [ %187, %267 ], [ %187, %265 ], [ %187, %263 ], [ %187, %261 ], [ %187, %259 ], [ %187, %257 ], [ %187, %255 ], [ %187, %253 ], [ %187, %195 ], [ %187, %251 ], [ %187, %165 ]
  %326 = phi i32 [ %189, %299 ], [ %189, %297 ], [ %296, %295 ], [ %189, %293 ], [ %189, %291 ], [ %189, %289 ], [ %189, %287 ], [ %189, %285 ], [ %189, %283 ], [ %189, %281 ], [ %189, %279 ], [ %189, %277 ], [ %189, %275 ], [ %189, %273 ], [ %189, %271 ], [ %189, %269 ], [ %189, %267 ], [ %189, %265 ], [ %189, %263 ], [ %189, %261 ], [ %189, %259 ], [ %189, %257 ], [ %189, %255 ], [ %189, %253 ], [ %189, %195 ], [ %189, %251 ], [ %189, %165 ]
  %327 = phi i32 [ %300, %299 ], [ %191, %297 ], [ %191, %295 ], [ %191, %293 ], [ %191, %291 ], [ %191, %289 ], [ %191, %287 ], [ %191, %285 ], [ %191, %283 ], [ %191, %281 ], [ %191, %279 ], [ %191, %277 ], [ %191, %275 ], [ %191, %273 ], [ %191, %271 ], [ %191, %269 ], [ %191, %267 ], [ %191, %265 ], [ %191, %263 ], [ %191, %261 ], [ %191, %259 ], [ %191, %257 ], [ %191, %255 ], [ %191, %253 ], [ %191, %195 ], [ %191, %251 ], [ %191, %165 ]
  %328 = add nuw nsw i64 %192, 1
  %329 = icmp eq i64 %328, %52
  br i1 %329, label %197, label %165, !llvm.loop !15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
