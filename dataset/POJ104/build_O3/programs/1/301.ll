; ModuleID = 'source-C-CXX/1/301.c'
source_filename = "source-C-CXX/1/301.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.info = type { i16, [27 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca [999 x %struct.info], align 16
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast [999 x %struct.info]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 29970, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %8 = load i32, i32* %1, align 4, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %0, %10
  %11 = phi i64 [ %15, %10 ], [ 0, %0 ]
  %12 = getelementptr inbounds [999 x %struct.info], [999 x %struct.info]* %3, i64 0, i64 %11, i32 0
  %13 = getelementptr inbounds [999 x %struct.info], [999 x %struct.info]* %3, i64 0, i64 %11, i32 1
  %14 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i16* nonnull %12, [27 x i8]* nonnull %13)
  %15 = add nuw nsw i64 %11, 1
  %16 = load i32, i32* %1, align 4, !tbaa !5
  %17 = sext i32 %16 to i64
  %18 = icmp slt i64 %15, %17
  br i1 %18, label %10, label %19, !llvm.loop !9

19:                                               ; preds = %10, %0
  %20 = phi i32 [ %8, %0 ], [ %16, %10 ]
  %21 = getelementptr inbounds [999 x %struct.info], [999 x %struct.info]* %3, i64 0, i64 0
  %22 = call signext i8 @findoutmax(%struct.info* nonnull %21, i32 %20, i32* nonnull %2)
  %23 = sext i8 %22 to i32
  %24 = load i32, i32* %2, align 4, !tbaa !5
  %25 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %23, i32 %24)
  %26 = load i32, i32* %1, align 4, !tbaa !5
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %52

28:                                               ; preds = %19
  %29 = zext i32 %26 to i64
  br label %30

30:                                               ; preds = %49, %28
  %31 = phi i64 [ 0, %28 ], [ %50, %49 ]
  %32 = getelementptr inbounds [999 x %struct.info], [999 x %struct.info]* %3, i64 0, i64 %31, i32 0
  %33 = getelementptr inbounds [999 x %struct.info], [999 x %struct.info]* %3, i64 0, i64 %31, i32 1, i64 0
  %34 = load i8, i8* %33, align 2, !tbaa !11
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %30, %44
  %37 = phi i64 [ %45, %44 ], [ 0, %30 ]
  %38 = phi i8 [ %47, %44 ], [ %34, %30 ]
  %39 = icmp eq i8 %38, %22
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = load i16, i16* %32, align 2, !tbaa !12
  %42 = sext i16 %41 to i32
  %43 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %42) #5
  br label %44

44:                                               ; preds = %40, %36
  %45 = add nuw i64 %37, 1
  %46 = getelementptr inbounds [999 x %struct.info], [999 x %struct.info]* %3, i64 0, i64 %31, i32 1, i64 %45
  %47 = load i8, i8* %46, align 1, !tbaa !11
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %36, !llvm.loop !15

49:                                               ; preds = %44, %30
  %50 = add nuw nsw i64 %31, 1
  %51 = icmp eq i64 %50, %29
  br i1 %51, label %52, label %30, !llvm.loop !16

52:                                               ; preds = %49, %19
  call void @llvm.lifetime.end.p0i8(i64 29970, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nosync nounwind sspstrong uwtable
define dso_local signext i8 @findoutmax(%struct.info* nocapture readonly %0, i32 %1, i32* nocapture %2) local_unnamed_addr #3 {
  %4 = alloca [26 x i32], align 16
  %5 = bitcast [26 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(104) %5, i8 0, i64 104, i1 false)
  %6 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 25
  %7 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 24
  %8 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 23
  %9 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 22
  %10 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 21
  %11 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 20
  %12 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 19
  %13 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 18
  %14 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 17
  %15 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 16
  %16 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 15
  %17 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 14
  %18 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 13
  %19 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 12
  %20 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 11
  %21 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 10
  %22 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 9
  %23 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 8
  %24 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 7
  %25 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 6
  %26 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 5
  %27 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 4
  %28 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 3
  %29 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 2
  %30 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 1
  %31 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 0
  %32 = icmp sgt i32 %1, 0
  br i1 %32, label %33, label %66

33:                                               ; preds = %3
  %34 = zext i32 %1 to i64
  br label %35

35:                                               ; preds = %33, %333
  %36 = phi i32 [ 0, %33 ], [ %334, %333 ]
  %37 = phi i32 [ 0, %33 ], [ %335, %333 ]
  %38 = phi i32 [ 0, %33 ], [ %336, %333 ]
  %39 = phi i32 [ 0, %33 ], [ %337, %333 ]
  %40 = phi i32 [ 0, %33 ], [ %338, %333 ]
  %41 = phi i32 [ 0, %33 ], [ %339, %333 ]
  %42 = phi i32 [ 0, %33 ], [ %340, %333 ]
  %43 = phi i32 [ 0, %33 ], [ %341, %333 ]
  %44 = phi i32 [ 0, %33 ], [ %342, %333 ]
  %45 = phi i32 [ 0, %33 ], [ %343, %333 ]
  %46 = phi i32 [ 0, %33 ], [ %344, %333 ]
  %47 = phi i32 [ 0, %33 ], [ %345, %333 ]
  %48 = phi i32 [ 0, %33 ], [ %346, %333 ]
  %49 = phi i32 [ 0, %33 ], [ %347, %333 ]
  %50 = phi i32 [ 0, %33 ], [ %348, %333 ]
  %51 = phi i32 [ 0, %33 ], [ %349, %333 ]
  %52 = phi i32 [ 0, %33 ], [ %350, %333 ]
  %53 = phi i32 [ 0, %33 ], [ %351, %333 ]
  %54 = phi i32 [ 0, %33 ], [ %352, %333 ]
  %55 = phi i32 [ 0, %33 ], [ %353, %333 ]
  %56 = phi i32 [ 0, %33 ], [ %354, %333 ]
  %57 = phi i32 [ 0, %33 ], [ %355, %333 ]
  %58 = phi i32 [ 0, %33 ], [ %356, %333 ]
  %59 = phi i32 [ 0, %33 ], [ %357, %333 ]
  %60 = phi i32 [ 0, %33 ], [ %358, %333 ]
  %61 = phi i32 [ 0, %33 ], [ %359, %333 ]
  %62 = phi i64 [ 0, %33 ], [ %360, %333 ]
  %63 = getelementptr inbounds %struct.info, %struct.info* %0, i64 %62, i32 1, i64 0
  %64 = load i8, i8* %63, align 1, !tbaa !11
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %333, label %220

66:                                               ; preds = %333, %3
  %67 = phi i32 [ 0, %3 ], [ %351, %333 ]
  %68 = phi i32 [ 0, %3 ], [ %350, %333 ]
  %69 = phi i32 [ 0, %3 ], [ %349, %333 ]
  %70 = phi i32 [ 0, %3 ], [ %348, %333 ]
  %71 = phi i32 [ 0, %3 ], [ %347, %333 ]
  %72 = phi i32 [ 0, %3 ], [ %346, %333 ]
  %73 = phi i32 [ 0, %3 ], [ %345, %333 ]
  %74 = phi i32 [ 0, %3 ], [ %344, %333 ]
  %75 = phi i32 [ 0, %3 ], [ %343, %333 ]
  %76 = phi i32 [ 0, %3 ], [ %342, %333 ]
  %77 = phi i32 [ 0, %3 ], [ %341, %333 ]
  %78 = phi i32 [ 0, %3 ], [ %340, %333 ]
  %79 = phi i32 [ 0, %3 ], [ %339, %333 ]
  %80 = phi i32 [ 0, %3 ], [ %338, %333 ]
  %81 = phi i32 [ 0, %3 ], [ %337, %333 ]
  %82 = phi i32 [ 0, %3 ], [ %336, %333 ]
  %83 = phi i32 [ 0, %3 ], [ %335, %333 ]
  %84 = phi i32 [ 0, %3 ], [ %334, %333 ]
  %85 = icmp slt i32 %84, %83
  %86 = zext i1 %85 to i32
  %87 = zext i1 %85 to i64
  %88 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4, !tbaa !5
  %90 = icmp slt i32 %89, %82
  %91 = select i1 %90, i32 2, i32 %86
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4, !tbaa !5
  %95 = icmp slt i32 %94, %81
  %96 = select i1 %95, i32 3, i32 %91
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4, !tbaa !5
  %100 = icmp slt i32 %99, %80
  %101 = select i1 %100, i32 4, i32 %96
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4, !tbaa !5
  %105 = icmp slt i32 %104, %79
  %106 = select i1 %105, i32 5, i32 %101
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4, !tbaa !5
  %110 = icmp slt i32 %109, %78
  %111 = select i1 %110, i32 6, i32 %106
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4, !tbaa !5
  %115 = icmp slt i32 %114, %77
  %116 = select i1 %115, i32 7, i32 %111
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4, !tbaa !5
  %120 = icmp slt i32 %119, %76
  %121 = select i1 %120, i32 8, i32 %116
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %122
  %124 = load i32, i32* %123, align 4, !tbaa !5
  %125 = icmp slt i32 %124, %75
  %126 = select i1 %125, i32 9, i32 %121
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %127
  %129 = load i32, i32* %128, align 4, !tbaa !5
  %130 = icmp slt i32 %129, %74
  %131 = select i1 %130, i32 10, i32 %126
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %132
  %134 = load i32, i32* %133, align 4, !tbaa !5
  %135 = icmp slt i32 %134, %73
  %136 = select i1 %135, i32 11, i32 %131
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4, !tbaa !5
  %140 = icmp slt i32 %139, %72
  %141 = select i1 %140, i32 12, i32 %136
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %142
  %144 = load i32, i32* %143, align 4, !tbaa !5
  %145 = icmp slt i32 %144, %71
  %146 = select i1 %145, i32 13, i32 %141
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4, !tbaa !5
  %150 = icmp slt i32 %149, %70
  %151 = select i1 %150, i32 14, i32 %146
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %152
  %154 = load i32, i32* %153, align 4, !tbaa !5
  %155 = icmp slt i32 %154, %69
  %156 = select i1 %155, i32 15, i32 %151
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %157
  %159 = load i32, i32* %158, align 4, !tbaa !5
  %160 = icmp slt i32 %159, %68
  %161 = select i1 %160, i32 16, i32 %156
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4, !tbaa !5
  %165 = icmp slt i32 %164, %67
  %166 = select i1 %165, i32 17, i32 %161
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %167
  %169 = load i32, i32* %168, align 4, !tbaa !5
  %170 = load i32, i32* %13, align 8, !tbaa !5
  %171 = icmp slt i32 %169, %170
  %172 = select i1 %171, i32 18, i32 %166
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %173
  %175 = load i32, i32* %174, align 4, !tbaa !5
  %176 = load i32, i32* %12, align 4, !tbaa !5
  %177 = icmp slt i32 %175, %176
  %178 = select i1 %177, i32 19, i32 %172
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %179
  %181 = load i32, i32* %180, align 4, !tbaa !5
  %182 = load i32, i32* %11, align 16, !tbaa !5
  %183 = icmp slt i32 %181, %182
  %184 = select i1 %183, i32 20, i32 %178
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4, !tbaa !5
  %188 = load i32, i32* %10, align 4, !tbaa !5
  %189 = icmp slt i32 %187, %188
  %190 = select i1 %189, i32 21, i32 %184
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %191
  %193 = load i32, i32* %192, align 4, !tbaa !5
  %194 = load i32, i32* %9, align 8, !tbaa !5
  %195 = icmp slt i32 %193, %194
  %196 = select i1 %195, i32 22, i32 %190
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4, !tbaa !5
  %200 = load i32, i32* %8, align 4, !tbaa !5
  %201 = icmp slt i32 %199, %200
  %202 = select i1 %201, i32 23, i32 %196
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %203
  %205 = load i32, i32* %204, align 4, !tbaa !5
  %206 = load i32, i32* %7, align 16, !tbaa !5
  %207 = icmp slt i32 %205, %206
  %208 = select i1 %207, i32 24, i32 %202
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %209
  %211 = load i32, i32* %210, align 4, !tbaa !5
  %212 = load i32, i32* %6, align 4, !tbaa !5
  %213 = icmp slt i32 %211, %212
  %214 = select i1 %213, i32 25, i32 %208
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds [26 x i32], [26 x i32]* %4, i64 0, i64 %215
  %217 = load i32, i32* %216, align 4, !tbaa !5
  store i32 %217, i32* %2, align 4, !tbaa !5
  %218 = trunc i32 %214 to i8
  %219 = add nuw nsw i8 %218, 65
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %5) #5
  ret i8 %219

220:                                              ; preds = %35, %302
  %221 = phi i32 [ %303, %302 ], [ %36, %35 ]
  %222 = phi i32 [ %304, %302 ], [ %37, %35 ]
  %223 = phi i32 [ %305, %302 ], [ %38, %35 ]
  %224 = phi i32 [ %306, %302 ], [ %39, %35 ]
  %225 = phi i32 [ %307, %302 ], [ %40, %35 ]
  %226 = phi i32 [ %308, %302 ], [ %41, %35 ]
  %227 = phi i32 [ %309, %302 ], [ %42, %35 ]
  %228 = phi i32 [ %310, %302 ], [ %43, %35 ]
  %229 = phi i32 [ %311, %302 ], [ %44, %35 ]
  %230 = phi i32 [ %312, %302 ], [ %45, %35 ]
  %231 = phi i32 [ %313, %302 ], [ %46, %35 ]
  %232 = phi i32 [ %314, %302 ], [ %47, %35 ]
  %233 = phi i32 [ %315, %302 ], [ %48, %35 ]
  %234 = phi i32 [ %316, %302 ], [ %49, %35 ]
  %235 = phi i32 [ %317, %302 ], [ %50, %35 ]
  %236 = phi i32 [ %318, %302 ], [ %51, %35 ]
  %237 = phi i32 [ %319, %302 ], [ %52, %35 ]
  %238 = phi i32 [ %320, %302 ], [ %53, %35 ]
  %239 = phi i32 [ %321, %302 ], [ %54, %35 ]
  %240 = phi i32 [ %322, %302 ], [ %55, %35 ]
  %241 = phi i32 [ %323, %302 ], [ %56, %35 ]
  %242 = phi i32 [ %324, %302 ], [ %57, %35 ]
  %243 = phi i32 [ %325, %302 ], [ %58, %35 ]
  %244 = phi i32 [ %326, %302 ], [ %59, %35 ]
  %245 = phi i32 [ %327, %302 ], [ %60, %35 ]
  %246 = phi i32 [ %328, %302 ], [ %61, %35 ]
  %247 = phi i64 [ %329, %302 ], [ 0, %35 ]
  %248 = phi i8 [ %331, %302 ], [ %64, %35 ]
  %249 = sext i8 %248 to i32
  switch i32 %249, label %302 [
    i32 65, label %250
    i32 66, label %252
    i32 67, label %254
    i32 68, label %256
    i32 69, label %258
    i32 70, label %260
    i32 71, label %262
    i32 72, label %264
    i32 73, label %266
    i32 74, label %268
    i32 75, label %270
    i32 76, label %272
    i32 77, label %274
    i32 78, label %276
    i32 79, label %278
    i32 80, label %280
    i32 81, label %282
    i32 82, label %284
    i32 83, label %286
    i32 84, label %288
    i32 85, label %290
    i32 86, label %292
    i32 87, label %294
    i32 88, label %296
    i32 89, label %298
    i32 90, label %300
  ]

250:                                              ; preds = %220
  %251 = add nsw i32 %221, 1
  store i32 %251, i32* %31, align 16, !tbaa !5
  br label %302

252:                                              ; preds = %220
  %253 = add nsw i32 %222, 1
  store i32 %253, i32* %30, align 4, !tbaa !5
  br label %302

254:                                              ; preds = %220
  %255 = add nsw i32 %223, 1
  store i32 %255, i32* %29, align 8, !tbaa !5
  br label %302

256:                                              ; preds = %220
  %257 = add nsw i32 %224, 1
  store i32 %257, i32* %28, align 4, !tbaa !5
  br label %302

258:                                              ; preds = %220
  %259 = add nsw i32 %225, 1
  store i32 %259, i32* %27, align 16, !tbaa !5
  br label %302

260:                                              ; preds = %220
  %261 = add nsw i32 %226, 1
  store i32 %261, i32* %26, align 4, !tbaa !5
  br label %302

262:                                              ; preds = %220
  %263 = add nsw i32 %227, 1
  store i32 %263, i32* %25, align 8, !tbaa !5
  br label %302

264:                                              ; preds = %220
  %265 = add nsw i32 %228, 1
  store i32 %265, i32* %24, align 4, !tbaa !5
  br label %302

266:                                              ; preds = %220
  %267 = add nsw i32 %229, 1
  store i32 %267, i32* %23, align 16, !tbaa !5
  br label %302

268:                                              ; preds = %220
  %269 = add nsw i32 %230, 1
  store i32 %269, i32* %22, align 4, !tbaa !5
  br label %302

270:                                              ; preds = %220
  %271 = add nsw i32 %231, 1
  store i32 %271, i32* %21, align 8, !tbaa !5
  br label %302

272:                                              ; preds = %220
  %273 = add nsw i32 %232, 1
  store i32 %273, i32* %20, align 4, !tbaa !5
  br label %302

274:                                              ; preds = %220
  %275 = add nsw i32 %233, 1
  store i32 %275, i32* %19, align 16, !tbaa !5
  br label %302

276:                                              ; preds = %220
  %277 = add nsw i32 %234, 1
  store i32 %277, i32* %18, align 4, !tbaa !5
  br label %302

278:                                              ; preds = %220
  %279 = add nsw i32 %235, 1
  store i32 %279, i32* %17, align 8, !tbaa !5
  br label %302

280:                                              ; preds = %220
  %281 = add nsw i32 %236, 1
  store i32 %281, i32* %16, align 4, !tbaa !5
  br label %302

282:                                              ; preds = %220
  %283 = add nsw i32 %237, 1
  store i32 %283, i32* %15, align 16, !tbaa !5
  br label %302

284:                                              ; preds = %220
  %285 = add nsw i32 %238, 1
  store i32 %285, i32* %14, align 4, !tbaa !5
  br label %302

286:                                              ; preds = %220
  %287 = add nsw i32 %239, 1
  store i32 %287, i32* %13, align 8, !tbaa !5
  br label %302

288:                                              ; preds = %220
  %289 = add nsw i32 %240, 1
  store i32 %289, i32* %12, align 4, !tbaa !5
  br label %302

290:                                              ; preds = %220
  %291 = add nsw i32 %241, 1
  store i32 %291, i32* %11, align 16, !tbaa !5
  br label %302

292:                                              ; preds = %220
  %293 = add nsw i32 %242, 1
  store i32 %293, i32* %10, align 4, !tbaa !5
  br label %302

294:                                              ; preds = %220
  %295 = add nsw i32 %243, 1
  store i32 %295, i32* %9, align 8, !tbaa !5
  br label %302

296:                                              ; preds = %220
  %297 = add nsw i32 %244, 1
  store i32 %297, i32* %8, align 4, !tbaa !5
  br label %302

298:                                              ; preds = %220
  %299 = add nsw i32 %245, 1
  store i32 %299, i32* %7, align 16, !tbaa !5
  br label %302

300:                                              ; preds = %220
  %301 = add nsw i32 %246, 1
  store i32 %301, i32* %6, align 4, !tbaa !5
  br label %302

302:                                              ; preds = %250, %252, %254, %256, %258, %260, %262, %264, %266, %268, %270, %272, %274, %276, %278, %280, %282, %284, %286, %288, %290, %292, %294, %296, %298, %300, %220
  %303 = phi i32 [ %251, %250 ], [ %221, %252 ], [ %221, %254 ], [ %221, %256 ], [ %221, %258 ], [ %221, %260 ], [ %221, %262 ], [ %221, %264 ], [ %221, %266 ], [ %221, %268 ], [ %221, %270 ], [ %221, %272 ], [ %221, %274 ], [ %221, %276 ], [ %221, %278 ], [ %221, %280 ], [ %221, %282 ], [ %221, %284 ], [ %221, %286 ], [ %221, %288 ], [ %221, %290 ], [ %221, %292 ], [ %221, %294 ], [ %221, %296 ], [ %221, %298 ], [ %221, %300 ], [ %221, %220 ]
  %304 = phi i32 [ %222, %250 ], [ %253, %252 ], [ %222, %254 ], [ %222, %256 ], [ %222, %258 ], [ %222, %260 ], [ %222, %262 ], [ %222, %264 ], [ %222, %266 ], [ %222, %268 ], [ %222, %270 ], [ %222, %272 ], [ %222, %274 ], [ %222, %276 ], [ %222, %278 ], [ %222, %280 ], [ %222, %282 ], [ %222, %284 ], [ %222, %286 ], [ %222, %288 ], [ %222, %290 ], [ %222, %292 ], [ %222, %294 ], [ %222, %296 ], [ %222, %298 ], [ %222, %300 ], [ %222, %220 ]
  %305 = phi i32 [ %223, %250 ], [ %223, %252 ], [ %255, %254 ], [ %223, %256 ], [ %223, %258 ], [ %223, %260 ], [ %223, %262 ], [ %223, %264 ], [ %223, %266 ], [ %223, %268 ], [ %223, %270 ], [ %223, %272 ], [ %223, %274 ], [ %223, %276 ], [ %223, %278 ], [ %223, %280 ], [ %223, %282 ], [ %223, %284 ], [ %223, %286 ], [ %223, %288 ], [ %223, %290 ], [ %223, %292 ], [ %223, %294 ], [ %223, %296 ], [ %223, %298 ], [ %223, %300 ], [ %223, %220 ]
  %306 = phi i32 [ %224, %250 ], [ %224, %252 ], [ %224, %254 ], [ %257, %256 ], [ %224, %258 ], [ %224, %260 ], [ %224, %262 ], [ %224, %264 ], [ %224, %266 ], [ %224, %268 ], [ %224, %270 ], [ %224, %272 ], [ %224, %274 ], [ %224, %276 ], [ %224, %278 ], [ %224, %280 ], [ %224, %282 ], [ %224, %284 ], [ %224, %286 ], [ %224, %288 ], [ %224, %290 ], [ %224, %292 ], [ %224, %294 ], [ %224, %296 ], [ %224, %298 ], [ %224, %300 ], [ %224, %220 ]
  %307 = phi i32 [ %225, %250 ], [ %225, %252 ], [ %225, %254 ], [ %225, %256 ], [ %259, %258 ], [ %225, %260 ], [ %225, %262 ], [ %225, %264 ], [ %225, %266 ], [ %225, %268 ], [ %225, %270 ], [ %225, %272 ], [ %225, %274 ], [ %225, %276 ], [ %225, %278 ], [ %225, %280 ], [ %225, %282 ], [ %225, %284 ], [ %225, %286 ], [ %225, %288 ], [ %225, %290 ], [ %225, %292 ], [ %225, %294 ], [ %225, %296 ], [ %225, %298 ], [ %225, %300 ], [ %225, %220 ]
  %308 = phi i32 [ %226, %250 ], [ %226, %252 ], [ %226, %254 ], [ %226, %256 ], [ %226, %258 ], [ %261, %260 ], [ %226, %262 ], [ %226, %264 ], [ %226, %266 ], [ %226, %268 ], [ %226, %270 ], [ %226, %272 ], [ %226, %274 ], [ %226, %276 ], [ %226, %278 ], [ %226, %280 ], [ %226, %282 ], [ %226, %284 ], [ %226, %286 ], [ %226, %288 ], [ %226, %290 ], [ %226, %292 ], [ %226, %294 ], [ %226, %296 ], [ %226, %298 ], [ %226, %300 ], [ %226, %220 ]
  %309 = phi i32 [ %227, %250 ], [ %227, %252 ], [ %227, %254 ], [ %227, %256 ], [ %227, %258 ], [ %227, %260 ], [ %263, %262 ], [ %227, %264 ], [ %227, %266 ], [ %227, %268 ], [ %227, %270 ], [ %227, %272 ], [ %227, %274 ], [ %227, %276 ], [ %227, %278 ], [ %227, %280 ], [ %227, %282 ], [ %227, %284 ], [ %227, %286 ], [ %227, %288 ], [ %227, %290 ], [ %227, %292 ], [ %227, %294 ], [ %227, %296 ], [ %227, %298 ], [ %227, %300 ], [ %227, %220 ]
  %310 = phi i32 [ %228, %250 ], [ %228, %252 ], [ %228, %254 ], [ %228, %256 ], [ %228, %258 ], [ %228, %260 ], [ %228, %262 ], [ %265, %264 ], [ %228, %266 ], [ %228, %268 ], [ %228, %270 ], [ %228, %272 ], [ %228, %274 ], [ %228, %276 ], [ %228, %278 ], [ %228, %280 ], [ %228, %282 ], [ %228, %284 ], [ %228, %286 ], [ %228, %288 ], [ %228, %290 ], [ %228, %292 ], [ %228, %294 ], [ %228, %296 ], [ %228, %298 ], [ %228, %300 ], [ %228, %220 ]
  %311 = phi i32 [ %229, %250 ], [ %229, %252 ], [ %229, %254 ], [ %229, %256 ], [ %229, %258 ], [ %229, %260 ], [ %229, %262 ], [ %229, %264 ], [ %267, %266 ], [ %229, %268 ], [ %229, %270 ], [ %229, %272 ], [ %229, %274 ], [ %229, %276 ], [ %229, %278 ], [ %229, %280 ], [ %229, %282 ], [ %229, %284 ], [ %229, %286 ], [ %229, %288 ], [ %229, %290 ], [ %229, %292 ], [ %229, %294 ], [ %229, %296 ], [ %229, %298 ], [ %229, %300 ], [ %229, %220 ]
  %312 = phi i32 [ %230, %250 ], [ %230, %252 ], [ %230, %254 ], [ %230, %256 ], [ %230, %258 ], [ %230, %260 ], [ %230, %262 ], [ %230, %264 ], [ %230, %266 ], [ %269, %268 ], [ %230, %270 ], [ %230, %272 ], [ %230, %274 ], [ %230, %276 ], [ %230, %278 ], [ %230, %280 ], [ %230, %282 ], [ %230, %284 ], [ %230, %286 ], [ %230, %288 ], [ %230, %290 ], [ %230, %292 ], [ %230, %294 ], [ %230, %296 ], [ %230, %298 ], [ %230, %300 ], [ %230, %220 ]
  %313 = phi i32 [ %231, %250 ], [ %231, %252 ], [ %231, %254 ], [ %231, %256 ], [ %231, %258 ], [ %231, %260 ], [ %231, %262 ], [ %231, %264 ], [ %231, %266 ], [ %231, %268 ], [ %271, %270 ], [ %231, %272 ], [ %231, %274 ], [ %231, %276 ], [ %231, %278 ], [ %231, %280 ], [ %231, %282 ], [ %231, %284 ], [ %231, %286 ], [ %231, %288 ], [ %231, %290 ], [ %231, %292 ], [ %231, %294 ], [ %231, %296 ], [ %231, %298 ], [ %231, %300 ], [ %231, %220 ]
  %314 = phi i32 [ %232, %250 ], [ %232, %252 ], [ %232, %254 ], [ %232, %256 ], [ %232, %258 ], [ %232, %260 ], [ %232, %262 ], [ %232, %264 ], [ %232, %266 ], [ %232, %268 ], [ %232, %270 ], [ %273, %272 ], [ %232, %274 ], [ %232, %276 ], [ %232, %278 ], [ %232, %280 ], [ %232, %282 ], [ %232, %284 ], [ %232, %286 ], [ %232, %288 ], [ %232, %290 ], [ %232, %292 ], [ %232, %294 ], [ %232, %296 ], [ %232, %298 ], [ %232, %300 ], [ %232, %220 ]
  %315 = phi i32 [ %233, %250 ], [ %233, %252 ], [ %233, %254 ], [ %233, %256 ], [ %233, %258 ], [ %233, %260 ], [ %233, %262 ], [ %233, %264 ], [ %233, %266 ], [ %233, %268 ], [ %233, %270 ], [ %233, %272 ], [ %275, %274 ], [ %233, %276 ], [ %233, %278 ], [ %233, %280 ], [ %233, %282 ], [ %233, %284 ], [ %233, %286 ], [ %233, %288 ], [ %233, %290 ], [ %233, %292 ], [ %233, %294 ], [ %233, %296 ], [ %233, %298 ], [ %233, %300 ], [ %233, %220 ]
  %316 = phi i32 [ %234, %250 ], [ %234, %252 ], [ %234, %254 ], [ %234, %256 ], [ %234, %258 ], [ %234, %260 ], [ %234, %262 ], [ %234, %264 ], [ %234, %266 ], [ %234, %268 ], [ %234, %270 ], [ %234, %272 ], [ %234, %274 ], [ %277, %276 ], [ %234, %278 ], [ %234, %280 ], [ %234, %282 ], [ %234, %284 ], [ %234, %286 ], [ %234, %288 ], [ %234, %290 ], [ %234, %292 ], [ %234, %294 ], [ %234, %296 ], [ %234, %298 ], [ %234, %300 ], [ %234, %220 ]
  %317 = phi i32 [ %235, %250 ], [ %235, %252 ], [ %235, %254 ], [ %235, %256 ], [ %235, %258 ], [ %235, %260 ], [ %235, %262 ], [ %235, %264 ], [ %235, %266 ], [ %235, %268 ], [ %235, %270 ], [ %235, %272 ], [ %235, %274 ], [ %235, %276 ], [ %279, %278 ], [ %235, %280 ], [ %235, %282 ], [ %235, %284 ], [ %235, %286 ], [ %235, %288 ], [ %235, %290 ], [ %235, %292 ], [ %235, %294 ], [ %235, %296 ], [ %235, %298 ], [ %235, %300 ], [ %235, %220 ]
  %318 = phi i32 [ %236, %250 ], [ %236, %252 ], [ %236, %254 ], [ %236, %256 ], [ %236, %258 ], [ %236, %260 ], [ %236, %262 ], [ %236, %264 ], [ %236, %266 ], [ %236, %268 ], [ %236, %270 ], [ %236, %272 ], [ %236, %274 ], [ %236, %276 ], [ %236, %278 ], [ %281, %280 ], [ %236, %282 ], [ %236, %284 ], [ %236, %286 ], [ %236, %288 ], [ %236, %290 ], [ %236, %292 ], [ %236, %294 ], [ %236, %296 ], [ %236, %298 ], [ %236, %300 ], [ %236, %220 ]
  %319 = phi i32 [ %237, %250 ], [ %237, %252 ], [ %237, %254 ], [ %237, %256 ], [ %237, %258 ], [ %237, %260 ], [ %237, %262 ], [ %237, %264 ], [ %237, %266 ], [ %237, %268 ], [ %237, %270 ], [ %237, %272 ], [ %237, %274 ], [ %237, %276 ], [ %237, %278 ], [ %237, %280 ], [ %283, %282 ], [ %237, %284 ], [ %237, %286 ], [ %237, %288 ], [ %237, %290 ], [ %237, %292 ], [ %237, %294 ], [ %237, %296 ], [ %237, %298 ], [ %237, %300 ], [ %237, %220 ]
  %320 = phi i32 [ %238, %250 ], [ %238, %252 ], [ %238, %254 ], [ %238, %256 ], [ %238, %258 ], [ %238, %260 ], [ %238, %262 ], [ %238, %264 ], [ %238, %266 ], [ %238, %268 ], [ %238, %270 ], [ %238, %272 ], [ %238, %274 ], [ %238, %276 ], [ %238, %278 ], [ %238, %280 ], [ %238, %282 ], [ %285, %284 ], [ %238, %286 ], [ %238, %288 ], [ %238, %290 ], [ %238, %292 ], [ %238, %294 ], [ %238, %296 ], [ %238, %298 ], [ %238, %300 ], [ %238, %220 ]
  %321 = phi i32 [ %239, %250 ], [ %239, %252 ], [ %239, %254 ], [ %239, %256 ], [ %239, %258 ], [ %239, %260 ], [ %239, %262 ], [ %239, %264 ], [ %239, %266 ], [ %239, %268 ], [ %239, %270 ], [ %239, %272 ], [ %239, %274 ], [ %239, %276 ], [ %239, %278 ], [ %239, %280 ], [ %239, %282 ], [ %239, %284 ], [ %287, %286 ], [ %239, %288 ], [ %239, %290 ], [ %239, %292 ], [ %239, %294 ], [ %239, %296 ], [ %239, %298 ], [ %239, %300 ], [ %239, %220 ]
  %322 = phi i32 [ %240, %250 ], [ %240, %252 ], [ %240, %254 ], [ %240, %256 ], [ %240, %258 ], [ %240, %260 ], [ %240, %262 ], [ %240, %264 ], [ %240, %266 ], [ %240, %268 ], [ %240, %270 ], [ %240, %272 ], [ %240, %274 ], [ %240, %276 ], [ %240, %278 ], [ %240, %280 ], [ %240, %282 ], [ %240, %284 ], [ %240, %286 ], [ %289, %288 ], [ %240, %290 ], [ %240, %292 ], [ %240, %294 ], [ %240, %296 ], [ %240, %298 ], [ %240, %300 ], [ %240, %220 ]
  %323 = phi i32 [ %241, %250 ], [ %241, %252 ], [ %241, %254 ], [ %241, %256 ], [ %241, %258 ], [ %241, %260 ], [ %241, %262 ], [ %241, %264 ], [ %241, %266 ], [ %241, %268 ], [ %241, %270 ], [ %241, %272 ], [ %241, %274 ], [ %241, %276 ], [ %241, %278 ], [ %241, %280 ], [ %241, %282 ], [ %241, %284 ], [ %241, %286 ], [ %241, %288 ], [ %291, %290 ], [ %241, %292 ], [ %241, %294 ], [ %241, %296 ], [ %241, %298 ], [ %241, %300 ], [ %241, %220 ]
  %324 = phi i32 [ %242, %250 ], [ %242, %252 ], [ %242, %254 ], [ %242, %256 ], [ %242, %258 ], [ %242, %260 ], [ %242, %262 ], [ %242, %264 ], [ %242, %266 ], [ %242, %268 ], [ %242, %270 ], [ %242, %272 ], [ %242, %274 ], [ %242, %276 ], [ %242, %278 ], [ %242, %280 ], [ %242, %282 ], [ %242, %284 ], [ %242, %286 ], [ %242, %288 ], [ %242, %290 ], [ %293, %292 ], [ %242, %294 ], [ %242, %296 ], [ %242, %298 ], [ %242, %300 ], [ %242, %220 ]
  %325 = phi i32 [ %243, %250 ], [ %243, %252 ], [ %243, %254 ], [ %243, %256 ], [ %243, %258 ], [ %243, %260 ], [ %243, %262 ], [ %243, %264 ], [ %243, %266 ], [ %243, %268 ], [ %243, %270 ], [ %243, %272 ], [ %243, %274 ], [ %243, %276 ], [ %243, %278 ], [ %243, %280 ], [ %243, %282 ], [ %243, %284 ], [ %243, %286 ], [ %243, %288 ], [ %243, %290 ], [ %243, %292 ], [ %295, %294 ], [ %243, %296 ], [ %243, %298 ], [ %243, %300 ], [ %243, %220 ]
  %326 = phi i32 [ %244, %250 ], [ %244, %252 ], [ %244, %254 ], [ %244, %256 ], [ %244, %258 ], [ %244, %260 ], [ %244, %262 ], [ %244, %264 ], [ %244, %266 ], [ %244, %268 ], [ %244, %270 ], [ %244, %272 ], [ %244, %274 ], [ %244, %276 ], [ %244, %278 ], [ %244, %280 ], [ %244, %282 ], [ %244, %284 ], [ %244, %286 ], [ %244, %288 ], [ %244, %290 ], [ %244, %292 ], [ %244, %294 ], [ %297, %296 ], [ %244, %298 ], [ %244, %300 ], [ %244, %220 ]
  %327 = phi i32 [ %245, %250 ], [ %245, %252 ], [ %245, %254 ], [ %245, %256 ], [ %245, %258 ], [ %245, %260 ], [ %245, %262 ], [ %245, %264 ], [ %245, %266 ], [ %245, %268 ], [ %245, %270 ], [ %245, %272 ], [ %245, %274 ], [ %245, %276 ], [ %245, %278 ], [ %245, %280 ], [ %245, %282 ], [ %245, %284 ], [ %245, %286 ], [ %245, %288 ], [ %245, %290 ], [ %245, %292 ], [ %245, %294 ], [ %245, %296 ], [ %299, %298 ], [ %245, %300 ], [ %245, %220 ]
  %328 = phi i32 [ %246, %250 ], [ %246, %252 ], [ %246, %254 ], [ %246, %256 ], [ %246, %258 ], [ %246, %260 ], [ %246, %262 ], [ %246, %264 ], [ %246, %266 ], [ %246, %268 ], [ %246, %270 ], [ %246, %272 ], [ %246, %274 ], [ %246, %276 ], [ %246, %278 ], [ %246, %280 ], [ %246, %282 ], [ %246, %284 ], [ %246, %286 ], [ %246, %288 ], [ %246, %290 ], [ %246, %292 ], [ %246, %294 ], [ %246, %296 ], [ %246, %298 ], [ %301, %300 ], [ %246, %220 ]
  %329 = add nuw i64 %247, 1
  %330 = getelementptr inbounds %struct.info, %struct.info* %0, i64 %62, i32 1, i64 %329
  %331 = load i8, i8* %330, align 1, !tbaa !11
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %333, label %220, !llvm.loop !17

333:                                              ; preds = %302, %35
  %334 = phi i32 [ %36, %35 ], [ %303, %302 ]
  %335 = phi i32 [ %37, %35 ], [ %304, %302 ]
  %336 = phi i32 [ %38, %35 ], [ %305, %302 ]
  %337 = phi i32 [ %39, %35 ], [ %306, %302 ]
  %338 = phi i32 [ %40, %35 ], [ %307, %302 ]
  %339 = phi i32 [ %41, %35 ], [ %308, %302 ]
  %340 = phi i32 [ %42, %35 ], [ %309, %302 ]
  %341 = phi i32 [ %43, %35 ], [ %310, %302 ]
  %342 = phi i32 [ %44, %35 ], [ %311, %302 ]
  %343 = phi i32 [ %45, %35 ], [ %312, %302 ]
  %344 = phi i32 [ %46, %35 ], [ %313, %302 ]
  %345 = phi i32 [ %47, %35 ], [ %314, %302 ]
  %346 = phi i32 [ %48, %35 ], [ %315, %302 ]
  %347 = phi i32 [ %49, %35 ], [ %316, %302 ]
  %348 = phi i32 [ %50, %35 ], [ %317, %302 ]
  %349 = phi i32 [ %51, %35 ], [ %318, %302 ]
  %350 = phi i32 [ %52, %35 ], [ %319, %302 ]
  %351 = phi i32 [ %53, %35 ], [ %320, %302 ]
  %352 = phi i32 [ %54, %35 ], [ %321, %302 ]
  %353 = phi i32 [ %55, %35 ], [ %322, %302 ]
  %354 = phi i32 [ %56, %35 ], [ %323, %302 ]
  %355 = phi i32 [ %57, %35 ], [ %324, %302 ]
  %356 = phi i32 [ %58, %35 ], [ %325, %302 ]
  %357 = phi i32 [ %59, %35 ], [ %326, %302 ]
  %358 = phi i32 [ %60, %35 ], [ %327, %302 ]
  %359 = phi i32 [ %61, %35 ], [ %328, %302 ]
  %360 = add nuw nsw i64 %62, 1
  %361 = icmp eq i64 %360, %34
  br i1 %361, label %66, label %35, !llvm.loop !18
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @detect(%struct.info* nocapture readonly %0, i8 signext %1, i32 %2) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %29

5:                                                ; preds = %3
  %6 = zext i32 %2 to i64
  br label %7

7:                                                ; preds = %5, %26
  %8 = phi i64 [ 0, %5 ], [ %27, %26 ]
  %9 = getelementptr inbounds %struct.info, %struct.info* %0, i64 %8, i32 0
  %10 = getelementptr inbounds %struct.info, %struct.info* %0, i64 %8, i32 1, i64 0
  %11 = load i8, i8* %10, align 1, !tbaa !11
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %7, %21
  %14 = phi i64 [ %22, %21 ], [ 0, %7 ]
  %15 = phi i8 [ %24, %21 ], [ %11, %7 ]
  %16 = icmp eq i8 %15, %1
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = load i16, i16* %9, align 2, !tbaa !12
  %19 = sext i16 %18 to i32
  %20 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %19)
  br label %21

21:                                               ; preds = %13, %17
  %22 = add nuw i64 %14, 1
  %23 = getelementptr inbounds %struct.info, %struct.info* %0, i64 %8, i32 1, i64 %22
  %24 = load i8, i8* %23, align 1, !tbaa !11
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %13, !llvm.loop !15

26:                                               ; preds = %21, %7
  %27 = add nuw nsw i64 %8, 1
  %28 = icmp eq i64 %27, %6
  br i1 %28, label %29, label %7, !llvm.loop !16

29:                                               ; preds = %26, %3
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nofree nosync nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = !{!13, !14, i64 0}
!13 = !{!"info", !14, i64 0, !7, i64 2}
!14 = !{!"short", !7, i64 0}
!15 = distinct !{!15, !10}
!16 = distinct !{!16, !10}
!17 = distinct !{!17, !10}
!18 = distinct !{!18, !10}
