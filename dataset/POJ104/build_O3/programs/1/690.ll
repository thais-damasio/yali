; ModuleID = 'source-C-CXX/1/690.c'
source_filename = "source-C-CXX/1/690.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.book = type { i32, [27 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main(i32 %0, i8** nocapture readnone %1) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca [1000 x %struct.book], align 16
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #3
  %6 = bitcast [1000 x %struct.book]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32000, i8* nonnull %6) #3
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %3)
  %8 = load i32, i32* %3, align 4, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %156

10:                                               ; preds = %2, %151
  %11 = phi i32 [ %42, %151 ], [ 0, %2 ]
  %12 = phi i32 [ %43, %151 ], [ 0, %2 ]
  %13 = phi i32 [ %44, %151 ], [ 0, %2 ]
  %14 = phi i32 [ %45, %151 ], [ 0, %2 ]
  %15 = phi i32 [ %46, %151 ], [ 0, %2 ]
  %16 = phi i32 [ %47, %151 ], [ 0, %2 ]
  %17 = phi i32 [ %48, %151 ], [ 0, %2 ]
  %18 = phi i32 [ %49, %151 ], [ 0, %2 ]
  %19 = phi i32 [ %50, %151 ], [ 0, %2 ]
  %20 = phi i32 [ %51, %151 ], [ 0, %2 ]
  %21 = phi i32 [ %52, %151 ], [ 0, %2 ]
  %22 = phi i32 [ %53, %151 ], [ 0, %2 ]
  %23 = phi i32 [ %54, %151 ], [ 0, %2 ]
  %24 = phi i32 [ %55, %151 ], [ 0, %2 ]
  %25 = phi i32 [ %56, %151 ], [ 0, %2 ]
  %26 = phi i32 [ %57, %151 ], [ 0, %2 ]
  %27 = phi i32 [ %58, %151 ], [ 0, %2 ]
  %28 = phi i32 [ %59, %151 ], [ 0, %2 ]
  %29 = phi i32 [ %60, %151 ], [ 0, %2 ]
  %30 = phi i32 [ %61, %151 ], [ 0, %2 ]
  %31 = phi i32 [ %62, %151 ], [ 0, %2 ]
  %32 = phi i32 [ %63, %151 ], [ 0, %2 ]
  %33 = phi i32 [ %64, %151 ], [ 0, %2 ]
  %34 = phi i32 [ %65, %151 ], [ 0, %2 ]
  %35 = phi i32 [ %66, %151 ], [ 0, %2 ]
  %36 = phi i32 [ %67, %151 ], [ 0, %2 ]
  %37 = phi i64 [ %152, %151 ], [ 0, %2 ]
  %38 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %4, i64 0, i64 %37, i32 0
  %39 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %4, i64 0, i64 %37, i32 1, i64 0
  %40 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %38, i8* nonnull %39)
  br label %41

41:                                               ; preds = %123, %10
  %42 = phi i32 [ %11, %10 ], [ %124, %123 ]
  %43 = phi i32 [ %12, %10 ], [ %125, %123 ]
  %44 = phi i32 [ %13, %10 ], [ %126, %123 ]
  %45 = phi i32 [ %14, %10 ], [ %127, %123 ]
  %46 = phi i32 [ %15, %10 ], [ %128, %123 ]
  %47 = phi i32 [ %16, %10 ], [ %129, %123 ]
  %48 = phi i32 [ %17, %10 ], [ %130, %123 ]
  %49 = phi i32 [ %18, %10 ], [ %131, %123 ]
  %50 = phi i32 [ %19, %10 ], [ %132, %123 ]
  %51 = phi i32 [ %20, %10 ], [ %133, %123 ]
  %52 = phi i32 [ %21, %10 ], [ %134, %123 ]
  %53 = phi i32 [ %22, %10 ], [ %135, %123 ]
  %54 = phi i32 [ %23, %10 ], [ %136, %123 ]
  %55 = phi i32 [ %24, %10 ], [ %137, %123 ]
  %56 = phi i32 [ %25, %10 ], [ %138, %123 ]
  %57 = phi i32 [ %26, %10 ], [ %139, %123 ]
  %58 = phi i32 [ %27, %10 ], [ %140, %123 ]
  %59 = phi i32 [ %28, %10 ], [ %141, %123 ]
  %60 = phi i32 [ %29, %10 ], [ %142, %123 ]
  %61 = phi i32 [ %30, %10 ], [ %143, %123 ]
  %62 = phi i32 [ %31, %10 ], [ %144, %123 ]
  %63 = phi i32 [ %32, %10 ], [ %145, %123 ]
  %64 = phi i32 [ %33, %10 ], [ %146, %123 ]
  %65 = phi i32 [ %34, %10 ], [ %147, %123 ]
  %66 = phi i32 [ %35, %10 ], [ %148, %123 ]
  %67 = phi i32 [ %36, %10 ], [ %149, %123 ]
  %68 = phi i64 [ 0, %10 ], [ %150, %123 ]
  %69 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %4, i64 0, i64 %37, i32 1, i64 %68
  %70 = load i8, i8* %69, align 1, !tbaa !9
  switch i8 %70, label %123 [
    i8 0, label %151
    i8 65, label %71
    i8 66, label %73
    i8 67, label %75
    i8 68, label %77
    i8 69, label %79
    i8 70, label %81
    i8 71, label %83
    i8 72, label %85
    i8 73, label %87
    i8 74, label %89
    i8 75, label %91
    i8 76, label %93
    i8 77, label %95
    i8 78, label %97
    i8 79, label %99
    i8 80, label %101
    i8 81, label %103
    i8 82, label %105
    i8 83, label %107
    i8 84, label %109
    i8 85, label %111
    i8 86, label %113
    i8 87, label %115
    i8 88, label %117
    i8 89, label %119
    i8 90, label %121
  ]

71:                                               ; preds = %41
  %72 = add nsw i32 %42, 1
  br label %123

73:                                               ; preds = %41
  %74 = add nsw i32 %43, 1
  br label %123

75:                                               ; preds = %41
  %76 = add nsw i32 %44, 1
  br label %123

77:                                               ; preds = %41
  %78 = add nsw i32 %45, 1
  br label %123

79:                                               ; preds = %41
  %80 = add nsw i32 %46, 1
  br label %123

81:                                               ; preds = %41
  %82 = add nsw i32 %47, 1
  br label %123

83:                                               ; preds = %41
  %84 = add nsw i32 %48, 1
  br label %123

85:                                               ; preds = %41
  %86 = add nsw i32 %49, 1
  br label %123

87:                                               ; preds = %41
  %88 = add nsw i32 %50, 1
  br label %123

89:                                               ; preds = %41
  %90 = add nsw i32 %51, 1
  br label %123

91:                                               ; preds = %41
  %92 = add nsw i32 %52, 1
  br label %123

93:                                               ; preds = %41
  %94 = add nsw i32 %53, 1
  br label %123

95:                                               ; preds = %41
  %96 = add nsw i32 %54, 1
  br label %123

97:                                               ; preds = %41
  %98 = add nsw i32 %55, 1
  br label %123

99:                                               ; preds = %41
  %100 = add nsw i32 %56, 1
  br label %123

101:                                              ; preds = %41
  %102 = add nsw i32 %57, 1
  br label %123

103:                                              ; preds = %41
  %104 = add nsw i32 %58, 1
  br label %123

105:                                              ; preds = %41
  %106 = add nsw i32 %59, 1
  br label %123

107:                                              ; preds = %41
  %108 = add nsw i32 %60, 1
  br label %123

109:                                              ; preds = %41
  %110 = add nsw i32 %61, 1
  br label %123

111:                                              ; preds = %41
  %112 = add nsw i32 %62, 1
  br label %123

113:                                              ; preds = %41
  %114 = add nsw i32 %63, 1
  br label %123

115:                                              ; preds = %41
  %116 = add nsw i32 %64, 1
  br label %123

117:                                              ; preds = %41
  %118 = add nsw i32 %65, 1
  br label %123

119:                                              ; preds = %41
  %120 = add nsw i32 %66, 1
  br label %123

121:                                              ; preds = %41
  %122 = add nsw i32 %67, 1
  br label %123

123:                                              ; preds = %41, %71, %75, %79, %83, %87, %91, %95, %99, %103, %107, %111, %115, %119, %121, %117, %113, %109, %105, %101, %97, %93, %89, %85, %81, %77, %73
  %124 = phi i32 [ %42, %41 ], [ %42, %121 ], [ %42, %119 ], [ %42, %117 ], [ %42, %115 ], [ %42, %113 ], [ %42, %111 ], [ %42, %109 ], [ %42, %107 ], [ %42, %105 ], [ %42, %103 ], [ %42, %101 ], [ %42, %99 ], [ %42, %97 ], [ %42, %95 ], [ %42, %93 ], [ %42, %91 ], [ %42, %89 ], [ %42, %87 ], [ %42, %85 ], [ %42, %83 ], [ %42, %81 ], [ %42, %79 ], [ %42, %77 ], [ %42, %75 ], [ %42, %73 ], [ %72, %71 ]
  %125 = phi i32 [ %43, %41 ], [ %43, %121 ], [ %43, %119 ], [ %43, %117 ], [ %43, %115 ], [ %43, %113 ], [ %43, %111 ], [ %43, %109 ], [ %43, %107 ], [ %43, %105 ], [ %43, %103 ], [ %43, %101 ], [ %43, %99 ], [ %43, %97 ], [ %43, %95 ], [ %43, %93 ], [ %43, %91 ], [ %43, %89 ], [ %43, %87 ], [ %43, %85 ], [ %43, %83 ], [ %43, %81 ], [ %43, %79 ], [ %43, %77 ], [ %43, %75 ], [ %74, %73 ], [ %43, %71 ]
  %126 = phi i32 [ %44, %41 ], [ %44, %121 ], [ %44, %119 ], [ %44, %117 ], [ %44, %115 ], [ %44, %113 ], [ %44, %111 ], [ %44, %109 ], [ %44, %107 ], [ %44, %105 ], [ %44, %103 ], [ %44, %101 ], [ %44, %99 ], [ %44, %97 ], [ %44, %95 ], [ %44, %93 ], [ %44, %91 ], [ %44, %89 ], [ %44, %87 ], [ %44, %85 ], [ %44, %83 ], [ %44, %81 ], [ %44, %79 ], [ %44, %77 ], [ %76, %75 ], [ %44, %73 ], [ %44, %71 ]
  %127 = phi i32 [ %45, %41 ], [ %45, %121 ], [ %45, %119 ], [ %45, %117 ], [ %45, %115 ], [ %45, %113 ], [ %45, %111 ], [ %45, %109 ], [ %45, %107 ], [ %45, %105 ], [ %45, %103 ], [ %45, %101 ], [ %45, %99 ], [ %45, %97 ], [ %45, %95 ], [ %45, %93 ], [ %45, %91 ], [ %45, %89 ], [ %45, %87 ], [ %45, %85 ], [ %45, %83 ], [ %45, %81 ], [ %45, %79 ], [ %78, %77 ], [ %45, %75 ], [ %45, %73 ], [ %45, %71 ]
  %128 = phi i32 [ %46, %41 ], [ %46, %121 ], [ %46, %119 ], [ %46, %117 ], [ %46, %115 ], [ %46, %113 ], [ %46, %111 ], [ %46, %109 ], [ %46, %107 ], [ %46, %105 ], [ %46, %103 ], [ %46, %101 ], [ %46, %99 ], [ %46, %97 ], [ %46, %95 ], [ %46, %93 ], [ %46, %91 ], [ %46, %89 ], [ %46, %87 ], [ %46, %85 ], [ %46, %83 ], [ %46, %81 ], [ %80, %79 ], [ %46, %77 ], [ %46, %75 ], [ %46, %73 ], [ %46, %71 ]
  %129 = phi i32 [ %47, %41 ], [ %47, %121 ], [ %47, %119 ], [ %47, %117 ], [ %47, %115 ], [ %47, %113 ], [ %47, %111 ], [ %47, %109 ], [ %47, %107 ], [ %47, %105 ], [ %47, %103 ], [ %47, %101 ], [ %47, %99 ], [ %47, %97 ], [ %47, %95 ], [ %47, %93 ], [ %47, %91 ], [ %47, %89 ], [ %47, %87 ], [ %47, %85 ], [ %47, %83 ], [ %82, %81 ], [ %47, %79 ], [ %47, %77 ], [ %47, %75 ], [ %47, %73 ], [ %47, %71 ]
  %130 = phi i32 [ %48, %41 ], [ %48, %121 ], [ %48, %119 ], [ %48, %117 ], [ %48, %115 ], [ %48, %113 ], [ %48, %111 ], [ %48, %109 ], [ %48, %107 ], [ %48, %105 ], [ %48, %103 ], [ %48, %101 ], [ %48, %99 ], [ %48, %97 ], [ %48, %95 ], [ %48, %93 ], [ %48, %91 ], [ %48, %89 ], [ %48, %87 ], [ %48, %85 ], [ %84, %83 ], [ %48, %81 ], [ %48, %79 ], [ %48, %77 ], [ %48, %75 ], [ %48, %73 ], [ %48, %71 ]
  %131 = phi i32 [ %49, %41 ], [ %49, %121 ], [ %49, %119 ], [ %49, %117 ], [ %49, %115 ], [ %49, %113 ], [ %49, %111 ], [ %49, %109 ], [ %49, %107 ], [ %49, %105 ], [ %49, %103 ], [ %49, %101 ], [ %49, %99 ], [ %49, %97 ], [ %49, %95 ], [ %49, %93 ], [ %49, %91 ], [ %49, %89 ], [ %49, %87 ], [ %86, %85 ], [ %49, %83 ], [ %49, %81 ], [ %49, %79 ], [ %49, %77 ], [ %49, %75 ], [ %49, %73 ], [ %49, %71 ]
  %132 = phi i32 [ %50, %41 ], [ %50, %121 ], [ %50, %119 ], [ %50, %117 ], [ %50, %115 ], [ %50, %113 ], [ %50, %111 ], [ %50, %109 ], [ %50, %107 ], [ %50, %105 ], [ %50, %103 ], [ %50, %101 ], [ %50, %99 ], [ %50, %97 ], [ %50, %95 ], [ %50, %93 ], [ %50, %91 ], [ %50, %89 ], [ %88, %87 ], [ %50, %85 ], [ %50, %83 ], [ %50, %81 ], [ %50, %79 ], [ %50, %77 ], [ %50, %75 ], [ %50, %73 ], [ %50, %71 ]
  %133 = phi i32 [ %51, %41 ], [ %51, %121 ], [ %51, %119 ], [ %51, %117 ], [ %51, %115 ], [ %51, %113 ], [ %51, %111 ], [ %51, %109 ], [ %51, %107 ], [ %51, %105 ], [ %51, %103 ], [ %51, %101 ], [ %51, %99 ], [ %51, %97 ], [ %51, %95 ], [ %51, %93 ], [ %51, %91 ], [ %90, %89 ], [ %51, %87 ], [ %51, %85 ], [ %51, %83 ], [ %51, %81 ], [ %51, %79 ], [ %51, %77 ], [ %51, %75 ], [ %51, %73 ], [ %51, %71 ]
  %134 = phi i32 [ %52, %41 ], [ %52, %121 ], [ %52, %119 ], [ %52, %117 ], [ %52, %115 ], [ %52, %113 ], [ %52, %111 ], [ %52, %109 ], [ %52, %107 ], [ %52, %105 ], [ %52, %103 ], [ %52, %101 ], [ %52, %99 ], [ %52, %97 ], [ %52, %95 ], [ %52, %93 ], [ %92, %91 ], [ %52, %89 ], [ %52, %87 ], [ %52, %85 ], [ %52, %83 ], [ %52, %81 ], [ %52, %79 ], [ %52, %77 ], [ %52, %75 ], [ %52, %73 ], [ %52, %71 ]
  %135 = phi i32 [ %53, %41 ], [ %53, %121 ], [ %53, %119 ], [ %53, %117 ], [ %53, %115 ], [ %53, %113 ], [ %53, %111 ], [ %53, %109 ], [ %53, %107 ], [ %53, %105 ], [ %53, %103 ], [ %53, %101 ], [ %53, %99 ], [ %53, %97 ], [ %53, %95 ], [ %94, %93 ], [ %53, %91 ], [ %53, %89 ], [ %53, %87 ], [ %53, %85 ], [ %53, %83 ], [ %53, %81 ], [ %53, %79 ], [ %53, %77 ], [ %53, %75 ], [ %53, %73 ], [ %53, %71 ]
  %136 = phi i32 [ %54, %41 ], [ %54, %121 ], [ %54, %119 ], [ %54, %117 ], [ %54, %115 ], [ %54, %113 ], [ %54, %111 ], [ %54, %109 ], [ %54, %107 ], [ %54, %105 ], [ %54, %103 ], [ %54, %101 ], [ %54, %99 ], [ %54, %97 ], [ %96, %95 ], [ %54, %93 ], [ %54, %91 ], [ %54, %89 ], [ %54, %87 ], [ %54, %85 ], [ %54, %83 ], [ %54, %81 ], [ %54, %79 ], [ %54, %77 ], [ %54, %75 ], [ %54, %73 ], [ %54, %71 ]
  %137 = phi i32 [ %55, %41 ], [ %55, %121 ], [ %55, %119 ], [ %55, %117 ], [ %55, %115 ], [ %55, %113 ], [ %55, %111 ], [ %55, %109 ], [ %55, %107 ], [ %55, %105 ], [ %55, %103 ], [ %55, %101 ], [ %55, %99 ], [ %98, %97 ], [ %55, %95 ], [ %55, %93 ], [ %55, %91 ], [ %55, %89 ], [ %55, %87 ], [ %55, %85 ], [ %55, %83 ], [ %55, %81 ], [ %55, %79 ], [ %55, %77 ], [ %55, %75 ], [ %55, %73 ], [ %55, %71 ]
  %138 = phi i32 [ %56, %41 ], [ %56, %121 ], [ %56, %119 ], [ %56, %117 ], [ %56, %115 ], [ %56, %113 ], [ %56, %111 ], [ %56, %109 ], [ %56, %107 ], [ %56, %105 ], [ %56, %103 ], [ %56, %101 ], [ %100, %99 ], [ %56, %97 ], [ %56, %95 ], [ %56, %93 ], [ %56, %91 ], [ %56, %89 ], [ %56, %87 ], [ %56, %85 ], [ %56, %83 ], [ %56, %81 ], [ %56, %79 ], [ %56, %77 ], [ %56, %75 ], [ %56, %73 ], [ %56, %71 ]
  %139 = phi i32 [ %57, %41 ], [ %57, %121 ], [ %57, %119 ], [ %57, %117 ], [ %57, %115 ], [ %57, %113 ], [ %57, %111 ], [ %57, %109 ], [ %57, %107 ], [ %57, %105 ], [ %57, %103 ], [ %102, %101 ], [ %57, %99 ], [ %57, %97 ], [ %57, %95 ], [ %57, %93 ], [ %57, %91 ], [ %57, %89 ], [ %57, %87 ], [ %57, %85 ], [ %57, %83 ], [ %57, %81 ], [ %57, %79 ], [ %57, %77 ], [ %57, %75 ], [ %57, %73 ], [ %57, %71 ]
  %140 = phi i32 [ %58, %41 ], [ %58, %121 ], [ %58, %119 ], [ %58, %117 ], [ %58, %115 ], [ %58, %113 ], [ %58, %111 ], [ %58, %109 ], [ %58, %107 ], [ %58, %105 ], [ %104, %103 ], [ %58, %101 ], [ %58, %99 ], [ %58, %97 ], [ %58, %95 ], [ %58, %93 ], [ %58, %91 ], [ %58, %89 ], [ %58, %87 ], [ %58, %85 ], [ %58, %83 ], [ %58, %81 ], [ %58, %79 ], [ %58, %77 ], [ %58, %75 ], [ %58, %73 ], [ %58, %71 ]
  %141 = phi i32 [ %59, %41 ], [ %59, %121 ], [ %59, %119 ], [ %59, %117 ], [ %59, %115 ], [ %59, %113 ], [ %59, %111 ], [ %59, %109 ], [ %59, %107 ], [ %106, %105 ], [ %59, %103 ], [ %59, %101 ], [ %59, %99 ], [ %59, %97 ], [ %59, %95 ], [ %59, %93 ], [ %59, %91 ], [ %59, %89 ], [ %59, %87 ], [ %59, %85 ], [ %59, %83 ], [ %59, %81 ], [ %59, %79 ], [ %59, %77 ], [ %59, %75 ], [ %59, %73 ], [ %59, %71 ]
  %142 = phi i32 [ %60, %41 ], [ %60, %121 ], [ %60, %119 ], [ %60, %117 ], [ %60, %115 ], [ %60, %113 ], [ %60, %111 ], [ %60, %109 ], [ %108, %107 ], [ %60, %105 ], [ %60, %103 ], [ %60, %101 ], [ %60, %99 ], [ %60, %97 ], [ %60, %95 ], [ %60, %93 ], [ %60, %91 ], [ %60, %89 ], [ %60, %87 ], [ %60, %85 ], [ %60, %83 ], [ %60, %81 ], [ %60, %79 ], [ %60, %77 ], [ %60, %75 ], [ %60, %73 ], [ %60, %71 ]
  %143 = phi i32 [ %61, %41 ], [ %61, %121 ], [ %61, %119 ], [ %61, %117 ], [ %61, %115 ], [ %61, %113 ], [ %61, %111 ], [ %110, %109 ], [ %61, %107 ], [ %61, %105 ], [ %61, %103 ], [ %61, %101 ], [ %61, %99 ], [ %61, %97 ], [ %61, %95 ], [ %61, %93 ], [ %61, %91 ], [ %61, %89 ], [ %61, %87 ], [ %61, %85 ], [ %61, %83 ], [ %61, %81 ], [ %61, %79 ], [ %61, %77 ], [ %61, %75 ], [ %61, %73 ], [ %61, %71 ]
  %144 = phi i32 [ %62, %41 ], [ %62, %121 ], [ %62, %119 ], [ %62, %117 ], [ %62, %115 ], [ %62, %113 ], [ %112, %111 ], [ %62, %109 ], [ %62, %107 ], [ %62, %105 ], [ %62, %103 ], [ %62, %101 ], [ %62, %99 ], [ %62, %97 ], [ %62, %95 ], [ %62, %93 ], [ %62, %91 ], [ %62, %89 ], [ %62, %87 ], [ %62, %85 ], [ %62, %83 ], [ %62, %81 ], [ %62, %79 ], [ %62, %77 ], [ %62, %75 ], [ %62, %73 ], [ %62, %71 ]
  %145 = phi i32 [ %63, %41 ], [ %63, %121 ], [ %63, %119 ], [ %63, %117 ], [ %63, %115 ], [ %114, %113 ], [ %63, %111 ], [ %63, %109 ], [ %63, %107 ], [ %63, %105 ], [ %63, %103 ], [ %63, %101 ], [ %63, %99 ], [ %63, %97 ], [ %63, %95 ], [ %63, %93 ], [ %63, %91 ], [ %63, %89 ], [ %63, %87 ], [ %63, %85 ], [ %63, %83 ], [ %63, %81 ], [ %63, %79 ], [ %63, %77 ], [ %63, %75 ], [ %63, %73 ], [ %63, %71 ]
  %146 = phi i32 [ %64, %41 ], [ %64, %121 ], [ %64, %119 ], [ %64, %117 ], [ %116, %115 ], [ %64, %113 ], [ %64, %111 ], [ %64, %109 ], [ %64, %107 ], [ %64, %105 ], [ %64, %103 ], [ %64, %101 ], [ %64, %99 ], [ %64, %97 ], [ %64, %95 ], [ %64, %93 ], [ %64, %91 ], [ %64, %89 ], [ %64, %87 ], [ %64, %85 ], [ %64, %83 ], [ %64, %81 ], [ %64, %79 ], [ %64, %77 ], [ %64, %75 ], [ %64, %73 ], [ %64, %71 ]
  %147 = phi i32 [ %65, %41 ], [ %65, %121 ], [ %65, %119 ], [ %118, %117 ], [ %65, %115 ], [ %65, %113 ], [ %65, %111 ], [ %65, %109 ], [ %65, %107 ], [ %65, %105 ], [ %65, %103 ], [ %65, %101 ], [ %65, %99 ], [ %65, %97 ], [ %65, %95 ], [ %65, %93 ], [ %65, %91 ], [ %65, %89 ], [ %65, %87 ], [ %65, %85 ], [ %65, %83 ], [ %65, %81 ], [ %65, %79 ], [ %65, %77 ], [ %65, %75 ], [ %65, %73 ], [ %65, %71 ]
  %148 = phi i32 [ %66, %41 ], [ %66, %121 ], [ %120, %119 ], [ %66, %117 ], [ %66, %115 ], [ %66, %113 ], [ %66, %111 ], [ %66, %109 ], [ %66, %107 ], [ %66, %105 ], [ %66, %103 ], [ %66, %101 ], [ %66, %99 ], [ %66, %97 ], [ %66, %95 ], [ %66, %93 ], [ %66, %91 ], [ %66, %89 ], [ %66, %87 ], [ %66, %85 ], [ %66, %83 ], [ %66, %81 ], [ %66, %79 ], [ %66, %77 ], [ %66, %75 ], [ %66, %73 ], [ %66, %71 ]
  %149 = phi i32 [ %67, %41 ], [ %122, %121 ], [ %67, %119 ], [ %67, %117 ], [ %67, %115 ], [ %67, %113 ], [ %67, %111 ], [ %67, %109 ], [ %67, %107 ], [ %67, %105 ], [ %67, %103 ], [ %67, %101 ], [ %67, %99 ], [ %67, %97 ], [ %67, %95 ], [ %67, %93 ], [ %67, %91 ], [ %67, %89 ], [ %67, %87 ], [ %67, %85 ], [ %67, %83 ], [ %67, %81 ], [ %67, %79 ], [ %67, %77 ], [ %67, %75 ], [ %67, %73 ], [ %67, %71 ]
  %150 = add nuw i64 %68, 1
  br label %41, !llvm.loop !10

151:                                              ; preds = %41
  %152 = add nuw nsw i64 %37, 1
  %153 = load i32, i32* %3, align 4, !tbaa !5
  %154 = sext i32 %153 to i64
  %155 = icmp slt i64 %152, %154
  br i1 %155, label %10, label %156, !llvm.loop !12

156:                                              ; preds = %151, %2
  %157 = phi i32 [ 0, %2 ], [ %42, %151 ]
  %158 = phi i32 [ 0, %2 ], [ %43, %151 ]
  %159 = phi i32 [ 0, %2 ], [ %44, %151 ]
  %160 = phi i32 [ 0, %2 ], [ %45, %151 ]
  %161 = phi i32 [ 0, %2 ], [ %46, %151 ]
  %162 = phi i32 [ 0, %2 ], [ %47, %151 ]
  %163 = phi i32 [ 0, %2 ], [ %48, %151 ]
  %164 = phi i32 [ 0, %2 ], [ %49, %151 ]
  %165 = phi i32 [ 0, %2 ], [ %50, %151 ]
  %166 = phi i32 [ 0, %2 ], [ %51, %151 ]
  %167 = phi i32 [ 0, %2 ], [ %52, %151 ]
  %168 = phi i32 [ 0, %2 ], [ %53, %151 ]
  %169 = phi i32 [ 0, %2 ], [ %54, %151 ]
  %170 = phi i32 [ 0, %2 ], [ %55, %151 ]
  %171 = phi i32 [ 0, %2 ], [ %56, %151 ]
  %172 = phi i32 [ 0, %2 ], [ %57, %151 ]
  %173 = phi i32 [ 0, %2 ], [ %58, %151 ]
  %174 = phi i32 [ 0, %2 ], [ %59, %151 ]
  %175 = phi i32 [ 0, %2 ], [ %60, %151 ]
  %176 = phi i32 [ 0, %2 ], [ %61, %151 ]
  %177 = phi i32 [ 0, %2 ], [ %62, %151 ]
  %178 = phi i32 [ 0, %2 ], [ %63, %151 ]
  %179 = phi i32 [ 0, %2 ], [ %64, %151 ]
  %180 = phi i32 [ 0, %2 ], [ %65, %151 ]
  %181 = phi i32 [ 0, %2 ], [ %66, %151 ]
  %182 = phi i32 [ 0, %2 ], [ %67, %151 ]
  %183 = icmp sgt i32 %158, %157
  %184 = select i1 %183, i32 %158, i32 %157
  %185 = icmp sgt i32 %159, %184
  %186 = select i1 %185, i32 %159, i32 %184
  %187 = icmp sgt i32 %160, %186
  %188 = select i1 %187, i32 %160, i32 %186
  %189 = icmp sgt i32 %161, %188
  %190 = select i1 %189, i32 %161, i32 %188
  %191 = icmp sgt i32 %162, %190
  %192 = select i1 %191, i32 %162, i32 %190
  %193 = icmp sgt i32 %163, %192
  %194 = select i1 %193, i32 %163, i32 %192
  %195 = icmp sgt i32 %164, %194
  %196 = select i1 %195, i32 %164, i32 %194
  %197 = icmp sgt i32 %165, %196
  %198 = select i1 %197, i32 %165, i32 %196
  %199 = icmp sgt i32 %166, %198
  %200 = select i1 %199, i32 %166, i32 %198
  %201 = icmp sgt i32 %167, %200
  %202 = select i1 %201, i32 %167, i32 %200
  %203 = icmp sgt i32 %168, %202
  %204 = select i1 %203, i32 %168, i32 %202
  %205 = icmp sgt i32 %169, %204
  %206 = select i1 %205, i32 %169, i32 %204
  %207 = icmp sgt i32 %170, %206
  %208 = select i1 %207, i32 %170, i32 %206
  %209 = icmp sgt i32 %171, %208
  %210 = select i1 %209, i32 %171, i32 %208
  %211 = icmp sgt i32 %172, %210
  %212 = select i1 %211, i32 %172, i32 %210
  %213 = icmp sgt i32 %173, %212
  %214 = select i1 %213, i32 %173, i32 %212
  %215 = icmp sgt i32 %174, %214
  %216 = select i1 %215, i32 %174, i32 %214
  %217 = icmp sgt i32 %175, %216
  %218 = select i1 %217, i32 %175, i32 %216
  %219 = icmp sgt i32 %176, %218
  %220 = select i1 %219, i32 %176, i32 %218
  %221 = icmp sgt i32 %177, %220
  %222 = select i1 %221, i32 %177, i32 %220
  %223 = icmp sgt i32 %178, %222
  %224 = select i1 %223, i32 %178, i32 %222
  %225 = icmp sgt i32 %179, %224
  %226 = select i1 %225, i32 %179, i32 %224
  %227 = icmp sgt i32 %180, %226
  %228 = select i1 %227, i32 %180, i32 %226
  %229 = icmp sgt i32 %181, %228
  %230 = select i1 %229, i32 %181, i32 %228
  %231 = icmp sgt i32 %182, %230
  %232 = select i1 %231, i32 %182, i32 %230
  %233 = select i1 %183, i32 66, i32 65
  %234 = select i1 %185, i32 67, i32 %233
  %235 = select i1 %187, i32 68, i32 %234
  %236 = select i1 %189, i32 69, i32 %235
  %237 = select i1 %191, i32 70, i32 %236
  %238 = select i1 %193, i32 71, i32 %237
  %239 = select i1 %195, i32 72, i32 %238
  %240 = select i1 %197, i32 73, i32 %239
  %241 = select i1 %199, i32 74, i32 %240
  %242 = select i1 %201, i32 75, i32 %241
  %243 = select i1 %203, i32 76, i32 %242
  %244 = select i1 %205, i32 77, i32 %243
  %245 = select i1 %207, i32 78, i32 %244
  %246 = select i1 %209, i32 79, i32 %245
  %247 = select i1 %211, i32 80, i32 %246
  %248 = select i1 %213, i32 81, i32 %247
  %249 = select i1 %215, i32 82, i32 %248
  %250 = select i1 %217, i32 83, i32 %249
  %251 = select i1 %219, i32 84, i32 %250
  %252 = select i1 %221, i32 85, i32 %251
  %253 = select i1 %223, i32 86, i32 %252
  %254 = select i1 %225, i32 87, i32 %253
  %255 = select i1 %227, i32 88, i32 %254
  %256 = select i1 %229, i32 89, i32 %255
  %257 = select i1 %231, i32 90, i32 %256
  %258 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %257, i32 %232)
  %259 = load i32, i32* %3, align 4, !tbaa !5
  %260 = icmp sgt i32 %259, 0
  br i1 %260, label %261, label %288

261:                                              ; preds = %156, %283
  %262 = phi i32 [ %284, %283 ], [ %259, %156 ]
  %263 = phi i64 [ %285, %283 ], [ 0, %156 ]
  %264 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %4, i64 0, i64 %263, i32 0
  %265 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %4, i64 0, i64 %263, i32 1, i64 0
  %266 = load i8, i8* %265, align 4, !tbaa !9
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %283, label %268

268:                                              ; preds = %261, %276
  %269 = phi i64 [ %277, %276 ], [ 0, %261 ]
  %270 = phi i8 [ %279, %276 ], [ %266, %261 ]
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %257, %271
  br i1 %272, label %273, label %276

273:                                              ; preds = %268
  %274 = load i32, i32* %264, align 16, !tbaa !13
  %275 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %274)
  br label %276

276:                                              ; preds = %268, %273
  %277 = add nuw i64 %269, 1
  %278 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %4, i64 0, i64 %263, i32 1, i64 %277
  %279 = load i8, i8* %278, align 1, !tbaa !9
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %281, label %268, !llvm.loop !15

281:                                              ; preds = %276
  %282 = load i32, i32* %3, align 4, !tbaa !5
  br label %283

283:                                              ; preds = %281, %261
  %284 = phi i32 [ %282, %281 ], [ %262, %261 ]
  %285 = add nuw nsw i64 %263, 1
  %286 = sext i32 %284 to i64
  %287 = icmp slt i64 %285, %286
  br i1 %287, label %261, label %288, !llvm.loop !16

288:                                              ; preds = %283, %156
  call void @llvm.lifetime.end.p0i8(i64 32000, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #3
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = distinct !{!12, !11}
!13 = !{!14, !6, i64 0}
!14 = !{!"book", !6, i64 0, !7, i64 4}
!15 = distinct !{!15, !11}
!16 = distinct !{!16, !11}
