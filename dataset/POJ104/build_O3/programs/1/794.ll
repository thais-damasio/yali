; ModuleID = 'source-C-CXX/1/794.c'
source_filename = "source-C-CXX/1/794.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1000 x i32], align 16
  %3 = alloca [1000 x [30 x i8]], align 16
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #4
  %5 = bitcast [1000 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %5) #4
  %6 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 30000, i8* nonnull %6) #4
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %8 = load i32, i32* %1, align 4, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %14, label %26

10:                                               ; preds = %14
  %11 = icmp sgt i32 %20, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %10
  %13 = zext i32 %20 to i64
  br label %131

14:                                               ; preds = %0, %14
  %15 = phi i64 [ %19, %14 ], [ 0, %0 ]
  %16 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %15
  %17 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 %15, i64 0
  %18 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %16, i8* nonnull %17)
  %19 = add nuw nsw i64 %15, 1
  %20 = load i32, i32* %1, align 4, !tbaa !5
  %21 = sext i32 %20 to i64
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %14, label %10, !llvm.loop !9

23:                                               ; preds = %277
  %24 = icmp sgt i32 %278, 0
  %25 = select i1 %24, i32 %278, i32 0
  br label %26

26:                                               ; preds = %23, %0, %10
  %27 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %303, %23 ]
  %28 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %302, %23 ]
  %29 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %301, %23 ]
  %30 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %300, %23 ]
  %31 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %299, %23 ]
  %32 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %298, %23 ]
  %33 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %297, %23 ]
  %34 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %296, %23 ]
  %35 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %295, %23 ]
  %36 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %294, %23 ]
  %37 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %293, %23 ]
  %38 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %292, %23 ]
  %39 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %291, %23 ]
  %40 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %290, %23 ]
  %41 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %289, %23 ]
  %42 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %288, %23 ]
  %43 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %287, %23 ]
  %44 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %286, %23 ]
  %45 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %285, %23 ]
  %46 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %284, %23 ]
  %47 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %283, %23 ]
  %48 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %282, %23 ]
  %49 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %281, %23 ]
  %50 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %280, %23 ]
  %51 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %279, %23 ]
  %52 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %25, %23 ]
  %53 = icmp sgt i32 %51, %52
  %54 = select i1 %53, i32 %51, i32 %52
  %55 = icmp sgt i32 %50, %54
  %56 = select i1 %55, i32 %50, i32 %54
  %57 = icmp sgt i32 %49, %56
  %58 = select i1 %57, i32 %49, i32 %56
  %59 = icmp sgt i32 %48, %58
  %60 = select i1 %59, i32 %48, i32 %58
  %61 = icmp sgt i32 %47, %60
  %62 = select i1 %61, i32 %47, i32 %60
  %63 = icmp sgt i32 %46, %62
  %64 = select i1 %63, i32 %46, i32 %62
  %65 = icmp sgt i32 %45, %64
  %66 = select i1 %65, i32 %45, i32 %64
  %67 = icmp sgt i32 %44, %66
  %68 = select i1 %67, i32 %44, i32 %66
  %69 = icmp sgt i32 %43, %68
  %70 = select i1 %69, i32 %43, i32 %68
  %71 = icmp sgt i32 %42, %70
  %72 = select i1 %71, i32 %42, i32 %70
  %73 = icmp sgt i32 %41, %72
  %74 = select i1 %73, i32 %41, i32 %72
  %75 = icmp sgt i32 %40, %74
  %76 = select i1 %75, i32 %40, i32 %74
  %77 = icmp sgt i32 %39, %76
  %78 = select i1 %77, i32 %39, i32 %76
  %79 = icmp sgt i32 %38, %78
  %80 = select i1 %79, i32 %38, i32 %78
  %81 = icmp sgt i32 %37, %80
  %82 = select i1 %81, i32 %37, i32 %80
  %83 = icmp sgt i32 %36, %82
  %84 = select i1 %83, i32 %36, i32 %82
  %85 = icmp sgt i32 %35, %84
  %86 = select i1 %85, i32 %35, i32 %84
  %87 = icmp sgt i32 %34, %86
  %88 = select i1 %87, i32 %34, i32 %86
  %89 = icmp sgt i32 %33, %88
  %90 = select i1 %89, i32 %33, i32 %88
  %91 = icmp sgt i32 %32, %90
  %92 = select i1 %91, i32 %32, i32 %90
  %93 = icmp sgt i32 %31, %92
  %94 = select i1 %93, i32 %31, i32 %92
  %95 = icmp sgt i32 %30, %94
  %96 = select i1 %95, i32 %30, i32 %94
  %97 = icmp sgt i32 %29, %96
  %98 = select i1 %97, i32 %29, i32 %96
  %99 = icmp sgt i32 %28, %98
  %100 = select i1 %99, i32 %28, i32 %98
  %101 = icmp sgt i32 %27, %100
  %102 = select i1 %101, i32 %27, i32 %100
  %103 = select i1 %53, i32 66, i32 65
  %104 = select i1 %55, i32 67, i32 %103
  %105 = select i1 %57, i32 68, i32 %104
  %106 = select i1 %59, i32 69, i32 %105
  %107 = select i1 %61, i32 70, i32 %106
  %108 = select i1 %63, i32 71, i32 %107
  %109 = select i1 %65, i32 72, i32 %108
  %110 = select i1 %67, i32 73, i32 %109
  %111 = select i1 %69, i32 74, i32 %110
  %112 = select i1 %71, i32 75, i32 %111
  %113 = select i1 %73, i32 76, i32 %112
  %114 = select i1 %75, i32 77, i32 %113
  %115 = select i1 %77, i32 78, i32 %114
  %116 = select i1 %79, i32 79, i32 %115
  %117 = select i1 %81, i32 80, i32 %116
  %118 = select i1 %83, i32 81, i32 %117
  %119 = select i1 %85, i32 82, i32 %118
  %120 = select i1 %87, i32 83, i32 %119
  %121 = select i1 %89, i32 84, i32 %120
  %122 = select i1 %91, i32 85, i32 %121
  %123 = select i1 %93, i32 86, i32 %122
  %124 = select i1 %95, i32 87, i32 %123
  %125 = select i1 %97, i32 88, i32 %124
  %126 = select i1 %99, i32 89, i32 %125
  %127 = select i1 %101, i32 90, i32 %126
  %128 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %127, i32 %102)
  %129 = load i32, i32* %1, align 4, !tbaa !5
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %306, label %336

131:                                              ; preds = %12, %277
  %132 = phi i32 [ 0, %12 ], [ %278, %277 ]
  %133 = phi i32 [ 0, %12 ], [ %279, %277 ]
  %134 = phi i32 [ 0, %12 ], [ %280, %277 ]
  %135 = phi i32 [ 0, %12 ], [ %281, %277 ]
  %136 = phi i32 [ 0, %12 ], [ %282, %277 ]
  %137 = phi i32 [ 0, %12 ], [ %283, %277 ]
  %138 = phi i32 [ 0, %12 ], [ %284, %277 ]
  %139 = phi i32 [ 0, %12 ], [ %285, %277 ]
  %140 = phi i32 [ 0, %12 ], [ %286, %277 ]
  %141 = phi i32 [ 0, %12 ], [ %287, %277 ]
  %142 = phi i32 [ 0, %12 ], [ %288, %277 ]
  %143 = phi i32 [ 0, %12 ], [ %289, %277 ]
  %144 = phi i32 [ 0, %12 ], [ %290, %277 ]
  %145 = phi i32 [ 0, %12 ], [ %291, %277 ]
  %146 = phi i32 [ 0, %12 ], [ %292, %277 ]
  %147 = phi i32 [ 0, %12 ], [ %293, %277 ]
  %148 = phi i32 [ 0, %12 ], [ %294, %277 ]
  %149 = phi i32 [ 0, %12 ], [ %295, %277 ]
  %150 = phi i32 [ 0, %12 ], [ %296, %277 ]
  %151 = phi i32 [ 0, %12 ], [ %297, %277 ]
  %152 = phi i32 [ 0, %12 ], [ %298, %277 ]
  %153 = phi i32 [ 0, %12 ], [ %299, %277 ]
  %154 = phi i32 [ 0, %12 ], [ %300, %277 ]
  %155 = phi i32 [ 0, %12 ], [ %301, %277 ]
  %156 = phi i32 [ 0, %12 ], [ %302, %277 ]
  %157 = phi i32 [ 0, %12 ], [ %303, %277 ]
  %158 = phi i64 [ 0, %12 ], [ %304, %277 ]
  %159 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 %158, i64 0
  %160 = call i64 @strlen(i8* noundef nonnull %159) #5
  %161 = trunc i64 %160 to i32
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %163, label %277

163:                                              ; preds = %131
  %164 = shl i64 %160, 32
  %165 = ashr exact i64 %164, 32
  br label %166

166:                                              ; preds = %163, %248
  %167 = phi i32 [ %132, %163 ], [ %249, %248 ]
  %168 = phi i32 [ %133, %163 ], [ %250, %248 ]
  %169 = phi i32 [ %134, %163 ], [ %251, %248 ]
  %170 = phi i32 [ %135, %163 ], [ %252, %248 ]
  %171 = phi i32 [ %136, %163 ], [ %253, %248 ]
  %172 = phi i32 [ %137, %163 ], [ %254, %248 ]
  %173 = phi i32 [ %138, %163 ], [ %255, %248 ]
  %174 = phi i32 [ %139, %163 ], [ %256, %248 ]
  %175 = phi i32 [ %140, %163 ], [ %257, %248 ]
  %176 = phi i32 [ %141, %163 ], [ %258, %248 ]
  %177 = phi i32 [ %142, %163 ], [ %259, %248 ]
  %178 = phi i32 [ %143, %163 ], [ %260, %248 ]
  %179 = phi i32 [ %144, %163 ], [ %261, %248 ]
  %180 = phi i32 [ %145, %163 ], [ %262, %248 ]
  %181 = phi i32 [ %146, %163 ], [ %263, %248 ]
  %182 = phi i32 [ %147, %163 ], [ %264, %248 ]
  %183 = phi i32 [ %148, %163 ], [ %265, %248 ]
  %184 = phi i32 [ %149, %163 ], [ %266, %248 ]
  %185 = phi i32 [ %150, %163 ], [ %267, %248 ]
  %186 = phi i32 [ %151, %163 ], [ %268, %248 ]
  %187 = phi i32 [ %152, %163 ], [ %269, %248 ]
  %188 = phi i32 [ %153, %163 ], [ %270, %248 ]
  %189 = phi i32 [ %154, %163 ], [ %271, %248 ]
  %190 = phi i32 [ %155, %163 ], [ %272, %248 ]
  %191 = phi i32 [ %156, %163 ], [ %273, %248 ]
  %192 = phi i32 [ %157, %163 ], [ %274, %248 ]
  %193 = phi i64 [ 0, %163 ], [ %275, %248 ]
  %194 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 %158, i64 %193
  %195 = load i8, i8* %194, align 1, !tbaa !11
  switch i8 %195, label %248 [
    i8 65, label %196
    i8 66, label %198
    i8 67, label %200
    i8 68, label %202
    i8 69, label %204
    i8 70, label %206
    i8 71, label %208
    i8 72, label %210
    i8 73, label %212
    i8 74, label %214
    i8 75, label %216
    i8 76, label %218
    i8 77, label %220
    i8 78, label %222
    i8 79, label %224
    i8 80, label %226
    i8 81, label %228
    i8 82, label %230
    i8 83, label %232
    i8 84, label %234
    i8 85, label %236
    i8 86, label %238
    i8 87, label %240
    i8 88, label %242
    i8 89, label %244
    i8 90, label %246
  ]

196:                                              ; preds = %166
  %197 = add nsw i32 %167, 1
  br label %248

198:                                              ; preds = %166
  %199 = add nsw i32 %168, 1
  br label %248

200:                                              ; preds = %166
  %201 = add nsw i32 %169, 1
  br label %248

202:                                              ; preds = %166
  %203 = add nsw i32 %170, 1
  br label %248

204:                                              ; preds = %166
  %205 = add nsw i32 %171, 1
  br label %248

206:                                              ; preds = %166
  %207 = add nsw i32 %172, 1
  br label %248

208:                                              ; preds = %166
  %209 = add nsw i32 %173, 1
  br label %248

210:                                              ; preds = %166
  %211 = add nsw i32 %174, 1
  br label %248

212:                                              ; preds = %166
  %213 = add nsw i32 %175, 1
  br label %248

214:                                              ; preds = %166
  %215 = add nsw i32 %176, 1
  br label %248

216:                                              ; preds = %166
  %217 = add nsw i32 %177, 1
  br label %248

218:                                              ; preds = %166
  %219 = add nsw i32 %178, 1
  br label %248

220:                                              ; preds = %166
  %221 = add nsw i32 %179, 1
  br label %248

222:                                              ; preds = %166
  %223 = add nsw i32 %180, 1
  br label %248

224:                                              ; preds = %166
  %225 = add nsw i32 %181, 1
  br label %248

226:                                              ; preds = %166
  %227 = add nsw i32 %182, 1
  br label %248

228:                                              ; preds = %166
  %229 = add nsw i32 %183, 1
  br label %248

230:                                              ; preds = %166
  %231 = add nsw i32 %184, 1
  br label %248

232:                                              ; preds = %166
  %233 = add nsw i32 %185, 1
  br label %248

234:                                              ; preds = %166
  %235 = add nsw i32 %186, 1
  br label %248

236:                                              ; preds = %166
  %237 = add nsw i32 %187, 1
  br label %248

238:                                              ; preds = %166
  %239 = add nsw i32 %188, 1
  br label %248

240:                                              ; preds = %166
  %241 = add nsw i32 %189, 1
  br label %248

242:                                              ; preds = %166
  %243 = add nsw i32 %190, 1
  br label %248

244:                                              ; preds = %166
  %245 = add nsw i32 %191, 1
  br label %248

246:                                              ; preds = %166
  %247 = add nsw i32 %192, 1
  br label %248

248:                                              ; preds = %166, %198, %196, %200, %202, %204, %206, %208, %210, %212, %214, %216, %218, %220, %222, %224, %226, %228, %230, %232, %234, %236, %238, %240, %242, %244, %246
  %249 = phi i32 [ %167, %166 ], [ %167, %246 ], [ %167, %244 ], [ %167, %242 ], [ %167, %240 ], [ %167, %238 ], [ %167, %236 ], [ %167, %234 ], [ %167, %232 ], [ %167, %230 ], [ %167, %228 ], [ %167, %226 ], [ %167, %224 ], [ %167, %222 ], [ %167, %220 ], [ %167, %218 ], [ %167, %216 ], [ %167, %214 ], [ %167, %212 ], [ %167, %210 ], [ %167, %208 ], [ %167, %206 ], [ %167, %204 ], [ %167, %202 ], [ %167, %200 ], [ %167, %198 ], [ %197, %196 ]
  %250 = phi i32 [ %168, %166 ], [ %168, %246 ], [ %168, %244 ], [ %168, %242 ], [ %168, %240 ], [ %168, %238 ], [ %168, %236 ], [ %168, %234 ], [ %168, %232 ], [ %168, %230 ], [ %168, %228 ], [ %168, %226 ], [ %168, %224 ], [ %168, %222 ], [ %168, %220 ], [ %168, %218 ], [ %168, %216 ], [ %168, %214 ], [ %168, %212 ], [ %168, %210 ], [ %168, %208 ], [ %168, %206 ], [ %168, %204 ], [ %168, %202 ], [ %168, %200 ], [ %199, %198 ], [ %168, %196 ]
  %251 = phi i32 [ %169, %166 ], [ %169, %246 ], [ %169, %244 ], [ %169, %242 ], [ %169, %240 ], [ %169, %238 ], [ %169, %236 ], [ %169, %234 ], [ %169, %232 ], [ %169, %230 ], [ %169, %228 ], [ %169, %226 ], [ %169, %224 ], [ %169, %222 ], [ %169, %220 ], [ %169, %218 ], [ %169, %216 ], [ %169, %214 ], [ %169, %212 ], [ %169, %210 ], [ %169, %208 ], [ %169, %206 ], [ %169, %204 ], [ %169, %202 ], [ %201, %200 ], [ %169, %198 ], [ %169, %196 ]
  %252 = phi i32 [ %170, %166 ], [ %170, %246 ], [ %170, %244 ], [ %170, %242 ], [ %170, %240 ], [ %170, %238 ], [ %170, %236 ], [ %170, %234 ], [ %170, %232 ], [ %170, %230 ], [ %170, %228 ], [ %170, %226 ], [ %170, %224 ], [ %170, %222 ], [ %170, %220 ], [ %170, %218 ], [ %170, %216 ], [ %170, %214 ], [ %170, %212 ], [ %170, %210 ], [ %170, %208 ], [ %170, %206 ], [ %170, %204 ], [ %203, %202 ], [ %170, %200 ], [ %170, %198 ], [ %170, %196 ]
  %253 = phi i32 [ %171, %166 ], [ %171, %246 ], [ %171, %244 ], [ %171, %242 ], [ %171, %240 ], [ %171, %238 ], [ %171, %236 ], [ %171, %234 ], [ %171, %232 ], [ %171, %230 ], [ %171, %228 ], [ %171, %226 ], [ %171, %224 ], [ %171, %222 ], [ %171, %220 ], [ %171, %218 ], [ %171, %216 ], [ %171, %214 ], [ %171, %212 ], [ %171, %210 ], [ %171, %208 ], [ %171, %206 ], [ %205, %204 ], [ %171, %202 ], [ %171, %200 ], [ %171, %198 ], [ %171, %196 ]
  %254 = phi i32 [ %172, %166 ], [ %172, %246 ], [ %172, %244 ], [ %172, %242 ], [ %172, %240 ], [ %172, %238 ], [ %172, %236 ], [ %172, %234 ], [ %172, %232 ], [ %172, %230 ], [ %172, %228 ], [ %172, %226 ], [ %172, %224 ], [ %172, %222 ], [ %172, %220 ], [ %172, %218 ], [ %172, %216 ], [ %172, %214 ], [ %172, %212 ], [ %172, %210 ], [ %172, %208 ], [ %207, %206 ], [ %172, %204 ], [ %172, %202 ], [ %172, %200 ], [ %172, %198 ], [ %172, %196 ]
  %255 = phi i32 [ %173, %166 ], [ %173, %246 ], [ %173, %244 ], [ %173, %242 ], [ %173, %240 ], [ %173, %238 ], [ %173, %236 ], [ %173, %234 ], [ %173, %232 ], [ %173, %230 ], [ %173, %228 ], [ %173, %226 ], [ %173, %224 ], [ %173, %222 ], [ %173, %220 ], [ %173, %218 ], [ %173, %216 ], [ %173, %214 ], [ %173, %212 ], [ %173, %210 ], [ %209, %208 ], [ %173, %206 ], [ %173, %204 ], [ %173, %202 ], [ %173, %200 ], [ %173, %198 ], [ %173, %196 ]
  %256 = phi i32 [ %174, %166 ], [ %174, %246 ], [ %174, %244 ], [ %174, %242 ], [ %174, %240 ], [ %174, %238 ], [ %174, %236 ], [ %174, %234 ], [ %174, %232 ], [ %174, %230 ], [ %174, %228 ], [ %174, %226 ], [ %174, %224 ], [ %174, %222 ], [ %174, %220 ], [ %174, %218 ], [ %174, %216 ], [ %174, %214 ], [ %174, %212 ], [ %211, %210 ], [ %174, %208 ], [ %174, %206 ], [ %174, %204 ], [ %174, %202 ], [ %174, %200 ], [ %174, %198 ], [ %174, %196 ]
  %257 = phi i32 [ %175, %166 ], [ %175, %246 ], [ %175, %244 ], [ %175, %242 ], [ %175, %240 ], [ %175, %238 ], [ %175, %236 ], [ %175, %234 ], [ %175, %232 ], [ %175, %230 ], [ %175, %228 ], [ %175, %226 ], [ %175, %224 ], [ %175, %222 ], [ %175, %220 ], [ %175, %218 ], [ %175, %216 ], [ %175, %214 ], [ %213, %212 ], [ %175, %210 ], [ %175, %208 ], [ %175, %206 ], [ %175, %204 ], [ %175, %202 ], [ %175, %200 ], [ %175, %198 ], [ %175, %196 ]
  %258 = phi i32 [ %176, %166 ], [ %176, %246 ], [ %176, %244 ], [ %176, %242 ], [ %176, %240 ], [ %176, %238 ], [ %176, %236 ], [ %176, %234 ], [ %176, %232 ], [ %176, %230 ], [ %176, %228 ], [ %176, %226 ], [ %176, %224 ], [ %176, %222 ], [ %176, %220 ], [ %176, %218 ], [ %176, %216 ], [ %215, %214 ], [ %176, %212 ], [ %176, %210 ], [ %176, %208 ], [ %176, %206 ], [ %176, %204 ], [ %176, %202 ], [ %176, %200 ], [ %176, %198 ], [ %176, %196 ]
  %259 = phi i32 [ %177, %166 ], [ %177, %246 ], [ %177, %244 ], [ %177, %242 ], [ %177, %240 ], [ %177, %238 ], [ %177, %236 ], [ %177, %234 ], [ %177, %232 ], [ %177, %230 ], [ %177, %228 ], [ %177, %226 ], [ %177, %224 ], [ %177, %222 ], [ %177, %220 ], [ %177, %218 ], [ %217, %216 ], [ %177, %214 ], [ %177, %212 ], [ %177, %210 ], [ %177, %208 ], [ %177, %206 ], [ %177, %204 ], [ %177, %202 ], [ %177, %200 ], [ %177, %198 ], [ %177, %196 ]
  %260 = phi i32 [ %178, %166 ], [ %178, %246 ], [ %178, %244 ], [ %178, %242 ], [ %178, %240 ], [ %178, %238 ], [ %178, %236 ], [ %178, %234 ], [ %178, %232 ], [ %178, %230 ], [ %178, %228 ], [ %178, %226 ], [ %178, %224 ], [ %178, %222 ], [ %178, %220 ], [ %219, %218 ], [ %178, %216 ], [ %178, %214 ], [ %178, %212 ], [ %178, %210 ], [ %178, %208 ], [ %178, %206 ], [ %178, %204 ], [ %178, %202 ], [ %178, %200 ], [ %178, %198 ], [ %178, %196 ]
  %261 = phi i32 [ %179, %166 ], [ %179, %246 ], [ %179, %244 ], [ %179, %242 ], [ %179, %240 ], [ %179, %238 ], [ %179, %236 ], [ %179, %234 ], [ %179, %232 ], [ %179, %230 ], [ %179, %228 ], [ %179, %226 ], [ %179, %224 ], [ %179, %222 ], [ %221, %220 ], [ %179, %218 ], [ %179, %216 ], [ %179, %214 ], [ %179, %212 ], [ %179, %210 ], [ %179, %208 ], [ %179, %206 ], [ %179, %204 ], [ %179, %202 ], [ %179, %200 ], [ %179, %198 ], [ %179, %196 ]
  %262 = phi i32 [ %180, %166 ], [ %180, %246 ], [ %180, %244 ], [ %180, %242 ], [ %180, %240 ], [ %180, %238 ], [ %180, %236 ], [ %180, %234 ], [ %180, %232 ], [ %180, %230 ], [ %180, %228 ], [ %180, %226 ], [ %180, %224 ], [ %223, %222 ], [ %180, %220 ], [ %180, %218 ], [ %180, %216 ], [ %180, %214 ], [ %180, %212 ], [ %180, %210 ], [ %180, %208 ], [ %180, %206 ], [ %180, %204 ], [ %180, %202 ], [ %180, %200 ], [ %180, %198 ], [ %180, %196 ]
  %263 = phi i32 [ %181, %166 ], [ %181, %246 ], [ %181, %244 ], [ %181, %242 ], [ %181, %240 ], [ %181, %238 ], [ %181, %236 ], [ %181, %234 ], [ %181, %232 ], [ %181, %230 ], [ %181, %228 ], [ %181, %226 ], [ %225, %224 ], [ %181, %222 ], [ %181, %220 ], [ %181, %218 ], [ %181, %216 ], [ %181, %214 ], [ %181, %212 ], [ %181, %210 ], [ %181, %208 ], [ %181, %206 ], [ %181, %204 ], [ %181, %202 ], [ %181, %200 ], [ %181, %198 ], [ %181, %196 ]
  %264 = phi i32 [ %182, %166 ], [ %182, %246 ], [ %182, %244 ], [ %182, %242 ], [ %182, %240 ], [ %182, %238 ], [ %182, %236 ], [ %182, %234 ], [ %182, %232 ], [ %182, %230 ], [ %182, %228 ], [ %227, %226 ], [ %182, %224 ], [ %182, %222 ], [ %182, %220 ], [ %182, %218 ], [ %182, %216 ], [ %182, %214 ], [ %182, %212 ], [ %182, %210 ], [ %182, %208 ], [ %182, %206 ], [ %182, %204 ], [ %182, %202 ], [ %182, %200 ], [ %182, %198 ], [ %182, %196 ]
  %265 = phi i32 [ %183, %166 ], [ %183, %246 ], [ %183, %244 ], [ %183, %242 ], [ %183, %240 ], [ %183, %238 ], [ %183, %236 ], [ %183, %234 ], [ %183, %232 ], [ %183, %230 ], [ %229, %228 ], [ %183, %226 ], [ %183, %224 ], [ %183, %222 ], [ %183, %220 ], [ %183, %218 ], [ %183, %216 ], [ %183, %214 ], [ %183, %212 ], [ %183, %210 ], [ %183, %208 ], [ %183, %206 ], [ %183, %204 ], [ %183, %202 ], [ %183, %200 ], [ %183, %198 ], [ %183, %196 ]
  %266 = phi i32 [ %184, %166 ], [ %184, %246 ], [ %184, %244 ], [ %184, %242 ], [ %184, %240 ], [ %184, %238 ], [ %184, %236 ], [ %184, %234 ], [ %184, %232 ], [ %231, %230 ], [ %184, %228 ], [ %184, %226 ], [ %184, %224 ], [ %184, %222 ], [ %184, %220 ], [ %184, %218 ], [ %184, %216 ], [ %184, %214 ], [ %184, %212 ], [ %184, %210 ], [ %184, %208 ], [ %184, %206 ], [ %184, %204 ], [ %184, %202 ], [ %184, %200 ], [ %184, %198 ], [ %184, %196 ]
  %267 = phi i32 [ %185, %166 ], [ %185, %246 ], [ %185, %244 ], [ %185, %242 ], [ %185, %240 ], [ %185, %238 ], [ %185, %236 ], [ %185, %234 ], [ %233, %232 ], [ %185, %230 ], [ %185, %228 ], [ %185, %226 ], [ %185, %224 ], [ %185, %222 ], [ %185, %220 ], [ %185, %218 ], [ %185, %216 ], [ %185, %214 ], [ %185, %212 ], [ %185, %210 ], [ %185, %208 ], [ %185, %206 ], [ %185, %204 ], [ %185, %202 ], [ %185, %200 ], [ %185, %198 ], [ %185, %196 ]
  %268 = phi i32 [ %186, %166 ], [ %186, %246 ], [ %186, %244 ], [ %186, %242 ], [ %186, %240 ], [ %186, %238 ], [ %186, %236 ], [ %235, %234 ], [ %186, %232 ], [ %186, %230 ], [ %186, %228 ], [ %186, %226 ], [ %186, %224 ], [ %186, %222 ], [ %186, %220 ], [ %186, %218 ], [ %186, %216 ], [ %186, %214 ], [ %186, %212 ], [ %186, %210 ], [ %186, %208 ], [ %186, %206 ], [ %186, %204 ], [ %186, %202 ], [ %186, %200 ], [ %186, %198 ], [ %186, %196 ]
  %269 = phi i32 [ %187, %166 ], [ %187, %246 ], [ %187, %244 ], [ %187, %242 ], [ %187, %240 ], [ %187, %238 ], [ %237, %236 ], [ %187, %234 ], [ %187, %232 ], [ %187, %230 ], [ %187, %228 ], [ %187, %226 ], [ %187, %224 ], [ %187, %222 ], [ %187, %220 ], [ %187, %218 ], [ %187, %216 ], [ %187, %214 ], [ %187, %212 ], [ %187, %210 ], [ %187, %208 ], [ %187, %206 ], [ %187, %204 ], [ %187, %202 ], [ %187, %200 ], [ %187, %198 ], [ %187, %196 ]
  %270 = phi i32 [ %188, %166 ], [ %188, %246 ], [ %188, %244 ], [ %188, %242 ], [ %188, %240 ], [ %239, %238 ], [ %188, %236 ], [ %188, %234 ], [ %188, %232 ], [ %188, %230 ], [ %188, %228 ], [ %188, %226 ], [ %188, %224 ], [ %188, %222 ], [ %188, %220 ], [ %188, %218 ], [ %188, %216 ], [ %188, %214 ], [ %188, %212 ], [ %188, %210 ], [ %188, %208 ], [ %188, %206 ], [ %188, %204 ], [ %188, %202 ], [ %188, %200 ], [ %188, %198 ], [ %188, %196 ]
  %271 = phi i32 [ %189, %166 ], [ %189, %246 ], [ %189, %244 ], [ %189, %242 ], [ %241, %240 ], [ %189, %238 ], [ %189, %236 ], [ %189, %234 ], [ %189, %232 ], [ %189, %230 ], [ %189, %228 ], [ %189, %226 ], [ %189, %224 ], [ %189, %222 ], [ %189, %220 ], [ %189, %218 ], [ %189, %216 ], [ %189, %214 ], [ %189, %212 ], [ %189, %210 ], [ %189, %208 ], [ %189, %206 ], [ %189, %204 ], [ %189, %202 ], [ %189, %200 ], [ %189, %198 ], [ %189, %196 ]
  %272 = phi i32 [ %190, %166 ], [ %190, %246 ], [ %190, %244 ], [ %243, %242 ], [ %190, %240 ], [ %190, %238 ], [ %190, %236 ], [ %190, %234 ], [ %190, %232 ], [ %190, %230 ], [ %190, %228 ], [ %190, %226 ], [ %190, %224 ], [ %190, %222 ], [ %190, %220 ], [ %190, %218 ], [ %190, %216 ], [ %190, %214 ], [ %190, %212 ], [ %190, %210 ], [ %190, %208 ], [ %190, %206 ], [ %190, %204 ], [ %190, %202 ], [ %190, %200 ], [ %190, %198 ], [ %190, %196 ]
  %273 = phi i32 [ %191, %166 ], [ %191, %246 ], [ %245, %244 ], [ %191, %242 ], [ %191, %240 ], [ %191, %238 ], [ %191, %236 ], [ %191, %234 ], [ %191, %232 ], [ %191, %230 ], [ %191, %228 ], [ %191, %226 ], [ %191, %224 ], [ %191, %222 ], [ %191, %220 ], [ %191, %218 ], [ %191, %216 ], [ %191, %214 ], [ %191, %212 ], [ %191, %210 ], [ %191, %208 ], [ %191, %206 ], [ %191, %204 ], [ %191, %202 ], [ %191, %200 ], [ %191, %198 ], [ %191, %196 ]
  %274 = phi i32 [ %192, %166 ], [ %247, %246 ], [ %192, %244 ], [ %192, %242 ], [ %192, %240 ], [ %192, %238 ], [ %192, %236 ], [ %192, %234 ], [ %192, %232 ], [ %192, %230 ], [ %192, %228 ], [ %192, %226 ], [ %192, %224 ], [ %192, %222 ], [ %192, %220 ], [ %192, %218 ], [ %192, %216 ], [ %192, %214 ], [ %192, %212 ], [ %192, %210 ], [ %192, %208 ], [ %192, %206 ], [ %192, %204 ], [ %192, %202 ], [ %192, %200 ], [ %192, %198 ], [ %192, %196 ]
  %275 = add nuw nsw i64 %193, 1
  %276 = icmp eq i64 %275, %165
  br i1 %276, label %277, label %166, !llvm.loop !12

277:                                              ; preds = %248, %131
  %278 = phi i32 [ %132, %131 ], [ %249, %248 ]
  %279 = phi i32 [ %133, %131 ], [ %250, %248 ]
  %280 = phi i32 [ %134, %131 ], [ %251, %248 ]
  %281 = phi i32 [ %135, %131 ], [ %252, %248 ]
  %282 = phi i32 [ %136, %131 ], [ %253, %248 ]
  %283 = phi i32 [ %137, %131 ], [ %254, %248 ]
  %284 = phi i32 [ %138, %131 ], [ %255, %248 ]
  %285 = phi i32 [ %139, %131 ], [ %256, %248 ]
  %286 = phi i32 [ %140, %131 ], [ %257, %248 ]
  %287 = phi i32 [ %141, %131 ], [ %258, %248 ]
  %288 = phi i32 [ %142, %131 ], [ %259, %248 ]
  %289 = phi i32 [ %143, %131 ], [ %260, %248 ]
  %290 = phi i32 [ %144, %131 ], [ %261, %248 ]
  %291 = phi i32 [ %145, %131 ], [ %262, %248 ]
  %292 = phi i32 [ %146, %131 ], [ %263, %248 ]
  %293 = phi i32 [ %147, %131 ], [ %264, %248 ]
  %294 = phi i32 [ %148, %131 ], [ %265, %248 ]
  %295 = phi i32 [ %149, %131 ], [ %266, %248 ]
  %296 = phi i32 [ %150, %131 ], [ %267, %248 ]
  %297 = phi i32 [ %151, %131 ], [ %268, %248 ]
  %298 = phi i32 [ %152, %131 ], [ %269, %248 ]
  %299 = phi i32 [ %153, %131 ], [ %270, %248 ]
  %300 = phi i32 [ %154, %131 ], [ %271, %248 ]
  %301 = phi i32 [ %155, %131 ], [ %272, %248 ]
  %302 = phi i32 [ %156, %131 ], [ %273, %248 ]
  %303 = phi i32 [ %157, %131 ], [ %274, %248 ]
  %304 = add nuw nsw i64 %158, 1
  %305 = icmp eq i64 %304, %13
  br i1 %305, label %23, label %131, !llvm.loop !13

306:                                              ; preds = %26, %331
  %307 = phi i32 [ %332, %331 ], [ %129, %26 ]
  %308 = phi i64 [ %333, %331 ], [ 0, %26 ]
  %309 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 %308, i64 0
  %310 = call i64 @strlen(i8* noundef nonnull %309) #5
  %311 = trunc i64 %310 to i32
  %312 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %308
  %313 = icmp sgt i32 %311, 0
  br i1 %313, label %314, label %331

314:                                              ; preds = %306
  %315 = shl i64 %310, 32
  %316 = ashr exact i64 %315, 32
  br label %317

317:                                              ; preds = %314, %326
  %318 = phi i64 [ 0, %314 ], [ %327, %326 ]
  %319 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 %308, i64 %318
  %320 = load i8, i8* %319, align 1, !tbaa !11
  %321 = sext i8 %320 to i32
  %322 = icmp eq i32 %127, %321
  br i1 %322, label %323, label %326

323:                                              ; preds = %317
  %324 = load i32, i32* %312, align 4, !tbaa !5
  %325 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %324)
  br label %326

326:                                              ; preds = %317, %323
  %327 = add nuw nsw i64 %318, 1
  %328 = icmp eq i64 %327, %316
  br i1 %328, label %329, label %317, !llvm.loop !14

329:                                              ; preds = %326
  %330 = load i32, i32* %1, align 4, !tbaa !5
  br label %331

331:                                              ; preds = %329, %306
  %332 = phi i32 [ %330, %329 ], [ %307, %306 ]
  %333 = add nuw nsw i64 %308, 1
  %334 = sext i32 %332 to i64
  %335 = icmp slt i64 %333, %334
  br i1 %335, label %306, label %336, !llvm.loop !15

336:                                              ; preds = %331, %26
  call void @llvm.lifetime.end.p0i8(i64 30000, i8* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
