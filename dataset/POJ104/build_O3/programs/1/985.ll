; ModuleID = 'source-C-CXX/1/985.c'
source_filename = "source-C-CXX/1/985.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.aut = type { i32, [26 x i8] }

@__const.main.wr = private unnamed_addr constant [26 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZ", align 16
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [999 x %struct.aut], align 16
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #4
  %4 = bitcast [999 x %struct.aut]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 31968, i8* nonnull %4) #4
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %6 = load i32, i32* %1, align 4, !tbaa !5
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %119, label %11

8:                                                ; preds = %188
  %9 = icmp sgt i32 %189, 0
  %10 = select i1 %9, i32 %189, i32 0
  br label %11

11:                                               ; preds = %8, %0
  %12 = phi i32 [ 0, %0 ], [ %214, %8 ]
  %13 = phi i32 [ 0, %0 ], [ %213, %8 ]
  %14 = phi i32 [ 0, %0 ], [ %212, %8 ]
  %15 = phi i32 [ 0, %0 ], [ %211, %8 ]
  %16 = phi i32 [ 0, %0 ], [ %210, %8 ]
  %17 = phi i32 [ 0, %0 ], [ %209, %8 ]
  %18 = phi i32 [ 0, %0 ], [ %208, %8 ]
  %19 = phi i32 [ 0, %0 ], [ %207, %8 ]
  %20 = phi i32 [ 0, %0 ], [ %206, %8 ]
  %21 = phi i32 [ 0, %0 ], [ %205, %8 ]
  %22 = phi i32 [ 0, %0 ], [ %204, %8 ]
  %23 = phi i32 [ 0, %0 ], [ %203, %8 ]
  %24 = phi i32 [ 0, %0 ], [ %202, %8 ]
  %25 = phi i32 [ 0, %0 ], [ %201, %8 ]
  %26 = phi i32 [ 0, %0 ], [ %200, %8 ]
  %27 = phi i32 [ 0, %0 ], [ %199, %8 ]
  %28 = phi i32 [ 0, %0 ], [ %198, %8 ]
  %29 = phi i32 [ 0, %0 ], [ %197, %8 ]
  %30 = phi i32 [ 0, %0 ], [ %196, %8 ]
  %31 = phi i32 [ 0, %0 ], [ %195, %8 ]
  %32 = phi i32 [ 0, %0 ], [ %194, %8 ]
  %33 = phi i32 [ 0, %0 ], [ %193, %8 ]
  %34 = phi i32 [ 0, %0 ], [ %192, %8 ]
  %35 = phi i32 [ 0, %0 ], [ %191, %8 ]
  %36 = phi i32 [ 0, %0 ], [ %190, %8 ]
  %37 = phi i32 [ 0, %0 ], [ %10, %8 ]
  %38 = icmp slt i32 %37, %36
  %39 = select i1 %38, i32 %36, i32 %37
  %40 = zext i1 %38 to i64
  %41 = icmp slt i32 %39, %35
  %42 = select i1 %41, i32 %35, i32 %39
  %43 = select i1 %41, i64 2, i64 %40
  %44 = icmp slt i32 %42, %34
  %45 = select i1 %44, i32 %34, i32 %42
  %46 = select i1 %44, i64 3, i64 %43
  %47 = icmp slt i32 %45, %33
  %48 = select i1 %47, i32 %33, i32 %45
  %49 = select i1 %47, i64 4, i64 %46
  %50 = icmp slt i32 %48, %32
  %51 = select i1 %50, i32 %32, i32 %48
  %52 = select i1 %50, i64 5, i64 %49
  %53 = icmp slt i32 %51, %31
  %54 = select i1 %53, i32 %31, i32 %51
  %55 = icmp slt i32 %54, %30
  %56 = select i1 %55, i32 %30, i32 %54
  %57 = icmp slt i32 %56, %29
  %58 = select i1 %57, i32 %29, i32 %56
  %59 = icmp slt i32 %58, %28
  %60 = select i1 %59, i32 %28, i32 %58
  %61 = icmp slt i32 %60, %27
  %62 = select i1 %61, i32 %27, i32 %60
  %63 = icmp slt i32 %62, %26
  %64 = select i1 %63, i32 %26, i32 %62
  %65 = icmp slt i32 %64, %25
  %66 = select i1 %65, i32 %25, i32 %64
  %67 = icmp slt i32 %66, %24
  %68 = select i1 %67, i32 %24, i32 %66
  %69 = icmp slt i32 %68, %23
  %70 = select i1 %69, i32 %23, i32 %68
  %71 = icmp slt i32 %70, %22
  %72 = select i1 %71, i32 %22, i32 %70
  %73 = icmp slt i32 %72, %21
  %74 = select i1 %73, i32 %21, i32 %72
  %75 = icmp slt i32 %74, %20
  %76 = select i1 %75, i32 %20, i32 %74
  %77 = icmp slt i32 %76, %19
  %78 = select i1 %77, i32 %19, i32 %76
  %79 = icmp slt i32 %78, %18
  %80 = select i1 %79, i32 %18, i32 %78
  %81 = icmp slt i32 %80, %17
  %82 = select i1 %81, i32 %17, i32 %80
  %83 = icmp slt i32 %82, %16
  %84 = select i1 %83, i32 %16, i32 %82
  %85 = icmp slt i32 %84, %15
  %86 = select i1 %85, i32 %15, i32 %84
  %87 = icmp slt i32 %86, %14
  %88 = select i1 %87, i32 %14, i32 %86
  %89 = icmp slt i32 %88, %13
  %90 = select i1 %89, i32 %13, i32 %88
  %91 = icmp slt i32 %90, %12
  %92 = select i1 %91, i32 %12, i32 %90
  %93 = select i1 %53, i64 6, i64 %52
  %94 = select i1 %55, i64 7, i64 %93
  %95 = select i1 %57, i64 8, i64 %94
  %96 = select i1 %59, i64 9, i64 %95
  %97 = select i1 %61, i64 10, i64 %96
  %98 = select i1 %63, i64 11, i64 %97
  %99 = select i1 %65, i64 12, i64 %98
  %100 = select i1 %67, i64 13, i64 %99
  %101 = select i1 %69, i64 14, i64 %100
  %102 = select i1 %71, i64 15, i64 %101
  %103 = select i1 %73, i64 16, i64 %102
  %104 = select i1 %75, i64 17, i64 %103
  %105 = select i1 %77, i64 18, i64 %104
  %106 = select i1 %79, i64 19, i64 %105
  %107 = select i1 %81, i64 20, i64 %106
  %108 = select i1 %83, i64 21, i64 %107
  %109 = select i1 %85, i64 22, i64 %108
  %110 = select i1 %87, i64 23, i64 %109
  %111 = select i1 %89, i64 24, i64 %110
  %112 = select i1 %91, i64 25, i64 %111
  %113 = getelementptr inbounds [26 x i8], [26 x i8]* @__const.main.wr, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1, !tbaa !9
  %115 = sext i8 %114 to i32
  %116 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %115, i32 %92)
  %117 = load i32, i32* %1, align 4, !tbaa !5
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %219, label %246

119:                                              ; preds = %0, %188
  %120 = phi i32 [ %189, %188 ], [ 0, %0 ]
  %121 = phi i32 [ %190, %188 ], [ 0, %0 ]
  %122 = phi i32 [ %191, %188 ], [ 0, %0 ]
  %123 = phi i32 [ %192, %188 ], [ 0, %0 ]
  %124 = phi i32 [ %193, %188 ], [ 0, %0 ]
  %125 = phi i32 [ %194, %188 ], [ 0, %0 ]
  %126 = phi i32 [ %195, %188 ], [ 0, %0 ]
  %127 = phi i32 [ %196, %188 ], [ 0, %0 ]
  %128 = phi i32 [ %197, %188 ], [ 0, %0 ]
  %129 = phi i32 [ %198, %188 ], [ 0, %0 ]
  %130 = phi i32 [ %199, %188 ], [ 0, %0 ]
  %131 = phi i32 [ %200, %188 ], [ 0, %0 ]
  %132 = phi i32 [ %201, %188 ], [ 0, %0 ]
  %133 = phi i32 [ %202, %188 ], [ 0, %0 ]
  %134 = phi i32 [ %203, %188 ], [ 0, %0 ]
  %135 = phi i32 [ %204, %188 ], [ 0, %0 ]
  %136 = phi i32 [ %205, %188 ], [ 0, %0 ]
  %137 = phi i32 [ %206, %188 ], [ 0, %0 ]
  %138 = phi i32 [ %207, %188 ], [ 0, %0 ]
  %139 = phi i32 [ %208, %188 ], [ 0, %0 ]
  %140 = phi i32 [ %209, %188 ], [ 0, %0 ]
  %141 = phi i32 [ %210, %188 ], [ 0, %0 ]
  %142 = phi i32 [ %211, %188 ], [ 0, %0 ]
  %143 = phi i32 [ %212, %188 ], [ 0, %0 ]
  %144 = phi i32 [ %213, %188 ], [ 0, %0 ]
  %145 = phi i32 [ %214, %188 ], [ 0, %0 ]
  %146 = phi i64 [ %215, %188 ], [ 0, %0 ]
  %147 = getelementptr inbounds [999 x %struct.aut], [999 x %struct.aut]* %2, i64 0, i64 %146, i32 0
  %148 = getelementptr inbounds [999 x %struct.aut], [999 x %struct.aut]* %2, i64 0, i64 %146, i32 1, i64 0
  %149 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %147, i8* nonnull %148)
  %150 = call i64 @strlen(i8* noundef nonnull %148) #5
  %151 = trunc i64 %150 to i32
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %153, label %188

153:                                              ; preds = %119
  %154 = shl i64 %150, 32
  %155 = ashr exact i64 %154, 32
  br label %156

156:                                              ; preds = %153, %297
  %157 = phi i32 [ %120, %153 ], [ %310, %297 ]
  %158 = phi i32 [ %121, %153 ], [ %311, %297 ]
  %159 = phi i32 [ %122, %153 ], [ %309, %297 ]
  %160 = phi i32 [ %123, %153 ], [ %312, %297 ]
  %161 = phi i32 [ %124, %153 ], [ %308, %297 ]
  %162 = phi i32 [ %125, %153 ], [ %313, %297 ]
  %163 = phi i32 [ %126, %153 ], [ %307, %297 ]
  %164 = phi i32 [ %127, %153 ], [ %314, %297 ]
  %165 = phi i32 [ %128, %153 ], [ %306, %297 ]
  %166 = phi i32 [ %129, %153 ], [ %315, %297 ]
  %167 = phi i32 [ %130, %153 ], [ %305, %297 ]
  %168 = phi i32 [ %131, %153 ], [ %316, %297 ]
  %169 = phi i32 [ %132, %153 ], [ %304, %297 ]
  %170 = phi i32 [ %133, %153 ], [ %317, %297 ]
  %171 = phi i32 [ %134, %153 ], [ %303, %297 ]
  %172 = phi i32 [ %135, %153 ], [ %318, %297 ]
  %173 = phi i32 [ %136, %153 ], [ %302, %297 ]
  %174 = phi i32 [ %137, %153 ], [ %319, %297 ]
  %175 = phi i32 [ %138, %153 ], [ %301, %297 ]
  %176 = phi i32 [ %139, %153 ], [ %320, %297 ]
  %177 = phi i32 [ %140, %153 ], [ %300, %297 ]
  %178 = phi i32 [ %141, %153 ], [ %321, %297 ]
  %179 = phi i32 [ %142, %153 ], [ %299, %297 ]
  %180 = phi i32 [ %143, %153 ], [ %322, %297 ]
  %181 = phi i32 [ %144, %153 ], [ %298, %297 ]
  %182 = phi i32 [ %145, %153 ], [ %323, %297 ]
  %183 = phi i64 [ 0, %153 ], [ %324, %297 ]
  %184 = getelementptr inbounds [999 x %struct.aut], [999 x %struct.aut]* %2, i64 0, i64 %146, i32 1, i64 %183
  %185 = load i8, i8* %184, align 1, !tbaa !9
  switch i8 %185, label %297 [
    i8 65, label %186
    i8 66, label %247
    i8 67, label %249
    i8 68, label %251
    i8 69, label %253
    i8 70, label %255
    i8 71, label %257
    i8 72, label %259
    i8 73, label %261
    i8 74, label %263
    i8 75, label %265
    i8 76, label %267
    i8 77, label %269
    i8 78, label %271
    i8 79, label %273
    i8 80, label %275
    i8 81, label %277
    i8 82, label %279
    i8 83, label %281
    i8 84, label %283
    i8 85, label %285
    i8 86, label %287
    i8 87, label %289
    i8 88, label %291
    i8 89, label %293
    i8 90, label %295
  ]

186:                                              ; preds = %156
  %187 = add nsw i32 %157, 1
  br label %297

188:                                              ; preds = %297, %119
  %189 = phi i32 [ %120, %119 ], [ %310, %297 ]
  %190 = phi i32 [ %121, %119 ], [ %311, %297 ]
  %191 = phi i32 [ %122, %119 ], [ %309, %297 ]
  %192 = phi i32 [ %123, %119 ], [ %312, %297 ]
  %193 = phi i32 [ %124, %119 ], [ %308, %297 ]
  %194 = phi i32 [ %125, %119 ], [ %313, %297 ]
  %195 = phi i32 [ %126, %119 ], [ %307, %297 ]
  %196 = phi i32 [ %127, %119 ], [ %314, %297 ]
  %197 = phi i32 [ %128, %119 ], [ %306, %297 ]
  %198 = phi i32 [ %129, %119 ], [ %315, %297 ]
  %199 = phi i32 [ %130, %119 ], [ %305, %297 ]
  %200 = phi i32 [ %131, %119 ], [ %316, %297 ]
  %201 = phi i32 [ %132, %119 ], [ %304, %297 ]
  %202 = phi i32 [ %133, %119 ], [ %317, %297 ]
  %203 = phi i32 [ %134, %119 ], [ %303, %297 ]
  %204 = phi i32 [ %135, %119 ], [ %318, %297 ]
  %205 = phi i32 [ %136, %119 ], [ %302, %297 ]
  %206 = phi i32 [ %137, %119 ], [ %319, %297 ]
  %207 = phi i32 [ %138, %119 ], [ %301, %297 ]
  %208 = phi i32 [ %139, %119 ], [ %320, %297 ]
  %209 = phi i32 [ %140, %119 ], [ %300, %297 ]
  %210 = phi i32 [ %141, %119 ], [ %321, %297 ]
  %211 = phi i32 [ %142, %119 ], [ %299, %297 ]
  %212 = phi i32 [ %143, %119 ], [ %322, %297 ]
  %213 = phi i32 [ %144, %119 ], [ %298, %297 ]
  %214 = phi i32 [ %145, %119 ], [ %323, %297 ]
  %215 = add nuw nsw i64 %146, 1
  %216 = load i32, i32* %1, align 4, !tbaa !5
  %217 = sext i32 %216 to i64
  %218 = icmp slt i64 %215, %217
  br i1 %218, label %119, label %8, !llvm.loop !10

219:                                              ; preds = %11, %241
  %220 = phi i32 [ %242, %241 ], [ %117, %11 ]
  %221 = phi i64 [ %243, %241 ], [ 0, %11 ]
  %222 = getelementptr inbounds [999 x %struct.aut], [999 x %struct.aut]* %2, i64 0, i64 %221, i32 1, i64 0
  %223 = call i64 @strlen(i8* noundef nonnull %222) #5
  %224 = trunc i64 %223 to i32
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %226, label %241

226:                                              ; preds = %219
  %227 = and i64 %223, 4294967295
  br label %230

228:                                              ; preds = %230
  %229 = icmp eq i64 %235, %227
  br i1 %229, label %241, label %230, !llvm.loop !12

230:                                              ; preds = %226, %228
  %231 = phi i64 [ 0, %226 ], [ %235, %228 ]
  %232 = getelementptr inbounds [999 x %struct.aut], [999 x %struct.aut]* %2, i64 0, i64 %221, i32 1, i64 %231
  %233 = load i8, i8* %232, align 1, !tbaa !9
  %234 = icmp eq i8 %233, %114
  %235 = add nuw nsw i64 %231, 1
  br i1 %234, label %236, label %228

236:                                              ; preds = %230
  %237 = getelementptr inbounds [999 x %struct.aut], [999 x %struct.aut]* %2, i64 0, i64 %221, i32 0
  %238 = load i32, i32* %237, align 16, !tbaa !13
  %239 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %238)
  %240 = load i32, i32* %1, align 4, !tbaa !5
  br label %241

241:                                              ; preds = %228, %219, %236
  %242 = phi i32 [ %220, %219 ], [ %240, %236 ], [ %220, %228 ]
  %243 = add nuw nsw i64 %221, 1
  %244 = sext i32 %242 to i64
  %245 = icmp slt i64 %243, %244
  br i1 %245, label %219, label %246, !llvm.loop !15

246:                                              ; preds = %241, %11
  call void @llvm.lifetime.end.p0i8(i64 31968, i8* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #4
  ret i32 0

247:                                              ; preds = %156
  %248 = add nsw i32 %158, 1
  br label %297

249:                                              ; preds = %156
  %250 = add nsw i32 %159, 1
  br label %297

251:                                              ; preds = %156
  %252 = add nsw i32 %160, 1
  br label %297

253:                                              ; preds = %156
  %254 = add nsw i32 %161, 1
  br label %297

255:                                              ; preds = %156
  %256 = add nsw i32 %162, 1
  br label %297

257:                                              ; preds = %156
  %258 = add nsw i32 %163, 1
  br label %297

259:                                              ; preds = %156
  %260 = add nsw i32 %164, 1
  br label %297

261:                                              ; preds = %156
  %262 = add nsw i32 %165, 1
  br label %297

263:                                              ; preds = %156
  %264 = add nsw i32 %166, 1
  br label %297

265:                                              ; preds = %156
  %266 = add nsw i32 %167, 1
  br label %297

267:                                              ; preds = %156
  %268 = add nsw i32 %168, 1
  br label %297

269:                                              ; preds = %156
  %270 = add nsw i32 %169, 1
  br label %297

271:                                              ; preds = %156
  %272 = add nsw i32 %170, 1
  br label %297

273:                                              ; preds = %156
  %274 = add nsw i32 %171, 1
  br label %297

275:                                              ; preds = %156
  %276 = add nsw i32 %172, 1
  br label %297

277:                                              ; preds = %156
  %278 = add nsw i32 %173, 1
  br label %297

279:                                              ; preds = %156
  %280 = add nsw i32 %174, 1
  br label %297

281:                                              ; preds = %156
  %282 = add nsw i32 %175, 1
  br label %297

283:                                              ; preds = %156
  %284 = add nsw i32 %176, 1
  br label %297

285:                                              ; preds = %156
  %286 = add nsw i32 %177, 1
  br label %297

287:                                              ; preds = %156
  %288 = add nsw i32 %178, 1
  br label %297

289:                                              ; preds = %156
  %290 = add nsw i32 %179, 1
  br label %297

291:                                              ; preds = %156
  %292 = add nsw i32 %180, 1
  br label %297

293:                                              ; preds = %156
  %294 = add nsw i32 %181, 1
  br label %297

295:                                              ; preds = %156
  %296 = add nsw i32 %182, 1
  br label %297

297:                                              ; preds = %156, %247, %186, %249, %251, %253, %255, %257, %259, %261, %263, %265, %267, %269, %271, %273, %275, %277, %279, %281, %283, %285, %287, %289, %291, %293, %295
  %298 = phi i32 [ %181, %295 ], [ %294, %293 ], [ %181, %291 ], [ %181, %289 ], [ %181, %287 ], [ %181, %285 ], [ %181, %283 ], [ %181, %281 ], [ %181, %279 ], [ %181, %277 ], [ %181, %275 ], [ %181, %273 ], [ %181, %271 ], [ %181, %269 ], [ %181, %267 ], [ %181, %265 ], [ %181, %263 ], [ %181, %261 ], [ %181, %259 ], [ %181, %257 ], [ %181, %255 ], [ %181, %253 ], [ %181, %251 ], [ %181, %249 ], [ %181, %186 ], [ %181, %247 ], [ %181, %156 ]
  %299 = phi i32 [ %179, %295 ], [ %179, %293 ], [ %179, %291 ], [ %290, %289 ], [ %179, %287 ], [ %179, %285 ], [ %179, %283 ], [ %179, %281 ], [ %179, %279 ], [ %179, %277 ], [ %179, %275 ], [ %179, %273 ], [ %179, %271 ], [ %179, %269 ], [ %179, %267 ], [ %179, %265 ], [ %179, %263 ], [ %179, %261 ], [ %179, %259 ], [ %179, %257 ], [ %179, %255 ], [ %179, %253 ], [ %179, %251 ], [ %179, %249 ], [ %179, %186 ], [ %179, %247 ], [ %179, %156 ]
  %300 = phi i32 [ %177, %295 ], [ %177, %293 ], [ %177, %291 ], [ %177, %289 ], [ %177, %287 ], [ %286, %285 ], [ %177, %283 ], [ %177, %281 ], [ %177, %279 ], [ %177, %277 ], [ %177, %275 ], [ %177, %273 ], [ %177, %271 ], [ %177, %269 ], [ %177, %267 ], [ %177, %265 ], [ %177, %263 ], [ %177, %261 ], [ %177, %259 ], [ %177, %257 ], [ %177, %255 ], [ %177, %253 ], [ %177, %251 ], [ %177, %249 ], [ %177, %186 ], [ %177, %247 ], [ %177, %156 ]
  %301 = phi i32 [ %175, %295 ], [ %175, %293 ], [ %175, %291 ], [ %175, %289 ], [ %175, %287 ], [ %175, %285 ], [ %175, %283 ], [ %282, %281 ], [ %175, %279 ], [ %175, %277 ], [ %175, %275 ], [ %175, %273 ], [ %175, %271 ], [ %175, %269 ], [ %175, %267 ], [ %175, %265 ], [ %175, %263 ], [ %175, %261 ], [ %175, %259 ], [ %175, %257 ], [ %175, %255 ], [ %175, %253 ], [ %175, %251 ], [ %175, %249 ], [ %175, %186 ], [ %175, %247 ], [ %175, %156 ]
  %302 = phi i32 [ %173, %295 ], [ %173, %293 ], [ %173, %291 ], [ %173, %289 ], [ %173, %287 ], [ %173, %285 ], [ %173, %283 ], [ %173, %281 ], [ %173, %279 ], [ %278, %277 ], [ %173, %275 ], [ %173, %273 ], [ %173, %271 ], [ %173, %269 ], [ %173, %267 ], [ %173, %265 ], [ %173, %263 ], [ %173, %261 ], [ %173, %259 ], [ %173, %257 ], [ %173, %255 ], [ %173, %253 ], [ %173, %251 ], [ %173, %249 ], [ %173, %186 ], [ %173, %247 ], [ %173, %156 ]
  %303 = phi i32 [ %171, %295 ], [ %171, %293 ], [ %171, %291 ], [ %171, %289 ], [ %171, %287 ], [ %171, %285 ], [ %171, %283 ], [ %171, %281 ], [ %171, %279 ], [ %171, %277 ], [ %171, %275 ], [ %274, %273 ], [ %171, %271 ], [ %171, %269 ], [ %171, %267 ], [ %171, %265 ], [ %171, %263 ], [ %171, %261 ], [ %171, %259 ], [ %171, %257 ], [ %171, %255 ], [ %171, %253 ], [ %171, %251 ], [ %171, %249 ], [ %171, %186 ], [ %171, %247 ], [ %171, %156 ]
  %304 = phi i32 [ %169, %295 ], [ %169, %293 ], [ %169, %291 ], [ %169, %289 ], [ %169, %287 ], [ %169, %285 ], [ %169, %283 ], [ %169, %281 ], [ %169, %279 ], [ %169, %277 ], [ %169, %275 ], [ %169, %273 ], [ %169, %271 ], [ %270, %269 ], [ %169, %267 ], [ %169, %265 ], [ %169, %263 ], [ %169, %261 ], [ %169, %259 ], [ %169, %257 ], [ %169, %255 ], [ %169, %253 ], [ %169, %251 ], [ %169, %249 ], [ %169, %186 ], [ %169, %247 ], [ %169, %156 ]
  %305 = phi i32 [ %167, %295 ], [ %167, %293 ], [ %167, %291 ], [ %167, %289 ], [ %167, %287 ], [ %167, %285 ], [ %167, %283 ], [ %167, %281 ], [ %167, %279 ], [ %167, %277 ], [ %167, %275 ], [ %167, %273 ], [ %167, %271 ], [ %167, %269 ], [ %167, %267 ], [ %266, %265 ], [ %167, %263 ], [ %167, %261 ], [ %167, %259 ], [ %167, %257 ], [ %167, %255 ], [ %167, %253 ], [ %167, %251 ], [ %167, %249 ], [ %167, %186 ], [ %167, %247 ], [ %167, %156 ]
  %306 = phi i32 [ %165, %295 ], [ %165, %293 ], [ %165, %291 ], [ %165, %289 ], [ %165, %287 ], [ %165, %285 ], [ %165, %283 ], [ %165, %281 ], [ %165, %279 ], [ %165, %277 ], [ %165, %275 ], [ %165, %273 ], [ %165, %271 ], [ %165, %269 ], [ %165, %267 ], [ %165, %265 ], [ %165, %263 ], [ %262, %261 ], [ %165, %259 ], [ %165, %257 ], [ %165, %255 ], [ %165, %253 ], [ %165, %251 ], [ %165, %249 ], [ %165, %186 ], [ %165, %247 ], [ %165, %156 ]
  %307 = phi i32 [ %163, %295 ], [ %163, %293 ], [ %163, %291 ], [ %163, %289 ], [ %163, %287 ], [ %163, %285 ], [ %163, %283 ], [ %163, %281 ], [ %163, %279 ], [ %163, %277 ], [ %163, %275 ], [ %163, %273 ], [ %163, %271 ], [ %163, %269 ], [ %163, %267 ], [ %163, %265 ], [ %163, %263 ], [ %163, %261 ], [ %163, %259 ], [ %258, %257 ], [ %163, %255 ], [ %163, %253 ], [ %163, %251 ], [ %163, %249 ], [ %163, %186 ], [ %163, %247 ], [ %163, %156 ]
  %308 = phi i32 [ %161, %295 ], [ %161, %293 ], [ %161, %291 ], [ %161, %289 ], [ %161, %287 ], [ %161, %285 ], [ %161, %283 ], [ %161, %281 ], [ %161, %279 ], [ %161, %277 ], [ %161, %275 ], [ %161, %273 ], [ %161, %271 ], [ %161, %269 ], [ %161, %267 ], [ %161, %265 ], [ %161, %263 ], [ %161, %261 ], [ %161, %259 ], [ %161, %257 ], [ %161, %255 ], [ %254, %253 ], [ %161, %251 ], [ %161, %249 ], [ %161, %186 ], [ %161, %247 ], [ %161, %156 ]
  %309 = phi i32 [ %159, %295 ], [ %159, %293 ], [ %159, %291 ], [ %159, %289 ], [ %159, %287 ], [ %159, %285 ], [ %159, %283 ], [ %159, %281 ], [ %159, %279 ], [ %159, %277 ], [ %159, %275 ], [ %159, %273 ], [ %159, %271 ], [ %159, %269 ], [ %159, %267 ], [ %159, %265 ], [ %159, %263 ], [ %159, %261 ], [ %159, %259 ], [ %159, %257 ], [ %159, %255 ], [ %159, %253 ], [ %159, %251 ], [ %250, %249 ], [ %159, %186 ], [ %159, %247 ], [ %159, %156 ]
  %310 = phi i32 [ %157, %295 ], [ %157, %293 ], [ %157, %291 ], [ %157, %289 ], [ %157, %287 ], [ %157, %285 ], [ %157, %283 ], [ %157, %281 ], [ %157, %279 ], [ %157, %277 ], [ %157, %275 ], [ %157, %273 ], [ %157, %271 ], [ %157, %269 ], [ %157, %267 ], [ %157, %265 ], [ %157, %263 ], [ %157, %261 ], [ %157, %259 ], [ %157, %257 ], [ %157, %255 ], [ %157, %253 ], [ %157, %251 ], [ %157, %249 ], [ %187, %186 ], [ %157, %247 ], [ %157, %156 ]
  %311 = phi i32 [ %158, %295 ], [ %158, %293 ], [ %158, %291 ], [ %158, %289 ], [ %158, %287 ], [ %158, %285 ], [ %158, %283 ], [ %158, %281 ], [ %158, %279 ], [ %158, %277 ], [ %158, %275 ], [ %158, %273 ], [ %158, %271 ], [ %158, %269 ], [ %158, %267 ], [ %158, %265 ], [ %158, %263 ], [ %158, %261 ], [ %158, %259 ], [ %158, %257 ], [ %158, %255 ], [ %158, %253 ], [ %158, %251 ], [ %158, %249 ], [ %158, %186 ], [ %248, %247 ], [ %158, %156 ]
  %312 = phi i32 [ %160, %295 ], [ %160, %293 ], [ %160, %291 ], [ %160, %289 ], [ %160, %287 ], [ %160, %285 ], [ %160, %283 ], [ %160, %281 ], [ %160, %279 ], [ %160, %277 ], [ %160, %275 ], [ %160, %273 ], [ %160, %271 ], [ %160, %269 ], [ %160, %267 ], [ %160, %265 ], [ %160, %263 ], [ %160, %261 ], [ %160, %259 ], [ %160, %257 ], [ %160, %255 ], [ %160, %253 ], [ %252, %251 ], [ %160, %249 ], [ %160, %186 ], [ %160, %247 ], [ %160, %156 ]
  %313 = phi i32 [ %162, %295 ], [ %162, %293 ], [ %162, %291 ], [ %162, %289 ], [ %162, %287 ], [ %162, %285 ], [ %162, %283 ], [ %162, %281 ], [ %162, %279 ], [ %162, %277 ], [ %162, %275 ], [ %162, %273 ], [ %162, %271 ], [ %162, %269 ], [ %162, %267 ], [ %162, %265 ], [ %162, %263 ], [ %162, %261 ], [ %162, %259 ], [ %162, %257 ], [ %256, %255 ], [ %162, %253 ], [ %162, %251 ], [ %162, %249 ], [ %162, %186 ], [ %162, %247 ], [ %162, %156 ]
  %314 = phi i32 [ %164, %295 ], [ %164, %293 ], [ %164, %291 ], [ %164, %289 ], [ %164, %287 ], [ %164, %285 ], [ %164, %283 ], [ %164, %281 ], [ %164, %279 ], [ %164, %277 ], [ %164, %275 ], [ %164, %273 ], [ %164, %271 ], [ %164, %269 ], [ %164, %267 ], [ %164, %265 ], [ %164, %263 ], [ %164, %261 ], [ %260, %259 ], [ %164, %257 ], [ %164, %255 ], [ %164, %253 ], [ %164, %251 ], [ %164, %249 ], [ %164, %186 ], [ %164, %247 ], [ %164, %156 ]
  %315 = phi i32 [ %166, %295 ], [ %166, %293 ], [ %166, %291 ], [ %166, %289 ], [ %166, %287 ], [ %166, %285 ], [ %166, %283 ], [ %166, %281 ], [ %166, %279 ], [ %166, %277 ], [ %166, %275 ], [ %166, %273 ], [ %166, %271 ], [ %166, %269 ], [ %166, %267 ], [ %166, %265 ], [ %264, %263 ], [ %166, %261 ], [ %166, %259 ], [ %166, %257 ], [ %166, %255 ], [ %166, %253 ], [ %166, %251 ], [ %166, %249 ], [ %166, %186 ], [ %166, %247 ], [ %166, %156 ]
  %316 = phi i32 [ %168, %295 ], [ %168, %293 ], [ %168, %291 ], [ %168, %289 ], [ %168, %287 ], [ %168, %285 ], [ %168, %283 ], [ %168, %281 ], [ %168, %279 ], [ %168, %277 ], [ %168, %275 ], [ %168, %273 ], [ %168, %271 ], [ %168, %269 ], [ %268, %267 ], [ %168, %265 ], [ %168, %263 ], [ %168, %261 ], [ %168, %259 ], [ %168, %257 ], [ %168, %255 ], [ %168, %253 ], [ %168, %251 ], [ %168, %249 ], [ %168, %186 ], [ %168, %247 ], [ %168, %156 ]
  %317 = phi i32 [ %170, %295 ], [ %170, %293 ], [ %170, %291 ], [ %170, %289 ], [ %170, %287 ], [ %170, %285 ], [ %170, %283 ], [ %170, %281 ], [ %170, %279 ], [ %170, %277 ], [ %170, %275 ], [ %170, %273 ], [ %272, %271 ], [ %170, %269 ], [ %170, %267 ], [ %170, %265 ], [ %170, %263 ], [ %170, %261 ], [ %170, %259 ], [ %170, %257 ], [ %170, %255 ], [ %170, %253 ], [ %170, %251 ], [ %170, %249 ], [ %170, %186 ], [ %170, %247 ], [ %170, %156 ]
  %318 = phi i32 [ %172, %295 ], [ %172, %293 ], [ %172, %291 ], [ %172, %289 ], [ %172, %287 ], [ %172, %285 ], [ %172, %283 ], [ %172, %281 ], [ %172, %279 ], [ %172, %277 ], [ %276, %275 ], [ %172, %273 ], [ %172, %271 ], [ %172, %269 ], [ %172, %267 ], [ %172, %265 ], [ %172, %263 ], [ %172, %261 ], [ %172, %259 ], [ %172, %257 ], [ %172, %255 ], [ %172, %253 ], [ %172, %251 ], [ %172, %249 ], [ %172, %186 ], [ %172, %247 ], [ %172, %156 ]
  %319 = phi i32 [ %174, %295 ], [ %174, %293 ], [ %174, %291 ], [ %174, %289 ], [ %174, %287 ], [ %174, %285 ], [ %174, %283 ], [ %174, %281 ], [ %280, %279 ], [ %174, %277 ], [ %174, %275 ], [ %174, %273 ], [ %174, %271 ], [ %174, %269 ], [ %174, %267 ], [ %174, %265 ], [ %174, %263 ], [ %174, %261 ], [ %174, %259 ], [ %174, %257 ], [ %174, %255 ], [ %174, %253 ], [ %174, %251 ], [ %174, %249 ], [ %174, %186 ], [ %174, %247 ], [ %174, %156 ]
  %320 = phi i32 [ %176, %295 ], [ %176, %293 ], [ %176, %291 ], [ %176, %289 ], [ %176, %287 ], [ %176, %285 ], [ %284, %283 ], [ %176, %281 ], [ %176, %279 ], [ %176, %277 ], [ %176, %275 ], [ %176, %273 ], [ %176, %271 ], [ %176, %269 ], [ %176, %267 ], [ %176, %265 ], [ %176, %263 ], [ %176, %261 ], [ %176, %259 ], [ %176, %257 ], [ %176, %255 ], [ %176, %253 ], [ %176, %251 ], [ %176, %249 ], [ %176, %186 ], [ %176, %247 ], [ %176, %156 ]
  %321 = phi i32 [ %178, %295 ], [ %178, %293 ], [ %178, %291 ], [ %178, %289 ], [ %288, %287 ], [ %178, %285 ], [ %178, %283 ], [ %178, %281 ], [ %178, %279 ], [ %178, %277 ], [ %178, %275 ], [ %178, %273 ], [ %178, %271 ], [ %178, %269 ], [ %178, %267 ], [ %178, %265 ], [ %178, %263 ], [ %178, %261 ], [ %178, %259 ], [ %178, %257 ], [ %178, %255 ], [ %178, %253 ], [ %178, %251 ], [ %178, %249 ], [ %178, %186 ], [ %178, %247 ], [ %178, %156 ]
  %322 = phi i32 [ %180, %295 ], [ %180, %293 ], [ %292, %291 ], [ %180, %289 ], [ %180, %287 ], [ %180, %285 ], [ %180, %283 ], [ %180, %281 ], [ %180, %279 ], [ %180, %277 ], [ %180, %275 ], [ %180, %273 ], [ %180, %271 ], [ %180, %269 ], [ %180, %267 ], [ %180, %265 ], [ %180, %263 ], [ %180, %261 ], [ %180, %259 ], [ %180, %257 ], [ %180, %255 ], [ %180, %253 ], [ %180, %251 ], [ %180, %249 ], [ %180, %186 ], [ %180, %247 ], [ %180, %156 ]
  %323 = phi i32 [ %296, %295 ], [ %182, %293 ], [ %182, %291 ], [ %182, %289 ], [ %182, %287 ], [ %182, %285 ], [ %182, %283 ], [ %182, %281 ], [ %182, %279 ], [ %182, %277 ], [ %182, %275 ], [ %182, %273 ], [ %182, %271 ], [ %182, %269 ], [ %182, %267 ], [ %182, %265 ], [ %182, %263 ], [ %182, %261 ], [ %182, %259 ], [ %182, %257 ], [ %182, %255 ], [ %182, %253 ], [ %182, %251 ], [ %182, %249 ], [ %182, %186 ], [ %182, %247 ], [ %182, %156 ]
  %324 = add nuw nsw i64 %183, 1
  %325 = icmp eq i64 %324, %155
  br i1 %325, label %188, label %156, !llvm.loop !16
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = distinct !{!12, !11}
!13 = !{!14, !6, i64 0}
!14 = !{!"aut", !6, i64 0, !7, i64 4}
!15 = distinct !{!15, !11}
!16 = distinct !{!16, !11}
