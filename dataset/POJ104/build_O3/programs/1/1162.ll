; ModuleID = 'source-C-CXX/1/1162.c'
source_filename = "source-C-CXX/1/1162.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.bo = type { i32, [36 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [999 x %struct.bo], align 16
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #4
  %4 = bitcast [999 x %struct.bo]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 39960, i8* nonnull %4) #4
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %6 = load i32, i32* %1, align 4, !tbaa !5
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %117, label %8

8:                                                ; preds = %186, %0
  %9 = phi i32 [ 0, %0 ], [ %187, %186 ]
  %10 = phi i32 [ 0, %0 ], [ %188, %186 ]
  %11 = phi i32 [ 0, %0 ], [ %189, %186 ]
  %12 = phi i32 [ 0, %0 ], [ %190, %186 ]
  %13 = phi i32 [ 0, %0 ], [ %191, %186 ]
  %14 = phi i32 [ 0, %0 ], [ %192, %186 ]
  %15 = phi i32 [ 0, %0 ], [ %193, %186 ]
  %16 = phi i32 [ 0, %0 ], [ %194, %186 ]
  %17 = phi i32 [ 0, %0 ], [ %195, %186 ]
  %18 = phi i32 [ 0, %0 ], [ %196, %186 ]
  %19 = phi i32 [ 0, %0 ], [ %197, %186 ]
  %20 = phi i32 [ 0, %0 ], [ %198, %186 ]
  %21 = phi i32 [ 0, %0 ], [ %199, %186 ]
  %22 = phi i32 [ 0, %0 ], [ %200, %186 ]
  %23 = phi i32 [ 0, %0 ], [ %201, %186 ]
  %24 = phi i32 [ 0, %0 ], [ %202, %186 ]
  %25 = phi i32 [ 0, %0 ], [ %203, %186 ]
  %26 = phi i32 [ 0, %0 ], [ %204, %186 ]
  %27 = phi i32 [ 0, %0 ], [ %205, %186 ]
  %28 = phi i32 [ 0, %0 ], [ %206, %186 ]
  %29 = phi i32 [ 0, %0 ], [ %207, %186 ]
  %30 = phi i32 [ 0, %0 ], [ %208, %186 ]
  %31 = phi i32 [ 0, %0 ], [ %209, %186 ]
  %32 = phi i32 [ 0, %0 ], [ %210, %186 ]
  %33 = phi i32 [ 0, %0 ], [ %211, %186 ]
  %34 = phi i32 [ 0, %0 ], [ %212, %186 ]
  %35 = icmp sgt i32 %9, 0
  %36 = select i1 %35, i8 65, i8 0
  %37 = select i1 %35, i32 %9, i32 0
  %38 = icmp sgt i32 %10, %37
  %39 = select i1 %38, i8 66, i8 %36
  %40 = select i1 %38, i32 %10, i32 %37
  %41 = icmp sgt i32 %11, %40
  %42 = select i1 %41, i8 67, i8 %39
  %43 = select i1 %41, i32 %11, i32 %40
  %44 = icmp sgt i32 %12, %43
  %45 = select i1 %44, i8 68, i8 %42
  %46 = select i1 %44, i32 %12, i32 %43
  %47 = icmp sgt i32 %13, %46
  %48 = select i1 %47, i8 69, i8 %45
  %49 = select i1 %47, i32 %13, i32 %46
  %50 = icmp sgt i32 %14, %49
  %51 = select i1 %50, i8 70, i8 %48
  %52 = select i1 %50, i32 %14, i32 %49
  %53 = icmp sgt i32 %15, %52
  %54 = select i1 %53, i8 71, i8 %51
  %55 = select i1 %53, i32 %15, i32 %52
  %56 = icmp sgt i32 %16, %55
  %57 = select i1 %56, i8 72, i8 %54
  %58 = select i1 %56, i32 %16, i32 %55
  %59 = icmp sgt i32 %17, %58
  %60 = select i1 %59, i8 73, i8 %57
  %61 = select i1 %59, i32 %17, i32 %58
  %62 = icmp sgt i32 %18, %61
  %63 = select i1 %62, i8 74, i8 %60
  %64 = select i1 %62, i32 %18, i32 %61
  %65 = icmp sgt i32 %19, %64
  %66 = select i1 %65, i8 75, i8 %63
  %67 = select i1 %65, i32 %19, i32 %64
  %68 = icmp sgt i32 %20, %67
  %69 = select i1 %68, i8 76, i8 %66
  %70 = select i1 %68, i32 %20, i32 %67
  %71 = icmp sgt i32 %21, %70
  %72 = select i1 %71, i8 77, i8 %69
  %73 = select i1 %71, i32 %21, i32 %70
  %74 = icmp sgt i32 %22, %73
  %75 = select i1 %74, i8 78, i8 %72
  %76 = select i1 %74, i32 %22, i32 %73
  %77 = icmp sgt i32 %23, %76
  %78 = select i1 %77, i8 79, i8 %75
  %79 = select i1 %77, i32 %23, i32 %76
  %80 = icmp sgt i32 %24, %79
  %81 = select i1 %80, i8 80, i8 %78
  %82 = select i1 %80, i32 %24, i32 %79
  %83 = icmp sgt i32 %25, %82
  %84 = select i1 %83, i8 81, i8 %81
  %85 = select i1 %83, i32 %25, i32 %82
  %86 = icmp sgt i32 %26, %85
  %87 = select i1 %86, i8 82, i8 %84
  %88 = select i1 %86, i32 %26, i32 %85
  %89 = icmp sgt i32 %27, %88
  %90 = select i1 %89, i8 83, i8 %87
  %91 = select i1 %89, i32 %27, i32 %88
  %92 = icmp sgt i32 %28, %91
  %93 = select i1 %92, i8 84, i8 %90
  %94 = select i1 %92, i32 %28, i32 %91
  %95 = icmp sgt i32 %29, %94
  %96 = select i1 %95, i8 85, i8 %93
  %97 = select i1 %95, i32 %29, i32 %94
  %98 = icmp sgt i32 %30, %97
  %99 = select i1 %98, i8 86, i8 %96
  %100 = select i1 %98, i32 %30, i32 %97
  %101 = icmp sgt i32 %31, %100
  %102 = select i1 %101, i8 87, i8 %99
  %103 = select i1 %101, i32 %31, i32 %100
  %104 = icmp sgt i32 %32, %103
  %105 = select i1 %104, i8 88, i8 %102
  %106 = select i1 %104, i32 %32, i32 %103
  %107 = icmp sgt i32 %33, %106
  %108 = select i1 %107, i8 89, i8 %105
  %109 = select i1 %107, i32 %33, i32 %106
  %110 = icmp sgt i32 %34, %109
  %111 = select i1 %110, i8 90, i8 %108
  %112 = select i1 %110, i32 %34, i32 %109
  %113 = zext i8 %111 to i32
  %114 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %113, i32 %112)
  %115 = load i32, i32* %1, align 4, !tbaa !5
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %217, label %284

117:                                              ; preds = %0, %186
  %118 = phi i32 [ %187, %186 ], [ 0, %0 ]
  %119 = phi i32 [ %188, %186 ], [ 0, %0 ]
  %120 = phi i32 [ %189, %186 ], [ 0, %0 ]
  %121 = phi i32 [ %190, %186 ], [ 0, %0 ]
  %122 = phi i32 [ %191, %186 ], [ 0, %0 ]
  %123 = phi i32 [ %192, %186 ], [ 0, %0 ]
  %124 = phi i32 [ %193, %186 ], [ 0, %0 ]
  %125 = phi i32 [ %194, %186 ], [ 0, %0 ]
  %126 = phi i32 [ %195, %186 ], [ 0, %0 ]
  %127 = phi i32 [ %196, %186 ], [ 0, %0 ]
  %128 = phi i32 [ %197, %186 ], [ 0, %0 ]
  %129 = phi i32 [ %198, %186 ], [ 0, %0 ]
  %130 = phi i32 [ %199, %186 ], [ 0, %0 ]
  %131 = phi i32 [ %200, %186 ], [ 0, %0 ]
  %132 = phi i32 [ %201, %186 ], [ 0, %0 ]
  %133 = phi i32 [ %202, %186 ], [ 0, %0 ]
  %134 = phi i32 [ %203, %186 ], [ 0, %0 ]
  %135 = phi i32 [ %204, %186 ], [ 0, %0 ]
  %136 = phi i32 [ %205, %186 ], [ 0, %0 ]
  %137 = phi i32 [ %206, %186 ], [ 0, %0 ]
  %138 = phi i32 [ %207, %186 ], [ 0, %0 ]
  %139 = phi i32 [ %208, %186 ], [ 0, %0 ]
  %140 = phi i32 [ %209, %186 ], [ 0, %0 ]
  %141 = phi i32 [ %210, %186 ], [ 0, %0 ]
  %142 = phi i32 [ %211, %186 ], [ 0, %0 ]
  %143 = phi i32 [ %212, %186 ], [ 0, %0 ]
  %144 = phi i64 [ %213, %186 ], [ 0, %0 ]
  %145 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %144, i32 0
  %146 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %144, i32 1, i64 0
  %147 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %145, i8* nonnull %146)
  %148 = call i64 @strlen(i8* noundef nonnull %146) #5
  %149 = trunc i64 %148 to i32
  %150 = icmp sgt i32 %149, 0
  br i1 %150, label %151, label %186

151:                                              ; preds = %117
  %152 = shl i64 %148, 32
  %153 = ashr exact i64 %152, 32
  br label %154

154:                                              ; preds = %151, %335
  %155 = phi i32 [ %118, %151 ], [ %348, %335 ]
  %156 = phi i32 [ %119, %151 ], [ %349, %335 ]
  %157 = phi i32 [ %120, %151 ], [ %347, %335 ]
  %158 = phi i32 [ %121, %151 ], [ %350, %335 ]
  %159 = phi i32 [ %122, %151 ], [ %346, %335 ]
  %160 = phi i32 [ %123, %151 ], [ %351, %335 ]
  %161 = phi i32 [ %124, %151 ], [ %345, %335 ]
  %162 = phi i32 [ %125, %151 ], [ %352, %335 ]
  %163 = phi i32 [ %126, %151 ], [ %344, %335 ]
  %164 = phi i32 [ %127, %151 ], [ %353, %335 ]
  %165 = phi i32 [ %128, %151 ], [ %343, %335 ]
  %166 = phi i32 [ %129, %151 ], [ %354, %335 ]
  %167 = phi i32 [ %130, %151 ], [ %342, %335 ]
  %168 = phi i32 [ %131, %151 ], [ %355, %335 ]
  %169 = phi i32 [ %132, %151 ], [ %341, %335 ]
  %170 = phi i32 [ %133, %151 ], [ %356, %335 ]
  %171 = phi i32 [ %134, %151 ], [ %340, %335 ]
  %172 = phi i32 [ %135, %151 ], [ %357, %335 ]
  %173 = phi i32 [ %136, %151 ], [ %339, %335 ]
  %174 = phi i32 [ %137, %151 ], [ %358, %335 ]
  %175 = phi i32 [ %138, %151 ], [ %338, %335 ]
  %176 = phi i32 [ %139, %151 ], [ %359, %335 ]
  %177 = phi i32 [ %140, %151 ], [ %337, %335 ]
  %178 = phi i32 [ %141, %151 ], [ %360, %335 ]
  %179 = phi i32 [ %142, %151 ], [ %336, %335 ]
  %180 = phi i32 [ %143, %151 ], [ %361, %335 ]
  %181 = phi i64 [ 0, %151 ], [ %362, %335 ]
  %182 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %144, i32 1, i64 %181
  %183 = load i8, i8* %182, align 1, !tbaa !9
  switch i8 %183, label %335 [
    i8 65, label %184
    i8 66, label %285
    i8 67, label %287
    i8 68, label %289
    i8 69, label %291
    i8 70, label %293
    i8 71, label %295
    i8 72, label %297
    i8 73, label %299
    i8 74, label %301
    i8 75, label %303
    i8 76, label %305
    i8 77, label %307
    i8 78, label %309
    i8 79, label %311
    i8 80, label %313
    i8 81, label %315
    i8 82, label %317
    i8 83, label %319
    i8 84, label %321
    i8 85, label %323
    i8 86, label %325
    i8 87, label %327
    i8 88, label %329
    i8 89, label %331
    i8 90, label %333
  ]

184:                                              ; preds = %154
  %185 = add nsw i32 %155, 1
  br label %335

186:                                              ; preds = %335, %117
  %187 = phi i32 [ %118, %117 ], [ %348, %335 ]
  %188 = phi i32 [ %119, %117 ], [ %349, %335 ]
  %189 = phi i32 [ %120, %117 ], [ %347, %335 ]
  %190 = phi i32 [ %121, %117 ], [ %350, %335 ]
  %191 = phi i32 [ %122, %117 ], [ %346, %335 ]
  %192 = phi i32 [ %123, %117 ], [ %351, %335 ]
  %193 = phi i32 [ %124, %117 ], [ %345, %335 ]
  %194 = phi i32 [ %125, %117 ], [ %352, %335 ]
  %195 = phi i32 [ %126, %117 ], [ %344, %335 ]
  %196 = phi i32 [ %127, %117 ], [ %353, %335 ]
  %197 = phi i32 [ %128, %117 ], [ %343, %335 ]
  %198 = phi i32 [ %129, %117 ], [ %354, %335 ]
  %199 = phi i32 [ %130, %117 ], [ %342, %335 ]
  %200 = phi i32 [ %131, %117 ], [ %355, %335 ]
  %201 = phi i32 [ %132, %117 ], [ %341, %335 ]
  %202 = phi i32 [ %133, %117 ], [ %356, %335 ]
  %203 = phi i32 [ %134, %117 ], [ %340, %335 ]
  %204 = phi i32 [ %135, %117 ], [ %357, %335 ]
  %205 = phi i32 [ %136, %117 ], [ %339, %335 ]
  %206 = phi i32 [ %137, %117 ], [ %358, %335 ]
  %207 = phi i32 [ %138, %117 ], [ %338, %335 ]
  %208 = phi i32 [ %139, %117 ], [ %359, %335 ]
  %209 = phi i32 [ %140, %117 ], [ %337, %335 ]
  %210 = phi i32 [ %141, %117 ], [ %360, %335 ]
  %211 = phi i32 [ %142, %117 ], [ %336, %335 ]
  %212 = phi i32 [ %143, %117 ], [ %361, %335 ]
  %213 = add nuw nsw i64 %144, 1
  %214 = load i32, i32* %1, align 4, !tbaa !5
  %215 = sext i32 %214 to i64
  %216 = icmp slt i64 %213, %215
  br i1 %216, label %117, label %8, !llvm.loop !10

217:                                              ; preds = %8, %279
  %218 = phi i32 [ %280, %279 ], [ %115, %8 ]
  %219 = phi i64 [ %281, %279 ], [ 0, %8 ]
  %220 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %219, i32 1, i64 0
  %221 = call i64 @strlen(i8* noundef nonnull %220) #5
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %279, label %223

223:                                              ; preds = %217
  %224 = add i64 %221, -1
  %225 = and i64 %221, 3
  %226 = icmp ult i64 %224, 3
  br i1 %226, label %255, label %227

227:                                              ; preds = %223
  %228 = and i64 %221, -4
  br label %229

229:                                              ; preds = %229, %227
  %230 = phi i64 [ 0, %227 ], [ %252, %229 ]
  %231 = phi i32 [ 1, %227 ], [ %251, %229 ]
  %232 = phi i64 [ %228, %227 ], [ %253, %229 ]
  %233 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %219, i32 1, i64 %230
  %234 = load i8, i8* %233, align 4, !tbaa !9
  %235 = icmp eq i8 %111, %234
  %236 = or i64 %230, 1
  %237 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %219, i32 1, i64 %236
  %238 = load i8, i8* %237, align 1, !tbaa !9
  %239 = icmp eq i8 %111, %238
  %240 = or i64 %230, 2
  %241 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %219, i32 1, i64 %240
  %242 = load i8, i8* %241, align 2, !tbaa !9
  %243 = icmp eq i8 %111, %242
  %244 = or i64 %230, 3
  %245 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %219, i32 1, i64 %244
  %246 = load i8, i8* %245, align 1, !tbaa !9
  %247 = icmp eq i8 %111, %246
  %248 = select i1 %247, i1 true, i1 %243
  %249 = select i1 %248, i1 true, i1 %239
  %250 = select i1 %249, i1 true, i1 %235
  %251 = select i1 %250, i32 0, i32 %231
  %252 = add nuw nsw i64 %230, 4
  %253 = add i64 %232, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %229, !llvm.loop !12

255:                                              ; preds = %229, %223
  %256 = phi i32 [ undef, %223 ], [ %251, %229 ]
  %257 = phi i64 [ 0, %223 ], [ %252, %229 ]
  %258 = phi i32 [ 1, %223 ], [ %251, %229 ]
  %259 = icmp eq i64 %225, 0
  br i1 %259, label %271, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64 [ %268, %260 ], [ %257, %255 ]
  %262 = phi i32 [ %267, %260 ], [ %258, %255 ]
  %263 = phi i64 [ %269, %260 ], [ %225, %255 ]
  %264 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %219, i32 1, i64 %261
  %265 = load i8, i8* %264, align 1, !tbaa !9
  %266 = icmp eq i8 %111, %265
  %267 = select i1 %266, i32 0, i32 %262
  %268 = add nuw nsw i64 %261, 1
  %269 = add i64 %263, -1
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %271, label %260, !llvm.loop !13

271:                                              ; preds = %260, %255
  %272 = phi i32 [ %256, %255 ], [ %267, %260 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %279

274:                                              ; preds = %271
  %275 = getelementptr inbounds [999 x %struct.bo], [999 x %struct.bo]* %2, i64 0, i64 %219, i32 0
  %276 = load i32, i32* %275, align 8, !tbaa !15
  %277 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %276)
  %278 = load i32, i32* %1, align 4, !tbaa !5
  br label %279

279:                                              ; preds = %217, %271, %274
  %280 = phi i32 [ %218, %271 ], [ %278, %274 ], [ %218, %217 ]
  %281 = add nuw nsw i64 %219, 1
  %282 = sext i32 %280 to i64
  %283 = icmp slt i64 %281, %282
  br i1 %283, label %217, label %284, !llvm.loop !17

284:                                              ; preds = %279, %8
  call void @llvm.lifetime.end.p0i8(i64 39960, i8* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #4
  ret i32 0

285:                                              ; preds = %154
  %286 = add nsw i32 %156, 1
  br label %335

287:                                              ; preds = %154
  %288 = add nsw i32 %157, 1
  br label %335

289:                                              ; preds = %154
  %290 = add nsw i32 %158, 1
  br label %335

291:                                              ; preds = %154
  %292 = add nsw i32 %159, 1
  br label %335

293:                                              ; preds = %154
  %294 = add nsw i32 %160, 1
  br label %335

295:                                              ; preds = %154
  %296 = add nsw i32 %161, 1
  br label %335

297:                                              ; preds = %154
  %298 = add nsw i32 %162, 1
  br label %335

299:                                              ; preds = %154
  %300 = add nsw i32 %163, 1
  br label %335

301:                                              ; preds = %154
  %302 = add nsw i32 %164, 1
  br label %335

303:                                              ; preds = %154
  %304 = add nsw i32 %165, 1
  br label %335

305:                                              ; preds = %154
  %306 = add nsw i32 %166, 1
  br label %335

307:                                              ; preds = %154
  %308 = add nsw i32 %167, 1
  br label %335

309:                                              ; preds = %154
  %310 = add nsw i32 %168, 1
  br label %335

311:                                              ; preds = %154
  %312 = add nsw i32 %169, 1
  br label %335

313:                                              ; preds = %154
  %314 = add nsw i32 %170, 1
  br label %335

315:                                              ; preds = %154
  %316 = add nsw i32 %171, 1
  br label %335

317:                                              ; preds = %154
  %318 = add nsw i32 %172, 1
  br label %335

319:                                              ; preds = %154
  %320 = add nsw i32 %173, 1
  br label %335

321:                                              ; preds = %154
  %322 = add nsw i32 %174, 1
  br label %335

323:                                              ; preds = %154
  %324 = add nsw i32 %175, 1
  br label %335

325:                                              ; preds = %154
  %326 = add nsw i32 %176, 1
  br label %335

327:                                              ; preds = %154
  %328 = add nsw i32 %177, 1
  br label %335

329:                                              ; preds = %154
  %330 = add nsw i32 %178, 1
  br label %335

331:                                              ; preds = %154
  %332 = add nsw i32 %179, 1
  br label %335

333:                                              ; preds = %154
  %334 = add nsw i32 %180, 1
  br label %335

335:                                              ; preds = %154, %285, %184, %287, %289, %291, %293, %295, %297, %299, %301, %303, %305, %307, %309, %311, %313, %315, %317, %319, %321, %323, %325, %327, %329, %331, %333
  %336 = phi i32 [ %179, %333 ], [ %332, %331 ], [ %179, %329 ], [ %179, %327 ], [ %179, %325 ], [ %179, %323 ], [ %179, %321 ], [ %179, %319 ], [ %179, %317 ], [ %179, %315 ], [ %179, %313 ], [ %179, %311 ], [ %179, %309 ], [ %179, %307 ], [ %179, %305 ], [ %179, %303 ], [ %179, %301 ], [ %179, %299 ], [ %179, %297 ], [ %179, %295 ], [ %179, %293 ], [ %179, %291 ], [ %179, %289 ], [ %179, %287 ], [ %179, %184 ], [ %179, %285 ], [ %179, %154 ]
  %337 = phi i32 [ %177, %333 ], [ %177, %331 ], [ %177, %329 ], [ %328, %327 ], [ %177, %325 ], [ %177, %323 ], [ %177, %321 ], [ %177, %319 ], [ %177, %317 ], [ %177, %315 ], [ %177, %313 ], [ %177, %311 ], [ %177, %309 ], [ %177, %307 ], [ %177, %305 ], [ %177, %303 ], [ %177, %301 ], [ %177, %299 ], [ %177, %297 ], [ %177, %295 ], [ %177, %293 ], [ %177, %291 ], [ %177, %289 ], [ %177, %287 ], [ %177, %184 ], [ %177, %285 ], [ %177, %154 ]
  %338 = phi i32 [ %175, %333 ], [ %175, %331 ], [ %175, %329 ], [ %175, %327 ], [ %175, %325 ], [ %324, %323 ], [ %175, %321 ], [ %175, %319 ], [ %175, %317 ], [ %175, %315 ], [ %175, %313 ], [ %175, %311 ], [ %175, %309 ], [ %175, %307 ], [ %175, %305 ], [ %175, %303 ], [ %175, %301 ], [ %175, %299 ], [ %175, %297 ], [ %175, %295 ], [ %175, %293 ], [ %175, %291 ], [ %175, %289 ], [ %175, %287 ], [ %175, %184 ], [ %175, %285 ], [ %175, %154 ]
  %339 = phi i32 [ %173, %333 ], [ %173, %331 ], [ %173, %329 ], [ %173, %327 ], [ %173, %325 ], [ %173, %323 ], [ %173, %321 ], [ %320, %319 ], [ %173, %317 ], [ %173, %315 ], [ %173, %313 ], [ %173, %311 ], [ %173, %309 ], [ %173, %307 ], [ %173, %305 ], [ %173, %303 ], [ %173, %301 ], [ %173, %299 ], [ %173, %297 ], [ %173, %295 ], [ %173, %293 ], [ %173, %291 ], [ %173, %289 ], [ %173, %287 ], [ %173, %184 ], [ %173, %285 ], [ %173, %154 ]
  %340 = phi i32 [ %171, %333 ], [ %171, %331 ], [ %171, %329 ], [ %171, %327 ], [ %171, %325 ], [ %171, %323 ], [ %171, %321 ], [ %171, %319 ], [ %171, %317 ], [ %316, %315 ], [ %171, %313 ], [ %171, %311 ], [ %171, %309 ], [ %171, %307 ], [ %171, %305 ], [ %171, %303 ], [ %171, %301 ], [ %171, %299 ], [ %171, %297 ], [ %171, %295 ], [ %171, %293 ], [ %171, %291 ], [ %171, %289 ], [ %171, %287 ], [ %171, %184 ], [ %171, %285 ], [ %171, %154 ]
  %341 = phi i32 [ %169, %333 ], [ %169, %331 ], [ %169, %329 ], [ %169, %327 ], [ %169, %325 ], [ %169, %323 ], [ %169, %321 ], [ %169, %319 ], [ %169, %317 ], [ %169, %315 ], [ %169, %313 ], [ %312, %311 ], [ %169, %309 ], [ %169, %307 ], [ %169, %305 ], [ %169, %303 ], [ %169, %301 ], [ %169, %299 ], [ %169, %297 ], [ %169, %295 ], [ %169, %293 ], [ %169, %291 ], [ %169, %289 ], [ %169, %287 ], [ %169, %184 ], [ %169, %285 ], [ %169, %154 ]
  %342 = phi i32 [ %167, %333 ], [ %167, %331 ], [ %167, %329 ], [ %167, %327 ], [ %167, %325 ], [ %167, %323 ], [ %167, %321 ], [ %167, %319 ], [ %167, %317 ], [ %167, %315 ], [ %167, %313 ], [ %167, %311 ], [ %167, %309 ], [ %308, %307 ], [ %167, %305 ], [ %167, %303 ], [ %167, %301 ], [ %167, %299 ], [ %167, %297 ], [ %167, %295 ], [ %167, %293 ], [ %167, %291 ], [ %167, %289 ], [ %167, %287 ], [ %167, %184 ], [ %167, %285 ], [ %167, %154 ]
  %343 = phi i32 [ %165, %333 ], [ %165, %331 ], [ %165, %329 ], [ %165, %327 ], [ %165, %325 ], [ %165, %323 ], [ %165, %321 ], [ %165, %319 ], [ %165, %317 ], [ %165, %315 ], [ %165, %313 ], [ %165, %311 ], [ %165, %309 ], [ %165, %307 ], [ %165, %305 ], [ %304, %303 ], [ %165, %301 ], [ %165, %299 ], [ %165, %297 ], [ %165, %295 ], [ %165, %293 ], [ %165, %291 ], [ %165, %289 ], [ %165, %287 ], [ %165, %184 ], [ %165, %285 ], [ %165, %154 ]
  %344 = phi i32 [ %163, %333 ], [ %163, %331 ], [ %163, %329 ], [ %163, %327 ], [ %163, %325 ], [ %163, %323 ], [ %163, %321 ], [ %163, %319 ], [ %163, %317 ], [ %163, %315 ], [ %163, %313 ], [ %163, %311 ], [ %163, %309 ], [ %163, %307 ], [ %163, %305 ], [ %163, %303 ], [ %163, %301 ], [ %300, %299 ], [ %163, %297 ], [ %163, %295 ], [ %163, %293 ], [ %163, %291 ], [ %163, %289 ], [ %163, %287 ], [ %163, %184 ], [ %163, %285 ], [ %163, %154 ]
  %345 = phi i32 [ %161, %333 ], [ %161, %331 ], [ %161, %329 ], [ %161, %327 ], [ %161, %325 ], [ %161, %323 ], [ %161, %321 ], [ %161, %319 ], [ %161, %317 ], [ %161, %315 ], [ %161, %313 ], [ %161, %311 ], [ %161, %309 ], [ %161, %307 ], [ %161, %305 ], [ %161, %303 ], [ %161, %301 ], [ %161, %299 ], [ %161, %297 ], [ %296, %295 ], [ %161, %293 ], [ %161, %291 ], [ %161, %289 ], [ %161, %287 ], [ %161, %184 ], [ %161, %285 ], [ %161, %154 ]
  %346 = phi i32 [ %159, %333 ], [ %159, %331 ], [ %159, %329 ], [ %159, %327 ], [ %159, %325 ], [ %159, %323 ], [ %159, %321 ], [ %159, %319 ], [ %159, %317 ], [ %159, %315 ], [ %159, %313 ], [ %159, %311 ], [ %159, %309 ], [ %159, %307 ], [ %159, %305 ], [ %159, %303 ], [ %159, %301 ], [ %159, %299 ], [ %159, %297 ], [ %159, %295 ], [ %159, %293 ], [ %292, %291 ], [ %159, %289 ], [ %159, %287 ], [ %159, %184 ], [ %159, %285 ], [ %159, %154 ]
  %347 = phi i32 [ %157, %333 ], [ %157, %331 ], [ %157, %329 ], [ %157, %327 ], [ %157, %325 ], [ %157, %323 ], [ %157, %321 ], [ %157, %319 ], [ %157, %317 ], [ %157, %315 ], [ %157, %313 ], [ %157, %311 ], [ %157, %309 ], [ %157, %307 ], [ %157, %305 ], [ %157, %303 ], [ %157, %301 ], [ %157, %299 ], [ %157, %297 ], [ %157, %295 ], [ %157, %293 ], [ %157, %291 ], [ %157, %289 ], [ %288, %287 ], [ %157, %184 ], [ %157, %285 ], [ %157, %154 ]
  %348 = phi i32 [ %155, %333 ], [ %155, %331 ], [ %155, %329 ], [ %155, %327 ], [ %155, %325 ], [ %155, %323 ], [ %155, %321 ], [ %155, %319 ], [ %155, %317 ], [ %155, %315 ], [ %155, %313 ], [ %155, %311 ], [ %155, %309 ], [ %155, %307 ], [ %155, %305 ], [ %155, %303 ], [ %155, %301 ], [ %155, %299 ], [ %155, %297 ], [ %155, %295 ], [ %155, %293 ], [ %155, %291 ], [ %155, %289 ], [ %155, %287 ], [ %185, %184 ], [ %155, %285 ], [ %155, %154 ]
  %349 = phi i32 [ %156, %333 ], [ %156, %331 ], [ %156, %329 ], [ %156, %327 ], [ %156, %325 ], [ %156, %323 ], [ %156, %321 ], [ %156, %319 ], [ %156, %317 ], [ %156, %315 ], [ %156, %313 ], [ %156, %311 ], [ %156, %309 ], [ %156, %307 ], [ %156, %305 ], [ %156, %303 ], [ %156, %301 ], [ %156, %299 ], [ %156, %297 ], [ %156, %295 ], [ %156, %293 ], [ %156, %291 ], [ %156, %289 ], [ %156, %287 ], [ %156, %184 ], [ %286, %285 ], [ %156, %154 ]
  %350 = phi i32 [ %158, %333 ], [ %158, %331 ], [ %158, %329 ], [ %158, %327 ], [ %158, %325 ], [ %158, %323 ], [ %158, %321 ], [ %158, %319 ], [ %158, %317 ], [ %158, %315 ], [ %158, %313 ], [ %158, %311 ], [ %158, %309 ], [ %158, %307 ], [ %158, %305 ], [ %158, %303 ], [ %158, %301 ], [ %158, %299 ], [ %158, %297 ], [ %158, %295 ], [ %158, %293 ], [ %158, %291 ], [ %290, %289 ], [ %158, %287 ], [ %158, %184 ], [ %158, %285 ], [ %158, %154 ]
  %351 = phi i32 [ %160, %333 ], [ %160, %331 ], [ %160, %329 ], [ %160, %327 ], [ %160, %325 ], [ %160, %323 ], [ %160, %321 ], [ %160, %319 ], [ %160, %317 ], [ %160, %315 ], [ %160, %313 ], [ %160, %311 ], [ %160, %309 ], [ %160, %307 ], [ %160, %305 ], [ %160, %303 ], [ %160, %301 ], [ %160, %299 ], [ %160, %297 ], [ %160, %295 ], [ %294, %293 ], [ %160, %291 ], [ %160, %289 ], [ %160, %287 ], [ %160, %184 ], [ %160, %285 ], [ %160, %154 ]
  %352 = phi i32 [ %162, %333 ], [ %162, %331 ], [ %162, %329 ], [ %162, %327 ], [ %162, %325 ], [ %162, %323 ], [ %162, %321 ], [ %162, %319 ], [ %162, %317 ], [ %162, %315 ], [ %162, %313 ], [ %162, %311 ], [ %162, %309 ], [ %162, %307 ], [ %162, %305 ], [ %162, %303 ], [ %162, %301 ], [ %162, %299 ], [ %298, %297 ], [ %162, %295 ], [ %162, %293 ], [ %162, %291 ], [ %162, %289 ], [ %162, %287 ], [ %162, %184 ], [ %162, %285 ], [ %162, %154 ]
  %353 = phi i32 [ %164, %333 ], [ %164, %331 ], [ %164, %329 ], [ %164, %327 ], [ %164, %325 ], [ %164, %323 ], [ %164, %321 ], [ %164, %319 ], [ %164, %317 ], [ %164, %315 ], [ %164, %313 ], [ %164, %311 ], [ %164, %309 ], [ %164, %307 ], [ %164, %305 ], [ %164, %303 ], [ %302, %301 ], [ %164, %299 ], [ %164, %297 ], [ %164, %295 ], [ %164, %293 ], [ %164, %291 ], [ %164, %289 ], [ %164, %287 ], [ %164, %184 ], [ %164, %285 ], [ %164, %154 ]
  %354 = phi i32 [ %166, %333 ], [ %166, %331 ], [ %166, %329 ], [ %166, %327 ], [ %166, %325 ], [ %166, %323 ], [ %166, %321 ], [ %166, %319 ], [ %166, %317 ], [ %166, %315 ], [ %166, %313 ], [ %166, %311 ], [ %166, %309 ], [ %166, %307 ], [ %306, %305 ], [ %166, %303 ], [ %166, %301 ], [ %166, %299 ], [ %166, %297 ], [ %166, %295 ], [ %166, %293 ], [ %166, %291 ], [ %166, %289 ], [ %166, %287 ], [ %166, %184 ], [ %166, %285 ], [ %166, %154 ]
  %355 = phi i32 [ %168, %333 ], [ %168, %331 ], [ %168, %329 ], [ %168, %327 ], [ %168, %325 ], [ %168, %323 ], [ %168, %321 ], [ %168, %319 ], [ %168, %317 ], [ %168, %315 ], [ %168, %313 ], [ %168, %311 ], [ %310, %309 ], [ %168, %307 ], [ %168, %305 ], [ %168, %303 ], [ %168, %301 ], [ %168, %299 ], [ %168, %297 ], [ %168, %295 ], [ %168, %293 ], [ %168, %291 ], [ %168, %289 ], [ %168, %287 ], [ %168, %184 ], [ %168, %285 ], [ %168, %154 ]
  %356 = phi i32 [ %170, %333 ], [ %170, %331 ], [ %170, %329 ], [ %170, %327 ], [ %170, %325 ], [ %170, %323 ], [ %170, %321 ], [ %170, %319 ], [ %170, %317 ], [ %170, %315 ], [ %314, %313 ], [ %170, %311 ], [ %170, %309 ], [ %170, %307 ], [ %170, %305 ], [ %170, %303 ], [ %170, %301 ], [ %170, %299 ], [ %170, %297 ], [ %170, %295 ], [ %170, %293 ], [ %170, %291 ], [ %170, %289 ], [ %170, %287 ], [ %170, %184 ], [ %170, %285 ], [ %170, %154 ]
  %357 = phi i32 [ %172, %333 ], [ %172, %331 ], [ %172, %329 ], [ %172, %327 ], [ %172, %325 ], [ %172, %323 ], [ %172, %321 ], [ %172, %319 ], [ %318, %317 ], [ %172, %315 ], [ %172, %313 ], [ %172, %311 ], [ %172, %309 ], [ %172, %307 ], [ %172, %305 ], [ %172, %303 ], [ %172, %301 ], [ %172, %299 ], [ %172, %297 ], [ %172, %295 ], [ %172, %293 ], [ %172, %291 ], [ %172, %289 ], [ %172, %287 ], [ %172, %184 ], [ %172, %285 ], [ %172, %154 ]
  %358 = phi i32 [ %174, %333 ], [ %174, %331 ], [ %174, %329 ], [ %174, %327 ], [ %174, %325 ], [ %174, %323 ], [ %322, %321 ], [ %174, %319 ], [ %174, %317 ], [ %174, %315 ], [ %174, %313 ], [ %174, %311 ], [ %174, %309 ], [ %174, %307 ], [ %174, %305 ], [ %174, %303 ], [ %174, %301 ], [ %174, %299 ], [ %174, %297 ], [ %174, %295 ], [ %174, %293 ], [ %174, %291 ], [ %174, %289 ], [ %174, %287 ], [ %174, %184 ], [ %174, %285 ], [ %174, %154 ]
  %359 = phi i32 [ %176, %333 ], [ %176, %331 ], [ %176, %329 ], [ %176, %327 ], [ %326, %325 ], [ %176, %323 ], [ %176, %321 ], [ %176, %319 ], [ %176, %317 ], [ %176, %315 ], [ %176, %313 ], [ %176, %311 ], [ %176, %309 ], [ %176, %307 ], [ %176, %305 ], [ %176, %303 ], [ %176, %301 ], [ %176, %299 ], [ %176, %297 ], [ %176, %295 ], [ %176, %293 ], [ %176, %291 ], [ %176, %289 ], [ %176, %287 ], [ %176, %184 ], [ %176, %285 ], [ %176, %154 ]
  %360 = phi i32 [ %178, %333 ], [ %178, %331 ], [ %330, %329 ], [ %178, %327 ], [ %178, %325 ], [ %178, %323 ], [ %178, %321 ], [ %178, %319 ], [ %178, %317 ], [ %178, %315 ], [ %178, %313 ], [ %178, %311 ], [ %178, %309 ], [ %178, %307 ], [ %178, %305 ], [ %178, %303 ], [ %178, %301 ], [ %178, %299 ], [ %178, %297 ], [ %178, %295 ], [ %178, %293 ], [ %178, %291 ], [ %178, %289 ], [ %178, %287 ], [ %178, %184 ], [ %178, %285 ], [ %178, %154 ]
  %361 = phi i32 [ %334, %333 ], [ %180, %331 ], [ %180, %329 ], [ %180, %327 ], [ %180, %325 ], [ %180, %323 ], [ %180, %321 ], [ %180, %319 ], [ %180, %317 ], [ %180, %315 ], [ %180, %313 ], [ %180, %311 ], [ %180, %309 ], [ %180, %307 ], [ %180, %305 ], [ %180, %303 ], [ %180, %301 ], [ %180, %299 ], [ %180, %297 ], [ %180, %295 ], [ %180, %293 ], [ %180, %291 ], [ %180, %289 ], [ %180, %287 ], [ %180, %184 ], [ %180, %285 ], [ %180, %154 ]
  %362 = add nuw nsw i64 %181, 1
  %363 = icmp eq i64 %362, %153
  br i1 %363, label %186, label %154, !llvm.loop !18
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = !{!16, !6, i64 0}
!16 = !{!"bo", !6, i64 0, !7, i64 4}
!17 = distinct !{!17, !11}
!18 = distinct !{!18, !11}
