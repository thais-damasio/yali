; ModuleID = 'source-C-CXX/1/1027.c'
source_filename = "source-C-CXX/1/1027.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.books = type { i32, [27 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca [1000 x %struct.books], align 16
  %2 = alloca i32, align 4
  %3 = bitcast [1000 x %struct.books]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32000, i8* nonnull %3) #3
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #3
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %2)
  %6 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 0
  %7 = load i32, i32* %2, align 4, !tbaa !5
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %8
  %10 = icmp sgt i32 %7, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %14, %0
  %12 = phi %struct.books* [ %9, %0 ], [ %22, %14 ]
  %13 = icmp ult %struct.books* %6, %12
  br i1 %13, label %24, label %55

14:                                               ; preds = %0, %14
  %15 = phi %struct.books* [ %19, %14 ], [ %6, %0 ]
  %16 = getelementptr inbounds %struct.books, %struct.books* %15, i64 0, i32 0
  %17 = getelementptr inbounds %struct.books, %struct.books* %15, i64 0, i32 1, i64 0
  %18 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* %16, i8* nonnull %17)
  %19 = getelementptr inbounds %struct.books, %struct.books* %15, i64 1
  %20 = load i32, i32* %2, align 4, !tbaa !5
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %21
  %23 = icmp ult %struct.books* %19, %22
  br i1 %23, label %14, label %11, !llvm.loop !9

24:                                               ; preds = %11, %167
  %25 = phi i32 [ %263, %167 ], [ 0, %11 ]
  %26 = phi i32 [ %264, %167 ], [ 0, %11 ]
  %27 = phi i32 [ %262, %167 ], [ 0, %11 ]
  %28 = phi i32 [ %265, %167 ], [ 0, %11 ]
  %29 = phi i32 [ %261, %167 ], [ 0, %11 ]
  %30 = phi i32 [ %266, %167 ], [ 0, %11 ]
  %31 = phi i32 [ %260, %167 ], [ 0, %11 ]
  %32 = phi i32 [ %267, %167 ], [ 0, %11 ]
  %33 = phi i32 [ %259, %167 ], [ 0, %11 ]
  %34 = phi i32 [ %268, %167 ], [ 0, %11 ]
  %35 = phi i32 [ %258, %167 ], [ 0, %11 ]
  %36 = phi i32 [ %269, %167 ], [ 0, %11 ]
  %37 = phi i32 [ %257, %167 ], [ 0, %11 ]
  %38 = phi i32 [ %270, %167 ], [ 0, %11 ]
  %39 = phi i32 [ %256, %167 ], [ 0, %11 ]
  %40 = phi i32 [ %271, %167 ], [ 0, %11 ]
  %41 = phi i32 [ %255, %167 ], [ 0, %11 ]
  %42 = phi i32 [ %272, %167 ], [ 0, %11 ]
  %43 = phi i32 [ %254, %167 ], [ 0, %11 ]
  %44 = phi i32 [ %273, %167 ], [ 0, %11 ]
  %45 = phi i32 [ %253, %167 ], [ 0, %11 ]
  %46 = phi i32 [ %274, %167 ], [ 0, %11 ]
  %47 = phi i32 [ %252, %167 ], [ 0, %11 ]
  %48 = phi i32 [ %275, %167 ], [ 0, %11 ]
  %49 = phi i32 [ %251, %167 ], [ 0, %11 ]
  %50 = phi i32 [ %276, %167 ], [ 0, %11 ]
  %51 = phi %struct.books* [ %168, %167 ], [ %6, %11 ]
  br label %134

52:                                               ; preds = %167
  %53 = icmp sgt i32 %263, 0
  %54 = select i1 %53, i32 %263, i32 0
  br label %55

55:                                               ; preds = %52, %11
  %56 = phi i32 [ 0, %11 ], [ %276, %52 ]
  %57 = phi i32 [ 0, %11 ], [ %251, %52 ]
  %58 = phi i32 [ 0, %11 ], [ %275, %52 ]
  %59 = phi i32 [ 0, %11 ], [ %252, %52 ]
  %60 = phi i32 [ 0, %11 ], [ %274, %52 ]
  %61 = phi i32 [ 0, %11 ], [ %253, %52 ]
  %62 = phi i32 [ 0, %11 ], [ %273, %52 ]
  %63 = phi i32 [ 0, %11 ], [ %254, %52 ]
  %64 = phi i32 [ 0, %11 ], [ %272, %52 ]
  %65 = phi i32 [ 0, %11 ], [ %255, %52 ]
  %66 = phi i32 [ 0, %11 ], [ %271, %52 ]
  %67 = phi i32 [ 0, %11 ], [ %256, %52 ]
  %68 = phi i32 [ 0, %11 ], [ %270, %52 ]
  %69 = phi i32 [ 0, %11 ], [ %257, %52 ]
  %70 = phi i32 [ 0, %11 ], [ %269, %52 ]
  %71 = phi i32 [ 0, %11 ], [ %258, %52 ]
  %72 = phi i32 [ 0, %11 ], [ %268, %52 ]
  %73 = phi i32 [ 0, %11 ], [ %259, %52 ]
  %74 = phi i32 [ 0, %11 ], [ %267, %52 ]
  %75 = phi i32 [ 0, %11 ], [ %260, %52 ]
  %76 = phi i32 [ 0, %11 ], [ %266, %52 ]
  %77 = phi i32 [ 0, %11 ], [ %261, %52 ]
  %78 = phi i32 [ 0, %11 ], [ %265, %52 ]
  %79 = phi i32 [ 0, %11 ], [ %262, %52 ]
  %80 = phi i32 [ 0, %11 ], [ %264, %52 ]
  %81 = phi i32 [ 0, %11 ], [ %263, %52 ]
  %82 = phi i32 [ 0, %11 ], [ %54, %52 ]
  %83 = icmp sgt i32 %80, %82
  %84 = select i1 %83, i32 %80, i32 %82
  %85 = icmp sgt i32 %79, %84
  %86 = select i1 %85, i32 %79, i32 %84
  %87 = icmp sgt i32 %78, %86
  %88 = select i1 %87, i32 %78, i32 %86
  %89 = icmp sgt i32 %77, %88
  %90 = select i1 %89, i32 %77, i32 %88
  %91 = icmp sgt i32 %76, %90
  %92 = select i1 %91, i32 %76, i32 %90
  %93 = icmp sgt i32 %75, %92
  %94 = select i1 %93, i32 %75, i32 %92
  %95 = icmp sgt i32 %74, %94
  %96 = select i1 %95, i32 %74, i32 %94
  %97 = icmp sgt i32 %73, %96
  %98 = select i1 %97, i32 %73, i32 %96
  %99 = icmp sgt i32 %72, %98
  %100 = select i1 %99, i32 %72, i32 %98
  %101 = icmp sgt i32 %71, %100
  %102 = select i1 %101, i32 %71, i32 %100
  %103 = icmp sgt i32 %70, %102
  %104 = select i1 %103, i32 %70, i32 %102
  %105 = icmp sgt i32 %69, %104
  %106 = select i1 %105, i32 %69, i32 %104
  %107 = icmp sgt i32 %68, %106
  %108 = select i1 %107, i32 %68, i32 %106
  %109 = icmp sgt i32 %67, %108
  %110 = select i1 %109, i32 %67, i32 %108
  %111 = icmp sgt i32 %66, %110
  %112 = select i1 %111, i32 %66, i32 %110
  %113 = icmp sgt i32 %65, %112
  %114 = select i1 %113, i32 %65, i32 %112
  %115 = icmp sgt i32 %64, %114
  %116 = select i1 %115, i32 %64, i32 %114
  %117 = icmp sgt i32 %63, %116
  %118 = select i1 %117, i32 %63, i32 %116
  %119 = icmp sgt i32 %62, %118
  %120 = select i1 %119, i32 %62, i32 %118
  %121 = icmp sgt i32 %61, %120
  %122 = select i1 %121, i32 %61, i32 %120
  %123 = icmp sgt i32 %60, %122
  %124 = select i1 %123, i32 %60, i32 %122
  %125 = icmp sgt i32 %59, %124
  %126 = select i1 %125, i32 %59, i32 %124
  %127 = icmp sgt i32 %58, %126
  %128 = select i1 %127, i32 %58, i32 %126
  %129 = icmp sgt i32 %57, %128
  %130 = select i1 %129, i32 %57, i32 %128
  %131 = icmp sgt i32 %56, %130
  %132 = select i1 %131, i32 %56, i32 %130
  %133 = icmp eq i32 %81, %132
  br i1 %133, label %172, label %170

134:                                              ; preds = %24, %250
  %135 = phi i32 [ %25, %24 ], [ %263, %250 ]
  %136 = phi i32 [ %26, %24 ], [ %264, %250 ]
  %137 = phi i32 [ %27, %24 ], [ %262, %250 ]
  %138 = phi i32 [ %28, %24 ], [ %265, %250 ]
  %139 = phi i32 [ %29, %24 ], [ %261, %250 ]
  %140 = phi i32 [ %30, %24 ], [ %266, %250 ]
  %141 = phi i32 [ %31, %24 ], [ %260, %250 ]
  %142 = phi i32 [ %32, %24 ], [ %267, %250 ]
  %143 = phi i32 [ %33, %24 ], [ %259, %250 ]
  %144 = phi i32 [ %34, %24 ], [ %268, %250 ]
  %145 = phi i32 [ %35, %24 ], [ %258, %250 ]
  %146 = phi i32 [ %36, %24 ], [ %269, %250 ]
  %147 = phi i32 [ %37, %24 ], [ %257, %250 ]
  %148 = phi i32 [ %38, %24 ], [ %270, %250 ]
  %149 = phi i32 [ %39, %24 ], [ %256, %250 ]
  %150 = phi i32 [ %40, %24 ], [ %271, %250 ]
  %151 = phi i32 [ %41, %24 ], [ %255, %250 ]
  %152 = phi i32 [ %42, %24 ], [ %272, %250 ]
  %153 = phi i32 [ %43, %24 ], [ %254, %250 ]
  %154 = phi i32 [ %44, %24 ], [ %273, %250 ]
  %155 = phi i32 [ %45, %24 ], [ %253, %250 ]
  %156 = phi i32 [ %46, %24 ], [ %274, %250 ]
  %157 = phi i32 [ %47, %24 ], [ %252, %250 ]
  %158 = phi i32 [ %48, %24 ], [ %275, %250 ]
  %159 = phi i32 [ %49, %24 ], [ %251, %250 ]
  %160 = phi i32 [ %50, %24 ], [ %276, %250 ]
  %161 = phi i64 [ 0, %24 ], [ %277, %250 ]
  %162 = getelementptr inbounds %struct.books, %struct.books* %51, i64 0, i32 1, i64 %161
  %163 = load i8, i8* %162, align 1, !tbaa !11
  %164 = sext i8 %163 to i32
  switch i32 %164, label %250 [
    i32 65, label %165
    i32 66, label %200
    i32 67, label %202
    i32 68, label %204
    i32 69, label %206
    i32 70, label %208
    i32 71, label %210
    i32 72, label %212
    i32 73, label %214
    i32 74, label %216
    i32 75, label %218
    i32 76, label %220
    i32 77, label %222
    i32 78, label %224
    i32 79, label %226
    i32 80, label %228
    i32 81, label %230
    i32 82, label %232
    i32 83, label %234
    i32 84, label %236
    i32 85, label %238
    i32 86, label %240
    i32 87, label %242
    i32 88, label %244
    i32 89, label %246
    i32 90, label %248
  ]

165:                                              ; preds = %134
  %166 = add nsw i32 %135, 1
  br label %250

167:                                              ; preds = %250
  %168 = getelementptr inbounds %struct.books, %struct.books* %51, i64 1
  %169 = icmp ult %struct.books* %168, %12
  br i1 %169, label %24, label %52, !llvm.loop !12

170:                                              ; preds = %55
  %171 = icmp eq i32 %80, %132
  br i1 %171, label %172, label %279

172:                                              ; preds = %325, %323, %321, %319, %317, %315, %313, %311, %309, %307, %305, %303, %301, %299, %297, %295, %293, %291, %289, %287, %285, %283, %281, %279, %170, %55
  %173 = phi i32 [ 65, %55 ], [ 66, %170 ], [ 67, %279 ], [ 68, %281 ], [ 69, %283 ], [ 70, %285 ], [ 71, %287 ], [ 72, %289 ], [ 73, %291 ], [ 74, %293 ], [ 75, %295 ], [ 76, %297 ], [ 77, %299 ], [ 78, %301 ], [ 79, %303 ], [ 80, %305 ], [ 81, %307 ], [ 82, %309 ], [ 83, %311 ], [ 84, %313 ], [ 85, %315 ], [ 86, %317 ], [ 87, %319 ], [ 88, %321 ], [ 89, %323 ], [ %327, %325 ]
  %174 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %173, i32 %132)
  %175 = load i32, i32* %2, align 4, !tbaa !5
  %176 = icmp sgt i32 %175, 0
  br i1 %176, label %177, label %199

177:                                              ; preds = %172, %194
  %178 = phi i32 [ %195, %194 ], [ %175, %172 ]
  %179 = phi i64 [ %196, %194 ], [ 0, %172 ]
  %180 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 0
  %181 = load i8, i8* %180, align 4, !tbaa !11
  %182 = sext i8 %181 to i32
  %183 = icmp eq i32 %173, %182
  br i1 %183, label %189, label %184

184:                                              ; preds = %177
  %185 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 1
  %186 = load i8, i8* %185, align 1, !tbaa !11
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %173, %187
  br i1 %188, label %189, label %328

189:                                              ; preds = %443, %438, %433, %428, %423, %418, %413, %408, %403, %398, %393, %388, %383, %378, %373, %368, %363, %358, %353, %348, %343, %338, %333, %328, %184, %177
  %190 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 0
  %191 = load i32, i32* %190, align 16, !tbaa !13
  %192 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %191)
  %193 = load i32, i32* %2, align 4, !tbaa !5
  br label %194

194:                                              ; preds = %443, %189
  %195 = phi i32 [ %193, %189 ], [ %178, %443 ]
  %196 = add nuw nsw i64 %179, 1
  %197 = sext i32 %195 to i64
  %198 = icmp slt i64 %196, %197
  br i1 %198, label %177, label %199, !llvm.loop !15

199:                                              ; preds = %194, %172
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #3
  call void @llvm.lifetime.end.p0i8(i64 32000, i8* nonnull %3) #3
  ret i32 0

200:                                              ; preds = %134
  %201 = add nsw i32 %136, 1
  br label %250

202:                                              ; preds = %134
  %203 = add nsw i32 %137, 1
  br label %250

204:                                              ; preds = %134
  %205 = add nsw i32 %138, 1
  br label %250

206:                                              ; preds = %134
  %207 = add nsw i32 %139, 1
  br label %250

208:                                              ; preds = %134
  %209 = add nsw i32 %140, 1
  br label %250

210:                                              ; preds = %134
  %211 = add nsw i32 %141, 1
  br label %250

212:                                              ; preds = %134
  %213 = add nsw i32 %142, 1
  br label %250

214:                                              ; preds = %134
  %215 = add nsw i32 %143, 1
  br label %250

216:                                              ; preds = %134
  %217 = add nsw i32 %144, 1
  br label %250

218:                                              ; preds = %134
  %219 = add nsw i32 %145, 1
  br label %250

220:                                              ; preds = %134
  %221 = add nsw i32 %146, 1
  br label %250

222:                                              ; preds = %134
  %223 = add nsw i32 %147, 1
  br label %250

224:                                              ; preds = %134
  %225 = add nsw i32 %148, 1
  br label %250

226:                                              ; preds = %134
  %227 = add nsw i32 %149, 1
  br label %250

228:                                              ; preds = %134
  %229 = add nsw i32 %150, 1
  br label %250

230:                                              ; preds = %134
  %231 = add nsw i32 %151, 1
  br label %250

232:                                              ; preds = %134
  %233 = add nsw i32 %152, 1
  br label %250

234:                                              ; preds = %134
  %235 = add nsw i32 %153, 1
  br label %250

236:                                              ; preds = %134
  %237 = add nsw i32 %154, 1
  br label %250

238:                                              ; preds = %134
  %239 = add nsw i32 %155, 1
  br label %250

240:                                              ; preds = %134
  %241 = add nsw i32 %156, 1
  br label %250

242:                                              ; preds = %134
  %243 = add nsw i32 %157, 1
  br label %250

244:                                              ; preds = %134
  %245 = add nsw i32 %158, 1
  br label %250

246:                                              ; preds = %134
  %247 = add nsw i32 %159, 1
  br label %250

248:                                              ; preds = %134
  %249 = add nsw i32 %160, 1
  br label %250

250:                                              ; preds = %134, %200, %165, %202, %204, %206, %208, %210, %212, %214, %216, %218, %220, %222, %224, %226, %228, %230, %232, %234, %236, %238, %240, %242, %244, %246, %248
  %251 = phi i32 [ %159, %248 ], [ %247, %246 ], [ %159, %244 ], [ %159, %242 ], [ %159, %240 ], [ %159, %238 ], [ %159, %236 ], [ %159, %234 ], [ %159, %232 ], [ %159, %230 ], [ %159, %228 ], [ %159, %226 ], [ %159, %224 ], [ %159, %222 ], [ %159, %220 ], [ %159, %218 ], [ %159, %216 ], [ %159, %214 ], [ %159, %212 ], [ %159, %210 ], [ %159, %208 ], [ %159, %206 ], [ %159, %204 ], [ %159, %202 ], [ %159, %165 ], [ %159, %200 ], [ %159, %134 ]
  %252 = phi i32 [ %157, %248 ], [ %157, %246 ], [ %157, %244 ], [ %243, %242 ], [ %157, %240 ], [ %157, %238 ], [ %157, %236 ], [ %157, %234 ], [ %157, %232 ], [ %157, %230 ], [ %157, %228 ], [ %157, %226 ], [ %157, %224 ], [ %157, %222 ], [ %157, %220 ], [ %157, %218 ], [ %157, %216 ], [ %157, %214 ], [ %157, %212 ], [ %157, %210 ], [ %157, %208 ], [ %157, %206 ], [ %157, %204 ], [ %157, %202 ], [ %157, %165 ], [ %157, %200 ], [ %157, %134 ]
  %253 = phi i32 [ %155, %248 ], [ %155, %246 ], [ %155, %244 ], [ %155, %242 ], [ %155, %240 ], [ %239, %238 ], [ %155, %236 ], [ %155, %234 ], [ %155, %232 ], [ %155, %230 ], [ %155, %228 ], [ %155, %226 ], [ %155, %224 ], [ %155, %222 ], [ %155, %220 ], [ %155, %218 ], [ %155, %216 ], [ %155, %214 ], [ %155, %212 ], [ %155, %210 ], [ %155, %208 ], [ %155, %206 ], [ %155, %204 ], [ %155, %202 ], [ %155, %165 ], [ %155, %200 ], [ %155, %134 ]
  %254 = phi i32 [ %153, %248 ], [ %153, %246 ], [ %153, %244 ], [ %153, %242 ], [ %153, %240 ], [ %153, %238 ], [ %153, %236 ], [ %235, %234 ], [ %153, %232 ], [ %153, %230 ], [ %153, %228 ], [ %153, %226 ], [ %153, %224 ], [ %153, %222 ], [ %153, %220 ], [ %153, %218 ], [ %153, %216 ], [ %153, %214 ], [ %153, %212 ], [ %153, %210 ], [ %153, %208 ], [ %153, %206 ], [ %153, %204 ], [ %153, %202 ], [ %153, %165 ], [ %153, %200 ], [ %153, %134 ]
  %255 = phi i32 [ %151, %248 ], [ %151, %246 ], [ %151, %244 ], [ %151, %242 ], [ %151, %240 ], [ %151, %238 ], [ %151, %236 ], [ %151, %234 ], [ %151, %232 ], [ %231, %230 ], [ %151, %228 ], [ %151, %226 ], [ %151, %224 ], [ %151, %222 ], [ %151, %220 ], [ %151, %218 ], [ %151, %216 ], [ %151, %214 ], [ %151, %212 ], [ %151, %210 ], [ %151, %208 ], [ %151, %206 ], [ %151, %204 ], [ %151, %202 ], [ %151, %165 ], [ %151, %200 ], [ %151, %134 ]
  %256 = phi i32 [ %149, %248 ], [ %149, %246 ], [ %149, %244 ], [ %149, %242 ], [ %149, %240 ], [ %149, %238 ], [ %149, %236 ], [ %149, %234 ], [ %149, %232 ], [ %149, %230 ], [ %149, %228 ], [ %227, %226 ], [ %149, %224 ], [ %149, %222 ], [ %149, %220 ], [ %149, %218 ], [ %149, %216 ], [ %149, %214 ], [ %149, %212 ], [ %149, %210 ], [ %149, %208 ], [ %149, %206 ], [ %149, %204 ], [ %149, %202 ], [ %149, %165 ], [ %149, %200 ], [ %149, %134 ]
  %257 = phi i32 [ %147, %248 ], [ %147, %246 ], [ %147, %244 ], [ %147, %242 ], [ %147, %240 ], [ %147, %238 ], [ %147, %236 ], [ %147, %234 ], [ %147, %232 ], [ %147, %230 ], [ %147, %228 ], [ %147, %226 ], [ %147, %224 ], [ %223, %222 ], [ %147, %220 ], [ %147, %218 ], [ %147, %216 ], [ %147, %214 ], [ %147, %212 ], [ %147, %210 ], [ %147, %208 ], [ %147, %206 ], [ %147, %204 ], [ %147, %202 ], [ %147, %165 ], [ %147, %200 ], [ %147, %134 ]
  %258 = phi i32 [ %145, %248 ], [ %145, %246 ], [ %145, %244 ], [ %145, %242 ], [ %145, %240 ], [ %145, %238 ], [ %145, %236 ], [ %145, %234 ], [ %145, %232 ], [ %145, %230 ], [ %145, %228 ], [ %145, %226 ], [ %145, %224 ], [ %145, %222 ], [ %145, %220 ], [ %219, %218 ], [ %145, %216 ], [ %145, %214 ], [ %145, %212 ], [ %145, %210 ], [ %145, %208 ], [ %145, %206 ], [ %145, %204 ], [ %145, %202 ], [ %145, %165 ], [ %145, %200 ], [ %145, %134 ]
  %259 = phi i32 [ %143, %248 ], [ %143, %246 ], [ %143, %244 ], [ %143, %242 ], [ %143, %240 ], [ %143, %238 ], [ %143, %236 ], [ %143, %234 ], [ %143, %232 ], [ %143, %230 ], [ %143, %228 ], [ %143, %226 ], [ %143, %224 ], [ %143, %222 ], [ %143, %220 ], [ %143, %218 ], [ %143, %216 ], [ %215, %214 ], [ %143, %212 ], [ %143, %210 ], [ %143, %208 ], [ %143, %206 ], [ %143, %204 ], [ %143, %202 ], [ %143, %165 ], [ %143, %200 ], [ %143, %134 ]
  %260 = phi i32 [ %141, %248 ], [ %141, %246 ], [ %141, %244 ], [ %141, %242 ], [ %141, %240 ], [ %141, %238 ], [ %141, %236 ], [ %141, %234 ], [ %141, %232 ], [ %141, %230 ], [ %141, %228 ], [ %141, %226 ], [ %141, %224 ], [ %141, %222 ], [ %141, %220 ], [ %141, %218 ], [ %141, %216 ], [ %141, %214 ], [ %141, %212 ], [ %211, %210 ], [ %141, %208 ], [ %141, %206 ], [ %141, %204 ], [ %141, %202 ], [ %141, %165 ], [ %141, %200 ], [ %141, %134 ]
  %261 = phi i32 [ %139, %248 ], [ %139, %246 ], [ %139, %244 ], [ %139, %242 ], [ %139, %240 ], [ %139, %238 ], [ %139, %236 ], [ %139, %234 ], [ %139, %232 ], [ %139, %230 ], [ %139, %228 ], [ %139, %226 ], [ %139, %224 ], [ %139, %222 ], [ %139, %220 ], [ %139, %218 ], [ %139, %216 ], [ %139, %214 ], [ %139, %212 ], [ %139, %210 ], [ %139, %208 ], [ %207, %206 ], [ %139, %204 ], [ %139, %202 ], [ %139, %165 ], [ %139, %200 ], [ %139, %134 ]
  %262 = phi i32 [ %137, %248 ], [ %137, %246 ], [ %137, %244 ], [ %137, %242 ], [ %137, %240 ], [ %137, %238 ], [ %137, %236 ], [ %137, %234 ], [ %137, %232 ], [ %137, %230 ], [ %137, %228 ], [ %137, %226 ], [ %137, %224 ], [ %137, %222 ], [ %137, %220 ], [ %137, %218 ], [ %137, %216 ], [ %137, %214 ], [ %137, %212 ], [ %137, %210 ], [ %137, %208 ], [ %137, %206 ], [ %137, %204 ], [ %203, %202 ], [ %137, %165 ], [ %137, %200 ], [ %137, %134 ]
  %263 = phi i32 [ %135, %248 ], [ %135, %246 ], [ %135, %244 ], [ %135, %242 ], [ %135, %240 ], [ %135, %238 ], [ %135, %236 ], [ %135, %234 ], [ %135, %232 ], [ %135, %230 ], [ %135, %228 ], [ %135, %226 ], [ %135, %224 ], [ %135, %222 ], [ %135, %220 ], [ %135, %218 ], [ %135, %216 ], [ %135, %214 ], [ %135, %212 ], [ %135, %210 ], [ %135, %208 ], [ %135, %206 ], [ %135, %204 ], [ %135, %202 ], [ %166, %165 ], [ %135, %200 ], [ %135, %134 ]
  %264 = phi i32 [ %136, %248 ], [ %136, %246 ], [ %136, %244 ], [ %136, %242 ], [ %136, %240 ], [ %136, %238 ], [ %136, %236 ], [ %136, %234 ], [ %136, %232 ], [ %136, %230 ], [ %136, %228 ], [ %136, %226 ], [ %136, %224 ], [ %136, %222 ], [ %136, %220 ], [ %136, %218 ], [ %136, %216 ], [ %136, %214 ], [ %136, %212 ], [ %136, %210 ], [ %136, %208 ], [ %136, %206 ], [ %136, %204 ], [ %136, %202 ], [ %136, %165 ], [ %201, %200 ], [ %136, %134 ]
  %265 = phi i32 [ %138, %248 ], [ %138, %246 ], [ %138, %244 ], [ %138, %242 ], [ %138, %240 ], [ %138, %238 ], [ %138, %236 ], [ %138, %234 ], [ %138, %232 ], [ %138, %230 ], [ %138, %228 ], [ %138, %226 ], [ %138, %224 ], [ %138, %222 ], [ %138, %220 ], [ %138, %218 ], [ %138, %216 ], [ %138, %214 ], [ %138, %212 ], [ %138, %210 ], [ %138, %208 ], [ %138, %206 ], [ %205, %204 ], [ %138, %202 ], [ %138, %165 ], [ %138, %200 ], [ %138, %134 ]
  %266 = phi i32 [ %140, %248 ], [ %140, %246 ], [ %140, %244 ], [ %140, %242 ], [ %140, %240 ], [ %140, %238 ], [ %140, %236 ], [ %140, %234 ], [ %140, %232 ], [ %140, %230 ], [ %140, %228 ], [ %140, %226 ], [ %140, %224 ], [ %140, %222 ], [ %140, %220 ], [ %140, %218 ], [ %140, %216 ], [ %140, %214 ], [ %140, %212 ], [ %140, %210 ], [ %209, %208 ], [ %140, %206 ], [ %140, %204 ], [ %140, %202 ], [ %140, %165 ], [ %140, %200 ], [ %140, %134 ]
  %267 = phi i32 [ %142, %248 ], [ %142, %246 ], [ %142, %244 ], [ %142, %242 ], [ %142, %240 ], [ %142, %238 ], [ %142, %236 ], [ %142, %234 ], [ %142, %232 ], [ %142, %230 ], [ %142, %228 ], [ %142, %226 ], [ %142, %224 ], [ %142, %222 ], [ %142, %220 ], [ %142, %218 ], [ %142, %216 ], [ %142, %214 ], [ %213, %212 ], [ %142, %210 ], [ %142, %208 ], [ %142, %206 ], [ %142, %204 ], [ %142, %202 ], [ %142, %165 ], [ %142, %200 ], [ %142, %134 ]
  %268 = phi i32 [ %144, %248 ], [ %144, %246 ], [ %144, %244 ], [ %144, %242 ], [ %144, %240 ], [ %144, %238 ], [ %144, %236 ], [ %144, %234 ], [ %144, %232 ], [ %144, %230 ], [ %144, %228 ], [ %144, %226 ], [ %144, %224 ], [ %144, %222 ], [ %144, %220 ], [ %144, %218 ], [ %217, %216 ], [ %144, %214 ], [ %144, %212 ], [ %144, %210 ], [ %144, %208 ], [ %144, %206 ], [ %144, %204 ], [ %144, %202 ], [ %144, %165 ], [ %144, %200 ], [ %144, %134 ]
  %269 = phi i32 [ %146, %248 ], [ %146, %246 ], [ %146, %244 ], [ %146, %242 ], [ %146, %240 ], [ %146, %238 ], [ %146, %236 ], [ %146, %234 ], [ %146, %232 ], [ %146, %230 ], [ %146, %228 ], [ %146, %226 ], [ %146, %224 ], [ %146, %222 ], [ %221, %220 ], [ %146, %218 ], [ %146, %216 ], [ %146, %214 ], [ %146, %212 ], [ %146, %210 ], [ %146, %208 ], [ %146, %206 ], [ %146, %204 ], [ %146, %202 ], [ %146, %165 ], [ %146, %200 ], [ %146, %134 ]
  %270 = phi i32 [ %148, %248 ], [ %148, %246 ], [ %148, %244 ], [ %148, %242 ], [ %148, %240 ], [ %148, %238 ], [ %148, %236 ], [ %148, %234 ], [ %148, %232 ], [ %148, %230 ], [ %148, %228 ], [ %148, %226 ], [ %225, %224 ], [ %148, %222 ], [ %148, %220 ], [ %148, %218 ], [ %148, %216 ], [ %148, %214 ], [ %148, %212 ], [ %148, %210 ], [ %148, %208 ], [ %148, %206 ], [ %148, %204 ], [ %148, %202 ], [ %148, %165 ], [ %148, %200 ], [ %148, %134 ]
  %271 = phi i32 [ %150, %248 ], [ %150, %246 ], [ %150, %244 ], [ %150, %242 ], [ %150, %240 ], [ %150, %238 ], [ %150, %236 ], [ %150, %234 ], [ %150, %232 ], [ %150, %230 ], [ %229, %228 ], [ %150, %226 ], [ %150, %224 ], [ %150, %222 ], [ %150, %220 ], [ %150, %218 ], [ %150, %216 ], [ %150, %214 ], [ %150, %212 ], [ %150, %210 ], [ %150, %208 ], [ %150, %206 ], [ %150, %204 ], [ %150, %202 ], [ %150, %165 ], [ %150, %200 ], [ %150, %134 ]
  %272 = phi i32 [ %152, %248 ], [ %152, %246 ], [ %152, %244 ], [ %152, %242 ], [ %152, %240 ], [ %152, %238 ], [ %152, %236 ], [ %152, %234 ], [ %233, %232 ], [ %152, %230 ], [ %152, %228 ], [ %152, %226 ], [ %152, %224 ], [ %152, %222 ], [ %152, %220 ], [ %152, %218 ], [ %152, %216 ], [ %152, %214 ], [ %152, %212 ], [ %152, %210 ], [ %152, %208 ], [ %152, %206 ], [ %152, %204 ], [ %152, %202 ], [ %152, %165 ], [ %152, %200 ], [ %152, %134 ]
  %273 = phi i32 [ %154, %248 ], [ %154, %246 ], [ %154, %244 ], [ %154, %242 ], [ %154, %240 ], [ %154, %238 ], [ %237, %236 ], [ %154, %234 ], [ %154, %232 ], [ %154, %230 ], [ %154, %228 ], [ %154, %226 ], [ %154, %224 ], [ %154, %222 ], [ %154, %220 ], [ %154, %218 ], [ %154, %216 ], [ %154, %214 ], [ %154, %212 ], [ %154, %210 ], [ %154, %208 ], [ %154, %206 ], [ %154, %204 ], [ %154, %202 ], [ %154, %165 ], [ %154, %200 ], [ %154, %134 ]
  %274 = phi i32 [ %156, %248 ], [ %156, %246 ], [ %156, %244 ], [ %156, %242 ], [ %241, %240 ], [ %156, %238 ], [ %156, %236 ], [ %156, %234 ], [ %156, %232 ], [ %156, %230 ], [ %156, %228 ], [ %156, %226 ], [ %156, %224 ], [ %156, %222 ], [ %156, %220 ], [ %156, %218 ], [ %156, %216 ], [ %156, %214 ], [ %156, %212 ], [ %156, %210 ], [ %156, %208 ], [ %156, %206 ], [ %156, %204 ], [ %156, %202 ], [ %156, %165 ], [ %156, %200 ], [ %156, %134 ]
  %275 = phi i32 [ %158, %248 ], [ %158, %246 ], [ %245, %244 ], [ %158, %242 ], [ %158, %240 ], [ %158, %238 ], [ %158, %236 ], [ %158, %234 ], [ %158, %232 ], [ %158, %230 ], [ %158, %228 ], [ %158, %226 ], [ %158, %224 ], [ %158, %222 ], [ %158, %220 ], [ %158, %218 ], [ %158, %216 ], [ %158, %214 ], [ %158, %212 ], [ %158, %210 ], [ %158, %208 ], [ %158, %206 ], [ %158, %204 ], [ %158, %202 ], [ %158, %165 ], [ %158, %200 ], [ %158, %134 ]
  %276 = phi i32 [ %249, %248 ], [ %160, %246 ], [ %160, %244 ], [ %160, %242 ], [ %160, %240 ], [ %160, %238 ], [ %160, %236 ], [ %160, %234 ], [ %160, %232 ], [ %160, %230 ], [ %160, %228 ], [ %160, %226 ], [ %160, %224 ], [ %160, %222 ], [ %160, %220 ], [ %160, %218 ], [ %160, %216 ], [ %160, %214 ], [ %160, %212 ], [ %160, %210 ], [ %160, %208 ], [ %160, %206 ], [ %160, %204 ], [ %160, %202 ], [ %160, %165 ], [ %160, %200 ], [ %160, %134 ]
  %277 = add nuw nsw i64 %161, 1
  %278 = icmp eq i64 %277, 26
  br i1 %278, label %167, label %134, !llvm.loop !16

279:                                              ; preds = %170
  %280 = icmp eq i32 %79, %132
  br i1 %280, label %172, label %281

281:                                              ; preds = %279
  %282 = icmp eq i32 %78, %132
  br i1 %282, label %172, label %283

283:                                              ; preds = %281
  %284 = icmp eq i32 %77, %132
  br i1 %284, label %172, label %285

285:                                              ; preds = %283
  %286 = icmp eq i32 %76, %132
  br i1 %286, label %172, label %287

287:                                              ; preds = %285
  %288 = icmp eq i32 %75, %132
  br i1 %288, label %172, label %289

289:                                              ; preds = %287
  %290 = icmp eq i32 %74, %132
  br i1 %290, label %172, label %291

291:                                              ; preds = %289
  %292 = icmp eq i32 %73, %132
  br i1 %292, label %172, label %293

293:                                              ; preds = %291
  %294 = icmp eq i32 %72, %132
  br i1 %294, label %172, label %295

295:                                              ; preds = %293
  %296 = icmp eq i32 %71, %132
  br i1 %296, label %172, label %297

297:                                              ; preds = %295
  %298 = icmp eq i32 %70, %132
  br i1 %298, label %172, label %299

299:                                              ; preds = %297
  %300 = icmp eq i32 %69, %132
  br i1 %300, label %172, label %301

301:                                              ; preds = %299
  %302 = icmp eq i32 %68, %132
  br i1 %302, label %172, label %303

303:                                              ; preds = %301
  %304 = icmp eq i32 %67, %132
  br i1 %304, label %172, label %305

305:                                              ; preds = %303
  %306 = icmp eq i32 %66, %132
  br i1 %306, label %172, label %307

307:                                              ; preds = %305
  %308 = icmp eq i32 %65, %132
  br i1 %308, label %172, label %309

309:                                              ; preds = %307
  %310 = icmp eq i32 %64, %132
  br i1 %310, label %172, label %311

311:                                              ; preds = %309
  %312 = icmp eq i32 %63, %132
  br i1 %312, label %172, label %313

313:                                              ; preds = %311
  %314 = icmp eq i32 %62, %132
  br i1 %314, label %172, label %315

315:                                              ; preds = %313
  %316 = icmp eq i32 %61, %132
  br i1 %316, label %172, label %317

317:                                              ; preds = %315
  %318 = icmp eq i32 %60, %132
  br i1 %318, label %172, label %319

319:                                              ; preds = %317
  %320 = icmp eq i32 %59, %132
  br i1 %320, label %172, label %321

321:                                              ; preds = %319
  %322 = icmp eq i32 %58, %132
  br i1 %322, label %172, label %323

323:                                              ; preds = %321
  %324 = icmp eq i32 %57, %132
  br i1 %324, label %172, label %325

325:                                              ; preds = %323
  %326 = icmp slt i32 %56, %130
  %327 = select i1 %326, i32 91, i32 90
  br label %172

328:                                              ; preds = %184
  %329 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 2
  %330 = load i8, i8* %329, align 2, !tbaa !11
  %331 = sext i8 %330 to i32
  %332 = icmp eq i32 %173, %331
  br i1 %332, label %189, label %333

333:                                              ; preds = %328
  %334 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 3
  %335 = load i8, i8* %334, align 1, !tbaa !11
  %336 = sext i8 %335 to i32
  %337 = icmp eq i32 %173, %336
  br i1 %337, label %189, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 4
  %340 = load i8, i8* %339, align 8, !tbaa !11
  %341 = sext i8 %340 to i32
  %342 = icmp eq i32 %173, %341
  br i1 %342, label %189, label %343

343:                                              ; preds = %338
  %344 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 5
  %345 = load i8, i8* %344, align 1, !tbaa !11
  %346 = sext i8 %345 to i32
  %347 = icmp eq i32 %173, %346
  br i1 %347, label %189, label %348

348:                                              ; preds = %343
  %349 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 6
  %350 = load i8, i8* %349, align 2, !tbaa !11
  %351 = sext i8 %350 to i32
  %352 = icmp eq i32 %173, %351
  br i1 %352, label %189, label %353

353:                                              ; preds = %348
  %354 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 7
  %355 = load i8, i8* %354, align 1, !tbaa !11
  %356 = sext i8 %355 to i32
  %357 = icmp eq i32 %173, %356
  br i1 %357, label %189, label %358

358:                                              ; preds = %353
  %359 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 8
  %360 = load i8, i8* %359, align 4, !tbaa !11
  %361 = sext i8 %360 to i32
  %362 = icmp eq i32 %173, %361
  br i1 %362, label %189, label %363

363:                                              ; preds = %358
  %364 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 9
  %365 = load i8, i8* %364, align 1, !tbaa !11
  %366 = sext i8 %365 to i32
  %367 = icmp eq i32 %173, %366
  br i1 %367, label %189, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 10
  %370 = load i8, i8* %369, align 2, !tbaa !11
  %371 = sext i8 %370 to i32
  %372 = icmp eq i32 %173, %371
  br i1 %372, label %189, label %373

373:                                              ; preds = %368
  %374 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 11
  %375 = load i8, i8* %374, align 1, !tbaa !11
  %376 = sext i8 %375 to i32
  %377 = icmp eq i32 %173, %376
  br i1 %377, label %189, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 12
  %380 = load i8, i8* %379, align 16, !tbaa !11
  %381 = sext i8 %380 to i32
  %382 = icmp eq i32 %173, %381
  br i1 %382, label %189, label %383

383:                                              ; preds = %378
  %384 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 13
  %385 = load i8, i8* %384, align 1, !tbaa !11
  %386 = sext i8 %385 to i32
  %387 = icmp eq i32 %173, %386
  br i1 %387, label %189, label %388

388:                                              ; preds = %383
  %389 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 14
  %390 = load i8, i8* %389, align 2, !tbaa !11
  %391 = sext i8 %390 to i32
  %392 = icmp eq i32 %173, %391
  br i1 %392, label %189, label %393

393:                                              ; preds = %388
  %394 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 15
  %395 = load i8, i8* %394, align 1, !tbaa !11
  %396 = sext i8 %395 to i32
  %397 = icmp eq i32 %173, %396
  br i1 %397, label %189, label %398

398:                                              ; preds = %393
  %399 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 16
  %400 = load i8, i8* %399, align 4, !tbaa !11
  %401 = sext i8 %400 to i32
  %402 = icmp eq i32 %173, %401
  br i1 %402, label %189, label %403

403:                                              ; preds = %398
  %404 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 17
  %405 = load i8, i8* %404, align 1, !tbaa !11
  %406 = sext i8 %405 to i32
  %407 = icmp eq i32 %173, %406
  br i1 %407, label %189, label %408

408:                                              ; preds = %403
  %409 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 18
  %410 = load i8, i8* %409, align 2, !tbaa !11
  %411 = sext i8 %410 to i32
  %412 = icmp eq i32 %173, %411
  br i1 %412, label %189, label %413

413:                                              ; preds = %408
  %414 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 19
  %415 = load i8, i8* %414, align 1, !tbaa !11
  %416 = sext i8 %415 to i32
  %417 = icmp eq i32 %173, %416
  br i1 %417, label %189, label %418

418:                                              ; preds = %413
  %419 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 20
  %420 = load i8, i8* %419, align 8, !tbaa !11
  %421 = sext i8 %420 to i32
  %422 = icmp eq i32 %173, %421
  br i1 %422, label %189, label %423

423:                                              ; preds = %418
  %424 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 21
  %425 = load i8, i8* %424, align 1, !tbaa !11
  %426 = sext i8 %425 to i32
  %427 = icmp eq i32 %173, %426
  br i1 %427, label %189, label %428

428:                                              ; preds = %423
  %429 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 22
  %430 = load i8, i8* %429, align 2, !tbaa !11
  %431 = sext i8 %430 to i32
  %432 = icmp eq i32 %173, %431
  br i1 %432, label %189, label %433

433:                                              ; preds = %428
  %434 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 23
  %435 = load i8, i8* %434, align 1, !tbaa !11
  %436 = sext i8 %435 to i32
  %437 = icmp eq i32 %173, %436
  br i1 %437, label %189, label %438

438:                                              ; preds = %433
  %439 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 24
  %440 = load i8, i8* %439, align 4, !tbaa !11
  %441 = sext i8 %440 to i32
  %442 = icmp eq i32 %173, %441
  br i1 %442, label %189, label %443

443:                                              ; preds = %438
  %444 = getelementptr inbounds [1000 x %struct.books], [1000 x %struct.books]* %1, i64 0, i64 %179, i32 1, i64 25
  %445 = load i8, i8* %444, align 1, !tbaa !11
  %446 = sext i8 %445 to i32
  %447 = icmp eq i32 %173, %446
  br i1 %447, label %189, label %194
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = !{!14, !6, i64 0}
!14 = !{!"books", !6, i64 0, !7, i64 4}
!15 = distinct !{!15, !10}
!16 = distinct !{!16, !10}
