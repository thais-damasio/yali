; ModuleID = 'source-C-CXX/1/848.c'
source_filename = "source-C-CXX/1/848.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1000 x i32], align 16
  %3 = alloca [1000 x [26 x i8]], align 16
  %4 = alloca [1000 x i32], align 16
  %5 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast [1000 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %6) #5
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %8 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26000, i8* nonnull %8) #5
  %9 = load i32, i32* %1, align 4, !tbaa !5
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %121, label %14

11:                                               ; preds = %192
  %12 = icmp sgt i32 %193, 0
  %13 = select i1 %12, i32 %193, i32 0
  br label %14

14:                                               ; preds = %11, %0
  %15 = phi i32 [ 0, %0 ], [ %218, %11 ]
  %16 = phi i32 [ 0, %0 ], [ %217, %11 ]
  %17 = phi i32 [ 0, %0 ], [ %216, %11 ]
  %18 = phi i32 [ 0, %0 ], [ %215, %11 ]
  %19 = phi i32 [ 0, %0 ], [ %214, %11 ]
  %20 = phi i32 [ 0, %0 ], [ %213, %11 ]
  %21 = phi i32 [ 0, %0 ], [ %212, %11 ]
  %22 = phi i32 [ 0, %0 ], [ %211, %11 ]
  %23 = phi i32 [ 0, %0 ], [ %210, %11 ]
  %24 = phi i32 [ 0, %0 ], [ %209, %11 ]
  %25 = phi i32 [ 0, %0 ], [ %208, %11 ]
  %26 = phi i32 [ 0, %0 ], [ %207, %11 ]
  %27 = phi i32 [ 0, %0 ], [ %206, %11 ]
  %28 = phi i32 [ 0, %0 ], [ %205, %11 ]
  %29 = phi i32 [ 0, %0 ], [ %204, %11 ]
  %30 = phi i32 [ 0, %0 ], [ %203, %11 ]
  %31 = phi i32 [ 0, %0 ], [ %202, %11 ]
  %32 = phi i32 [ 0, %0 ], [ %201, %11 ]
  %33 = phi i32 [ 0, %0 ], [ %200, %11 ]
  %34 = phi i32 [ 0, %0 ], [ %199, %11 ]
  %35 = phi i32 [ 0, %0 ], [ %198, %11 ]
  %36 = phi i32 [ 0, %0 ], [ %197, %11 ]
  %37 = phi i32 [ 0, %0 ], [ %196, %11 ]
  %38 = phi i32 [ 0, %0 ], [ %195, %11 ]
  %39 = phi i32 [ 0, %0 ], [ %194, %11 ]
  %40 = phi i32 [ 0, %0 ], [ %13, %11 ]
  %41 = icmp sgt i32 %39, %40
  %42 = select i1 %41, i32 %39, i32 %40
  %43 = select i1 %41, i8 66, i8 65
  %44 = icmp sgt i32 %38, %42
  %45 = select i1 %44, i32 %38, i32 %42
  %46 = select i1 %44, i8 67, i8 %43
  %47 = icmp sgt i32 %37, %45
  %48 = select i1 %47, i32 %37, i32 %45
  %49 = select i1 %47, i8 68, i8 %46
  %50 = icmp sgt i32 %36, %48
  %51 = select i1 %50, i32 %36, i32 %48
  %52 = select i1 %50, i8 69, i8 %49
  %53 = icmp sgt i32 %35, %51
  %54 = select i1 %53, i32 %35, i32 %51
  %55 = select i1 %53, i8 70, i8 %52
  %56 = icmp sgt i32 %34, %54
  %57 = select i1 %56, i32 %34, i32 %54
  %58 = select i1 %56, i8 71, i8 %55
  %59 = icmp sgt i32 %33, %57
  %60 = select i1 %59, i32 %33, i32 %57
  %61 = select i1 %59, i8 72, i8 %58
  %62 = icmp sgt i32 %32, %60
  %63 = select i1 %62, i32 %32, i32 %60
  %64 = select i1 %62, i8 73, i8 %61
  %65 = icmp sgt i32 %31, %63
  %66 = select i1 %65, i32 %31, i32 %63
  %67 = select i1 %65, i8 74, i8 %64
  %68 = icmp sgt i32 %30, %66
  %69 = select i1 %68, i32 %30, i32 %66
  %70 = select i1 %68, i8 75, i8 %67
  %71 = icmp sgt i32 %29, %69
  %72 = select i1 %71, i32 %29, i32 %69
  %73 = select i1 %71, i8 76, i8 %70
  %74 = icmp sgt i32 %28, %72
  %75 = select i1 %74, i32 %28, i32 %72
  %76 = select i1 %74, i8 77, i8 %73
  %77 = icmp sgt i32 %27, %75
  %78 = select i1 %77, i32 %27, i32 %75
  %79 = select i1 %77, i8 78, i8 %76
  %80 = icmp sgt i32 %26, %78
  %81 = select i1 %80, i32 %26, i32 %78
  %82 = select i1 %80, i8 79, i8 %79
  %83 = icmp sgt i32 %25, %81
  %84 = select i1 %83, i32 %25, i32 %81
  %85 = select i1 %83, i8 80, i8 %82
  %86 = icmp sgt i32 %24, %84
  %87 = select i1 %86, i32 %24, i32 %84
  %88 = select i1 %86, i8 81, i8 %85
  %89 = icmp sgt i32 %23, %87
  %90 = select i1 %89, i32 %23, i32 %87
  %91 = select i1 %89, i8 82, i8 %88
  %92 = icmp sgt i32 %22, %90
  %93 = select i1 %92, i32 %22, i32 %90
  %94 = select i1 %92, i8 83, i8 %91
  %95 = icmp sgt i32 %21, %93
  %96 = select i1 %95, i32 %21, i32 %93
  %97 = select i1 %95, i8 84, i8 %94
  %98 = icmp sgt i32 %20, %96
  %99 = select i1 %98, i32 %20, i32 %96
  %100 = select i1 %98, i8 85, i8 %97
  %101 = icmp sgt i32 %19, %99
  %102 = select i1 %101, i32 %19, i32 %99
  %103 = select i1 %101, i8 86, i8 %100
  %104 = icmp sgt i32 %18, %102
  %105 = select i1 %104, i32 %18, i32 %102
  %106 = select i1 %104, i8 87, i8 %103
  %107 = icmp sgt i32 %17, %105
  %108 = select i1 %107, i32 %17, i32 %105
  %109 = select i1 %107, i8 88, i8 %106
  %110 = icmp sgt i32 %16, %108
  %111 = select i1 %110, i32 %16, i32 %108
  %112 = select i1 %110, i8 89, i8 %109
  %113 = icmp sgt i32 %15, %111
  %114 = select i1 %113, i32 %15, i32 %111
  %115 = select i1 %113, i8 90, i8 %112
  %116 = zext i8 %115 to i32
  %117 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %116, i32 %114)
  %118 = bitcast [1000 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %118) #5
  %119 = load i32, i32* %1, align 4, !tbaa !5
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %223, label %289

121:                                              ; preds = %0, %192
  %122 = phi i32 [ %193, %192 ], [ 0, %0 ]
  %123 = phi i32 [ %194, %192 ], [ 0, %0 ]
  %124 = phi i32 [ %195, %192 ], [ 0, %0 ]
  %125 = phi i32 [ %196, %192 ], [ 0, %0 ]
  %126 = phi i32 [ %197, %192 ], [ 0, %0 ]
  %127 = phi i32 [ %198, %192 ], [ 0, %0 ]
  %128 = phi i32 [ %199, %192 ], [ 0, %0 ]
  %129 = phi i32 [ %200, %192 ], [ 0, %0 ]
  %130 = phi i32 [ %201, %192 ], [ 0, %0 ]
  %131 = phi i32 [ %202, %192 ], [ 0, %0 ]
  %132 = phi i32 [ %203, %192 ], [ 0, %0 ]
  %133 = phi i32 [ %204, %192 ], [ 0, %0 ]
  %134 = phi i32 [ %205, %192 ], [ 0, %0 ]
  %135 = phi i32 [ %206, %192 ], [ 0, %0 ]
  %136 = phi i32 [ %207, %192 ], [ 0, %0 ]
  %137 = phi i32 [ %208, %192 ], [ 0, %0 ]
  %138 = phi i32 [ %209, %192 ], [ 0, %0 ]
  %139 = phi i32 [ %210, %192 ], [ 0, %0 ]
  %140 = phi i32 [ %211, %192 ], [ 0, %0 ]
  %141 = phi i32 [ %212, %192 ], [ 0, %0 ]
  %142 = phi i32 [ %213, %192 ], [ 0, %0 ]
  %143 = phi i32 [ %214, %192 ], [ 0, %0 ]
  %144 = phi i32 [ %215, %192 ], [ 0, %0 ]
  %145 = phi i32 [ %216, %192 ], [ 0, %0 ]
  %146 = phi i32 [ %217, %192 ], [ 0, %0 ]
  %147 = phi i32 [ %218, %192 ], [ 0, %0 ]
  %148 = phi i64 [ %219, %192 ], [ 0, %0 ]
  %149 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %148
  %150 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %148, i64 0
  %151 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %149, i8* nonnull %150)
  %152 = call i64 @strlen(i8* noundef nonnull %150) #6
  %153 = trunc i64 %152 to i8
  %154 = icmp sgt i8 %153, 0
  br i1 %154, label %155, label %192

155:                                              ; preds = %121
  %156 = shl i64 %152, 56
  %157 = ashr exact i64 %156, 56
  %158 = call i64 @llvm.smax.i64(i64 %157, i64 1)
  br label %159

159:                                              ; preds = %155, %340
  %160 = phi i32 [ %122, %155 ], [ %353, %340 ]
  %161 = phi i32 [ %123, %155 ], [ %354, %340 ]
  %162 = phi i32 [ %124, %155 ], [ %352, %340 ]
  %163 = phi i32 [ %125, %155 ], [ %355, %340 ]
  %164 = phi i32 [ %126, %155 ], [ %351, %340 ]
  %165 = phi i32 [ %127, %155 ], [ %356, %340 ]
  %166 = phi i32 [ %128, %155 ], [ %350, %340 ]
  %167 = phi i32 [ %129, %155 ], [ %357, %340 ]
  %168 = phi i32 [ %130, %155 ], [ %349, %340 ]
  %169 = phi i32 [ %131, %155 ], [ %358, %340 ]
  %170 = phi i32 [ %132, %155 ], [ %348, %340 ]
  %171 = phi i32 [ %133, %155 ], [ %359, %340 ]
  %172 = phi i32 [ %134, %155 ], [ %347, %340 ]
  %173 = phi i32 [ %135, %155 ], [ %360, %340 ]
  %174 = phi i32 [ %136, %155 ], [ %346, %340 ]
  %175 = phi i32 [ %137, %155 ], [ %361, %340 ]
  %176 = phi i32 [ %138, %155 ], [ %345, %340 ]
  %177 = phi i32 [ %139, %155 ], [ %362, %340 ]
  %178 = phi i32 [ %140, %155 ], [ %344, %340 ]
  %179 = phi i32 [ %141, %155 ], [ %363, %340 ]
  %180 = phi i32 [ %142, %155 ], [ %343, %340 ]
  %181 = phi i32 [ %143, %155 ], [ %364, %340 ]
  %182 = phi i32 [ %144, %155 ], [ %342, %340 ]
  %183 = phi i32 [ %145, %155 ], [ %365, %340 ]
  %184 = phi i32 [ %146, %155 ], [ %341, %340 ]
  %185 = phi i32 [ %147, %155 ], [ %366, %340 ]
  %186 = phi i64 [ 0, %155 ], [ %367, %340 ]
  %187 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %148, i64 %186
  %188 = load i8, i8* %187, align 1, !tbaa !9
  %189 = sext i8 %188 to i32
  switch i32 %189, label %340 [
    i32 65, label %190
    i32 66, label %290
    i32 67, label %292
    i32 68, label %294
    i32 69, label %296
    i32 70, label %298
    i32 71, label %300
    i32 72, label %302
    i32 73, label %304
    i32 74, label %306
    i32 75, label %308
    i32 76, label %310
    i32 77, label %312
    i32 78, label %314
    i32 79, label %316
    i32 80, label %318
    i32 81, label %320
    i32 82, label %322
    i32 83, label %324
    i32 84, label %326
    i32 85, label %328
    i32 86, label %330
    i32 87, label %332
    i32 88, label %334
    i32 89, label %336
    i32 90, label %338
  ]

190:                                              ; preds = %159
  %191 = add nsw i32 %160, 1
  br label %340

192:                                              ; preds = %340, %121
  %193 = phi i32 [ %122, %121 ], [ %353, %340 ]
  %194 = phi i32 [ %123, %121 ], [ %354, %340 ]
  %195 = phi i32 [ %124, %121 ], [ %352, %340 ]
  %196 = phi i32 [ %125, %121 ], [ %355, %340 ]
  %197 = phi i32 [ %126, %121 ], [ %351, %340 ]
  %198 = phi i32 [ %127, %121 ], [ %356, %340 ]
  %199 = phi i32 [ %128, %121 ], [ %350, %340 ]
  %200 = phi i32 [ %129, %121 ], [ %357, %340 ]
  %201 = phi i32 [ %130, %121 ], [ %349, %340 ]
  %202 = phi i32 [ %131, %121 ], [ %358, %340 ]
  %203 = phi i32 [ %132, %121 ], [ %348, %340 ]
  %204 = phi i32 [ %133, %121 ], [ %359, %340 ]
  %205 = phi i32 [ %134, %121 ], [ %347, %340 ]
  %206 = phi i32 [ %135, %121 ], [ %360, %340 ]
  %207 = phi i32 [ %136, %121 ], [ %346, %340 ]
  %208 = phi i32 [ %137, %121 ], [ %361, %340 ]
  %209 = phi i32 [ %138, %121 ], [ %345, %340 ]
  %210 = phi i32 [ %139, %121 ], [ %362, %340 ]
  %211 = phi i32 [ %140, %121 ], [ %344, %340 ]
  %212 = phi i32 [ %141, %121 ], [ %363, %340 ]
  %213 = phi i32 [ %142, %121 ], [ %343, %340 ]
  %214 = phi i32 [ %143, %121 ], [ %364, %340 ]
  %215 = phi i32 [ %144, %121 ], [ %342, %340 ]
  %216 = phi i32 [ %145, %121 ], [ %365, %340 ]
  %217 = phi i32 [ %146, %121 ], [ %341, %340 ]
  %218 = phi i32 [ %147, %121 ], [ %366, %340 ]
  %219 = add nuw nsw i64 %148, 1
  %220 = load i32, i32* %1, align 4, !tbaa !5
  %221 = sext i32 %220 to i64
  %222 = icmp slt i64 %219, %221
  br i1 %222, label %121, label %11, !llvm.loop !10

223:                                              ; preds = %14
  %224 = zext i32 %119 to i64
  br label %230

225:                                              ; preds = %278
  %226 = icmp slt i32 %279, 1
  br i1 %226, label %289, label %227

227:                                              ; preds = %225
  %228 = add nuw i32 %279, 1
  %229 = zext i32 %228 to i64
  br label %282

230:                                              ; preds = %223, %278
  %231 = phi i64 [ 0, %223 ], [ %280, %278 ]
  %232 = phi i32 [ 0, %223 ], [ %279, %278 ]
  %233 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %231, i64 0
  %234 = call i64 @strlen(i8* noundef nonnull %233) #6
  %235 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %231
  %236 = trunc i64 %234 to i8
  %237 = icmp sgt i8 %236, 0
  br i1 %237, label %238, label %278

238:                                              ; preds = %230
  %239 = shl i64 %234, 56
  %240 = ashr exact i64 %239, 56
  %241 = call i64 @llvm.smax.i64(i64 %240, i64 1)
  %242 = and i64 %241, 1
  %243 = icmp slt i64 %239, 144115188075855872
  br i1 %243, label %264, label %244

244:                                              ; preds = %238
  %245 = and i64 %241, 9223372036854775806
  br label %246

246:                                              ; preds = %374, %244
  %247 = phi i64 [ 0, %244 ], [ %376, %374 ]
  %248 = phi i32 [ %232, %244 ], [ %375, %374 ]
  %249 = phi i64 [ %245, %244 ], [ %377, %374 ]
  %250 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %231, i64 %247
  %251 = load i8, i8* %250, align 2, !tbaa !9
  %252 = icmp eq i8 %251, %115
  br i1 %252, label %253, label %258

253:                                              ; preds = %246
  %254 = add nsw i32 %248, 1
  %255 = load i32, i32* %235, align 4, !tbaa !5
  %256 = sext i32 %254 to i64
  %257 = getelementptr inbounds [1000 x i32], [1000 x i32]* %4, i64 0, i64 %256
  store i32 %255, i32* %257, align 4, !tbaa !5
  br label %258

258:                                              ; preds = %246, %253
  %259 = phi i32 [ %254, %253 ], [ %248, %246 ]
  %260 = or i64 %247, 1
  %261 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %231, i64 %260
  %262 = load i8, i8* %261, align 1, !tbaa !9
  %263 = icmp eq i8 %262, %115
  br i1 %263, label %369, label %374

264:                                              ; preds = %374, %238
  %265 = phi i32 [ undef, %238 ], [ %375, %374 ]
  %266 = phi i64 [ 0, %238 ], [ %376, %374 ]
  %267 = phi i32 [ %232, %238 ], [ %375, %374 ]
  %268 = icmp eq i64 %242, 0
  br i1 %268, label %278, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %231, i64 %266
  %271 = load i8, i8* %270, align 1, !tbaa !9
  %272 = icmp eq i8 %271, %115
  br i1 %272, label %273, label %278

273:                                              ; preds = %269
  %274 = add nsw i32 %267, 1
  %275 = load i32, i32* %235, align 4, !tbaa !5
  %276 = sext i32 %274 to i64
  %277 = getelementptr inbounds [1000 x i32], [1000 x i32]* %4, i64 0, i64 %276
  store i32 %275, i32* %277, align 4, !tbaa !5
  br label %278

278:                                              ; preds = %264, %269, %273, %230
  %279 = phi i32 [ %232, %230 ], [ %265, %264 ], [ %274, %273 ], [ %267, %269 ]
  %280 = add nuw nsw i64 %231, 1
  %281 = icmp eq i64 %280, %224
  br i1 %281, label %225, label %230, !llvm.loop !12

282:                                              ; preds = %227, %282
  %283 = phi i64 [ 1, %227 ], [ %287, %282 ]
  %284 = getelementptr inbounds [1000 x i32], [1000 x i32]* %4, i64 0, i64 %283
  %285 = load i32, i32* %284, align 4, !tbaa !5
  %286 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %285)
  %287 = add nuw nsw i64 %283, 1
  %288 = icmp eq i64 %287, %229
  br i1 %288, label %289, label %282, !llvm.loop !13

289:                                              ; preds = %282, %14, %225
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %118) #5
  call void @llvm.lifetime.end.p0i8(i64 26000, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  ret i32 0

290:                                              ; preds = %159
  %291 = add nsw i32 %161, 1
  br label %340

292:                                              ; preds = %159
  %293 = add nsw i32 %162, 1
  br label %340

294:                                              ; preds = %159
  %295 = add nsw i32 %163, 1
  br label %340

296:                                              ; preds = %159
  %297 = add nsw i32 %164, 1
  br label %340

298:                                              ; preds = %159
  %299 = add nsw i32 %165, 1
  br label %340

300:                                              ; preds = %159
  %301 = add nsw i32 %166, 1
  br label %340

302:                                              ; preds = %159
  %303 = add nsw i32 %167, 1
  br label %340

304:                                              ; preds = %159
  %305 = add nsw i32 %168, 1
  br label %340

306:                                              ; preds = %159
  %307 = add nsw i32 %169, 1
  br label %340

308:                                              ; preds = %159
  %309 = add nsw i32 %170, 1
  br label %340

310:                                              ; preds = %159
  %311 = add nsw i32 %171, 1
  br label %340

312:                                              ; preds = %159
  %313 = add nsw i32 %172, 1
  br label %340

314:                                              ; preds = %159
  %315 = add nsw i32 %173, 1
  br label %340

316:                                              ; preds = %159
  %317 = add nsw i32 %174, 1
  br label %340

318:                                              ; preds = %159
  %319 = add nsw i32 %175, 1
  br label %340

320:                                              ; preds = %159
  %321 = add nsw i32 %176, 1
  br label %340

322:                                              ; preds = %159
  %323 = add nsw i32 %177, 1
  br label %340

324:                                              ; preds = %159
  %325 = add nsw i32 %178, 1
  br label %340

326:                                              ; preds = %159
  %327 = add nsw i32 %179, 1
  br label %340

328:                                              ; preds = %159
  %329 = add nsw i32 %180, 1
  br label %340

330:                                              ; preds = %159
  %331 = add nsw i32 %181, 1
  br label %340

332:                                              ; preds = %159
  %333 = add nsw i32 %182, 1
  br label %340

334:                                              ; preds = %159
  %335 = add nsw i32 %183, 1
  br label %340

336:                                              ; preds = %159
  %337 = add nsw i32 %184, 1
  br label %340

338:                                              ; preds = %159
  %339 = add nsw i32 %185, 1
  br label %340

340:                                              ; preds = %159, %290, %190, %292, %294, %296, %298, %300, %302, %304, %306, %308, %310, %312, %314, %316, %318, %320, %322, %324, %326, %328, %330, %332, %334, %336, %338
  %341 = phi i32 [ %184, %338 ], [ %337, %336 ], [ %184, %334 ], [ %184, %332 ], [ %184, %330 ], [ %184, %328 ], [ %184, %326 ], [ %184, %324 ], [ %184, %322 ], [ %184, %320 ], [ %184, %318 ], [ %184, %316 ], [ %184, %314 ], [ %184, %312 ], [ %184, %310 ], [ %184, %308 ], [ %184, %306 ], [ %184, %304 ], [ %184, %302 ], [ %184, %300 ], [ %184, %298 ], [ %184, %296 ], [ %184, %294 ], [ %184, %292 ], [ %184, %190 ], [ %184, %290 ], [ %184, %159 ]
  %342 = phi i32 [ %182, %338 ], [ %182, %336 ], [ %182, %334 ], [ %333, %332 ], [ %182, %330 ], [ %182, %328 ], [ %182, %326 ], [ %182, %324 ], [ %182, %322 ], [ %182, %320 ], [ %182, %318 ], [ %182, %316 ], [ %182, %314 ], [ %182, %312 ], [ %182, %310 ], [ %182, %308 ], [ %182, %306 ], [ %182, %304 ], [ %182, %302 ], [ %182, %300 ], [ %182, %298 ], [ %182, %296 ], [ %182, %294 ], [ %182, %292 ], [ %182, %190 ], [ %182, %290 ], [ %182, %159 ]
  %343 = phi i32 [ %180, %338 ], [ %180, %336 ], [ %180, %334 ], [ %180, %332 ], [ %180, %330 ], [ %329, %328 ], [ %180, %326 ], [ %180, %324 ], [ %180, %322 ], [ %180, %320 ], [ %180, %318 ], [ %180, %316 ], [ %180, %314 ], [ %180, %312 ], [ %180, %310 ], [ %180, %308 ], [ %180, %306 ], [ %180, %304 ], [ %180, %302 ], [ %180, %300 ], [ %180, %298 ], [ %180, %296 ], [ %180, %294 ], [ %180, %292 ], [ %180, %190 ], [ %180, %290 ], [ %180, %159 ]
  %344 = phi i32 [ %178, %338 ], [ %178, %336 ], [ %178, %334 ], [ %178, %332 ], [ %178, %330 ], [ %178, %328 ], [ %178, %326 ], [ %325, %324 ], [ %178, %322 ], [ %178, %320 ], [ %178, %318 ], [ %178, %316 ], [ %178, %314 ], [ %178, %312 ], [ %178, %310 ], [ %178, %308 ], [ %178, %306 ], [ %178, %304 ], [ %178, %302 ], [ %178, %300 ], [ %178, %298 ], [ %178, %296 ], [ %178, %294 ], [ %178, %292 ], [ %178, %190 ], [ %178, %290 ], [ %178, %159 ]
  %345 = phi i32 [ %176, %338 ], [ %176, %336 ], [ %176, %334 ], [ %176, %332 ], [ %176, %330 ], [ %176, %328 ], [ %176, %326 ], [ %176, %324 ], [ %176, %322 ], [ %321, %320 ], [ %176, %318 ], [ %176, %316 ], [ %176, %314 ], [ %176, %312 ], [ %176, %310 ], [ %176, %308 ], [ %176, %306 ], [ %176, %304 ], [ %176, %302 ], [ %176, %300 ], [ %176, %298 ], [ %176, %296 ], [ %176, %294 ], [ %176, %292 ], [ %176, %190 ], [ %176, %290 ], [ %176, %159 ]
  %346 = phi i32 [ %174, %338 ], [ %174, %336 ], [ %174, %334 ], [ %174, %332 ], [ %174, %330 ], [ %174, %328 ], [ %174, %326 ], [ %174, %324 ], [ %174, %322 ], [ %174, %320 ], [ %174, %318 ], [ %317, %316 ], [ %174, %314 ], [ %174, %312 ], [ %174, %310 ], [ %174, %308 ], [ %174, %306 ], [ %174, %304 ], [ %174, %302 ], [ %174, %300 ], [ %174, %298 ], [ %174, %296 ], [ %174, %294 ], [ %174, %292 ], [ %174, %190 ], [ %174, %290 ], [ %174, %159 ]
  %347 = phi i32 [ %172, %338 ], [ %172, %336 ], [ %172, %334 ], [ %172, %332 ], [ %172, %330 ], [ %172, %328 ], [ %172, %326 ], [ %172, %324 ], [ %172, %322 ], [ %172, %320 ], [ %172, %318 ], [ %172, %316 ], [ %172, %314 ], [ %313, %312 ], [ %172, %310 ], [ %172, %308 ], [ %172, %306 ], [ %172, %304 ], [ %172, %302 ], [ %172, %300 ], [ %172, %298 ], [ %172, %296 ], [ %172, %294 ], [ %172, %292 ], [ %172, %190 ], [ %172, %290 ], [ %172, %159 ]
  %348 = phi i32 [ %170, %338 ], [ %170, %336 ], [ %170, %334 ], [ %170, %332 ], [ %170, %330 ], [ %170, %328 ], [ %170, %326 ], [ %170, %324 ], [ %170, %322 ], [ %170, %320 ], [ %170, %318 ], [ %170, %316 ], [ %170, %314 ], [ %170, %312 ], [ %170, %310 ], [ %309, %308 ], [ %170, %306 ], [ %170, %304 ], [ %170, %302 ], [ %170, %300 ], [ %170, %298 ], [ %170, %296 ], [ %170, %294 ], [ %170, %292 ], [ %170, %190 ], [ %170, %290 ], [ %170, %159 ]
  %349 = phi i32 [ %168, %338 ], [ %168, %336 ], [ %168, %334 ], [ %168, %332 ], [ %168, %330 ], [ %168, %328 ], [ %168, %326 ], [ %168, %324 ], [ %168, %322 ], [ %168, %320 ], [ %168, %318 ], [ %168, %316 ], [ %168, %314 ], [ %168, %312 ], [ %168, %310 ], [ %168, %308 ], [ %168, %306 ], [ %305, %304 ], [ %168, %302 ], [ %168, %300 ], [ %168, %298 ], [ %168, %296 ], [ %168, %294 ], [ %168, %292 ], [ %168, %190 ], [ %168, %290 ], [ %168, %159 ]
  %350 = phi i32 [ %166, %338 ], [ %166, %336 ], [ %166, %334 ], [ %166, %332 ], [ %166, %330 ], [ %166, %328 ], [ %166, %326 ], [ %166, %324 ], [ %166, %322 ], [ %166, %320 ], [ %166, %318 ], [ %166, %316 ], [ %166, %314 ], [ %166, %312 ], [ %166, %310 ], [ %166, %308 ], [ %166, %306 ], [ %166, %304 ], [ %166, %302 ], [ %301, %300 ], [ %166, %298 ], [ %166, %296 ], [ %166, %294 ], [ %166, %292 ], [ %166, %190 ], [ %166, %290 ], [ %166, %159 ]
  %351 = phi i32 [ %164, %338 ], [ %164, %336 ], [ %164, %334 ], [ %164, %332 ], [ %164, %330 ], [ %164, %328 ], [ %164, %326 ], [ %164, %324 ], [ %164, %322 ], [ %164, %320 ], [ %164, %318 ], [ %164, %316 ], [ %164, %314 ], [ %164, %312 ], [ %164, %310 ], [ %164, %308 ], [ %164, %306 ], [ %164, %304 ], [ %164, %302 ], [ %164, %300 ], [ %164, %298 ], [ %297, %296 ], [ %164, %294 ], [ %164, %292 ], [ %164, %190 ], [ %164, %290 ], [ %164, %159 ]
  %352 = phi i32 [ %162, %338 ], [ %162, %336 ], [ %162, %334 ], [ %162, %332 ], [ %162, %330 ], [ %162, %328 ], [ %162, %326 ], [ %162, %324 ], [ %162, %322 ], [ %162, %320 ], [ %162, %318 ], [ %162, %316 ], [ %162, %314 ], [ %162, %312 ], [ %162, %310 ], [ %162, %308 ], [ %162, %306 ], [ %162, %304 ], [ %162, %302 ], [ %162, %300 ], [ %162, %298 ], [ %162, %296 ], [ %162, %294 ], [ %293, %292 ], [ %162, %190 ], [ %162, %290 ], [ %162, %159 ]
  %353 = phi i32 [ %160, %338 ], [ %160, %336 ], [ %160, %334 ], [ %160, %332 ], [ %160, %330 ], [ %160, %328 ], [ %160, %326 ], [ %160, %324 ], [ %160, %322 ], [ %160, %320 ], [ %160, %318 ], [ %160, %316 ], [ %160, %314 ], [ %160, %312 ], [ %160, %310 ], [ %160, %308 ], [ %160, %306 ], [ %160, %304 ], [ %160, %302 ], [ %160, %300 ], [ %160, %298 ], [ %160, %296 ], [ %160, %294 ], [ %160, %292 ], [ %191, %190 ], [ %160, %290 ], [ %160, %159 ]
  %354 = phi i32 [ %161, %338 ], [ %161, %336 ], [ %161, %334 ], [ %161, %332 ], [ %161, %330 ], [ %161, %328 ], [ %161, %326 ], [ %161, %324 ], [ %161, %322 ], [ %161, %320 ], [ %161, %318 ], [ %161, %316 ], [ %161, %314 ], [ %161, %312 ], [ %161, %310 ], [ %161, %308 ], [ %161, %306 ], [ %161, %304 ], [ %161, %302 ], [ %161, %300 ], [ %161, %298 ], [ %161, %296 ], [ %161, %294 ], [ %161, %292 ], [ %161, %190 ], [ %291, %290 ], [ %161, %159 ]
  %355 = phi i32 [ %163, %338 ], [ %163, %336 ], [ %163, %334 ], [ %163, %332 ], [ %163, %330 ], [ %163, %328 ], [ %163, %326 ], [ %163, %324 ], [ %163, %322 ], [ %163, %320 ], [ %163, %318 ], [ %163, %316 ], [ %163, %314 ], [ %163, %312 ], [ %163, %310 ], [ %163, %308 ], [ %163, %306 ], [ %163, %304 ], [ %163, %302 ], [ %163, %300 ], [ %163, %298 ], [ %163, %296 ], [ %295, %294 ], [ %163, %292 ], [ %163, %190 ], [ %163, %290 ], [ %163, %159 ]
  %356 = phi i32 [ %165, %338 ], [ %165, %336 ], [ %165, %334 ], [ %165, %332 ], [ %165, %330 ], [ %165, %328 ], [ %165, %326 ], [ %165, %324 ], [ %165, %322 ], [ %165, %320 ], [ %165, %318 ], [ %165, %316 ], [ %165, %314 ], [ %165, %312 ], [ %165, %310 ], [ %165, %308 ], [ %165, %306 ], [ %165, %304 ], [ %165, %302 ], [ %165, %300 ], [ %299, %298 ], [ %165, %296 ], [ %165, %294 ], [ %165, %292 ], [ %165, %190 ], [ %165, %290 ], [ %165, %159 ]
  %357 = phi i32 [ %167, %338 ], [ %167, %336 ], [ %167, %334 ], [ %167, %332 ], [ %167, %330 ], [ %167, %328 ], [ %167, %326 ], [ %167, %324 ], [ %167, %322 ], [ %167, %320 ], [ %167, %318 ], [ %167, %316 ], [ %167, %314 ], [ %167, %312 ], [ %167, %310 ], [ %167, %308 ], [ %167, %306 ], [ %167, %304 ], [ %303, %302 ], [ %167, %300 ], [ %167, %298 ], [ %167, %296 ], [ %167, %294 ], [ %167, %292 ], [ %167, %190 ], [ %167, %290 ], [ %167, %159 ]
  %358 = phi i32 [ %169, %338 ], [ %169, %336 ], [ %169, %334 ], [ %169, %332 ], [ %169, %330 ], [ %169, %328 ], [ %169, %326 ], [ %169, %324 ], [ %169, %322 ], [ %169, %320 ], [ %169, %318 ], [ %169, %316 ], [ %169, %314 ], [ %169, %312 ], [ %169, %310 ], [ %169, %308 ], [ %307, %306 ], [ %169, %304 ], [ %169, %302 ], [ %169, %300 ], [ %169, %298 ], [ %169, %296 ], [ %169, %294 ], [ %169, %292 ], [ %169, %190 ], [ %169, %290 ], [ %169, %159 ]
  %359 = phi i32 [ %171, %338 ], [ %171, %336 ], [ %171, %334 ], [ %171, %332 ], [ %171, %330 ], [ %171, %328 ], [ %171, %326 ], [ %171, %324 ], [ %171, %322 ], [ %171, %320 ], [ %171, %318 ], [ %171, %316 ], [ %171, %314 ], [ %171, %312 ], [ %311, %310 ], [ %171, %308 ], [ %171, %306 ], [ %171, %304 ], [ %171, %302 ], [ %171, %300 ], [ %171, %298 ], [ %171, %296 ], [ %171, %294 ], [ %171, %292 ], [ %171, %190 ], [ %171, %290 ], [ %171, %159 ]
  %360 = phi i32 [ %173, %338 ], [ %173, %336 ], [ %173, %334 ], [ %173, %332 ], [ %173, %330 ], [ %173, %328 ], [ %173, %326 ], [ %173, %324 ], [ %173, %322 ], [ %173, %320 ], [ %173, %318 ], [ %173, %316 ], [ %315, %314 ], [ %173, %312 ], [ %173, %310 ], [ %173, %308 ], [ %173, %306 ], [ %173, %304 ], [ %173, %302 ], [ %173, %300 ], [ %173, %298 ], [ %173, %296 ], [ %173, %294 ], [ %173, %292 ], [ %173, %190 ], [ %173, %290 ], [ %173, %159 ]
  %361 = phi i32 [ %175, %338 ], [ %175, %336 ], [ %175, %334 ], [ %175, %332 ], [ %175, %330 ], [ %175, %328 ], [ %175, %326 ], [ %175, %324 ], [ %175, %322 ], [ %175, %320 ], [ %319, %318 ], [ %175, %316 ], [ %175, %314 ], [ %175, %312 ], [ %175, %310 ], [ %175, %308 ], [ %175, %306 ], [ %175, %304 ], [ %175, %302 ], [ %175, %300 ], [ %175, %298 ], [ %175, %296 ], [ %175, %294 ], [ %175, %292 ], [ %175, %190 ], [ %175, %290 ], [ %175, %159 ]
  %362 = phi i32 [ %177, %338 ], [ %177, %336 ], [ %177, %334 ], [ %177, %332 ], [ %177, %330 ], [ %177, %328 ], [ %177, %326 ], [ %177, %324 ], [ %323, %322 ], [ %177, %320 ], [ %177, %318 ], [ %177, %316 ], [ %177, %314 ], [ %177, %312 ], [ %177, %310 ], [ %177, %308 ], [ %177, %306 ], [ %177, %304 ], [ %177, %302 ], [ %177, %300 ], [ %177, %298 ], [ %177, %296 ], [ %177, %294 ], [ %177, %292 ], [ %177, %190 ], [ %177, %290 ], [ %177, %159 ]
  %363 = phi i32 [ %179, %338 ], [ %179, %336 ], [ %179, %334 ], [ %179, %332 ], [ %179, %330 ], [ %179, %328 ], [ %327, %326 ], [ %179, %324 ], [ %179, %322 ], [ %179, %320 ], [ %179, %318 ], [ %179, %316 ], [ %179, %314 ], [ %179, %312 ], [ %179, %310 ], [ %179, %308 ], [ %179, %306 ], [ %179, %304 ], [ %179, %302 ], [ %179, %300 ], [ %179, %298 ], [ %179, %296 ], [ %179, %294 ], [ %179, %292 ], [ %179, %190 ], [ %179, %290 ], [ %179, %159 ]
  %364 = phi i32 [ %181, %338 ], [ %181, %336 ], [ %181, %334 ], [ %181, %332 ], [ %331, %330 ], [ %181, %328 ], [ %181, %326 ], [ %181, %324 ], [ %181, %322 ], [ %181, %320 ], [ %181, %318 ], [ %181, %316 ], [ %181, %314 ], [ %181, %312 ], [ %181, %310 ], [ %181, %308 ], [ %181, %306 ], [ %181, %304 ], [ %181, %302 ], [ %181, %300 ], [ %181, %298 ], [ %181, %296 ], [ %181, %294 ], [ %181, %292 ], [ %181, %190 ], [ %181, %290 ], [ %181, %159 ]
  %365 = phi i32 [ %183, %338 ], [ %183, %336 ], [ %335, %334 ], [ %183, %332 ], [ %183, %330 ], [ %183, %328 ], [ %183, %326 ], [ %183, %324 ], [ %183, %322 ], [ %183, %320 ], [ %183, %318 ], [ %183, %316 ], [ %183, %314 ], [ %183, %312 ], [ %183, %310 ], [ %183, %308 ], [ %183, %306 ], [ %183, %304 ], [ %183, %302 ], [ %183, %300 ], [ %183, %298 ], [ %183, %296 ], [ %183, %294 ], [ %183, %292 ], [ %183, %190 ], [ %183, %290 ], [ %183, %159 ]
  %366 = phi i32 [ %339, %338 ], [ %185, %336 ], [ %185, %334 ], [ %185, %332 ], [ %185, %330 ], [ %185, %328 ], [ %185, %326 ], [ %185, %324 ], [ %185, %322 ], [ %185, %320 ], [ %185, %318 ], [ %185, %316 ], [ %185, %314 ], [ %185, %312 ], [ %185, %310 ], [ %185, %308 ], [ %185, %306 ], [ %185, %304 ], [ %185, %302 ], [ %185, %300 ], [ %185, %298 ], [ %185, %296 ], [ %185, %294 ], [ %185, %292 ], [ %185, %190 ], [ %185, %290 ], [ %185, %159 ]
  %367 = add nuw nsw i64 %186, 1
  %368 = icmp eq i64 %367, %158
  br i1 %368, label %192, label %159, !llvm.loop !14

369:                                              ; preds = %258
  %370 = add nsw i32 %259, 1
  %371 = load i32, i32* %235, align 4, !tbaa !5
  %372 = sext i32 %370 to i64
  %373 = getelementptr inbounds [1000 x i32], [1000 x i32]* %4, i64 0, i64 %372
  store i32 %371, i32* %373, align 4, !tbaa !5
  br label %374

374:                                              ; preds = %369, %258
  %375 = phi i32 [ %370, %369 ], [ %259, %258 ]
  %376 = add nuw nsw i64 %247, 2
  %377 = add i64 %249, -2
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %264, label %246, !llvm.loop !15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #4

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11}
!15 = distinct !{!15, !11}
