; ModuleID = 'source-C-CXX/1/79.c'
source_filename = "source-C-CXX/1/79.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1000 x i32], align 16
  %3 = alloca [1000 x [27 x i8]], align 16
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #4
  %5 = bitcast [1000 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %5) #4
  %6 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %7 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 27000, i8* nonnull %7) #4
  %8 = load i32, i32* %1, align 4, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %14, label %120

10:                                               ; preds = %14
  %11 = icmp sgt i32 %20, 0
  br i1 %11, label %12, label %120

12:                                               ; preds = %10
  %13 = zext i32 %20 to i64
  br label %23

14:                                               ; preds = %0, %14
  %15 = phi i64 [ %19, %14 ], [ 0, %0 ]
  %16 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %15
  %17 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %15, i64 0
  %18 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %16, i8* nonnull %17)
  %19 = add nuw nsw i64 %15, 1
  %20 = load i32, i32* %1, align 4, !tbaa !5
  %21 = sext i32 %20 to i64
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %14, label %10, !llvm.loop !9

23:                                               ; preds = %12, %91
  %24 = phi i32 [ 0, %12 ], [ %92, %91 ]
  %25 = phi i32 [ 0, %12 ], [ %93, %91 ]
  %26 = phi i32 [ 0, %12 ], [ %94, %91 ]
  %27 = phi i32 [ 0, %12 ], [ %95, %91 ]
  %28 = phi i32 [ 0, %12 ], [ %96, %91 ]
  %29 = phi i32 [ 0, %12 ], [ %97, %91 ]
  %30 = phi i32 [ 0, %12 ], [ %98, %91 ]
  %31 = phi i32 [ 0, %12 ], [ %99, %91 ]
  %32 = phi i32 [ 0, %12 ], [ %100, %91 ]
  %33 = phi i32 [ 0, %12 ], [ %101, %91 ]
  %34 = phi i32 [ 0, %12 ], [ %102, %91 ]
  %35 = phi i32 [ 0, %12 ], [ %103, %91 ]
  %36 = phi i32 [ 0, %12 ], [ %104, %91 ]
  %37 = phi i32 [ 0, %12 ], [ %105, %91 ]
  %38 = phi i32 [ 0, %12 ], [ %106, %91 ]
  %39 = phi i32 [ 0, %12 ], [ %107, %91 ]
  %40 = phi i32 [ 0, %12 ], [ %108, %91 ]
  %41 = phi i32 [ 0, %12 ], [ %109, %91 ]
  %42 = phi i32 [ 0, %12 ], [ %110, %91 ]
  %43 = phi i32 [ 0, %12 ], [ %111, %91 ]
  %44 = phi i32 [ 0, %12 ], [ %112, %91 ]
  %45 = phi i32 [ 0, %12 ], [ %113, %91 ]
  %46 = phi i32 [ 0, %12 ], [ %114, %91 ]
  %47 = phi i32 [ 0, %12 ], [ %115, %91 ]
  %48 = phi i32 [ 0, %12 ], [ %116, %91 ]
  %49 = phi i32 [ 0, %12 ], [ %117, %91 ]
  %50 = phi i64 [ 0, %12 ], [ %118, %91 ]
  %51 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %50, i64 0
  %52 = call i64 @strlen(i8* noundef nonnull %51) #5
  %53 = trunc i64 %52 to i32
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %91

55:                                               ; preds = %23
  %56 = shl i64 %52, 32
  %57 = ashr exact i64 %56, 32
  br label %58

58:                                               ; preds = %55, %304
  %59 = phi i32 [ %24, %55 ], [ %317, %304 ]
  %60 = phi i32 [ %25, %55 ], [ %318, %304 ]
  %61 = phi i32 [ %26, %55 ], [ %316, %304 ]
  %62 = phi i32 [ %27, %55 ], [ %319, %304 ]
  %63 = phi i32 [ %28, %55 ], [ %315, %304 ]
  %64 = phi i32 [ %29, %55 ], [ %320, %304 ]
  %65 = phi i32 [ %30, %55 ], [ %314, %304 ]
  %66 = phi i32 [ %31, %55 ], [ %321, %304 ]
  %67 = phi i32 [ %32, %55 ], [ %313, %304 ]
  %68 = phi i32 [ %33, %55 ], [ %322, %304 ]
  %69 = phi i32 [ %34, %55 ], [ %312, %304 ]
  %70 = phi i32 [ %35, %55 ], [ %323, %304 ]
  %71 = phi i32 [ %36, %55 ], [ %311, %304 ]
  %72 = phi i32 [ %37, %55 ], [ %324, %304 ]
  %73 = phi i32 [ %38, %55 ], [ %310, %304 ]
  %74 = phi i32 [ %39, %55 ], [ %325, %304 ]
  %75 = phi i32 [ %40, %55 ], [ %309, %304 ]
  %76 = phi i32 [ %41, %55 ], [ %326, %304 ]
  %77 = phi i32 [ %42, %55 ], [ %308, %304 ]
  %78 = phi i32 [ %43, %55 ], [ %327, %304 ]
  %79 = phi i32 [ %44, %55 ], [ %307, %304 ]
  %80 = phi i32 [ %45, %55 ], [ %328, %304 ]
  %81 = phi i32 [ %46, %55 ], [ %306, %304 ]
  %82 = phi i32 [ %47, %55 ], [ %329, %304 ]
  %83 = phi i32 [ %48, %55 ], [ %305, %304 ]
  %84 = phi i32 [ %49, %55 ], [ %330, %304 ]
  %85 = phi i64 [ 0, %55 ], [ %331, %304 ]
  %86 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %50, i64 %85
  %87 = load i8, i8* %86, align 1, !tbaa !11
  %88 = sext i8 %87 to i32
  switch i32 %88, label %304 [
    i32 65, label %89
    i32 66, label %254
    i32 67, label %256
    i32 68, label %258
    i32 69, label %260
    i32 70, label %262
    i32 71, label %264
    i32 72, label %266
    i32 73, label %268
    i32 74, label %270
    i32 75, label %272
    i32 76, label %274
    i32 77, label %276
    i32 78, label %278
    i32 79, label %280
    i32 80, label %282
    i32 81, label %284
    i32 82, label %286
    i32 83, label %288
    i32 84, label %290
    i32 85, label %292
    i32 86, label %294
    i32 87, label %296
    i32 88, label %298
    i32 89, label %300
    i32 90, label %302
  ]

89:                                               ; preds = %58
  %90 = add nsw i32 %59, 1
  br label %304

91:                                               ; preds = %304, %23
  %92 = phi i32 [ %24, %23 ], [ %317, %304 ]
  %93 = phi i32 [ %25, %23 ], [ %318, %304 ]
  %94 = phi i32 [ %26, %23 ], [ %316, %304 ]
  %95 = phi i32 [ %27, %23 ], [ %319, %304 ]
  %96 = phi i32 [ %28, %23 ], [ %315, %304 ]
  %97 = phi i32 [ %29, %23 ], [ %320, %304 ]
  %98 = phi i32 [ %30, %23 ], [ %314, %304 ]
  %99 = phi i32 [ %31, %23 ], [ %321, %304 ]
  %100 = phi i32 [ %32, %23 ], [ %313, %304 ]
  %101 = phi i32 [ %33, %23 ], [ %322, %304 ]
  %102 = phi i32 [ %34, %23 ], [ %312, %304 ]
  %103 = phi i32 [ %35, %23 ], [ %323, %304 ]
  %104 = phi i32 [ %36, %23 ], [ %311, %304 ]
  %105 = phi i32 [ %37, %23 ], [ %324, %304 ]
  %106 = phi i32 [ %38, %23 ], [ %310, %304 ]
  %107 = phi i32 [ %39, %23 ], [ %325, %304 ]
  %108 = phi i32 [ %40, %23 ], [ %309, %304 ]
  %109 = phi i32 [ %41, %23 ], [ %326, %304 ]
  %110 = phi i32 [ %42, %23 ], [ %308, %304 ]
  %111 = phi i32 [ %43, %23 ], [ %327, %304 ]
  %112 = phi i32 [ %44, %23 ], [ %307, %304 ]
  %113 = phi i32 [ %45, %23 ], [ %328, %304 ]
  %114 = phi i32 [ %46, %23 ], [ %306, %304 ]
  %115 = phi i32 [ %47, %23 ], [ %329, %304 ]
  %116 = phi i32 [ %48, %23 ], [ %305, %304 ]
  %117 = phi i32 [ %49, %23 ], [ %330, %304 ]
  %118 = add nuw nsw i64 %50, 1
  %119 = icmp eq i64 %118, %13
  br i1 %119, label %120, label %23, !llvm.loop !12

120:                                              ; preds = %91, %0, %10
  %121 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %92, %91 ]
  %122 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %93, %91 ]
  %123 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %94, %91 ]
  %124 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %95, %91 ]
  %125 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %96, %91 ]
  %126 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %97, %91 ]
  %127 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %98, %91 ]
  %128 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %99, %91 ]
  %129 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %100, %91 ]
  %130 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %101, %91 ]
  %131 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %102, %91 ]
  %132 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %103, %91 ]
  %133 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %104, %91 ]
  %134 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %105, %91 ]
  %135 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %106, %91 ]
  %136 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %107, %91 ]
  %137 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %108, %91 ]
  %138 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %109, %91 ]
  %139 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %110, %91 ]
  %140 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %111, %91 ]
  %141 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %112, %91 ]
  %142 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %113, %91 ]
  %143 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %114, %91 ]
  %144 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %115, %91 ]
  %145 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %116, %91 ]
  %146 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %117, %91 ]
  %147 = icmp sgt i32 %122, %121
  %148 = select i1 %147, i32 %122, i32 %121
  %149 = icmp sgt i32 %123, %148
  %150 = select i1 %149, i32 %123, i32 %148
  %151 = icmp sgt i32 %124, %150
  %152 = select i1 %151, i32 %124, i32 %150
  %153 = icmp sgt i32 %125, %152
  %154 = select i1 %153, i32 %125, i32 %152
  %155 = icmp sgt i32 %126, %154
  %156 = select i1 %155, i32 %126, i32 %154
  %157 = icmp sgt i32 %127, %156
  %158 = select i1 %157, i32 %127, i32 %156
  %159 = icmp sgt i32 %128, %158
  %160 = select i1 %159, i32 %128, i32 %158
  %161 = icmp sgt i32 %129, %160
  %162 = select i1 %161, i32 %129, i32 %160
  %163 = icmp sgt i32 %130, %162
  %164 = select i1 %163, i32 %130, i32 %162
  %165 = icmp sgt i32 %131, %164
  %166 = select i1 %165, i32 %131, i32 %164
  %167 = icmp sgt i32 %132, %166
  %168 = select i1 %167, i32 %132, i32 %166
  %169 = icmp sgt i32 %133, %168
  %170 = select i1 %169, i32 %133, i32 %168
  %171 = icmp sgt i32 %134, %170
  %172 = select i1 %171, i32 %134, i32 %170
  %173 = icmp sgt i32 %135, %172
  %174 = select i1 %173, i32 %135, i32 %172
  %175 = icmp sgt i32 %136, %174
  %176 = select i1 %175, i32 %136, i32 %174
  %177 = icmp sgt i32 %137, %176
  %178 = select i1 %177, i32 %137, i32 %176
  %179 = icmp sgt i32 %138, %178
  %180 = select i1 %179, i32 %138, i32 %178
  %181 = icmp sgt i32 %139, %180
  %182 = select i1 %181, i32 %139, i32 %180
  %183 = icmp sgt i32 %140, %182
  %184 = select i1 %183, i32 %140, i32 %182
  %185 = icmp sgt i32 %141, %184
  %186 = select i1 %185, i32 %141, i32 %184
  %187 = icmp sgt i32 %142, %186
  %188 = select i1 %187, i32 %142, i32 %186
  %189 = icmp sgt i32 %143, %188
  %190 = select i1 %189, i32 %143, i32 %188
  %191 = icmp sgt i32 %144, %190
  %192 = select i1 %191, i32 %144, i32 %190
  %193 = icmp sgt i32 %145, %192
  %194 = select i1 %193, i32 %145, i32 %192
  %195 = icmp sgt i32 %146, %194
  %196 = select i1 %195, i32 %146, i32 %194
  %197 = select i1 %147, i32 66, i32 65
  %198 = select i1 %149, i32 67, i32 %197
  %199 = select i1 %151, i32 68, i32 %198
  %200 = select i1 %153, i32 69, i32 %199
  %201 = select i1 %155, i32 70, i32 %200
  %202 = select i1 %157, i32 71, i32 %201
  %203 = select i1 %159, i32 72, i32 %202
  %204 = select i1 %161, i32 73, i32 %203
  %205 = select i1 %163, i32 74, i32 %204
  %206 = select i1 %165, i32 75, i32 %205
  %207 = select i1 %167, i32 76, i32 %206
  %208 = select i1 %169, i32 77, i32 %207
  %209 = select i1 %171, i32 78, i32 %208
  %210 = select i1 %173, i32 79, i32 %209
  %211 = select i1 %175, i32 80, i32 %210
  %212 = select i1 %177, i32 81, i32 %211
  %213 = select i1 %179, i32 82, i32 %212
  %214 = select i1 %181, i32 83, i32 %213
  %215 = select i1 %183, i32 84, i32 %214
  %216 = select i1 %185, i32 85, i32 %215
  %217 = select i1 %187, i32 86, i32 %216
  %218 = select i1 %189, i32 87, i32 %217
  %219 = select i1 %191, i32 88, i32 %218
  %220 = select i1 %193, i32 89, i32 %219
  %221 = select i1 %195, i32 90, i32 %220
  %222 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %221, i32 %196)
  %223 = load i32, i32* %1, align 4, !tbaa !5
  %224 = icmp sgt i32 %223, 0
  br i1 %224, label %225, label %253

225:                                              ; preds = %120, %248
  %226 = phi i32 [ %249, %248 ], [ %223, %120 ]
  %227 = phi i64 [ %250, %248 ], [ 0, %120 ]
  %228 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %227, i64 0
  %229 = call i64 @strlen(i8* noundef nonnull %228) #5
  %230 = trunc i64 %229 to i32
  %231 = icmp sgt i32 %230, 0
  br i1 %231, label %232, label %248

232:                                              ; preds = %225
  %233 = and i64 %229, 4294967295
  br label %236

234:                                              ; preds = %236
  %235 = icmp eq i64 %242, %233
  br i1 %235, label %248, label %236, !llvm.loop !13

236:                                              ; preds = %232, %234
  %237 = phi i64 [ 0, %232 ], [ %242, %234 ]
  %238 = getelementptr inbounds [1000 x [27 x i8]], [1000 x [27 x i8]]* %3, i64 0, i64 %227, i64 %237
  %239 = load i8, i8* %238, align 1, !tbaa !11
  %240 = sext i8 %239 to i32
  %241 = icmp eq i32 %221, %240
  %242 = add nuw nsw i64 %237, 1
  br i1 %241, label %243, label %234

243:                                              ; preds = %236
  %244 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %227
  %245 = load i32, i32* %244, align 4, !tbaa !5
  %246 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %245)
  %247 = load i32, i32* %1, align 4, !tbaa !5
  br label %248

248:                                              ; preds = %234, %225, %243
  %249 = phi i32 [ %226, %225 ], [ %247, %243 ], [ %226, %234 ]
  %250 = add nuw nsw i64 %227, 1
  %251 = sext i32 %249 to i64
  %252 = icmp slt i64 %250, %251
  br i1 %252, label %225, label %253, !llvm.loop !14

253:                                              ; preds = %248, %120
  call void @llvm.lifetime.end.p0i8(i64 27000, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #4
  ret i32 0

254:                                              ; preds = %58
  %255 = add nsw i32 %60, 1
  br label %304

256:                                              ; preds = %58
  %257 = add nsw i32 %61, 1
  br label %304

258:                                              ; preds = %58
  %259 = add nsw i32 %62, 1
  br label %304

260:                                              ; preds = %58
  %261 = add nsw i32 %63, 1
  br label %304

262:                                              ; preds = %58
  %263 = add nsw i32 %64, 1
  br label %304

264:                                              ; preds = %58
  %265 = add nsw i32 %65, 1
  br label %304

266:                                              ; preds = %58
  %267 = add nsw i32 %66, 1
  br label %304

268:                                              ; preds = %58
  %269 = add nsw i32 %67, 1
  br label %304

270:                                              ; preds = %58
  %271 = add nsw i32 %68, 1
  br label %304

272:                                              ; preds = %58
  %273 = add nsw i32 %69, 1
  br label %304

274:                                              ; preds = %58
  %275 = add nsw i32 %70, 1
  br label %304

276:                                              ; preds = %58
  %277 = add nsw i32 %71, 1
  br label %304

278:                                              ; preds = %58
  %279 = add nsw i32 %72, 1
  br label %304

280:                                              ; preds = %58
  %281 = add nsw i32 %73, 1
  br label %304

282:                                              ; preds = %58
  %283 = add nsw i32 %74, 1
  br label %304

284:                                              ; preds = %58
  %285 = add nsw i32 %75, 1
  br label %304

286:                                              ; preds = %58
  %287 = add nsw i32 %76, 1
  br label %304

288:                                              ; preds = %58
  %289 = add nsw i32 %77, 1
  br label %304

290:                                              ; preds = %58
  %291 = add nsw i32 %78, 1
  br label %304

292:                                              ; preds = %58
  %293 = add nsw i32 %79, 1
  br label %304

294:                                              ; preds = %58
  %295 = add nsw i32 %80, 1
  br label %304

296:                                              ; preds = %58
  %297 = add nsw i32 %81, 1
  br label %304

298:                                              ; preds = %58
  %299 = add nsw i32 %82, 1
  br label %304

300:                                              ; preds = %58
  %301 = add nsw i32 %83, 1
  br label %304

302:                                              ; preds = %58
  %303 = add nsw i32 %84, 1
  br label %304

304:                                              ; preds = %58, %254, %89, %256, %258, %260, %262, %264, %266, %268, %270, %272, %274, %276, %278, %280, %282, %284, %286, %288, %290, %292, %294, %296, %298, %300, %302
  %305 = phi i32 [ %83, %302 ], [ %301, %300 ], [ %83, %298 ], [ %83, %296 ], [ %83, %294 ], [ %83, %292 ], [ %83, %290 ], [ %83, %288 ], [ %83, %286 ], [ %83, %284 ], [ %83, %282 ], [ %83, %280 ], [ %83, %278 ], [ %83, %276 ], [ %83, %274 ], [ %83, %272 ], [ %83, %270 ], [ %83, %268 ], [ %83, %266 ], [ %83, %264 ], [ %83, %262 ], [ %83, %260 ], [ %83, %258 ], [ %83, %256 ], [ %83, %89 ], [ %83, %254 ], [ %83, %58 ]
  %306 = phi i32 [ %81, %302 ], [ %81, %300 ], [ %81, %298 ], [ %297, %296 ], [ %81, %294 ], [ %81, %292 ], [ %81, %290 ], [ %81, %288 ], [ %81, %286 ], [ %81, %284 ], [ %81, %282 ], [ %81, %280 ], [ %81, %278 ], [ %81, %276 ], [ %81, %274 ], [ %81, %272 ], [ %81, %270 ], [ %81, %268 ], [ %81, %266 ], [ %81, %264 ], [ %81, %262 ], [ %81, %260 ], [ %81, %258 ], [ %81, %256 ], [ %81, %89 ], [ %81, %254 ], [ %81, %58 ]
  %307 = phi i32 [ %79, %302 ], [ %79, %300 ], [ %79, %298 ], [ %79, %296 ], [ %79, %294 ], [ %293, %292 ], [ %79, %290 ], [ %79, %288 ], [ %79, %286 ], [ %79, %284 ], [ %79, %282 ], [ %79, %280 ], [ %79, %278 ], [ %79, %276 ], [ %79, %274 ], [ %79, %272 ], [ %79, %270 ], [ %79, %268 ], [ %79, %266 ], [ %79, %264 ], [ %79, %262 ], [ %79, %260 ], [ %79, %258 ], [ %79, %256 ], [ %79, %89 ], [ %79, %254 ], [ %79, %58 ]
  %308 = phi i32 [ %77, %302 ], [ %77, %300 ], [ %77, %298 ], [ %77, %296 ], [ %77, %294 ], [ %77, %292 ], [ %77, %290 ], [ %289, %288 ], [ %77, %286 ], [ %77, %284 ], [ %77, %282 ], [ %77, %280 ], [ %77, %278 ], [ %77, %276 ], [ %77, %274 ], [ %77, %272 ], [ %77, %270 ], [ %77, %268 ], [ %77, %266 ], [ %77, %264 ], [ %77, %262 ], [ %77, %260 ], [ %77, %258 ], [ %77, %256 ], [ %77, %89 ], [ %77, %254 ], [ %77, %58 ]
  %309 = phi i32 [ %75, %302 ], [ %75, %300 ], [ %75, %298 ], [ %75, %296 ], [ %75, %294 ], [ %75, %292 ], [ %75, %290 ], [ %75, %288 ], [ %75, %286 ], [ %285, %284 ], [ %75, %282 ], [ %75, %280 ], [ %75, %278 ], [ %75, %276 ], [ %75, %274 ], [ %75, %272 ], [ %75, %270 ], [ %75, %268 ], [ %75, %266 ], [ %75, %264 ], [ %75, %262 ], [ %75, %260 ], [ %75, %258 ], [ %75, %256 ], [ %75, %89 ], [ %75, %254 ], [ %75, %58 ]
  %310 = phi i32 [ %73, %302 ], [ %73, %300 ], [ %73, %298 ], [ %73, %296 ], [ %73, %294 ], [ %73, %292 ], [ %73, %290 ], [ %73, %288 ], [ %73, %286 ], [ %73, %284 ], [ %73, %282 ], [ %281, %280 ], [ %73, %278 ], [ %73, %276 ], [ %73, %274 ], [ %73, %272 ], [ %73, %270 ], [ %73, %268 ], [ %73, %266 ], [ %73, %264 ], [ %73, %262 ], [ %73, %260 ], [ %73, %258 ], [ %73, %256 ], [ %73, %89 ], [ %73, %254 ], [ %73, %58 ]
  %311 = phi i32 [ %71, %302 ], [ %71, %300 ], [ %71, %298 ], [ %71, %296 ], [ %71, %294 ], [ %71, %292 ], [ %71, %290 ], [ %71, %288 ], [ %71, %286 ], [ %71, %284 ], [ %71, %282 ], [ %71, %280 ], [ %71, %278 ], [ %277, %276 ], [ %71, %274 ], [ %71, %272 ], [ %71, %270 ], [ %71, %268 ], [ %71, %266 ], [ %71, %264 ], [ %71, %262 ], [ %71, %260 ], [ %71, %258 ], [ %71, %256 ], [ %71, %89 ], [ %71, %254 ], [ %71, %58 ]
  %312 = phi i32 [ %69, %302 ], [ %69, %300 ], [ %69, %298 ], [ %69, %296 ], [ %69, %294 ], [ %69, %292 ], [ %69, %290 ], [ %69, %288 ], [ %69, %286 ], [ %69, %284 ], [ %69, %282 ], [ %69, %280 ], [ %69, %278 ], [ %69, %276 ], [ %69, %274 ], [ %273, %272 ], [ %69, %270 ], [ %69, %268 ], [ %69, %266 ], [ %69, %264 ], [ %69, %262 ], [ %69, %260 ], [ %69, %258 ], [ %69, %256 ], [ %69, %89 ], [ %69, %254 ], [ %69, %58 ]
  %313 = phi i32 [ %67, %302 ], [ %67, %300 ], [ %67, %298 ], [ %67, %296 ], [ %67, %294 ], [ %67, %292 ], [ %67, %290 ], [ %67, %288 ], [ %67, %286 ], [ %67, %284 ], [ %67, %282 ], [ %67, %280 ], [ %67, %278 ], [ %67, %276 ], [ %67, %274 ], [ %67, %272 ], [ %67, %270 ], [ %269, %268 ], [ %67, %266 ], [ %67, %264 ], [ %67, %262 ], [ %67, %260 ], [ %67, %258 ], [ %67, %256 ], [ %67, %89 ], [ %67, %254 ], [ %67, %58 ]
  %314 = phi i32 [ %65, %302 ], [ %65, %300 ], [ %65, %298 ], [ %65, %296 ], [ %65, %294 ], [ %65, %292 ], [ %65, %290 ], [ %65, %288 ], [ %65, %286 ], [ %65, %284 ], [ %65, %282 ], [ %65, %280 ], [ %65, %278 ], [ %65, %276 ], [ %65, %274 ], [ %65, %272 ], [ %65, %270 ], [ %65, %268 ], [ %65, %266 ], [ %265, %264 ], [ %65, %262 ], [ %65, %260 ], [ %65, %258 ], [ %65, %256 ], [ %65, %89 ], [ %65, %254 ], [ %65, %58 ]
  %315 = phi i32 [ %63, %302 ], [ %63, %300 ], [ %63, %298 ], [ %63, %296 ], [ %63, %294 ], [ %63, %292 ], [ %63, %290 ], [ %63, %288 ], [ %63, %286 ], [ %63, %284 ], [ %63, %282 ], [ %63, %280 ], [ %63, %278 ], [ %63, %276 ], [ %63, %274 ], [ %63, %272 ], [ %63, %270 ], [ %63, %268 ], [ %63, %266 ], [ %63, %264 ], [ %63, %262 ], [ %261, %260 ], [ %63, %258 ], [ %63, %256 ], [ %63, %89 ], [ %63, %254 ], [ %63, %58 ]
  %316 = phi i32 [ %61, %302 ], [ %61, %300 ], [ %61, %298 ], [ %61, %296 ], [ %61, %294 ], [ %61, %292 ], [ %61, %290 ], [ %61, %288 ], [ %61, %286 ], [ %61, %284 ], [ %61, %282 ], [ %61, %280 ], [ %61, %278 ], [ %61, %276 ], [ %61, %274 ], [ %61, %272 ], [ %61, %270 ], [ %61, %268 ], [ %61, %266 ], [ %61, %264 ], [ %61, %262 ], [ %61, %260 ], [ %61, %258 ], [ %257, %256 ], [ %61, %89 ], [ %61, %254 ], [ %61, %58 ]
  %317 = phi i32 [ %59, %302 ], [ %59, %300 ], [ %59, %298 ], [ %59, %296 ], [ %59, %294 ], [ %59, %292 ], [ %59, %290 ], [ %59, %288 ], [ %59, %286 ], [ %59, %284 ], [ %59, %282 ], [ %59, %280 ], [ %59, %278 ], [ %59, %276 ], [ %59, %274 ], [ %59, %272 ], [ %59, %270 ], [ %59, %268 ], [ %59, %266 ], [ %59, %264 ], [ %59, %262 ], [ %59, %260 ], [ %59, %258 ], [ %59, %256 ], [ %90, %89 ], [ %59, %254 ], [ %59, %58 ]
  %318 = phi i32 [ %60, %302 ], [ %60, %300 ], [ %60, %298 ], [ %60, %296 ], [ %60, %294 ], [ %60, %292 ], [ %60, %290 ], [ %60, %288 ], [ %60, %286 ], [ %60, %284 ], [ %60, %282 ], [ %60, %280 ], [ %60, %278 ], [ %60, %276 ], [ %60, %274 ], [ %60, %272 ], [ %60, %270 ], [ %60, %268 ], [ %60, %266 ], [ %60, %264 ], [ %60, %262 ], [ %60, %260 ], [ %60, %258 ], [ %60, %256 ], [ %60, %89 ], [ %255, %254 ], [ %60, %58 ]
  %319 = phi i32 [ %62, %302 ], [ %62, %300 ], [ %62, %298 ], [ %62, %296 ], [ %62, %294 ], [ %62, %292 ], [ %62, %290 ], [ %62, %288 ], [ %62, %286 ], [ %62, %284 ], [ %62, %282 ], [ %62, %280 ], [ %62, %278 ], [ %62, %276 ], [ %62, %274 ], [ %62, %272 ], [ %62, %270 ], [ %62, %268 ], [ %62, %266 ], [ %62, %264 ], [ %62, %262 ], [ %62, %260 ], [ %259, %258 ], [ %62, %256 ], [ %62, %89 ], [ %62, %254 ], [ %62, %58 ]
  %320 = phi i32 [ %64, %302 ], [ %64, %300 ], [ %64, %298 ], [ %64, %296 ], [ %64, %294 ], [ %64, %292 ], [ %64, %290 ], [ %64, %288 ], [ %64, %286 ], [ %64, %284 ], [ %64, %282 ], [ %64, %280 ], [ %64, %278 ], [ %64, %276 ], [ %64, %274 ], [ %64, %272 ], [ %64, %270 ], [ %64, %268 ], [ %64, %266 ], [ %64, %264 ], [ %263, %262 ], [ %64, %260 ], [ %64, %258 ], [ %64, %256 ], [ %64, %89 ], [ %64, %254 ], [ %64, %58 ]
  %321 = phi i32 [ %66, %302 ], [ %66, %300 ], [ %66, %298 ], [ %66, %296 ], [ %66, %294 ], [ %66, %292 ], [ %66, %290 ], [ %66, %288 ], [ %66, %286 ], [ %66, %284 ], [ %66, %282 ], [ %66, %280 ], [ %66, %278 ], [ %66, %276 ], [ %66, %274 ], [ %66, %272 ], [ %66, %270 ], [ %66, %268 ], [ %267, %266 ], [ %66, %264 ], [ %66, %262 ], [ %66, %260 ], [ %66, %258 ], [ %66, %256 ], [ %66, %89 ], [ %66, %254 ], [ %66, %58 ]
  %322 = phi i32 [ %68, %302 ], [ %68, %300 ], [ %68, %298 ], [ %68, %296 ], [ %68, %294 ], [ %68, %292 ], [ %68, %290 ], [ %68, %288 ], [ %68, %286 ], [ %68, %284 ], [ %68, %282 ], [ %68, %280 ], [ %68, %278 ], [ %68, %276 ], [ %68, %274 ], [ %68, %272 ], [ %271, %270 ], [ %68, %268 ], [ %68, %266 ], [ %68, %264 ], [ %68, %262 ], [ %68, %260 ], [ %68, %258 ], [ %68, %256 ], [ %68, %89 ], [ %68, %254 ], [ %68, %58 ]
  %323 = phi i32 [ %70, %302 ], [ %70, %300 ], [ %70, %298 ], [ %70, %296 ], [ %70, %294 ], [ %70, %292 ], [ %70, %290 ], [ %70, %288 ], [ %70, %286 ], [ %70, %284 ], [ %70, %282 ], [ %70, %280 ], [ %70, %278 ], [ %70, %276 ], [ %275, %274 ], [ %70, %272 ], [ %70, %270 ], [ %70, %268 ], [ %70, %266 ], [ %70, %264 ], [ %70, %262 ], [ %70, %260 ], [ %70, %258 ], [ %70, %256 ], [ %70, %89 ], [ %70, %254 ], [ %70, %58 ]
  %324 = phi i32 [ %72, %302 ], [ %72, %300 ], [ %72, %298 ], [ %72, %296 ], [ %72, %294 ], [ %72, %292 ], [ %72, %290 ], [ %72, %288 ], [ %72, %286 ], [ %72, %284 ], [ %72, %282 ], [ %72, %280 ], [ %279, %278 ], [ %72, %276 ], [ %72, %274 ], [ %72, %272 ], [ %72, %270 ], [ %72, %268 ], [ %72, %266 ], [ %72, %264 ], [ %72, %262 ], [ %72, %260 ], [ %72, %258 ], [ %72, %256 ], [ %72, %89 ], [ %72, %254 ], [ %72, %58 ]
  %325 = phi i32 [ %74, %302 ], [ %74, %300 ], [ %74, %298 ], [ %74, %296 ], [ %74, %294 ], [ %74, %292 ], [ %74, %290 ], [ %74, %288 ], [ %74, %286 ], [ %74, %284 ], [ %283, %282 ], [ %74, %280 ], [ %74, %278 ], [ %74, %276 ], [ %74, %274 ], [ %74, %272 ], [ %74, %270 ], [ %74, %268 ], [ %74, %266 ], [ %74, %264 ], [ %74, %262 ], [ %74, %260 ], [ %74, %258 ], [ %74, %256 ], [ %74, %89 ], [ %74, %254 ], [ %74, %58 ]
  %326 = phi i32 [ %76, %302 ], [ %76, %300 ], [ %76, %298 ], [ %76, %296 ], [ %76, %294 ], [ %76, %292 ], [ %76, %290 ], [ %76, %288 ], [ %287, %286 ], [ %76, %284 ], [ %76, %282 ], [ %76, %280 ], [ %76, %278 ], [ %76, %276 ], [ %76, %274 ], [ %76, %272 ], [ %76, %270 ], [ %76, %268 ], [ %76, %266 ], [ %76, %264 ], [ %76, %262 ], [ %76, %260 ], [ %76, %258 ], [ %76, %256 ], [ %76, %89 ], [ %76, %254 ], [ %76, %58 ]
  %327 = phi i32 [ %78, %302 ], [ %78, %300 ], [ %78, %298 ], [ %78, %296 ], [ %78, %294 ], [ %78, %292 ], [ %291, %290 ], [ %78, %288 ], [ %78, %286 ], [ %78, %284 ], [ %78, %282 ], [ %78, %280 ], [ %78, %278 ], [ %78, %276 ], [ %78, %274 ], [ %78, %272 ], [ %78, %270 ], [ %78, %268 ], [ %78, %266 ], [ %78, %264 ], [ %78, %262 ], [ %78, %260 ], [ %78, %258 ], [ %78, %256 ], [ %78, %89 ], [ %78, %254 ], [ %78, %58 ]
  %328 = phi i32 [ %80, %302 ], [ %80, %300 ], [ %80, %298 ], [ %80, %296 ], [ %295, %294 ], [ %80, %292 ], [ %80, %290 ], [ %80, %288 ], [ %80, %286 ], [ %80, %284 ], [ %80, %282 ], [ %80, %280 ], [ %80, %278 ], [ %80, %276 ], [ %80, %274 ], [ %80, %272 ], [ %80, %270 ], [ %80, %268 ], [ %80, %266 ], [ %80, %264 ], [ %80, %262 ], [ %80, %260 ], [ %80, %258 ], [ %80, %256 ], [ %80, %89 ], [ %80, %254 ], [ %80, %58 ]
  %329 = phi i32 [ %82, %302 ], [ %82, %300 ], [ %299, %298 ], [ %82, %296 ], [ %82, %294 ], [ %82, %292 ], [ %82, %290 ], [ %82, %288 ], [ %82, %286 ], [ %82, %284 ], [ %82, %282 ], [ %82, %280 ], [ %82, %278 ], [ %82, %276 ], [ %82, %274 ], [ %82, %272 ], [ %82, %270 ], [ %82, %268 ], [ %82, %266 ], [ %82, %264 ], [ %82, %262 ], [ %82, %260 ], [ %82, %258 ], [ %82, %256 ], [ %82, %89 ], [ %82, %254 ], [ %82, %58 ]
  %330 = phi i32 [ %303, %302 ], [ %84, %300 ], [ %84, %298 ], [ %84, %296 ], [ %84, %294 ], [ %84, %292 ], [ %84, %290 ], [ %84, %288 ], [ %84, %286 ], [ %84, %284 ], [ %84, %282 ], [ %84, %280 ], [ %84, %278 ], [ %84, %276 ], [ %84, %274 ], [ %84, %272 ], [ %84, %270 ], [ %84, %268 ], [ %84, %266 ], [ %84, %264 ], [ %84, %262 ], [ %84, %260 ], [ %84, %258 ], [ %84, %256 ], [ %84, %89 ], [ %84, %254 ], [ %84, %58 ]
  %331 = add nuw nsw i64 %85, 1
  %332 = icmp eq i64 %331, %57
  br i1 %332, label %91, label %58, !llvm.loop !15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
