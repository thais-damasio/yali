; ModuleID = 'source-C-CXX/1/1064.c'
source_filename = "source-C-CXX/1/1064.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.book = type { i32, [26 x i8], %struct.book* }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #5
  %3 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %4 = call noalias align 16 dereferenceable_or_null(100) i8* @malloc(i64 100) #5
  %5 = bitcast i8* %4 to %struct.book*
  %6 = getelementptr inbounds %struct.book, %struct.book* %5, i64 0, i32 0
  %7 = getelementptr inbounds %struct.book, %struct.book* %5, i64 0, i32 1, i64 0
  %8 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* %6, i8* nonnull %7)
  %9 = load i32, i32* %1, align 4, !tbaa !5
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %0
  %12 = getelementptr inbounds %struct.book, %struct.book* %5, i64 0, i32 2
  store %struct.book* null, %struct.book** %12, align 16, !tbaa !9
  br label %143

13:                                               ; preds = %0
  %14 = icmp eq i32 %9, 1
  br i1 %14, label %42, label %15

15:                                               ; preds = %13
  %16 = call noalias align 16 dereferenceable_or_null(100) i8* @malloc(i64 100) #5
  %17 = bitcast i8* %16 to %struct.book*
  %18 = getelementptr inbounds %struct.book, %struct.book* %17, i64 0, i32 0
  %19 = getelementptr inbounds %struct.book, %struct.book* %17, i64 0, i32 1, i64 0
  %20 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* %18, i8* nonnull %19)
  %21 = load i32, i32* %1, align 4, !tbaa !5
  %22 = icmp sgt i32 %21, 1
  br i1 %22, label %23, label %42

23:                                               ; preds = %15, %38
  %24 = phi i32 [ %39, %38 ], [ %21, %15 ]
  %25 = phi %struct.book* [ %26, %38 ], [ %5, %15 ]
  %26 = phi %struct.book* [ %40, %38 ], [ %17, %15 ]
  %27 = phi i32 [ %28, %38 ], [ 1, %15 ]
  %28 = add nuw nsw i32 %27, 1
  %29 = getelementptr inbounds %struct.book, %struct.book* %25, i64 0, i32 2
  store %struct.book* %26, %struct.book** %29, align 8, !tbaa !9
  %30 = icmp slt i32 %28, %24
  br i1 %30, label %31, label %38

31:                                               ; preds = %23
  %32 = call noalias align 16 dereferenceable_or_null(100) i8* @malloc(i64 100) #5
  %33 = bitcast i8* %32 to %struct.book*
  %34 = getelementptr inbounds %struct.book, %struct.book* %33, i64 0, i32 0
  %35 = getelementptr inbounds %struct.book, %struct.book* %33, i64 0, i32 1, i64 0
  %36 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* %34, i8* nonnull %35)
  %37 = load i32, i32* %1, align 4, !tbaa !5
  br label %38

38:                                               ; preds = %31, %23
  %39 = phi i32 [ %37, %31 ], [ %24, %23 ]
  %40 = phi %struct.book* [ %33, %31 ], [ %26, %23 ]
  %41 = icmp slt i32 %28, %39
  br i1 %41, label %23, label %42, !llvm.loop !12

42:                                               ; preds = %38, %13, %15
  %43 = phi %struct.book* [ %5, %15 ], [ %5, %13 ], [ %26, %38 ]
  %44 = getelementptr inbounds %struct.book, %struct.book* %43, i64 0, i32 2
  store %struct.book* null, %struct.book** %44, align 8, !tbaa !9
  %45 = icmp eq i8* %4, null
  br i1 %45, label %143, label %46

46:                                               ; preds = %42, %113
  %47 = phi i32 [ %114, %113 ], [ 0, %42 ]
  %48 = phi i32 [ %115, %113 ], [ 0, %42 ]
  %49 = phi i32 [ %116, %113 ], [ 0, %42 ]
  %50 = phi i32 [ %117, %113 ], [ 0, %42 ]
  %51 = phi i32 [ %118, %113 ], [ 0, %42 ]
  %52 = phi i32 [ %119, %113 ], [ 0, %42 ]
  %53 = phi i32 [ %120, %113 ], [ 0, %42 ]
  %54 = phi i32 [ %121, %113 ], [ 0, %42 ]
  %55 = phi i32 [ %122, %113 ], [ 0, %42 ]
  %56 = phi i32 [ %123, %113 ], [ 0, %42 ]
  %57 = phi i32 [ %124, %113 ], [ 0, %42 ]
  %58 = phi i32 [ %125, %113 ], [ 0, %42 ]
  %59 = phi i32 [ %126, %113 ], [ 0, %42 ]
  %60 = phi i32 [ %127, %113 ], [ 0, %42 ]
  %61 = phi i32 [ %128, %113 ], [ 0, %42 ]
  %62 = phi i32 [ %129, %113 ], [ 0, %42 ]
  %63 = phi i32 [ %130, %113 ], [ 0, %42 ]
  %64 = phi i32 [ %131, %113 ], [ 0, %42 ]
  %65 = phi i32 [ %132, %113 ], [ 0, %42 ]
  %66 = phi i32 [ %133, %113 ], [ 0, %42 ]
  %67 = phi i32 [ %134, %113 ], [ 0, %42 ]
  %68 = phi i32 [ %135, %113 ], [ 0, %42 ]
  %69 = phi i32 [ %136, %113 ], [ 0, %42 ]
  %70 = phi i32 [ %137, %113 ], [ 0, %42 ]
  %71 = phi i32 [ %138, %113 ], [ 0, %42 ]
  %72 = phi i32 [ %139, %113 ], [ 0, %42 ]
  %73 = phi %struct.book* [ %141, %113 ], [ %5, %42 ]
  %74 = getelementptr inbounds %struct.book, %struct.book* %73, i64 0, i32 1, i64 0
  %75 = call i64 @strlen(i8* noundef nonnull %74) #6
  %76 = trunc i64 %75 to i32
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %113

78:                                               ; preds = %46
  %79 = and i64 %75, 4294967295
  br label %80

80:                                               ; preds = %78, %324
  %81 = phi i32 [ %47, %78 ], [ %337, %324 ]
  %82 = phi i32 [ %48, %78 ], [ %338, %324 ]
  %83 = phi i32 [ %49, %78 ], [ %336, %324 ]
  %84 = phi i32 [ %50, %78 ], [ %339, %324 ]
  %85 = phi i32 [ %51, %78 ], [ %335, %324 ]
  %86 = phi i32 [ %52, %78 ], [ %340, %324 ]
  %87 = phi i32 [ %53, %78 ], [ %334, %324 ]
  %88 = phi i32 [ %54, %78 ], [ %341, %324 ]
  %89 = phi i32 [ %55, %78 ], [ %333, %324 ]
  %90 = phi i32 [ %56, %78 ], [ %342, %324 ]
  %91 = phi i32 [ %57, %78 ], [ %332, %324 ]
  %92 = phi i32 [ %58, %78 ], [ %343, %324 ]
  %93 = phi i32 [ %59, %78 ], [ %331, %324 ]
  %94 = phi i32 [ %60, %78 ], [ %344, %324 ]
  %95 = phi i32 [ %61, %78 ], [ %330, %324 ]
  %96 = phi i32 [ %62, %78 ], [ %345, %324 ]
  %97 = phi i32 [ %63, %78 ], [ %329, %324 ]
  %98 = phi i32 [ %64, %78 ], [ %346, %324 ]
  %99 = phi i32 [ %65, %78 ], [ %328, %324 ]
  %100 = phi i32 [ %66, %78 ], [ %347, %324 ]
  %101 = phi i32 [ %67, %78 ], [ %327, %324 ]
  %102 = phi i32 [ %68, %78 ], [ %348, %324 ]
  %103 = phi i32 [ %69, %78 ], [ %326, %324 ]
  %104 = phi i32 [ %70, %78 ], [ %349, %324 ]
  %105 = phi i32 [ %71, %78 ], [ %325, %324 ]
  %106 = phi i32 [ %72, %78 ], [ %350, %324 ]
  %107 = phi i64 [ 0, %78 ], [ %351, %324 ]
  %108 = getelementptr inbounds %struct.book, %struct.book* %73, i64 0, i32 1, i64 %107
  %109 = load i8, i8* %108, align 1, !tbaa !15
  %110 = sext i8 %109 to i32
  switch i32 %110, label %324 [
    i32 64, label %111
    i32 65, label %274
    i32 66, label %276
    i32 67, label %278
    i32 68, label %280
    i32 69, label %282
    i32 70, label %284
    i32 71, label %286
    i32 72, label %288
    i32 73, label %290
    i32 74, label %292
    i32 75, label %294
    i32 76, label %296
    i32 77, label %298
    i32 78, label %300
    i32 79, label %302
    i32 80, label %304
    i32 81, label %306
    i32 82, label %308
    i32 83, label %310
    i32 84, label %312
    i32 85, label %314
    i32 86, label %316
    i32 87, label %318
    i32 88, label %320
    i32 89, label %322
  ]

111:                                              ; preds = %80
  %112 = add nsw i32 %81, 1
  br label %324

113:                                              ; preds = %324, %46
  %114 = phi i32 [ %47, %46 ], [ %337, %324 ]
  %115 = phi i32 [ %48, %46 ], [ %338, %324 ]
  %116 = phi i32 [ %49, %46 ], [ %336, %324 ]
  %117 = phi i32 [ %50, %46 ], [ %339, %324 ]
  %118 = phi i32 [ %51, %46 ], [ %335, %324 ]
  %119 = phi i32 [ %52, %46 ], [ %340, %324 ]
  %120 = phi i32 [ %53, %46 ], [ %334, %324 ]
  %121 = phi i32 [ %54, %46 ], [ %341, %324 ]
  %122 = phi i32 [ %55, %46 ], [ %333, %324 ]
  %123 = phi i32 [ %56, %46 ], [ %342, %324 ]
  %124 = phi i32 [ %57, %46 ], [ %332, %324 ]
  %125 = phi i32 [ %58, %46 ], [ %343, %324 ]
  %126 = phi i32 [ %59, %46 ], [ %331, %324 ]
  %127 = phi i32 [ %60, %46 ], [ %344, %324 ]
  %128 = phi i32 [ %61, %46 ], [ %330, %324 ]
  %129 = phi i32 [ %62, %46 ], [ %345, %324 ]
  %130 = phi i32 [ %63, %46 ], [ %329, %324 ]
  %131 = phi i32 [ %64, %46 ], [ %346, %324 ]
  %132 = phi i32 [ %65, %46 ], [ %328, %324 ]
  %133 = phi i32 [ %66, %46 ], [ %347, %324 ]
  %134 = phi i32 [ %67, %46 ], [ %327, %324 ]
  %135 = phi i32 [ %68, %46 ], [ %348, %324 ]
  %136 = phi i32 [ %69, %46 ], [ %326, %324 ]
  %137 = phi i32 [ %70, %46 ], [ %349, %324 ]
  %138 = phi i32 [ %71, %46 ], [ %325, %324 ]
  %139 = phi i32 [ %72, %46 ], [ %350, %324 ]
  %140 = getelementptr inbounds %struct.book, %struct.book* %73, i64 0, i32 2
  %141 = load %struct.book*, %struct.book** %140, align 8, !tbaa !9
  %142 = icmp eq %struct.book* %141, null
  br i1 %142, label %143, label %46, !llvm.loop !16

143:                                              ; preds = %113, %11, %42
  %144 = phi i1 [ true, %42 ], [ true, %11 ], [ %45, %113 ]
  %145 = phi %struct.book* [ null, %42 ], [ null, %11 ], [ %5, %113 ]
  %146 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %114, %113 ]
  %147 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %115, %113 ]
  %148 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %116, %113 ]
  %149 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %117, %113 ]
  %150 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %118, %113 ]
  %151 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %119, %113 ]
  %152 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %120, %113 ]
  %153 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %121, %113 ]
  %154 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %122, %113 ]
  %155 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %123, %113 ]
  %156 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %124, %113 ]
  %157 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %125, %113 ]
  %158 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %126, %113 ]
  %159 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %127, %113 ]
  %160 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %128, %113 ]
  %161 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %129, %113 ]
  %162 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %130, %113 ]
  %163 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %131, %113 ]
  %164 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %132, %113 ]
  %165 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %133, %113 ]
  %166 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %134, %113 ]
  %167 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %135, %113 ]
  %168 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %136, %113 ]
  %169 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %137, %113 ]
  %170 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %138, %113 ]
  %171 = phi i32 [ 0, %42 ], [ 0, %11 ], [ %139, %113 ]
  %172 = icmp sgt i32 %147, %146
  %173 = select i1 %172, i32 %147, i32 %146
  %174 = icmp sgt i32 %148, %173
  %175 = select i1 %174, i32 %148, i32 %173
  %176 = icmp sgt i32 %149, %175
  %177 = select i1 %176, i32 %149, i32 %175
  %178 = icmp sgt i32 %150, %177
  %179 = select i1 %178, i32 %150, i32 %177
  %180 = icmp sgt i32 %151, %179
  %181 = select i1 %180, i32 %151, i32 %179
  %182 = icmp sgt i32 %152, %181
  %183 = select i1 %182, i32 %152, i32 %181
  %184 = icmp sgt i32 %153, %183
  %185 = select i1 %184, i32 %153, i32 %183
  %186 = icmp sgt i32 %154, %185
  %187 = select i1 %186, i32 %154, i32 %185
  %188 = icmp sgt i32 %155, %187
  %189 = select i1 %188, i32 %155, i32 %187
  %190 = icmp sgt i32 %156, %189
  %191 = select i1 %190, i32 %156, i32 %189
  %192 = icmp sgt i32 %157, %191
  %193 = select i1 %192, i32 %157, i32 %191
  %194 = icmp sgt i32 %158, %193
  %195 = select i1 %194, i32 %158, i32 %193
  %196 = icmp sgt i32 %159, %195
  %197 = select i1 %196, i32 %159, i32 %195
  %198 = icmp sgt i32 %160, %197
  %199 = select i1 %198, i32 %160, i32 %197
  %200 = icmp sgt i32 %161, %199
  %201 = select i1 %200, i32 %161, i32 %199
  %202 = icmp sgt i32 %162, %201
  %203 = select i1 %202, i32 %162, i32 %201
  %204 = icmp sgt i32 %163, %203
  %205 = select i1 %204, i32 %163, i32 %203
  %206 = icmp sgt i32 %164, %205
  %207 = select i1 %206, i32 %164, i32 %205
  %208 = icmp sgt i32 %165, %207
  %209 = select i1 %208, i32 %165, i32 %207
  %210 = icmp sgt i32 %166, %209
  %211 = select i1 %210, i32 %166, i32 %209
  %212 = icmp sgt i32 %167, %211
  %213 = select i1 %212, i32 %167, i32 %211
  %214 = icmp sgt i32 %168, %213
  %215 = select i1 %214, i32 %168, i32 %213
  %216 = icmp sgt i32 %169, %215
  %217 = select i1 %216, i32 %169, i32 %215
  %218 = icmp sgt i32 %170, %217
  %219 = select i1 %218, i32 %170, i32 %217
  %220 = icmp sgt i32 %171, %219
  %221 = select i1 %220, i32 %171, i32 %219
  %222 = select i1 %174, i32 66, i32 65
  %223 = select i1 %176, i32 67, i32 %222
  %224 = select i1 %178, i32 68, i32 %223
  %225 = select i1 %180, i32 69, i32 %224
  %226 = select i1 %182, i32 70, i32 %225
  %227 = select i1 %184, i32 71, i32 %226
  %228 = select i1 %186, i32 72, i32 %227
  %229 = select i1 %188, i32 73, i32 %228
  %230 = select i1 %190, i32 74, i32 %229
  %231 = select i1 %192, i32 75, i32 %230
  %232 = select i1 %194, i32 76, i32 %231
  %233 = select i1 %196, i32 77, i32 %232
  %234 = select i1 %198, i32 78, i32 %233
  %235 = select i1 %200, i32 79, i32 %234
  %236 = select i1 %202, i32 80, i32 %235
  %237 = select i1 %204, i32 81, i32 %236
  %238 = select i1 %206, i32 82, i32 %237
  %239 = select i1 %208, i32 83, i32 %238
  %240 = select i1 %210, i32 84, i32 %239
  %241 = select i1 %212, i32 85, i32 %240
  %242 = select i1 %214, i32 86, i32 %241
  %243 = select i1 %216, i32 87, i32 %242
  %244 = select i1 %218, i32 88, i32 %243
  %245 = select i1 %220, i32 89, i32 %244
  %246 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %245)
  %247 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %221)
  br i1 %144, label %273, label %248

248:                                              ; preds = %143, %269
  %249 = phi %struct.book* [ %271, %269 ], [ %145, %143 ]
  %250 = getelementptr inbounds %struct.book, %struct.book* %249, i64 0, i32 1, i64 0
  %251 = call i64 @strlen(i8* noundef nonnull %250) #6
  %252 = trunc i64 %251 to i32
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %269

254:                                              ; preds = %248
  %255 = and i64 %251, 4294967295
  br label %258

256:                                              ; preds = %258
  %257 = icmp eq i64 %264, %255
  br i1 %257, label %269, label %258, !llvm.loop !17

258:                                              ; preds = %254, %256
  %259 = phi i64 [ 0, %254 ], [ %264, %256 ]
  %260 = getelementptr inbounds %struct.book, %struct.book* %249, i64 0, i32 1, i64 %259
  %261 = load i8, i8* %260, align 1, !tbaa !15
  %262 = sext i8 %261 to i32
  %263 = icmp eq i32 %245, %262
  %264 = add nuw nsw i64 %259, 1
  br i1 %263, label %265, label %256

265:                                              ; preds = %258
  %266 = getelementptr inbounds %struct.book, %struct.book* %249, i64 0, i32 0
  %267 = load i32, i32* %266, align 8, !tbaa !18
  %268 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %267)
  br label %269

269:                                              ; preds = %256, %248, %265
  %270 = getelementptr inbounds %struct.book, %struct.book* %249, i64 0, i32 2
  %271 = load %struct.book*, %struct.book** %270, align 8, !tbaa !9
  %272 = icmp eq %struct.book* %271, null
  br i1 %272, label %273, label %248, !llvm.loop !19

273:                                              ; preds = %269, %143
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #5
  ret void

274:                                              ; preds = %80
  %275 = add nsw i32 %82, 1
  br label %324

276:                                              ; preds = %80
  %277 = add nsw i32 %83, 1
  br label %324

278:                                              ; preds = %80
  %279 = add nsw i32 %84, 1
  br label %324

280:                                              ; preds = %80
  %281 = add nsw i32 %85, 1
  br label %324

282:                                              ; preds = %80
  %283 = add nsw i32 %86, 1
  br label %324

284:                                              ; preds = %80
  %285 = add nsw i32 %87, 1
  br label %324

286:                                              ; preds = %80
  %287 = add nsw i32 %88, 1
  br label %324

288:                                              ; preds = %80
  %289 = add nsw i32 %89, 1
  br label %324

290:                                              ; preds = %80
  %291 = add nsw i32 %90, 1
  br label %324

292:                                              ; preds = %80
  %293 = add nsw i32 %91, 1
  br label %324

294:                                              ; preds = %80
  %295 = add nsw i32 %92, 1
  br label %324

296:                                              ; preds = %80
  %297 = add nsw i32 %93, 1
  br label %324

298:                                              ; preds = %80
  %299 = add nsw i32 %94, 1
  br label %324

300:                                              ; preds = %80
  %301 = add nsw i32 %95, 1
  br label %324

302:                                              ; preds = %80
  %303 = add nsw i32 %96, 1
  br label %324

304:                                              ; preds = %80
  %305 = add nsw i32 %97, 1
  br label %324

306:                                              ; preds = %80
  %307 = add nsw i32 %98, 1
  br label %324

308:                                              ; preds = %80
  %309 = add nsw i32 %99, 1
  br label %324

310:                                              ; preds = %80
  %311 = add nsw i32 %100, 1
  br label %324

312:                                              ; preds = %80
  %313 = add nsw i32 %101, 1
  br label %324

314:                                              ; preds = %80
  %315 = add nsw i32 %102, 1
  br label %324

316:                                              ; preds = %80
  %317 = add nsw i32 %103, 1
  br label %324

318:                                              ; preds = %80
  %319 = add nsw i32 %104, 1
  br label %324

320:                                              ; preds = %80
  %321 = add nsw i32 %105, 1
  br label %324

322:                                              ; preds = %80
  %323 = add nsw i32 %106, 1
  br label %324

324:                                              ; preds = %80, %274, %111, %276, %278, %280, %282, %284, %286, %288, %290, %292, %294, %296, %298, %300, %302, %304, %306, %308, %310, %312, %314, %316, %318, %320, %322
  %325 = phi i32 [ %105, %322 ], [ %321, %320 ], [ %105, %318 ], [ %105, %316 ], [ %105, %314 ], [ %105, %312 ], [ %105, %310 ], [ %105, %308 ], [ %105, %306 ], [ %105, %304 ], [ %105, %302 ], [ %105, %300 ], [ %105, %298 ], [ %105, %296 ], [ %105, %294 ], [ %105, %292 ], [ %105, %290 ], [ %105, %288 ], [ %105, %286 ], [ %105, %284 ], [ %105, %282 ], [ %105, %280 ], [ %105, %278 ], [ %105, %276 ], [ %105, %111 ], [ %105, %274 ], [ %105, %80 ]
  %326 = phi i32 [ %103, %322 ], [ %103, %320 ], [ %103, %318 ], [ %317, %316 ], [ %103, %314 ], [ %103, %312 ], [ %103, %310 ], [ %103, %308 ], [ %103, %306 ], [ %103, %304 ], [ %103, %302 ], [ %103, %300 ], [ %103, %298 ], [ %103, %296 ], [ %103, %294 ], [ %103, %292 ], [ %103, %290 ], [ %103, %288 ], [ %103, %286 ], [ %103, %284 ], [ %103, %282 ], [ %103, %280 ], [ %103, %278 ], [ %103, %276 ], [ %103, %111 ], [ %103, %274 ], [ %103, %80 ]
  %327 = phi i32 [ %101, %322 ], [ %101, %320 ], [ %101, %318 ], [ %101, %316 ], [ %101, %314 ], [ %313, %312 ], [ %101, %310 ], [ %101, %308 ], [ %101, %306 ], [ %101, %304 ], [ %101, %302 ], [ %101, %300 ], [ %101, %298 ], [ %101, %296 ], [ %101, %294 ], [ %101, %292 ], [ %101, %290 ], [ %101, %288 ], [ %101, %286 ], [ %101, %284 ], [ %101, %282 ], [ %101, %280 ], [ %101, %278 ], [ %101, %276 ], [ %101, %111 ], [ %101, %274 ], [ %101, %80 ]
  %328 = phi i32 [ %99, %322 ], [ %99, %320 ], [ %99, %318 ], [ %99, %316 ], [ %99, %314 ], [ %99, %312 ], [ %99, %310 ], [ %309, %308 ], [ %99, %306 ], [ %99, %304 ], [ %99, %302 ], [ %99, %300 ], [ %99, %298 ], [ %99, %296 ], [ %99, %294 ], [ %99, %292 ], [ %99, %290 ], [ %99, %288 ], [ %99, %286 ], [ %99, %284 ], [ %99, %282 ], [ %99, %280 ], [ %99, %278 ], [ %99, %276 ], [ %99, %111 ], [ %99, %274 ], [ %99, %80 ]
  %329 = phi i32 [ %97, %322 ], [ %97, %320 ], [ %97, %318 ], [ %97, %316 ], [ %97, %314 ], [ %97, %312 ], [ %97, %310 ], [ %97, %308 ], [ %97, %306 ], [ %305, %304 ], [ %97, %302 ], [ %97, %300 ], [ %97, %298 ], [ %97, %296 ], [ %97, %294 ], [ %97, %292 ], [ %97, %290 ], [ %97, %288 ], [ %97, %286 ], [ %97, %284 ], [ %97, %282 ], [ %97, %280 ], [ %97, %278 ], [ %97, %276 ], [ %97, %111 ], [ %97, %274 ], [ %97, %80 ]
  %330 = phi i32 [ %95, %322 ], [ %95, %320 ], [ %95, %318 ], [ %95, %316 ], [ %95, %314 ], [ %95, %312 ], [ %95, %310 ], [ %95, %308 ], [ %95, %306 ], [ %95, %304 ], [ %95, %302 ], [ %301, %300 ], [ %95, %298 ], [ %95, %296 ], [ %95, %294 ], [ %95, %292 ], [ %95, %290 ], [ %95, %288 ], [ %95, %286 ], [ %95, %284 ], [ %95, %282 ], [ %95, %280 ], [ %95, %278 ], [ %95, %276 ], [ %95, %111 ], [ %95, %274 ], [ %95, %80 ]
  %331 = phi i32 [ %93, %322 ], [ %93, %320 ], [ %93, %318 ], [ %93, %316 ], [ %93, %314 ], [ %93, %312 ], [ %93, %310 ], [ %93, %308 ], [ %93, %306 ], [ %93, %304 ], [ %93, %302 ], [ %93, %300 ], [ %93, %298 ], [ %297, %296 ], [ %93, %294 ], [ %93, %292 ], [ %93, %290 ], [ %93, %288 ], [ %93, %286 ], [ %93, %284 ], [ %93, %282 ], [ %93, %280 ], [ %93, %278 ], [ %93, %276 ], [ %93, %111 ], [ %93, %274 ], [ %93, %80 ]
  %332 = phi i32 [ %91, %322 ], [ %91, %320 ], [ %91, %318 ], [ %91, %316 ], [ %91, %314 ], [ %91, %312 ], [ %91, %310 ], [ %91, %308 ], [ %91, %306 ], [ %91, %304 ], [ %91, %302 ], [ %91, %300 ], [ %91, %298 ], [ %91, %296 ], [ %91, %294 ], [ %293, %292 ], [ %91, %290 ], [ %91, %288 ], [ %91, %286 ], [ %91, %284 ], [ %91, %282 ], [ %91, %280 ], [ %91, %278 ], [ %91, %276 ], [ %91, %111 ], [ %91, %274 ], [ %91, %80 ]
  %333 = phi i32 [ %89, %322 ], [ %89, %320 ], [ %89, %318 ], [ %89, %316 ], [ %89, %314 ], [ %89, %312 ], [ %89, %310 ], [ %89, %308 ], [ %89, %306 ], [ %89, %304 ], [ %89, %302 ], [ %89, %300 ], [ %89, %298 ], [ %89, %296 ], [ %89, %294 ], [ %89, %292 ], [ %89, %290 ], [ %289, %288 ], [ %89, %286 ], [ %89, %284 ], [ %89, %282 ], [ %89, %280 ], [ %89, %278 ], [ %89, %276 ], [ %89, %111 ], [ %89, %274 ], [ %89, %80 ]
  %334 = phi i32 [ %87, %322 ], [ %87, %320 ], [ %87, %318 ], [ %87, %316 ], [ %87, %314 ], [ %87, %312 ], [ %87, %310 ], [ %87, %308 ], [ %87, %306 ], [ %87, %304 ], [ %87, %302 ], [ %87, %300 ], [ %87, %298 ], [ %87, %296 ], [ %87, %294 ], [ %87, %292 ], [ %87, %290 ], [ %87, %288 ], [ %87, %286 ], [ %285, %284 ], [ %87, %282 ], [ %87, %280 ], [ %87, %278 ], [ %87, %276 ], [ %87, %111 ], [ %87, %274 ], [ %87, %80 ]
  %335 = phi i32 [ %85, %322 ], [ %85, %320 ], [ %85, %318 ], [ %85, %316 ], [ %85, %314 ], [ %85, %312 ], [ %85, %310 ], [ %85, %308 ], [ %85, %306 ], [ %85, %304 ], [ %85, %302 ], [ %85, %300 ], [ %85, %298 ], [ %85, %296 ], [ %85, %294 ], [ %85, %292 ], [ %85, %290 ], [ %85, %288 ], [ %85, %286 ], [ %85, %284 ], [ %85, %282 ], [ %281, %280 ], [ %85, %278 ], [ %85, %276 ], [ %85, %111 ], [ %85, %274 ], [ %85, %80 ]
  %336 = phi i32 [ %83, %322 ], [ %83, %320 ], [ %83, %318 ], [ %83, %316 ], [ %83, %314 ], [ %83, %312 ], [ %83, %310 ], [ %83, %308 ], [ %83, %306 ], [ %83, %304 ], [ %83, %302 ], [ %83, %300 ], [ %83, %298 ], [ %83, %296 ], [ %83, %294 ], [ %83, %292 ], [ %83, %290 ], [ %83, %288 ], [ %83, %286 ], [ %83, %284 ], [ %83, %282 ], [ %83, %280 ], [ %83, %278 ], [ %277, %276 ], [ %83, %111 ], [ %83, %274 ], [ %83, %80 ]
  %337 = phi i32 [ %81, %322 ], [ %81, %320 ], [ %81, %318 ], [ %81, %316 ], [ %81, %314 ], [ %81, %312 ], [ %81, %310 ], [ %81, %308 ], [ %81, %306 ], [ %81, %304 ], [ %81, %302 ], [ %81, %300 ], [ %81, %298 ], [ %81, %296 ], [ %81, %294 ], [ %81, %292 ], [ %81, %290 ], [ %81, %288 ], [ %81, %286 ], [ %81, %284 ], [ %81, %282 ], [ %81, %280 ], [ %81, %278 ], [ %81, %276 ], [ %112, %111 ], [ %81, %274 ], [ %81, %80 ]
  %338 = phi i32 [ %82, %322 ], [ %82, %320 ], [ %82, %318 ], [ %82, %316 ], [ %82, %314 ], [ %82, %312 ], [ %82, %310 ], [ %82, %308 ], [ %82, %306 ], [ %82, %304 ], [ %82, %302 ], [ %82, %300 ], [ %82, %298 ], [ %82, %296 ], [ %82, %294 ], [ %82, %292 ], [ %82, %290 ], [ %82, %288 ], [ %82, %286 ], [ %82, %284 ], [ %82, %282 ], [ %82, %280 ], [ %82, %278 ], [ %82, %276 ], [ %82, %111 ], [ %275, %274 ], [ %82, %80 ]
  %339 = phi i32 [ %84, %322 ], [ %84, %320 ], [ %84, %318 ], [ %84, %316 ], [ %84, %314 ], [ %84, %312 ], [ %84, %310 ], [ %84, %308 ], [ %84, %306 ], [ %84, %304 ], [ %84, %302 ], [ %84, %300 ], [ %84, %298 ], [ %84, %296 ], [ %84, %294 ], [ %84, %292 ], [ %84, %290 ], [ %84, %288 ], [ %84, %286 ], [ %84, %284 ], [ %84, %282 ], [ %84, %280 ], [ %279, %278 ], [ %84, %276 ], [ %84, %111 ], [ %84, %274 ], [ %84, %80 ]
  %340 = phi i32 [ %86, %322 ], [ %86, %320 ], [ %86, %318 ], [ %86, %316 ], [ %86, %314 ], [ %86, %312 ], [ %86, %310 ], [ %86, %308 ], [ %86, %306 ], [ %86, %304 ], [ %86, %302 ], [ %86, %300 ], [ %86, %298 ], [ %86, %296 ], [ %86, %294 ], [ %86, %292 ], [ %86, %290 ], [ %86, %288 ], [ %86, %286 ], [ %86, %284 ], [ %283, %282 ], [ %86, %280 ], [ %86, %278 ], [ %86, %276 ], [ %86, %111 ], [ %86, %274 ], [ %86, %80 ]
  %341 = phi i32 [ %88, %322 ], [ %88, %320 ], [ %88, %318 ], [ %88, %316 ], [ %88, %314 ], [ %88, %312 ], [ %88, %310 ], [ %88, %308 ], [ %88, %306 ], [ %88, %304 ], [ %88, %302 ], [ %88, %300 ], [ %88, %298 ], [ %88, %296 ], [ %88, %294 ], [ %88, %292 ], [ %88, %290 ], [ %88, %288 ], [ %287, %286 ], [ %88, %284 ], [ %88, %282 ], [ %88, %280 ], [ %88, %278 ], [ %88, %276 ], [ %88, %111 ], [ %88, %274 ], [ %88, %80 ]
  %342 = phi i32 [ %90, %322 ], [ %90, %320 ], [ %90, %318 ], [ %90, %316 ], [ %90, %314 ], [ %90, %312 ], [ %90, %310 ], [ %90, %308 ], [ %90, %306 ], [ %90, %304 ], [ %90, %302 ], [ %90, %300 ], [ %90, %298 ], [ %90, %296 ], [ %90, %294 ], [ %90, %292 ], [ %291, %290 ], [ %90, %288 ], [ %90, %286 ], [ %90, %284 ], [ %90, %282 ], [ %90, %280 ], [ %90, %278 ], [ %90, %276 ], [ %90, %111 ], [ %90, %274 ], [ %90, %80 ]
  %343 = phi i32 [ %92, %322 ], [ %92, %320 ], [ %92, %318 ], [ %92, %316 ], [ %92, %314 ], [ %92, %312 ], [ %92, %310 ], [ %92, %308 ], [ %92, %306 ], [ %92, %304 ], [ %92, %302 ], [ %92, %300 ], [ %92, %298 ], [ %92, %296 ], [ %295, %294 ], [ %92, %292 ], [ %92, %290 ], [ %92, %288 ], [ %92, %286 ], [ %92, %284 ], [ %92, %282 ], [ %92, %280 ], [ %92, %278 ], [ %92, %276 ], [ %92, %111 ], [ %92, %274 ], [ %92, %80 ]
  %344 = phi i32 [ %94, %322 ], [ %94, %320 ], [ %94, %318 ], [ %94, %316 ], [ %94, %314 ], [ %94, %312 ], [ %94, %310 ], [ %94, %308 ], [ %94, %306 ], [ %94, %304 ], [ %94, %302 ], [ %94, %300 ], [ %299, %298 ], [ %94, %296 ], [ %94, %294 ], [ %94, %292 ], [ %94, %290 ], [ %94, %288 ], [ %94, %286 ], [ %94, %284 ], [ %94, %282 ], [ %94, %280 ], [ %94, %278 ], [ %94, %276 ], [ %94, %111 ], [ %94, %274 ], [ %94, %80 ]
  %345 = phi i32 [ %96, %322 ], [ %96, %320 ], [ %96, %318 ], [ %96, %316 ], [ %96, %314 ], [ %96, %312 ], [ %96, %310 ], [ %96, %308 ], [ %96, %306 ], [ %96, %304 ], [ %303, %302 ], [ %96, %300 ], [ %96, %298 ], [ %96, %296 ], [ %96, %294 ], [ %96, %292 ], [ %96, %290 ], [ %96, %288 ], [ %96, %286 ], [ %96, %284 ], [ %96, %282 ], [ %96, %280 ], [ %96, %278 ], [ %96, %276 ], [ %96, %111 ], [ %96, %274 ], [ %96, %80 ]
  %346 = phi i32 [ %98, %322 ], [ %98, %320 ], [ %98, %318 ], [ %98, %316 ], [ %98, %314 ], [ %98, %312 ], [ %98, %310 ], [ %98, %308 ], [ %307, %306 ], [ %98, %304 ], [ %98, %302 ], [ %98, %300 ], [ %98, %298 ], [ %98, %296 ], [ %98, %294 ], [ %98, %292 ], [ %98, %290 ], [ %98, %288 ], [ %98, %286 ], [ %98, %284 ], [ %98, %282 ], [ %98, %280 ], [ %98, %278 ], [ %98, %276 ], [ %98, %111 ], [ %98, %274 ], [ %98, %80 ]
  %347 = phi i32 [ %100, %322 ], [ %100, %320 ], [ %100, %318 ], [ %100, %316 ], [ %100, %314 ], [ %100, %312 ], [ %311, %310 ], [ %100, %308 ], [ %100, %306 ], [ %100, %304 ], [ %100, %302 ], [ %100, %300 ], [ %100, %298 ], [ %100, %296 ], [ %100, %294 ], [ %100, %292 ], [ %100, %290 ], [ %100, %288 ], [ %100, %286 ], [ %100, %284 ], [ %100, %282 ], [ %100, %280 ], [ %100, %278 ], [ %100, %276 ], [ %100, %111 ], [ %100, %274 ], [ %100, %80 ]
  %348 = phi i32 [ %102, %322 ], [ %102, %320 ], [ %102, %318 ], [ %102, %316 ], [ %315, %314 ], [ %102, %312 ], [ %102, %310 ], [ %102, %308 ], [ %102, %306 ], [ %102, %304 ], [ %102, %302 ], [ %102, %300 ], [ %102, %298 ], [ %102, %296 ], [ %102, %294 ], [ %102, %292 ], [ %102, %290 ], [ %102, %288 ], [ %102, %286 ], [ %102, %284 ], [ %102, %282 ], [ %102, %280 ], [ %102, %278 ], [ %102, %276 ], [ %102, %111 ], [ %102, %274 ], [ %102, %80 ]
  %349 = phi i32 [ %104, %322 ], [ %104, %320 ], [ %319, %318 ], [ %104, %316 ], [ %104, %314 ], [ %104, %312 ], [ %104, %310 ], [ %104, %308 ], [ %104, %306 ], [ %104, %304 ], [ %104, %302 ], [ %104, %300 ], [ %104, %298 ], [ %104, %296 ], [ %104, %294 ], [ %104, %292 ], [ %104, %290 ], [ %104, %288 ], [ %104, %286 ], [ %104, %284 ], [ %104, %282 ], [ %104, %280 ], [ %104, %278 ], [ %104, %276 ], [ %104, %111 ], [ %104, %274 ], [ %104, %80 ]
  %350 = phi i32 [ %323, %322 ], [ %106, %320 ], [ %106, %318 ], [ %106, %316 ], [ %106, %314 ], [ %106, %312 ], [ %106, %310 ], [ %106, %308 ], [ %106, %306 ], [ %106, %304 ], [ %106, %302 ], [ %106, %300 ], [ %106, %298 ], [ %106, %296 ], [ %106, %294 ], [ %106, %292 ], [ %106, %290 ], [ %106, %288 ], [ %106, %286 ], [ %106, %284 ], [ %106, %282 ], [ %106, %280 ], [ %106, %278 ], [ %106, %276 ], [ %106, %111 ], [ %106, %274 ], [ %106, %80 ]
  %351 = add nuw nsw i64 %107, 1
  %352 = icmp eq i64 %351, %79
  br i1 %352, label %113, label %80, !llvm.loop !20
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn
declare noalias noundef align 16 i8* @malloc(i64 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { inaccessiblememonly mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !11, i64 32}
!10 = !{!"book", !6, i64 0, !7, i64 4, !11, i64 32}
!11 = !{!"any pointer", !7, i64 0}
!12 = distinct !{!12, !13, !14}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.peeled.count", i32 1}
!15 = !{!7, !7, i64 0}
!16 = distinct !{!16, !13}
!17 = distinct !{!17, !13}
!18 = !{!10, !6, i64 0}
!19 = distinct !{!19, !13}
!20 = distinct !{!20, !13}
