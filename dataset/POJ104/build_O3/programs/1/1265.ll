; ModuleID = 'source-C-CXX/1/1265.c'
source_filename = "source-C-CXX/1/1265.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1000 x i32], align 16
  %3 = alloca [1000 x [26 x i8]], align 16
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #4
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %6 = bitcast [1000 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %6) #4
  %7 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26000, i8* nonnull %7) #4
  %8 = load i32, i32* %1, align 4, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %303

10:                                               ; preds = %0, %10
  %11 = phi i64 [ %15, %10 ], [ 0, %0 ]
  %12 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %11
  %13 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %11
  %14 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %12, [26 x i8]* nonnull %13)
  %15 = add nuw nsw i64 %11, 1
  %16 = load i32, i32* %1, align 4, !tbaa !5
  %17 = sext i32 %16 to i64
  %18 = icmp slt i64 %15, %17
  br i1 %18, label %10, label %19, !llvm.loop !9

19:                                               ; preds = %10
  %20 = icmp sgt i32 %16, 0
  br i1 %20, label %21, label %303

21:                                               ; preds = %19
  %22 = zext i32 %16 to i64
  br label %23

23:                                               ; preds = %21, %170
  %24 = phi i32 [ 0, %21 ], [ %171, %170 ]
  %25 = phi i32 [ 0, %21 ], [ %172, %170 ]
  %26 = phi i32 [ 0, %21 ], [ %173, %170 ]
  %27 = phi i32 [ 0, %21 ], [ %174, %170 ]
  %28 = phi i32 [ 0, %21 ], [ %175, %170 ]
  %29 = phi i32 [ 0, %21 ], [ %176, %170 ]
  %30 = phi i32 [ 0, %21 ], [ %177, %170 ]
  %31 = phi i32 [ 0, %21 ], [ %178, %170 ]
  %32 = phi i32 [ 0, %21 ], [ %179, %170 ]
  %33 = phi i32 [ 0, %21 ], [ %180, %170 ]
  %34 = phi i32 [ 0, %21 ], [ %181, %170 ]
  %35 = phi i32 [ 0, %21 ], [ %182, %170 ]
  %36 = phi i32 [ 0, %21 ], [ %183, %170 ]
  %37 = phi i32 [ 0, %21 ], [ %184, %170 ]
  %38 = phi i32 [ 0, %21 ], [ %185, %170 ]
  %39 = phi i32 [ 0, %21 ], [ %186, %170 ]
  %40 = phi i32 [ 0, %21 ], [ %187, %170 ]
  %41 = phi i32 [ 0, %21 ], [ %188, %170 ]
  %42 = phi i32 [ 0, %21 ], [ %189, %170 ]
  %43 = phi i32 [ 0, %21 ], [ %190, %170 ]
  %44 = phi i32 [ 0, %21 ], [ %191, %170 ]
  %45 = phi i32 [ 0, %21 ], [ %192, %170 ]
  %46 = phi i32 [ 0, %21 ], [ %193, %170 ]
  %47 = phi i32 [ 0, %21 ], [ %194, %170 ]
  %48 = phi i32 [ 0, %21 ], [ %195, %170 ]
  %49 = phi i32 [ 0, %21 ], [ %196, %170 ]
  %50 = phi i64 [ 0, %21 ], [ %197, %170 ]
  %51 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %50, i64 0
  %52 = call i64 @strlen(i8* noundef nonnull %51) #5
  %53 = trunc i64 %52 to i32
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %170

55:                                               ; preds = %23
  %56 = shl i64 %52, 32
  %57 = ashr exact i64 %56, 32
  br label %58

58:                                               ; preds = %55, %141
  %59 = phi i32 [ %24, %55 ], [ %142, %141 ]
  %60 = phi i32 [ %25, %55 ], [ %143, %141 ]
  %61 = phi i32 [ %26, %55 ], [ %144, %141 ]
  %62 = phi i32 [ %27, %55 ], [ %145, %141 ]
  %63 = phi i32 [ %28, %55 ], [ %146, %141 ]
  %64 = phi i32 [ %29, %55 ], [ %147, %141 ]
  %65 = phi i32 [ %30, %55 ], [ %148, %141 ]
  %66 = phi i32 [ %31, %55 ], [ %149, %141 ]
  %67 = phi i32 [ %32, %55 ], [ %150, %141 ]
  %68 = phi i32 [ %33, %55 ], [ %151, %141 ]
  %69 = phi i32 [ %34, %55 ], [ %152, %141 ]
  %70 = phi i32 [ %35, %55 ], [ %153, %141 ]
  %71 = phi i32 [ %36, %55 ], [ %154, %141 ]
  %72 = phi i32 [ %37, %55 ], [ %155, %141 ]
  %73 = phi i32 [ %38, %55 ], [ %156, %141 ]
  %74 = phi i32 [ %39, %55 ], [ %157, %141 ]
  %75 = phi i32 [ %40, %55 ], [ %158, %141 ]
  %76 = phi i32 [ %41, %55 ], [ %159, %141 ]
  %77 = phi i32 [ %42, %55 ], [ %160, %141 ]
  %78 = phi i32 [ %43, %55 ], [ %161, %141 ]
  %79 = phi i32 [ %44, %55 ], [ %162, %141 ]
  %80 = phi i32 [ %45, %55 ], [ %163, %141 ]
  %81 = phi i32 [ %46, %55 ], [ %164, %141 ]
  %82 = phi i32 [ %47, %55 ], [ %165, %141 ]
  %83 = phi i32 [ %48, %55 ], [ %166, %141 ]
  %84 = phi i32 [ %49, %55 ], [ %167, %141 ]
  %85 = phi i64 [ 0, %55 ], [ %168, %141 ]
  %86 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %50, i64 %85
  %87 = load i8, i8* %86, align 1, !tbaa !11
  %88 = sext i8 %87 to i32
  switch i32 %88, label %139 [
    i32 65, label %89
    i32 66, label %91
    i32 67, label %93
    i32 68, label %95
    i32 69, label %97
    i32 70, label %99
    i32 71, label %101
    i32 72, label %103
    i32 73, label %105
    i32 74, label %107
    i32 75, label %109
    i32 76, label %111
    i32 77, label %113
    i32 78, label %115
    i32 79, label %117
    i32 80, label %119
    i32 81, label %121
    i32 82, label %123
    i32 83, label %125
    i32 84, label %127
    i32 85, label %129
    i32 86, label %131
    i32 87, label %133
    i32 88, label %135
    i32 89, label %137
  ]

89:                                               ; preds = %58
  %90 = add nsw i32 %59, 1
  br label %141

91:                                               ; preds = %58
  %92 = add nsw i32 %60, 1
  br label %141

93:                                               ; preds = %58
  %94 = add nsw i32 %61, 1
  br label %141

95:                                               ; preds = %58
  %96 = add nsw i32 %62, 1
  br label %141

97:                                               ; preds = %58
  %98 = add nsw i32 %63, 1
  br label %141

99:                                               ; preds = %58
  %100 = add nsw i32 %64, 1
  br label %141

101:                                              ; preds = %58
  %102 = add nsw i32 %65, 1
  br label %141

103:                                              ; preds = %58
  %104 = add nsw i32 %66, 1
  br label %141

105:                                              ; preds = %58
  %106 = add nsw i32 %67, 1
  br label %141

107:                                              ; preds = %58
  %108 = add nsw i32 %68, 1
  br label %141

109:                                              ; preds = %58
  %110 = add nsw i32 %69, 1
  br label %141

111:                                              ; preds = %58
  %112 = add nsw i32 %70, 1
  br label %141

113:                                              ; preds = %58
  %114 = add nsw i32 %71, 1
  br label %141

115:                                              ; preds = %58
  %116 = add nsw i32 %72, 1
  br label %141

117:                                              ; preds = %58
  %118 = add nsw i32 %73, 1
  br label %141

119:                                              ; preds = %58
  %120 = add nsw i32 %74, 1
  br label %141

121:                                              ; preds = %58
  %122 = add nsw i32 %75, 1
  br label %141

123:                                              ; preds = %58
  %124 = add nsw i32 %76, 1
  br label %141

125:                                              ; preds = %58
  %126 = add nsw i32 %77, 1
  br label %141

127:                                              ; preds = %58
  %128 = add nsw i32 %78, 1
  br label %141

129:                                              ; preds = %58
  %130 = add nsw i32 %79, 1
  br label %141

131:                                              ; preds = %58
  %132 = add nsw i32 %80, 1
  br label %141

133:                                              ; preds = %58
  %134 = add nsw i32 %81, 1
  br label %141

135:                                              ; preds = %58
  %136 = add nsw i32 %82, 1
  br label %141

137:                                              ; preds = %58
  %138 = add nsw i32 %83, 1
  br label %141

139:                                              ; preds = %58
  %140 = add nsw i32 %84, 1
  br label %141

141:                                              ; preds = %89, %91, %93, %95, %97, %99, %101, %103, %105, %107, %109, %111, %113, %115, %117, %119, %121, %123, %125, %127, %129, %131, %133, %135, %137, %139
  %142 = phi i32 [ %59, %139 ], [ %59, %137 ], [ %59, %135 ], [ %59, %133 ], [ %59, %131 ], [ %59, %129 ], [ %59, %127 ], [ %59, %125 ], [ %59, %123 ], [ %59, %121 ], [ %59, %119 ], [ %59, %117 ], [ %59, %115 ], [ %59, %113 ], [ %59, %111 ], [ %59, %109 ], [ %59, %107 ], [ %59, %105 ], [ %59, %103 ], [ %59, %101 ], [ %59, %99 ], [ %59, %97 ], [ %59, %95 ], [ %59, %93 ], [ %59, %91 ], [ %90, %89 ]
  %143 = phi i32 [ %60, %139 ], [ %60, %137 ], [ %60, %135 ], [ %60, %133 ], [ %60, %131 ], [ %60, %129 ], [ %60, %127 ], [ %60, %125 ], [ %60, %123 ], [ %60, %121 ], [ %60, %119 ], [ %60, %117 ], [ %60, %115 ], [ %60, %113 ], [ %60, %111 ], [ %60, %109 ], [ %60, %107 ], [ %60, %105 ], [ %60, %103 ], [ %60, %101 ], [ %60, %99 ], [ %60, %97 ], [ %60, %95 ], [ %60, %93 ], [ %92, %91 ], [ %60, %89 ]
  %144 = phi i32 [ %61, %139 ], [ %61, %137 ], [ %61, %135 ], [ %61, %133 ], [ %61, %131 ], [ %61, %129 ], [ %61, %127 ], [ %61, %125 ], [ %61, %123 ], [ %61, %121 ], [ %61, %119 ], [ %61, %117 ], [ %61, %115 ], [ %61, %113 ], [ %61, %111 ], [ %61, %109 ], [ %61, %107 ], [ %61, %105 ], [ %61, %103 ], [ %61, %101 ], [ %61, %99 ], [ %61, %97 ], [ %61, %95 ], [ %94, %93 ], [ %61, %91 ], [ %61, %89 ]
  %145 = phi i32 [ %62, %139 ], [ %62, %137 ], [ %62, %135 ], [ %62, %133 ], [ %62, %131 ], [ %62, %129 ], [ %62, %127 ], [ %62, %125 ], [ %62, %123 ], [ %62, %121 ], [ %62, %119 ], [ %62, %117 ], [ %62, %115 ], [ %62, %113 ], [ %62, %111 ], [ %62, %109 ], [ %62, %107 ], [ %62, %105 ], [ %62, %103 ], [ %62, %101 ], [ %62, %99 ], [ %62, %97 ], [ %96, %95 ], [ %62, %93 ], [ %62, %91 ], [ %62, %89 ]
  %146 = phi i32 [ %63, %139 ], [ %63, %137 ], [ %63, %135 ], [ %63, %133 ], [ %63, %131 ], [ %63, %129 ], [ %63, %127 ], [ %63, %125 ], [ %63, %123 ], [ %63, %121 ], [ %63, %119 ], [ %63, %117 ], [ %63, %115 ], [ %63, %113 ], [ %63, %111 ], [ %63, %109 ], [ %63, %107 ], [ %63, %105 ], [ %63, %103 ], [ %63, %101 ], [ %63, %99 ], [ %98, %97 ], [ %63, %95 ], [ %63, %93 ], [ %63, %91 ], [ %63, %89 ]
  %147 = phi i32 [ %64, %139 ], [ %64, %137 ], [ %64, %135 ], [ %64, %133 ], [ %64, %131 ], [ %64, %129 ], [ %64, %127 ], [ %64, %125 ], [ %64, %123 ], [ %64, %121 ], [ %64, %119 ], [ %64, %117 ], [ %64, %115 ], [ %64, %113 ], [ %64, %111 ], [ %64, %109 ], [ %64, %107 ], [ %64, %105 ], [ %64, %103 ], [ %64, %101 ], [ %100, %99 ], [ %64, %97 ], [ %64, %95 ], [ %64, %93 ], [ %64, %91 ], [ %64, %89 ]
  %148 = phi i32 [ %65, %139 ], [ %65, %137 ], [ %65, %135 ], [ %65, %133 ], [ %65, %131 ], [ %65, %129 ], [ %65, %127 ], [ %65, %125 ], [ %65, %123 ], [ %65, %121 ], [ %65, %119 ], [ %65, %117 ], [ %65, %115 ], [ %65, %113 ], [ %65, %111 ], [ %65, %109 ], [ %65, %107 ], [ %65, %105 ], [ %65, %103 ], [ %102, %101 ], [ %65, %99 ], [ %65, %97 ], [ %65, %95 ], [ %65, %93 ], [ %65, %91 ], [ %65, %89 ]
  %149 = phi i32 [ %66, %139 ], [ %66, %137 ], [ %66, %135 ], [ %66, %133 ], [ %66, %131 ], [ %66, %129 ], [ %66, %127 ], [ %66, %125 ], [ %66, %123 ], [ %66, %121 ], [ %66, %119 ], [ %66, %117 ], [ %66, %115 ], [ %66, %113 ], [ %66, %111 ], [ %66, %109 ], [ %66, %107 ], [ %66, %105 ], [ %104, %103 ], [ %66, %101 ], [ %66, %99 ], [ %66, %97 ], [ %66, %95 ], [ %66, %93 ], [ %66, %91 ], [ %66, %89 ]
  %150 = phi i32 [ %67, %139 ], [ %67, %137 ], [ %67, %135 ], [ %67, %133 ], [ %67, %131 ], [ %67, %129 ], [ %67, %127 ], [ %67, %125 ], [ %67, %123 ], [ %67, %121 ], [ %67, %119 ], [ %67, %117 ], [ %67, %115 ], [ %67, %113 ], [ %67, %111 ], [ %67, %109 ], [ %67, %107 ], [ %106, %105 ], [ %67, %103 ], [ %67, %101 ], [ %67, %99 ], [ %67, %97 ], [ %67, %95 ], [ %67, %93 ], [ %67, %91 ], [ %67, %89 ]
  %151 = phi i32 [ %68, %139 ], [ %68, %137 ], [ %68, %135 ], [ %68, %133 ], [ %68, %131 ], [ %68, %129 ], [ %68, %127 ], [ %68, %125 ], [ %68, %123 ], [ %68, %121 ], [ %68, %119 ], [ %68, %117 ], [ %68, %115 ], [ %68, %113 ], [ %68, %111 ], [ %68, %109 ], [ %108, %107 ], [ %68, %105 ], [ %68, %103 ], [ %68, %101 ], [ %68, %99 ], [ %68, %97 ], [ %68, %95 ], [ %68, %93 ], [ %68, %91 ], [ %68, %89 ]
  %152 = phi i32 [ %69, %139 ], [ %69, %137 ], [ %69, %135 ], [ %69, %133 ], [ %69, %131 ], [ %69, %129 ], [ %69, %127 ], [ %69, %125 ], [ %69, %123 ], [ %69, %121 ], [ %69, %119 ], [ %69, %117 ], [ %69, %115 ], [ %69, %113 ], [ %69, %111 ], [ %110, %109 ], [ %69, %107 ], [ %69, %105 ], [ %69, %103 ], [ %69, %101 ], [ %69, %99 ], [ %69, %97 ], [ %69, %95 ], [ %69, %93 ], [ %69, %91 ], [ %69, %89 ]
  %153 = phi i32 [ %70, %139 ], [ %70, %137 ], [ %70, %135 ], [ %70, %133 ], [ %70, %131 ], [ %70, %129 ], [ %70, %127 ], [ %70, %125 ], [ %70, %123 ], [ %70, %121 ], [ %70, %119 ], [ %70, %117 ], [ %70, %115 ], [ %70, %113 ], [ %112, %111 ], [ %70, %109 ], [ %70, %107 ], [ %70, %105 ], [ %70, %103 ], [ %70, %101 ], [ %70, %99 ], [ %70, %97 ], [ %70, %95 ], [ %70, %93 ], [ %70, %91 ], [ %70, %89 ]
  %154 = phi i32 [ %71, %139 ], [ %71, %137 ], [ %71, %135 ], [ %71, %133 ], [ %71, %131 ], [ %71, %129 ], [ %71, %127 ], [ %71, %125 ], [ %71, %123 ], [ %71, %121 ], [ %71, %119 ], [ %71, %117 ], [ %71, %115 ], [ %114, %113 ], [ %71, %111 ], [ %71, %109 ], [ %71, %107 ], [ %71, %105 ], [ %71, %103 ], [ %71, %101 ], [ %71, %99 ], [ %71, %97 ], [ %71, %95 ], [ %71, %93 ], [ %71, %91 ], [ %71, %89 ]
  %155 = phi i32 [ %72, %139 ], [ %72, %137 ], [ %72, %135 ], [ %72, %133 ], [ %72, %131 ], [ %72, %129 ], [ %72, %127 ], [ %72, %125 ], [ %72, %123 ], [ %72, %121 ], [ %72, %119 ], [ %72, %117 ], [ %116, %115 ], [ %72, %113 ], [ %72, %111 ], [ %72, %109 ], [ %72, %107 ], [ %72, %105 ], [ %72, %103 ], [ %72, %101 ], [ %72, %99 ], [ %72, %97 ], [ %72, %95 ], [ %72, %93 ], [ %72, %91 ], [ %72, %89 ]
  %156 = phi i32 [ %73, %139 ], [ %73, %137 ], [ %73, %135 ], [ %73, %133 ], [ %73, %131 ], [ %73, %129 ], [ %73, %127 ], [ %73, %125 ], [ %73, %123 ], [ %73, %121 ], [ %73, %119 ], [ %118, %117 ], [ %73, %115 ], [ %73, %113 ], [ %73, %111 ], [ %73, %109 ], [ %73, %107 ], [ %73, %105 ], [ %73, %103 ], [ %73, %101 ], [ %73, %99 ], [ %73, %97 ], [ %73, %95 ], [ %73, %93 ], [ %73, %91 ], [ %73, %89 ]
  %157 = phi i32 [ %74, %139 ], [ %74, %137 ], [ %74, %135 ], [ %74, %133 ], [ %74, %131 ], [ %74, %129 ], [ %74, %127 ], [ %74, %125 ], [ %74, %123 ], [ %74, %121 ], [ %120, %119 ], [ %74, %117 ], [ %74, %115 ], [ %74, %113 ], [ %74, %111 ], [ %74, %109 ], [ %74, %107 ], [ %74, %105 ], [ %74, %103 ], [ %74, %101 ], [ %74, %99 ], [ %74, %97 ], [ %74, %95 ], [ %74, %93 ], [ %74, %91 ], [ %74, %89 ]
  %158 = phi i32 [ %75, %139 ], [ %75, %137 ], [ %75, %135 ], [ %75, %133 ], [ %75, %131 ], [ %75, %129 ], [ %75, %127 ], [ %75, %125 ], [ %75, %123 ], [ %122, %121 ], [ %75, %119 ], [ %75, %117 ], [ %75, %115 ], [ %75, %113 ], [ %75, %111 ], [ %75, %109 ], [ %75, %107 ], [ %75, %105 ], [ %75, %103 ], [ %75, %101 ], [ %75, %99 ], [ %75, %97 ], [ %75, %95 ], [ %75, %93 ], [ %75, %91 ], [ %75, %89 ]
  %159 = phi i32 [ %76, %139 ], [ %76, %137 ], [ %76, %135 ], [ %76, %133 ], [ %76, %131 ], [ %76, %129 ], [ %76, %127 ], [ %76, %125 ], [ %124, %123 ], [ %76, %121 ], [ %76, %119 ], [ %76, %117 ], [ %76, %115 ], [ %76, %113 ], [ %76, %111 ], [ %76, %109 ], [ %76, %107 ], [ %76, %105 ], [ %76, %103 ], [ %76, %101 ], [ %76, %99 ], [ %76, %97 ], [ %76, %95 ], [ %76, %93 ], [ %76, %91 ], [ %76, %89 ]
  %160 = phi i32 [ %77, %139 ], [ %77, %137 ], [ %77, %135 ], [ %77, %133 ], [ %77, %131 ], [ %77, %129 ], [ %77, %127 ], [ %126, %125 ], [ %77, %123 ], [ %77, %121 ], [ %77, %119 ], [ %77, %117 ], [ %77, %115 ], [ %77, %113 ], [ %77, %111 ], [ %77, %109 ], [ %77, %107 ], [ %77, %105 ], [ %77, %103 ], [ %77, %101 ], [ %77, %99 ], [ %77, %97 ], [ %77, %95 ], [ %77, %93 ], [ %77, %91 ], [ %77, %89 ]
  %161 = phi i32 [ %78, %139 ], [ %78, %137 ], [ %78, %135 ], [ %78, %133 ], [ %78, %131 ], [ %78, %129 ], [ %128, %127 ], [ %78, %125 ], [ %78, %123 ], [ %78, %121 ], [ %78, %119 ], [ %78, %117 ], [ %78, %115 ], [ %78, %113 ], [ %78, %111 ], [ %78, %109 ], [ %78, %107 ], [ %78, %105 ], [ %78, %103 ], [ %78, %101 ], [ %78, %99 ], [ %78, %97 ], [ %78, %95 ], [ %78, %93 ], [ %78, %91 ], [ %78, %89 ]
  %162 = phi i32 [ %79, %139 ], [ %79, %137 ], [ %79, %135 ], [ %79, %133 ], [ %79, %131 ], [ %130, %129 ], [ %79, %127 ], [ %79, %125 ], [ %79, %123 ], [ %79, %121 ], [ %79, %119 ], [ %79, %117 ], [ %79, %115 ], [ %79, %113 ], [ %79, %111 ], [ %79, %109 ], [ %79, %107 ], [ %79, %105 ], [ %79, %103 ], [ %79, %101 ], [ %79, %99 ], [ %79, %97 ], [ %79, %95 ], [ %79, %93 ], [ %79, %91 ], [ %79, %89 ]
  %163 = phi i32 [ %80, %139 ], [ %80, %137 ], [ %80, %135 ], [ %80, %133 ], [ %132, %131 ], [ %80, %129 ], [ %80, %127 ], [ %80, %125 ], [ %80, %123 ], [ %80, %121 ], [ %80, %119 ], [ %80, %117 ], [ %80, %115 ], [ %80, %113 ], [ %80, %111 ], [ %80, %109 ], [ %80, %107 ], [ %80, %105 ], [ %80, %103 ], [ %80, %101 ], [ %80, %99 ], [ %80, %97 ], [ %80, %95 ], [ %80, %93 ], [ %80, %91 ], [ %80, %89 ]
  %164 = phi i32 [ %81, %139 ], [ %81, %137 ], [ %81, %135 ], [ %134, %133 ], [ %81, %131 ], [ %81, %129 ], [ %81, %127 ], [ %81, %125 ], [ %81, %123 ], [ %81, %121 ], [ %81, %119 ], [ %81, %117 ], [ %81, %115 ], [ %81, %113 ], [ %81, %111 ], [ %81, %109 ], [ %81, %107 ], [ %81, %105 ], [ %81, %103 ], [ %81, %101 ], [ %81, %99 ], [ %81, %97 ], [ %81, %95 ], [ %81, %93 ], [ %81, %91 ], [ %81, %89 ]
  %165 = phi i32 [ %82, %139 ], [ %82, %137 ], [ %136, %135 ], [ %82, %133 ], [ %82, %131 ], [ %82, %129 ], [ %82, %127 ], [ %82, %125 ], [ %82, %123 ], [ %82, %121 ], [ %82, %119 ], [ %82, %117 ], [ %82, %115 ], [ %82, %113 ], [ %82, %111 ], [ %82, %109 ], [ %82, %107 ], [ %82, %105 ], [ %82, %103 ], [ %82, %101 ], [ %82, %99 ], [ %82, %97 ], [ %82, %95 ], [ %82, %93 ], [ %82, %91 ], [ %82, %89 ]
  %166 = phi i32 [ %83, %139 ], [ %138, %137 ], [ %83, %135 ], [ %83, %133 ], [ %83, %131 ], [ %83, %129 ], [ %83, %127 ], [ %83, %125 ], [ %83, %123 ], [ %83, %121 ], [ %83, %119 ], [ %83, %117 ], [ %83, %115 ], [ %83, %113 ], [ %83, %111 ], [ %83, %109 ], [ %83, %107 ], [ %83, %105 ], [ %83, %103 ], [ %83, %101 ], [ %83, %99 ], [ %83, %97 ], [ %83, %95 ], [ %83, %93 ], [ %83, %91 ], [ %83, %89 ]
  %167 = phi i32 [ %140, %139 ], [ %84, %137 ], [ %84, %135 ], [ %84, %133 ], [ %84, %131 ], [ %84, %129 ], [ %84, %127 ], [ %84, %125 ], [ %84, %123 ], [ %84, %121 ], [ %84, %119 ], [ %84, %117 ], [ %84, %115 ], [ %84, %113 ], [ %84, %111 ], [ %84, %109 ], [ %84, %107 ], [ %84, %105 ], [ %84, %103 ], [ %84, %101 ], [ %84, %99 ], [ %84, %97 ], [ %84, %95 ], [ %84, %93 ], [ %84, %91 ], [ %84, %89 ]
  %168 = add nuw nsw i64 %85, 1
  %169 = icmp eq i64 %168, %57
  br i1 %169, label %170, label %58, !llvm.loop !12

170:                                              ; preds = %141, %23
  %171 = phi i32 [ %24, %23 ], [ %142, %141 ]
  %172 = phi i32 [ %25, %23 ], [ %143, %141 ]
  %173 = phi i32 [ %26, %23 ], [ %144, %141 ]
  %174 = phi i32 [ %27, %23 ], [ %145, %141 ]
  %175 = phi i32 [ %28, %23 ], [ %146, %141 ]
  %176 = phi i32 [ %29, %23 ], [ %147, %141 ]
  %177 = phi i32 [ %30, %23 ], [ %148, %141 ]
  %178 = phi i32 [ %31, %23 ], [ %149, %141 ]
  %179 = phi i32 [ %32, %23 ], [ %150, %141 ]
  %180 = phi i32 [ %33, %23 ], [ %151, %141 ]
  %181 = phi i32 [ %34, %23 ], [ %152, %141 ]
  %182 = phi i32 [ %35, %23 ], [ %153, %141 ]
  %183 = phi i32 [ %36, %23 ], [ %154, %141 ]
  %184 = phi i32 [ %37, %23 ], [ %155, %141 ]
  %185 = phi i32 [ %38, %23 ], [ %156, %141 ]
  %186 = phi i32 [ %39, %23 ], [ %157, %141 ]
  %187 = phi i32 [ %40, %23 ], [ %158, %141 ]
  %188 = phi i32 [ %41, %23 ], [ %159, %141 ]
  %189 = phi i32 [ %42, %23 ], [ %160, %141 ]
  %190 = phi i32 [ %43, %23 ], [ %161, %141 ]
  %191 = phi i32 [ %44, %23 ], [ %162, %141 ]
  %192 = phi i32 [ %45, %23 ], [ %163, %141 ]
  %193 = phi i32 [ %46, %23 ], [ %164, %141 ]
  %194 = phi i32 [ %47, %23 ], [ %165, %141 ]
  %195 = phi i32 [ %48, %23 ], [ %166, %141 ]
  %196 = phi i32 [ %49, %23 ], [ %167, %141 ]
  %197 = add nuw nsw i64 %50, 1
  %198 = icmp eq i64 %197, %22
  br i1 %198, label %199, label %23, !llvm.loop !13

199:                                              ; preds = %170
  %200 = icmp sgt i32 %172, %171
  %201 = select i1 %200, i32 %172, i32 %171
  %202 = select i1 %200, i8 66, i8 65
  %203 = icmp sgt i32 %173, %201
  %204 = select i1 %203, i32 %173, i32 %201
  %205 = select i1 %203, i8 67, i8 %202
  %206 = icmp sgt i32 %174, %204
  %207 = select i1 %206, i32 %174, i32 %204
  %208 = select i1 %206, i8 68, i8 %205
  %209 = icmp sgt i32 %175, %207
  %210 = select i1 %209, i32 %175, i32 %207
  %211 = select i1 %209, i8 69, i8 %208
  %212 = icmp sgt i32 %176, %210
  %213 = select i1 %212, i32 %176, i32 %210
  %214 = select i1 %212, i8 70, i8 %211
  %215 = icmp sgt i32 %177, %213
  %216 = select i1 %215, i32 %177, i32 %213
  %217 = select i1 %215, i8 71, i8 %214
  %218 = icmp sgt i32 %178, %216
  %219 = select i1 %218, i32 %178, i32 %216
  %220 = select i1 %218, i8 72, i8 %217
  %221 = icmp sgt i32 %179, %219
  %222 = select i1 %221, i32 %179, i32 %219
  %223 = select i1 %221, i8 73, i8 %220
  %224 = icmp sgt i32 %180, %222
  %225 = select i1 %224, i32 %180, i32 %222
  %226 = select i1 %224, i8 74, i8 %223
  %227 = icmp sgt i32 %181, %225
  %228 = select i1 %227, i32 %181, i32 %225
  %229 = select i1 %227, i8 75, i8 %226
  %230 = icmp sgt i32 %182, %228
  %231 = select i1 %230, i32 %182, i32 %228
  %232 = select i1 %230, i8 76, i8 %229
  %233 = icmp sgt i32 %183, %231
  %234 = select i1 %233, i32 %183, i32 %231
  %235 = select i1 %233, i8 77, i8 %232
  %236 = icmp sgt i32 %184, %234
  %237 = select i1 %236, i32 %184, i32 %234
  %238 = select i1 %236, i8 78, i8 %235
  %239 = icmp sgt i32 %185, %237
  %240 = select i1 %239, i32 %185, i32 %237
  %241 = select i1 %239, i8 79, i8 %238
  %242 = icmp sgt i32 %186, %240
  %243 = select i1 %242, i32 %186, i32 %240
  %244 = select i1 %242, i8 80, i8 %241
  %245 = icmp sgt i32 %187, %243
  %246 = select i1 %245, i32 %187, i32 %243
  %247 = select i1 %245, i8 81, i8 %244
  %248 = icmp sgt i32 %188, %246
  %249 = select i1 %248, i32 %188, i32 %246
  %250 = select i1 %248, i8 82, i8 %247
  %251 = icmp sgt i32 %189, %249
  %252 = select i1 %251, i32 %189, i32 %249
  %253 = select i1 %251, i8 83, i8 %250
  %254 = icmp sgt i32 %190, %252
  %255 = select i1 %254, i32 %190, i32 %252
  %256 = select i1 %254, i8 84, i8 %253
  %257 = icmp sgt i32 %191, %255
  %258 = select i1 %257, i32 %191, i32 %255
  %259 = select i1 %257, i8 85, i8 %256
  %260 = icmp sgt i32 %192, %258
  %261 = select i1 %260, i32 %192, i32 %258
  %262 = select i1 %260, i8 86, i8 %259
  %263 = icmp sgt i32 %193, %261
  %264 = select i1 %263, i32 %193, i32 %261
  %265 = select i1 %263, i8 87, i8 %262
  %266 = icmp sgt i32 %194, %264
  %267 = select i1 %266, i32 %194, i32 %264
  %268 = select i1 %266, i8 88, i8 %265
  %269 = icmp sgt i32 %195, %267
  %270 = select i1 %269, i32 %195, i32 %267
  %271 = select i1 %269, i8 89, i8 %268
  %272 = icmp sgt i32 %196, %270
  %273 = select i1 %272, i32 %196, i32 %270
  %274 = select i1 %272, i8 90, i8 %271
  br label %303

275:                                              ; preds = %303, %297
  %276 = phi i32 [ %298, %297 ], [ %308, %303 ]
  %277 = phi i64 [ %299, %297 ], [ 0, %303 ]
  %278 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %277, i64 0
  %279 = call i64 @strlen(i8* noundef nonnull %278) #5
  %280 = trunc i64 %279 to i32
  %281 = icmp sgt i32 %280, 0
  br i1 %281, label %282, label %297

282:                                              ; preds = %275
  %283 = and i64 %279, 4294967295
  br label %286

284:                                              ; preds = %286
  %285 = icmp eq i64 %291, %283
  br i1 %285, label %297, label %286, !llvm.loop !14

286:                                              ; preds = %282, %284
  %287 = phi i64 [ 0, %282 ], [ %291, %284 ]
  %288 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %3, i64 0, i64 %277, i64 %287
  %289 = load i8, i8* %288, align 1, !tbaa !11
  %290 = icmp eq i8 %289, %305
  %291 = add nuw nsw i64 %287, 1
  br i1 %290, label %292, label %284

292:                                              ; preds = %286
  %293 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %277
  %294 = load i32, i32* %293, align 4, !tbaa !5
  %295 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %294)
  %296 = load i32, i32* %1, align 4, !tbaa !5
  br label %297

297:                                              ; preds = %284, %275, %292
  %298 = phi i32 [ %276, %275 ], [ %296, %292 ], [ %276, %284 ]
  %299 = add nuw nsw i64 %277, 1
  %300 = sext i32 %298 to i64
  %301 = icmp slt i64 %299, %300
  br i1 %301, label %275, label %302, !llvm.loop !15

302:                                              ; preds = %297, %303
  call void @llvm.lifetime.end.p0i8(i64 26000, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #4
  ret void

303:                                              ; preds = %199, %0, %19
  %304 = phi i32 [ 0, %19 ], [ 0, %0 ], [ %273, %199 ]
  %305 = phi i8 [ 65, %19 ], [ 65, %0 ], [ %274, %199 ]
  %306 = zext i8 %305 to i32
  %307 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %306, i32 %304)
  %308 = load i32, i32* %1, align 4, !tbaa !5
  %309 = icmp sgt i32 %308, 0
  br i1 %309, label %275, label %302
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
