; ModuleID = 'source-C-CXX/1/1251.c'
source_filename = "source-C-CXX/1/1251.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.book = type { i32, [26 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main(i32 %0, i8** nocapture readnone %1) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #4
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %3)
  %6 = load i32, i32* %3, align 4, !tbaa !5
  %7 = sext i32 %6 to i64
  %8 = shl nsw i64 %7, 5
  %9 = call noalias align 16 i8* @malloc(i64 %8) #4
  %10 = bitcast i8* %9 to %struct.book*
  %11 = icmp sgt i32 %6, 0
  br i1 %11, label %63, label %267

12:                                               ; preds = %209
  %13 = icmp sgt i32 %234, %233
  %14 = select i1 %13, i32 %234, i32 %233
  %15 = icmp sgt i32 %14, %232
  %16 = select i1 %15, i32 %14, i32 %232
  %17 = icmp sgt i32 %16, %231
  %18 = select i1 %17, i32 %16, i32 %231
  %19 = icmp sgt i32 %18, %230
  %20 = select i1 %19, i32 %18, i32 %230
  %21 = icmp sgt i32 %20, %229
  %22 = select i1 %21, i32 %20, i32 %229
  %23 = icmp sgt i32 %22, %228
  %24 = select i1 %23, i32 %22, i32 %228
  %25 = icmp sgt i32 %24, %227
  %26 = select i1 %25, i32 %24, i32 %227
  %27 = icmp sgt i32 %26, %226
  %28 = select i1 %27, i32 %26, i32 %226
  %29 = icmp sgt i32 %28, %225
  %30 = select i1 %29, i32 %28, i32 %225
  %31 = icmp sgt i32 %30, %224
  %32 = select i1 %31, i32 %30, i32 %224
  %33 = icmp sgt i32 %32, %223
  %34 = select i1 %33, i32 %32, i32 %223
  %35 = icmp sgt i32 %34, %222
  %36 = select i1 %35, i32 %34, i32 %222
  %37 = icmp sgt i32 %36, %221
  %38 = select i1 %37, i32 %36, i32 %221
  %39 = icmp sgt i32 %38, %220
  %40 = select i1 %39, i32 %38, i32 %220
  %41 = icmp sgt i32 %40, %219
  %42 = select i1 %41, i32 %40, i32 %219
  %43 = icmp sgt i32 %42, %218
  %44 = select i1 %43, i32 %42, i32 %218
  %45 = icmp sgt i32 %44, %217
  %46 = select i1 %45, i32 %44, i32 %217
  %47 = icmp sgt i32 %46, %216
  %48 = select i1 %47, i32 %46, i32 %216
  %49 = icmp sgt i32 %48, %215
  %50 = select i1 %49, i32 %48, i32 %215
  %51 = icmp sgt i32 %50, %214
  %52 = select i1 %51, i32 %50, i32 %214
  %53 = icmp sgt i32 %52, %213
  %54 = select i1 %53, i32 %52, i32 %213
  %55 = icmp sgt i32 %54, %212
  %56 = select i1 %55, i32 %54, i32 %212
  %57 = icmp sgt i32 %56, %211
  %58 = select i1 %57, i32 %56, i32 %211
  %59 = icmp sgt i32 %58, %210
  %60 = select i1 %59, i32 %58, i32 %210
  %61 = icmp sgt i32 %60, %235
  %62 = select i1 %61, i32 %60, i32 %235
  br label %267

63:                                               ; preds = %2, %209
  %64 = phi i32 [ %210, %209 ], [ 0, %2 ]
  %65 = phi i32 [ %211, %209 ], [ 0, %2 ]
  %66 = phi i32 [ %212, %209 ], [ 0, %2 ]
  %67 = phi i32 [ %213, %209 ], [ 0, %2 ]
  %68 = phi i32 [ %214, %209 ], [ 0, %2 ]
  %69 = phi i32 [ %215, %209 ], [ 0, %2 ]
  %70 = phi i32 [ %216, %209 ], [ 0, %2 ]
  %71 = phi i32 [ %217, %209 ], [ 0, %2 ]
  %72 = phi i32 [ %218, %209 ], [ 0, %2 ]
  %73 = phi i32 [ %219, %209 ], [ 0, %2 ]
  %74 = phi i32 [ %220, %209 ], [ 0, %2 ]
  %75 = phi i32 [ %221, %209 ], [ 0, %2 ]
  %76 = phi i32 [ %222, %209 ], [ 0, %2 ]
  %77 = phi i32 [ %223, %209 ], [ 0, %2 ]
  %78 = phi i32 [ %224, %209 ], [ 0, %2 ]
  %79 = phi i32 [ %225, %209 ], [ 0, %2 ]
  %80 = phi i32 [ %226, %209 ], [ 0, %2 ]
  %81 = phi i32 [ %227, %209 ], [ 0, %2 ]
  %82 = phi i32 [ %228, %209 ], [ 0, %2 ]
  %83 = phi i32 [ %229, %209 ], [ 0, %2 ]
  %84 = phi i32 [ %230, %209 ], [ 0, %2 ]
  %85 = phi i32 [ %231, %209 ], [ 0, %2 ]
  %86 = phi i32 [ %232, %209 ], [ 0, %2 ]
  %87 = phi i32 [ %233, %209 ], [ 0, %2 ]
  %88 = phi i32 [ %234, %209 ], [ 0, %2 ]
  %89 = phi i32 [ %235, %209 ], [ 0, %2 ]
  %90 = phi i64 [ %236, %209 ], [ 0, %2 ]
  %91 = getelementptr inbounds %struct.book, %struct.book* %10, i64 %90, i32 0
  %92 = getelementptr inbounds %struct.book, %struct.book* %10, i64 %90, i32 1, i64 0
  %93 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* %91, i8* nonnull %92)
  %94 = load i8, i8* %92, align 4, !tbaa !9
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %209, label %96

96:                                               ; preds = %63, %178
  %97 = phi i32 [ %179, %178 ], [ %64, %63 ]
  %98 = phi i32 [ %180, %178 ], [ %65, %63 ]
  %99 = phi i32 [ %181, %178 ], [ %66, %63 ]
  %100 = phi i32 [ %182, %178 ], [ %67, %63 ]
  %101 = phi i32 [ %183, %178 ], [ %68, %63 ]
  %102 = phi i32 [ %184, %178 ], [ %69, %63 ]
  %103 = phi i32 [ %185, %178 ], [ %70, %63 ]
  %104 = phi i32 [ %186, %178 ], [ %71, %63 ]
  %105 = phi i32 [ %187, %178 ], [ %72, %63 ]
  %106 = phi i32 [ %188, %178 ], [ %73, %63 ]
  %107 = phi i32 [ %189, %178 ], [ %74, %63 ]
  %108 = phi i32 [ %190, %178 ], [ %75, %63 ]
  %109 = phi i32 [ %191, %178 ], [ %76, %63 ]
  %110 = phi i32 [ %192, %178 ], [ %77, %63 ]
  %111 = phi i32 [ %193, %178 ], [ %78, %63 ]
  %112 = phi i32 [ %194, %178 ], [ %79, %63 ]
  %113 = phi i32 [ %195, %178 ], [ %80, %63 ]
  %114 = phi i32 [ %196, %178 ], [ %81, %63 ]
  %115 = phi i32 [ %197, %178 ], [ %82, %63 ]
  %116 = phi i32 [ %198, %178 ], [ %83, %63 ]
  %117 = phi i32 [ %199, %178 ], [ %84, %63 ]
  %118 = phi i32 [ %200, %178 ], [ %85, %63 ]
  %119 = phi i32 [ %201, %178 ], [ %86, %63 ]
  %120 = phi i32 [ %202, %178 ], [ %87, %63 ]
  %121 = phi i32 [ %203, %178 ], [ %88, %63 ]
  %122 = phi i32 [ %204, %178 ], [ %89, %63 ]
  %123 = phi i64 [ %205, %178 ], [ 0, %63 ]
  %124 = phi i8 [ %207, %178 ], [ %94, %63 ]
  %125 = sext i8 %124 to i32
  switch i32 %125, label %178 [
    i32 65, label %126
    i32 66, label %128
    i32 67, label %130
    i32 68, label %132
    i32 69, label %134
    i32 70, label %136
    i32 71, label %138
    i32 72, label %140
    i32 73, label %142
    i32 74, label %144
    i32 75, label %146
    i32 76, label %148
    i32 77, label %150
    i32 78, label %152
    i32 79, label %154
    i32 80, label %156
    i32 81, label %158
    i32 82, label %160
    i32 83, label %162
    i32 84, label %164
    i32 85, label %166
    i32 86, label %168
    i32 87, label %170
    i32 88, label %172
    i32 89, label %174
    i32 90, label %176
  ]

126:                                              ; preds = %96
  %127 = add nsw i32 %122, 1
  br label %178

128:                                              ; preds = %96
  %129 = add nsw i32 %97, 1
  br label %178

130:                                              ; preds = %96
  %131 = add nsw i32 %98, 1
  br label %178

132:                                              ; preds = %96
  %133 = add nsw i32 %99, 1
  br label %178

134:                                              ; preds = %96
  %135 = add nsw i32 %100, 1
  br label %178

136:                                              ; preds = %96
  %137 = add nsw i32 %101, 1
  br label %178

138:                                              ; preds = %96
  %139 = add nsw i32 %102, 1
  br label %178

140:                                              ; preds = %96
  %141 = add nsw i32 %103, 1
  br label %178

142:                                              ; preds = %96
  %143 = add nsw i32 %104, 1
  br label %178

144:                                              ; preds = %96
  %145 = add nsw i32 %105, 1
  br label %178

146:                                              ; preds = %96
  %147 = add nsw i32 %106, 1
  br label %178

148:                                              ; preds = %96
  %149 = add nsw i32 %107, 1
  br label %178

150:                                              ; preds = %96
  %151 = add nsw i32 %108, 1
  br label %178

152:                                              ; preds = %96
  %153 = add nsw i32 %109, 1
  br label %178

154:                                              ; preds = %96
  %155 = add nsw i32 %110, 1
  br label %178

156:                                              ; preds = %96
  %157 = add nsw i32 %111, 1
  br label %178

158:                                              ; preds = %96
  %159 = add nsw i32 %112, 1
  br label %178

160:                                              ; preds = %96
  %161 = add nsw i32 %113, 1
  br label %178

162:                                              ; preds = %96
  %163 = add nsw i32 %114, 1
  br label %178

164:                                              ; preds = %96
  %165 = add nsw i32 %115, 1
  br label %178

166:                                              ; preds = %96
  %167 = add nsw i32 %116, 1
  br label %178

168:                                              ; preds = %96
  %169 = add nsw i32 %117, 1
  br label %178

170:                                              ; preds = %96
  %171 = add nsw i32 %118, 1
  br label %178

172:                                              ; preds = %96
  %173 = add nsw i32 %119, 1
  br label %178

174:                                              ; preds = %96
  %175 = add nsw i32 %120, 1
  br label %178

176:                                              ; preds = %96
  %177 = add nsw i32 %121, 1
  br label %178

178:                                              ; preds = %126, %128, %130, %132, %134, %136, %138, %140, %142, %144, %146, %148, %150, %152, %154, %156, %158, %160, %162, %164, %166, %168, %170, %172, %174, %176, %96
  %179 = phi i32 [ %97, %96 ], [ %97, %176 ], [ %97, %174 ], [ %97, %172 ], [ %97, %170 ], [ %97, %168 ], [ %97, %166 ], [ %97, %164 ], [ %97, %162 ], [ %97, %160 ], [ %97, %158 ], [ %97, %156 ], [ %97, %154 ], [ %97, %152 ], [ %97, %150 ], [ %97, %148 ], [ %97, %146 ], [ %97, %144 ], [ %97, %142 ], [ %97, %140 ], [ %97, %138 ], [ %97, %136 ], [ %97, %134 ], [ %97, %132 ], [ %97, %130 ], [ %129, %128 ], [ %97, %126 ]
  %180 = phi i32 [ %98, %96 ], [ %98, %176 ], [ %98, %174 ], [ %98, %172 ], [ %98, %170 ], [ %98, %168 ], [ %98, %166 ], [ %98, %164 ], [ %98, %162 ], [ %98, %160 ], [ %98, %158 ], [ %98, %156 ], [ %98, %154 ], [ %98, %152 ], [ %98, %150 ], [ %98, %148 ], [ %98, %146 ], [ %98, %144 ], [ %98, %142 ], [ %98, %140 ], [ %98, %138 ], [ %98, %136 ], [ %98, %134 ], [ %98, %132 ], [ %131, %130 ], [ %98, %128 ], [ %98, %126 ]
  %181 = phi i32 [ %99, %96 ], [ %99, %176 ], [ %99, %174 ], [ %99, %172 ], [ %99, %170 ], [ %99, %168 ], [ %99, %166 ], [ %99, %164 ], [ %99, %162 ], [ %99, %160 ], [ %99, %158 ], [ %99, %156 ], [ %99, %154 ], [ %99, %152 ], [ %99, %150 ], [ %99, %148 ], [ %99, %146 ], [ %99, %144 ], [ %99, %142 ], [ %99, %140 ], [ %99, %138 ], [ %99, %136 ], [ %99, %134 ], [ %133, %132 ], [ %99, %130 ], [ %99, %128 ], [ %99, %126 ]
  %182 = phi i32 [ %100, %96 ], [ %100, %176 ], [ %100, %174 ], [ %100, %172 ], [ %100, %170 ], [ %100, %168 ], [ %100, %166 ], [ %100, %164 ], [ %100, %162 ], [ %100, %160 ], [ %100, %158 ], [ %100, %156 ], [ %100, %154 ], [ %100, %152 ], [ %100, %150 ], [ %100, %148 ], [ %100, %146 ], [ %100, %144 ], [ %100, %142 ], [ %100, %140 ], [ %100, %138 ], [ %100, %136 ], [ %135, %134 ], [ %100, %132 ], [ %100, %130 ], [ %100, %128 ], [ %100, %126 ]
  %183 = phi i32 [ %101, %96 ], [ %101, %176 ], [ %101, %174 ], [ %101, %172 ], [ %101, %170 ], [ %101, %168 ], [ %101, %166 ], [ %101, %164 ], [ %101, %162 ], [ %101, %160 ], [ %101, %158 ], [ %101, %156 ], [ %101, %154 ], [ %101, %152 ], [ %101, %150 ], [ %101, %148 ], [ %101, %146 ], [ %101, %144 ], [ %101, %142 ], [ %101, %140 ], [ %101, %138 ], [ %137, %136 ], [ %101, %134 ], [ %101, %132 ], [ %101, %130 ], [ %101, %128 ], [ %101, %126 ]
  %184 = phi i32 [ %102, %96 ], [ %102, %176 ], [ %102, %174 ], [ %102, %172 ], [ %102, %170 ], [ %102, %168 ], [ %102, %166 ], [ %102, %164 ], [ %102, %162 ], [ %102, %160 ], [ %102, %158 ], [ %102, %156 ], [ %102, %154 ], [ %102, %152 ], [ %102, %150 ], [ %102, %148 ], [ %102, %146 ], [ %102, %144 ], [ %102, %142 ], [ %102, %140 ], [ %139, %138 ], [ %102, %136 ], [ %102, %134 ], [ %102, %132 ], [ %102, %130 ], [ %102, %128 ], [ %102, %126 ]
  %185 = phi i32 [ %103, %96 ], [ %103, %176 ], [ %103, %174 ], [ %103, %172 ], [ %103, %170 ], [ %103, %168 ], [ %103, %166 ], [ %103, %164 ], [ %103, %162 ], [ %103, %160 ], [ %103, %158 ], [ %103, %156 ], [ %103, %154 ], [ %103, %152 ], [ %103, %150 ], [ %103, %148 ], [ %103, %146 ], [ %103, %144 ], [ %103, %142 ], [ %141, %140 ], [ %103, %138 ], [ %103, %136 ], [ %103, %134 ], [ %103, %132 ], [ %103, %130 ], [ %103, %128 ], [ %103, %126 ]
  %186 = phi i32 [ %104, %96 ], [ %104, %176 ], [ %104, %174 ], [ %104, %172 ], [ %104, %170 ], [ %104, %168 ], [ %104, %166 ], [ %104, %164 ], [ %104, %162 ], [ %104, %160 ], [ %104, %158 ], [ %104, %156 ], [ %104, %154 ], [ %104, %152 ], [ %104, %150 ], [ %104, %148 ], [ %104, %146 ], [ %104, %144 ], [ %143, %142 ], [ %104, %140 ], [ %104, %138 ], [ %104, %136 ], [ %104, %134 ], [ %104, %132 ], [ %104, %130 ], [ %104, %128 ], [ %104, %126 ]
  %187 = phi i32 [ %105, %96 ], [ %105, %176 ], [ %105, %174 ], [ %105, %172 ], [ %105, %170 ], [ %105, %168 ], [ %105, %166 ], [ %105, %164 ], [ %105, %162 ], [ %105, %160 ], [ %105, %158 ], [ %105, %156 ], [ %105, %154 ], [ %105, %152 ], [ %105, %150 ], [ %105, %148 ], [ %105, %146 ], [ %145, %144 ], [ %105, %142 ], [ %105, %140 ], [ %105, %138 ], [ %105, %136 ], [ %105, %134 ], [ %105, %132 ], [ %105, %130 ], [ %105, %128 ], [ %105, %126 ]
  %188 = phi i32 [ %106, %96 ], [ %106, %176 ], [ %106, %174 ], [ %106, %172 ], [ %106, %170 ], [ %106, %168 ], [ %106, %166 ], [ %106, %164 ], [ %106, %162 ], [ %106, %160 ], [ %106, %158 ], [ %106, %156 ], [ %106, %154 ], [ %106, %152 ], [ %106, %150 ], [ %106, %148 ], [ %147, %146 ], [ %106, %144 ], [ %106, %142 ], [ %106, %140 ], [ %106, %138 ], [ %106, %136 ], [ %106, %134 ], [ %106, %132 ], [ %106, %130 ], [ %106, %128 ], [ %106, %126 ]
  %189 = phi i32 [ %107, %96 ], [ %107, %176 ], [ %107, %174 ], [ %107, %172 ], [ %107, %170 ], [ %107, %168 ], [ %107, %166 ], [ %107, %164 ], [ %107, %162 ], [ %107, %160 ], [ %107, %158 ], [ %107, %156 ], [ %107, %154 ], [ %107, %152 ], [ %107, %150 ], [ %149, %148 ], [ %107, %146 ], [ %107, %144 ], [ %107, %142 ], [ %107, %140 ], [ %107, %138 ], [ %107, %136 ], [ %107, %134 ], [ %107, %132 ], [ %107, %130 ], [ %107, %128 ], [ %107, %126 ]
  %190 = phi i32 [ %108, %96 ], [ %108, %176 ], [ %108, %174 ], [ %108, %172 ], [ %108, %170 ], [ %108, %168 ], [ %108, %166 ], [ %108, %164 ], [ %108, %162 ], [ %108, %160 ], [ %108, %158 ], [ %108, %156 ], [ %108, %154 ], [ %108, %152 ], [ %151, %150 ], [ %108, %148 ], [ %108, %146 ], [ %108, %144 ], [ %108, %142 ], [ %108, %140 ], [ %108, %138 ], [ %108, %136 ], [ %108, %134 ], [ %108, %132 ], [ %108, %130 ], [ %108, %128 ], [ %108, %126 ]
  %191 = phi i32 [ %109, %96 ], [ %109, %176 ], [ %109, %174 ], [ %109, %172 ], [ %109, %170 ], [ %109, %168 ], [ %109, %166 ], [ %109, %164 ], [ %109, %162 ], [ %109, %160 ], [ %109, %158 ], [ %109, %156 ], [ %109, %154 ], [ %153, %152 ], [ %109, %150 ], [ %109, %148 ], [ %109, %146 ], [ %109, %144 ], [ %109, %142 ], [ %109, %140 ], [ %109, %138 ], [ %109, %136 ], [ %109, %134 ], [ %109, %132 ], [ %109, %130 ], [ %109, %128 ], [ %109, %126 ]
  %192 = phi i32 [ %110, %96 ], [ %110, %176 ], [ %110, %174 ], [ %110, %172 ], [ %110, %170 ], [ %110, %168 ], [ %110, %166 ], [ %110, %164 ], [ %110, %162 ], [ %110, %160 ], [ %110, %158 ], [ %110, %156 ], [ %155, %154 ], [ %110, %152 ], [ %110, %150 ], [ %110, %148 ], [ %110, %146 ], [ %110, %144 ], [ %110, %142 ], [ %110, %140 ], [ %110, %138 ], [ %110, %136 ], [ %110, %134 ], [ %110, %132 ], [ %110, %130 ], [ %110, %128 ], [ %110, %126 ]
  %193 = phi i32 [ %111, %96 ], [ %111, %176 ], [ %111, %174 ], [ %111, %172 ], [ %111, %170 ], [ %111, %168 ], [ %111, %166 ], [ %111, %164 ], [ %111, %162 ], [ %111, %160 ], [ %111, %158 ], [ %157, %156 ], [ %111, %154 ], [ %111, %152 ], [ %111, %150 ], [ %111, %148 ], [ %111, %146 ], [ %111, %144 ], [ %111, %142 ], [ %111, %140 ], [ %111, %138 ], [ %111, %136 ], [ %111, %134 ], [ %111, %132 ], [ %111, %130 ], [ %111, %128 ], [ %111, %126 ]
  %194 = phi i32 [ %112, %96 ], [ %112, %176 ], [ %112, %174 ], [ %112, %172 ], [ %112, %170 ], [ %112, %168 ], [ %112, %166 ], [ %112, %164 ], [ %112, %162 ], [ %112, %160 ], [ %159, %158 ], [ %112, %156 ], [ %112, %154 ], [ %112, %152 ], [ %112, %150 ], [ %112, %148 ], [ %112, %146 ], [ %112, %144 ], [ %112, %142 ], [ %112, %140 ], [ %112, %138 ], [ %112, %136 ], [ %112, %134 ], [ %112, %132 ], [ %112, %130 ], [ %112, %128 ], [ %112, %126 ]
  %195 = phi i32 [ %113, %96 ], [ %113, %176 ], [ %113, %174 ], [ %113, %172 ], [ %113, %170 ], [ %113, %168 ], [ %113, %166 ], [ %113, %164 ], [ %113, %162 ], [ %161, %160 ], [ %113, %158 ], [ %113, %156 ], [ %113, %154 ], [ %113, %152 ], [ %113, %150 ], [ %113, %148 ], [ %113, %146 ], [ %113, %144 ], [ %113, %142 ], [ %113, %140 ], [ %113, %138 ], [ %113, %136 ], [ %113, %134 ], [ %113, %132 ], [ %113, %130 ], [ %113, %128 ], [ %113, %126 ]
  %196 = phi i32 [ %114, %96 ], [ %114, %176 ], [ %114, %174 ], [ %114, %172 ], [ %114, %170 ], [ %114, %168 ], [ %114, %166 ], [ %114, %164 ], [ %163, %162 ], [ %114, %160 ], [ %114, %158 ], [ %114, %156 ], [ %114, %154 ], [ %114, %152 ], [ %114, %150 ], [ %114, %148 ], [ %114, %146 ], [ %114, %144 ], [ %114, %142 ], [ %114, %140 ], [ %114, %138 ], [ %114, %136 ], [ %114, %134 ], [ %114, %132 ], [ %114, %130 ], [ %114, %128 ], [ %114, %126 ]
  %197 = phi i32 [ %115, %96 ], [ %115, %176 ], [ %115, %174 ], [ %115, %172 ], [ %115, %170 ], [ %115, %168 ], [ %115, %166 ], [ %165, %164 ], [ %115, %162 ], [ %115, %160 ], [ %115, %158 ], [ %115, %156 ], [ %115, %154 ], [ %115, %152 ], [ %115, %150 ], [ %115, %148 ], [ %115, %146 ], [ %115, %144 ], [ %115, %142 ], [ %115, %140 ], [ %115, %138 ], [ %115, %136 ], [ %115, %134 ], [ %115, %132 ], [ %115, %130 ], [ %115, %128 ], [ %115, %126 ]
  %198 = phi i32 [ %116, %96 ], [ %116, %176 ], [ %116, %174 ], [ %116, %172 ], [ %116, %170 ], [ %116, %168 ], [ %167, %166 ], [ %116, %164 ], [ %116, %162 ], [ %116, %160 ], [ %116, %158 ], [ %116, %156 ], [ %116, %154 ], [ %116, %152 ], [ %116, %150 ], [ %116, %148 ], [ %116, %146 ], [ %116, %144 ], [ %116, %142 ], [ %116, %140 ], [ %116, %138 ], [ %116, %136 ], [ %116, %134 ], [ %116, %132 ], [ %116, %130 ], [ %116, %128 ], [ %116, %126 ]
  %199 = phi i32 [ %117, %96 ], [ %117, %176 ], [ %117, %174 ], [ %117, %172 ], [ %117, %170 ], [ %169, %168 ], [ %117, %166 ], [ %117, %164 ], [ %117, %162 ], [ %117, %160 ], [ %117, %158 ], [ %117, %156 ], [ %117, %154 ], [ %117, %152 ], [ %117, %150 ], [ %117, %148 ], [ %117, %146 ], [ %117, %144 ], [ %117, %142 ], [ %117, %140 ], [ %117, %138 ], [ %117, %136 ], [ %117, %134 ], [ %117, %132 ], [ %117, %130 ], [ %117, %128 ], [ %117, %126 ]
  %200 = phi i32 [ %118, %96 ], [ %118, %176 ], [ %118, %174 ], [ %118, %172 ], [ %171, %170 ], [ %118, %168 ], [ %118, %166 ], [ %118, %164 ], [ %118, %162 ], [ %118, %160 ], [ %118, %158 ], [ %118, %156 ], [ %118, %154 ], [ %118, %152 ], [ %118, %150 ], [ %118, %148 ], [ %118, %146 ], [ %118, %144 ], [ %118, %142 ], [ %118, %140 ], [ %118, %138 ], [ %118, %136 ], [ %118, %134 ], [ %118, %132 ], [ %118, %130 ], [ %118, %128 ], [ %118, %126 ]
  %201 = phi i32 [ %119, %96 ], [ %119, %176 ], [ %119, %174 ], [ %173, %172 ], [ %119, %170 ], [ %119, %168 ], [ %119, %166 ], [ %119, %164 ], [ %119, %162 ], [ %119, %160 ], [ %119, %158 ], [ %119, %156 ], [ %119, %154 ], [ %119, %152 ], [ %119, %150 ], [ %119, %148 ], [ %119, %146 ], [ %119, %144 ], [ %119, %142 ], [ %119, %140 ], [ %119, %138 ], [ %119, %136 ], [ %119, %134 ], [ %119, %132 ], [ %119, %130 ], [ %119, %128 ], [ %119, %126 ]
  %202 = phi i32 [ %120, %96 ], [ %120, %176 ], [ %175, %174 ], [ %120, %172 ], [ %120, %170 ], [ %120, %168 ], [ %120, %166 ], [ %120, %164 ], [ %120, %162 ], [ %120, %160 ], [ %120, %158 ], [ %120, %156 ], [ %120, %154 ], [ %120, %152 ], [ %120, %150 ], [ %120, %148 ], [ %120, %146 ], [ %120, %144 ], [ %120, %142 ], [ %120, %140 ], [ %120, %138 ], [ %120, %136 ], [ %120, %134 ], [ %120, %132 ], [ %120, %130 ], [ %120, %128 ], [ %120, %126 ]
  %203 = phi i32 [ %121, %96 ], [ %177, %176 ], [ %121, %174 ], [ %121, %172 ], [ %121, %170 ], [ %121, %168 ], [ %121, %166 ], [ %121, %164 ], [ %121, %162 ], [ %121, %160 ], [ %121, %158 ], [ %121, %156 ], [ %121, %154 ], [ %121, %152 ], [ %121, %150 ], [ %121, %148 ], [ %121, %146 ], [ %121, %144 ], [ %121, %142 ], [ %121, %140 ], [ %121, %138 ], [ %121, %136 ], [ %121, %134 ], [ %121, %132 ], [ %121, %130 ], [ %121, %128 ], [ %121, %126 ]
  %204 = phi i32 [ %122, %96 ], [ %122, %176 ], [ %122, %174 ], [ %122, %172 ], [ %122, %170 ], [ %122, %168 ], [ %122, %166 ], [ %122, %164 ], [ %122, %162 ], [ %122, %160 ], [ %122, %158 ], [ %122, %156 ], [ %122, %154 ], [ %122, %152 ], [ %122, %150 ], [ %122, %148 ], [ %122, %146 ], [ %122, %144 ], [ %122, %142 ], [ %122, %140 ], [ %122, %138 ], [ %122, %136 ], [ %122, %134 ], [ %122, %132 ], [ %122, %130 ], [ %122, %128 ], [ %127, %126 ]
  %205 = add nuw i64 %123, 1
  %206 = getelementptr inbounds %struct.book, %struct.book* %10, i64 %90, i32 1, i64 %205
  %207 = load i8, i8* %206, align 1, !tbaa !9
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %209, label %96, !llvm.loop !10

209:                                              ; preds = %178, %63
  %210 = phi i32 [ %64, %63 ], [ %179, %178 ]
  %211 = phi i32 [ %65, %63 ], [ %180, %178 ]
  %212 = phi i32 [ %66, %63 ], [ %181, %178 ]
  %213 = phi i32 [ %67, %63 ], [ %182, %178 ]
  %214 = phi i32 [ %68, %63 ], [ %183, %178 ]
  %215 = phi i32 [ %69, %63 ], [ %184, %178 ]
  %216 = phi i32 [ %70, %63 ], [ %185, %178 ]
  %217 = phi i32 [ %71, %63 ], [ %186, %178 ]
  %218 = phi i32 [ %72, %63 ], [ %187, %178 ]
  %219 = phi i32 [ %73, %63 ], [ %188, %178 ]
  %220 = phi i32 [ %74, %63 ], [ %189, %178 ]
  %221 = phi i32 [ %75, %63 ], [ %190, %178 ]
  %222 = phi i32 [ %76, %63 ], [ %191, %178 ]
  %223 = phi i32 [ %77, %63 ], [ %192, %178 ]
  %224 = phi i32 [ %78, %63 ], [ %193, %178 ]
  %225 = phi i32 [ %79, %63 ], [ %194, %178 ]
  %226 = phi i32 [ %80, %63 ], [ %195, %178 ]
  %227 = phi i32 [ %81, %63 ], [ %196, %178 ]
  %228 = phi i32 [ %82, %63 ], [ %197, %178 ]
  %229 = phi i32 [ %83, %63 ], [ %198, %178 ]
  %230 = phi i32 [ %84, %63 ], [ %199, %178 ]
  %231 = phi i32 [ %85, %63 ], [ %200, %178 ]
  %232 = phi i32 [ %86, %63 ], [ %201, %178 ]
  %233 = phi i32 [ %87, %63 ], [ %202, %178 ]
  %234 = phi i32 [ %88, %63 ], [ %203, %178 ]
  %235 = phi i32 [ %89, %63 ], [ %204, %178 ]
  %236 = add nuw nsw i64 %90, 1
  %237 = load i32, i32* %3, align 4, !tbaa !5
  %238 = sext i32 %237 to i64
  %239 = icmp slt i64 %236, %238
  br i1 %239, label %63, label %12, !llvm.loop !12

240:                                              ; preds = %267, %261
  %241 = phi i32 [ %262, %261 ], [ %345, %267 ]
  %242 = phi i64 [ %263, %261 ], [ 0, %267 ]
  %243 = getelementptr inbounds %struct.book, %struct.book* %10, i64 %242, i32 1, i64 0
  %244 = load i8, i8* %243, align 4, !tbaa !9
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %261, label %250

246:                                              ; preds = %250
  %247 = getelementptr inbounds %struct.book, %struct.book* %10, i64 %242, i32 1, i64 %255
  %248 = load i8, i8* %247, align 1, !tbaa !9
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %261, label %250, !llvm.loop !13

250:                                              ; preds = %240, %246
  %251 = phi i64 [ %255, %246 ], [ 0, %240 ]
  %252 = phi i8 [ %248, %246 ], [ %244, %240 ]
  %253 = sext i8 %252 to i32
  %254 = icmp eq i32 %343, %253
  %255 = add nuw i64 %251, 1
  br i1 %254, label %256, label %246

256:                                              ; preds = %250
  %257 = getelementptr inbounds %struct.book, %struct.book* %10, i64 %242, i32 0
  %258 = load i32, i32* %257, align 16, !tbaa !14
  %259 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %258)
  %260 = load i32, i32* %3, align 4, !tbaa !5
  br label %261

261:                                              ; preds = %246, %240, %256
  %262 = phi i32 [ %241, %240 ], [ %260, %256 ], [ %241, %246 ]
  %263 = add nuw nsw i64 %242, 1
  %264 = sext i32 %262 to i64
  %265 = icmp slt i64 %263, %264
  br i1 %265, label %240, label %266, !llvm.loop !16

266:                                              ; preds = %261, %267
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #4
  ret i32 0

267:                                              ; preds = %12, %2
  %268 = phi i32 [ 0, %2 ], [ %235, %12 ]
  %269 = phi i32 [ 0, %2 ], [ %233, %12 ]
  %270 = phi i32 [ 0, %2 ], [ %232, %12 ]
  %271 = phi i32 [ 0, %2 ], [ %231, %12 ]
  %272 = phi i32 [ 0, %2 ], [ %230, %12 ]
  %273 = phi i32 [ 0, %2 ], [ %229, %12 ]
  %274 = phi i32 [ 0, %2 ], [ %228, %12 ]
  %275 = phi i32 [ 0, %2 ], [ %227, %12 ]
  %276 = phi i32 [ 0, %2 ], [ %226, %12 ]
  %277 = phi i32 [ 0, %2 ], [ %225, %12 ]
  %278 = phi i32 [ 0, %2 ], [ %224, %12 ]
  %279 = phi i32 [ 0, %2 ], [ %223, %12 ]
  %280 = phi i32 [ 0, %2 ], [ %222, %12 ]
  %281 = phi i32 [ 0, %2 ], [ %221, %12 ]
  %282 = phi i32 [ 0, %2 ], [ %220, %12 ]
  %283 = phi i32 [ 0, %2 ], [ %219, %12 ]
  %284 = phi i32 [ 0, %2 ], [ %218, %12 ]
  %285 = phi i32 [ 0, %2 ], [ %217, %12 ]
  %286 = phi i32 [ 0, %2 ], [ %216, %12 ]
  %287 = phi i32 [ 0, %2 ], [ %215, %12 ]
  %288 = phi i32 [ 0, %2 ], [ %214, %12 ]
  %289 = phi i32 [ 0, %2 ], [ %213, %12 ]
  %290 = phi i32 [ 0, %2 ], [ %212, %12 ]
  %291 = phi i32 [ 0, %2 ], [ %211, %12 ]
  %292 = phi i32 [ 0, %2 ], [ %210, %12 ]
  %293 = phi i32 [ 0, %2 ], [ %62, %12 ]
  %294 = icmp eq i32 %269, %293
  %295 = icmp eq i32 %270, %293
  %296 = icmp eq i32 %271, %293
  %297 = icmp eq i32 %272, %293
  %298 = icmp eq i32 %273, %293
  %299 = icmp eq i32 %274, %293
  %300 = icmp eq i32 %275, %293
  %301 = icmp eq i32 %276, %293
  %302 = icmp eq i32 %277, %293
  %303 = icmp eq i32 %278, %293
  %304 = icmp eq i32 %279, %293
  %305 = icmp eq i32 %280, %293
  %306 = icmp eq i32 %281, %293
  %307 = icmp eq i32 %282, %293
  %308 = icmp eq i32 %283, %293
  %309 = icmp eq i32 %284, %293
  %310 = icmp eq i32 %285, %293
  %311 = icmp eq i32 %286, %293
  %312 = icmp eq i32 %287, %293
  %313 = icmp eq i32 %288, %293
  %314 = icmp eq i32 %289, %293
  %315 = icmp eq i32 %290, %293
  %316 = icmp eq i32 %291, %293
  %317 = icmp eq i32 %292, %293
  %318 = icmp eq i32 %268, %293
  %319 = select i1 %294, i32 89, i32 90
  %320 = select i1 %295, i32 88, i32 %319
  %321 = select i1 %296, i32 87, i32 %320
  %322 = select i1 %297, i32 86, i32 %321
  %323 = select i1 %298, i32 85, i32 %322
  %324 = select i1 %299, i32 84, i32 %323
  %325 = select i1 %300, i32 83, i32 %324
  %326 = select i1 %301, i32 82, i32 %325
  %327 = select i1 %302, i32 81, i32 %326
  %328 = select i1 %303, i32 80, i32 %327
  %329 = select i1 %304, i32 79, i32 %328
  %330 = select i1 %305, i32 78, i32 %329
  %331 = select i1 %306, i32 77, i32 %330
  %332 = select i1 %307, i32 76, i32 %331
  %333 = select i1 %308, i32 75, i32 %332
  %334 = select i1 %309, i32 74, i32 %333
  %335 = select i1 %310, i32 73, i32 %334
  %336 = select i1 %311, i32 72, i32 %335
  %337 = select i1 %312, i32 71, i32 %336
  %338 = select i1 %313, i32 70, i32 %337
  %339 = select i1 %314, i32 69, i32 %338
  %340 = select i1 %315, i32 68, i32 %339
  %341 = select i1 %316, i32 67, i32 %340
  %342 = select i1 %317, i32 66, i32 %341
  %343 = select i1 %318, i32 65, i32 %342
  %344 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %343, i32 %293)
  %345 = load i32, i32* %3, align 4, !tbaa !5
  %346 = icmp sgt i32 %345, 0
  br i1 %346, label %240, label %266
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn
declare noalias noundef align 16 i8* @malloc(i64 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { inaccessiblememonly mustprogress nofree nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
!14 = !{!15, !6, i64 0}
!15 = !{!"book", !6, i64 0, !7, i64 4}
!16 = distinct !{!16, !11}
