; ModuleID = 'source-C-CXX/1/705.c'
source_filename = "source-C-CXX/1/705.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.book = type { i32, [26 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%c\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1000 x %struct.book], align 16
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #3
  %4 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %5 = bitcast [1000 x %struct.book]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32000, i8* nonnull %5) #3
  %6 = load i32, i32* %1, align 4, !tbaa !5
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %99, label %311

8:                                                ; preds = %164
  %9 = icmp slt i32 %166, %165
  %10 = select i1 %9, i64 279172874240, i64 283467841536
  %11 = select i1 %9, i32 %165, i32 %166
  %12 = icmp slt i32 %167, %11
  %13 = select i1 %12, i64 %10, i64 287762808832
  %14 = select i1 %12, i32 %11, i32 %167
  %15 = icmp slt i32 %168, %14
  %16 = select i1 %15, i64 %13, i64 292057776128
  %17 = select i1 %15, i32 %14, i32 %168
  %18 = icmp slt i32 %169, %17
  %19 = select i1 %18, i64 %16, i64 296352743424
  %20 = select i1 %18, i32 %17, i32 %169
  %21 = icmp slt i32 %170, %20
  %22 = select i1 %21, i64 %19, i64 300647710720
  %23 = select i1 %21, i32 %20, i32 %170
  %24 = icmp slt i32 %171, %23
  %25 = select i1 %24, i64 %22, i64 304942678016
  %26 = select i1 %24, i32 %23, i32 %171
  %27 = icmp slt i32 %172, %26
  %28 = select i1 %27, i64 %25, i64 309237645312
  %29 = select i1 %27, i32 %26, i32 %172
  %30 = icmp slt i32 %173, %29
  %31 = select i1 %30, i64 %28, i64 313532612608
  %32 = select i1 %30, i32 %29, i32 %173
  %33 = icmp slt i32 %174, %32
  %34 = select i1 %33, i64 %31, i64 317827579904
  %35 = select i1 %33, i32 %32, i32 %174
  %36 = icmp slt i32 %175, %35
  %37 = select i1 %36, i64 %34, i64 322122547200
  %38 = select i1 %36, i32 %35, i32 %175
  %39 = icmp slt i32 %176, %38
  %40 = select i1 %39, i64 %37, i64 326417514496
  %41 = select i1 %39, i32 %38, i32 %176
  %42 = icmp slt i32 %177, %41
  %43 = select i1 %42, i64 %40, i64 330712481792
  %44 = select i1 %42, i32 %41, i32 %177
  %45 = icmp slt i32 %178, %44
  %46 = select i1 %45, i64 %43, i64 335007449088
  %47 = select i1 %45, i32 %44, i32 %178
  %48 = icmp slt i32 %179, %47
  %49 = trunc i64 %46 to i32
  %50 = or i32 %47, %49
  %51 = select i1 %48, i64 %46, i64 339302416384
  %52 = select i1 %48, i32 %50, i32 %179
  %53 = icmp slt i32 %180, %52
  %54 = trunc i64 %51 to i32
  %55 = or i32 %52, %54
  %56 = select i1 %53, i64 %51, i64 343597383680
  %57 = select i1 %53, i32 %55, i32 %180
  %58 = icmp slt i32 %181, %57
  %59 = trunc i64 %56 to i32
  %60 = or i32 %57, %59
  %61 = select i1 %58, i64 %56, i64 347892350976
  %62 = select i1 %58, i32 %60, i32 %181
  %63 = icmp slt i32 %182, %62
  %64 = trunc i64 %61 to i32
  %65 = or i32 %62, %64
  %66 = select i1 %63, i64 %61, i64 352187318272
  %67 = select i1 %63, i32 %65, i32 %182
  %68 = icmp slt i32 %183, %67
  %69 = trunc i64 %66 to i32
  %70 = or i32 %67, %69
  %71 = select i1 %68, i64 %66, i64 356482285568
  %72 = select i1 %68, i32 %70, i32 %183
  %73 = icmp slt i32 %184, %72
  %74 = trunc i64 %71 to i32
  %75 = or i32 %72, %74
  %76 = select i1 %73, i64 %71, i64 360777252864
  %77 = select i1 %73, i32 %75, i32 %184
  %78 = icmp slt i32 %185, %77
  %79 = trunc i64 %76 to i32
  %80 = or i32 %77, %79
  %81 = select i1 %78, i64 %76, i64 365072220160
  %82 = select i1 %78, i32 %80, i32 %185
  %83 = icmp slt i32 %186, %82
  %84 = trunc i64 %81 to i32
  %85 = or i32 %82, %84
  %86 = select i1 %83, i64 %81, i64 369367187456
  %87 = select i1 %83, i32 %85, i32 %186
  %88 = icmp slt i32 %187, %87
  %89 = trunc i64 %86 to i32
  %90 = or i32 %87, %89
  %91 = select i1 %88, i64 %86, i64 373662154752
  %92 = select i1 %88, i32 %90, i32 %187
  %93 = icmp slt i32 %188, %92
  %94 = trunc i64 %91 to i32
  %95 = or i32 %92, %94
  %96 = select i1 %93, i64 %91, i64 377957122048
  %97 = select i1 %93, i32 %95, i32 %188
  %98 = icmp slt i32 %189, %97
  br i1 %98, label %308, label %311

99:                                               ; preds = %0, %164
  %100 = phi i32 [ %165, %164 ], [ 0, %0 ]
  %101 = phi i32 [ %166, %164 ], [ 0, %0 ]
  %102 = phi i32 [ %167, %164 ], [ 0, %0 ]
  %103 = phi i32 [ %168, %164 ], [ 0, %0 ]
  %104 = phi i32 [ %169, %164 ], [ 0, %0 ]
  %105 = phi i32 [ %170, %164 ], [ 0, %0 ]
  %106 = phi i32 [ %171, %164 ], [ 0, %0 ]
  %107 = phi i32 [ %172, %164 ], [ 0, %0 ]
  %108 = phi i32 [ %173, %164 ], [ 0, %0 ]
  %109 = phi i32 [ %174, %164 ], [ 0, %0 ]
  %110 = phi i32 [ %175, %164 ], [ 0, %0 ]
  %111 = phi i32 [ %176, %164 ], [ 0, %0 ]
  %112 = phi i32 [ %177, %164 ], [ 0, %0 ]
  %113 = phi i32 [ %178, %164 ], [ 0, %0 ]
  %114 = phi i32 [ %179, %164 ], [ 0, %0 ]
  %115 = phi i32 [ %180, %164 ], [ 0, %0 ]
  %116 = phi i32 [ %181, %164 ], [ 0, %0 ]
  %117 = phi i32 [ %182, %164 ], [ 0, %0 ]
  %118 = phi i32 [ %183, %164 ], [ 0, %0 ]
  %119 = phi i32 [ %184, %164 ], [ 0, %0 ]
  %120 = phi i32 [ %185, %164 ], [ 0, %0 ]
  %121 = phi i32 [ %186, %164 ], [ 0, %0 ]
  %122 = phi i32 [ %187, %164 ], [ 0, %0 ]
  %123 = phi i32 [ %188, %164 ], [ 0, %0 ]
  %124 = phi i32 [ %189, %164 ], [ 0, %0 ]
  %125 = phi i64 [ %190, %164 ], [ 386547056640, %0 ]
  %126 = phi i64 [ %191, %164 ], [ 0, %0 ]
  %127 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %2, i64 0, i64 %126, i32 0
  %128 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %2, i64 0, i64 %126, i32 1
  %129 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %127, [26 x i8]* nonnull %128)
  %130 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %2, i64 0, i64 %126, i32 1, i64 0
  %131 = load i8, i8* %130, align 4, !tbaa !9
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %164, label %133

133:                                              ; preds = %99, %270
  %134 = phi i32 [ %283, %270 ], [ %100, %99 ]
  %135 = phi i32 [ %282, %270 ], [ %101, %99 ]
  %136 = phi i32 [ %284, %270 ], [ %102, %99 ]
  %137 = phi i32 [ %281, %270 ], [ %103, %99 ]
  %138 = phi i32 [ %285, %270 ], [ %104, %99 ]
  %139 = phi i32 [ %280, %270 ], [ %105, %99 ]
  %140 = phi i32 [ %286, %270 ], [ %106, %99 ]
  %141 = phi i32 [ %279, %270 ], [ %107, %99 ]
  %142 = phi i32 [ %287, %270 ], [ %108, %99 ]
  %143 = phi i32 [ %278, %270 ], [ %109, %99 ]
  %144 = phi i32 [ %288, %270 ], [ %110, %99 ]
  %145 = phi i32 [ %277, %270 ], [ %111, %99 ]
  %146 = phi i32 [ %289, %270 ], [ %112, %99 ]
  %147 = phi i32 [ %276, %270 ], [ %113, %99 ]
  %148 = phi i32 [ %290, %270 ], [ %114, %99 ]
  %149 = phi i32 [ %275, %270 ], [ %115, %99 ]
  %150 = phi i32 [ %291, %270 ], [ %116, %99 ]
  %151 = phi i32 [ %274, %270 ], [ %117, %99 ]
  %152 = phi i32 [ %292, %270 ], [ %118, %99 ]
  %153 = phi i32 [ %273, %270 ], [ %119, %99 ]
  %154 = phi i32 [ %293, %270 ], [ %120, %99 ]
  %155 = phi i32 [ %272, %270 ], [ %121, %99 ]
  %156 = phi i32 [ %294, %270 ], [ %122, %99 ]
  %157 = phi i32 [ %271, %270 ], [ %123, %99 ]
  %158 = phi i32 [ %295, %270 ], [ %124, %99 ]
  %159 = phi i64 [ %303, %270 ], [ %125, %99 ]
  %160 = phi i64 [ %304, %270 ], [ 0, %99 ]
  %161 = phi i8 [ %306, %270 ], [ %131, %99 ]
  switch i8 %161, label %270 [
    i8 65, label %162
    i8 66, label %222
    i8 67, label %224
    i8 68, label %226
    i8 69, label %228
    i8 70, label %230
    i8 71, label %232
    i8 72, label %234
    i8 73, label %236
    i8 74, label %238
    i8 75, label %240
    i8 76, label %242
    i8 77, label %244
    i8 78, label %246
    i8 79, label %248
    i8 80, label %250
    i8 81, label %252
    i8 82, label %254
    i8 83, label %256
    i8 84, label %258
    i8 85, label %260
    i8 86, label %262
    i8 87, label %264
    i8 88, label %266
    i8 89, label %268
  ]

162:                                              ; preds = %133
  %163 = add nsw i32 %134, 1
  br label %270

164:                                              ; preds = %270, %99
  %165 = phi i32 [ %100, %99 ], [ %283, %270 ]
  %166 = phi i32 [ %101, %99 ], [ %282, %270 ]
  %167 = phi i32 [ %102, %99 ], [ %284, %270 ]
  %168 = phi i32 [ %103, %99 ], [ %281, %270 ]
  %169 = phi i32 [ %104, %99 ], [ %285, %270 ]
  %170 = phi i32 [ %105, %99 ], [ %280, %270 ]
  %171 = phi i32 [ %106, %99 ], [ %286, %270 ]
  %172 = phi i32 [ %107, %99 ], [ %279, %270 ]
  %173 = phi i32 [ %108, %99 ], [ %287, %270 ]
  %174 = phi i32 [ %109, %99 ], [ %278, %270 ]
  %175 = phi i32 [ %110, %99 ], [ %288, %270 ]
  %176 = phi i32 [ %111, %99 ], [ %277, %270 ]
  %177 = phi i32 [ %112, %99 ], [ %289, %270 ]
  %178 = phi i32 [ %113, %99 ], [ %276, %270 ]
  %179 = phi i32 [ %114, %99 ], [ %290, %270 ]
  %180 = phi i32 [ %115, %99 ], [ %275, %270 ]
  %181 = phi i32 [ %116, %99 ], [ %291, %270 ]
  %182 = phi i32 [ %117, %99 ], [ %274, %270 ]
  %183 = phi i32 [ %118, %99 ], [ %292, %270 ]
  %184 = phi i32 [ %119, %99 ], [ %273, %270 ]
  %185 = phi i32 [ %120, %99 ], [ %293, %270 ]
  %186 = phi i32 [ %121, %99 ], [ %272, %270 ]
  %187 = phi i32 [ %122, %99 ], [ %294, %270 ]
  %188 = phi i32 [ %123, %99 ], [ %271, %270 ]
  %189 = phi i32 [ %124, %99 ], [ %295, %270 ]
  %190 = phi i64 [ %125, %99 ], [ %303, %270 ]
  %191 = add nuw nsw i64 %126, 1
  %192 = load i32, i32* %1, align 4, !tbaa !5
  %193 = sext i32 %192 to i64
  %194 = icmp slt i64 %191, %193
  br i1 %194, label %99, label %8, !llvm.loop !10

195:                                              ; preds = %311, %216
  %196 = phi i32 [ %217, %216 ], [ %325, %311 ]
  %197 = phi i64 [ %218, %216 ], [ 0, %311 ]
  %198 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %2, i64 0, i64 %197, i32 0
  %199 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %2, i64 0, i64 %197, i32 1, i64 0
  %200 = load i8, i8* %199, align 4, !tbaa !9
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %216, label %202

202:                                              ; preds = %195, %209
  %203 = phi i64 [ %210, %209 ], [ 0, %195 ]
  %204 = phi i8 [ %212, %209 ], [ %200, %195 ]
  %205 = icmp eq i8 %204, %322
  br i1 %205, label %206, label %209

206:                                              ; preds = %202
  %207 = load i32, i32* %198, align 16, !tbaa !12
  %208 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %207)
  br label %209

209:                                              ; preds = %202, %206
  %210 = add nuw i64 %203, 1
  %211 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %2, i64 0, i64 %197, i32 1, i64 %210
  %212 = load i8, i8* %211, align 1, !tbaa !9
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %202, !llvm.loop !14

214:                                              ; preds = %209
  %215 = load i32, i32* %1, align 4, !tbaa !5
  br label %216

216:                                              ; preds = %214, %195
  %217 = phi i32 [ %215, %214 ], [ %196, %195 ]
  %218 = add nuw nsw i64 %197, 1
  %219 = sext i32 %217 to i64
  %220 = icmp slt i64 %218, %219
  br i1 %220, label %195, label %221, !llvm.loop !15

221:                                              ; preds = %216, %311
  call void @llvm.lifetime.end.p0i8(i64 32000, i8* nonnull %5) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #3
  ret i32 0

222:                                              ; preds = %133
  %223 = add nsw i32 %135, 1
  br label %270

224:                                              ; preds = %133
  %225 = add nsw i32 %136, 1
  br label %270

226:                                              ; preds = %133
  %227 = add nsw i32 %137, 1
  br label %270

228:                                              ; preds = %133
  %229 = add nsw i32 %138, 1
  br label %270

230:                                              ; preds = %133
  %231 = add nsw i32 %139, 1
  br label %270

232:                                              ; preds = %133
  %233 = add nsw i32 %140, 1
  br label %270

234:                                              ; preds = %133
  %235 = add nsw i32 %141, 1
  br label %270

236:                                              ; preds = %133
  %237 = add nsw i32 %142, 1
  br label %270

238:                                              ; preds = %133
  %239 = add nsw i32 %143, 1
  br label %270

240:                                              ; preds = %133
  %241 = add nsw i32 %144, 1
  br label %270

242:                                              ; preds = %133
  %243 = add nsw i32 %145, 1
  br label %270

244:                                              ; preds = %133
  %245 = add nsw i32 %146, 1
  br label %270

246:                                              ; preds = %133
  %247 = add nsw i32 %147, 1
  br label %270

248:                                              ; preds = %133
  %249 = add nsw i32 %148, 1
  br label %270

250:                                              ; preds = %133
  %251 = add nsw i32 %149, 1
  br label %270

252:                                              ; preds = %133
  %253 = add nsw i32 %150, 1
  br label %270

254:                                              ; preds = %133
  %255 = add nsw i32 %151, 1
  br label %270

256:                                              ; preds = %133
  %257 = add nsw i32 %152, 1
  br label %270

258:                                              ; preds = %133
  %259 = add nsw i32 %153, 1
  br label %270

260:                                              ; preds = %133
  %261 = add nsw i32 %154, 1
  br label %270

262:                                              ; preds = %133
  %263 = add nsw i32 %155, 1
  br label %270

264:                                              ; preds = %133
  %265 = add nsw i32 %156, 1
  br label %270

266:                                              ; preds = %133
  %267 = add nsw i32 %157, 1
  br label %270

268:                                              ; preds = %133
  %269 = add nsw i32 %158, 1
  br label %270

270:                                              ; preds = %133, %222, %162, %224, %226, %228, %230, %232, %234, %236, %238, %240, %242, %244, %246, %248, %250, %252, %254, %256, %258, %260, %262, %264, %266, %268
  %271 = phi i32 [ %157, %268 ], [ %267, %266 ], [ %157, %264 ], [ %157, %262 ], [ %157, %260 ], [ %157, %258 ], [ %157, %256 ], [ %157, %254 ], [ %157, %252 ], [ %157, %250 ], [ %157, %248 ], [ %157, %246 ], [ %157, %244 ], [ %157, %242 ], [ %157, %240 ], [ %157, %238 ], [ %157, %236 ], [ %157, %234 ], [ %157, %232 ], [ %157, %230 ], [ %157, %228 ], [ %157, %226 ], [ %157, %224 ], [ %157, %162 ], [ %157, %222 ], [ %157, %133 ]
  %272 = phi i32 [ %155, %268 ], [ %155, %266 ], [ %155, %264 ], [ %263, %262 ], [ %155, %260 ], [ %155, %258 ], [ %155, %256 ], [ %155, %254 ], [ %155, %252 ], [ %155, %250 ], [ %155, %248 ], [ %155, %246 ], [ %155, %244 ], [ %155, %242 ], [ %155, %240 ], [ %155, %238 ], [ %155, %236 ], [ %155, %234 ], [ %155, %232 ], [ %155, %230 ], [ %155, %228 ], [ %155, %226 ], [ %155, %224 ], [ %155, %162 ], [ %155, %222 ], [ %155, %133 ]
  %273 = phi i32 [ %153, %268 ], [ %153, %266 ], [ %153, %264 ], [ %153, %262 ], [ %153, %260 ], [ %259, %258 ], [ %153, %256 ], [ %153, %254 ], [ %153, %252 ], [ %153, %250 ], [ %153, %248 ], [ %153, %246 ], [ %153, %244 ], [ %153, %242 ], [ %153, %240 ], [ %153, %238 ], [ %153, %236 ], [ %153, %234 ], [ %153, %232 ], [ %153, %230 ], [ %153, %228 ], [ %153, %226 ], [ %153, %224 ], [ %153, %162 ], [ %153, %222 ], [ %153, %133 ]
  %274 = phi i32 [ %151, %268 ], [ %151, %266 ], [ %151, %264 ], [ %151, %262 ], [ %151, %260 ], [ %151, %258 ], [ %151, %256 ], [ %255, %254 ], [ %151, %252 ], [ %151, %250 ], [ %151, %248 ], [ %151, %246 ], [ %151, %244 ], [ %151, %242 ], [ %151, %240 ], [ %151, %238 ], [ %151, %236 ], [ %151, %234 ], [ %151, %232 ], [ %151, %230 ], [ %151, %228 ], [ %151, %226 ], [ %151, %224 ], [ %151, %162 ], [ %151, %222 ], [ %151, %133 ]
  %275 = phi i32 [ %149, %268 ], [ %149, %266 ], [ %149, %264 ], [ %149, %262 ], [ %149, %260 ], [ %149, %258 ], [ %149, %256 ], [ %149, %254 ], [ %149, %252 ], [ %251, %250 ], [ %149, %248 ], [ %149, %246 ], [ %149, %244 ], [ %149, %242 ], [ %149, %240 ], [ %149, %238 ], [ %149, %236 ], [ %149, %234 ], [ %149, %232 ], [ %149, %230 ], [ %149, %228 ], [ %149, %226 ], [ %149, %224 ], [ %149, %162 ], [ %149, %222 ], [ %149, %133 ]
  %276 = phi i32 [ %147, %268 ], [ %147, %266 ], [ %147, %264 ], [ %147, %262 ], [ %147, %260 ], [ %147, %258 ], [ %147, %256 ], [ %147, %254 ], [ %147, %252 ], [ %147, %250 ], [ %147, %248 ], [ %247, %246 ], [ %147, %244 ], [ %147, %242 ], [ %147, %240 ], [ %147, %238 ], [ %147, %236 ], [ %147, %234 ], [ %147, %232 ], [ %147, %230 ], [ %147, %228 ], [ %147, %226 ], [ %147, %224 ], [ %147, %162 ], [ %147, %222 ], [ %147, %133 ]
  %277 = phi i32 [ %145, %268 ], [ %145, %266 ], [ %145, %264 ], [ %145, %262 ], [ %145, %260 ], [ %145, %258 ], [ %145, %256 ], [ %145, %254 ], [ %145, %252 ], [ %145, %250 ], [ %145, %248 ], [ %145, %246 ], [ %145, %244 ], [ %243, %242 ], [ %145, %240 ], [ %145, %238 ], [ %145, %236 ], [ %145, %234 ], [ %145, %232 ], [ %145, %230 ], [ %145, %228 ], [ %145, %226 ], [ %145, %224 ], [ %145, %162 ], [ %145, %222 ], [ %145, %133 ]
  %278 = phi i32 [ %143, %268 ], [ %143, %266 ], [ %143, %264 ], [ %143, %262 ], [ %143, %260 ], [ %143, %258 ], [ %143, %256 ], [ %143, %254 ], [ %143, %252 ], [ %143, %250 ], [ %143, %248 ], [ %143, %246 ], [ %143, %244 ], [ %143, %242 ], [ %143, %240 ], [ %239, %238 ], [ %143, %236 ], [ %143, %234 ], [ %143, %232 ], [ %143, %230 ], [ %143, %228 ], [ %143, %226 ], [ %143, %224 ], [ %143, %162 ], [ %143, %222 ], [ %143, %133 ]
  %279 = phi i32 [ %141, %268 ], [ %141, %266 ], [ %141, %264 ], [ %141, %262 ], [ %141, %260 ], [ %141, %258 ], [ %141, %256 ], [ %141, %254 ], [ %141, %252 ], [ %141, %250 ], [ %141, %248 ], [ %141, %246 ], [ %141, %244 ], [ %141, %242 ], [ %141, %240 ], [ %141, %238 ], [ %141, %236 ], [ %235, %234 ], [ %141, %232 ], [ %141, %230 ], [ %141, %228 ], [ %141, %226 ], [ %141, %224 ], [ %141, %162 ], [ %141, %222 ], [ %141, %133 ]
  %280 = phi i32 [ %139, %268 ], [ %139, %266 ], [ %139, %264 ], [ %139, %262 ], [ %139, %260 ], [ %139, %258 ], [ %139, %256 ], [ %139, %254 ], [ %139, %252 ], [ %139, %250 ], [ %139, %248 ], [ %139, %246 ], [ %139, %244 ], [ %139, %242 ], [ %139, %240 ], [ %139, %238 ], [ %139, %236 ], [ %139, %234 ], [ %139, %232 ], [ %231, %230 ], [ %139, %228 ], [ %139, %226 ], [ %139, %224 ], [ %139, %162 ], [ %139, %222 ], [ %139, %133 ]
  %281 = phi i32 [ %137, %268 ], [ %137, %266 ], [ %137, %264 ], [ %137, %262 ], [ %137, %260 ], [ %137, %258 ], [ %137, %256 ], [ %137, %254 ], [ %137, %252 ], [ %137, %250 ], [ %137, %248 ], [ %137, %246 ], [ %137, %244 ], [ %137, %242 ], [ %137, %240 ], [ %137, %238 ], [ %137, %236 ], [ %137, %234 ], [ %137, %232 ], [ %137, %230 ], [ %137, %228 ], [ %227, %226 ], [ %137, %224 ], [ %137, %162 ], [ %137, %222 ], [ %137, %133 ]
  %282 = phi i32 [ %135, %268 ], [ %135, %266 ], [ %135, %264 ], [ %135, %262 ], [ %135, %260 ], [ %135, %258 ], [ %135, %256 ], [ %135, %254 ], [ %135, %252 ], [ %135, %250 ], [ %135, %248 ], [ %135, %246 ], [ %135, %244 ], [ %135, %242 ], [ %135, %240 ], [ %135, %238 ], [ %135, %236 ], [ %135, %234 ], [ %135, %232 ], [ %135, %230 ], [ %135, %228 ], [ %135, %226 ], [ %135, %224 ], [ %135, %162 ], [ %223, %222 ], [ %135, %133 ]
  %283 = phi i32 [ %134, %268 ], [ %134, %266 ], [ %134, %264 ], [ %134, %262 ], [ %134, %260 ], [ %134, %258 ], [ %134, %256 ], [ %134, %254 ], [ %134, %252 ], [ %134, %250 ], [ %134, %248 ], [ %134, %246 ], [ %134, %244 ], [ %134, %242 ], [ %134, %240 ], [ %134, %238 ], [ %134, %236 ], [ %134, %234 ], [ %134, %232 ], [ %134, %230 ], [ %134, %228 ], [ %134, %226 ], [ %134, %224 ], [ %163, %162 ], [ %134, %222 ], [ %134, %133 ]
  %284 = phi i32 [ %136, %268 ], [ %136, %266 ], [ %136, %264 ], [ %136, %262 ], [ %136, %260 ], [ %136, %258 ], [ %136, %256 ], [ %136, %254 ], [ %136, %252 ], [ %136, %250 ], [ %136, %248 ], [ %136, %246 ], [ %136, %244 ], [ %136, %242 ], [ %136, %240 ], [ %136, %238 ], [ %136, %236 ], [ %136, %234 ], [ %136, %232 ], [ %136, %230 ], [ %136, %228 ], [ %136, %226 ], [ %225, %224 ], [ %136, %162 ], [ %136, %222 ], [ %136, %133 ]
  %285 = phi i32 [ %138, %268 ], [ %138, %266 ], [ %138, %264 ], [ %138, %262 ], [ %138, %260 ], [ %138, %258 ], [ %138, %256 ], [ %138, %254 ], [ %138, %252 ], [ %138, %250 ], [ %138, %248 ], [ %138, %246 ], [ %138, %244 ], [ %138, %242 ], [ %138, %240 ], [ %138, %238 ], [ %138, %236 ], [ %138, %234 ], [ %138, %232 ], [ %138, %230 ], [ %229, %228 ], [ %138, %226 ], [ %138, %224 ], [ %138, %162 ], [ %138, %222 ], [ %138, %133 ]
  %286 = phi i32 [ %140, %268 ], [ %140, %266 ], [ %140, %264 ], [ %140, %262 ], [ %140, %260 ], [ %140, %258 ], [ %140, %256 ], [ %140, %254 ], [ %140, %252 ], [ %140, %250 ], [ %140, %248 ], [ %140, %246 ], [ %140, %244 ], [ %140, %242 ], [ %140, %240 ], [ %140, %238 ], [ %140, %236 ], [ %140, %234 ], [ %233, %232 ], [ %140, %230 ], [ %140, %228 ], [ %140, %226 ], [ %140, %224 ], [ %140, %162 ], [ %140, %222 ], [ %140, %133 ]
  %287 = phi i32 [ %142, %268 ], [ %142, %266 ], [ %142, %264 ], [ %142, %262 ], [ %142, %260 ], [ %142, %258 ], [ %142, %256 ], [ %142, %254 ], [ %142, %252 ], [ %142, %250 ], [ %142, %248 ], [ %142, %246 ], [ %142, %244 ], [ %142, %242 ], [ %142, %240 ], [ %142, %238 ], [ %237, %236 ], [ %142, %234 ], [ %142, %232 ], [ %142, %230 ], [ %142, %228 ], [ %142, %226 ], [ %142, %224 ], [ %142, %162 ], [ %142, %222 ], [ %142, %133 ]
  %288 = phi i32 [ %144, %268 ], [ %144, %266 ], [ %144, %264 ], [ %144, %262 ], [ %144, %260 ], [ %144, %258 ], [ %144, %256 ], [ %144, %254 ], [ %144, %252 ], [ %144, %250 ], [ %144, %248 ], [ %144, %246 ], [ %144, %244 ], [ %144, %242 ], [ %241, %240 ], [ %144, %238 ], [ %144, %236 ], [ %144, %234 ], [ %144, %232 ], [ %144, %230 ], [ %144, %228 ], [ %144, %226 ], [ %144, %224 ], [ %144, %162 ], [ %144, %222 ], [ %144, %133 ]
  %289 = phi i32 [ %146, %268 ], [ %146, %266 ], [ %146, %264 ], [ %146, %262 ], [ %146, %260 ], [ %146, %258 ], [ %146, %256 ], [ %146, %254 ], [ %146, %252 ], [ %146, %250 ], [ %146, %248 ], [ %146, %246 ], [ %245, %244 ], [ %146, %242 ], [ %146, %240 ], [ %146, %238 ], [ %146, %236 ], [ %146, %234 ], [ %146, %232 ], [ %146, %230 ], [ %146, %228 ], [ %146, %226 ], [ %146, %224 ], [ %146, %162 ], [ %146, %222 ], [ %146, %133 ]
  %290 = phi i32 [ %148, %268 ], [ %148, %266 ], [ %148, %264 ], [ %148, %262 ], [ %148, %260 ], [ %148, %258 ], [ %148, %256 ], [ %148, %254 ], [ %148, %252 ], [ %148, %250 ], [ %249, %248 ], [ %148, %246 ], [ %148, %244 ], [ %148, %242 ], [ %148, %240 ], [ %148, %238 ], [ %148, %236 ], [ %148, %234 ], [ %148, %232 ], [ %148, %230 ], [ %148, %228 ], [ %148, %226 ], [ %148, %224 ], [ %148, %162 ], [ %148, %222 ], [ %148, %133 ]
  %291 = phi i32 [ %150, %268 ], [ %150, %266 ], [ %150, %264 ], [ %150, %262 ], [ %150, %260 ], [ %150, %258 ], [ %150, %256 ], [ %150, %254 ], [ %253, %252 ], [ %150, %250 ], [ %150, %248 ], [ %150, %246 ], [ %150, %244 ], [ %150, %242 ], [ %150, %240 ], [ %150, %238 ], [ %150, %236 ], [ %150, %234 ], [ %150, %232 ], [ %150, %230 ], [ %150, %228 ], [ %150, %226 ], [ %150, %224 ], [ %150, %162 ], [ %150, %222 ], [ %150, %133 ]
  %292 = phi i32 [ %152, %268 ], [ %152, %266 ], [ %152, %264 ], [ %152, %262 ], [ %152, %260 ], [ %152, %258 ], [ %257, %256 ], [ %152, %254 ], [ %152, %252 ], [ %152, %250 ], [ %152, %248 ], [ %152, %246 ], [ %152, %244 ], [ %152, %242 ], [ %152, %240 ], [ %152, %238 ], [ %152, %236 ], [ %152, %234 ], [ %152, %232 ], [ %152, %230 ], [ %152, %228 ], [ %152, %226 ], [ %152, %224 ], [ %152, %162 ], [ %152, %222 ], [ %152, %133 ]
  %293 = phi i32 [ %154, %268 ], [ %154, %266 ], [ %154, %264 ], [ %154, %262 ], [ %261, %260 ], [ %154, %258 ], [ %154, %256 ], [ %154, %254 ], [ %154, %252 ], [ %154, %250 ], [ %154, %248 ], [ %154, %246 ], [ %154, %244 ], [ %154, %242 ], [ %154, %240 ], [ %154, %238 ], [ %154, %236 ], [ %154, %234 ], [ %154, %232 ], [ %154, %230 ], [ %154, %228 ], [ %154, %226 ], [ %154, %224 ], [ %154, %162 ], [ %154, %222 ], [ %154, %133 ]
  %294 = phi i32 [ %156, %268 ], [ %156, %266 ], [ %265, %264 ], [ %156, %262 ], [ %156, %260 ], [ %156, %258 ], [ %156, %256 ], [ %156, %254 ], [ %156, %252 ], [ %156, %250 ], [ %156, %248 ], [ %156, %246 ], [ %156, %244 ], [ %156, %242 ], [ %156, %240 ], [ %156, %238 ], [ %156, %236 ], [ %156, %234 ], [ %156, %232 ], [ %156, %230 ], [ %156, %228 ], [ %156, %226 ], [ %156, %224 ], [ %156, %162 ], [ %156, %222 ], [ %156, %133 ]
  %295 = phi i32 [ %269, %268 ], [ %158, %266 ], [ %158, %264 ], [ %158, %262 ], [ %158, %260 ], [ %158, %258 ], [ %158, %256 ], [ %158, %254 ], [ %158, %252 ], [ %158, %250 ], [ %158, %248 ], [ %158, %246 ], [ %158, %244 ], [ %158, %242 ], [ %158, %240 ], [ %158, %238 ], [ %158, %236 ], [ %158, %234 ], [ %158, %232 ], [ %158, %230 ], [ %158, %228 ], [ %158, %226 ], [ %158, %224 ], [ %158, %162 ], [ %158, %222 ], [ %158, %133 ]
  %296 = lshr i64 %159, 32
  %297 = trunc i64 %296 to i8
  %298 = icmp eq i8 %161, %297
  %299 = add i64 %159, 1
  %300 = and i64 %299, 4294967295
  %301 = and i64 %159, -4294967296
  %302 = or i64 %301, %300
  %303 = select i1 %298, i64 %302, i64 %159
  %304 = add nuw i64 %160, 1
  %305 = getelementptr inbounds [1000 x %struct.book], [1000 x %struct.book]* %2, i64 0, i64 %126, i32 1, i64 %304
  %306 = load i8, i8* %305, align 1, !tbaa !9
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %164, label %133, !llvm.loop !16

308:                                              ; preds = %8
  %309 = trunc i64 %96 to i32
  %310 = or i32 %97, %309
  br label %311

311:                                              ; preds = %0, %308, %8
  %312 = phi i64 [ %190, %308 ], [ %190, %8 ], [ 386547056640, %0 ]
  %313 = phi i64 [ %96, %308 ], [ 382252089344, %8 ], [ 382252089344, %0 ]
  %314 = phi i32 [ %310, %308 ], [ %189, %8 ], [ 0, %0 ]
  %315 = trunc i64 %312 to i32
  %316 = icmp sgt i32 %314, %315
  %317 = trunc i64 %313 to i32
  %318 = or i32 %314, %317
  %319 = select i1 %316, i32 %318, i32 %315
  %320 = select i1 %316, i64 %313, i64 %312
  %321 = lshr i64 %320, 32
  %322 = trunc i64 %321 to i8
  %323 = sext i8 %322 to i32
  %324 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %323, i32 %319)
  %325 = load i32, i32* %1, align 4, !tbaa !5
  %326 = icmp sgt i32 %325, 0
  br i1 %326, label %195, label %221
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = !{!13, !6, i64 0}
!13 = !{!"book", !6, i64 0, !7, i64 4}
!14 = distinct !{!14, !11}
!15 = distinct !{!15, !11}
!16 = distinct !{!16, !11}
