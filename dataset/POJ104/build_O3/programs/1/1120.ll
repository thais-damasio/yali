; ModuleID = 'source-C-CXX/1/1120.c'
source_filename = "source-C-CXX/1/1120.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.shu = type { i32, [26 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@__const.main.b = private unnamed_addr constant [26 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZ", align 16
@.str.2 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca [999 x %struct.shu], align 16
  %2 = alloca i32, align 4
  %3 = bitcast [999 x %struct.shu]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 31968, i8* nonnull %3) #3
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #3
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %2)
  %6 = load i32, i32* %2, align 4, !tbaa !5
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %163

8:                                                ; preds = %0, %8
  %9 = phi i64 [ %13, %8 ], [ 0, %0 ]
  %10 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %9, i32 0
  %11 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %9, i32 1, i64 0
  %12 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %10, i8* nonnull %11)
  %13 = add nuw nsw i64 %9, 1
  %14 = load i32, i32* %2, align 4, !tbaa !5
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %8, label %17, !llvm.loop !9

17:                                               ; preds = %8
  %18 = icmp sgt i32 %14, 0
  br i1 %18, label %19, label %163

19:                                               ; preds = %17
  %20 = zext i32 %14 to i64
  br label %21

21:                                               ; preds = %19, %160
  %22 = phi i32 [ 0, %19 ], [ %132, %160 ]
  %23 = phi i32 [ 0, %19 ], [ %133, %160 ]
  %24 = phi i32 [ 0, %19 ], [ %134, %160 ]
  %25 = phi i32 [ 0, %19 ], [ %135, %160 ]
  %26 = phi i32 [ 0, %19 ], [ %136, %160 ]
  %27 = phi i32 [ 0, %19 ], [ %137, %160 ]
  %28 = phi i32 [ 0, %19 ], [ %138, %160 ]
  %29 = phi i32 [ 0, %19 ], [ %139, %160 ]
  %30 = phi i32 [ 0, %19 ], [ %140, %160 ]
  %31 = phi i32 [ 0, %19 ], [ %141, %160 ]
  %32 = phi i32 [ 0, %19 ], [ %142, %160 ]
  %33 = phi i32 [ 0, %19 ], [ %143, %160 ]
  %34 = phi i32 [ 0, %19 ], [ %144, %160 ]
  %35 = phi i32 [ 0, %19 ], [ %145, %160 ]
  %36 = phi i32 [ 0, %19 ], [ %146, %160 ]
  %37 = phi i32 [ 0, %19 ], [ %147, %160 ]
  %38 = phi i32 [ 0, %19 ], [ %148, %160 ]
  %39 = phi i32 [ 0, %19 ], [ %149, %160 ]
  %40 = phi i32 [ 0, %19 ], [ %150, %160 ]
  %41 = phi i32 [ 0, %19 ], [ %151, %160 ]
  %42 = phi i32 [ 0, %19 ], [ %152, %160 ]
  %43 = phi i32 [ 0, %19 ], [ %153, %160 ]
  %44 = phi i32 [ 0, %19 ], [ %154, %160 ]
  %45 = phi i32 [ 0, %19 ], [ %155, %160 ]
  %46 = phi i32 [ 0, %19 ], [ %156, %160 ]
  %47 = phi i32 [ 0, %19 ], [ %157, %160 ]
  %48 = phi i64 [ 0, %19 ], [ %161, %160 ]
  br label %49

49:                                               ; preds = %21, %131
  %50 = phi i32 [ %22, %21 ], [ %132, %131 ]
  %51 = phi i32 [ %23, %21 ], [ %133, %131 ]
  %52 = phi i32 [ %24, %21 ], [ %134, %131 ]
  %53 = phi i32 [ %25, %21 ], [ %135, %131 ]
  %54 = phi i32 [ %26, %21 ], [ %136, %131 ]
  %55 = phi i32 [ %27, %21 ], [ %137, %131 ]
  %56 = phi i32 [ %28, %21 ], [ %138, %131 ]
  %57 = phi i32 [ %29, %21 ], [ %139, %131 ]
  %58 = phi i32 [ %30, %21 ], [ %140, %131 ]
  %59 = phi i32 [ %31, %21 ], [ %141, %131 ]
  %60 = phi i32 [ %32, %21 ], [ %142, %131 ]
  %61 = phi i32 [ %33, %21 ], [ %143, %131 ]
  %62 = phi i32 [ %34, %21 ], [ %144, %131 ]
  %63 = phi i32 [ %35, %21 ], [ %145, %131 ]
  %64 = phi i32 [ %36, %21 ], [ %146, %131 ]
  %65 = phi i32 [ %37, %21 ], [ %147, %131 ]
  %66 = phi i32 [ %38, %21 ], [ %148, %131 ]
  %67 = phi i32 [ %39, %21 ], [ %149, %131 ]
  %68 = phi i32 [ %40, %21 ], [ %150, %131 ]
  %69 = phi i32 [ %41, %21 ], [ %151, %131 ]
  %70 = phi i32 [ %42, %21 ], [ %152, %131 ]
  %71 = phi i32 [ %43, %21 ], [ %153, %131 ]
  %72 = phi i32 [ %44, %21 ], [ %154, %131 ]
  %73 = phi i32 [ %45, %21 ], [ %155, %131 ]
  %74 = phi i32 [ %46, %21 ], [ %156, %131 ]
  %75 = phi i32 [ %47, %21 ], [ %157, %131 ]
  %76 = phi i64 [ 0, %21 ], [ %158, %131 ]
  %77 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %48, i32 1, i64 %76
  %78 = load i8, i8* %77, align 1, !tbaa !11
  switch i8 %78, label %131 [
    i8 65, label %79
    i8 66, label %81
    i8 67, label %83
    i8 68, label %85
    i8 69, label %87
    i8 70, label %89
    i8 71, label %91
    i8 72, label %93
    i8 73, label %95
    i8 74, label %97
    i8 75, label %99
    i8 76, label %101
    i8 77, label %103
    i8 78, label %105
    i8 79, label %107
    i8 80, label %109
    i8 81, label %111
    i8 82, label %113
    i8 83, label %115
    i8 84, label %117
    i8 85, label %119
    i8 86, label %121
    i8 87, label %123
    i8 88, label %125
    i8 89, label %127
    i8 90, label %129
  ]

79:                                               ; preds = %49
  %80 = add nsw i32 %50, 1
  br label %131

81:                                               ; preds = %49
  %82 = add nsw i32 %51, 1
  br label %131

83:                                               ; preds = %49
  %84 = add nsw i32 %52, 1
  br label %131

85:                                               ; preds = %49
  %86 = add nsw i32 %53, 1
  br label %131

87:                                               ; preds = %49
  %88 = add nsw i32 %54, 1
  br label %131

89:                                               ; preds = %49
  %90 = add nsw i32 %55, 1
  br label %131

91:                                               ; preds = %49
  %92 = add nsw i32 %56, 1
  br label %131

93:                                               ; preds = %49
  %94 = add nsw i32 %57, 1
  br label %131

95:                                               ; preds = %49
  %96 = add nsw i32 %58, 1
  br label %131

97:                                               ; preds = %49
  %98 = add nsw i32 %59, 1
  br label %131

99:                                               ; preds = %49
  %100 = add nsw i32 %60, 1
  br label %131

101:                                              ; preds = %49
  %102 = add nsw i32 %61, 1
  br label %131

103:                                              ; preds = %49
  %104 = add nsw i32 %62, 1
  br label %131

105:                                              ; preds = %49
  %106 = add nsw i32 %63, 1
  br label %131

107:                                              ; preds = %49
  %108 = add nsw i32 %64, 1
  br label %131

109:                                              ; preds = %49
  %110 = add nsw i32 %65, 1
  br label %131

111:                                              ; preds = %49
  %112 = add nsw i32 %66, 1
  br label %131

113:                                              ; preds = %49
  %114 = add nsw i32 %67, 1
  br label %131

115:                                              ; preds = %49
  %116 = add nsw i32 %68, 1
  br label %131

117:                                              ; preds = %49
  %118 = add nsw i32 %69, 1
  br label %131

119:                                              ; preds = %49
  %120 = add nsw i32 %70, 1
  br label %131

121:                                              ; preds = %49
  %122 = add nsw i32 %71, 1
  br label %131

123:                                              ; preds = %49
  %124 = add nsw i32 %72, 1
  br label %131

125:                                              ; preds = %49
  %126 = add nsw i32 %73, 1
  br label %131

127:                                              ; preds = %49
  %128 = add nsw i32 %74, 1
  br label %131

129:                                              ; preds = %49
  %130 = add nsw i32 %75, 1
  br label %131

131:                                              ; preds = %49, %79, %83, %87, %91, %95, %99, %103, %107, %111, %115, %119, %123, %127, %129, %125, %121, %117, %113, %109, %105, %101, %97, %93, %89, %85, %81
  %132 = phi i32 [ %50, %49 ], [ %50, %129 ], [ %50, %127 ], [ %50, %125 ], [ %50, %123 ], [ %50, %121 ], [ %50, %119 ], [ %50, %117 ], [ %50, %115 ], [ %50, %113 ], [ %50, %111 ], [ %50, %109 ], [ %50, %107 ], [ %50, %105 ], [ %50, %103 ], [ %50, %101 ], [ %50, %99 ], [ %50, %97 ], [ %50, %95 ], [ %50, %93 ], [ %50, %91 ], [ %50, %89 ], [ %50, %87 ], [ %50, %85 ], [ %50, %83 ], [ %50, %81 ], [ %80, %79 ]
  %133 = phi i32 [ %51, %49 ], [ %51, %129 ], [ %51, %127 ], [ %51, %125 ], [ %51, %123 ], [ %51, %121 ], [ %51, %119 ], [ %51, %117 ], [ %51, %115 ], [ %51, %113 ], [ %51, %111 ], [ %51, %109 ], [ %51, %107 ], [ %51, %105 ], [ %51, %103 ], [ %51, %101 ], [ %51, %99 ], [ %51, %97 ], [ %51, %95 ], [ %51, %93 ], [ %51, %91 ], [ %51, %89 ], [ %51, %87 ], [ %51, %85 ], [ %51, %83 ], [ %82, %81 ], [ %51, %79 ]
  %134 = phi i32 [ %52, %49 ], [ %52, %129 ], [ %52, %127 ], [ %52, %125 ], [ %52, %123 ], [ %52, %121 ], [ %52, %119 ], [ %52, %117 ], [ %52, %115 ], [ %52, %113 ], [ %52, %111 ], [ %52, %109 ], [ %52, %107 ], [ %52, %105 ], [ %52, %103 ], [ %52, %101 ], [ %52, %99 ], [ %52, %97 ], [ %52, %95 ], [ %52, %93 ], [ %52, %91 ], [ %52, %89 ], [ %52, %87 ], [ %52, %85 ], [ %84, %83 ], [ %52, %81 ], [ %52, %79 ]
  %135 = phi i32 [ %53, %49 ], [ %53, %129 ], [ %53, %127 ], [ %53, %125 ], [ %53, %123 ], [ %53, %121 ], [ %53, %119 ], [ %53, %117 ], [ %53, %115 ], [ %53, %113 ], [ %53, %111 ], [ %53, %109 ], [ %53, %107 ], [ %53, %105 ], [ %53, %103 ], [ %53, %101 ], [ %53, %99 ], [ %53, %97 ], [ %53, %95 ], [ %53, %93 ], [ %53, %91 ], [ %53, %89 ], [ %53, %87 ], [ %86, %85 ], [ %53, %83 ], [ %53, %81 ], [ %53, %79 ]
  %136 = phi i32 [ %54, %49 ], [ %54, %129 ], [ %54, %127 ], [ %54, %125 ], [ %54, %123 ], [ %54, %121 ], [ %54, %119 ], [ %54, %117 ], [ %54, %115 ], [ %54, %113 ], [ %54, %111 ], [ %54, %109 ], [ %54, %107 ], [ %54, %105 ], [ %54, %103 ], [ %54, %101 ], [ %54, %99 ], [ %54, %97 ], [ %54, %95 ], [ %54, %93 ], [ %54, %91 ], [ %54, %89 ], [ %88, %87 ], [ %54, %85 ], [ %54, %83 ], [ %54, %81 ], [ %54, %79 ]
  %137 = phi i32 [ %55, %49 ], [ %55, %129 ], [ %55, %127 ], [ %55, %125 ], [ %55, %123 ], [ %55, %121 ], [ %55, %119 ], [ %55, %117 ], [ %55, %115 ], [ %55, %113 ], [ %55, %111 ], [ %55, %109 ], [ %55, %107 ], [ %55, %105 ], [ %55, %103 ], [ %55, %101 ], [ %55, %99 ], [ %55, %97 ], [ %55, %95 ], [ %55, %93 ], [ %55, %91 ], [ %90, %89 ], [ %55, %87 ], [ %55, %85 ], [ %55, %83 ], [ %55, %81 ], [ %55, %79 ]
  %138 = phi i32 [ %56, %49 ], [ %56, %129 ], [ %56, %127 ], [ %56, %125 ], [ %56, %123 ], [ %56, %121 ], [ %56, %119 ], [ %56, %117 ], [ %56, %115 ], [ %56, %113 ], [ %56, %111 ], [ %56, %109 ], [ %56, %107 ], [ %56, %105 ], [ %56, %103 ], [ %56, %101 ], [ %56, %99 ], [ %56, %97 ], [ %56, %95 ], [ %56, %93 ], [ %92, %91 ], [ %56, %89 ], [ %56, %87 ], [ %56, %85 ], [ %56, %83 ], [ %56, %81 ], [ %56, %79 ]
  %139 = phi i32 [ %57, %49 ], [ %57, %129 ], [ %57, %127 ], [ %57, %125 ], [ %57, %123 ], [ %57, %121 ], [ %57, %119 ], [ %57, %117 ], [ %57, %115 ], [ %57, %113 ], [ %57, %111 ], [ %57, %109 ], [ %57, %107 ], [ %57, %105 ], [ %57, %103 ], [ %57, %101 ], [ %57, %99 ], [ %57, %97 ], [ %57, %95 ], [ %94, %93 ], [ %57, %91 ], [ %57, %89 ], [ %57, %87 ], [ %57, %85 ], [ %57, %83 ], [ %57, %81 ], [ %57, %79 ]
  %140 = phi i32 [ %58, %49 ], [ %58, %129 ], [ %58, %127 ], [ %58, %125 ], [ %58, %123 ], [ %58, %121 ], [ %58, %119 ], [ %58, %117 ], [ %58, %115 ], [ %58, %113 ], [ %58, %111 ], [ %58, %109 ], [ %58, %107 ], [ %58, %105 ], [ %58, %103 ], [ %58, %101 ], [ %58, %99 ], [ %58, %97 ], [ %96, %95 ], [ %58, %93 ], [ %58, %91 ], [ %58, %89 ], [ %58, %87 ], [ %58, %85 ], [ %58, %83 ], [ %58, %81 ], [ %58, %79 ]
  %141 = phi i32 [ %59, %49 ], [ %59, %129 ], [ %59, %127 ], [ %59, %125 ], [ %59, %123 ], [ %59, %121 ], [ %59, %119 ], [ %59, %117 ], [ %59, %115 ], [ %59, %113 ], [ %59, %111 ], [ %59, %109 ], [ %59, %107 ], [ %59, %105 ], [ %59, %103 ], [ %59, %101 ], [ %59, %99 ], [ %98, %97 ], [ %59, %95 ], [ %59, %93 ], [ %59, %91 ], [ %59, %89 ], [ %59, %87 ], [ %59, %85 ], [ %59, %83 ], [ %59, %81 ], [ %59, %79 ]
  %142 = phi i32 [ %60, %49 ], [ %60, %129 ], [ %60, %127 ], [ %60, %125 ], [ %60, %123 ], [ %60, %121 ], [ %60, %119 ], [ %60, %117 ], [ %60, %115 ], [ %60, %113 ], [ %60, %111 ], [ %60, %109 ], [ %60, %107 ], [ %60, %105 ], [ %60, %103 ], [ %60, %101 ], [ %100, %99 ], [ %60, %97 ], [ %60, %95 ], [ %60, %93 ], [ %60, %91 ], [ %60, %89 ], [ %60, %87 ], [ %60, %85 ], [ %60, %83 ], [ %60, %81 ], [ %60, %79 ]
  %143 = phi i32 [ %61, %49 ], [ %61, %129 ], [ %61, %127 ], [ %61, %125 ], [ %61, %123 ], [ %61, %121 ], [ %61, %119 ], [ %61, %117 ], [ %61, %115 ], [ %61, %113 ], [ %61, %111 ], [ %61, %109 ], [ %61, %107 ], [ %61, %105 ], [ %61, %103 ], [ %102, %101 ], [ %61, %99 ], [ %61, %97 ], [ %61, %95 ], [ %61, %93 ], [ %61, %91 ], [ %61, %89 ], [ %61, %87 ], [ %61, %85 ], [ %61, %83 ], [ %61, %81 ], [ %61, %79 ]
  %144 = phi i32 [ %62, %49 ], [ %62, %129 ], [ %62, %127 ], [ %62, %125 ], [ %62, %123 ], [ %62, %121 ], [ %62, %119 ], [ %62, %117 ], [ %62, %115 ], [ %62, %113 ], [ %62, %111 ], [ %62, %109 ], [ %62, %107 ], [ %62, %105 ], [ %104, %103 ], [ %62, %101 ], [ %62, %99 ], [ %62, %97 ], [ %62, %95 ], [ %62, %93 ], [ %62, %91 ], [ %62, %89 ], [ %62, %87 ], [ %62, %85 ], [ %62, %83 ], [ %62, %81 ], [ %62, %79 ]
  %145 = phi i32 [ %63, %49 ], [ %63, %129 ], [ %63, %127 ], [ %63, %125 ], [ %63, %123 ], [ %63, %121 ], [ %63, %119 ], [ %63, %117 ], [ %63, %115 ], [ %63, %113 ], [ %63, %111 ], [ %63, %109 ], [ %63, %107 ], [ %106, %105 ], [ %63, %103 ], [ %63, %101 ], [ %63, %99 ], [ %63, %97 ], [ %63, %95 ], [ %63, %93 ], [ %63, %91 ], [ %63, %89 ], [ %63, %87 ], [ %63, %85 ], [ %63, %83 ], [ %63, %81 ], [ %63, %79 ]
  %146 = phi i32 [ %64, %49 ], [ %64, %129 ], [ %64, %127 ], [ %64, %125 ], [ %64, %123 ], [ %64, %121 ], [ %64, %119 ], [ %64, %117 ], [ %64, %115 ], [ %64, %113 ], [ %64, %111 ], [ %64, %109 ], [ %108, %107 ], [ %64, %105 ], [ %64, %103 ], [ %64, %101 ], [ %64, %99 ], [ %64, %97 ], [ %64, %95 ], [ %64, %93 ], [ %64, %91 ], [ %64, %89 ], [ %64, %87 ], [ %64, %85 ], [ %64, %83 ], [ %64, %81 ], [ %64, %79 ]
  %147 = phi i32 [ %65, %49 ], [ %65, %129 ], [ %65, %127 ], [ %65, %125 ], [ %65, %123 ], [ %65, %121 ], [ %65, %119 ], [ %65, %117 ], [ %65, %115 ], [ %65, %113 ], [ %65, %111 ], [ %110, %109 ], [ %65, %107 ], [ %65, %105 ], [ %65, %103 ], [ %65, %101 ], [ %65, %99 ], [ %65, %97 ], [ %65, %95 ], [ %65, %93 ], [ %65, %91 ], [ %65, %89 ], [ %65, %87 ], [ %65, %85 ], [ %65, %83 ], [ %65, %81 ], [ %65, %79 ]
  %148 = phi i32 [ %66, %49 ], [ %66, %129 ], [ %66, %127 ], [ %66, %125 ], [ %66, %123 ], [ %66, %121 ], [ %66, %119 ], [ %66, %117 ], [ %66, %115 ], [ %66, %113 ], [ %112, %111 ], [ %66, %109 ], [ %66, %107 ], [ %66, %105 ], [ %66, %103 ], [ %66, %101 ], [ %66, %99 ], [ %66, %97 ], [ %66, %95 ], [ %66, %93 ], [ %66, %91 ], [ %66, %89 ], [ %66, %87 ], [ %66, %85 ], [ %66, %83 ], [ %66, %81 ], [ %66, %79 ]
  %149 = phi i32 [ %67, %49 ], [ %67, %129 ], [ %67, %127 ], [ %67, %125 ], [ %67, %123 ], [ %67, %121 ], [ %67, %119 ], [ %67, %117 ], [ %67, %115 ], [ %114, %113 ], [ %67, %111 ], [ %67, %109 ], [ %67, %107 ], [ %67, %105 ], [ %67, %103 ], [ %67, %101 ], [ %67, %99 ], [ %67, %97 ], [ %67, %95 ], [ %67, %93 ], [ %67, %91 ], [ %67, %89 ], [ %67, %87 ], [ %67, %85 ], [ %67, %83 ], [ %67, %81 ], [ %67, %79 ]
  %150 = phi i32 [ %68, %49 ], [ %68, %129 ], [ %68, %127 ], [ %68, %125 ], [ %68, %123 ], [ %68, %121 ], [ %68, %119 ], [ %68, %117 ], [ %116, %115 ], [ %68, %113 ], [ %68, %111 ], [ %68, %109 ], [ %68, %107 ], [ %68, %105 ], [ %68, %103 ], [ %68, %101 ], [ %68, %99 ], [ %68, %97 ], [ %68, %95 ], [ %68, %93 ], [ %68, %91 ], [ %68, %89 ], [ %68, %87 ], [ %68, %85 ], [ %68, %83 ], [ %68, %81 ], [ %68, %79 ]
  %151 = phi i32 [ %69, %49 ], [ %69, %129 ], [ %69, %127 ], [ %69, %125 ], [ %69, %123 ], [ %69, %121 ], [ %69, %119 ], [ %118, %117 ], [ %69, %115 ], [ %69, %113 ], [ %69, %111 ], [ %69, %109 ], [ %69, %107 ], [ %69, %105 ], [ %69, %103 ], [ %69, %101 ], [ %69, %99 ], [ %69, %97 ], [ %69, %95 ], [ %69, %93 ], [ %69, %91 ], [ %69, %89 ], [ %69, %87 ], [ %69, %85 ], [ %69, %83 ], [ %69, %81 ], [ %69, %79 ]
  %152 = phi i32 [ %70, %49 ], [ %70, %129 ], [ %70, %127 ], [ %70, %125 ], [ %70, %123 ], [ %70, %121 ], [ %120, %119 ], [ %70, %117 ], [ %70, %115 ], [ %70, %113 ], [ %70, %111 ], [ %70, %109 ], [ %70, %107 ], [ %70, %105 ], [ %70, %103 ], [ %70, %101 ], [ %70, %99 ], [ %70, %97 ], [ %70, %95 ], [ %70, %93 ], [ %70, %91 ], [ %70, %89 ], [ %70, %87 ], [ %70, %85 ], [ %70, %83 ], [ %70, %81 ], [ %70, %79 ]
  %153 = phi i32 [ %71, %49 ], [ %71, %129 ], [ %71, %127 ], [ %71, %125 ], [ %71, %123 ], [ %122, %121 ], [ %71, %119 ], [ %71, %117 ], [ %71, %115 ], [ %71, %113 ], [ %71, %111 ], [ %71, %109 ], [ %71, %107 ], [ %71, %105 ], [ %71, %103 ], [ %71, %101 ], [ %71, %99 ], [ %71, %97 ], [ %71, %95 ], [ %71, %93 ], [ %71, %91 ], [ %71, %89 ], [ %71, %87 ], [ %71, %85 ], [ %71, %83 ], [ %71, %81 ], [ %71, %79 ]
  %154 = phi i32 [ %72, %49 ], [ %72, %129 ], [ %72, %127 ], [ %72, %125 ], [ %124, %123 ], [ %72, %121 ], [ %72, %119 ], [ %72, %117 ], [ %72, %115 ], [ %72, %113 ], [ %72, %111 ], [ %72, %109 ], [ %72, %107 ], [ %72, %105 ], [ %72, %103 ], [ %72, %101 ], [ %72, %99 ], [ %72, %97 ], [ %72, %95 ], [ %72, %93 ], [ %72, %91 ], [ %72, %89 ], [ %72, %87 ], [ %72, %85 ], [ %72, %83 ], [ %72, %81 ], [ %72, %79 ]
  %155 = phi i32 [ %73, %49 ], [ %73, %129 ], [ %73, %127 ], [ %126, %125 ], [ %73, %123 ], [ %73, %121 ], [ %73, %119 ], [ %73, %117 ], [ %73, %115 ], [ %73, %113 ], [ %73, %111 ], [ %73, %109 ], [ %73, %107 ], [ %73, %105 ], [ %73, %103 ], [ %73, %101 ], [ %73, %99 ], [ %73, %97 ], [ %73, %95 ], [ %73, %93 ], [ %73, %91 ], [ %73, %89 ], [ %73, %87 ], [ %73, %85 ], [ %73, %83 ], [ %73, %81 ], [ %73, %79 ]
  %156 = phi i32 [ %74, %49 ], [ %74, %129 ], [ %128, %127 ], [ %74, %125 ], [ %74, %123 ], [ %74, %121 ], [ %74, %119 ], [ %74, %117 ], [ %74, %115 ], [ %74, %113 ], [ %74, %111 ], [ %74, %109 ], [ %74, %107 ], [ %74, %105 ], [ %74, %103 ], [ %74, %101 ], [ %74, %99 ], [ %74, %97 ], [ %74, %95 ], [ %74, %93 ], [ %74, %91 ], [ %74, %89 ], [ %74, %87 ], [ %74, %85 ], [ %74, %83 ], [ %74, %81 ], [ %74, %79 ]
  %157 = phi i32 [ %75, %49 ], [ %130, %129 ], [ %75, %127 ], [ %75, %125 ], [ %75, %123 ], [ %75, %121 ], [ %75, %119 ], [ %75, %117 ], [ %75, %115 ], [ %75, %113 ], [ %75, %111 ], [ %75, %109 ], [ %75, %107 ], [ %75, %105 ], [ %75, %103 ], [ %75, %101 ], [ %75, %99 ], [ %75, %97 ], [ %75, %95 ], [ %75, %93 ], [ %75, %91 ], [ %75, %89 ], [ %75, %87 ], [ %75, %85 ], [ %75, %83 ], [ %75, %81 ], [ %75, %79 ]
  %158 = add nuw nsw i64 %76, 1
  %159 = icmp eq i64 %158, 26
  br i1 %159, label %160, label %49, !llvm.loop !12

160:                                              ; preds = %131
  %161 = add nuw nsw i64 %48, 1
  %162 = icmp eq i64 %161, %20
  br i1 %162, label %163, label %21, !llvm.loop !13

163:                                              ; preds = %160, %0, %17
  %164 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %132, %160 ]
  %165 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %133, %160 ]
  %166 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %134, %160 ]
  %167 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %135, %160 ]
  %168 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %136, %160 ]
  %169 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %137, %160 ]
  %170 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %138, %160 ]
  %171 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %139, %160 ]
  %172 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %140, %160 ]
  %173 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %141, %160 ]
  %174 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %142, %160 ]
  %175 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %143, %160 ]
  %176 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %144, %160 ]
  %177 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %145, %160 ]
  %178 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %146, %160 ]
  %179 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %147, %160 ]
  %180 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %148, %160 ]
  %181 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %149, %160 ]
  %182 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %150, %160 ]
  %183 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %151, %160 ]
  %184 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %152, %160 ]
  %185 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %153, %160 ]
  %186 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %154, %160 ]
  %187 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %155, %160 ]
  %188 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %156, %160 ]
  %189 = phi i32 [ 0, %17 ], [ 0, %0 ], [ %157, %160 ]
  %190 = icmp slt i32 %164, %165
  %191 = select i1 %190, i32 %165, i32 %164
  %192 = zext i1 %190 to i64
  %193 = icmp slt i32 %191, %166
  %194 = select i1 %193, i32 %166, i32 %191
  %195 = select i1 %193, i64 2, i64 %192
  %196 = icmp slt i32 %194, %167
  %197 = select i1 %196, i32 %167, i32 %194
  %198 = select i1 %196, i64 3, i64 %195
  %199 = icmp slt i32 %197, %168
  %200 = select i1 %199, i32 %168, i32 %197
  %201 = select i1 %199, i64 4, i64 %198
  %202 = icmp slt i32 %200, %169
  %203 = select i1 %202, i32 %169, i32 %200
  %204 = select i1 %202, i64 5, i64 %201
  %205 = icmp slt i32 %203, %170
  %206 = select i1 %205, i32 %170, i32 %203
  %207 = icmp slt i32 %206, %171
  %208 = select i1 %207, i32 %171, i32 %206
  %209 = icmp slt i32 %208, %172
  %210 = select i1 %209, i32 %172, i32 %208
  %211 = icmp slt i32 %210, %173
  %212 = select i1 %211, i32 %173, i32 %210
  %213 = icmp slt i32 %212, %174
  %214 = select i1 %213, i32 %174, i32 %212
  %215 = icmp slt i32 %214, %175
  %216 = select i1 %215, i32 %175, i32 %214
  %217 = icmp slt i32 %216, %176
  %218 = select i1 %217, i32 %176, i32 %216
  %219 = icmp slt i32 %218, %177
  %220 = select i1 %219, i32 %177, i32 %218
  %221 = icmp slt i32 %220, %178
  %222 = select i1 %221, i32 %178, i32 %220
  %223 = icmp slt i32 %222, %179
  %224 = select i1 %223, i32 %179, i32 %222
  %225 = icmp slt i32 %224, %180
  %226 = select i1 %225, i32 %180, i32 %224
  %227 = icmp slt i32 %226, %181
  %228 = select i1 %227, i32 %181, i32 %226
  %229 = icmp slt i32 %228, %182
  %230 = select i1 %229, i32 %182, i32 %228
  %231 = icmp slt i32 %230, %183
  %232 = select i1 %231, i32 %183, i32 %230
  %233 = icmp slt i32 %232, %184
  %234 = select i1 %233, i32 %184, i32 %232
  %235 = icmp slt i32 %234, %185
  %236 = select i1 %235, i32 %185, i32 %234
  %237 = icmp slt i32 %236, %186
  %238 = select i1 %237, i32 %186, i32 %236
  %239 = icmp slt i32 %238, %187
  %240 = select i1 %239, i32 %187, i32 %238
  %241 = icmp slt i32 %240, %188
  %242 = select i1 %241, i32 %188, i32 %240
  %243 = icmp slt i32 %242, %189
  %244 = select i1 %243, i32 %189, i32 %242
  %245 = select i1 %205, i64 6, i64 %204
  %246 = select i1 %207, i64 7, i64 %245
  %247 = select i1 %209, i64 8, i64 %246
  %248 = select i1 %211, i64 9, i64 %247
  %249 = select i1 %213, i64 10, i64 %248
  %250 = select i1 %215, i64 11, i64 %249
  %251 = select i1 %217, i64 12, i64 %250
  %252 = select i1 %219, i64 13, i64 %251
  %253 = select i1 %221, i64 14, i64 %252
  %254 = select i1 %223, i64 15, i64 %253
  %255 = select i1 %225, i64 16, i64 %254
  %256 = select i1 %227, i64 17, i64 %255
  %257 = select i1 %229, i64 18, i64 %256
  %258 = select i1 %231, i64 19, i64 %257
  %259 = select i1 %233, i64 20, i64 %258
  %260 = select i1 %235, i64 21, i64 %259
  %261 = select i1 %237, i64 22, i64 %260
  %262 = select i1 %239, i64 23, i64 %261
  %263 = select i1 %241, i64 24, i64 %262
  %264 = select i1 %243, i64 25, i64 %263
  %265 = getelementptr inbounds [26 x i8], [26 x i8]* @__const.main.b, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1, !tbaa !11
  %267 = sext i8 %266 to i32
  %268 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %267)
  %269 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %244)
  %270 = load i32, i32* %2, align 4, !tbaa !5
  %271 = icmp sgt i32 %270, 0
  br i1 %271, label %272, label %292

272:                                              ; preds = %163, %287
  %273 = phi i32 [ %288, %287 ], [ %270, %163 ]
  %274 = phi i64 [ %289, %287 ], [ 0, %163 ]
  %275 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 0
  %276 = load i8, i8* %275, align 4, !tbaa !11
  %277 = icmp eq i8 %276, %266
  br i1 %277, label %282, label %278

278:                                              ; preds = %272
  %279 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 1
  %280 = load i8, i8* %279, align 1, !tbaa !11
  %281 = icmp eq i8 %280, %266
  br i1 %281, label %282, label %293

282:                                              ; preds = %385, %381, %377, %373, %369, %365, %361, %357, %353, %349, %345, %341, %337, %333, %329, %325, %321, %317, %313, %309, %305, %301, %297, %293, %278, %272
  %283 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 0
  %284 = load i32, i32* %283, align 16, !tbaa !14
  %285 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %284)
  %286 = load i32, i32* %2, align 4, !tbaa !5
  br label %287

287:                                              ; preds = %385, %282
  %288 = phi i32 [ %286, %282 ], [ %273, %385 ]
  %289 = add nuw nsw i64 %274, 1
  %290 = sext i32 %288 to i64
  %291 = icmp slt i64 %289, %290
  br i1 %291, label %272, label %292, !llvm.loop !16

292:                                              ; preds = %287, %163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #3
  call void @llvm.lifetime.end.p0i8(i64 31968, i8* nonnull %3) #3
  ret void

293:                                              ; preds = %278
  %294 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 2
  %295 = load i8, i8* %294, align 2, !tbaa !11
  %296 = icmp eq i8 %295, %266
  br i1 %296, label %282, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 3
  %299 = load i8, i8* %298, align 1, !tbaa !11
  %300 = icmp eq i8 %299, %266
  br i1 %300, label %282, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 4
  %303 = load i8, i8* %302, align 8, !tbaa !11
  %304 = icmp eq i8 %303, %266
  br i1 %304, label %282, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 5
  %307 = load i8, i8* %306, align 1, !tbaa !11
  %308 = icmp eq i8 %307, %266
  br i1 %308, label %282, label %309

309:                                              ; preds = %305
  %310 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 6
  %311 = load i8, i8* %310, align 2, !tbaa !11
  %312 = icmp eq i8 %311, %266
  br i1 %312, label %282, label %313

313:                                              ; preds = %309
  %314 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 7
  %315 = load i8, i8* %314, align 1, !tbaa !11
  %316 = icmp eq i8 %315, %266
  br i1 %316, label %282, label %317

317:                                              ; preds = %313
  %318 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 8
  %319 = load i8, i8* %318, align 4, !tbaa !11
  %320 = icmp eq i8 %319, %266
  br i1 %320, label %282, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 9
  %323 = load i8, i8* %322, align 1, !tbaa !11
  %324 = icmp eq i8 %323, %266
  br i1 %324, label %282, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 10
  %327 = load i8, i8* %326, align 2, !tbaa !11
  %328 = icmp eq i8 %327, %266
  br i1 %328, label %282, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 11
  %331 = load i8, i8* %330, align 1, !tbaa !11
  %332 = icmp eq i8 %331, %266
  br i1 %332, label %282, label %333

333:                                              ; preds = %329
  %334 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 12
  %335 = load i8, i8* %334, align 16, !tbaa !11
  %336 = icmp eq i8 %335, %266
  br i1 %336, label %282, label %337

337:                                              ; preds = %333
  %338 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 13
  %339 = load i8, i8* %338, align 1, !tbaa !11
  %340 = icmp eq i8 %339, %266
  br i1 %340, label %282, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 14
  %343 = load i8, i8* %342, align 2, !tbaa !11
  %344 = icmp eq i8 %343, %266
  br i1 %344, label %282, label %345

345:                                              ; preds = %341
  %346 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 15
  %347 = load i8, i8* %346, align 1, !tbaa !11
  %348 = icmp eq i8 %347, %266
  br i1 %348, label %282, label %349

349:                                              ; preds = %345
  %350 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 16
  %351 = load i8, i8* %350, align 4, !tbaa !11
  %352 = icmp eq i8 %351, %266
  br i1 %352, label %282, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 17
  %355 = load i8, i8* %354, align 1, !tbaa !11
  %356 = icmp eq i8 %355, %266
  br i1 %356, label %282, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 18
  %359 = load i8, i8* %358, align 2, !tbaa !11
  %360 = icmp eq i8 %359, %266
  br i1 %360, label %282, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 19
  %363 = load i8, i8* %362, align 1, !tbaa !11
  %364 = icmp eq i8 %363, %266
  br i1 %364, label %282, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 20
  %367 = load i8, i8* %366, align 8, !tbaa !11
  %368 = icmp eq i8 %367, %266
  br i1 %368, label %282, label %369

369:                                              ; preds = %365
  %370 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 21
  %371 = load i8, i8* %370, align 1, !tbaa !11
  %372 = icmp eq i8 %371, %266
  br i1 %372, label %282, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 22
  %375 = load i8, i8* %374, align 2, !tbaa !11
  %376 = icmp eq i8 %375, %266
  br i1 %376, label %282, label %377

377:                                              ; preds = %373
  %378 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 23
  %379 = load i8, i8* %378, align 1, !tbaa !11
  %380 = icmp eq i8 %379, %266
  br i1 %380, label %282, label %381

381:                                              ; preds = %377
  %382 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 24
  %383 = load i8, i8* %382, align 4, !tbaa !11
  %384 = icmp eq i8 %383, %266
  br i1 %384, label %282, label %385

385:                                              ; preds = %381
  %386 = getelementptr inbounds [999 x %struct.shu], [999 x %struct.shu]* %1, i64 0, i64 %274, i32 1, i64 25
  %387 = load i8, i8* %386, align 1, !tbaa !11
  %388 = icmp eq i8 %387, %266
  br i1 %388, label %282, label %287
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = !{!15, !6, i64 0}
!15 = !{!"shu", !6, i64 0, !7, i64 4}
!16 = distinct !{!16, !10}
