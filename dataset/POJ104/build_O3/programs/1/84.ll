; ModuleID = 'source-C-CXX/1/84.c'
source_filename = "source-C-CXX/1/84.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [999 x i32], align 16
  %3 = alloca [999 x [26 x i8]], align 16
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #3
  %5 = bitcast [999 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3996, i8* nonnull %5) #3
  %6 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 25974, i8* nonnull %6) #3
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %8 = load i32, i32* %1, align 4, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %12, label %54

10:                                               ; preds = %12
  %11 = icmp sgt i32 %18, 0
  br i1 %11, label %21, label %54

12:                                               ; preds = %0, %12
  %13 = phi i64 [ %17, %12 ], [ 0, %0 ]
  %14 = getelementptr inbounds [999 x i32], [999 x i32]* %2, i64 0, i64 %13
  %15 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %13, i64 0
  %16 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %14, i8* nonnull %15)
  %17 = add nuw nsw i64 %13, 1
  %18 = load i32, i32* %1, align 4, !tbaa !5
  %19 = sext i32 %18 to i64
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %12, label %10, !llvm.loop !9

21:                                               ; preds = %10
  %22 = zext i32 %18 to i64
  br label %23

23:                                               ; preds = %21, %193
  %24 = phi i32 [ 0, %21 ], [ %282, %193 ]
  %25 = phi i32 [ 0, %21 ], [ %283, %193 ]
  %26 = phi i32 [ 0, %21 ], [ %281, %193 ]
  %27 = phi i32 [ 0, %21 ], [ %284, %193 ]
  %28 = phi i32 [ 0, %21 ], [ %280, %193 ]
  %29 = phi i32 [ 0, %21 ], [ %285, %193 ]
  %30 = phi i32 [ 0, %21 ], [ %279, %193 ]
  %31 = phi i32 [ 0, %21 ], [ %286, %193 ]
  %32 = phi i32 [ 0, %21 ], [ %278, %193 ]
  %33 = phi i32 [ 0, %21 ], [ %287, %193 ]
  %34 = phi i32 [ 0, %21 ], [ %277, %193 ]
  %35 = phi i32 [ 0, %21 ], [ %288, %193 ]
  %36 = phi i32 [ 0, %21 ], [ %276, %193 ]
  %37 = phi i32 [ 0, %21 ], [ %289, %193 ]
  %38 = phi i32 [ 0, %21 ], [ %275, %193 ]
  %39 = phi i32 [ 0, %21 ], [ %290, %193 ]
  %40 = phi i32 [ 0, %21 ], [ %274, %193 ]
  %41 = phi i32 [ 0, %21 ], [ %291, %193 ]
  %42 = phi i32 [ 0, %21 ], [ %273, %193 ]
  %43 = phi i32 [ 0, %21 ], [ %292, %193 ]
  %44 = phi i32 [ 0, %21 ], [ %272, %193 ]
  %45 = phi i32 [ 0, %21 ], [ %293, %193 ]
  %46 = phi i32 [ 0, %21 ], [ %271, %193 ]
  %47 = phi i32 [ 0, %21 ], [ %294, %193 ]
  %48 = phi i32 [ 0, %21 ], [ %270, %193 ]
  %49 = phi i32 [ 0, %21 ], [ %295, %193 ]
  %50 = phi i64 [ 0, %21 ], [ %194, %193 ]
  br label %160

51:                                               ; preds = %193
  %52 = icmp sgt i32 %282, 0
  %53 = select i1 %52, i32 %282, i32 0
  br label %54

54:                                               ; preds = %51, %0, %10
  %55 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %295, %51 ]
  %56 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %270, %51 ]
  %57 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %294, %51 ]
  %58 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %271, %51 ]
  %59 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %293, %51 ]
  %60 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %272, %51 ]
  %61 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %292, %51 ]
  %62 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %273, %51 ]
  %63 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %291, %51 ]
  %64 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %274, %51 ]
  %65 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %290, %51 ]
  %66 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %275, %51 ]
  %67 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %289, %51 ]
  %68 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %276, %51 ]
  %69 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %288, %51 ]
  %70 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %277, %51 ]
  %71 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %287, %51 ]
  %72 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %278, %51 ]
  %73 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %286, %51 ]
  %74 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %279, %51 ]
  %75 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %285, %51 ]
  %76 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %280, %51 ]
  %77 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %284, %51 ]
  %78 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %281, %51 ]
  %79 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %283, %51 ]
  %80 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %53, %51 ]
  %81 = icmp sgt i32 %79, %80
  %82 = select i1 %81, i32 %79, i32 %80
  %83 = icmp sgt i32 %78, %82
  %84 = select i1 %83, i32 %78, i32 %82
  %85 = icmp sgt i32 %77, %84
  %86 = select i1 %85, i32 %77, i32 %84
  %87 = icmp sgt i32 %76, %86
  %88 = select i1 %87, i32 %76, i32 %86
  %89 = icmp sgt i32 %75, %88
  %90 = select i1 %89, i32 %75, i32 %88
  %91 = icmp sgt i32 %74, %90
  %92 = select i1 %91, i32 %74, i32 %90
  %93 = icmp sgt i32 %73, %92
  %94 = select i1 %93, i32 %73, i32 %92
  %95 = icmp sgt i32 %72, %94
  %96 = select i1 %95, i32 %72, i32 %94
  %97 = icmp sgt i32 %71, %96
  %98 = select i1 %97, i32 %71, i32 %96
  %99 = icmp sgt i32 %70, %98
  %100 = select i1 %99, i32 %70, i32 %98
  %101 = icmp sgt i32 %69, %100
  %102 = select i1 %101, i32 %69, i32 %100
  %103 = icmp sgt i32 %68, %102
  %104 = select i1 %103, i32 %68, i32 %102
  %105 = icmp sgt i32 %67, %104
  %106 = select i1 %105, i32 %67, i32 %104
  %107 = icmp sgt i32 %66, %106
  %108 = select i1 %107, i32 %66, i32 %106
  %109 = icmp sgt i32 %65, %108
  %110 = select i1 %109, i32 %65, i32 %108
  %111 = icmp sgt i32 %64, %110
  %112 = select i1 %111, i32 %64, i32 %110
  %113 = icmp sgt i32 %63, %112
  %114 = select i1 %113, i32 %63, i32 %112
  %115 = icmp sgt i32 %62, %114
  %116 = select i1 %115, i32 %62, i32 %114
  %117 = icmp sgt i32 %61, %116
  %118 = select i1 %117, i32 %61, i32 %116
  %119 = icmp sgt i32 %60, %118
  %120 = select i1 %119, i32 %60, i32 %118
  %121 = icmp sgt i32 %59, %120
  %122 = select i1 %121, i32 %59, i32 %120
  %123 = icmp sgt i32 %58, %122
  %124 = select i1 %123, i32 %58, i32 %122
  %125 = icmp sgt i32 %57, %124
  %126 = select i1 %125, i32 %57, i32 %124
  %127 = icmp sgt i32 %56, %126
  %128 = select i1 %127, i32 %56, i32 %126
  %129 = icmp sgt i32 %55, %128
  %130 = select i1 %129, i32 %55, i32 %128
  %131 = select i1 %81, i32 66, i32 65
  %132 = select i1 %83, i32 67, i32 %131
  %133 = select i1 %85, i32 68, i32 %132
  %134 = select i1 %87, i32 69, i32 %133
  %135 = select i1 %89, i32 70, i32 %134
  %136 = select i1 %91, i32 71, i32 %135
  %137 = select i1 %93, i32 72, i32 %136
  %138 = select i1 %95, i32 73, i32 %137
  %139 = select i1 %97, i32 74, i32 %138
  %140 = select i1 %99, i32 75, i32 %139
  %141 = select i1 %101, i32 76, i32 %140
  %142 = select i1 %103, i32 77, i32 %141
  %143 = select i1 %105, i32 78, i32 %142
  %144 = select i1 %107, i32 79, i32 %143
  %145 = select i1 %109, i32 80, i32 %144
  %146 = select i1 %111, i32 81, i32 %145
  %147 = select i1 %113, i32 82, i32 %146
  %148 = select i1 %115, i32 83, i32 %147
  %149 = select i1 %117, i32 84, i32 %148
  %150 = select i1 %119, i32 85, i32 %149
  %151 = select i1 %121, i32 86, i32 %150
  %152 = select i1 %123, i32 87, i32 %151
  %153 = select i1 %125, i32 88, i32 %152
  %154 = select i1 %127, i32 89, i32 %153
  %155 = select i1 %129, i32 90, i32 %154
  %156 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %155)
  %157 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %130)
  %158 = load i32, i32* %1, align 4, !tbaa !5
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %196, label %218

160:                                              ; preds = %23, %269
  %161 = phi i32 [ %24, %23 ], [ %282, %269 ]
  %162 = phi i32 [ %25, %23 ], [ %283, %269 ]
  %163 = phi i32 [ %26, %23 ], [ %281, %269 ]
  %164 = phi i32 [ %27, %23 ], [ %284, %269 ]
  %165 = phi i32 [ %28, %23 ], [ %280, %269 ]
  %166 = phi i32 [ %29, %23 ], [ %285, %269 ]
  %167 = phi i32 [ %30, %23 ], [ %279, %269 ]
  %168 = phi i32 [ %31, %23 ], [ %286, %269 ]
  %169 = phi i32 [ %32, %23 ], [ %278, %269 ]
  %170 = phi i32 [ %33, %23 ], [ %287, %269 ]
  %171 = phi i32 [ %34, %23 ], [ %277, %269 ]
  %172 = phi i32 [ %35, %23 ], [ %288, %269 ]
  %173 = phi i32 [ %36, %23 ], [ %276, %269 ]
  %174 = phi i32 [ %37, %23 ], [ %289, %269 ]
  %175 = phi i32 [ %38, %23 ], [ %275, %269 ]
  %176 = phi i32 [ %39, %23 ], [ %290, %269 ]
  %177 = phi i32 [ %40, %23 ], [ %274, %269 ]
  %178 = phi i32 [ %41, %23 ], [ %291, %269 ]
  %179 = phi i32 [ %42, %23 ], [ %273, %269 ]
  %180 = phi i32 [ %43, %23 ], [ %292, %269 ]
  %181 = phi i32 [ %44, %23 ], [ %272, %269 ]
  %182 = phi i32 [ %45, %23 ], [ %293, %269 ]
  %183 = phi i32 [ %46, %23 ], [ %271, %269 ]
  %184 = phi i32 [ %47, %23 ], [ %294, %269 ]
  %185 = phi i32 [ %48, %23 ], [ %270, %269 ]
  %186 = phi i32 [ %49, %23 ], [ %295, %269 ]
  %187 = phi i64 [ 0, %23 ], [ %296, %269 ]
  %188 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %50, i64 %187
  %189 = load i8, i8* %188, align 1, !tbaa !11
  %190 = sext i8 %189 to i32
  switch i32 %190, label %269 [
    i32 65, label %191
    i32 66, label %219
    i32 67, label %221
    i32 68, label %223
    i32 69, label %225
    i32 70, label %227
    i32 71, label %229
    i32 72, label %231
    i32 73, label %233
    i32 74, label %235
    i32 75, label %237
    i32 76, label %239
    i32 77, label %241
    i32 78, label %243
    i32 79, label %245
    i32 80, label %247
    i32 81, label %249
    i32 82, label %251
    i32 83, label %253
    i32 84, label %255
    i32 85, label %257
    i32 86, label %259
    i32 87, label %261
    i32 88, label %263
    i32 89, label %265
    i32 90, label %267
  ]

191:                                              ; preds = %160
  %192 = add nsw i32 %161, 1
  br label %269

193:                                              ; preds = %269
  %194 = add nuw nsw i64 %50, 1
  %195 = icmp eq i64 %194, %22
  br i1 %195, label %51, label %23, !llvm.loop !12

196:                                              ; preds = %54, %213
  %197 = phi i32 [ %214, %213 ], [ %158, %54 ]
  %198 = phi i64 [ %215, %213 ], [ 0, %54 ]
  %199 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 0
  %200 = load i8, i8* %199, align 2, !tbaa !11
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %155, %201
  br i1 %202, label %208, label %203

203:                                              ; preds = %196
  %204 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 1
  %205 = load i8, i8* %204, align 1, !tbaa !11
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %155, %206
  br i1 %207, label %208, label %298

208:                                              ; preds = %413, %408, %403, %398, %393, %388, %383, %378, %373, %368, %363, %358, %353, %348, %343, %338, %333, %328, %323, %318, %313, %308, %303, %298, %203, %196
  %209 = getelementptr inbounds [999 x i32], [999 x i32]* %2, i64 0, i64 %198
  %210 = load i32, i32* %209, align 4, !tbaa !5
  %211 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %210)
  %212 = load i32, i32* %1, align 4, !tbaa !5
  br label %213

213:                                              ; preds = %413, %208
  %214 = phi i32 [ %212, %208 ], [ %197, %413 ]
  %215 = add nuw nsw i64 %198, 1
  %216 = sext i32 %214 to i64
  %217 = icmp slt i64 %215, %216
  br i1 %217, label %196, label %218, !llvm.loop !13

218:                                              ; preds = %213, %54
  call void @llvm.lifetime.end.p0i8(i64 25974, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 3996, i8* nonnull %5) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #3
  ret i32 0

219:                                              ; preds = %160
  %220 = add nsw i32 %162, 1
  br label %269

221:                                              ; preds = %160
  %222 = add nsw i32 %163, 1
  br label %269

223:                                              ; preds = %160
  %224 = add nsw i32 %164, 1
  br label %269

225:                                              ; preds = %160
  %226 = add nsw i32 %165, 1
  br label %269

227:                                              ; preds = %160
  %228 = add nsw i32 %166, 1
  br label %269

229:                                              ; preds = %160
  %230 = add nsw i32 %167, 1
  br label %269

231:                                              ; preds = %160
  %232 = add nsw i32 %168, 1
  br label %269

233:                                              ; preds = %160
  %234 = add nsw i32 %169, 1
  br label %269

235:                                              ; preds = %160
  %236 = add nsw i32 %170, 1
  br label %269

237:                                              ; preds = %160
  %238 = add nsw i32 %171, 1
  br label %269

239:                                              ; preds = %160
  %240 = add nsw i32 %172, 1
  br label %269

241:                                              ; preds = %160
  %242 = add nsw i32 %173, 1
  br label %269

243:                                              ; preds = %160
  %244 = add nsw i32 %174, 1
  br label %269

245:                                              ; preds = %160
  %246 = add nsw i32 %175, 1
  br label %269

247:                                              ; preds = %160
  %248 = add nsw i32 %176, 1
  br label %269

249:                                              ; preds = %160
  %250 = add nsw i32 %177, 1
  br label %269

251:                                              ; preds = %160
  %252 = add nsw i32 %178, 1
  br label %269

253:                                              ; preds = %160
  %254 = add nsw i32 %179, 1
  br label %269

255:                                              ; preds = %160
  %256 = add nsw i32 %180, 1
  br label %269

257:                                              ; preds = %160
  %258 = add nsw i32 %181, 1
  br label %269

259:                                              ; preds = %160
  %260 = add nsw i32 %182, 1
  br label %269

261:                                              ; preds = %160
  %262 = add nsw i32 %183, 1
  br label %269

263:                                              ; preds = %160
  %264 = add nsw i32 %184, 1
  br label %269

265:                                              ; preds = %160
  %266 = add nsw i32 %185, 1
  br label %269

267:                                              ; preds = %160
  %268 = add nsw i32 %186, 1
  br label %269

269:                                              ; preds = %160, %219, %191, %221, %223, %225, %227, %229, %231, %233, %235, %237, %239, %241, %243, %245, %247, %249, %251, %253, %255, %257, %259, %261, %263, %265, %267
  %270 = phi i32 [ %185, %267 ], [ %266, %265 ], [ %185, %263 ], [ %185, %261 ], [ %185, %259 ], [ %185, %257 ], [ %185, %255 ], [ %185, %253 ], [ %185, %251 ], [ %185, %249 ], [ %185, %247 ], [ %185, %245 ], [ %185, %243 ], [ %185, %241 ], [ %185, %239 ], [ %185, %237 ], [ %185, %235 ], [ %185, %233 ], [ %185, %231 ], [ %185, %229 ], [ %185, %227 ], [ %185, %225 ], [ %185, %223 ], [ %185, %221 ], [ %185, %191 ], [ %185, %219 ], [ %185, %160 ]
  %271 = phi i32 [ %183, %267 ], [ %183, %265 ], [ %183, %263 ], [ %262, %261 ], [ %183, %259 ], [ %183, %257 ], [ %183, %255 ], [ %183, %253 ], [ %183, %251 ], [ %183, %249 ], [ %183, %247 ], [ %183, %245 ], [ %183, %243 ], [ %183, %241 ], [ %183, %239 ], [ %183, %237 ], [ %183, %235 ], [ %183, %233 ], [ %183, %231 ], [ %183, %229 ], [ %183, %227 ], [ %183, %225 ], [ %183, %223 ], [ %183, %221 ], [ %183, %191 ], [ %183, %219 ], [ %183, %160 ]
  %272 = phi i32 [ %181, %267 ], [ %181, %265 ], [ %181, %263 ], [ %181, %261 ], [ %181, %259 ], [ %258, %257 ], [ %181, %255 ], [ %181, %253 ], [ %181, %251 ], [ %181, %249 ], [ %181, %247 ], [ %181, %245 ], [ %181, %243 ], [ %181, %241 ], [ %181, %239 ], [ %181, %237 ], [ %181, %235 ], [ %181, %233 ], [ %181, %231 ], [ %181, %229 ], [ %181, %227 ], [ %181, %225 ], [ %181, %223 ], [ %181, %221 ], [ %181, %191 ], [ %181, %219 ], [ %181, %160 ]
  %273 = phi i32 [ %179, %267 ], [ %179, %265 ], [ %179, %263 ], [ %179, %261 ], [ %179, %259 ], [ %179, %257 ], [ %179, %255 ], [ %254, %253 ], [ %179, %251 ], [ %179, %249 ], [ %179, %247 ], [ %179, %245 ], [ %179, %243 ], [ %179, %241 ], [ %179, %239 ], [ %179, %237 ], [ %179, %235 ], [ %179, %233 ], [ %179, %231 ], [ %179, %229 ], [ %179, %227 ], [ %179, %225 ], [ %179, %223 ], [ %179, %221 ], [ %179, %191 ], [ %179, %219 ], [ %179, %160 ]
  %274 = phi i32 [ %177, %267 ], [ %177, %265 ], [ %177, %263 ], [ %177, %261 ], [ %177, %259 ], [ %177, %257 ], [ %177, %255 ], [ %177, %253 ], [ %177, %251 ], [ %250, %249 ], [ %177, %247 ], [ %177, %245 ], [ %177, %243 ], [ %177, %241 ], [ %177, %239 ], [ %177, %237 ], [ %177, %235 ], [ %177, %233 ], [ %177, %231 ], [ %177, %229 ], [ %177, %227 ], [ %177, %225 ], [ %177, %223 ], [ %177, %221 ], [ %177, %191 ], [ %177, %219 ], [ %177, %160 ]
  %275 = phi i32 [ %175, %267 ], [ %175, %265 ], [ %175, %263 ], [ %175, %261 ], [ %175, %259 ], [ %175, %257 ], [ %175, %255 ], [ %175, %253 ], [ %175, %251 ], [ %175, %249 ], [ %175, %247 ], [ %246, %245 ], [ %175, %243 ], [ %175, %241 ], [ %175, %239 ], [ %175, %237 ], [ %175, %235 ], [ %175, %233 ], [ %175, %231 ], [ %175, %229 ], [ %175, %227 ], [ %175, %225 ], [ %175, %223 ], [ %175, %221 ], [ %175, %191 ], [ %175, %219 ], [ %175, %160 ]
  %276 = phi i32 [ %173, %267 ], [ %173, %265 ], [ %173, %263 ], [ %173, %261 ], [ %173, %259 ], [ %173, %257 ], [ %173, %255 ], [ %173, %253 ], [ %173, %251 ], [ %173, %249 ], [ %173, %247 ], [ %173, %245 ], [ %173, %243 ], [ %242, %241 ], [ %173, %239 ], [ %173, %237 ], [ %173, %235 ], [ %173, %233 ], [ %173, %231 ], [ %173, %229 ], [ %173, %227 ], [ %173, %225 ], [ %173, %223 ], [ %173, %221 ], [ %173, %191 ], [ %173, %219 ], [ %173, %160 ]
  %277 = phi i32 [ %171, %267 ], [ %171, %265 ], [ %171, %263 ], [ %171, %261 ], [ %171, %259 ], [ %171, %257 ], [ %171, %255 ], [ %171, %253 ], [ %171, %251 ], [ %171, %249 ], [ %171, %247 ], [ %171, %245 ], [ %171, %243 ], [ %171, %241 ], [ %171, %239 ], [ %238, %237 ], [ %171, %235 ], [ %171, %233 ], [ %171, %231 ], [ %171, %229 ], [ %171, %227 ], [ %171, %225 ], [ %171, %223 ], [ %171, %221 ], [ %171, %191 ], [ %171, %219 ], [ %171, %160 ]
  %278 = phi i32 [ %169, %267 ], [ %169, %265 ], [ %169, %263 ], [ %169, %261 ], [ %169, %259 ], [ %169, %257 ], [ %169, %255 ], [ %169, %253 ], [ %169, %251 ], [ %169, %249 ], [ %169, %247 ], [ %169, %245 ], [ %169, %243 ], [ %169, %241 ], [ %169, %239 ], [ %169, %237 ], [ %169, %235 ], [ %234, %233 ], [ %169, %231 ], [ %169, %229 ], [ %169, %227 ], [ %169, %225 ], [ %169, %223 ], [ %169, %221 ], [ %169, %191 ], [ %169, %219 ], [ %169, %160 ]
  %279 = phi i32 [ %167, %267 ], [ %167, %265 ], [ %167, %263 ], [ %167, %261 ], [ %167, %259 ], [ %167, %257 ], [ %167, %255 ], [ %167, %253 ], [ %167, %251 ], [ %167, %249 ], [ %167, %247 ], [ %167, %245 ], [ %167, %243 ], [ %167, %241 ], [ %167, %239 ], [ %167, %237 ], [ %167, %235 ], [ %167, %233 ], [ %167, %231 ], [ %230, %229 ], [ %167, %227 ], [ %167, %225 ], [ %167, %223 ], [ %167, %221 ], [ %167, %191 ], [ %167, %219 ], [ %167, %160 ]
  %280 = phi i32 [ %165, %267 ], [ %165, %265 ], [ %165, %263 ], [ %165, %261 ], [ %165, %259 ], [ %165, %257 ], [ %165, %255 ], [ %165, %253 ], [ %165, %251 ], [ %165, %249 ], [ %165, %247 ], [ %165, %245 ], [ %165, %243 ], [ %165, %241 ], [ %165, %239 ], [ %165, %237 ], [ %165, %235 ], [ %165, %233 ], [ %165, %231 ], [ %165, %229 ], [ %165, %227 ], [ %226, %225 ], [ %165, %223 ], [ %165, %221 ], [ %165, %191 ], [ %165, %219 ], [ %165, %160 ]
  %281 = phi i32 [ %163, %267 ], [ %163, %265 ], [ %163, %263 ], [ %163, %261 ], [ %163, %259 ], [ %163, %257 ], [ %163, %255 ], [ %163, %253 ], [ %163, %251 ], [ %163, %249 ], [ %163, %247 ], [ %163, %245 ], [ %163, %243 ], [ %163, %241 ], [ %163, %239 ], [ %163, %237 ], [ %163, %235 ], [ %163, %233 ], [ %163, %231 ], [ %163, %229 ], [ %163, %227 ], [ %163, %225 ], [ %163, %223 ], [ %222, %221 ], [ %163, %191 ], [ %163, %219 ], [ %163, %160 ]
  %282 = phi i32 [ %161, %267 ], [ %161, %265 ], [ %161, %263 ], [ %161, %261 ], [ %161, %259 ], [ %161, %257 ], [ %161, %255 ], [ %161, %253 ], [ %161, %251 ], [ %161, %249 ], [ %161, %247 ], [ %161, %245 ], [ %161, %243 ], [ %161, %241 ], [ %161, %239 ], [ %161, %237 ], [ %161, %235 ], [ %161, %233 ], [ %161, %231 ], [ %161, %229 ], [ %161, %227 ], [ %161, %225 ], [ %161, %223 ], [ %161, %221 ], [ %192, %191 ], [ %161, %219 ], [ %161, %160 ]
  %283 = phi i32 [ %162, %267 ], [ %162, %265 ], [ %162, %263 ], [ %162, %261 ], [ %162, %259 ], [ %162, %257 ], [ %162, %255 ], [ %162, %253 ], [ %162, %251 ], [ %162, %249 ], [ %162, %247 ], [ %162, %245 ], [ %162, %243 ], [ %162, %241 ], [ %162, %239 ], [ %162, %237 ], [ %162, %235 ], [ %162, %233 ], [ %162, %231 ], [ %162, %229 ], [ %162, %227 ], [ %162, %225 ], [ %162, %223 ], [ %162, %221 ], [ %162, %191 ], [ %220, %219 ], [ %162, %160 ]
  %284 = phi i32 [ %164, %267 ], [ %164, %265 ], [ %164, %263 ], [ %164, %261 ], [ %164, %259 ], [ %164, %257 ], [ %164, %255 ], [ %164, %253 ], [ %164, %251 ], [ %164, %249 ], [ %164, %247 ], [ %164, %245 ], [ %164, %243 ], [ %164, %241 ], [ %164, %239 ], [ %164, %237 ], [ %164, %235 ], [ %164, %233 ], [ %164, %231 ], [ %164, %229 ], [ %164, %227 ], [ %164, %225 ], [ %224, %223 ], [ %164, %221 ], [ %164, %191 ], [ %164, %219 ], [ %164, %160 ]
  %285 = phi i32 [ %166, %267 ], [ %166, %265 ], [ %166, %263 ], [ %166, %261 ], [ %166, %259 ], [ %166, %257 ], [ %166, %255 ], [ %166, %253 ], [ %166, %251 ], [ %166, %249 ], [ %166, %247 ], [ %166, %245 ], [ %166, %243 ], [ %166, %241 ], [ %166, %239 ], [ %166, %237 ], [ %166, %235 ], [ %166, %233 ], [ %166, %231 ], [ %166, %229 ], [ %228, %227 ], [ %166, %225 ], [ %166, %223 ], [ %166, %221 ], [ %166, %191 ], [ %166, %219 ], [ %166, %160 ]
  %286 = phi i32 [ %168, %267 ], [ %168, %265 ], [ %168, %263 ], [ %168, %261 ], [ %168, %259 ], [ %168, %257 ], [ %168, %255 ], [ %168, %253 ], [ %168, %251 ], [ %168, %249 ], [ %168, %247 ], [ %168, %245 ], [ %168, %243 ], [ %168, %241 ], [ %168, %239 ], [ %168, %237 ], [ %168, %235 ], [ %168, %233 ], [ %232, %231 ], [ %168, %229 ], [ %168, %227 ], [ %168, %225 ], [ %168, %223 ], [ %168, %221 ], [ %168, %191 ], [ %168, %219 ], [ %168, %160 ]
  %287 = phi i32 [ %170, %267 ], [ %170, %265 ], [ %170, %263 ], [ %170, %261 ], [ %170, %259 ], [ %170, %257 ], [ %170, %255 ], [ %170, %253 ], [ %170, %251 ], [ %170, %249 ], [ %170, %247 ], [ %170, %245 ], [ %170, %243 ], [ %170, %241 ], [ %170, %239 ], [ %170, %237 ], [ %236, %235 ], [ %170, %233 ], [ %170, %231 ], [ %170, %229 ], [ %170, %227 ], [ %170, %225 ], [ %170, %223 ], [ %170, %221 ], [ %170, %191 ], [ %170, %219 ], [ %170, %160 ]
  %288 = phi i32 [ %172, %267 ], [ %172, %265 ], [ %172, %263 ], [ %172, %261 ], [ %172, %259 ], [ %172, %257 ], [ %172, %255 ], [ %172, %253 ], [ %172, %251 ], [ %172, %249 ], [ %172, %247 ], [ %172, %245 ], [ %172, %243 ], [ %172, %241 ], [ %240, %239 ], [ %172, %237 ], [ %172, %235 ], [ %172, %233 ], [ %172, %231 ], [ %172, %229 ], [ %172, %227 ], [ %172, %225 ], [ %172, %223 ], [ %172, %221 ], [ %172, %191 ], [ %172, %219 ], [ %172, %160 ]
  %289 = phi i32 [ %174, %267 ], [ %174, %265 ], [ %174, %263 ], [ %174, %261 ], [ %174, %259 ], [ %174, %257 ], [ %174, %255 ], [ %174, %253 ], [ %174, %251 ], [ %174, %249 ], [ %174, %247 ], [ %174, %245 ], [ %244, %243 ], [ %174, %241 ], [ %174, %239 ], [ %174, %237 ], [ %174, %235 ], [ %174, %233 ], [ %174, %231 ], [ %174, %229 ], [ %174, %227 ], [ %174, %225 ], [ %174, %223 ], [ %174, %221 ], [ %174, %191 ], [ %174, %219 ], [ %174, %160 ]
  %290 = phi i32 [ %176, %267 ], [ %176, %265 ], [ %176, %263 ], [ %176, %261 ], [ %176, %259 ], [ %176, %257 ], [ %176, %255 ], [ %176, %253 ], [ %176, %251 ], [ %176, %249 ], [ %248, %247 ], [ %176, %245 ], [ %176, %243 ], [ %176, %241 ], [ %176, %239 ], [ %176, %237 ], [ %176, %235 ], [ %176, %233 ], [ %176, %231 ], [ %176, %229 ], [ %176, %227 ], [ %176, %225 ], [ %176, %223 ], [ %176, %221 ], [ %176, %191 ], [ %176, %219 ], [ %176, %160 ]
  %291 = phi i32 [ %178, %267 ], [ %178, %265 ], [ %178, %263 ], [ %178, %261 ], [ %178, %259 ], [ %178, %257 ], [ %178, %255 ], [ %178, %253 ], [ %252, %251 ], [ %178, %249 ], [ %178, %247 ], [ %178, %245 ], [ %178, %243 ], [ %178, %241 ], [ %178, %239 ], [ %178, %237 ], [ %178, %235 ], [ %178, %233 ], [ %178, %231 ], [ %178, %229 ], [ %178, %227 ], [ %178, %225 ], [ %178, %223 ], [ %178, %221 ], [ %178, %191 ], [ %178, %219 ], [ %178, %160 ]
  %292 = phi i32 [ %180, %267 ], [ %180, %265 ], [ %180, %263 ], [ %180, %261 ], [ %180, %259 ], [ %180, %257 ], [ %256, %255 ], [ %180, %253 ], [ %180, %251 ], [ %180, %249 ], [ %180, %247 ], [ %180, %245 ], [ %180, %243 ], [ %180, %241 ], [ %180, %239 ], [ %180, %237 ], [ %180, %235 ], [ %180, %233 ], [ %180, %231 ], [ %180, %229 ], [ %180, %227 ], [ %180, %225 ], [ %180, %223 ], [ %180, %221 ], [ %180, %191 ], [ %180, %219 ], [ %180, %160 ]
  %293 = phi i32 [ %182, %267 ], [ %182, %265 ], [ %182, %263 ], [ %182, %261 ], [ %260, %259 ], [ %182, %257 ], [ %182, %255 ], [ %182, %253 ], [ %182, %251 ], [ %182, %249 ], [ %182, %247 ], [ %182, %245 ], [ %182, %243 ], [ %182, %241 ], [ %182, %239 ], [ %182, %237 ], [ %182, %235 ], [ %182, %233 ], [ %182, %231 ], [ %182, %229 ], [ %182, %227 ], [ %182, %225 ], [ %182, %223 ], [ %182, %221 ], [ %182, %191 ], [ %182, %219 ], [ %182, %160 ]
  %294 = phi i32 [ %184, %267 ], [ %184, %265 ], [ %264, %263 ], [ %184, %261 ], [ %184, %259 ], [ %184, %257 ], [ %184, %255 ], [ %184, %253 ], [ %184, %251 ], [ %184, %249 ], [ %184, %247 ], [ %184, %245 ], [ %184, %243 ], [ %184, %241 ], [ %184, %239 ], [ %184, %237 ], [ %184, %235 ], [ %184, %233 ], [ %184, %231 ], [ %184, %229 ], [ %184, %227 ], [ %184, %225 ], [ %184, %223 ], [ %184, %221 ], [ %184, %191 ], [ %184, %219 ], [ %184, %160 ]
  %295 = phi i32 [ %268, %267 ], [ %186, %265 ], [ %186, %263 ], [ %186, %261 ], [ %186, %259 ], [ %186, %257 ], [ %186, %255 ], [ %186, %253 ], [ %186, %251 ], [ %186, %249 ], [ %186, %247 ], [ %186, %245 ], [ %186, %243 ], [ %186, %241 ], [ %186, %239 ], [ %186, %237 ], [ %186, %235 ], [ %186, %233 ], [ %186, %231 ], [ %186, %229 ], [ %186, %227 ], [ %186, %225 ], [ %186, %223 ], [ %186, %221 ], [ %186, %191 ], [ %186, %219 ], [ %186, %160 ]
  %296 = add nuw nsw i64 %187, 1
  %297 = icmp eq i64 %296, 26
  br i1 %297, label %193, label %160, !llvm.loop !14

298:                                              ; preds = %203
  %299 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 2
  %300 = load i8, i8* %299, align 2, !tbaa !11
  %301 = sext i8 %300 to i32
  %302 = icmp eq i32 %155, %301
  br i1 %302, label %208, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 3
  %305 = load i8, i8* %304, align 1, !tbaa !11
  %306 = sext i8 %305 to i32
  %307 = icmp eq i32 %155, %306
  br i1 %307, label %208, label %308

308:                                              ; preds = %303
  %309 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 4
  %310 = load i8, i8* %309, align 2, !tbaa !11
  %311 = sext i8 %310 to i32
  %312 = icmp eq i32 %155, %311
  br i1 %312, label %208, label %313

313:                                              ; preds = %308
  %314 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 5
  %315 = load i8, i8* %314, align 1, !tbaa !11
  %316 = sext i8 %315 to i32
  %317 = icmp eq i32 %155, %316
  br i1 %317, label %208, label %318

318:                                              ; preds = %313
  %319 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 6
  %320 = load i8, i8* %319, align 2, !tbaa !11
  %321 = sext i8 %320 to i32
  %322 = icmp eq i32 %155, %321
  br i1 %322, label %208, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 7
  %325 = load i8, i8* %324, align 1, !tbaa !11
  %326 = sext i8 %325 to i32
  %327 = icmp eq i32 %155, %326
  br i1 %327, label %208, label %328

328:                                              ; preds = %323
  %329 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 8
  %330 = load i8, i8* %329, align 2, !tbaa !11
  %331 = sext i8 %330 to i32
  %332 = icmp eq i32 %155, %331
  br i1 %332, label %208, label %333

333:                                              ; preds = %328
  %334 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 9
  %335 = load i8, i8* %334, align 1, !tbaa !11
  %336 = sext i8 %335 to i32
  %337 = icmp eq i32 %155, %336
  br i1 %337, label %208, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 10
  %340 = load i8, i8* %339, align 2, !tbaa !11
  %341 = sext i8 %340 to i32
  %342 = icmp eq i32 %155, %341
  br i1 %342, label %208, label %343

343:                                              ; preds = %338
  %344 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 11
  %345 = load i8, i8* %344, align 1, !tbaa !11
  %346 = sext i8 %345 to i32
  %347 = icmp eq i32 %155, %346
  br i1 %347, label %208, label %348

348:                                              ; preds = %343
  %349 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 12
  %350 = load i8, i8* %349, align 2, !tbaa !11
  %351 = sext i8 %350 to i32
  %352 = icmp eq i32 %155, %351
  br i1 %352, label %208, label %353

353:                                              ; preds = %348
  %354 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 13
  %355 = load i8, i8* %354, align 1, !tbaa !11
  %356 = sext i8 %355 to i32
  %357 = icmp eq i32 %155, %356
  br i1 %357, label %208, label %358

358:                                              ; preds = %353
  %359 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 14
  %360 = load i8, i8* %359, align 2, !tbaa !11
  %361 = sext i8 %360 to i32
  %362 = icmp eq i32 %155, %361
  br i1 %362, label %208, label %363

363:                                              ; preds = %358
  %364 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 15
  %365 = load i8, i8* %364, align 1, !tbaa !11
  %366 = sext i8 %365 to i32
  %367 = icmp eq i32 %155, %366
  br i1 %367, label %208, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 16
  %370 = load i8, i8* %369, align 2, !tbaa !11
  %371 = sext i8 %370 to i32
  %372 = icmp eq i32 %155, %371
  br i1 %372, label %208, label %373

373:                                              ; preds = %368
  %374 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 17
  %375 = load i8, i8* %374, align 1, !tbaa !11
  %376 = sext i8 %375 to i32
  %377 = icmp eq i32 %155, %376
  br i1 %377, label %208, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 18
  %380 = load i8, i8* %379, align 2, !tbaa !11
  %381 = sext i8 %380 to i32
  %382 = icmp eq i32 %155, %381
  br i1 %382, label %208, label %383

383:                                              ; preds = %378
  %384 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 19
  %385 = load i8, i8* %384, align 1, !tbaa !11
  %386 = sext i8 %385 to i32
  %387 = icmp eq i32 %155, %386
  br i1 %387, label %208, label %388

388:                                              ; preds = %383
  %389 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 20
  %390 = load i8, i8* %389, align 2, !tbaa !11
  %391 = sext i8 %390 to i32
  %392 = icmp eq i32 %155, %391
  br i1 %392, label %208, label %393

393:                                              ; preds = %388
  %394 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 21
  %395 = load i8, i8* %394, align 1, !tbaa !11
  %396 = sext i8 %395 to i32
  %397 = icmp eq i32 %155, %396
  br i1 %397, label %208, label %398

398:                                              ; preds = %393
  %399 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 22
  %400 = load i8, i8* %399, align 2, !tbaa !11
  %401 = sext i8 %400 to i32
  %402 = icmp eq i32 %155, %401
  br i1 %402, label %208, label %403

403:                                              ; preds = %398
  %404 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 23
  %405 = load i8, i8* %404, align 1, !tbaa !11
  %406 = sext i8 %405 to i32
  %407 = icmp eq i32 %155, %406
  br i1 %407, label %208, label %408

408:                                              ; preds = %403
  %409 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 24
  %410 = load i8, i8* %409, align 2, !tbaa !11
  %411 = sext i8 %410 to i32
  %412 = icmp eq i32 %155, %411
  br i1 %412, label %208, label %413

413:                                              ; preds = %408
  %414 = getelementptr inbounds [999 x [26 x i8]], [999 x [26 x i8]]* %3, i64 0, i64 %198, i64 25
  %415 = load i8, i8* %414, align 1, !tbaa !11
  %416 = sext i8 %415 to i32
  %417 = icmp eq i32 %155, %416
  br i1 %417, label %208, label %213
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
