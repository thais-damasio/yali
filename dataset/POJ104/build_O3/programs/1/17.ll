; ModuleID = 'source-C-CXX/1/17.c'
source_filename = "source-C-CXX/1/17.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.anon = type { i32, [100 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [100 x i32], align 16
  %3 = alloca [1000 x %struct.anon], align 16
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #3
  %5 = bitcast [100 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %5) #3
  %6 = bitcast [1000 x %struct.anon]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104000, i8* nonnull %6) #3
  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %8 = load i32, i32* %1, align 4, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %14, label %57

10:                                               ; preds = %14
  %11 = icmp sgt i32 %20, 0
  br i1 %11, label %12, label %57

12:                                               ; preds = %10
  %13 = zext i32 %20 to i64
  br label %23

14:                                               ; preds = %0, %14
  %15 = phi i64 [ %19, %14 ], [ 0, %0 ]
  %16 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* %3, i64 0, i64 %15, i32 0
  %17 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* %3, i64 0, i64 %15, i32 1, i64 0
  %18 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %16, i8* nonnull %17)
  %19 = add nuw nsw i64 %15, 1
  %20 = load i32, i32* %1, align 4, !tbaa !5
  %21 = sext i32 %20 to i64
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %14, label %10, !llvm.loop !9

23:                                               ; preds = %12, %195
  %24 = phi i32 [ 0, %12 ], [ %196, %195 ]
  %25 = phi i32 [ 0, %12 ], [ %197, %195 ]
  %26 = phi i32 [ 0, %12 ], [ %198, %195 ]
  %27 = phi i32 [ 0, %12 ], [ %199, %195 ]
  %28 = phi i32 [ 0, %12 ], [ %200, %195 ]
  %29 = phi i32 [ 0, %12 ], [ %201, %195 ]
  %30 = phi i32 [ 0, %12 ], [ %202, %195 ]
  %31 = phi i32 [ 0, %12 ], [ %203, %195 ]
  %32 = phi i32 [ 0, %12 ], [ %204, %195 ]
  %33 = phi i32 [ 0, %12 ], [ %205, %195 ]
  %34 = phi i32 [ 0, %12 ], [ %206, %195 ]
  %35 = phi i32 [ 0, %12 ], [ %207, %195 ]
  %36 = phi i32 [ 0, %12 ], [ %208, %195 ]
  %37 = phi i32 [ 0, %12 ], [ %209, %195 ]
  %38 = phi i32 [ 0, %12 ], [ %210, %195 ]
  %39 = phi i32 [ 0, %12 ], [ %211, %195 ]
  %40 = phi i32 [ 0, %12 ], [ %212, %195 ]
  %41 = phi i32 [ 0, %12 ], [ %213, %195 ]
  %42 = phi i32 [ 0, %12 ], [ %214, %195 ]
  %43 = phi i32 [ 0, %12 ], [ %215, %195 ]
  %44 = phi i32 [ 0, %12 ], [ %216, %195 ]
  %45 = phi i32 [ 0, %12 ], [ %217, %195 ]
  %46 = phi i32 [ 0, %12 ], [ %218, %195 ]
  %47 = phi i32 [ 0, %12 ], [ %219, %195 ]
  %48 = phi i32 [ 0, %12 ], [ %220, %195 ]
  %49 = phi i32 [ 0, %12 ], [ %221, %195 ]
  %50 = phi i64 [ 0, %12 ], [ %222, %195 ]
  %51 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* %3, i64 0, i64 %50, i32 1, i64 0
  %52 = load i8, i8* %51, align 4, !tbaa !11
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %195, label %163

54:                                               ; preds = %195
  %55 = icmp sgt i32 %196, 0
  %56 = select i1 %55, i32 %196, i32 0
  br label %57

57:                                               ; preds = %54, %0, %10
  %58 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %221, %54 ]
  %59 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %220, %54 ]
  %60 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %219, %54 ]
  %61 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %218, %54 ]
  %62 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %217, %54 ]
  %63 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %216, %54 ]
  %64 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %215, %54 ]
  %65 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %214, %54 ]
  %66 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %213, %54 ]
  %67 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %212, %54 ]
  %68 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %211, %54 ]
  %69 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %210, %54 ]
  %70 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %209, %54 ]
  %71 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %208, %54 ]
  %72 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %207, %54 ]
  %73 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %206, %54 ]
  %74 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %205, %54 ]
  %75 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %204, %54 ]
  %76 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %203, %54 ]
  %77 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %202, %54 ]
  %78 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %201, %54 ]
  %79 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %200, %54 ]
  %80 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %199, %54 ]
  %81 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %198, %54 ]
  %82 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %197, %54 ]
  %83 = phi i32 [ 0, %10 ], [ 0, %0 ], [ %56, %54 ]
  %84 = icmp sgt i32 %82, %83
  %85 = select i1 %84, i32 %82, i32 %83
  %86 = icmp sgt i32 %81, %85
  %87 = select i1 %86, i32 %81, i32 %85
  %88 = icmp sgt i32 %80, %87
  %89 = select i1 %88, i32 %80, i32 %87
  %90 = icmp sgt i32 %79, %89
  %91 = select i1 %90, i32 %79, i32 %89
  %92 = icmp sgt i32 %78, %91
  %93 = select i1 %92, i32 %78, i32 %91
  %94 = icmp sgt i32 %77, %93
  %95 = select i1 %94, i32 %77, i32 %93
  %96 = icmp sgt i32 %76, %95
  %97 = select i1 %96, i32 %76, i32 %95
  %98 = icmp sgt i32 %75, %97
  %99 = select i1 %98, i32 %75, i32 %97
  %100 = icmp sgt i32 %74, %99
  %101 = select i1 %100, i32 %74, i32 %99
  %102 = icmp sgt i32 %73, %101
  %103 = select i1 %102, i32 %73, i32 %101
  %104 = icmp sgt i32 %72, %103
  %105 = select i1 %104, i32 %72, i32 %103
  %106 = icmp sgt i32 %71, %105
  %107 = select i1 %106, i32 %71, i32 %105
  %108 = icmp sgt i32 %70, %107
  %109 = select i1 %108, i32 %70, i32 %107
  %110 = icmp sgt i32 %69, %109
  %111 = select i1 %110, i32 %69, i32 %109
  %112 = icmp sgt i32 %68, %111
  %113 = select i1 %112, i32 %68, i32 %111
  %114 = icmp sgt i32 %67, %113
  %115 = select i1 %114, i32 %67, i32 %113
  %116 = icmp sgt i32 %66, %115
  %117 = select i1 %116, i32 %66, i32 %115
  %118 = icmp sgt i32 %65, %117
  %119 = select i1 %118, i32 %65, i32 %117
  %120 = icmp sgt i32 %64, %119
  %121 = select i1 %120, i32 %64, i32 %119
  %122 = icmp sgt i32 %63, %121
  %123 = select i1 %122, i32 %63, i32 %121
  %124 = icmp sgt i32 %62, %123
  %125 = select i1 %124, i32 %62, i32 %123
  %126 = icmp sgt i32 %61, %125
  %127 = select i1 %126, i32 %61, i32 %125
  %128 = icmp sgt i32 %60, %127
  %129 = select i1 %128, i32 %60, i32 %127
  %130 = icmp sgt i32 %59, %129
  %131 = select i1 %130, i32 %59, i32 %129
  %132 = icmp sgt i32 %58, %131
  %133 = select i1 %132, i32 %58, i32 %131
  %134 = select i1 %84, i32 66, i32 65
  %135 = select i1 %86, i32 67, i32 %134
  %136 = select i1 %88, i32 68, i32 %135
  %137 = select i1 %90, i32 69, i32 %136
  %138 = select i1 %92, i32 70, i32 %137
  %139 = select i1 %94, i32 71, i32 %138
  %140 = select i1 %96, i32 72, i32 %139
  %141 = select i1 %98, i32 73, i32 %140
  %142 = select i1 %100, i32 74, i32 %141
  %143 = select i1 %102, i32 75, i32 %142
  %144 = select i1 %104, i32 76, i32 %143
  %145 = select i1 %106, i32 77, i32 %144
  %146 = select i1 %108, i32 78, i32 %145
  %147 = select i1 %110, i32 79, i32 %146
  %148 = select i1 %112, i32 80, i32 %147
  %149 = select i1 %114, i32 81, i32 %148
  %150 = select i1 %116, i32 82, i32 %149
  %151 = select i1 %118, i32 83, i32 %150
  %152 = select i1 %120, i32 84, i32 %151
  %153 = select i1 %122, i32 85, i32 %152
  %154 = select i1 %124, i32 86, i32 %153
  %155 = select i1 %126, i32 87, i32 %154
  %156 = select i1 %128, i32 88, i32 %155
  %157 = select i1 %130, i32 89, i32 %156
  %158 = select i1 %132, i32 90, i32 %157
  %159 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %158)
  %160 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %133)
  %161 = load i32, i32* %1, align 4, !tbaa !5
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %224, label %265

163:                                              ; preds = %23, %316
  %164 = phi i32 [ %329, %316 ], [ %24, %23 ]
  %165 = phi i32 [ %330, %316 ], [ %25, %23 ]
  %166 = phi i32 [ %328, %316 ], [ %26, %23 ]
  %167 = phi i32 [ %331, %316 ], [ %27, %23 ]
  %168 = phi i32 [ %327, %316 ], [ %28, %23 ]
  %169 = phi i32 [ %332, %316 ], [ %29, %23 ]
  %170 = phi i32 [ %326, %316 ], [ %30, %23 ]
  %171 = phi i32 [ %333, %316 ], [ %31, %23 ]
  %172 = phi i32 [ %325, %316 ], [ %32, %23 ]
  %173 = phi i32 [ %334, %316 ], [ %33, %23 ]
  %174 = phi i32 [ %324, %316 ], [ %34, %23 ]
  %175 = phi i32 [ %335, %316 ], [ %35, %23 ]
  %176 = phi i32 [ %323, %316 ], [ %36, %23 ]
  %177 = phi i32 [ %336, %316 ], [ %37, %23 ]
  %178 = phi i32 [ %322, %316 ], [ %38, %23 ]
  %179 = phi i32 [ %337, %316 ], [ %39, %23 ]
  %180 = phi i32 [ %321, %316 ], [ %40, %23 ]
  %181 = phi i32 [ %338, %316 ], [ %41, %23 ]
  %182 = phi i32 [ %320, %316 ], [ %42, %23 ]
  %183 = phi i32 [ %339, %316 ], [ %43, %23 ]
  %184 = phi i32 [ %319, %316 ], [ %44, %23 ]
  %185 = phi i32 [ %340, %316 ], [ %45, %23 ]
  %186 = phi i32 [ %318, %316 ], [ %46, %23 ]
  %187 = phi i32 [ %341, %316 ], [ %47, %23 ]
  %188 = phi i32 [ %317, %316 ], [ %48, %23 ]
  %189 = phi i32 [ %342, %316 ], [ %49, %23 ]
  %190 = phi i64 [ %343, %316 ], [ 0, %23 ]
  %191 = phi i8 [ %345, %316 ], [ %52, %23 ]
  %192 = sext i8 %191 to i32
  switch i32 %192, label %316 [
    i32 65, label %193
    i32 66, label %266
    i32 67, label %268
    i32 68, label %270
    i32 69, label %272
    i32 70, label %274
    i32 71, label %276
    i32 72, label %278
    i32 73, label %280
    i32 74, label %282
    i32 75, label %284
    i32 76, label %286
    i32 77, label %288
    i32 78, label %290
    i32 79, label %292
    i32 80, label %294
    i32 81, label %296
    i32 82, label %298
    i32 83, label %300
    i32 84, label %302
    i32 85, label %304
    i32 86, label %306
    i32 87, label %308
    i32 88, label %310
    i32 89, label %312
    i32 90, label %314
  ]

193:                                              ; preds = %163
  %194 = add nsw i32 %164, 1
  br label %316

195:                                              ; preds = %316, %23
  %196 = phi i32 [ %24, %23 ], [ %329, %316 ]
  %197 = phi i32 [ %25, %23 ], [ %330, %316 ]
  %198 = phi i32 [ %26, %23 ], [ %328, %316 ]
  %199 = phi i32 [ %27, %23 ], [ %331, %316 ]
  %200 = phi i32 [ %28, %23 ], [ %327, %316 ]
  %201 = phi i32 [ %29, %23 ], [ %332, %316 ]
  %202 = phi i32 [ %30, %23 ], [ %326, %316 ]
  %203 = phi i32 [ %31, %23 ], [ %333, %316 ]
  %204 = phi i32 [ %32, %23 ], [ %325, %316 ]
  %205 = phi i32 [ %33, %23 ], [ %334, %316 ]
  %206 = phi i32 [ %34, %23 ], [ %324, %316 ]
  %207 = phi i32 [ %35, %23 ], [ %335, %316 ]
  %208 = phi i32 [ %36, %23 ], [ %323, %316 ]
  %209 = phi i32 [ %37, %23 ], [ %336, %316 ]
  %210 = phi i32 [ %38, %23 ], [ %322, %316 ]
  %211 = phi i32 [ %39, %23 ], [ %337, %316 ]
  %212 = phi i32 [ %40, %23 ], [ %321, %316 ]
  %213 = phi i32 [ %41, %23 ], [ %338, %316 ]
  %214 = phi i32 [ %42, %23 ], [ %320, %316 ]
  %215 = phi i32 [ %43, %23 ], [ %339, %316 ]
  %216 = phi i32 [ %44, %23 ], [ %319, %316 ]
  %217 = phi i32 [ %45, %23 ], [ %340, %316 ]
  %218 = phi i32 [ %46, %23 ], [ %318, %316 ]
  %219 = phi i32 [ %47, %23 ], [ %341, %316 ]
  %220 = phi i32 [ %48, %23 ], [ %317, %316 ]
  %221 = phi i32 [ %49, %23 ], [ %342, %316 ]
  %222 = add nuw nsw i64 %50, 1
  %223 = icmp eq i64 %222, %13
  br i1 %223, label %54, label %23, !llvm.loop !12

224:                                              ; preds = %57
  %225 = zext i32 %161 to i64
  br label %226

226:                                              ; preds = %224, %254
  %227 = phi i64 [ 0, %224 ], [ %256, %254 ]
  %228 = phi i32 [ 0, %224 ], [ %255, %254 ]
  %229 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* %3, i64 0, i64 %227, i32 0
  %230 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* %3, i64 0, i64 %227, i32 1, i64 0
  %231 = load i8, i8* %230, align 4, !tbaa !11
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %254, label %237

233:                                              ; preds = %254
  %234 = icmp sgt i32 %255, 0
  br i1 %234, label %235, label %265

235:                                              ; preds = %233
  %236 = zext i32 %255 to i64
  br label %258

237:                                              ; preds = %226, %248
  %238 = phi i64 [ %250, %248 ], [ 0, %226 ]
  %239 = phi i8 [ %252, %248 ], [ %231, %226 ]
  %240 = phi i32 [ %249, %248 ], [ %228, %226 ]
  %241 = sext i8 %239 to i32
  %242 = icmp eq i32 %158, %241
  br i1 %242, label %243, label %248

243:                                              ; preds = %237
  %244 = load i32, i32* %229, align 8, !tbaa !13
  %245 = sext i32 %240 to i64
  %246 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %245
  store i32 %244, i32* %246, align 4, !tbaa !5
  %247 = add nsw i32 %240, 1
  br label %248

248:                                              ; preds = %237, %243
  %249 = phi i32 [ %247, %243 ], [ %240, %237 ]
  %250 = add nuw i64 %238, 1
  %251 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* %3, i64 0, i64 %227, i32 1, i64 %250
  %252 = load i8, i8* %251, align 1, !tbaa !11
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %254, label %237, !llvm.loop !15

254:                                              ; preds = %248, %226
  %255 = phi i32 [ %228, %226 ], [ %249, %248 ]
  %256 = add nuw nsw i64 %227, 1
  %257 = icmp eq i64 %256, %225
  br i1 %257, label %233, label %226, !llvm.loop !16

258:                                              ; preds = %235, %258
  %259 = phi i64 [ 0, %235 ], [ %263, %258 ]
  %260 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i64 0, i64 %259
  %261 = load i32, i32* %260, align 4, !tbaa !5
  %262 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %261)
  %263 = add nuw nsw i64 %259, 1
  %264 = icmp eq i64 %263, %236
  br i1 %264, label %265, label %258, !llvm.loop !17

265:                                              ; preds = %258, %57, %233
  call void @llvm.lifetime.end.p0i8(i64 104000, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %5) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #3
  ret i32 0

266:                                              ; preds = %163
  %267 = add nsw i32 %165, 1
  br label %316

268:                                              ; preds = %163
  %269 = add nsw i32 %166, 1
  br label %316

270:                                              ; preds = %163
  %271 = add nsw i32 %167, 1
  br label %316

272:                                              ; preds = %163
  %273 = add nsw i32 %168, 1
  br label %316

274:                                              ; preds = %163
  %275 = add nsw i32 %169, 1
  br label %316

276:                                              ; preds = %163
  %277 = add nsw i32 %170, 1
  br label %316

278:                                              ; preds = %163
  %279 = add nsw i32 %171, 1
  br label %316

280:                                              ; preds = %163
  %281 = add nsw i32 %172, 1
  br label %316

282:                                              ; preds = %163
  %283 = add nsw i32 %173, 1
  br label %316

284:                                              ; preds = %163
  %285 = add nsw i32 %174, 1
  br label %316

286:                                              ; preds = %163
  %287 = add nsw i32 %175, 1
  br label %316

288:                                              ; preds = %163
  %289 = add nsw i32 %176, 1
  br label %316

290:                                              ; preds = %163
  %291 = add nsw i32 %177, 1
  br label %316

292:                                              ; preds = %163
  %293 = add nsw i32 %178, 1
  br label %316

294:                                              ; preds = %163
  %295 = add nsw i32 %179, 1
  br label %316

296:                                              ; preds = %163
  %297 = add nsw i32 %180, 1
  br label %316

298:                                              ; preds = %163
  %299 = add nsw i32 %181, 1
  br label %316

300:                                              ; preds = %163
  %301 = add nsw i32 %182, 1
  br label %316

302:                                              ; preds = %163
  %303 = add nsw i32 %183, 1
  br label %316

304:                                              ; preds = %163
  %305 = add nsw i32 %184, 1
  br label %316

306:                                              ; preds = %163
  %307 = add nsw i32 %185, 1
  br label %316

308:                                              ; preds = %163
  %309 = add nsw i32 %186, 1
  br label %316

310:                                              ; preds = %163
  %311 = add nsw i32 %187, 1
  br label %316

312:                                              ; preds = %163
  %313 = add nsw i32 %188, 1
  br label %316

314:                                              ; preds = %163
  %315 = add nsw i32 %189, 1
  br label %316

316:                                              ; preds = %163, %266, %193, %268, %270, %272, %274, %276, %278, %280, %282, %284, %286, %288, %290, %292, %294, %296, %298, %300, %302, %304, %306, %308, %310, %312, %314
  %317 = phi i32 [ %188, %314 ], [ %313, %312 ], [ %188, %310 ], [ %188, %308 ], [ %188, %306 ], [ %188, %304 ], [ %188, %302 ], [ %188, %300 ], [ %188, %298 ], [ %188, %296 ], [ %188, %294 ], [ %188, %292 ], [ %188, %290 ], [ %188, %288 ], [ %188, %286 ], [ %188, %284 ], [ %188, %282 ], [ %188, %280 ], [ %188, %278 ], [ %188, %276 ], [ %188, %274 ], [ %188, %272 ], [ %188, %270 ], [ %188, %268 ], [ %188, %193 ], [ %188, %266 ], [ %188, %163 ]
  %318 = phi i32 [ %186, %314 ], [ %186, %312 ], [ %186, %310 ], [ %309, %308 ], [ %186, %306 ], [ %186, %304 ], [ %186, %302 ], [ %186, %300 ], [ %186, %298 ], [ %186, %296 ], [ %186, %294 ], [ %186, %292 ], [ %186, %290 ], [ %186, %288 ], [ %186, %286 ], [ %186, %284 ], [ %186, %282 ], [ %186, %280 ], [ %186, %278 ], [ %186, %276 ], [ %186, %274 ], [ %186, %272 ], [ %186, %270 ], [ %186, %268 ], [ %186, %193 ], [ %186, %266 ], [ %186, %163 ]
  %319 = phi i32 [ %184, %314 ], [ %184, %312 ], [ %184, %310 ], [ %184, %308 ], [ %184, %306 ], [ %305, %304 ], [ %184, %302 ], [ %184, %300 ], [ %184, %298 ], [ %184, %296 ], [ %184, %294 ], [ %184, %292 ], [ %184, %290 ], [ %184, %288 ], [ %184, %286 ], [ %184, %284 ], [ %184, %282 ], [ %184, %280 ], [ %184, %278 ], [ %184, %276 ], [ %184, %274 ], [ %184, %272 ], [ %184, %270 ], [ %184, %268 ], [ %184, %193 ], [ %184, %266 ], [ %184, %163 ]
  %320 = phi i32 [ %182, %314 ], [ %182, %312 ], [ %182, %310 ], [ %182, %308 ], [ %182, %306 ], [ %182, %304 ], [ %182, %302 ], [ %301, %300 ], [ %182, %298 ], [ %182, %296 ], [ %182, %294 ], [ %182, %292 ], [ %182, %290 ], [ %182, %288 ], [ %182, %286 ], [ %182, %284 ], [ %182, %282 ], [ %182, %280 ], [ %182, %278 ], [ %182, %276 ], [ %182, %274 ], [ %182, %272 ], [ %182, %270 ], [ %182, %268 ], [ %182, %193 ], [ %182, %266 ], [ %182, %163 ]
  %321 = phi i32 [ %180, %314 ], [ %180, %312 ], [ %180, %310 ], [ %180, %308 ], [ %180, %306 ], [ %180, %304 ], [ %180, %302 ], [ %180, %300 ], [ %180, %298 ], [ %297, %296 ], [ %180, %294 ], [ %180, %292 ], [ %180, %290 ], [ %180, %288 ], [ %180, %286 ], [ %180, %284 ], [ %180, %282 ], [ %180, %280 ], [ %180, %278 ], [ %180, %276 ], [ %180, %274 ], [ %180, %272 ], [ %180, %270 ], [ %180, %268 ], [ %180, %193 ], [ %180, %266 ], [ %180, %163 ]
  %322 = phi i32 [ %178, %314 ], [ %178, %312 ], [ %178, %310 ], [ %178, %308 ], [ %178, %306 ], [ %178, %304 ], [ %178, %302 ], [ %178, %300 ], [ %178, %298 ], [ %178, %296 ], [ %178, %294 ], [ %293, %292 ], [ %178, %290 ], [ %178, %288 ], [ %178, %286 ], [ %178, %284 ], [ %178, %282 ], [ %178, %280 ], [ %178, %278 ], [ %178, %276 ], [ %178, %274 ], [ %178, %272 ], [ %178, %270 ], [ %178, %268 ], [ %178, %193 ], [ %178, %266 ], [ %178, %163 ]
  %323 = phi i32 [ %176, %314 ], [ %176, %312 ], [ %176, %310 ], [ %176, %308 ], [ %176, %306 ], [ %176, %304 ], [ %176, %302 ], [ %176, %300 ], [ %176, %298 ], [ %176, %296 ], [ %176, %294 ], [ %176, %292 ], [ %176, %290 ], [ %289, %288 ], [ %176, %286 ], [ %176, %284 ], [ %176, %282 ], [ %176, %280 ], [ %176, %278 ], [ %176, %276 ], [ %176, %274 ], [ %176, %272 ], [ %176, %270 ], [ %176, %268 ], [ %176, %193 ], [ %176, %266 ], [ %176, %163 ]
  %324 = phi i32 [ %174, %314 ], [ %174, %312 ], [ %174, %310 ], [ %174, %308 ], [ %174, %306 ], [ %174, %304 ], [ %174, %302 ], [ %174, %300 ], [ %174, %298 ], [ %174, %296 ], [ %174, %294 ], [ %174, %292 ], [ %174, %290 ], [ %174, %288 ], [ %174, %286 ], [ %285, %284 ], [ %174, %282 ], [ %174, %280 ], [ %174, %278 ], [ %174, %276 ], [ %174, %274 ], [ %174, %272 ], [ %174, %270 ], [ %174, %268 ], [ %174, %193 ], [ %174, %266 ], [ %174, %163 ]
  %325 = phi i32 [ %172, %314 ], [ %172, %312 ], [ %172, %310 ], [ %172, %308 ], [ %172, %306 ], [ %172, %304 ], [ %172, %302 ], [ %172, %300 ], [ %172, %298 ], [ %172, %296 ], [ %172, %294 ], [ %172, %292 ], [ %172, %290 ], [ %172, %288 ], [ %172, %286 ], [ %172, %284 ], [ %172, %282 ], [ %281, %280 ], [ %172, %278 ], [ %172, %276 ], [ %172, %274 ], [ %172, %272 ], [ %172, %270 ], [ %172, %268 ], [ %172, %193 ], [ %172, %266 ], [ %172, %163 ]
  %326 = phi i32 [ %170, %314 ], [ %170, %312 ], [ %170, %310 ], [ %170, %308 ], [ %170, %306 ], [ %170, %304 ], [ %170, %302 ], [ %170, %300 ], [ %170, %298 ], [ %170, %296 ], [ %170, %294 ], [ %170, %292 ], [ %170, %290 ], [ %170, %288 ], [ %170, %286 ], [ %170, %284 ], [ %170, %282 ], [ %170, %280 ], [ %170, %278 ], [ %277, %276 ], [ %170, %274 ], [ %170, %272 ], [ %170, %270 ], [ %170, %268 ], [ %170, %193 ], [ %170, %266 ], [ %170, %163 ]
  %327 = phi i32 [ %168, %314 ], [ %168, %312 ], [ %168, %310 ], [ %168, %308 ], [ %168, %306 ], [ %168, %304 ], [ %168, %302 ], [ %168, %300 ], [ %168, %298 ], [ %168, %296 ], [ %168, %294 ], [ %168, %292 ], [ %168, %290 ], [ %168, %288 ], [ %168, %286 ], [ %168, %284 ], [ %168, %282 ], [ %168, %280 ], [ %168, %278 ], [ %168, %276 ], [ %168, %274 ], [ %273, %272 ], [ %168, %270 ], [ %168, %268 ], [ %168, %193 ], [ %168, %266 ], [ %168, %163 ]
  %328 = phi i32 [ %166, %314 ], [ %166, %312 ], [ %166, %310 ], [ %166, %308 ], [ %166, %306 ], [ %166, %304 ], [ %166, %302 ], [ %166, %300 ], [ %166, %298 ], [ %166, %296 ], [ %166, %294 ], [ %166, %292 ], [ %166, %290 ], [ %166, %288 ], [ %166, %286 ], [ %166, %284 ], [ %166, %282 ], [ %166, %280 ], [ %166, %278 ], [ %166, %276 ], [ %166, %274 ], [ %166, %272 ], [ %166, %270 ], [ %269, %268 ], [ %166, %193 ], [ %166, %266 ], [ %166, %163 ]
  %329 = phi i32 [ %164, %314 ], [ %164, %312 ], [ %164, %310 ], [ %164, %308 ], [ %164, %306 ], [ %164, %304 ], [ %164, %302 ], [ %164, %300 ], [ %164, %298 ], [ %164, %296 ], [ %164, %294 ], [ %164, %292 ], [ %164, %290 ], [ %164, %288 ], [ %164, %286 ], [ %164, %284 ], [ %164, %282 ], [ %164, %280 ], [ %164, %278 ], [ %164, %276 ], [ %164, %274 ], [ %164, %272 ], [ %164, %270 ], [ %164, %268 ], [ %194, %193 ], [ %164, %266 ], [ %164, %163 ]
  %330 = phi i32 [ %165, %314 ], [ %165, %312 ], [ %165, %310 ], [ %165, %308 ], [ %165, %306 ], [ %165, %304 ], [ %165, %302 ], [ %165, %300 ], [ %165, %298 ], [ %165, %296 ], [ %165, %294 ], [ %165, %292 ], [ %165, %290 ], [ %165, %288 ], [ %165, %286 ], [ %165, %284 ], [ %165, %282 ], [ %165, %280 ], [ %165, %278 ], [ %165, %276 ], [ %165, %274 ], [ %165, %272 ], [ %165, %270 ], [ %165, %268 ], [ %165, %193 ], [ %267, %266 ], [ %165, %163 ]
  %331 = phi i32 [ %167, %314 ], [ %167, %312 ], [ %167, %310 ], [ %167, %308 ], [ %167, %306 ], [ %167, %304 ], [ %167, %302 ], [ %167, %300 ], [ %167, %298 ], [ %167, %296 ], [ %167, %294 ], [ %167, %292 ], [ %167, %290 ], [ %167, %288 ], [ %167, %286 ], [ %167, %284 ], [ %167, %282 ], [ %167, %280 ], [ %167, %278 ], [ %167, %276 ], [ %167, %274 ], [ %167, %272 ], [ %271, %270 ], [ %167, %268 ], [ %167, %193 ], [ %167, %266 ], [ %167, %163 ]
  %332 = phi i32 [ %169, %314 ], [ %169, %312 ], [ %169, %310 ], [ %169, %308 ], [ %169, %306 ], [ %169, %304 ], [ %169, %302 ], [ %169, %300 ], [ %169, %298 ], [ %169, %296 ], [ %169, %294 ], [ %169, %292 ], [ %169, %290 ], [ %169, %288 ], [ %169, %286 ], [ %169, %284 ], [ %169, %282 ], [ %169, %280 ], [ %169, %278 ], [ %169, %276 ], [ %275, %274 ], [ %169, %272 ], [ %169, %270 ], [ %169, %268 ], [ %169, %193 ], [ %169, %266 ], [ %169, %163 ]
  %333 = phi i32 [ %171, %314 ], [ %171, %312 ], [ %171, %310 ], [ %171, %308 ], [ %171, %306 ], [ %171, %304 ], [ %171, %302 ], [ %171, %300 ], [ %171, %298 ], [ %171, %296 ], [ %171, %294 ], [ %171, %292 ], [ %171, %290 ], [ %171, %288 ], [ %171, %286 ], [ %171, %284 ], [ %171, %282 ], [ %171, %280 ], [ %279, %278 ], [ %171, %276 ], [ %171, %274 ], [ %171, %272 ], [ %171, %270 ], [ %171, %268 ], [ %171, %193 ], [ %171, %266 ], [ %171, %163 ]
  %334 = phi i32 [ %173, %314 ], [ %173, %312 ], [ %173, %310 ], [ %173, %308 ], [ %173, %306 ], [ %173, %304 ], [ %173, %302 ], [ %173, %300 ], [ %173, %298 ], [ %173, %296 ], [ %173, %294 ], [ %173, %292 ], [ %173, %290 ], [ %173, %288 ], [ %173, %286 ], [ %173, %284 ], [ %283, %282 ], [ %173, %280 ], [ %173, %278 ], [ %173, %276 ], [ %173, %274 ], [ %173, %272 ], [ %173, %270 ], [ %173, %268 ], [ %173, %193 ], [ %173, %266 ], [ %173, %163 ]
  %335 = phi i32 [ %175, %314 ], [ %175, %312 ], [ %175, %310 ], [ %175, %308 ], [ %175, %306 ], [ %175, %304 ], [ %175, %302 ], [ %175, %300 ], [ %175, %298 ], [ %175, %296 ], [ %175, %294 ], [ %175, %292 ], [ %175, %290 ], [ %175, %288 ], [ %287, %286 ], [ %175, %284 ], [ %175, %282 ], [ %175, %280 ], [ %175, %278 ], [ %175, %276 ], [ %175, %274 ], [ %175, %272 ], [ %175, %270 ], [ %175, %268 ], [ %175, %193 ], [ %175, %266 ], [ %175, %163 ]
  %336 = phi i32 [ %177, %314 ], [ %177, %312 ], [ %177, %310 ], [ %177, %308 ], [ %177, %306 ], [ %177, %304 ], [ %177, %302 ], [ %177, %300 ], [ %177, %298 ], [ %177, %296 ], [ %177, %294 ], [ %177, %292 ], [ %291, %290 ], [ %177, %288 ], [ %177, %286 ], [ %177, %284 ], [ %177, %282 ], [ %177, %280 ], [ %177, %278 ], [ %177, %276 ], [ %177, %274 ], [ %177, %272 ], [ %177, %270 ], [ %177, %268 ], [ %177, %193 ], [ %177, %266 ], [ %177, %163 ]
  %337 = phi i32 [ %179, %314 ], [ %179, %312 ], [ %179, %310 ], [ %179, %308 ], [ %179, %306 ], [ %179, %304 ], [ %179, %302 ], [ %179, %300 ], [ %179, %298 ], [ %179, %296 ], [ %295, %294 ], [ %179, %292 ], [ %179, %290 ], [ %179, %288 ], [ %179, %286 ], [ %179, %284 ], [ %179, %282 ], [ %179, %280 ], [ %179, %278 ], [ %179, %276 ], [ %179, %274 ], [ %179, %272 ], [ %179, %270 ], [ %179, %268 ], [ %179, %193 ], [ %179, %266 ], [ %179, %163 ]
  %338 = phi i32 [ %181, %314 ], [ %181, %312 ], [ %181, %310 ], [ %181, %308 ], [ %181, %306 ], [ %181, %304 ], [ %181, %302 ], [ %181, %300 ], [ %299, %298 ], [ %181, %296 ], [ %181, %294 ], [ %181, %292 ], [ %181, %290 ], [ %181, %288 ], [ %181, %286 ], [ %181, %284 ], [ %181, %282 ], [ %181, %280 ], [ %181, %278 ], [ %181, %276 ], [ %181, %274 ], [ %181, %272 ], [ %181, %270 ], [ %181, %268 ], [ %181, %193 ], [ %181, %266 ], [ %181, %163 ]
  %339 = phi i32 [ %183, %314 ], [ %183, %312 ], [ %183, %310 ], [ %183, %308 ], [ %183, %306 ], [ %183, %304 ], [ %303, %302 ], [ %183, %300 ], [ %183, %298 ], [ %183, %296 ], [ %183, %294 ], [ %183, %292 ], [ %183, %290 ], [ %183, %288 ], [ %183, %286 ], [ %183, %284 ], [ %183, %282 ], [ %183, %280 ], [ %183, %278 ], [ %183, %276 ], [ %183, %274 ], [ %183, %272 ], [ %183, %270 ], [ %183, %268 ], [ %183, %193 ], [ %183, %266 ], [ %183, %163 ]
  %340 = phi i32 [ %185, %314 ], [ %185, %312 ], [ %185, %310 ], [ %185, %308 ], [ %307, %306 ], [ %185, %304 ], [ %185, %302 ], [ %185, %300 ], [ %185, %298 ], [ %185, %296 ], [ %185, %294 ], [ %185, %292 ], [ %185, %290 ], [ %185, %288 ], [ %185, %286 ], [ %185, %284 ], [ %185, %282 ], [ %185, %280 ], [ %185, %278 ], [ %185, %276 ], [ %185, %274 ], [ %185, %272 ], [ %185, %270 ], [ %185, %268 ], [ %185, %193 ], [ %185, %266 ], [ %185, %163 ]
  %341 = phi i32 [ %187, %314 ], [ %187, %312 ], [ %311, %310 ], [ %187, %308 ], [ %187, %306 ], [ %187, %304 ], [ %187, %302 ], [ %187, %300 ], [ %187, %298 ], [ %187, %296 ], [ %187, %294 ], [ %187, %292 ], [ %187, %290 ], [ %187, %288 ], [ %187, %286 ], [ %187, %284 ], [ %187, %282 ], [ %187, %280 ], [ %187, %278 ], [ %187, %276 ], [ %187, %274 ], [ %187, %272 ], [ %187, %270 ], [ %187, %268 ], [ %187, %193 ], [ %187, %266 ], [ %187, %163 ]
  %342 = phi i32 [ %315, %314 ], [ %189, %312 ], [ %189, %310 ], [ %189, %308 ], [ %189, %306 ], [ %189, %304 ], [ %189, %302 ], [ %189, %300 ], [ %189, %298 ], [ %189, %296 ], [ %189, %294 ], [ %189, %292 ], [ %189, %290 ], [ %189, %288 ], [ %189, %286 ], [ %189, %284 ], [ %189, %282 ], [ %189, %280 ], [ %189, %278 ], [ %189, %276 ], [ %189, %274 ], [ %189, %272 ], [ %189, %270 ], [ %189, %268 ], [ %189, %193 ], [ %189, %266 ], [ %189, %163 ]
  %343 = add nuw i64 %190, 1
  %344 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* %3, i64 0, i64 %50, i32 1, i64 %343
  %345 = load i8, i8* %344, align 1, !tbaa !11
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %195, label %163, !llvm.loop !18
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = !{!14, !6, i64 0}
!14 = !{!"", !6, i64 0, !7, i64 4}
!15 = distinct !{!15, !10}
!16 = distinct !{!16, !10}
!17 = distinct !{!17, !10}
!18 = distinct !{!18, !10}
