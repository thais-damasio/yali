; ModuleID = 'source-C-CXX/1/800.c'
source_filename = "source-C-CXX/1/800.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.name = private unnamed_addr constant [26 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZ", align 16
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1000 x i32], align 16
  %3 = alloca [1000 x i32], align 16
  %4 = alloca [1000 x [26 x i8]], align 16
  %5 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #4
  %6 = bitcast [1000 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %6) #4
  %7 = bitcast [1000 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %7) #4
  %8 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %4, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26000, i8* nonnull %8) #4
  %9 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %10 = load i32, i32* %1, align 4, !tbaa !5
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %16, label %122

12:                                               ; preds = %16
  %13 = icmp sgt i32 %25, 0
  br i1 %13, label %14, label %122

14:                                               ; preds = %12
  %15 = zext i32 %25 to i64
  br label %28

16:                                               ; preds = %0, %16
  %17 = phi i64 [ %24, %16 ], [ 0, %0 ]
  %18 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %17
  %19 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %4, i64 0, i64 %17, i64 0
  %20 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %18, i8* nonnull %19)
  %21 = call i64 @strlen(i8* noundef nonnull %19) #5
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i64 0, i64 %17
  store i32 %22, i32* %23, align 4, !tbaa !5
  %24 = add nuw nsw i64 %17, 1
  %25 = load i32, i32* %1, align 4, !tbaa !5
  %26 = sext i32 %25 to i64
  %27 = icmp slt i64 %24, %26
  br i1 %27, label %16, label %12, !llvm.loop !9

28:                                               ; preds = %14, %93
  %29 = phi i32 [ 0, %14 ], [ %94, %93 ]
  %30 = phi i32 [ 0, %14 ], [ %95, %93 ]
  %31 = phi i32 [ 0, %14 ], [ %96, %93 ]
  %32 = phi i32 [ 0, %14 ], [ %97, %93 ]
  %33 = phi i32 [ 0, %14 ], [ %98, %93 ]
  %34 = phi i32 [ 0, %14 ], [ %99, %93 ]
  %35 = phi i32 [ 0, %14 ], [ %100, %93 ]
  %36 = phi i32 [ 0, %14 ], [ %101, %93 ]
  %37 = phi i32 [ 0, %14 ], [ %102, %93 ]
  %38 = phi i32 [ 0, %14 ], [ %103, %93 ]
  %39 = phi i32 [ 0, %14 ], [ %104, %93 ]
  %40 = phi i32 [ 0, %14 ], [ %105, %93 ]
  %41 = phi i32 [ 0, %14 ], [ %106, %93 ]
  %42 = phi i32 [ 0, %14 ], [ %107, %93 ]
  %43 = phi i32 [ 0, %14 ], [ %108, %93 ]
  %44 = phi i32 [ 0, %14 ], [ %109, %93 ]
  %45 = phi i32 [ 0, %14 ], [ %110, %93 ]
  %46 = phi i32 [ 0, %14 ], [ %111, %93 ]
  %47 = phi i32 [ 0, %14 ], [ %112, %93 ]
  %48 = phi i32 [ 0, %14 ], [ %113, %93 ]
  %49 = phi i32 [ 0, %14 ], [ %114, %93 ]
  %50 = phi i32 [ 0, %14 ], [ %115, %93 ]
  %51 = phi i32 [ 0, %14 ], [ %116, %93 ]
  %52 = phi i32 [ 0, %14 ], [ %117, %93 ]
  %53 = phi i32 [ 0, %14 ], [ %118, %93 ]
  %54 = phi i32 [ 0, %14 ], [ %119, %93 ]
  %55 = phi i64 [ 0, %14 ], [ %120, %93 ]
  %56 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4, !tbaa !5
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %93

59:                                               ; preds = %28
  %60 = zext i32 %57 to i64
  br label %61

61:                                               ; preds = %59, %308
  %62 = phi i32 [ %29, %59 ], [ %321, %308 ]
  %63 = phi i32 [ %30, %59 ], [ %322, %308 ]
  %64 = phi i32 [ %31, %59 ], [ %320, %308 ]
  %65 = phi i32 [ %32, %59 ], [ %323, %308 ]
  %66 = phi i32 [ %33, %59 ], [ %319, %308 ]
  %67 = phi i32 [ %34, %59 ], [ %324, %308 ]
  %68 = phi i32 [ %35, %59 ], [ %318, %308 ]
  %69 = phi i32 [ %36, %59 ], [ %325, %308 ]
  %70 = phi i32 [ %37, %59 ], [ %317, %308 ]
  %71 = phi i32 [ %38, %59 ], [ %326, %308 ]
  %72 = phi i32 [ %39, %59 ], [ %316, %308 ]
  %73 = phi i32 [ %40, %59 ], [ %327, %308 ]
  %74 = phi i32 [ %41, %59 ], [ %315, %308 ]
  %75 = phi i32 [ %42, %59 ], [ %328, %308 ]
  %76 = phi i32 [ %43, %59 ], [ %314, %308 ]
  %77 = phi i32 [ %44, %59 ], [ %329, %308 ]
  %78 = phi i32 [ %45, %59 ], [ %313, %308 ]
  %79 = phi i32 [ %46, %59 ], [ %330, %308 ]
  %80 = phi i32 [ %47, %59 ], [ %312, %308 ]
  %81 = phi i32 [ %48, %59 ], [ %331, %308 ]
  %82 = phi i32 [ %49, %59 ], [ %311, %308 ]
  %83 = phi i32 [ %50, %59 ], [ %332, %308 ]
  %84 = phi i32 [ %51, %59 ], [ %310, %308 ]
  %85 = phi i32 [ %52, %59 ], [ %333, %308 ]
  %86 = phi i32 [ %53, %59 ], [ %309, %308 ]
  %87 = phi i32 [ %54, %59 ], [ %334, %308 ]
  %88 = phi i64 [ 0, %59 ], [ %335, %308 ]
  %89 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %4, i64 0, i64 %55, i64 %88
  %90 = load i8, i8* %89, align 1, !tbaa !11
  switch i8 %90, label %308 [
    i8 65, label %91
    i8 66, label %258
    i8 67, label %260
    i8 68, label %262
    i8 69, label %264
    i8 70, label %266
    i8 71, label %268
    i8 72, label %270
    i8 73, label %272
    i8 74, label %274
    i8 75, label %276
    i8 76, label %278
    i8 77, label %280
    i8 78, label %282
    i8 79, label %284
    i8 80, label %286
    i8 81, label %288
    i8 82, label %290
    i8 83, label %292
    i8 84, label %294
    i8 85, label %296
    i8 86, label %298
    i8 87, label %300
    i8 88, label %302
    i8 89, label %304
    i8 90, label %306
  ]

91:                                               ; preds = %61
  %92 = add nsw i32 %62, 1
  br label %308

93:                                               ; preds = %308, %28
  %94 = phi i32 [ %29, %28 ], [ %321, %308 ]
  %95 = phi i32 [ %30, %28 ], [ %322, %308 ]
  %96 = phi i32 [ %31, %28 ], [ %320, %308 ]
  %97 = phi i32 [ %32, %28 ], [ %323, %308 ]
  %98 = phi i32 [ %33, %28 ], [ %319, %308 ]
  %99 = phi i32 [ %34, %28 ], [ %324, %308 ]
  %100 = phi i32 [ %35, %28 ], [ %318, %308 ]
  %101 = phi i32 [ %36, %28 ], [ %325, %308 ]
  %102 = phi i32 [ %37, %28 ], [ %317, %308 ]
  %103 = phi i32 [ %38, %28 ], [ %326, %308 ]
  %104 = phi i32 [ %39, %28 ], [ %316, %308 ]
  %105 = phi i32 [ %40, %28 ], [ %327, %308 ]
  %106 = phi i32 [ %41, %28 ], [ %315, %308 ]
  %107 = phi i32 [ %42, %28 ], [ %328, %308 ]
  %108 = phi i32 [ %43, %28 ], [ %314, %308 ]
  %109 = phi i32 [ %44, %28 ], [ %329, %308 ]
  %110 = phi i32 [ %45, %28 ], [ %313, %308 ]
  %111 = phi i32 [ %46, %28 ], [ %330, %308 ]
  %112 = phi i32 [ %47, %28 ], [ %312, %308 ]
  %113 = phi i32 [ %48, %28 ], [ %331, %308 ]
  %114 = phi i32 [ %49, %28 ], [ %311, %308 ]
  %115 = phi i32 [ %50, %28 ], [ %332, %308 ]
  %116 = phi i32 [ %51, %28 ], [ %310, %308 ]
  %117 = phi i32 [ %52, %28 ], [ %333, %308 ]
  %118 = phi i32 [ %53, %28 ], [ %309, %308 ]
  %119 = phi i32 [ %54, %28 ], [ %334, %308 ]
  %120 = add nuw nsw i64 %55, 1
  %121 = icmp eq i64 %120, %15
  br i1 %121, label %122, label %28, !llvm.loop !12

122:                                              ; preds = %93, %0, %12
  %123 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %94, %93 ]
  %124 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %95, %93 ]
  %125 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %96, %93 ]
  %126 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %97, %93 ]
  %127 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %98, %93 ]
  %128 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %99, %93 ]
  %129 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %100, %93 ]
  %130 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %101, %93 ]
  %131 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %102, %93 ]
  %132 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %103, %93 ]
  %133 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %104, %93 ]
  %134 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %105, %93 ]
  %135 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %106, %93 ]
  %136 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %107, %93 ]
  %137 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %108, %93 ]
  %138 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %109, %93 ]
  %139 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %110, %93 ]
  %140 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %111, %93 ]
  %141 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %112, %93 ]
  %142 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %113, %93 ]
  %143 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %114, %93 ]
  %144 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %115, %93 ]
  %145 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %116, %93 ]
  %146 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %117, %93 ]
  %147 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %118, %93 ]
  %148 = phi i32 [ 0, %12 ], [ 0, %0 ], [ %119, %93 ]
  %149 = icmp sgt i32 %124, %123
  %150 = select i1 %149, i32 %124, i32 %123
  %151 = icmp sgt i32 %125, %150
  %152 = select i1 %151, i64 2, i64 1
  %153 = select i1 %151, i32 %125, i32 %150
  %154 = icmp sgt i32 %126, %153
  %155 = select i1 %154, i64 3, i64 %152
  %156 = select i1 %154, i32 %126, i32 %153
  %157 = icmp sgt i32 %127, %156
  %158 = select i1 %157, i64 4, i64 %155
  %159 = select i1 %157, i32 %127, i32 %156
  %160 = icmp sgt i32 %128, %159
  %161 = select i1 %160, i64 5, i64 %158
  %162 = select i1 %160, i32 %128, i32 %159
  %163 = icmp sgt i32 %129, %162
  %164 = select i1 %163, i64 6, i64 %161
  %165 = select i1 %163, i32 %129, i32 %162
  %166 = icmp sgt i32 %130, %165
  %167 = select i1 %166, i32 %130, i32 %165
  %168 = icmp sgt i32 %131, %167
  %169 = select i1 %168, i32 %131, i32 %167
  %170 = icmp sgt i32 %132, %169
  %171 = select i1 %170, i32 %132, i32 %169
  %172 = icmp sgt i32 %133, %171
  %173 = select i1 %172, i32 %133, i32 %171
  %174 = icmp sgt i32 %134, %173
  %175 = select i1 %174, i32 %134, i32 %173
  %176 = icmp sgt i32 %135, %175
  %177 = select i1 %176, i32 %135, i32 %175
  %178 = icmp sgt i32 %136, %177
  %179 = select i1 %178, i32 %136, i32 %177
  %180 = icmp sgt i32 %137, %179
  %181 = select i1 %180, i32 %137, i32 %179
  %182 = icmp sgt i32 %138, %181
  %183 = select i1 %182, i32 %138, i32 %181
  %184 = icmp sgt i32 %139, %183
  %185 = select i1 %184, i32 %139, i32 %183
  %186 = icmp sgt i32 %140, %185
  %187 = select i1 %186, i32 %140, i32 %185
  %188 = icmp sgt i32 %141, %187
  %189 = select i1 %188, i32 %141, i32 %187
  %190 = icmp sgt i32 %142, %189
  %191 = select i1 %190, i32 %142, i32 %189
  %192 = icmp sgt i32 %143, %191
  %193 = select i1 %192, i32 %143, i32 %191
  %194 = icmp sgt i32 %144, %193
  %195 = select i1 %194, i32 %144, i32 %193
  %196 = icmp sgt i32 %145, %195
  %197 = select i1 %196, i32 %145, i32 %195
  %198 = icmp sgt i32 %146, %197
  %199 = select i1 %198, i32 %146, i32 %197
  %200 = icmp sgt i32 %147, %199
  %201 = select i1 %200, i32 %147, i32 %199
  %202 = icmp sgt i32 %148, %201
  %203 = select i1 %202, i32 %148, i32 %201
  %204 = select i1 %166, i64 7, i64 %164
  %205 = select i1 %168, i64 8, i64 %204
  %206 = select i1 %170, i64 9, i64 %205
  %207 = select i1 %172, i64 10, i64 %206
  %208 = select i1 %174, i64 11, i64 %207
  %209 = select i1 %176, i64 12, i64 %208
  %210 = select i1 %178, i64 13, i64 %209
  %211 = select i1 %180, i64 14, i64 %210
  %212 = select i1 %182, i64 15, i64 %211
  %213 = select i1 %184, i64 16, i64 %212
  %214 = select i1 %186, i64 17, i64 %213
  %215 = select i1 %188, i64 18, i64 %214
  %216 = select i1 %190, i64 19, i64 %215
  %217 = select i1 %192, i64 20, i64 %216
  %218 = select i1 %194, i64 21, i64 %217
  %219 = select i1 %196, i64 22, i64 %218
  %220 = select i1 %198, i64 23, i64 %219
  %221 = select i1 %200, i64 24, i64 %220
  %222 = select i1 %202, i64 25, i64 %221
  %223 = getelementptr inbounds [26 x i8], [26 x i8]* @__const.main.name, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1, !tbaa !11
  %225 = sext i8 %224 to i32
  %226 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %225)
  %227 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %203)
  %228 = load i32, i32* %1, align 4, !tbaa !5
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %257

230:                                              ; preds = %122, %252
  %231 = phi i32 [ %253, %252 ], [ %228, %122 ]
  %232 = phi i64 [ %254, %252 ], [ 0, %122 ]
  %233 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i64 0, i64 %232
  %234 = load i32, i32* %233, align 4, !tbaa !5
  %235 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %232
  %236 = icmp sgt i32 %234, 0
  br i1 %236, label %237, label %252

237:                                              ; preds = %230
  %238 = zext i32 %234 to i64
  br label %239

239:                                              ; preds = %237, %247
  %240 = phi i64 [ 0, %237 ], [ %248, %247 ]
  %241 = getelementptr inbounds [1000 x [26 x i8]], [1000 x [26 x i8]]* %4, i64 0, i64 %232, i64 %240
  %242 = load i8, i8* %241, align 1, !tbaa !11
  %243 = icmp eq i8 %242, %224
  br i1 %243, label %244, label %247

244:                                              ; preds = %239
  %245 = load i32, i32* %235, align 4, !tbaa !5
  %246 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %245)
  br label %247

247:                                              ; preds = %239, %244
  %248 = add nuw nsw i64 %240, 1
  %249 = icmp eq i64 %248, %238
  br i1 %249, label %250, label %239, !llvm.loop !13

250:                                              ; preds = %247
  %251 = load i32, i32* %1, align 4, !tbaa !5
  br label %252

252:                                              ; preds = %250, %230
  %253 = phi i32 [ %251, %250 ], [ %231, %230 ]
  %254 = add nuw nsw i64 %232, 1
  %255 = sext i32 %253 to i64
  %256 = icmp slt i64 %254, %255
  br i1 %256, label %230, label %257, !llvm.loop !14

257:                                              ; preds = %252, %122
  call void @llvm.lifetime.end.p0i8(i64 26000, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #4
  ret void

258:                                              ; preds = %61
  %259 = add nsw i32 %63, 1
  br label %308

260:                                              ; preds = %61
  %261 = add nsw i32 %64, 1
  br label %308

262:                                              ; preds = %61
  %263 = add nsw i32 %65, 1
  br label %308

264:                                              ; preds = %61
  %265 = add nsw i32 %66, 1
  br label %308

266:                                              ; preds = %61
  %267 = add nsw i32 %67, 1
  br label %308

268:                                              ; preds = %61
  %269 = add nsw i32 %68, 1
  br label %308

270:                                              ; preds = %61
  %271 = add nsw i32 %69, 1
  br label %308

272:                                              ; preds = %61
  %273 = add nsw i32 %70, 1
  br label %308

274:                                              ; preds = %61
  %275 = add nsw i32 %71, 1
  br label %308

276:                                              ; preds = %61
  %277 = add nsw i32 %72, 1
  br label %308

278:                                              ; preds = %61
  %279 = add nsw i32 %73, 1
  br label %308

280:                                              ; preds = %61
  %281 = add nsw i32 %74, 1
  br label %308

282:                                              ; preds = %61
  %283 = add nsw i32 %75, 1
  br label %308

284:                                              ; preds = %61
  %285 = add nsw i32 %76, 1
  br label %308

286:                                              ; preds = %61
  %287 = add nsw i32 %77, 1
  br label %308

288:                                              ; preds = %61
  %289 = add nsw i32 %78, 1
  br label %308

290:                                              ; preds = %61
  %291 = add nsw i32 %79, 1
  br label %308

292:                                              ; preds = %61
  %293 = add nsw i32 %80, 1
  br label %308

294:                                              ; preds = %61
  %295 = add nsw i32 %81, 1
  br label %308

296:                                              ; preds = %61
  %297 = add nsw i32 %82, 1
  br label %308

298:                                              ; preds = %61
  %299 = add nsw i32 %83, 1
  br label %308

300:                                              ; preds = %61
  %301 = add nsw i32 %84, 1
  br label %308

302:                                              ; preds = %61
  %303 = add nsw i32 %85, 1
  br label %308

304:                                              ; preds = %61
  %305 = add nsw i32 %86, 1
  br label %308

306:                                              ; preds = %61
  %307 = add nsw i32 %87, 1
  br label %308

308:                                              ; preds = %61, %258, %91, %260, %262, %264, %266, %268, %270, %272, %274, %276, %278, %280, %282, %284, %286, %288, %290, %292, %294, %296, %298, %300, %302, %304, %306
  %309 = phi i32 [ %86, %306 ], [ %305, %304 ], [ %86, %302 ], [ %86, %300 ], [ %86, %298 ], [ %86, %296 ], [ %86, %294 ], [ %86, %292 ], [ %86, %290 ], [ %86, %288 ], [ %86, %286 ], [ %86, %284 ], [ %86, %282 ], [ %86, %280 ], [ %86, %278 ], [ %86, %276 ], [ %86, %274 ], [ %86, %272 ], [ %86, %270 ], [ %86, %268 ], [ %86, %266 ], [ %86, %264 ], [ %86, %262 ], [ %86, %260 ], [ %86, %91 ], [ %86, %258 ], [ %86, %61 ]
  %310 = phi i32 [ %84, %306 ], [ %84, %304 ], [ %84, %302 ], [ %301, %300 ], [ %84, %298 ], [ %84, %296 ], [ %84, %294 ], [ %84, %292 ], [ %84, %290 ], [ %84, %288 ], [ %84, %286 ], [ %84, %284 ], [ %84, %282 ], [ %84, %280 ], [ %84, %278 ], [ %84, %276 ], [ %84, %274 ], [ %84, %272 ], [ %84, %270 ], [ %84, %268 ], [ %84, %266 ], [ %84, %264 ], [ %84, %262 ], [ %84, %260 ], [ %84, %91 ], [ %84, %258 ], [ %84, %61 ]
  %311 = phi i32 [ %82, %306 ], [ %82, %304 ], [ %82, %302 ], [ %82, %300 ], [ %82, %298 ], [ %297, %296 ], [ %82, %294 ], [ %82, %292 ], [ %82, %290 ], [ %82, %288 ], [ %82, %286 ], [ %82, %284 ], [ %82, %282 ], [ %82, %280 ], [ %82, %278 ], [ %82, %276 ], [ %82, %274 ], [ %82, %272 ], [ %82, %270 ], [ %82, %268 ], [ %82, %266 ], [ %82, %264 ], [ %82, %262 ], [ %82, %260 ], [ %82, %91 ], [ %82, %258 ], [ %82, %61 ]
  %312 = phi i32 [ %80, %306 ], [ %80, %304 ], [ %80, %302 ], [ %80, %300 ], [ %80, %298 ], [ %80, %296 ], [ %80, %294 ], [ %293, %292 ], [ %80, %290 ], [ %80, %288 ], [ %80, %286 ], [ %80, %284 ], [ %80, %282 ], [ %80, %280 ], [ %80, %278 ], [ %80, %276 ], [ %80, %274 ], [ %80, %272 ], [ %80, %270 ], [ %80, %268 ], [ %80, %266 ], [ %80, %264 ], [ %80, %262 ], [ %80, %260 ], [ %80, %91 ], [ %80, %258 ], [ %80, %61 ]
  %313 = phi i32 [ %78, %306 ], [ %78, %304 ], [ %78, %302 ], [ %78, %300 ], [ %78, %298 ], [ %78, %296 ], [ %78, %294 ], [ %78, %292 ], [ %78, %290 ], [ %289, %288 ], [ %78, %286 ], [ %78, %284 ], [ %78, %282 ], [ %78, %280 ], [ %78, %278 ], [ %78, %276 ], [ %78, %274 ], [ %78, %272 ], [ %78, %270 ], [ %78, %268 ], [ %78, %266 ], [ %78, %264 ], [ %78, %262 ], [ %78, %260 ], [ %78, %91 ], [ %78, %258 ], [ %78, %61 ]
  %314 = phi i32 [ %76, %306 ], [ %76, %304 ], [ %76, %302 ], [ %76, %300 ], [ %76, %298 ], [ %76, %296 ], [ %76, %294 ], [ %76, %292 ], [ %76, %290 ], [ %76, %288 ], [ %76, %286 ], [ %285, %284 ], [ %76, %282 ], [ %76, %280 ], [ %76, %278 ], [ %76, %276 ], [ %76, %274 ], [ %76, %272 ], [ %76, %270 ], [ %76, %268 ], [ %76, %266 ], [ %76, %264 ], [ %76, %262 ], [ %76, %260 ], [ %76, %91 ], [ %76, %258 ], [ %76, %61 ]
  %315 = phi i32 [ %74, %306 ], [ %74, %304 ], [ %74, %302 ], [ %74, %300 ], [ %74, %298 ], [ %74, %296 ], [ %74, %294 ], [ %74, %292 ], [ %74, %290 ], [ %74, %288 ], [ %74, %286 ], [ %74, %284 ], [ %74, %282 ], [ %281, %280 ], [ %74, %278 ], [ %74, %276 ], [ %74, %274 ], [ %74, %272 ], [ %74, %270 ], [ %74, %268 ], [ %74, %266 ], [ %74, %264 ], [ %74, %262 ], [ %74, %260 ], [ %74, %91 ], [ %74, %258 ], [ %74, %61 ]
  %316 = phi i32 [ %72, %306 ], [ %72, %304 ], [ %72, %302 ], [ %72, %300 ], [ %72, %298 ], [ %72, %296 ], [ %72, %294 ], [ %72, %292 ], [ %72, %290 ], [ %72, %288 ], [ %72, %286 ], [ %72, %284 ], [ %72, %282 ], [ %72, %280 ], [ %72, %278 ], [ %277, %276 ], [ %72, %274 ], [ %72, %272 ], [ %72, %270 ], [ %72, %268 ], [ %72, %266 ], [ %72, %264 ], [ %72, %262 ], [ %72, %260 ], [ %72, %91 ], [ %72, %258 ], [ %72, %61 ]
  %317 = phi i32 [ %70, %306 ], [ %70, %304 ], [ %70, %302 ], [ %70, %300 ], [ %70, %298 ], [ %70, %296 ], [ %70, %294 ], [ %70, %292 ], [ %70, %290 ], [ %70, %288 ], [ %70, %286 ], [ %70, %284 ], [ %70, %282 ], [ %70, %280 ], [ %70, %278 ], [ %70, %276 ], [ %70, %274 ], [ %273, %272 ], [ %70, %270 ], [ %70, %268 ], [ %70, %266 ], [ %70, %264 ], [ %70, %262 ], [ %70, %260 ], [ %70, %91 ], [ %70, %258 ], [ %70, %61 ]
  %318 = phi i32 [ %68, %306 ], [ %68, %304 ], [ %68, %302 ], [ %68, %300 ], [ %68, %298 ], [ %68, %296 ], [ %68, %294 ], [ %68, %292 ], [ %68, %290 ], [ %68, %288 ], [ %68, %286 ], [ %68, %284 ], [ %68, %282 ], [ %68, %280 ], [ %68, %278 ], [ %68, %276 ], [ %68, %274 ], [ %68, %272 ], [ %68, %270 ], [ %269, %268 ], [ %68, %266 ], [ %68, %264 ], [ %68, %262 ], [ %68, %260 ], [ %68, %91 ], [ %68, %258 ], [ %68, %61 ]
  %319 = phi i32 [ %66, %306 ], [ %66, %304 ], [ %66, %302 ], [ %66, %300 ], [ %66, %298 ], [ %66, %296 ], [ %66, %294 ], [ %66, %292 ], [ %66, %290 ], [ %66, %288 ], [ %66, %286 ], [ %66, %284 ], [ %66, %282 ], [ %66, %280 ], [ %66, %278 ], [ %66, %276 ], [ %66, %274 ], [ %66, %272 ], [ %66, %270 ], [ %66, %268 ], [ %66, %266 ], [ %265, %264 ], [ %66, %262 ], [ %66, %260 ], [ %66, %91 ], [ %66, %258 ], [ %66, %61 ]
  %320 = phi i32 [ %64, %306 ], [ %64, %304 ], [ %64, %302 ], [ %64, %300 ], [ %64, %298 ], [ %64, %296 ], [ %64, %294 ], [ %64, %292 ], [ %64, %290 ], [ %64, %288 ], [ %64, %286 ], [ %64, %284 ], [ %64, %282 ], [ %64, %280 ], [ %64, %278 ], [ %64, %276 ], [ %64, %274 ], [ %64, %272 ], [ %64, %270 ], [ %64, %268 ], [ %64, %266 ], [ %64, %264 ], [ %64, %262 ], [ %261, %260 ], [ %64, %91 ], [ %64, %258 ], [ %64, %61 ]
  %321 = phi i32 [ %62, %306 ], [ %62, %304 ], [ %62, %302 ], [ %62, %300 ], [ %62, %298 ], [ %62, %296 ], [ %62, %294 ], [ %62, %292 ], [ %62, %290 ], [ %62, %288 ], [ %62, %286 ], [ %62, %284 ], [ %62, %282 ], [ %62, %280 ], [ %62, %278 ], [ %62, %276 ], [ %62, %274 ], [ %62, %272 ], [ %62, %270 ], [ %62, %268 ], [ %62, %266 ], [ %62, %264 ], [ %62, %262 ], [ %62, %260 ], [ %92, %91 ], [ %62, %258 ], [ %62, %61 ]
  %322 = phi i32 [ %63, %306 ], [ %63, %304 ], [ %63, %302 ], [ %63, %300 ], [ %63, %298 ], [ %63, %296 ], [ %63, %294 ], [ %63, %292 ], [ %63, %290 ], [ %63, %288 ], [ %63, %286 ], [ %63, %284 ], [ %63, %282 ], [ %63, %280 ], [ %63, %278 ], [ %63, %276 ], [ %63, %274 ], [ %63, %272 ], [ %63, %270 ], [ %63, %268 ], [ %63, %266 ], [ %63, %264 ], [ %63, %262 ], [ %63, %260 ], [ %63, %91 ], [ %259, %258 ], [ %63, %61 ]
  %323 = phi i32 [ %65, %306 ], [ %65, %304 ], [ %65, %302 ], [ %65, %300 ], [ %65, %298 ], [ %65, %296 ], [ %65, %294 ], [ %65, %292 ], [ %65, %290 ], [ %65, %288 ], [ %65, %286 ], [ %65, %284 ], [ %65, %282 ], [ %65, %280 ], [ %65, %278 ], [ %65, %276 ], [ %65, %274 ], [ %65, %272 ], [ %65, %270 ], [ %65, %268 ], [ %65, %266 ], [ %65, %264 ], [ %263, %262 ], [ %65, %260 ], [ %65, %91 ], [ %65, %258 ], [ %65, %61 ]
  %324 = phi i32 [ %67, %306 ], [ %67, %304 ], [ %67, %302 ], [ %67, %300 ], [ %67, %298 ], [ %67, %296 ], [ %67, %294 ], [ %67, %292 ], [ %67, %290 ], [ %67, %288 ], [ %67, %286 ], [ %67, %284 ], [ %67, %282 ], [ %67, %280 ], [ %67, %278 ], [ %67, %276 ], [ %67, %274 ], [ %67, %272 ], [ %67, %270 ], [ %67, %268 ], [ %267, %266 ], [ %67, %264 ], [ %67, %262 ], [ %67, %260 ], [ %67, %91 ], [ %67, %258 ], [ %67, %61 ]
  %325 = phi i32 [ %69, %306 ], [ %69, %304 ], [ %69, %302 ], [ %69, %300 ], [ %69, %298 ], [ %69, %296 ], [ %69, %294 ], [ %69, %292 ], [ %69, %290 ], [ %69, %288 ], [ %69, %286 ], [ %69, %284 ], [ %69, %282 ], [ %69, %280 ], [ %69, %278 ], [ %69, %276 ], [ %69, %274 ], [ %69, %272 ], [ %271, %270 ], [ %69, %268 ], [ %69, %266 ], [ %69, %264 ], [ %69, %262 ], [ %69, %260 ], [ %69, %91 ], [ %69, %258 ], [ %69, %61 ]
  %326 = phi i32 [ %71, %306 ], [ %71, %304 ], [ %71, %302 ], [ %71, %300 ], [ %71, %298 ], [ %71, %296 ], [ %71, %294 ], [ %71, %292 ], [ %71, %290 ], [ %71, %288 ], [ %71, %286 ], [ %71, %284 ], [ %71, %282 ], [ %71, %280 ], [ %71, %278 ], [ %71, %276 ], [ %275, %274 ], [ %71, %272 ], [ %71, %270 ], [ %71, %268 ], [ %71, %266 ], [ %71, %264 ], [ %71, %262 ], [ %71, %260 ], [ %71, %91 ], [ %71, %258 ], [ %71, %61 ]
  %327 = phi i32 [ %73, %306 ], [ %73, %304 ], [ %73, %302 ], [ %73, %300 ], [ %73, %298 ], [ %73, %296 ], [ %73, %294 ], [ %73, %292 ], [ %73, %290 ], [ %73, %288 ], [ %73, %286 ], [ %73, %284 ], [ %73, %282 ], [ %73, %280 ], [ %279, %278 ], [ %73, %276 ], [ %73, %274 ], [ %73, %272 ], [ %73, %270 ], [ %73, %268 ], [ %73, %266 ], [ %73, %264 ], [ %73, %262 ], [ %73, %260 ], [ %73, %91 ], [ %73, %258 ], [ %73, %61 ]
  %328 = phi i32 [ %75, %306 ], [ %75, %304 ], [ %75, %302 ], [ %75, %300 ], [ %75, %298 ], [ %75, %296 ], [ %75, %294 ], [ %75, %292 ], [ %75, %290 ], [ %75, %288 ], [ %75, %286 ], [ %75, %284 ], [ %283, %282 ], [ %75, %280 ], [ %75, %278 ], [ %75, %276 ], [ %75, %274 ], [ %75, %272 ], [ %75, %270 ], [ %75, %268 ], [ %75, %266 ], [ %75, %264 ], [ %75, %262 ], [ %75, %260 ], [ %75, %91 ], [ %75, %258 ], [ %75, %61 ]
  %329 = phi i32 [ %77, %306 ], [ %77, %304 ], [ %77, %302 ], [ %77, %300 ], [ %77, %298 ], [ %77, %296 ], [ %77, %294 ], [ %77, %292 ], [ %77, %290 ], [ %77, %288 ], [ %287, %286 ], [ %77, %284 ], [ %77, %282 ], [ %77, %280 ], [ %77, %278 ], [ %77, %276 ], [ %77, %274 ], [ %77, %272 ], [ %77, %270 ], [ %77, %268 ], [ %77, %266 ], [ %77, %264 ], [ %77, %262 ], [ %77, %260 ], [ %77, %91 ], [ %77, %258 ], [ %77, %61 ]
  %330 = phi i32 [ %79, %306 ], [ %79, %304 ], [ %79, %302 ], [ %79, %300 ], [ %79, %298 ], [ %79, %296 ], [ %79, %294 ], [ %79, %292 ], [ %291, %290 ], [ %79, %288 ], [ %79, %286 ], [ %79, %284 ], [ %79, %282 ], [ %79, %280 ], [ %79, %278 ], [ %79, %276 ], [ %79, %274 ], [ %79, %272 ], [ %79, %270 ], [ %79, %268 ], [ %79, %266 ], [ %79, %264 ], [ %79, %262 ], [ %79, %260 ], [ %79, %91 ], [ %79, %258 ], [ %79, %61 ]
  %331 = phi i32 [ %81, %306 ], [ %81, %304 ], [ %81, %302 ], [ %81, %300 ], [ %81, %298 ], [ %81, %296 ], [ %295, %294 ], [ %81, %292 ], [ %81, %290 ], [ %81, %288 ], [ %81, %286 ], [ %81, %284 ], [ %81, %282 ], [ %81, %280 ], [ %81, %278 ], [ %81, %276 ], [ %81, %274 ], [ %81, %272 ], [ %81, %270 ], [ %81, %268 ], [ %81, %266 ], [ %81, %264 ], [ %81, %262 ], [ %81, %260 ], [ %81, %91 ], [ %81, %258 ], [ %81, %61 ]
  %332 = phi i32 [ %83, %306 ], [ %83, %304 ], [ %83, %302 ], [ %83, %300 ], [ %299, %298 ], [ %83, %296 ], [ %83, %294 ], [ %83, %292 ], [ %83, %290 ], [ %83, %288 ], [ %83, %286 ], [ %83, %284 ], [ %83, %282 ], [ %83, %280 ], [ %83, %278 ], [ %83, %276 ], [ %83, %274 ], [ %83, %272 ], [ %83, %270 ], [ %83, %268 ], [ %83, %266 ], [ %83, %264 ], [ %83, %262 ], [ %83, %260 ], [ %83, %91 ], [ %83, %258 ], [ %83, %61 ]
  %333 = phi i32 [ %85, %306 ], [ %85, %304 ], [ %303, %302 ], [ %85, %300 ], [ %85, %298 ], [ %85, %296 ], [ %85, %294 ], [ %85, %292 ], [ %85, %290 ], [ %85, %288 ], [ %85, %286 ], [ %85, %284 ], [ %85, %282 ], [ %85, %280 ], [ %85, %278 ], [ %85, %276 ], [ %85, %274 ], [ %85, %272 ], [ %85, %270 ], [ %85, %268 ], [ %85, %266 ], [ %85, %264 ], [ %85, %262 ], [ %85, %260 ], [ %85, %91 ], [ %85, %258 ], [ %85, %61 ]
  %334 = phi i32 [ %307, %306 ], [ %87, %304 ], [ %87, %302 ], [ %87, %300 ], [ %87, %298 ], [ %87, %296 ], [ %87, %294 ], [ %87, %292 ], [ %87, %290 ], [ %87, %288 ], [ %87, %286 ], [ %87, %284 ], [ %87, %282 ], [ %87, %280 ], [ %87, %278 ], [ %87, %276 ], [ %87, %274 ], [ %87, %272 ], [ %87, %270 ], [ %87, %268 ], [ %87, %266 ], [ %87, %264 ], [ %87, %262 ], [ %87, %260 ], [ %87, %91 ], [ %87, %258 ], [ %87, %61 ]
  %335 = add nuw nsw i64 %88, 1
  %336 = icmp eq i64 %335, %60
  br i1 %336, label %93, label %61, !llvm.loop !15
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
