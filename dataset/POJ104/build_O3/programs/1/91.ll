; ModuleID = 'source-C-CXX/1/91.c'
source_filename = "source-C-CXX/1/91.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1000 x i32], align 16
  %3 = alloca [1000 x [30 x i8]], align 16
  %4 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #4
  %5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %6 = bitcast [1000 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4000, i8* nonnull %6) #4
  %7 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 30000, i8* nonnull %7) #4
  %8 = load i32, i32* %1, align 4, !tbaa !5
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %13, label %144

10:                                               ; preds = %208
  %11 = icmp sgt i32 %299, 0
  %12 = select i1 %11, i32 %299, i32 0
  br label %13

13:                                               ; preds = %10, %0
  %14 = phi i32 [ 0, %0 ], [ %312, %10 ]
  %15 = phi i32 [ 0, %0 ], [ %287, %10 ]
  %16 = phi i32 [ 0, %0 ], [ %311, %10 ]
  %17 = phi i32 [ 0, %0 ], [ %288, %10 ]
  %18 = phi i32 [ 0, %0 ], [ %310, %10 ]
  %19 = phi i32 [ 0, %0 ], [ %289, %10 ]
  %20 = phi i32 [ 0, %0 ], [ %309, %10 ]
  %21 = phi i32 [ 0, %0 ], [ %290, %10 ]
  %22 = phi i32 [ 0, %0 ], [ %308, %10 ]
  %23 = phi i32 [ 0, %0 ], [ %291, %10 ]
  %24 = phi i32 [ 0, %0 ], [ %307, %10 ]
  %25 = phi i32 [ 0, %0 ], [ %292, %10 ]
  %26 = phi i32 [ 0, %0 ], [ %306, %10 ]
  %27 = phi i32 [ 0, %0 ], [ %293, %10 ]
  %28 = phi i32 [ 0, %0 ], [ %305, %10 ]
  %29 = phi i32 [ 0, %0 ], [ %294, %10 ]
  %30 = phi i32 [ 0, %0 ], [ %304, %10 ]
  %31 = phi i32 [ 0, %0 ], [ %295, %10 ]
  %32 = phi i32 [ 0, %0 ], [ %303, %10 ]
  %33 = phi i32 [ 0, %0 ], [ %296, %10 ]
  %34 = phi i32 [ 0, %0 ], [ %302, %10 ]
  %35 = phi i32 [ 0, %0 ], [ %297, %10 ]
  %36 = phi i32 [ 0, %0 ], [ %301, %10 ]
  %37 = phi i32 [ 0, %0 ], [ %298, %10 ]
  %38 = phi i32 [ 0, %0 ], [ %300, %10 ]
  %39 = phi i32 [ 0, %0 ], [ %12, %10 ]
  %40 = icmp sgt i32 %38, %39
  %41 = select i1 %40, i32 %38, i32 %39
  %42 = icmp sgt i32 %37, %41
  %43 = select i1 %42, i32 %37, i32 %41
  %44 = icmp sgt i32 %36, %43
  %45 = select i1 %44, i32 %36, i32 %43
  %46 = icmp sgt i32 %35, %45
  %47 = select i1 %46, i32 %35, i32 %45
  %48 = icmp sgt i32 %34, %47
  %49 = select i1 %48, i32 %34, i32 %47
  %50 = icmp sgt i32 %33, %49
  %51 = select i1 %50, i32 %33, i32 %49
  %52 = icmp sgt i32 %32, %51
  %53 = select i1 %52, i32 %32, i32 %51
  %54 = icmp sgt i32 %31, %53
  %55 = select i1 %54, i32 %31, i32 %53
  %56 = icmp sgt i32 %30, %55
  %57 = select i1 %56, i32 %30, i32 %55
  %58 = icmp sgt i32 %29, %57
  %59 = select i1 %58, i32 %29, i32 %57
  %60 = icmp sgt i32 %28, %59
  %61 = select i1 %60, i32 %28, i32 %59
  %62 = icmp sgt i32 %27, %61
  %63 = select i1 %62, i32 %27, i32 %61
  %64 = icmp sgt i32 %26, %63
  %65 = select i1 %64, i32 %26, i32 %63
  %66 = icmp sgt i32 %25, %65
  %67 = select i1 %66, i32 %25, i32 %65
  %68 = icmp sgt i32 %24, %67
  %69 = select i1 %68, i32 %24, i32 %67
  %70 = icmp sgt i32 %23, %69
  %71 = select i1 %70, i32 %23, i32 %69
  %72 = icmp sgt i32 %22, %71
  %73 = select i1 %72, i32 %22, i32 %71
  %74 = icmp sgt i32 %21, %73
  %75 = select i1 %74, i32 %21, i32 %73
  %76 = icmp sgt i32 %20, %75
  %77 = select i1 %76, i32 %20, i32 %75
  %78 = icmp sgt i32 %19, %77
  %79 = select i1 %78, i32 %19, i32 %77
  %80 = icmp sgt i32 %18, %79
  %81 = select i1 %80, i32 %18, i32 %79
  %82 = icmp sgt i32 %17, %81
  %83 = select i1 %82, i32 %17, i32 %81
  %84 = icmp sgt i32 %16, %83
  %85 = select i1 %84, i32 %16, i32 %83
  %86 = icmp sgt i32 %15, %85
  %87 = select i1 %86, i32 %15, i32 %85
  %88 = icmp sgt i32 %14, %87
  %89 = select i1 %88, i32 %14, i32 %87
  %90 = icmp eq i32 %38, %89
  %91 = icmp eq i32 %37, %89
  %92 = icmp eq i32 %36, %89
  %93 = icmp eq i32 %35, %89
  %94 = icmp eq i32 %34, %89
  %95 = icmp eq i32 %33, %89
  %96 = icmp eq i32 %32, %89
  %97 = icmp eq i32 %31, %89
  %98 = icmp eq i32 %30, %89
  %99 = icmp eq i32 %29, %89
  %100 = icmp eq i32 %28, %89
  %101 = icmp eq i32 %27, %89
  %102 = icmp eq i32 %26, %89
  %103 = icmp eq i32 %25, %89
  %104 = icmp eq i32 %24, %89
  %105 = icmp eq i32 %23, %89
  %106 = icmp eq i32 %22, %89
  %107 = icmp eq i32 %21, %89
  %108 = icmp eq i32 %20, %89
  %109 = icmp eq i32 %19, %89
  %110 = icmp eq i32 %18, %89
  %111 = icmp eq i32 %17, %89
  %112 = icmp eq i32 %16, %89
  %113 = icmp eq i32 %15, %89
  %114 = icmp slt i32 %14, %87
  %115 = select i1 %90, i32 66, i32 65
  %116 = select i1 %91, i32 67, i32 %115
  %117 = select i1 %92, i32 68, i32 %116
  %118 = select i1 %93, i32 69, i32 %117
  %119 = select i1 %94, i32 70, i32 %118
  %120 = select i1 %95, i32 71, i32 %119
  %121 = select i1 %96, i32 72, i32 %120
  %122 = select i1 %97, i32 73, i32 %121
  %123 = select i1 %98, i32 74, i32 %122
  %124 = select i1 %99, i32 75, i32 %123
  %125 = select i1 %100, i32 76, i32 %124
  %126 = select i1 %101, i32 77, i32 %125
  %127 = select i1 %102, i32 78, i32 %126
  %128 = select i1 %103, i32 79, i32 %127
  %129 = select i1 %104, i32 80, i32 %128
  %130 = select i1 %105, i32 81, i32 %129
  %131 = select i1 %106, i32 82, i32 %130
  %132 = select i1 %107, i32 83, i32 %131
  %133 = select i1 %108, i32 84, i32 %132
  %134 = select i1 %109, i32 85, i32 %133
  %135 = select i1 %110, i32 86, i32 %134
  %136 = select i1 %111, i32 87, i32 %135
  %137 = select i1 %112, i32 88, i32 %136
  %138 = select i1 %113, i32 89, i32 %137
  %139 = select i1 %114, i32 %138, i32 90
  %140 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %139)
  %141 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %89)
  %142 = load i32, i32* %1, align 4, !tbaa !5
  %143 = icmp slt i32 %142, 1
  br i1 %143, label %235, label %213

144:                                              ; preds = %0, %208
  %145 = phi i32 [ %299, %208 ], [ 0, %0 ]
  %146 = phi i32 [ %300, %208 ], [ 0, %0 ]
  %147 = phi i32 [ %298, %208 ], [ 0, %0 ]
  %148 = phi i32 [ %301, %208 ], [ 0, %0 ]
  %149 = phi i32 [ %297, %208 ], [ 0, %0 ]
  %150 = phi i32 [ %302, %208 ], [ 0, %0 ]
  %151 = phi i32 [ %296, %208 ], [ 0, %0 ]
  %152 = phi i32 [ %303, %208 ], [ 0, %0 ]
  %153 = phi i32 [ %295, %208 ], [ 0, %0 ]
  %154 = phi i32 [ %304, %208 ], [ 0, %0 ]
  %155 = phi i32 [ %294, %208 ], [ 0, %0 ]
  %156 = phi i32 [ %305, %208 ], [ 0, %0 ]
  %157 = phi i32 [ %293, %208 ], [ 0, %0 ]
  %158 = phi i32 [ %306, %208 ], [ 0, %0 ]
  %159 = phi i32 [ %292, %208 ], [ 0, %0 ]
  %160 = phi i32 [ %307, %208 ], [ 0, %0 ]
  %161 = phi i32 [ %291, %208 ], [ 0, %0 ]
  %162 = phi i32 [ %308, %208 ], [ 0, %0 ]
  %163 = phi i32 [ %290, %208 ], [ 0, %0 ]
  %164 = phi i32 [ %309, %208 ], [ 0, %0 ]
  %165 = phi i32 [ %289, %208 ], [ 0, %0 ]
  %166 = phi i32 [ %310, %208 ], [ 0, %0 ]
  %167 = phi i32 [ %288, %208 ], [ 0, %0 ]
  %168 = phi i32 [ %311, %208 ], [ 0, %0 ]
  %169 = phi i32 [ %287, %208 ], [ 0, %0 ]
  %170 = phi i32 [ %312, %208 ], [ 0, %0 ]
  %171 = phi i64 [ %209, %208 ], [ 1, %0 ]
  %172 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %171
  %173 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 %171, i64 0
  %174 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %172, i8* nonnull %173)
  br label %175

175:                                              ; preds = %144, %286
  %176 = phi i32 [ %145, %144 ], [ %299, %286 ]
  %177 = phi i32 [ %146, %144 ], [ %300, %286 ]
  %178 = phi i32 [ %147, %144 ], [ %298, %286 ]
  %179 = phi i32 [ %148, %144 ], [ %301, %286 ]
  %180 = phi i32 [ %149, %144 ], [ %297, %286 ]
  %181 = phi i32 [ %150, %144 ], [ %302, %286 ]
  %182 = phi i32 [ %151, %144 ], [ %296, %286 ]
  %183 = phi i32 [ %152, %144 ], [ %303, %286 ]
  %184 = phi i32 [ %153, %144 ], [ %295, %286 ]
  %185 = phi i32 [ %154, %144 ], [ %304, %286 ]
  %186 = phi i32 [ %155, %144 ], [ %294, %286 ]
  %187 = phi i32 [ %156, %144 ], [ %305, %286 ]
  %188 = phi i32 [ %157, %144 ], [ %293, %286 ]
  %189 = phi i32 [ %158, %144 ], [ %306, %286 ]
  %190 = phi i32 [ %159, %144 ], [ %292, %286 ]
  %191 = phi i32 [ %160, %144 ], [ %307, %286 ]
  %192 = phi i32 [ %161, %144 ], [ %291, %286 ]
  %193 = phi i32 [ %162, %144 ], [ %308, %286 ]
  %194 = phi i32 [ %163, %144 ], [ %290, %286 ]
  %195 = phi i32 [ %164, %144 ], [ %309, %286 ]
  %196 = phi i32 [ %165, %144 ], [ %289, %286 ]
  %197 = phi i32 [ %166, %144 ], [ %310, %286 ]
  %198 = phi i32 [ %167, %144 ], [ %288, %286 ]
  %199 = phi i32 [ %168, %144 ], [ %311, %286 ]
  %200 = phi i32 [ %169, %144 ], [ %287, %286 ]
  %201 = phi i32 [ %170, %144 ], [ %312, %286 ]
  %202 = phi i64 [ 0, %144 ], [ %313, %286 ]
  %203 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 %171, i64 %202
  %204 = load i8, i8* %203, align 1, !tbaa !9
  %205 = sext i8 %204 to i32
  switch i32 %205, label %286 [
    i32 65, label %206
    i32 66, label %236
    i32 67, label %238
    i32 68, label %240
    i32 69, label %242
    i32 70, label %244
    i32 71, label %246
    i32 72, label %248
    i32 73, label %250
    i32 74, label %252
    i32 75, label %254
    i32 76, label %256
    i32 77, label %258
    i32 78, label %260
    i32 79, label %262
    i32 80, label %264
    i32 81, label %266
    i32 82, label %268
    i32 83, label %270
    i32 84, label %272
    i32 85, label %274
    i32 86, label %276
    i32 87, label %278
    i32 88, label %280
    i32 89, label %282
    i32 90, label %284
  ]

206:                                              ; preds = %175
  %207 = add nsw i32 %176, 1
  br label %286

208:                                              ; preds = %286
  %209 = add nuw nsw i64 %171, 1
  %210 = load i32, i32* %1, align 4, !tbaa !5
  %211 = sext i32 %210 to i64
  %212 = icmp slt i64 %171, %211
  br i1 %212, label %144, label %10, !llvm.loop !10

213:                                              ; preds = %13, %230
  %214 = phi i64 [ %231, %230 ], [ 1, %13 ]
  %215 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 %214, i64 0
  %216 = getelementptr inbounds [1000 x i32], [1000 x i32]* %2, i64 0, i64 %214
  br label %217

217:                                              ; preds = %213, %226
  %218 = phi i64 [ 0, %213 ], [ %227, %226 ]
  %219 = getelementptr inbounds [1000 x [30 x i8]], [1000 x [30 x i8]]* %3, i64 0, i64 %214, i64 %218
  %220 = load i8, i8* %219, align 1, !tbaa !9
  %221 = sext i8 %220 to i32
  %222 = icmp eq i32 %139, %221
  br i1 %222, label %223, label %226

223:                                              ; preds = %217
  %224 = load i32, i32* %216, align 4, !tbaa !5
  %225 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %224)
  br label %226

226:                                              ; preds = %217, %223
  %227 = add nuw i64 %218, 1
  %228 = call i64 @strlen(i8* noundef nonnull %215) #5
  %229 = icmp ugt i64 %228, %218
  br i1 %229, label %217, label %230, !llvm.loop !12

230:                                              ; preds = %226
  %231 = add nuw nsw i64 %214, 1
  %232 = load i32, i32* %1, align 4, !tbaa !5
  %233 = sext i32 %232 to i64
  %234 = icmp slt i64 %214, %233
  br i1 %234, label %213, label %235, !llvm.loop !13

235:                                              ; preds = %230, %13
  call void @llvm.lifetime.end.p0i8(i64 30000, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 4000, i8* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #4
  ret i32 0

236:                                              ; preds = %175
  %237 = add nsw i32 %177, 1
  br label %286

238:                                              ; preds = %175
  %239 = add nsw i32 %178, 1
  br label %286

240:                                              ; preds = %175
  %241 = add nsw i32 %179, 1
  br label %286

242:                                              ; preds = %175
  %243 = add nsw i32 %180, 1
  br label %286

244:                                              ; preds = %175
  %245 = add nsw i32 %181, 1
  br label %286

246:                                              ; preds = %175
  %247 = add nsw i32 %182, 1
  br label %286

248:                                              ; preds = %175
  %249 = add nsw i32 %183, 1
  br label %286

250:                                              ; preds = %175
  %251 = add nsw i32 %184, 1
  br label %286

252:                                              ; preds = %175
  %253 = add nsw i32 %185, 1
  br label %286

254:                                              ; preds = %175
  %255 = add nsw i32 %186, 1
  br label %286

256:                                              ; preds = %175
  %257 = add nsw i32 %187, 1
  br label %286

258:                                              ; preds = %175
  %259 = add nsw i32 %188, 1
  br label %286

260:                                              ; preds = %175
  %261 = add nsw i32 %189, 1
  br label %286

262:                                              ; preds = %175
  %263 = add nsw i32 %190, 1
  br label %286

264:                                              ; preds = %175
  %265 = add nsw i32 %191, 1
  br label %286

266:                                              ; preds = %175
  %267 = add nsw i32 %192, 1
  br label %286

268:                                              ; preds = %175
  %269 = add nsw i32 %193, 1
  br label %286

270:                                              ; preds = %175
  %271 = add nsw i32 %194, 1
  br label %286

272:                                              ; preds = %175
  %273 = add nsw i32 %195, 1
  br label %286

274:                                              ; preds = %175
  %275 = add nsw i32 %196, 1
  br label %286

276:                                              ; preds = %175
  %277 = add nsw i32 %197, 1
  br label %286

278:                                              ; preds = %175
  %279 = add nsw i32 %198, 1
  br label %286

280:                                              ; preds = %175
  %281 = add nsw i32 %199, 1
  br label %286

282:                                              ; preds = %175
  %283 = add nsw i32 %200, 1
  br label %286

284:                                              ; preds = %175
  %285 = add nsw i32 %201, 1
  br label %286

286:                                              ; preds = %175, %236, %206, %238, %240, %242, %244, %246, %248, %250, %252, %254, %256, %258, %260, %262, %264, %266, %268, %270, %272, %274, %276, %278, %280, %282, %284
  %287 = phi i32 [ %200, %284 ], [ %283, %282 ], [ %200, %280 ], [ %200, %278 ], [ %200, %276 ], [ %200, %274 ], [ %200, %272 ], [ %200, %270 ], [ %200, %268 ], [ %200, %266 ], [ %200, %264 ], [ %200, %262 ], [ %200, %260 ], [ %200, %258 ], [ %200, %256 ], [ %200, %254 ], [ %200, %252 ], [ %200, %250 ], [ %200, %248 ], [ %200, %246 ], [ %200, %244 ], [ %200, %242 ], [ %200, %240 ], [ %200, %238 ], [ %200, %206 ], [ %200, %236 ], [ %200, %175 ]
  %288 = phi i32 [ %198, %284 ], [ %198, %282 ], [ %198, %280 ], [ %279, %278 ], [ %198, %276 ], [ %198, %274 ], [ %198, %272 ], [ %198, %270 ], [ %198, %268 ], [ %198, %266 ], [ %198, %264 ], [ %198, %262 ], [ %198, %260 ], [ %198, %258 ], [ %198, %256 ], [ %198, %254 ], [ %198, %252 ], [ %198, %250 ], [ %198, %248 ], [ %198, %246 ], [ %198, %244 ], [ %198, %242 ], [ %198, %240 ], [ %198, %238 ], [ %198, %206 ], [ %198, %236 ], [ %198, %175 ]
  %289 = phi i32 [ %196, %284 ], [ %196, %282 ], [ %196, %280 ], [ %196, %278 ], [ %196, %276 ], [ %275, %274 ], [ %196, %272 ], [ %196, %270 ], [ %196, %268 ], [ %196, %266 ], [ %196, %264 ], [ %196, %262 ], [ %196, %260 ], [ %196, %258 ], [ %196, %256 ], [ %196, %254 ], [ %196, %252 ], [ %196, %250 ], [ %196, %248 ], [ %196, %246 ], [ %196, %244 ], [ %196, %242 ], [ %196, %240 ], [ %196, %238 ], [ %196, %206 ], [ %196, %236 ], [ %196, %175 ]
  %290 = phi i32 [ %194, %284 ], [ %194, %282 ], [ %194, %280 ], [ %194, %278 ], [ %194, %276 ], [ %194, %274 ], [ %194, %272 ], [ %271, %270 ], [ %194, %268 ], [ %194, %266 ], [ %194, %264 ], [ %194, %262 ], [ %194, %260 ], [ %194, %258 ], [ %194, %256 ], [ %194, %254 ], [ %194, %252 ], [ %194, %250 ], [ %194, %248 ], [ %194, %246 ], [ %194, %244 ], [ %194, %242 ], [ %194, %240 ], [ %194, %238 ], [ %194, %206 ], [ %194, %236 ], [ %194, %175 ]
  %291 = phi i32 [ %192, %284 ], [ %192, %282 ], [ %192, %280 ], [ %192, %278 ], [ %192, %276 ], [ %192, %274 ], [ %192, %272 ], [ %192, %270 ], [ %192, %268 ], [ %267, %266 ], [ %192, %264 ], [ %192, %262 ], [ %192, %260 ], [ %192, %258 ], [ %192, %256 ], [ %192, %254 ], [ %192, %252 ], [ %192, %250 ], [ %192, %248 ], [ %192, %246 ], [ %192, %244 ], [ %192, %242 ], [ %192, %240 ], [ %192, %238 ], [ %192, %206 ], [ %192, %236 ], [ %192, %175 ]
  %292 = phi i32 [ %190, %284 ], [ %190, %282 ], [ %190, %280 ], [ %190, %278 ], [ %190, %276 ], [ %190, %274 ], [ %190, %272 ], [ %190, %270 ], [ %190, %268 ], [ %190, %266 ], [ %190, %264 ], [ %263, %262 ], [ %190, %260 ], [ %190, %258 ], [ %190, %256 ], [ %190, %254 ], [ %190, %252 ], [ %190, %250 ], [ %190, %248 ], [ %190, %246 ], [ %190, %244 ], [ %190, %242 ], [ %190, %240 ], [ %190, %238 ], [ %190, %206 ], [ %190, %236 ], [ %190, %175 ]
  %293 = phi i32 [ %188, %284 ], [ %188, %282 ], [ %188, %280 ], [ %188, %278 ], [ %188, %276 ], [ %188, %274 ], [ %188, %272 ], [ %188, %270 ], [ %188, %268 ], [ %188, %266 ], [ %188, %264 ], [ %188, %262 ], [ %188, %260 ], [ %259, %258 ], [ %188, %256 ], [ %188, %254 ], [ %188, %252 ], [ %188, %250 ], [ %188, %248 ], [ %188, %246 ], [ %188, %244 ], [ %188, %242 ], [ %188, %240 ], [ %188, %238 ], [ %188, %206 ], [ %188, %236 ], [ %188, %175 ]
  %294 = phi i32 [ %186, %284 ], [ %186, %282 ], [ %186, %280 ], [ %186, %278 ], [ %186, %276 ], [ %186, %274 ], [ %186, %272 ], [ %186, %270 ], [ %186, %268 ], [ %186, %266 ], [ %186, %264 ], [ %186, %262 ], [ %186, %260 ], [ %186, %258 ], [ %186, %256 ], [ %255, %254 ], [ %186, %252 ], [ %186, %250 ], [ %186, %248 ], [ %186, %246 ], [ %186, %244 ], [ %186, %242 ], [ %186, %240 ], [ %186, %238 ], [ %186, %206 ], [ %186, %236 ], [ %186, %175 ]
  %295 = phi i32 [ %184, %284 ], [ %184, %282 ], [ %184, %280 ], [ %184, %278 ], [ %184, %276 ], [ %184, %274 ], [ %184, %272 ], [ %184, %270 ], [ %184, %268 ], [ %184, %266 ], [ %184, %264 ], [ %184, %262 ], [ %184, %260 ], [ %184, %258 ], [ %184, %256 ], [ %184, %254 ], [ %184, %252 ], [ %251, %250 ], [ %184, %248 ], [ %184, %246 ], [ %184, %244 ], [ %184, %242 ], [ %184, %240 ], [ %184, %238 ], [ %184, %206 ], [ %184, %236 ], [ %184, %175 ]
  %296 = phi i32 [ %182, %284 ], [ %182, %282 ], [ %182, %280 ], [ %182, %278 ], [ %182, %276 ], [ %182, %274 ], [ %182, %272 ], [ %182, %270 ], [ %182, %268 ], [ %182, %266 ], [ %182, %264 ], [ %182, %262 ], [ %182, %260 ], [ %182, %258 ], [ %182, %256 ], [ %182, %254 ], [ %182, %252 ], [ %182, %250 ], [ %182, %248 ], [ %247, %246 ], [ %182, %244 ], [ %182, %242 ], [ %182, %240 ], [ %182, %238 ], [ %182, %206 ], [ %182, %236 ], [ %182, %175 ]
  %297 = phi i32 [ %180, %284 ], [ %180, %282 ], [ %180, %280 ], [ %180, %278 ], [ %180, %276 ], [ %180, %274 ], [ %180, %272 ], [ %180, %270 ], [ %180, %268 ], [ %180, %266 ], [ %180, %264 ], [ %180, %262 ], [ %180, %260 ], [ %180, %258 ], [ %180, %256 ], [ %180, %254 ], [ %180, %252 ], [ %180, %250 ], [ %180, %248 ], [ %180, %246 ], [ %180, %244 ], [ %243, %242 ], [ %180, %240 ], [ %180, %238 ], [ %180, %206 ], [ %180, %236 ], [ %180, %175 ]
  %298 = phi i32 [ %178, %284 ], [ %178, %282 ], [ %178, %280 ], [ %178, %278 ], [ %178, %276 ], [ %178, %274 ], [ %178, %272 ], [ %178, %270 ], [ %178, %268 ], [ %178, %266 ], [ %178, %264 ], [ %178, %262 ], [ %178, %260 ], [ %178, %258 ], [ %178, %256 ], [ %178, %254 ], [ %178, %252 ], [ %178, %250 ], [ %178, %248 ], [ %178, %246 ], [ %178, %244 ], [ %178, %242 ], [ %178, %240 ], [ %239, %238 ], [ %178, %206 ], [ %178, %236 ], [ %178, %175 ]
  %299 = phi i32 [ %176, %284 ], [ %176, %282 ], [ %176, %280 ], [ %176, %278 ], [ %176, %276 ], [ %176, %274 ], [ %176, %272 ], [ %176, %270 ], [ %176, %268 ], [ %176, %266 ], [ %176, %264 ], [ %176, %262 ], [ %176, %260 ], [ %176, %258 ], [ %176, %256 ], [ %176, %254 ], [ %176, %252 ], [ %176, %250 ], [ %176, %248 ], [ %176, %246 ], [ %176, %244 ], [ %176, %242 ], [ %176, %240 ], [ %176, %238 ], [ %207, %206 ], [ %176, %236 ], [ %176, %175 ]
  %300 = phi i32 [ %177, %284 ], [ %177, %282 ], [ %177, %280 ], [ %177, %278 ], [ %177, %276 ], [ %177, %274 ], [ %177, %272 ], [ %177, %270 ], [ %177, %268 ], [ %177, %266 ], [ %177, %264 ], [ %177, %262 ], [ %177, %260 ], [ %177, %258 ], [ %177, %256 ], [ %177, %254 ], [ %177, %252 ], [ %177, %250 ], [ %177, %248 ], [ %177, %246 ], [ %177, %244 ], [ %177, %242 ], [ %177, %240 ], [ %177, %238 ], [ %177, %206 ], [ %237, %236 ], [ %177, %175 ]
  %301 = phi i32 [ %179, %284 ], [ %179, %282 ], [ %179, %280 ], [ %179, %278 ], [ %179, %276 ], [ %179, %274 ], [ %179, %272 ], [ %179, %270 ], [ %179, %268 ], [ %179, %266 ], [ %179, %264 ], [ %179, %262 ], [ %179, %260 ], [ %179, %258 ], [ %179, %256 ], [ %179, %254 ], [ %179, %252 ], [ %179, %250 ], [ %179, %248 ], [ %179, %246 ], [ %179, %244 ], [ %179, %242 ], [ %241, %240 ], [ %179, %238 ], [ %179, %206 ], [ %179, %236 ], [ %179, %175 ]
  %302 = phi i32 [ %181, %284 ], [ %181, %282 ], [ %181, %280 ], [ %181, %278 ], [ %181, %276 ], [ %181, %274 ], [ %181, %272 ], [ %181, %270 ], [ %181, %268 ], [ %181, %266 ], [ %181, %264 ], [ %181, %262 ], [ %181, %260 ], [ %181, %258 ], [ %181, %256 ], [ %181, %254 ], [ %181, %252 ], [ %181, %250 ], [ %181, %248 ], [ %181, %246 ], [ %245, %244 ], [ %181, %242 ], [ %181, %240 ], [ %181, %238 ], [ %181, %206 ], [ %181, %236 ], [ %181, %175 ]
  %303 = phi i32 [ %183, %284 ], [ %183, %282 ], [ %183, %280 ], [ %183, %278 ], [ %183, %276 ], [ %183, %274 ], [ %183, %272 ], [ %183, %270 ], [ %183, %268 ], [ %183, %266 ], [ %183, %264 ], [ %183, %262 ], [ %183, %260 ], [ %183, %258 ], [ %183, %256 ], [ %183, %254 ], [ %183, %252 ], [ %183, %250 ], [ %249, %248 ], [ %183, %246 ], [ %183, %244 ], [ %183, %242 ], [ %183, %240 ], [ %183, %238 ], [ %183, %206 ], [ %183, %236 ], [ %183, %175 ]
  %304 = phi i32 [ %185, %284 ], [ %185, %282 ], [ %185, %280 ], [ %185, %278 ], [ %185, %276 ], [ %185, %274 ], [ %185, %272 ], [ %185, %270 ], [ %185, %268 ], [ %185, %266 ], [ %185, %264 ], [ %185, %262 ], [ %185, %260 ], [ %185, %258 ], [ %185, %256 ], [ %185, %254 ], [ %253, %252 ], [ %185, %250 ], [ %185, %248 ], [ %185, %246 ], [ %185, %244 ], [ %185, %242 ], [ %185, %240 ], [ %185, %238 ], [ %185, %206 ], [ %185, %236 ], [ %185, %175 ]
  %305 = phi i32 [ %187, %284 ], [ %187, %282 ], [ %187, %280 ], [ %187, %278 ], [ %187, %276 ], [ %187, %274 ], [ %187, %272 ], [ %187, %270 ], [ %187, %268 ], [ %187, %266 ], [ %187, %264 ], [ %187, %262 ], [ %187, %260 ], [ %187, %258 ], [ %257, %256 ], [ %187, %254 ], [ %187, %252 ], [ %187, %250 ], [ %187, %248 ], [ %187, %246 ], [ %187, %244 ], [ %187, %242 ], [ %187, %240 ], [ %187, %238 ], [ %187, %206 ], [ %187, %236 ], [ %187, %175 ]
  %306 = phi i32 [ %189, %284 ], [ %189, %282 ], [ %189, %280 ], [ %189, %278 ], [ %189, %276 ], [ %189, %274 ], [ %189, %272 ], [ %189, %270 ], [ %189, %268 ], [ %189, %266 ], [ %189, %264 ], [ %189, %262 ], [ %261, %260 ], [ %189, %258 ], [ %189, %256 ], [ %189, %254 ], [ %189, %252 ], [ %189, %250 ], [ %189, %248 ], [ %189, %246 ], [ %189, %244 ], [ %189, %242 ], [ %189, %240 ], [ %189, %238 ], [ %189, %206 ], [ %189, %236 ], [ %189, %175 ]
  %307 = phi i32 [ %191, %284 ], [ %191, %282 ], [ %191, %280 ], [ %191, %278 ], [ %191, %276 ], [ %191, %274 ], [ %191, %272 ], [ %191, %270 ], [ %191, %268 ], [ %191, %266 ], [ %265, %264 ], [ %191, %262 ], [ %191, %260 ], [ %191, %258 ], [ %191, %256 ], [ %191, %254 ], [ %191, %252 ], [ %191, %250 ], [ %191, %248 ], [ %191, %246 ], [ %191, %244 ], [ %191, %242 ], [ %191, %240 ], [ %191, %238 ], [ %191, %206 ], [ %191, %236 ], [ %191, %175 ]
  %308 = phi i32 [ %193, %284 ], [ %193, %282 ], [ %193, %280 ], [ %193, %278 ], [ %193, %276 ], [ %193, %274 ], [ %193, %272 ], [ %193, %270 ], [ %269, %268 ], [ %193, %266 ], [ %193, %264 ], [ %193, %262 ], [ %193, %260 ], [ %193, %258 ], [ %193, %256 ], [ %193, %254 ], [ %193, %252 ], [ %193, %250 ], [ %193, %248 ], [ %193, %246 ], [ %193, %244 ], [ %193, %242 ], [ %193, %240 ], [ %193, %238 ], [ %193, %206 ], [ %193, %236 ], [ %193, %175 ]
  %309 = phi i32 [ %195, %284 ], [ %195, %282 ], [ %195, %280 ], [ %195, %278 ], [ %195, %276 ], [ %195, %274 ], [ %273, %272 ], [ %195, %270 ], [ %195, %268 ], [ %195, %266 ], [ %195, %264 ], [ %195, %262 ], [ %195, %260 ], [ %195, %258 ], [ %195, %256 ], [ %195, %254 ], [ %195, %252 ], [ %195, %250 ], [ %195, %248 ], [ %195, %246 ], [ %195, %244 ], [ %195, %242 ], [ %195, %240 ], [ %195, %238 ], [ %195, %206 ], [ %195, %236 ], [ %195, %175 ]
  %310 = phi i32 [ %197, %284 ], [ %197, %282 ], [ %197, %280 ], [ %197, %278 ], [ %277, %276 ], [ %197, %274 ], [ %197, %272 ], [ %197, %270 ], [ %197, %268 ], [ %197, %266 ], [ %197, %264 ], [ %197, %262 ], [ %197, %260 ], [ %197, %258 ], [ %197, %256 ], [ %197, %254 ], [ %197, %252 ], [ %197, %250 ], [ %197, %248 ], [ %197, %246 ], [ %197, %244 ], [ %197, %242 ], [ %197, %240 ], [ %197, %238 ], [ %197, %206 ], [ %197, %236 ], [ %197, %175 ]
  %311 = phi i32 [ %199, %284 ], [ %199, %282 ], [ %281, %280 ], [ %199, %278 ], [ %199, %276 ], [ %199, %274 ], [ %199, %272 ], [ %199, %270 ], [ %199, %268 ], [ %199, %266 ], [ %199, %264 ], [ %199, %262 ], [ %199, %260 ], [ %199, %258 ], [ %199, %256 ], [ %199, %254 ], [ %199, %252 ], [ %199, %250 ], [ %199, %248 ], [ %199, %246 ], [ %199, %244 ], [ %199, %242 ], [ %199, %240 ], [ %199, %238 ], [ %199, %206 ], [ %199, %236 ], [ %199, %175 ]
  %312 = phi i32 [ %285, %284 ], [ %201, %282 ], [ %201, %280 ], [ %201, %278 ], [ %201, %276 ], [ %201, %274 ], [ %201, %272 ], [ %201, %270 ], [ %201, %268 ], [ %201, %266 ], [ %201, %264 ], [ %201, %262 ], [ %201, %260 ], [ %201, %258 ], [ %201, %256 ], [ %201, %254 ], [ %201, %252 ], [ %201, %250 ], [ %201, %248 ], [ %201, %246 ], [ %201, %244 ], [ %201, %242 ], [ %201, %240 ], [ %201, %238 ], [ %201, %206 ], [ %201, %236 ], [ %201, %175 ]
  %313 = add nuw nsw i64 %202, 1
  %314 = icmp eq i64 %313, 30
  br i1 %314, label %208, label %175, !llvm.loop !14
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.mustprogress"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11}
