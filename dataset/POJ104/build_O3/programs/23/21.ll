; ModuleID = 'source-C-CXX/23/21.c'
source_filename = "source-C-CXX/23/21.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [6 x i8] c"%s\0A%s\00", align 1

; Function Attrs: nofree norecurse nosync nounwind readonly sspstrong uwtable
define dso_local i32 @len(i8* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = bitcast i8* %0 to <4 x i8>*
  %3 = load <4 x i8>, <4 x i8>* %2, align 1, !tbaa !5
  %4 = and <4 x i8> %3, <i8 -33, i8 -33, i8 -33, i8 -33>
  %5 = add <4 x i8> %4, <i8 -65, i8 -65, i8 -65, i8 -65>
  %6 = icmp ult <4 x i8> %5, <i8 26, i8 26, i8 26, i8 26>
  %7 = zext <4 x i1> %6 to <4 x i32>
  %8 = getelementptr inbounds i8, i8* %0, i64 4
  %9 = bitcast i8* %8 to <4 x i8>*
  %10 = load <4 x i8>, <4 x i8>* %9, align 1, !tbaa !5
  %11 = and <4 x i8> %10, <i8 -33, i8 -33, i8 -33, i8 -33>
  %12 = add <4 x i8> %11, <i8 -65, i8 -65, i8 -65, i8 -65>
  %13 = icmp ult <4 x i8> %12, <i8 26, i8 26, i8 26, i8 26>
  %14 = zext <4 x i1> %13 to <4 x i32>
  %15 = add nuw nsw <4 x i32> %7, %14
  %16 = getelementptr inbounds i8, i8* %0, i64 8
  %17 = bitcast i8* %16 to <4 x i8>*
  %18 = load <4 x i8>, <4 x i8>* %17, align 1, !tbaa !5
  %19 = and <4 x i8> %18, <i8 -33, i8 -33, i8 -33, i8 -33>
  %20 = add <4 x i8> %19, <i8 -65, i8 -65, i8 -65, i8 -65>
  %21 = icmp ult <4 x i8> %20, <i8 26, i8 26, i8 26, i8 26>
  %22 = zext <4 x i1> %21 to <4 x i32>
  %23 = add nuw nsw <4 x i32> %15, %22
  %24 = getelementptr inbounds i8, i8* %0, i64 12
  %25 = bitcast i8* %24 to <4 x i8>*
  %26 = load <4 x i8>, <4 x i8>* %25, align 1, !tbaa !5
  %27 = and <4 x i8> %26, <i8 -33, i8 -33, i8 -33, i8 -33>
  %28 = add <4 x i8> %27, <i8 -65, i8 -65, i8 -65, i8 -65>
  %29 = icmp ult <4 x i8> %28, <i8 26, i8 26, i8 26, i8 26>
  %30 = zext <4 x i1> %29 to <4 x i32>
  %31 = add nuw nsw <4 x i32> %23, %30
  %32 = getelementptr inbounds i8, i8* %0, i64 16
  %33 = bitcast i8* %32 to <4 x i8>*
  %34 = load <4 x i8>, <4 x i8>* %33, align 1, !tbaa !5
  %35 = and <4 x i8> %34, <i8 -33, i8 -33, i8 -33, i8 -33>
  %36 = add <4 x i8> %35, <i8 -65, i8 -65, i8 -65, i8 -65>
  %37 = icmp ult <4 x i8> %36, <i8 26, i8 26, i8 26, i8 26>
  %38 = zext <4 x i1> %37 to <4 x i32>
  %39 = add nuw nsw <4 x i32> %31, %38
  %40 = getelementptr inbounds i8, i8* %0, i64 20
  %41 = bitcast i8* %40 to <4 x i8>*
  %42 = load <4 x i8>, <4 x i8>* %41, align 1, !tbaa !5
  %43 = and <4 x i8> %42, <i8 -33, i8 -33, i8 -33, i8 -33>
  %44 = add <4 x i8> %43, <i8 -65, i8 -65, i8 -65, i8 -65>
  %45 = icmp ult <4 x i8> %44, <i8 26, i8 26, i8 26, i8 26>
  %46 = zext <4 x i1> %45 to <4 x i32>
  %47 = add nuw nsw <4 x i32> %39, %46
  %48 = getelementptr inbounds i8, i8* %0, i64 24
  %49 = bitcast i8* %48 to <4 x i8>*
  %50 = load <4 x i8>, <4 x i8>* %49, align 1, !tbaa !5
  %51 = and <4 x i8> %50, <i8 -33, i8 -33, i8 -33, i8 -33>
  %52 = add <4 x i8> %51, <i8 -65, i8 -65, i8 -65, i8 -65>
  %53 = icmp ult <4 x i8> %52, <i8 26, i8 26, i8 26, i8 26>
  %54 = zext <4 x i1> %53 to <4 x i32>
  %55 = add nuw nsw <4 x i32> %47, %54
  %56 = getelementptr inbounds i8, i8* %0, i64 28
  %57 = bitcast i8* %56 to <4 x i8>*
  %58 = load <4 x i8>, <4 x i8>* %57, align 1, !tbaa !5
  %59 = and <4 x i8> %58, <i8 -33, i8 -33, i8 -33, i8 -33>
  %60 = add <4 x i8> %59, <i8 -65, i8 -65, i8 -65, i8 -65>
  %61 = icmp ult <4 x i8> %60, <i8 26, i8 26, i8 26, i8 26>
  %62 = zext <4 x i1> %61 to <4 x i32>
  %63 = add <4 x i32> %55, %62
  %64 = getelementptr inbounds i8, i8* %0, i64 32
  %65 = bitcast i8* %64 to <4 x i8>*
  %66 = load <4 x i8>, <4 x i8>* %65, align 1, !tbaa !5
  %67 = and <4 x i8> %66, <i8 -33, i8 -33, i8 -33, i8 -33>
  %68 = add <4 x i8> %67, <i8 -65, i8 -65, i8 -65, i8 -65>
  %69 = icmp ult <4 x i8> %68, <i8 26, i8 26, i8 26, i8 26>
  %70 = zext <4 x i1> %69 to <4 x i32>
  %71 = add <4 x i32> %63, %70
  %72 = getelementptr inbounds i8, i8* %0, i64 36
  %73 = bitcast i8* %72 to <4 x i8>*
  %74 = load <4 x i8>, <4 x i8>* %73, align 1, !tbaa !5
  %75 = and <4 x i8> %74, <i8 -33, i8 -33, i8 -33, i8 -33>
  %76 = add <4 x i8> %75, <i8 -65, i8 -65, i8 -65, i8 -65>
  %77 = icmp ult <4 x i8> %76, <i8 26, i8 26, i8 26, i8 26>
  %78 = zext <4 x i1> %77 to <4 x i32>
  %79 = add <4 x i32> %71, %78
  %80 = getelementptr inbounds i8, i8* %0, i64 40
  %81 = bitcast i8* %80 to <4 x i8>*
  %82 = load <4 x i8>, <4 x i8>* %81, align 1, !tbaa !5
  %83 = and <4 x i8> %82, <i8 -33, i8 -33, i8 -33, i8 -33>
  %84 = add <4 x i8> %83, <i8 -65, i8 -65, i8 -65, i8 -65>
  %85 = icmp ult <4 x i8> %84, <i8 26, i8 26, i8 26, i8 26>
  %86 = zext <4 x i1> %85 to <4 x i32>
  %87 = add <4 x i32> %79, %86
  %88 = getelementptr inbounds i8, i8* %0, i64 44
  %89 = bitcast i8* %88 to <4 x i8>*
  %90 = load <4 x i8>, <4 x i8>* %89, align 1, !tbaa !5
  %91 = and <4 x i8> %90, <i8 -33, i8 -33, i8 -33, i8 -33>
  %92 = add <4 x i8> %91, <i8 -65, i8 -65, i8 -65, i8 -65>
  %93 = icmp ult <4 x i8> %92, <i8 26, i8 26, i8 26, i8 26>
  %94 = zext <4 x i1> %93 to <4 x i32>
  %95 = add <4 x i32> %87, %94
  %96 = getelementptr inbounds i8, i8* %0, i64 48
  %97 = bitcast i8* %96 to <4 x i8>*
  %98 = load <4 x i8>, <4 x i8>* %97, align 1, !tbaa !5
  %99 = and <4 x i8> %98, <i8 -33, i8 -33, i8 -33, i8 -33>
  %100 = add <4 x i8> %99, <i8 -65, i8 -65, i8 -65, i8 -65>
  %101 = icmp ult <4 x i8> %100, <i8 26, i8 26, i8 26, i8 26>
  %102 = zext <4 x i1> %101 to <4 x i32>
  %103 = add <4 x i32> %95, %102
  %104 = getelementptr inbounds i8, i8* %0, i64 52
  %105 = bitcast i8* %104 to <4 x i8>*
  %106 = load <4 x i8>, <4 x i8>* %105, align 1, !tbaa !5
  %107 = and <4 x i8> %106, <i8 -33, i8 -33, i8 -33, i8 -33>
  %108 = add <4 x i8> %107, <i8 -65, i8 -65, i8 -65, i8 -65>
  %109 = icmp ult <4 x i8> %108, <i8 26, i8 26, i8 26, i8 26>
  %110 = zext <4 x i1> %109 to <4 x i32>
  %111 = add <4 x i32> %103, %110
  %112 = getelementptr inbounds i8, i8* %0, i64 56
  %113 = bitcast i8* %112 to <4 x i8>*
  %114 = load <4 x i8>, <4 x i8>* %113, align 1, !tbaa !5
  %115 = and <4 x i8> %114, <i8 -33, i8 -33, i8 -33, i8 -33>
  %116 = add <4 x i8> %115, <i8 -65, i8 -65, i8 -65, i8 -65>
  %117 = icmp ult <4 x i8> %116, <i8 26, i8 26, i8 26, i8 26>
  %118 = zext <4 x i1> %117 to <4 x i32>
  %119 = add <4 x i32> %111, %118
  %120 = getelementptr inbounds i8, i8* %0, i64 60
  %121 = bitcast i8* %120 to <4 x i8>*
  %122 = load <4 x i8>, <4 x i8>* %121, align 1, !tbaa !5
  %123 = and <4 x i8> %122, <i8 -33, i8 -33, i8 -33, i8 -33>
  %124 = add <4 x i8> %123, <i8 -65, i8 -65, i8 -65, i8 -65>
  %125 = icmp ult <4 x i8> %124, <i8 26, i8 26, i8 26, i8 26>
  %126 = zext <4 x i1> %125 to <4 x i32>
  %127 = add <4 x i32> %119, %126
  %128 = getelementptr inbounds i8, i8* %0, i64 64
  %129 = bitcast i8* %128 to <4 x i8>*
  %130 = load <4 x i8>, <4 x i8>* %129, align 1, !tbaa !5
  %131 = and <4 x i8> %130, <i8 -33, i8 -33, i8 -33, i8 -33>
  %132 = add <4 x i8> %131, <i8 -65, i8 -65, i8 -65, i8 -65>
  %133 = icmp ult <4 x i8> %132, <i8 26, i8 26, i8 26, i8 26>
  %134 = zext <4 x i1> %133 to <4 x i32>
  %135 = add <4 x i32> %127, %134
  %136 = getelementptr inbounds i8, i8* %0, i64 68
  %137 = bitcast i8* %136 to <4 x i8>*
  %138 = load <4 x i8>, <4 x i8>* %137, align 1, !tbaa !5
  %139 = and <4 x i8> %138, <i8 -33, i8 -33, i8 -33, i8 -33>
  %140 = add <4 x i8> %139, <i8 -65, i8 -65, i8 -65, i8 -65>
  %141 = icmp ult <4 x i8> %140, <i8 26, i8 26, i8 26, i8 26>
  %142 = zext <4 x i1> %141 to <4 x i32>
  %143 = add <4 x i32> %135, %142
  %144 = getelementptr inbounds i8, i8* %0, i64 72
  %145 = bitcast i8* %144 to <4 x i8>*
  %146 = load <4 x i8>, <4 x i8>* %145, align 1, !tbaa !5
  %147 = and <4 x i8> %146, <i8 -33, i8 -33, i8 -33, i8 -33>
  %148 = add <4 x i8> %147, <i8 -65, i8 -65, i8 -65, i8 -65>
  %149 = icmp ult <4 x i8> %148, <i8 26, i8 26, i8 26, i8 26>
  %150 = zext <4 x i1> %149 to <4 x i32>
  %151 = add <4 x i32> %143, %150
  %152 = getelementptr inbounds i8, i8* %0, i64 76
  %153 = bitcast i8* %152 to <4 x i8>*
  %154 = load <4 x i8>, <4 x i8>* %153, align 1, !tbaa !5
  %155 = and <4 x i8> %154, <i8 -33, i8 -33, i8 -33, i8 -33>
  %156 = add <4 x i8> %155, <i8 -65, i8 -65, i8 -65, i8 -65>
  %157 = icmp ult <4 x i8> %156, <i8 26, i8 26, i8 26, i8 26>
  %158 = zext <4 x i1> %157 to <4 x i32>
  %159 = add <4 x i32> %151, %158
  %160 = getelementptr inbounds i8, i8* %0, i64 80
  %161 = bitcast i8* %160 to <4 x i8>*
  %162 = load <4 x i8>, <4 x i8>* %161, align 1, !tbaa !5
  %163 = and <4 x i8> %162, <i8 -33, i8 -33, i8 -33, i8 -33>
  %164 = add <4 x i8> %163, <i8 -65, i8 -65, i8 -65, i8 -65>
  %165 = icmp ult <4 x i8> %164, <i8 26, i8 26, i8 26, i8 26>
  %166 = zext <4 x i1> %165 to <4 x i32>
  %167 = add <4 x i32> %159, %166
  %168 = getelementptr inbounds i8, i8* %0, i64 84
  %169 = bitcast i8* %168 to <4 x i8>*
  %170 = load <4 x i8>, <4 x i8>* %169, align 1, !tbaa !5
  %171 = and <4 x i8> %170, <i8 -33, i8 -33, i8 -33, i8 -33>
  %172 = add <4 x i8> %171, <i8 -65, i8 -65, i8 -65, i8 -65>
  %173 = icmp ult <4 x i8> %172, <i8 26, i8 26, i8 26, i8 26>
  %174 = zext <4 x i1> %173 to <4 x i32>
  %175 = add <4 x i32> %167, %174
  %176 = getelementptr inbounds i8, i8* %0, i64 88
  %177 = bitcast i8* %176 to <4 x i8>*
  %178 = load <4 x i8>, <4 x i8>* %177, align 1, !tbaa !5
  %179 = and <4 x i8> %178, <i8 -33, i8 -33, i8 -33, i8 -33>
  %180 = add <4 x i8> %179, <i8 -65, i8 -65, i8 -65, i8 -65>
  %181 = icmp ult <4 x i8> %180, <i8 26, i8 26, i8 26, i8 26>
  %182 = zext <4 x i1> %181 to <4 x i32>
  %183 = add <4 x i32> %175, %182
  %184 = getelementptr inbounds i8, i8* %0, i64 92
  %185 = bitcast i8* %184 to <4 x i8>*
  %186 = load <4 x i8>, <4 x i8>* %185, align 1, !tbaa !5
  %187 = and <4 x i8> %186, <i8 -33, i8 -33, i8 -33, i8 -33>
  %188 = add <4 x i8> %187, <i8 -65, i8 -65, i8 -65, i8 -65>
  %189 = icmp ult <4 x i8> %188, <i8 26, i8 26, i8 26, i8 26>
  %190 = zext <4 x i1> %189 to <4 x i32>
  %191 = add <4 x i32> %183, %190
  %192 = getelementptr inbounds i8, i8* %0, i64 96
  %193 = bitcast i8* %192 to <4 x i8>*
  %194 = load <4 x i8>, <4 x i8>* %193, align 1, !tbaa !5
  %195 = and <4 x i8> %194, <i8 -33, i8 -33, i8 -33, i8 -33>
  %196 = add <4 x i8> %195, <i8 -65, i8 -65, i8 -65, i8 -65>
  %197 = icmp ult <4 x i8> %196, <i8 26, i8 26, i8 26, i8 26>
  %198 = zext <4 x i1> %197 to <4 x i32>
  %199 = add <4 x i32> %191, %198
  %200 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %199)
  ret i32 %200
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #2 {
  %1 = alloca [1000 x i8], align 16
  %2 = getelementptr inbounds [1000 x i8], [1000 x i8]* %1, i64 0, i64 0
  %3 = alloca [50 x [100 x i8]], align 16
  %4 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 0, i64 0
  %5 = getelementptr inbounds [1000 x i8], [1000 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1000, i8* nonnull %5) #7
  %6 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5000, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(5000) %4, i8 0, i64 5000, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1000) %2, i8 0, i64 1000, i1 false)
  %7 = call i32 (i8*, ...) bitcast (i32 (...)* @gets to i32 (i8*, ...)*)(i8* nonnull %5) #7
  %8 = load i8, i8* %5, align 16, !tbaa !5
  br label %9

9:                                                ; preds = %9, %0
  %10 = phi i8 [ %15, %9 ], [ %8, %0 ]
  %11 = phi i64 [ %13, %9 ], [ 0, %0 ]
  %12 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 0, i64 %11
  store i8 %10, i8* %12, align 1, !tbaa !5
  %13 = add nuw nsw i64 %11, 1
  %14 = getelementptr inbounds [1000 x i8], [1000 x i8]* %1, i64 0, i64 %13
  %15 = load i8, i8* %14, align 1, !tbaa !5
  %16 = and i8 %15, -33
  %17 = add i8 %16, -65
  %18 = icmp ult i8 %17, 26
  br i1 %18, label %9, label %19, !llvm.loop !8

19:                                               ; preds = %9, %39
  %20 = phi i64 [ %40, %39 ], [ 1, %9 ]
  %21 = phi i64 [ %33, %39 ], [ %13, %9 ]
  %22 = shl i64 %21, 32
  %23 = add i64 %22, 4294967296
  %24 = ashr exact i64 %23, 32
  %25 = getelementptr inbounds [1000 x i8], [1000 x i8]* %1, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1, !tbaa !5
  br label %27

27:                                               ; preds = %27, %19
  %28 = phi i8 [ %35, %27 ], [ %26, %19 ]
  %29 = phi i64 [ %32, %27 ], [ 0, %19 ]
  %30 = phi i64 [ %33, %27 ], [ %24, %19 ]
  %31 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %20, i64 %29
  store i8 %28, i8* %31, align 1, !tbaa !5
  %32 = add nuw i64 %29, 1
  %33 = add i64 %30, 1
  %34 = getelementptr inbounds [1000 x i8], [1000 x i8]* %1, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1, !tbaa !5
  %36 = and i8 %35, -33
  %37 = add i8 %36, -65
  %38 = icmp ult i8 %37, 26
  br i1 %38, label %27, label %39, !llvm.loop !10

39:                                               ; preds = %27
  %40 = add nuw nsw i64 %20, 1
  %41 = icmp eq i64 %40, 50
  br i1 %41, label %42, label %19, !llvm.loop !11

42:                                               ; preds = %39, %937
  %43 = phi i64 [ %942, %937 ], [ 0, %39 ]
  %44 = phi i32 [ %941, %937 ], [ undef, %39 ]
  %45 = phi i32 [ %940, %937 ], [ undef, %39 ]
  %46 = phi i32 [ %939, %937 ], [ 100, %39 ]
  %47 = phi i32 [ %938, %937 ], [ 0, %39 ]
  %48 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 0
  %49 = load i8, i8* %48, align 4, !tbaa !5
  %50 = icmp sgt i8 %49, 0
  br i1 %50, label %51, label %937

51:                                               ; preds = %42
  %52 = and i8 %49, -33
  %53 = add i8 %52, -65
  %54 = icmp ult i8 %53, 26
  %55 = zext i1 %54 to i32
  %56 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %55, i32 0
  %57 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 1
  %58 = bitcast i8* %57 to <4 x i8>*
  %59 = load <4 x i8>, <4 x i8>* %58, align 1, !tbaa !5
  %60 = and <4 x i8> %59, <i8 -33, i8 -33, i8 -33, i8 -33>
  %61 = add <4 x i8> %60, <i8 -65, i8 -65, i8 -65, i8 -65>
  %62 = icmp ult <4 x i8> %61, <i8 26, i8 26, i8 26, i8 26>
  %63 = zext <4 x i1> %62 to <4 x i32>
  %64 = add nuw nsw <4 x i32> %56, %63
  %65 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 5
  %66 = bitcast i8* %65 to <4 x i8>*
  %67 = load <4 x i8>, <4 x i8>* %66, align 1, !tbaa !5
  %68 = and <4 x i8> %67, <i8 -33, i8 -33, i8 -33, i8 -33>
  %69 = add <4 x i8> %68, <i8 -65, i8 -65, i8 -65, i8 -65>
  %70 = icmp ult <4 x i8> %69, <i8 26, i8 26, i8 26, i8 26>
  %71 = zext <4 x i1> %70 to <4 x i32>
  %72 = add nuw nsw <4 x i32> %64, %71
  %73 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 9
  %74 = bitcast i8* %73 to <4 x i8>*
  %75 = load <4 x i8>, <4 x i8>* %74, align 1, !tbaa !5
  %76 = and <4 x i8> %75, <i8 -33, i8 -33, i8 -33, i8 -33>
  %77 = add <4 x i8> %76, <i8 -65, i8 -65, i8 -65, i8 -65>
  %78 = icmp ult <4 x i8> %77, <i8 26, i8 26, i8 26, i8 26>
  %79 = zext <4 x i1> %78 to <4 x i32>
  %80 = add nuw nsw <4 x i32> %72, %79
  %81 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 13
  %82 = bitcast i8* %81 to <4 x i8>*
  %83 = load <4 x i8>, <4 x i8>* %82, align 1, !tbaa !5
  %84 = and <4 x i8> %83, <i8 -33, i8 -33, i8 -33, i8 -33>
  %85 = add <4 x i8> %84, <i8 -65, i8 -65, i8 -65, i8 -65>
  %86 = icmp ult <4 x i8> %85, <i8 26, i8 26, i8 26, i8 26>
  %87 = zext <4 x i1> %86 to <4 x i32>
  %88 = add nuw nsw <4 x i32> %80, %87
  %89 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 17
  %90 = bitcast i8* %89 to <4 x i8>*
  %91 = load <4 x i8>, <4 x i8>* %90, align 1, !tbaa !5
  %92 = and <4 x i8> %91, <i8 -33, i8 -33, i8 -33, i8 -33>
  %93 = add <4 x i8> %92, <i8 -65, i8 -65, i8 -65, i8 -65>
  %94 = icmp ult <4 x i8> %93, <i8 26, i8 26, i8 26, i8 26>
  %95 = zext <4 x i1> %94 to <4 x i32>
  %96 = add nuw nsw <4 x i32> %88, %95
  %97 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 21
  %98 = bitcast i8* %97 to <4 x i8>*
  %99 = load <4 x i8>, <4 x i8>* %98, align 1, !tbaa !5
  %100 = and <4 x i8> %99, <i8 -33, i8 -33, i8 -33, i8 -33>
  %101 = add <4 x i8> %100, <i8 -65, i8 -65, i8 -65, i8 -65>
  %102 = icmp ult <4 x i8> %101, <i8 26, i8 26, i8 26, i8 26>
  %103 = zext <4 x i1> %102 to <4 x i32>
  %104 = add <4 x i32> %96, %103
  %105 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 25
  %106 = bitcast i8* %105 to <4 x i8>*
  %107 = load <4 x i8>, <4 x i8>* %106, align 1, !tbaa !5
  %108 = and <4 x i8> %107, <i8 -33, i8 -33, i8 -33, i8 -33>
  %109 = add <4 x i8> %108, <i8 -65, i8 -65, i8 -65, i8 -65>
  %110 = icmp ult <4 x i8> %109, <i8 26, i8 26, i8 26, i8 26>
  %111 = zext <4 x i1> %110 to <4 x i32>
  %112 = add <4 x i32> %104, %111
  %113 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 29
  %114 = bitcast i8* %113 to <4 x i8>*
  %115 = load <4 x i8>, <4 x i8>* %114, align 1, !tbaa !5
  %116 = and <4 x i8> %115, <i8 -33, i8 -33, i8 -33, i8 -33>
  %117 = add <4 x i8> %116, <i8 -65, i8 -65, i8 -65, i8 -65>
  %118 = icmp ult <4 x i8> %117, <i8 26, i8 26, i8 26, i8 26>
  %119 = zext <4 x i1> %118 to <4 x i32>
  %120 = add <4 x i32> %112, %119
  %121 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 33
  %122 = bitcast i8* %121 to <4 x i8>*
  %123 = load <4 x i8>, <4 x i8>* %122, align 1, !tbaa !5
  %124 = and <4 x i8> %123, <i8 -33, i8 -33, i8 -33, i8 -33>
  %125 = add <4 x i8> %124, <i8 -65, i8 -65, i8 -65, i8 -65>
  %126 = icmp ult <4 x i8> %125, <i8 26, i8 26, i8 26, i8 26>
  %127 = zext <4 x i1> %126 to <4 x i32>
  %128 = add <4 x i32> %120, %127
  %129 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 37
  %130 = bitcast i8* %129 to <4 x i8>*
  %131 = load <4 x i8>, <4 x i8>* %130, align 1, !tbaa !5
  %132 = and <4 x i8> %131, <i8 -33, i8 -33, i8 -33, i8 -33>
  %133 = add <4 x i8> %132, <i8 -65, i8 -65, i8 -65, i8 -65>
  %134 = icmp ult <4 x i8> %133, <i8 26, i8 26, i8 26, i8 26>
  %135 = zext <4 x i1> %134 to <4 x i32>
  %136 = add <4 x i32> %128, %135
  %137 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 41
  %138 = bitcast i8* %137 to <4 x i8>*
  %139 = load <4 x i8>, <4 x i8>* %138, align 1, !tbaa !5
  %140 = and <4 x i8> %139, <i8 -33, i8 -33, i8 -33, i8 -33>
  %141 = add <4 x i8> %140, <i8 -65, i8 -65, i8 -65, i8 -65>
  %142 = icmp ult <4 x i8> %141, <i8 26, i8 26, i8 26, i8 26>
  %143 = zext <4 x i1> %142 to <4 x i32>
  %144 = add <4 x i32> %136, %143
  %145 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 45
  %146 = bitcast i8* %145 to <4 x i8>*
  %147 = load <4 x i8>, <4 x i8>* %146, align 1, !tbaa !5
  %148 = and <4 x i8> %147, <i8 -33, i8 -33, i8 -33, i8 -33>
  %149 = add <4 x i8> %148, <i8 -65, i8 -65, i8 -65, i8 -65>
  %150 = icmp ult <4 x i8> %149, <i8 26, i8 26, i8 26, i8 26>
  %151 = zext <4 x i1> %150 to <4 x i32>
  %152 = add <4 x i32> %144, %151
  %153 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 49
  %154 = bitcast i8* %153 to <4 x i8>*
  %155 = load <4 x i8>, <4 x i8>* %154, align 1, !tbaa !5
  %156 = and <4 x i8> %155, <i8 -33, i8 -33, i8 -33, i8 -33>
  %157 = add <4 x i8> %156, <i8 -65, i8 -65, i8 -65, i8 -65>
  %158 = icmp ult <4 x i8> %157, <i8 26, i8 26, i8 26, i8 26>
  %159 = zext <4 x i1> %158 to <4 x i32>
  %160 = add <4 x i32> %152, %159
  %161 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 53
  %162 = bitcast i8* %161 to <4 x i8>*
  %163 = load <4 x i8>, <4 x i8>* %162, align 1, !tbaa !5
  %164 = and <4 x i8> %163, <i8 -33, i8 -33, i8 -33, i8 -33>
  %165 = add <4 x i8> %164, <i8 -65, i8 -65, i8 -65, i8 -65>
  %166 = icmp ult <4 x i8> %165, <i8 26, i8 26, i8 26, i8 26>
  %167 = zext <4 x i1> %166 to <4 x i32>
  %168 = add <4 x i32> %160, %167
  %169 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 57
  %170 = bitcast i8* %169 to <4 x i8>*
  %171 = load <4 x i8>, <4 x i8>* %170, align 1, !tbaa !5
  %172 = and <4 x i8> %171, <i8 -33, i8 -33, i8 -33, i8 -33>
  %173 = add <4 x i8> %172, <i8 -65, i8 -65, i8 -65, i8 -65>
  %174 = icmp ult <4 x i8> %173, <i8 26, i8 26, i8 26, i8 26>
  %175 = zext <4 x i1> %174 to <4 x i32>
  %176 = add <4 x i32> %168, %175
  %177 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 61
  %178 = bitcast i8* %177 to <4 x i8>*
  %179 = load <4 x i8>, <4 x i8>* %178, align 1, !tbaa !5
  %180 = and <4 x i8> %179, <i8 -33, i8 -33, i8 -33, i8 -33>
  %181 = add <4 x i8> %180, <i8 -65, i8 -65, i8 -65, i8 -65>
  %182 = icmp ult <4 x i8> %181, <i8 26, i8 26, i8 26, i8 26>
  %183 = zext <4 x i1> %182 to <4 x i32>
  %184 = add <4 x i32> %176, %183
  %185 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 65
  %186 = bitcast i8* %185 to <4 x i8>*
  %187 = load <4 x i8>, <4 x i8>* %186, align 1, !tbaa !5
  %188 = and <4 x i8> %187, <i8 -33, i8 -33, i8 -33, i8 -33>
  %189 = add <4 x i8> %188, <i8 -65, i8 -65, i8 -65, i8 -65>
  %190 = icmp ult <4 x i8> %189, <i8 26, i8 26, i8 26, i8 26>
  %191 = zext <4 x i1> %190 to <4 x i32>
  %192 = add <4 x i32> %184, %191
  %193 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 69
  %194 = bitcast i8* %193 to <4 x i8>*
  %195 = load <4 x i8>, <4 x i8>* %194, align 1, !tbaa !5
  %196 = and <4 x i8> %195, <i8 -33, i8 -33, i8 -33, i8 -33>
  %197 = add <4 x i8> %196, <i8 -65, i8 -65, i8 -65, i8 -65>
  %198 = icmp ult <4 x i8> %197, <i8 26, i8 26, i8 26, i8 26>
  %199 = zext <4 x i1> %198 to <4 x i32>
  %200 = add <4 x i32> %192, %199
  %201 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 73
  %202 = bitcast i8* %201 to <4 x i8>*
  %203 = load <4 x i8>, <4 x i8>* %202, align 1, !tbaa !5
  %204 = and <4 x i8> %203, <i8 -33, i8 -33, i8 -33, i8 -33>
  %205 = add <4 x i8> %204, <i8 -65, i8 -65, i8 -65, i8 -65>
  %206 = icmp ult <4 x i8> %205, <i8 26, i8 26, i8 26, i8 26>
  %207 = zext <4 x i1> %206 to <4 x i32>
  %208 = add <4 x i32> %200, %207
  %209 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 77
  %210 = bitcast i8* %209 to <4 x i8>*
  %211 = load <4 x i8>, <4 x i8>* %210, align 1, !tbaa !5
  %212 = and <4 x i8> %211, <i8 -33, i8 -33, i8 -33, i8 -33>
  %213 = add <4 x i8> %212, <i8 -65, i8 -65, i8 -65, i8 -65>
  %214 = icmp ult <4 x i8> %213, <i8 26, i8 26, i8 26, i8 26>
  %215 = zext <4 x i1> %214 to <4 x i32>
  %216 = add <4 x i32> %208, %215
  %217 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 81
  %218 = bitcast i8* %217 to <4 x i8>*
  %219 = load <4 x i8>, <4 x i8>* %218, align 1, !tbaa !5
  %220 = and <4 x i8> %219, <i8 -33, i8 -33, i8 -33, i8 -33>
  %221 = add <4 x i8> %220, <i8 -65, i8 -65, i8 -65, i8 -65>
  %222 = icmp ult <4 x i8> %221, <i8 26, i8 26, i8 26, i8 26>
  %223 = zext <4 x i1> %222 to <4 x i32>
  %224 = add <4 x i32> %216, %223
  %225 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 85
  %226 = bitcast i8* %225 to <4 x i8>*
  %227 = load <4 x i8>, <4 x i8>* %226, align 1, !tbaa !5
  %228 = and <4 x i8> %227, <i8 -33, i8 -33, i8 -33, i8 -33>
  %229 = add <4 x i8> %228, <i8 -65, i8 -65, i8 -65, i8 -65>
  %230 = icmp ult <4 x i8> %229, <i8 26, i8 26, i8 26, i8 26>
  %231 = zext <4 x i1> %230 to <4 x i32>
  %232 = add <4 x i32> %224, %231
  %233 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 89
  %234 = bitcast i8* %233 to <4 x i8>*
  %235 = load <4 x i8>, <4 x i8>* %234, align 1, !tbaa !5
  %236 = and <4 x i8> %235, <i8 -33, i8 -33, i8 -33, i8 -33>
  %237 = add <4 x i8> %236, <i8 -65, i8 -65, i8 -65, i8 -65>
  %238 = icmp ult <4 x i8> %237, <i8 26, i8 26, i8 26, i8 26>
  %239 = zext <4 x i1> %238 to <4 x i32>
  %240 = add <4 x i32> %232, %239
  %241 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 93
  %242 = bitcast i8* %241 to <4 x i8>*
  %243 = load <4 x i8>, <4 x i8>* %242, align 1, !tbaa !5
  %244 = and <4 x i8> %243, <i8 -33, i8 -33, i8 -33, i8 -33>
  %245 = add <4 x i8> %244, <i8 -65, i8 -65, i8 -65, i8 -65>
  %246 = icmp ult <4 x i8> %245, <i8 26, i8 26, i8 26, i8 26>
  %247 = zext <4 x i1> %246 to <4 x i32>
  %248 = add <4 x i32> %240, %247
  %249 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %248)
  %250 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 97
  %251 = load i8, i8* %250, align 1, !tbaa !5
  %252 = and i8 %251, -33
  %253 = add i8 %252, -65
  %254 = icmp ult i8 %253, 26
  %255 = zext i1 %254 to i32
  %256 = add nuw nsw i32 %249, %255
  %257 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 98
  %258 = load i8, i8* %257, align 2, !tbaa !5
  %259 = and i8 %258, -33
  %260 = add i8 %259, -65
  %261 = icmp ult i8 %260, 26
  %262 = zext i1 %261 to i32
  %263 = add nuw nsw i32 %256, %262
  %264 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 99
  %265 = load i8, i8* %264, align 1, !tbaa !5
  %266 = and i8 %265, -33
  %267 = add i8 %266, -65
  %268 = icmp ult i8 %267, 26
  %269 = zext i1 %268 to i32
  %270 = add nuw nsw i32 %263, %269
  %271 = icmp sgt i32 %270, %47
  br i1 %271, label %272, label %493

272:                                              ; preds = %51
  %273 = and i8 %49, -33
  %274 = add i8 %273, -65
  %275 = icmp ult i8 %274, 26
  %276 = zext i1 %275 to i32
  %277 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %276, i32 0
  %278 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 1
  %279 = bitcast i8* %278 to <4 x i8>*
  %280 = load <4 x i8>, <4 x i8>* %279, align 1, !tbaa !5
  %281 = and <4 x i8> %280, <i8 -33, i8 -33, i8 -33, i8 -33>
  %282 = add <4 x i8> %281, <i8 -65, i8 -65, i8 -65, i8 -65>
  %283 = icmp ult <4 x i8> %282, <i8 26, i8 26, i8 26, i8 26>
  %284 = zext <4 x i1> %283 to <4 x i32>
  %285 = add nuw nsw <4 x i32> %277, %284
  %286 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 5
  %287 = bitcast i8* %286 to <4 x i8>*
  %288 = load <4 x i8>, <4 x i8>* %287, align 1, !tbaa !5
  %289 = and <4 x i8> %288, <i8 -33, i8 -33, i8 -33, i8 -33>
  %290 = add <4 x i8> %289, <i8 -65, i8 -65, i8 -65, i8 -65>
  %291 = icmp ult <4 x i8> %290, <i8 26, i8 26, i8 26, i8 26>
  %292 = zext <4 x i1> %291 to <4 x i32>
  %293 = add nuw nsw <4 x i32> %285, %292
  %294 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 9
  %295 = bitcast i8* %294 to <4 x i8>*
  %296 = load <4 x i8>, <4 x i8>* %295, align 1, !tbaa !5
  %297 = and <4 x i8> %296, <i8 -33, i8 -33, i8 -33, i8 -33>
  %298 = add <4 x i8> %297, <i8 -65, i8 -65, i8 -65, i8 -65>
  %299 = icmp ult <4 x i8> %298, <i8 26, i8 26, i8 26, i8 26>
  %300 = zext <4 x i1> %299 to <4 x i32>
  %301 = add nuw nsw <4 x i32> %293, %300
  %302 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 13
  %303 = bitcast i8* %302 to <4 x i8>*
  %304 = load <4 x i8>, <4 x i8>* %303, align 1, !tbaa !5
  %305 = and <4 x i8> %304, <i8 -33, i8 -33, i8 -33, i8 -33>
  %306 = add <4 x i8> %305, <i8 -65, i8 -65, i8 -65, i8 -65>
  %307 = icmp ult <4 x i8> %306, <i8 26, i8 26, i8 26, i8 26>
  %308 = zext <4 x i1> %307 to <4 x i32>
  %309 = add nuw nsw <4 x i32> %301, %308
  %310 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 17
  %311 = bitcast i8* %310 to <4 x i8>*
  %312 = load <4 x i8>, <4 x i8>* %311, align 1, !tbaa !5
  %313 = and <4 x i8> %312, <i8 -33, i8 -33, i8 -33, i8 -33>
  %314 = add <4 x i8> %313, <i8 -65, i8 -65, i8 -65, i8 -65>
  %315 = icmp ult <4 x i8> %314, <i8 26, i8 26, i8 26, i8 26>
  %316 = zext <4 x i1> %315 to <4 x i32>
  %317 = add nuw nsw <4 x i32> %309, %316
  %318 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 21
  %319 = bitcast i8* %318 to <4 x i8>*
  %320 = load <4 x i8>, <4 x i8>* %319, align 1, !tbaa !5
  %321 = and <4 x i8> %320, <i8 -33, i8 -33, i8 -33, i8 -33>
  %322 = add <4 x i8> %321, <i8 -65, i8 -65, i8 -65, i8 -65>
  %323 = icmp ult <4 x i8> %322, <i8 26, i8 26, i8 26, i8 26>
  %324 = zext <4 x i1> %323 to <4 x i32>
  %325 = add <4 x i32> %317, %324
  %326 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 25
  %327 = bitcast i8* %326 to <4 x i8>*
  %328 = load <4 x i8>, <4 x i8>* %327, align 1, !tbaa !5
  %329 = and <4 x i8> %328, <i8 -33, i8 -33, i8 -33, i8 -33>
  %330 = add <4 x i8> %329, <i8 -65, i8 -65, i8 -65, i8 -65>
  %331 = icmp ult <4 x i8> %330, <i8 26, i8 26, i8 26, i8 26>
  %332 = zext <4 x i1> %331 to <4 x i32>
  %333 = add <4 x i32> %325, %332
  %334 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 29
  %335 = bitcast i8* %334 to <4 x i8>*
  %336 = load <4 x i8>, <4 x i8>* %335, align 1, !tbaa !5
  %337 = and <4 x i8> %336, <i8 -33, i8 -33, i8 -33, i8 -33>
  %338 = add <4 x i8> %337, <i8 -65, i8 -65, i8 -65, i8 -65>
  %339 = icmp ult <4 x i8> %338, <i8 26, i8 26, i8 26, i8 26>
  %340 = zext <4 x i1> %339 to <4 x i32>
  %341 = add <4 x i32> %333, %340
  %342 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 33
  %343 = bitcast i8* %342 to <4 x i8>*
  %344 = load <4 x i8>, <4 x i8>* %343, align 1, !tbaa !5
  %345 = and <4 x i8> %344, <i8 -33, i8 -33, i8 -33, i8 -33>
  %346 = add <4 x i8> %345, <i8 -65, i8 -65, i8 -65, i8 -65>
  %347 = icmp ult <4 x i8> %346, <i8 26, i8 26, i8 26, i8 26>
  %348 = zext <4 x i1> %347 to <4 x i32>
  %349 = add <4 x i32> %341, %348
  %350 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 37
  %351 = bitcast i8* %350 to <4 x i8>*
  %352 = load <4 x i8>, <4 x i8>* %351, align 1, !tbaa !5
  %353 = and <4 x i8> %352, <i8 -33, i8 -33, i8 -33, i8 -33>
  %354 = add <4 x i8> %353, <i8 -65, i8 -65, i8 -65, i8 -65>
  %355 = icmp ult <4 x i8> %354, <i8 26, i8 26, i8 26, i8 26>
  %356 = zext <4 x i1> %355 to <4 x i32>
  %357 = add <4 x i32> %349, %356
  %358 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 41
  %359 = bitcast i8* %358 to <4 x i8>*
  %360 = load <4 x i8>, <4 x i8>* %359, align 1, !tbaa !5
  %361 = and <4 x i8> %360, <i8 -33, i8 -33, i8 -33, i8 -33>
  %362 = add <4 x i8> %361, <i8 -65, i8 -65, i8 -65, i8 -65>
  %363 = icmp ult <4 x i8> %362, <i8 26, i8 26, i8 26, i8 26>
  %364 = zext <4 x i1> %363 to <4 x i32>
  %365 = add <4 x i32> %357, %364
  %366 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 45
  %367 = bitcast i8* %366 to <4 x i8>*
  %368 = load <4 x i8>, <4 x i8>* %367, align 1, !tbaa !5
  %369 = and <4 x i8> %368, <i8 -33, i8 -33, i8 -33, i8 -33>
  %370 = add <4 x i8> %369, <i8 -65, i8 -65, i8 -65, i8 -65>
  %371 = icmp ult <4 x i8> %370, <i8 26, i8 26, i8 26, i8 26>
  %372 = zext <4 x i1> %371 to <4 x i32>
  %373 = add <4 x i32> %365, %372
  %374 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 49
  %375 = bitcast i8* %374 to <4 x i8>*
  %376 = load <4 x i8>, <4 x i8>* %375, align 1, !tbaa !5
  %377 = and <4 x i8> %376, <i8 -33, i8 -33, i8 -33, i8 -33>
  %378 = add <4 x i8> %377, <i8 -65, i8 -65, i8 -65, i8 -65>
  %379 = icmp ult <4 x i8> %378, <i8 26, i8 26, i8 26, i8 26>
  %380 = zext <4 x i1> %379 to <4 x i32>
  %381 = add <4 x i32> %373, %380
  %382 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 53
  %383 = bitcast i8* %382 to <4 x i8>*
  %384 = load <4 x i8>, <4 x i8>* %383, align 1, !tbaa !5
  %385 = and <4 x i8> %384, <i8 -33, i8 -33, i8 -33, i8 -33>
  %386 = add <4 x i8> %385, <i8 -65, i8 -65, i8 -65, i8 -65>
  %387 = icmp ult <4 x i8> %386, <i8 26, i8 26, i8 26, i8 26>
  %388 = zext <4 x i1> %387 to <4 x i32>
  %389 = add <4 x i32> %381, %388
  %390 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 57
  %391 = bitcast i8* %390 to <4 x i8>*
  %392 = load <4 x i8>, <4 x i8>* %391, align 1, !tbaa !5
  %393 = and <4 x i8> %392, <i8 -33, i8 -33, i8 -33, i8 -33>
  %394 = add <4 x i8> %393, <i8 -65, i8 -65, i8 -65, i8 -65>
  %395 = icmp ult <4 x i8> %394, <i8 26, i8 26, i8 26, i8 26>
  %396 = zext <4 x i1> %395 to <4 x i32>
  %397 = add <4 x i32> %389, %396
  %398 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 61
  %399 = bitcast i8* %398 to <4 x i8>*
  %400 = load <4 x i8>, <4 x i8>* %399, align 1, !tbaa !5
  %401 = and <4 x i8> %400, <i8 -33, i8 -33, i8 -33, i8 -33>
  %402 = add <4 x i8> %401, <i8 -65, i8 -65, i8 -65, i8 -65>
  %403 = icmp ult <4 x i8> %402, <i8 26, i8 26, i8 26, i8 26>
  %404 = zext <4 x i1> %403 to <4 x i32>
  %405 = add <4 x i32> %397, %404
  %406 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 65
  %407 = bitcast i8* %406 to <4 x i8>*
  %408 = load <4 x i8>, <4 x i8>* %407, align 1, !tbaa !5
  %409 = and <4 x i8> %408, <i8 -33, i8 -33, i8 -33, i8 -33>
  %410 = add <4 x i8> %409, <i8 -65, i8 -65, i8 -65, i8 -65>
  %411 = icmp ult <4 x i8> %410, <i8 26, i8 26, i8 26, i8 26>
  %412 = zext <4 x i1> %411 to <4 x i32>
  %413 = add <4 x i32> %405, %412
  %414 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 69
  %415 = bitcast i8* %414 to <4 x i8>*
  %416 = load <4 x i8>, <4 x i8>* %415, align 1, !tbaa !5
  %417 = and <4 x i8> %416, <i8 -33, i8 -33, i8 -33, i8 -33>
  %418 = add <4 x i8> %417, <i8 -65, i8 -65, i8 -65, i8 -65>
  %419 = icmp ult <4 x i8> %418, <i8 26, i8 26, i8 26, i8 26>
  %420 = zext <4 x i1> %419 to <4 x i32>
  %421 = add <4 x i32> %413, %420
  %422 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 73
  %423 = bitcast i8* %422 to <4 x i8>*
  %424 = load <4 x i8>, <4 x i8>* %423, align 1, !tbaa !5
  %425 = and <4 x i8> %424, <i8 -33, i8 -33, i8 -33, i8 -33>
  %426 = add <4 x i8> %425, <i8 -65, i8 -65, i8 -65, i8 -65>
  %427 = icmp ult <4 x i8> %426, <i8 26, i8 26, i8 26, i8 26>
  %428 = zext <4 x i1> %427 to <4 x i32>
  %429 = add <4 x i32> %421, %428
  %430 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 77
  %431 = bitcast i8* %430 to <4 x i8>*
  %432 = load <4 x i8>, <4 x i8>* %431, align 1, !tbaa !5
  %433 = and <4 x i8> %432, <i8 -33, i8 -33, i8 -33, i8 -33>
  %434 = add <4 x i8> %433, <i8 -65, i8 -65, i8 -65, i8 -65>
  %435 = icmp ult <4 x i8> %434, <i8 26, i8 26, i8 26, i8 26>
  %436 = zext <4 x i1> %435 to <4 x i32>
  %437 = add <4 x i32> %429, %436
  %438 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 81
  %439 = bitcast i8* %438 to <4 x i8>*
  %440 = load <4 x i8>, <4 x i8>* %439, align 1, !tbaa !5
  %441 = and <4 x i8> %440, <i8 -33, i8 -33, i8 -33, i8 -33>
  %442 = add <4 x i8> %441, <i8 -65, i8 -65, i8 -65, i8 -65>
  %443 = icmp ult <4 x i8> %442, <i8 26, i8 26, i8 26, i8 26>
  %444 = zext <4 x i1> %443 to <4 x i32>
  %445 = add <4 x i32> %437, %444
  %446 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 85
  %447 = bitcast i8* %446 to <4 x i8>*
  %448 = load <4 x i8>, <4 x i8>* %447, align 1, !tbaa !5
  %449 = and <4 x i8> %448, <i8 -33, i8 -33, i8 -33, i8 -33>
  %450 = add <4 x i8> %449, <i8 -65, i8 -65, i8 -65, i8 -65>
  %451 = icmp ult <4 x i8> %450, <i8 26, i8 26, i8 26, i8 26>
  %452 = zext <4 x i1> %451 to <4 x i32>
  %453 = add <4 x i32> %445, %452
  %454 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 89
  %455 = bitcast i8* %454 to <4 x i8>*
  %456 = load <4 x i8>, <4 x i8>* %455, align 1, !tbaa !5
  %457 = and <4 x i8> %456, <i8 -33, i8 -33, i8 -33, i8 -33>
  %458 = add <4 x i8> %457, <i8 -65, i8 -65, i8 -65, i8 -65>
  %459 = icmp ult <4 x i8> %458, <i8 26, i8 26, i8 26, i8 26>
  %460 = zext <4 x i1> %459 to <4 x i32>
  %461 = add <4 x i32> %453, %460
  %462 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 93
  %463 = bitcast i8* %462 to <4 x i8>*
  %464 = load <4 x i8>, <4 x i8>* %463, align 1, !tbaa !5
  %465 = and <4 x i8> %464, <i8 -33, i8 -33, i8 -33, i8 -33>
  %466 = add <4 x i8> %465, <i8 -65, i8 -65, i8 -65, i8 -65>
  %467 = icmp ult <4 x i8> %466, <i8 26, i8 26, i8 26, i8 26>
  %468 = zext <4 x i1> %467 to <4 x i32>
  %469 = add <4 x i32> %461, %468
  %470 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %469)
  %471 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 97
  %472 = load i8, i8* %471, align 1, !tbaa !5
  %473 = and i8 %472, -33
  %474 = add i8 %473, -65
  %475 = icmp ult i8 %474, 26
  %476 = zext i1 %475 to i32
  %477 = add nuw nsw i32 %470, %476
  %478 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 98
  %479 = load i8, i8* %478, align 2, !tbaa !5
  %480 = and i8 %479, -33
  %481 = add i8 %480, -65
  %482 = icmp ult i8 %481, 26
  %483 = zext i1 %482 to i32
  %484 = add nuw nsw i32 %477, %483
  %485 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 99
  %486 = load i8, i8* %485, align 1, !tbaa !5
  %487 = and i8 %486, -33
  %488 = add i8 %487, -65
  %489 = icmp ult i8 %488, 26
  %490 = zext i1 %489 to i32
  %491 = add nuw nsw i32 %484, %490
  %492 = trunc i64 %43 to i32
  br label %493

493:                                              ; preds = %272, %51
  %494 = phi i32 [ %47, %51 ], [ %491, %272 ]
  %495 = phi i32 [ %45, %51 ], [ %492, %272 ]
  %496 = and i8 %49, -33
  %497 = add i8 %496, -65
  %498 = icmp ult i8 %497, 26
  %499 = zext i1 %498 to i32
  %500 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %499, i32 0
  %501 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 1
  %502 = bitcast i8* %501 to <4 x i8>*
  %503 = load <4 x i8>, <4 x i8>* %502, align 1, !tbaa !5
  %504 = and <4 x i8> %503, <i8 -33, i8 -33, i8 -33, i8 -33>
  %505 = add <4 x i8> %504, <i8 -65, i8 -65, i8 -65, i8 -65>
  %506 = icmp ult <4 x i8> %505, <i8 26, i8 26, i8 26, i8 26>
  %507 = zext <4 x i1> %506 to <4 x i32>
  %508 = add nuw nsw <4 x i32> %500, %507
  %509 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 5
  %510 = bitcast i8* %509 to <4 x i8>*
  %511 = load <4 x i8>, <4 x i8>* %510, align 1, !tbaa !5
  %512 = and <4 x i8> %511, <i8 -33, i8 -33, i8 -33, i8 -33>
  %513 = add <4 x i8> %512, <i8 -65, i8 -65, i8 -65, i8 -65>
  %514 = icmp ult <4 x i8> %513, <i8 26, i8 26, i8 26, i8 26>
  %515 = zext <4 x i1> %514 to <4 x i32>
  %516 = add nuw nsw <4 x i32> %508, %515
  %517 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 9
  %518 = bitcast i8* %517 to <4 x i8>*
  %519 = load <4 x i8>, <4 x i8>* %518, align 1, !tbaa !5
  %520 = and <4 x i8> %519, <i8 -33, i8 -33, i8 -33, i8 -33>
  %521 = add <4 x i8> %520, <i8 -65, i8 -65, i8 -65, i8 -65>
  %522 = icmp ult <4 x i8> %521, <i8 26, i8 26, i8 26, i8 26>
  %523 = zext <4 x i1> %522 to <4 x i32>
  %524 = add nuw nsw <4 x i32> %516, %523
  %525 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 13
  %526 = bitcast i8* %525 to <4 x i8>*
  %527 = load <4 x i8>, <4 x i8>* %526, align 1, !tbaa !5
  %528 = and <4 x i8> %527, <i8 -33, i8 -33, i8 -33, i8 -33>
  %529 = add <4 x i8> %528, <i8 -65, i8 -65, i8 -65, i8 -65>
  %530 = icmp ult <4 x i8> %529, <i8 26, i8 26, i8 26, i8 26>
  %531 = zext <4 x i1> %530 to <4 x i32>
  %532 = add nuw nsw <4 x i32> %524, %531
  %533 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 17
  %534 = bitcast i8* %533 to <4 x i8>*
  %535 = load <4 x i8>, <4 x i8>* %534, align 1, !tbaa !5
  %536 = and <4 x i8> %535, <i8 -33, i8 -33, i8 -33, i8 -33>
  %537 = add <4 x i8> %536, <i8 -65, i8 -65, i8 -65, i8 -65>
  %538 = icmp ult <4 x i8> %537, <i8 26, i8 26, i8 26, i8 26>
  %539 = zext <4 x i1> %538 to <4 x i32>
  %540 = add nuw nsw <4 x i32> %532, %539
  %541 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 21
  %542 = bitcast i8* %541 to <4 x i8>*
  %543 = load <4 x i8>, <4 x i8>* %542, align 1, !tbaa !5
  %544 = and <4 x i8> %543, <i8 -33, i8 -33, i8 -33, i8 -33>
  %545 = add <4 x i8> %544, <i8 -65, i8 -65, i8 -65, i8 -65>
  %546 = icmp ult <4 x i8> %545, <i8 26, i8 26, i8 26, i8 26>
  %547 = zext <4 x i1> %546 to <4 x i32>
  %548 = add <4 x i32> %540, %547
  %549 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 25
  %550 = bitcast i8* %549 to <4 x i8>*
  %551 = load <4 x i8>, <4 x i8>* %550, align 1, !tbaa !5
  %552 = and <4 x i8> %551, <i8 -33, i8 -33, i8 -33, i8 -33>
  %553 = add <4 x i8> %552, <i8 -65, i8 -65, i8 -65, i8 -65>
  %554 = icmp ult <4 x i8> %553, <i8 26, i8 26, i8 26, i8 26>
  %555 = zext <4 x i1> %554 to <4 x i32>
  %556 = add <4 x i32> %548, %555
  %557 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 29
  %558 = bitcast i8* %557 to <4 x i8>*
  %559 = load <4 x i8>, <4 x i8>* %558, align 1, !tbaa !5
  %560 = and <4 x i8> %559, <i8 -33, i8 -33, i8 -33, i8 -33>
  %561 = add <4 x i8> %560, <i8 -65, i8 -65, i8 -65, i8 -65>
  %562 = icmp ult <4 x i8> %561, <i8 26, i8 26, i8 26, i8 26>
  %563 = zext <4 x i1> %562 to <4 x i32>
  %564 = add <4 x i32> %556, %563
  %565 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 33
  %566 = bitcast i8* %565 to <4 x i8>*
  %567 = load <4 x i8>, <4 x i8>* %566, align 1, !tbaa !5
  %568 = and <4 x i8> %567, <i8 -33, i8 -33, i8 -33, i8 -33>
  %569 = add <4 x i8> %568, <i8 -65, i8 -65, i8 -65, i8 -65>
  %570 = icmp ult <4 x i8> %569, <i8 26, i8 26, i8 26, i8 26>
  %571 = zext <4 x i1> %570 to <4 x i32>
  %572 = add <4 x i32> %564, %571
  %573 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 37
  %574 = bitcast i8* %573 to <4 x i8>*
  %575 = load <4 x i8>, <4 x i8>* %574, align 1, !tbaa !5
  %576 = and <4 x i8> %575, <i8 -33, i8 -33, i8 -33, i8 -33>
  %577 = add <4 x i8> %576, <i8 -65, i8 -65, i8 -65, i8 -65>
  %578 = icmp ult <4 x i8> %577, <i8 26, i8 26, i8 26, i8 26>
  %579 = zext <4 x i1> %578 to <4 x i32>
  %580 = add <4 x i32> %572, %579
  %581 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 41
  %582 = bitcast i8* %581 to <4 x i8>*
  %583 = load <4 x i8>, <4 x i8>* %582, align 1, !tbaa !5
  %584 = and <4 x i8> %583, <i8 -33, i8 -33, i8 -33, i8 -33>
  %585 = add <4 x i8> %584, <i8 -65, i8 -65, i8 -65, i8 -65>
  %586 = icmp ult <4 x i8> %585, <i8 26, i8 26, i8 26, i8 26>
  %587 = zext <4 x i1> %586 to <4 x i32>
  %588 = add <4 x i32> %580, %587
  %589 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 45
  %590 = bitcast i8* %589 to <4 x i8>*
  %591 = load <4 x i8>, <4 x i8>* %590, align 1, !tbaa !5
  %592 = and <4 x i8> %591, <i8 -33, i8 -33, i8 -33, i8 -33>
  %593 = add <4 x i8> %592, <i8 -65, i8 -65, i8 -65, i8 -65>
  %594 = icmp ult <4 x i8> %593, <i8 26, i8 26, i8 26, i8 26>
  %595 = zext <4 x i1> %594 to <4 x i32>
  %596 = add <4 x i32> %588, %595
  %597 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 49
  %598 = bitcast i8* %597 to <4 x i8>*
  %599 = load <4 x i8>, <4 x i8>* %598, align 1, !tbaa !5
  %600 = and <4 x i8> %599, <i8 -33, i8 -33, i8 -33, i8 -33>
  %601 = add <4 x i8> %600, <i8 -65, i8 -65, i8 -65, i8 -65>
  %602 = icmp ult <4 x i8> %601, <i8 26, i8 26, i8 26, i8 26>
  %603 = zext <4 x i1> %602 to <4 x i32>
  %604 = add <4 x i32> %596, %603
  %605 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 53
  %606 = bitcast i8* %605 to <4 x i8>*
  %607 = load <4 x i8>, <4 x i8>* %606, align 1, !tbaa !5
  %608 = and <4 x i8> %607, <i8 -33, i8 -33, i8 -33, i8 -33>
  %609 = add <4 x i8> %608, <i8 -65, i8 -65, i8 -65, i8 -65>
  %610 = icmp ult <4 x i8> %609, <i8 26, i8 26, i8 26, i8 26>
  %611 = zext <4 x i1> %610 to <4 x i32>
  %612 = add <4 x i32> %604, %611
  %613 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 57
  %614 = bitcast i8* %613 to <4 x i8>*
  %615 = load <4 x i8>, <4 x i8>* %614, align 1, !tbaa !5
  %616 = and <4 x i8> %615, <i8 -33, i8 -33, i8 -33, i8 -33>
  %617 = add <4 x i8> %616, <i8 -65, i8 -65, i8 -65, i8 -65>
  %618 = icmp ult <4 x i8> %617, <i8 26, i8 26, i8 26, i8 26>
  %619 = zext <4 x i1> %618 to <4 x i32>
  %620 = add <4 x i32> %612, %619
  %621 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 61
  %622 = bitcast i8* %621 to <4 x i8>*
  %623 = load <4 x i8>, <4 x i8>* %622, align 1, !tbaa !5
  %624 = and <4 x i8> %623, <i8 -33, i8 -33, i8 -33, i8 -33>
  %625 = add <4 x i8> %624, <i8 -65, i8 -65, i8 -65, i8 -65>
  %626 = icmp ult <4 x i8> %625, <i8 26, i8 26, i8 26, i8 26>
  %627 = zext <4 x i1> %626 to <4 x i32>
  %628 = add <4 x i32> %620, %627
  %629 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 65
  %630 = bitcast i8* %629 to <4 x i8>*
  %631 = load <4 x i8>, <4 x i8>* %630, align 1, !tbaa !5
  %632 = and <4 x i8> %631, <i8 -33, i8 -33, i8 -33, i8 -33>
  %633 = add <4 x i8> %632, <i8 -65, i8 -65, i8 -65, i8 -65>
  %634 = icmp ult <4 x i8> %633, <i8 26, i8 26, i8 26, i8 26>
  %635 = zext <4 x i1> %634 to <4 x i32>
  %636 = add <4 x i32> %628, %635
  %637 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 69
  %638 = bitcast i8* %637 to <4 x i8>*
  %639 = load <4 x i8>, <4 x i8>* %638, align 1, !tbaa !5
  %640 = and <4 x i8> %639, <i8 -33, i8 -33, i8 -33, i8 -33>
  %641 = add <4 x i8> %640, <i8 -65, i8 -65, i8 -65, i8 -65>
  %642 = icmp ult <4 x i8> %641, <i8 26, i8 26, i8 26, i8 26>
  %643 = zext <4 x i1> %642 to <4 x i32>
  %644 = add <4 x i32> %636, %643
  %645 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 73
  %646 = bitcast i8* %645 to <4 x i8>*
  %647 = load <4 x i8>, <4 x i8>* %646, align 1, !tbaa !5
  %648 = and <4 x i8> %647, <i8 -33, i8 -33, i8 -33, i8 -33>
  %649 = add <4 x i8> %648, <i8 -65, i8 -65, i8 -65, i8 -65>
  %650 = icmp ult <4 x i8> %649, <i8 26, i8 26, i8 26, i8 26>
  %651 = zext <4 x i1> %650 to <4 x i32>
  %652 = add <4 x i32> %644, %651
  %653 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 77
  %654 = bitcast i8* %653 to <4 x i8>*
  %655 = load <4 x i8>, <4 x i8>* %654, align 1, !tbaa !5
  %656 = and <4 x i8> %655, <i8 -33, i8 -33, i8 -33, i8 -33>
  %657 = add <4 x i8> %656, <i8 -65, i8 -65, i8 -65, i8 -65>
  %658 = icmp ult <4 x i8> %657, <i8 26, i8 26, i8 26, i8 26>
  %659 = zext <4 x i1> %658 to <4 x i32>
  %660 = add <4 x i32> %652, %659
  %661 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 81
  %662 = bitcast i8* %661 to <4 x i8>*
  %663 = load <4 x i8>, <4 x i8>* %662, align 1, !tbaa !5
  %664 = and <4 x i8> %663, <i8 -33, i8 -33, i8 -33, i8 -33>
  %665 = add <4 x i8> %664, <i8 -65, i8 -65, i8 -65, i8 -65>
  %666 = icmp ult <4 x i8> %665, <i8 26, i8 26, i8 26, i8 26>
  %667 = zext <4 x i1> %666 to <4 x i32>
  %668 = add <4 x i32> %660, %667
  %669 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 85
  %670 = bitcast i8* %669 to <4 x i8>*
  %671 = load <4 x i8>, <4 x i8>* %670, align 1, !tbaa !5
  %672 = and <4 x i8> %671, <i8 -33, i8 -33, i8 -33, i8 -33>
  %673 = add <4 x i8> %672, <i8 -65, i8 -65, i8 -65, i8 -65>
  %674 = icmp ult <4 x i8> %673, <i8 26, i8 26, i8 26, i8 26>
  %675 = zext <4 x i1> %674 to <4 x i32>
  %676 = add <4 x i32> %668, %675
  %677 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 89
  %678 = bitcast i8* %677 to <4 x i8>*
  %679 = load <4 x i8>, <4 x i8>* %678, align 1, !tbaa !5
  %680 = and <4 x i8> %679, <i8 -33, i8 -33, i8 -33, i8 -33>
  %681 = add <4 x i8> %680, <i8 -65, i8 -65, i8 -65, i8 -65>
  %682 = icmp ult <4 x i8> %681, <i8 26, i8 26, i8 26, i8 26>
  %683 = zext <4 x i1> %682 to <4 x i32>
  %684 = add <4 x i32> %676, %683
  %685 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 93
  %686 = bitcast i8* %685 to <4 x i8>*
  %687 = load <4 x i8>, <4 x i8>* %686, align 1, !tbaa !5
  %688 = and <4 x i8> %687, <i8 -33, i8 -33, i8 -33, i8 -33>
  %689 = add <4 x i8> %688, <i8 -65, i8 -65, i8 -65, i8 -65>
  %690 = icmp ult <4 x i8> %689, <i8 26, i8 26, i8 26, i8 26>
  %691 = zext <4 x i1> %690 to <4 x i32>
  %692 = add <4 x i32> %684, %691
  %693 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %692)
  %694 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 97
  %695 = load i8, i8* %694, align 1, !tbaa !5
  %696 = and i8 %695, -33
  %697 = add i8 %696, -65
  %698 = icmp ult i8 %697, 26
  %699 = zext i1 %698 to i32
  %700 = add nuw nsw i32 %693, %699
  %701 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 98
  %702 = load i8, i8* %701, align 2, !tbaa !5
  %703 = and i8 %702, -33
  %704 = add i8 %703, -65
  %705 = icmp ult i8 %704, 26
  %706 = zext i1 %705 to i32
  %707 = add nuw nsw i32 %700, %706
  %708 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 99
  %709 = load i8, i8* %708, align 1, !tbaa !5
  %710 = and i8 %709, -33
  %711 = add i8 %710, -65
  %712 = icmp ult i8 %711, 26
  %713 = zext i1 %712 to i32
  %714 = add nuw nsw i32 %707, %713
  %715 = icmp slt i32 %714, %46
  br i1 %715, label %716, label %937

716:                                              ; preds = %493
  %717 = and i8 %49, -33
  %718 = add i8 %717, -65
  %719 = icmp ult i8 %718, 26
  %720 = zext i1 %719 to i32
  %721 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %720, i32 0
  %722 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 1
  %723 = bitcast i8* %722 to <4 x i8>*
  %724 = load <4 x i8>, <4 x i8>* %723, align 1, !tbaa !5
  %725 = and <4 x i8> %724, <i8 -33, i8 -33, i8 -33, i8 -33>
  %726 = add <4 x i8> %725, <i8 -65, i8 -65, i8 -65, i8 -65>
  %727 = icmp ult <4 x i8> %726, <i8 26, i8 26, i8 26, i8 26>
  %728 = zext <4 x i1> %727 to <4 x i32>
  %729 = add nuw nsw <4 x i32> %721, %728
  %730 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 5
  %731 = bitcast i8* %730 to <4 x i8>*
  %732 = load <4 x i8>, <4 x i8>* %731, align 1, !tbaa !5
  %733 = and <4 x i8> %732, <i8 -33, i8 -33, i8 -33, i8 -33>
  %734 = add <4 x i8> %733, <i8 -65, i8 -65, i8 -65, i8 -65>
  %735 = icmp ult <4 x i8> %734, <i8 26, i8 26, i8 26, i8 26>
  %736 = zext <4 x i1> %735 to <4 x i32>
  %737 = add nuw nsw <4 x i32> %729, %736
  %738 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 9
  %739 = bitcast i8* %738 to <4 x i8>*
  %740 = load <4 x i8>, <4 x i8>* %739, align 1, !tbaa !5
  %741 = and <4 x i8> %740, <i8 -33, i8 -33, i8 -33, i8 -33>
  %742 = add <4 x i8> %741, <i8 -65, i8 -65, i8 -65, i8 -65>
  %743 = icmp ult <4 x i8> %742, <i8 26, i8 26, i8 26, i8 26>
  %744 = zext <4 x i1> %743 to <4 x i32>
  %745 = add nuw nsw <4 x i32> %737, %744
  %746 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 13
  %747 = bitcast i8* %746 to <4 x i8>*
  %748 = load <4 x i8>, <4 x i8>* %747, align 1, !tbaa !5
  %749 = and <4 x i8> %748, <i8 -33, i8 -33, i8 -33, i8 -33>
  %750 = add <4 x i8> %749, <i8 -65, i8 -65, i8 -65, i8 -65>
  %751 = icmp ult <4 x i8> %750, <i8 26, i8 26, i8 26, i8 26>
  %752 = zext <4 x i1> %751 to <4 x i32>
  %753 = add nuw nsw <4 x i32> %745, %752
  %754 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 17
  %755 = bitcast i8* %754 to <4 x i8>*
  %756 = load <4 x i8>, <4 x i8>* %755, align 1, !tbaa !5
  %757 = and <4 x i8> %756, <i8 -33, i8 -33, i8 -33, i8 -33>
  %758 = add <4 x i8> %757, <i8 -65, i8 -65, i8 -65, i8 -65>
  %759 = icmp ult <4 x i8> %758, <i8 26, i8 26, i8 26, i8 26>
  %760 = zext <4 x i1> %759 to <4 x i32>
  %761 = add nuw nsw <4 x i32> %753, %760
  %762 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 21
  %763 = bitcast i8* %762 to <4 x i8>*
  %764 = load <4 x i8>, <4 x i8>* %763, align 1, !tbaa !5
  %765 = and <4 x i8> %764, <i8 -33, i8 -33, i8 -33, i8 -33>
  %766 = add <4 x i8> %765, <i8 -65, i8 -65, i8 -65, i8 -65>
  %767 = icmp ult <4 x i8> %766, <i8 26, i8 26, i8 26, i8 26>
  %768 = zext <4 x i1> %767 to <4 x i32>
  %769 = add <4 x i32> %761, %768
  %770 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 25
  %771 = bitcast i8* %770 to <4 x i8>*
  %772 = load <4 x i8>, <4 x i8>* %771, align 1, !tbaa !5
  %773 = and <4 x i8> %772, <i8 -33, i8 -33, i8 -33, i8 -33>
  %774 = add <4 x i8> %773, <i8 -65, i8 -65, i8 -65, i8 -65>
  %775 = icmp ult <4 x i8> %774, <i8 26, i8 26, i8 26, i8 26>
  %776 = zext <4 x i1> %775 to <4 x i32>
  %777 = add <4 x i32> %769, %776
  %778 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 29
  %779 = bitcast i8* %778 to <4 x i8>*
  %780 = load <4 x i8>, <4 x i8>* %779, align 1, !tbaa !5
  %781 = and <4 x i8> %780, <i8 -33, i8 -33, i8 -33, i8 -33>
  %782 = add <4 x i8> %781, <i8 -65, i8 -65, i8 -65, i8 -65>
  %783 = icmp ult <4 x i8> %782, <i8 26, i8 26, i8 26, i8 26>
  %784 = zext <4 x i1> %783 to <4 x i32>
  %785 = add <4 x i32> %777, %784
  %786 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 33
  %787 = bitcast i8* %786 to <4 x i8>*
  %788 = load <4 x i8>, <4 x i8>* %787, align 1, !tbaa !5
  %789 = and <4 x i8> %788, <i8 -33, i8 -33, i8 -33, i8 -33>
  %790 = add <4 x i8> %789, <i8 -65, i8 -65, i8 -65, i8 -65>
  %791 = icmp ult <4 x i8> %790, <i8 26, i8 26, i8 26, i8 26>
  %792 = zext <4 x i1> %791 to <4 x i32>
  %793 = add <4 x i32> %785, %792
  %794 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 37
  %795 = bitcast i8* %794 to <4 x i8>*
  %796 = load <4 x i8>, <4 x i8>* %795, align 1, !tbaa !5
  %797 = and <4 x i8> %796, <i8 -33, i8 -33, i8 -33, i8 -33>
  %798 = add <4 x i8> %797, <i8 -65, i8 -65, i8 -65, i8 -65>
  %799 = icmp ult <4 x i8> %798, <i8 26, i8 26, i8 26, i8 26>
  %800 = zext <4 x i1> %799 to <4 x i32>
  %801 = add <4 x i32> %793, %800
  %802 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 41
  %803 = bitcast i8* %802 to <4 x i8>*
  %804 = load <4 x i8>, <4 x i8>* %803, align 1, !tbaa !5
  %805 = and <4 x i8> %804, <i8 -33, i8 -33, i8 -33, i8 -33>
  %806 = add <4 x i8> %805, <i8 -65, i8 -65, i8 -65, i8 -65>
  %807 = icmp ult <4 x i8> %806, <i8 26, i8 26, i8 26, i8 26>
  %808 = zext <4 x i1> %807 to <4 x i32>
  %809 = add <4 x i32> %801, %808
  %810 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 45
  %811 = bitcast i8* %810 to <4 x i8>*
  %812 = load <4 x i8>, <4 x i8>* %811, align 1, !tbaa !5
  %813 = and <4 x i8> %812, <i8 -33, i8 -33, i8 -33, i8 -33>
  %814 = add <4 x i8> %813, <i8 -65, i8 -65, i8 -65, i8 -65>
  %815 = icmp ult <4 x i8> %814, <i8 26, i8 26, i8 26, i8 26>
  %816 = zext <4 x i1> %815 to <4 x i32>
  %817 = add <4 x i32> %809, %816
  %818 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 49
  %819 = bitcast i8* %818 to <4 x i8>*
  %820 = load <4 x i8>, <4 x i8>* %819, align 1, !tbaa !5
  %821 = and <4 x i8> %820, <i8 -33, i8 -33, i8 -33, i8 -33>
  %822 = add <4 x i8> %821, <i8 -65, i8 -65, i8 -65, i8 -65>
  %823 = icmp ult <4 x i8> %822, <i8 26, i8 26, i8 26, i8 26>
  %824 = zext <4 x i1> %823 to <4 x i32>
  %825 = add <4 x i32> %817, %824
  %826 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 53
  %827 = bitcast i8* %826 to <4 x i8>*
  %828 = load <4 x i8>, <4 x i8>* %827, align 1, !tbaa !5
  %829 = and <4 x i8> %828, <i8 -33, i8 -33, i8 -33, i8 -33>
  %830 = add <4 x i8> %829, <i8 -65, i8 -65, i8 -65, i8 -65>
  %831 = icmp ult <4 x i8> %830, <i8 26, i8 26, i8 26, i8 26>
  %832 = zext <4 x i1> %831 to <4 x i32>
  %833 = add <4 x i32> %825, %832
  %834 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 57
  %835 = bitcast i8* %834 to <4 x i8>*
  %836 = load <4 x i8>, <4 x i8>* %835, align 1, !tbaa !5
  %837 = and <4 x i8> %836, <i8 -33, i8 -33, i8 -33, i8 -33>
  %838 = add <4 x i8> %837, <i8 -65, i8 -65, i8 -65, i8 -65>
  %839 = icmp ult <4 x i8> %838, <i8 26, i8 26, i8 26, i8 26>
  %840 = zext <4 x i1> %839 to <4 x i32>
  %841 = add <4 x i32> %833, %840
  %842 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 61
  %843 = bitcast i8* %842 to <4 x i8>*
  %844 = load <4 x i8>, <4 x i8>* %843, align 1, !tbaa !5
  %845 = and <4 x i8> %844, <i8 -33, i8 -33, i8 -33, i8 -33>
  %846 = add <4 x i8> %845, <i8 -65, i8 -65, i8 -65, i8 -65>
  %847 = icmp ult <4 x i8> %846, <i8 26, i8 26, i8 26, i8 26>
  %848 = zext <4 x i1> %847 to <4 x i32>
  %849 = add <4 x i32> %841, %848
  %850 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 65
  %851 = bitcast i8* %850 to <4 x i8>*
  %852 = load <4 x i8>, <4 x i8>* %851, align 1, !tbaa !5
  %853 = and <4 x i8> %852, <i8 -33, i8 -33, i8 -33, i8 -33>
  %854 = add <4 x i8> %853, <i8 -65, i8 -65, i8 -65, i8 -65>
  %855 = icmp ult <4 x i8> %854, <i8 26, i8 26, i8 26, i8 26>
  %856 = zext <4 x i1> %855 to <4 x i32>
  %857 = add <4 x i32> %849, %856
  %858 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 69
  %859 = bitcast i8* %858 to <4 x i8>*
  %860 = load <4 x i8>, <4 x i8>* %859, align 1, !tbaa !5
  %861 = and <4 x i8> %860, <i8 -33, i8 -33, i8 -33, i8 -33>
  %862 = add <4 x i8> %861, <i8 -65, i8 -65, i8 -65, i8 -65>
  %863 = icmp ult <4 x i8> %862, <i8 26, i8 26, i8 26, i8 26>
  %864 = zext <4 x i1> %863 to <4 x i32>
  %865 = add <4 x i32> %857, %864
  %866 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 73
  %867 = bitcast i8* %866 to <4 x i8>*
  %868 = load <4 x i8>, <4 x i8>* %867, align 1, !tbaa !5
  %869 = and <4 x i8> %868, <i8 -33, i8 -33, i8 -33, i8 -33>
  %870 = add <4 x i8> %869, <i8 -65, i8 -65, i8 -65, i8 -65>
  %871 = icmp ult <4 x i8> %870, <i8 26, i8 26, i8 26, i8 26>
  %872 = zext <4 x i1> %871 to <4 x i32>
  %873 = add <4 x i32> %865, %872
  %874 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 77
  %875 = bitcast i8* %874 to <4 x i8>*
  %876 = load <4 x i8>, <4 x i8>* %875, align 1, !tbaa !5
  %877 = and <4 x i8> %876, <i8 -33, i8 -33, i8 -33, i8 -33>
  %878 = add <4 x i8> %877, <i8 -65, i8 -65, i8 -65, i8 -65>
  %879 = icmp ult <4 x i8> %878, <i8 26, i8 26, i8 26, i8 26>
  %880 = zext <4 x i1> %879 to <4 x i32>
  %881 = add <4 x i32> %873, %880
  %882 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 81
  %883 = bitcast i8* %882 to <4 x i8>*
  %884 = load <4 x i8>, <4 x i8>* %883, align 1, !tbaa !5
  %885 = and <4 x i8> %884, <i8 -33, i8 -33, i8 -33, i8 -33>
  %886 = add <4 x i8> %885, <i8 -65, i8 -65, i8 -65, i8 -65>
  %887 = icmp ult <4 x i8> %886, <i8 26, i8 26, i8 26, i8 26>
  %888 = zext <4 x i1> %887 to <4 x i32>
  %889 = add <4 x i32> %881, %888
  %890 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 85
  %891 = bitcast i8* %890 to <4 x i8>*
  %892 = load <4 x i8>, <4 x i8>* %891, align 1, !tbaa !5
  %893 = and <4 x i8> %892, <i8 -33, i8 -33, i8 -33, i8 -33>
  %894 = add <4 x i8> %893, <i8 -65, i8 -65, i8 -65, i8 -65>
  %895 = icmp ult <4 x i8> %894, <i8 26, i8 26, i8 26, i8 26>
  %896 = zext <4 x i1> %895 to <4 x i32>
  %897 = add <4 x i32> %889, %896
  %898 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 89
  %899 = bitcast i8* %898 to <4 x i8>*
  %900 = load <4 x i8>, <4 x i8>* %899, align 1, !tbaa !5
  %901 = and <4 x i8> %900, <i8 -33, i8 -33, i8 -33, i8 -33>
  %902 = add <4 x i8> %901, <i8 -65, i8 -65, i8 -65, i8 -65>
  %903 = icmp ult <4 x i8> %902, <i8 26, i8 26, i8 26, i8 26>
  %904 = zext <4 x i1> %903 to <4 x i32>
  %905 = add <4 x i32> %897, %904
  %906 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 93
  %907 = bitcast i8* %906 to <4 x i8>*
  %908 = load <4 x i8>, <4 x i8>* %907, align 1, !tbaa !5
  %909 = and <4 x i8> %908, <i8 -33, i8 -33, i8 -33, i8 -33>
  %910 = add <4 x i8> %909, <i8 -65, i8 -65, i8 -65, i8 -65>
  %911 = icmp ult <4 x i8> %910, <i8 26, i8 26, i8 26, i8 26>
  %912 = zext <4 x i1> %911 to <4 x i32>
  %913 = add <4 x i32> %905, %912
  %914 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %913)
  %915 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 97
  %916 = load i8, i8* %915, align 1, !tbaa !5
  %917 = and i8 %916, -33
  %918 = add i8 %917, -65
  %919 = icmp ult i8 %918, 26
  %920 = zext i1 %919 to i32
  %921 = add nuw nsw i32 %914, %920
  %922 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 98
  %923 = load i8, i8* %922, align 2, !tbaa !5
  %924 = and i8 %923, -33
  %925 = add i8 %924, -65
  %926 = icmp ult i8 %925, 26
  %927 = zext i1 %926 to i32
  %928 = add nuw nsw i32 %921, %927
  %929 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %43, i64 99
  %930 = load i8, i8* %929, align 1, !tbaa !5
  %931 = and i8 %930, -33
  %932 = add i8 %931, -65
  %933 = icmp ult i8 %932, 26
  %934 = zext i1 %933 to i32
  %935 = add nuw nsw i32 %928, %934
  %936 = trunc i64 %43 to i32
  br label %937

937:                                              ; preds = %716, %42, %493
  %938 = phi i32 [ %494, %493 ], [ %47, %42 ], [ %494, %716 ]
  %939 = phi i32 [ %46, %493 ], [ %46, %42 ], [ %935, %716 ]
  %940 = phi i32 [ %495, %493 ], [ %45, %42 ], [ %495, %716 ]
  %941 = phi i32 [ %44, %493 ], [ %44, %42 ], [ %936, %716 ]
  %942 = add nuw nsw i64 %43, 1
  %943 = icmp eq i64 %942, 50
  br i1 %943, label %944, label %42, !llvm.loop !12

944:                                              ; preds = %937
  %945 = sext i32 %940 to i64
  %946 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %945, i64 0
  %947 = sext i32 %941 to i64
  %948 = getelementptr inbounds [50 x [100 x i8]], [50 x [100 x i8]]* %3, i64 0, i64 %947, i64 0
  %949 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* nonnull %946, i8* nonnull %948)
  call void @llvm.lifetime.end.p0i8(i64 5000, i8* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 1000, i8* nonnull %5) #7
  ret void
}

declare i32 @gets(...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #6

attributes #0 = { nofree norecurse nosync nounwind readonly sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly nofree nounwind willreturn writeonly }
attributes #6 = { nofree nosync nounwind readnone willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !9}
