; ModuleID = 'source-C-CXX/99/48.c'
source_filename = "source-C-CXX/99/48.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [7 x i8] c"%c=%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"No\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca [300 x i8], align 16
  %2 = getelementptr inbounds [300 x i8], [300 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 300, i8* nonnull %2) #5
  %3 = call i32 (i8*, ...) bitcast (i32 (...)* @gets to i32 (i8*, ...)*)(i8* nonnull %2) #5
  %4 = call i64 @strlen(i8* noundef nonnull %2) #6
  %5 = shl i64 %4, 32
  %6 = ashr exact i64 %5, 32
  %7 = getelementptr inbounds [300 x i8], [300 x i8]* %1, i64 0, i64 %6
  %8 = icmp sgt i64 %5, 0
  br i1 %8, label %9, label %48

9:                                                ; preds = %0, %101
  %10 = phi i32 [ %114, %101 ], [ 0, %0 ]
  %11 = phi i32 [ %115, %101 ], [ 0, %0 ]
  %12 = phi i32 [ %113, %101 ], [ 0, %0 ]
  %13 = phi i32 [ %116, %101 ], [ 0, %0 ]
  %14 = phi i32 [ %112, %101 ], [ 0, %0 ]
  %15 = phi i32 [ %117, %101 ], [ 0, %0 ]
  %16 = phi i32 [ %111, %101 ], [ 0, %0 ]
  %17 = phi i32 [ %118, %101 ], [ 0, %0 ]
  %18 = phi i32 [ %110, %101 ], [ 0, %0 ]
  %19 = phi i32 [ %119, %101 ], [ 0, %0 ]
  %20 = phi i32 [ %109, %101 ], [ 0, %0 ]
  %21 = phi i32 [ %120, %101 ], [ 0, %0 ]
  %22 = phi i32 [ %108, %101 ], [ 0, %0 ]
  %23 = phi i32 [ %121, %101 ], [ 0, %0 ]
  %24 = phi i32 [ %107, %101 ], [ 0, %0 ]
  %25 = phi i32 [ %122, %101 ], [ 0, %0 ]
  %26 = phi i32 [ %106, %101 ], [ 0, %0 ]
  %27 = phi i32 [ %123, %101 ], [ 0, %0 ]
  %28 = phi i32 [ %105, %101 ], [ 0, %0 ]
  %29 = phi i32 [ %124, %101 ], [ 0, %0 ]
  %30 = phi i32 [ %104, %101 ], [ 0, %0 ]
  %31 = phi i32 [ %125, %101 ], [ 0, %0 ]
  %32 = phi i32 [ %103, %101 ], [ 0, %0 ]
  %33 = phi i32 [ %126, %101 ], [ 0, %0 ]
  %34 = phi i32 [ %102, %101 ], [ 0, %0 ]
  %35 = phi i32 [ %127, %101 ], [ 0, %0 ]
  %36 = phi i8* [ %128, %101 ], [ %2, %0 ]
  %37 = load i8, i8* %36, align 1, !tbaa !5
  %38 = sext i8 %37 to i32
  switch i32 %38, label %101 [
    i32 97, label %41
    i32 98, label %51
    i32 99, label %53
    i32 100, label %55
    i32 101, label %57
    i32 102, label %59
    i32 103, label %61
    i32 104, label %63
    i32 105, label %65
    i32 106, label %67
    i32 107, label %69
    i32 108, label %71
    i32 109, label %73
    i32 110, label %75
    i32 111, label %77
    i32 112, label %79
    i32 113, label %81
    i32 114, label %83
    i32 115, label %85
    i32 116, label %87
    i32 117, label %89
    i32 118, label %91
    i32 119, label %93
    i32 120, label %95
    i32 121, label %97
    i32 122, label %99
  ]

39:                                               ; preds = %101
  %40 = icmp eq i32 %114, 0
  br i1 %40, label %45, label %43

41:                                               ; preds = %9
  %42 = add nsw i32 %10, 1
  br label %101

43:                                               ; preds = %39
  %44 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 97, i32 %114)
  br label %45

45:                                               ; preds = %39, %43
  %46 = phi i32 [ 1, %43 ], [ 0, %39 ]
  %47 = icmp eq i32 %115, 0
  br i1 %47, label %133, label %130

48:                                               ; preds = %0, %276
  %49 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  br label %50

50:                                               ; preds = %274, %48, %276
  call void @llvm.lifetime.end.p0i8(i64 300, i8* nonnull %2) #5
  ret void

51:                                               ; preds = %9
  %52 = add nsw i32 %11, 1
  br label %101

53:                                               ; preds = %9
  %54 = add nsw i32 %12, 1
  br label %101

55:                                               ; preds = %9
  %56 = add nsw i32 %13, 1
  br label %101

57:                                               ; preds = %9
  %58 = add nsw i32 %14, 1
  br label %101

59:                                               ; preds = %9
  %60 = add nsw i32 %15, 1
  br label %101

61:                                               ; preds = %9
  %62 = add nsw i32 %16, 1
  br label %101

63:                                               ; preds = %9
  %64 = add nsw i32 %17, 1
  br label %101

65:                                               ; preds = %9
  %66 = add nsw i32 %18, 1
  br label %101

67:                                               ; preds = %9
  %68 = add nsw i32 %19, 1
  br label %101

69:                                               ; preds = %9
  %70 = add nsw i32 %20, 1
  br label %101

71:                                               ; preds = %9
  %72 = add nsw i32 %21, 1
  br label %101

73:                                               ; preds = %9
  %74 = add nsw i32 %22, 1
  br label %101

75:                                               ; preds = %9
  %76 = add nsw i32 %23, 1
  br label %101

77:                                               ; preds = %9
  %78 = add nsw i32 %24, 1
  br label %101

79:                                               ; preds = %9
  %80 = add nsw i32 %25, 1
  br label %101

81:                                               ; preds = %9
  %82 = add nsw i32 %26, 1
  br label %101

83:                                               ; preds = %9
  %84 = add nsw i32 %27, 1
  br label %101

85:                                               ; preds = %9
  %86 = add nsw i32 %28, 1
  br label %101

87:                                               ; preds = %9
  %88 = add nsw i32 %29, 1
  br label %101

89:                                               ; preds = %9
  %90 = add nsw i32 %30, 1
  br label %101

91:                                               ; preds = %9
  %92 = add nsw i32 %31, 1
  br label %101

93:                                               ; preds = %9
  %94 = add nsw i32 %32, 1
  br label %101

95:                                               ; preds = %9
  %96 = add nsw i32 %33, 1
  br label %101

97:                                               ; preds = %9
  %98 = add nsw i32 %34, 1
  br label %101

99:                                               ; preds = %9
  %100 = add nsw i32 %35, 1
  br label %101

101:                                              ; preds = %9, %51, %41, %53, %55, %57, %59, %61, %63, %65, %67, %69, %71, %73, %75, %77, %79, %81, %83, %85, %87, %89, %91, %93, %95, %97, %99
  %102 = phi i32 [ %34, %99 ], [ %98, %97 ], [ %34, %95 ], [ %34, %93 ], [ %34, %91 ], [ %34, %89 ], [ %34, %87 ], [ %34, %85 ], [ %34, %83 ], [ %34, %81 ], [ %34, %79 ], [ %34, %77 ], [ %34, %75 ], [ %34, %73 ], [ %34, %71 ], [ %34, %69 ], [ %34, %67 ], [ %34, %65 ], [ %34, %63 ], [ %34, %61 ], [ %34, %59 ], [ %34, %57 ], [ %34, %55 ], [ %34, %53 ], [ %34, %41 ], [ %34, %51 ], [ %34, %9 ]
  %103 = phi i32 [ %32, %99 ], [ %32, %97 ], [ %32, %95 ], [ %94, %93 ], [ %32, %91 ], [ %32, %89 ], [ %32, %87 ], [ %32, %85 ], [ %32, %83 ], [ %32, %81 ], [ %32, %79 ], [ %32, %77 ], [ %32, %75 ], [ %32, %73 ], [ %32, %71 ], [ %32, %69 ], [ %32, %67 ], [ %32, %65 ], [ %32, %63 ], [ %32, %61 ], [ %32, %59 ], [ %32, %57 ], [ %32, %55 ], [ %32, %53 ], [ %32, %41 ], [ %32, %51 ], [ %32, %9 ]
  %104 = phi i32 [ %30, %99 ], [ %30, %97 ], [ %30, %95 ], [ %30, %93 ], [ %30, %91 ], [ %90, %89 ], [ %30, %87 ], [ %30, %85 ], [ %30, %83 ], [ %30, %81 ], [ %30, %79 ], [ %30, %77 ], [ %30, %75 ], [ %30, %73 ], [ %30, %71 ], [ %30, %69 ], [ %30, %67 ], [ %30, %65 ], [ %30, %63 ], [ %30, %61 ], [ %30, %59 ], [ %30, %57 ], [ %30, %55 ], [ %30, %53 ], [ %30, %41 ], [ %30, %51 ], [ %30, %9 ]
  %105 = phi i32 [ %28, %99 ], [ %28, %97 ], [ %28, %95 ], [ %28, %93 ], [ %28, %91 ], [ %28, %89 ], [ %28, %87 ], [ %86, %85 ], [ %28, %83 ], [ %28, %81 ], [ %28, %79 ], [ %28, %77 ], [ %28, %75 ], [ %28, %73 ], [ %28, %71 ], [ %28, %69 ], [ %28, %67 ], [ %28, %65 ], [ %28, %63 ], [ %28, %61 ], [ %28, %59 ], [ %28, %57 ], [ %28, %55 ], [ %28, %53 ], [ %28, %41 ], [ %28, %51 ], [ %28, %9 ]
  %106 = phi i32 [ %26, %99 ], [ %26, %97 ], [ %26, %95 ], [ %26, %93 ], [ %26, %91 ], [ %26, %89 ], [ %26, %87 ], [ %26, %85 ], [ %26, %83 ], [ %82, %81 ], [ %26, %79 ], [ %26, %77 ], [ %26, %75 ], [ %26, %73 ], [ %26, %71 ], [ %26, %69 ], [ %26, %67 ], [ %26, %65 ], [ %26, %63 ], [ %26, %61 ], [ %26, %59 ], [ %26, %57 ], [ %26, %55 ], [ %26, %53 ], [ %26, %41 ], [ %26, %51 ], [ %26, %9 ]
  %107 = phi i32 [ %24, %99 ], [ %24, %97 ], [ %24, %95 ], [ %24, %93 ], [ %24, %91 ], [ %24, %89 ], [ %24, %87 ], [ %24, %85 ], [ %24, %83 ], [ %24, %81 ], [ %24, %79 ], [ %78, %77 ], [ %24, %75 ], [ %24, %73 ], [ %24, %71 ], [ %24, %69 ], [ %24, %67 ], [ %24, %65 ], [ %24, %63 ], [ %24, %61 ], [ %24, %59 ], [ %24, %57 ], [ %24, %55 ], [ %24, %53 ], [ %24, %41 ], [ %24, %51 ], [ %24, %9 ]
  %108 = phi i32 [ %22, %99 ], [ %22, %97 ], [ %22, %95 ], [ %22, %93 ], [ %22, %91 ], [ %22, %89 ], [ %22, %87 ], [ %22, %85 ], [ %22, %83 ], [ %22, %81 ], [ %22, %79 ], [ %22, %77 ], [ %22, %75 ], [ %74, %73 ], [ %22, %71 ], [ %22, %69 ], [ %22, %67 ], [ %22, %65 ], [ %22, %63 ], [ %22, %61 ], [ %22, %59 ], [ %22, %57 ], [ %22, %55 ], [ %22, %53 ], [ %22, %41 ], [ %22, %51 ], [ %22, %9 ]
  %109 = phi i32 [ %20, %99 ], [ %20, %97 ], [ %20, %95 ], [ %20, %93 ], [ %20, %91 ], [ %20, %89 ], [ %20, %87 ], [ %20, %85 ], [ %20, %83 ], [ %20, %81 ], [ %20, %79 ], [ %20, %77 ], [ %20, %75 ], [ %20, %73 ], [ %20, %71 ], [ %70, %69 ], [ %20, %67 ], [ %20, %65 ], [ %20, %63 ], [ %20, %61 ], [ %20, %59 ], [ %20, %57 ], [ %20, %55 ], [ %20, %53 ], [ %20, %41 ], [ %20, %51 ], [ %20, %9 ]
  %110 = phi i32 [ %18, %99 ], [ %18, %97 ], [ %18, %95 ], [ %18, %93 ], [ %18, %91 ], [ %18, %89 ], [ %18, %87 ], [ %18, %85 ], [ %18, %83 ], [ %18, %81 ], [ %18, %79 ], [ %18, %77 ], [ %18, %75 ], [ %18, %73 ], [ %18, %71 ], [ %18, %69 ], [ %18, %67 ], [ %66, %65 ], [ %18, %63 ], [ %18, %61 ], [ %18, %59 ], [ %18, %57 ], [ %18, %55 ], [ %18, %53 ], [ %18, %41 ], [ %18, %51 ], [ %18, %9 ]
  %111 = phi i32 [ %16, %99 ], [ %16, %97 ], [ %16, %95 ], [ %16, %93 ], [ %16, %91 ], [ %16, %89 ], [ %16, %87 ], [ %16, %85 ], [ %16, %83 ], [ %16, %81 ], [ %16, %79 ], [ %16, %77 ], [ %16, %75 ], [ %16, %73 ], [ %16, %71 ], [ %16, %69 ], [ %16, %67 ], [ %16, %65 ], [ %16, %63 ], [ %62, %61 ], [ %16, %59 ], [ %16, %57 ], [ %16, %55 ], [ %16, %53 ], [ %16, %41 ], [ %16, %51 ], [ %16, %9 ]
  %112 = phi i32 [ %14, %99 ], [ %14, %97 ], [ %14, %95 ], [ %14, %93 ], [ %14, %91 ], [ %14, %89 ], [ %14, %87 ], [ %14, %85 ], [ %14, %83 ], [ %14, %81 ], [ %14, %79 ], [ %14, %77 ], [ %14, %75 ], [ %14, %73 ], [ %14, %71 ], [ %14, %69 ], [ %14, %67 ], [ %14, %65 ], [ %14, %63 ], [ %14, %61 ], [ %14, %59 ], [ %58, %57 ], [ %14, %55 ], [ %14, %53 ], [ %14, %41 ], [ %14, %51 ], [ %14, %9 ]
  %113 = phi i32 [ %12, %99 ], [ %12, %97 ], [ %12, %95 ], [ %12, %93 ], [ %12, %91 ], [ %12, %89 ], [ %12, %87 ], [ %12, %85 ], [ %12, %83 ], [ %12, %81 ], [ %12, %79 ], [ %12, %77 ], [ %12, %75 ], [ %12, %73 ], [ %12, %71 ], [ %12, %69 ], [ %12, %67 ], [ %12, %65 ], [ %12, %63 ], [ %12, %61 ], [ %12, %59 ], [ %12, %57 ], [ %12, %55 ], [ %54, %53 ], [ %12, %41 ], [ %12, %51 ], [ %12, %9 ]
  %114 = phi i32 [ %10, %99 ], [ %10, %97 ], [ %10, %95 ], [ %10, %93 ], [ %10, %91 ], [ %10, %89 ], [ %10, %87 ], [ %10, %85 ], [ %10, %83 ], [ %10, %81 ], [ %10, %79 ], [ %10, %77 ], [ %10, %75 ], [ %10, %73 ], [ %10, %71 ], [ %10, %69 ], [ %10, %67 ], [ %10, %65 ], [ %10, %63 ], [ %10, %61 ], [ %10, %59 ], [ %10, %57 ], [ %10, %55 ], [ %10, %53 ], [ %42, %41 ], [ %10, %51 ], [ %10, %9 ]
  %115 = phi i32 [ %11, %99 ], [ %11, %97 ], [ %11, %95 ], [ %11, %93 ], [ %11, %91 ], [ %11, %89 ], [ %11, %87 ], [ %11, %85 ], [ %11, %83 ], [ %11, %81 ], [ %11, %79 ], [ %11, %77 ], [ %11, %75 ], [ %11, %73 ], [ %11, %71 ], [ %11, %69 ], [ %11, %67 ], [ %11, %65 ], [ %11, %63 ], [ %11, %61 ], [ %11, %59 ], [ %11, %57 ], [ %11, %55 ], [ %11, %53 ], [ %11, %41 ], [ %52, %51 ], [ %11, %9 ]
  %116 = phi i32 [ %13, %99 ], [ %13, %97 ], [ %13, %95 ], [ %13, %93 ], [ %13, %91 ], [ %13, %89 ], [ %13, %87 ], [ %13, %85 ], [ %13, %83 ], [ %13, %81 ], [ %13, %79 ], [ %13, %77 ], [ %13, %75 ], [ %13, %73 ], [ %13, %71 ], [ %13, %69 ], [ %13, %67 ], [ %13, %65 ], [ %13, %63 ], [ %13, %61 ], [ %13, %59 ], [ %13, %57 ], [ %56, %55 ], [ %13, %53 ], [ %13, %41 ], [ %13, %51 ], [ %13, %9 ]
  %117 = phi i32 [ %15, %99 ], [ %15, %97 ], [ %15, %95 ], [ %15, %93 ], [ %15, %91 ], [ %15, %89 ], [ %15, %87 ], [ %15, %85 ], [ %15, %83 ], [ %15, %81 ], [ %15, %79 ], [ %15, %77 ], [ %15, %75 ], [ %15, %73 ], [ %15, %71 ], [ %15, %69 ], [ %15, %67 ], [ %15, %65 ], [ %15, %63 ], [ %15, %61 ], [ %60, %59 ], [ %15, %57 ], [ %15, %55 ], [ %15, %53 ], [ %15, %41 ], [ %15, %51 ], [ %15, %9 ]
  %118 = phi i32 [ %17, %99 ], [ %17, %97 ], [ %17, %95 ], [ %17, %93 ], [ %17, %91 ], [ %17, %89 ], [ %17, %87 ], [ %17, %85 ], [ %17, %83 ], [ %17, %81 ], [ %17, %79 ], [ %17, %77 ], [ %17, %75 ], [ %17, %73 ], [ %17, %71 ], [ %17, %69 ], [ %17, %67 ], [ %17, %65 ], [ %64, %63 ], [ %17, %61 ], [ %17, %59 ], [ %17, %57 ], [ %17, %55 ], [ %17, %53 ], [ %17, %41 ], [ %17, %51 ], [ %17, %9 ]
  %119 = phi i32 [ %19, %99 ], [ %19, %97 ], [ %19, %95 ], [ %19, %93 ], [ %19, %91 ], [ %19, %89 ], [ %19, %87 ], [ %19, %85 ], [ %19, %83 ], [ %19, %81 ], [ %19, %79 ], [ %19, %77 ], [ %19, %75 ], [ %19, %73 ], [ %19, %71 ], [ %19, %69 ], [ %68, %67 ], [ %19, %65 ], [ %19, %63 ], [ %19, %61 ], [ %19, %59 ], [ %19, %57 ], [ %19, %55 ], [ %19, %53 ], [ %19, %41 ], [ %19, %51 ], [ %19, %9 ]
  %120 = phi i32 [ %21, %99 ], [ %21, %97 ], [ %21, %95 ], [ %21, %93 ], [ %21, %91 ], [ %21, %89 ], [ %21, %87 ], [ %21, %85 ], [ %21, %83 ], [ %21, %81 ], [ %21, %79 ], [ %21, %77 ], [ %21, %75 ], [ %21, %73 ], [ %72, %71 ], [ %21, %69 ], [ %21, %67 ], [ %21, %65 ], [ %21, %63 ], [ %21, %61 ], [ %21, %59 ], [ %21, %57 ], [ %21, %55 ], [ %21, %53 ], [ %21, %41 ], [ %21, %51 ], [ %21, %9 ]
  %121 = phi i32 [ %23, %99 ], [ %23, %97 ], [ %23, %95 ], [ %23, %93 ], [ %23, %91 ], [ %23, %89 ], [ %23, %87 ], [ %23, %85 ], [ %23, %83 ], [ %23, %81 ], [ %23, %79 ], [ %23, %77 ], [ %76, %75 ], [ %23, %73 ], [ %23, %71 ], [ %23, %69 ], [ %23, %67 ], [ %23, %65 ], [ %23, %63 ], [ %23, %61 ], [ %23, %59 ], [ %23, %57 ], [ %23, %55 ], [ %23, %53 ], [ %23, %41 ], [ %23, %51 ], [ %23, %9 ]
  %122 = phi i32 [ %25, %99 ], [ %25, %97 ], [ %25, %95 ], [ %25, %93 ], [ %25, %91 ], [ %25, %89 ], [ %25, %87 ], [ %25, %85 ], [ %25, %83 ], [ %25, %81 ], [ %80, %79 ], [ %25, %77 ], [ %25, %75 ], [ %25, %73 ], [ %25, %71 ], [ %25, %69 ], [ %25, %67 ], [ %25, %65 ], [ %25, %63 ], [ %25, %61 ], [ %25, %59 ], [ %25, %57 ], [ %25, %55 ], [ %25, %53 ], [ %25, %41 ], [ %25, %51 ], [ %25, %9 ]
  %123 = phi i32 [ %27, %99 ], [ %27, %97 ], [ %27, %95 ], [ %27, %93 ], [ %27, %91 ], [ %27, %89 ], [ %27, %87 ], [ %27, %85 ], [ %84, %83 ], [ %27, %81 ], [ %27, %79 ], [ %27, %77 ], [ %27, %75 ], [ %27, %73 ], [ %27, %71 ], [ %27, %69 ], [ %27, %67 ], [ %27, %65 ], [ %27, %63 ], [ %27, %61 ], [ %27, %59 ], [ %27, %57 ], [ %27, %55 ], [ %27, %53 ], [ %27, %41 ], [ %27, %51 ], [ %27, %9 ]
  %124 = phi i32 [ %29, %99 ], [ %29, %97 ], [ %29, %95 ], [ %29, %93 ], [ %29, %91 ], [ %29, %89 ], [ %88, %87 ], [ %29, %85 ], [ %29, %83 ], [ %29, %81 ], [ %29, %79 ], [ %29, %77 ], [ %29, %75 ], [ %29, %73 ], [ %29, %71 ], [ %29, %69 ], [ %29, %67 ], [ %29, %65 ], [ %29, %63 ], [ %29, %61 ], [ %29, %59 ], [ %29, %57 ], [ %29, %55 ], [ %29, %53 ], [ %29, %41 ], [ %29, %51 ], [ %29, %9 ]
  %125 = phi i32 [ %31, %99 ], [ %31, %97 ], [ %31, %95 ], [ %31, %93 ], [ %92, %91 ], [ %31, %89 ], [ %31, %87 ], [ %31, %85 ], [ %31, %83 ], [ %31, %81 ], [ %31, %79 ], [ %31, %77 ], [ %31, %75 ], [ %31, %73 ], [ %31, %71 ], [ %31, %69 ], [ %31, %67 ], [ %31, %65 ], [ %31, %63 ], [ %31, %61 ], [ %31, %59 ], [ %31, %57 ], [ %31, %55 ], [ %31, %53 ], [ %31, %41 ], [ %31, %51 ], [ %31, %9 ]
  %126 = phi i32 [ %33, %99 ], [ %33, %97 ], [ %96, %95 ], [ %33, %93 ], [ %33, %91 ], [ %33, %89 ], [ %33, %87 ], [ %33, %85 ], [ %33, %83 ], [ %33, %81 ], [ %33, %79 ], [ %33, %77 ], [ %33, %75 ], [ %33, %73 ], [ %33, %71 ], [ %33, %69 ], [ %33, %67 ], [ %33, %65 ], [ %33, %63 ], [ %33, %61 ], [ %33, %59 ], [ %33, %57 ], [ %33, %55 ], [ %33, %53 ], [ %33, %41 ], [ %33, %51 ], [ %33, %9 ]
  %127 = phi i32 [ %100, %99 ], [ %35, %97 ], [ %35, %95 ], [ %35, %93 ], [ %35, %91 ], [ %35, %89 ], [ %35, %87 ], [ %35, %85 ], [ %35, %83 ], [ %35, %81 ], [ %35, %79 ], [ %35, %77 ], [ %35, %75 ], [ %35, %73 ], [ %35, %71 ], [ %35, %69 ], [ %35, %67 ], [ %35, %65 ], [ %35, %63 ], [ %35, %61 ], [ %35, %59 ], [ %35, %57 ], [ %35, %55 ], [ %35, %53 ], [ %35, %41 ], [ %35, %51 ], [ %35, %9 ]
  %128 = getelementptr inbounds i8, i8* %36, i64 1
  %129 = icmp ult i8* %128, %7
  br i1 %129, label %9, label %39, !llvm.loop !8

130:                                              ; preds = %45
  %131 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 98, i32 %115)
  %132 = add nuw nsw i32 %46, 1
  br label %133

133:                                              ; preds = %130, %45
  %134 = phi i32 [ %132, %130 ], [ %46, %45 ]
  %135 = icmp eq i32 %113, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %133
  %137 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 99, i32 %113)
  %138 = add nuw nsw i32 %134, 1
  br label %139

139:                                              ; preds = %136, %133
  %140 = phi i32 [ %138, %136 ], [ %134, %133 ]
  %141 = icmp eq i32 %116, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %139
  %143 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 100, i32 %116)
  %144 = add nuw nsw i32 %140, 1
  br label %145

145:                                              ; preds = %142, %139
  %146 = phi i32 [ %144, %142 ], [ %140, %139 ]
  %147 = icmp eq i32 %112, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %145
  %149 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 101, i32 %112)
  %150 = add nuw nsw i32 %146, 1
  br label %151

151:                                              ; preds = %148, %145
  %152 = phi i32 [ %150, %148 ], [ %146, %145 ]
  %153 = icmp eq i32 %117, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %151
  %155 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 102, i32 %117)
  %156 = add nuw nsw i32 %152, 1
  br label %157

157:                                              ; preds = %154, %151
  %158 = phi i32 [ %156, %154 ], [ %152, %151 ]
  %159 = icmp eq i32 %111, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %157
  %161 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 103, i32 %111)
  %162 = add nuw nsw i32 %158, 1
  br label %163

163:                                              ; preds = %160, %157
  %164 = phi i32 [ %162, %160 ], [ %158, %157 ]
  %165 = icmp eq i32 %118, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %163
  %167 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 104, i32 %118)
  %168 = add nuw nsw i32 %164, 1
  br label %169

169:                                              ; preds = %166, %163
  %170 = phi i32 [ %168, %166 ], [ %164, %163 ]
  %171 = icmp eq i32 %110, 0
  br i1 %171, label %175, label %172

172:                                              ; preds = %169
  %173 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 105, i32 %110)
  %174 = add nuw nsw i32 %170, 1
  br label %175

175:                                              ; preds = %172, %169
  %176 = phi i32 [ %174, %172 ], [ %170, %169 ]
  %177 = icmp eq i32 %119, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %175
  %179 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 106, i32 %119)
  %180 = add nuw nsw i32 %176, 1
  br label %181

181:                                              ; preds = %178, %175
  %182 = phi i32 [ %180, %178 ], [ %176, %175 ]
  %183 = icmp eq i32 %109, 0
  br i1 %183, label %187, label %184

184:                                              ; preds = %181
  %185 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 107, i32 %109)
  %186 = add nuw nsw i32 %182, 1
  br label %187

187:                                              ; preds = %184, %181
  %188 = phi i32 [ %186, %184 ], [ %182, %181 ]
  %189 = icmp eq i32 %120, 0
  br i1 %189, label %193, label %190

190:                                              ; preds = %187
  %191 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 108, i32 %120)
  %192 = add nuw nsw i32 %188, 1
  br label %193

193:                                              ; preds = %190, %187
  %194 = phi i32 [ %192, %190 ], [ %188, %187 ]
  %195 = icmp eq i32 %108, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %193
  %197 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 109, i32 %108)
  %198 = add nuw nsw i32 %194, 1
  br label %199

199:                                              ; preds = %196, %193
  %200 = phi i32 [ %198, %196 ], [ %194, %193 ]
  %201 = icmp eq i32 %121, 0
  br i1 %201, label %205, label %202

202:                                              ; preds = %199
  %203 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 110, i32 %121)
  %204 = add nuw nsw i32 %200, 1
  br label %205

205:                                              ; preds = %202, %199
  %206 = phi i32 [ %204, %202 ], [ %200, %199 ]
  %207 = icmp eq i32 %107, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %205
  %209 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 111, i32 %107)
  %210 = add nuw nsw i32 %206, 1
  br label %211

211:                                              ; preds = %208, %205
  %212 = phi i32 [ %210, %208 ], [ %206, %205 ]
  %213 = icmp eq i32 %122, 0
  br i1 %213, label %217, label %214

214:                                              ; preds = %211
  %215 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112, i32 %122)
  %216 = add nuw nsw i32 %212, 1
  br label %217

217:                                              ; preds = %214, %211
  %218 = phi i32 [ %216, %214 ], [ %212, %211 ]
  %219 = icmp eq i32 %106, 0
  br i1 %219, label %223, label %220

220:                                              ; preds = %217
  %221 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 113, i32 %106)
  %222 = add nuw nsw i32 %218, 1
  br label %223

223:                                              ; preds = %220, %217
  %224 = phi i32 [ %222, %220 ], [ %218, %217 ]
  %225 = icmp eq i32 %123, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %223
  %227 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 114, i32 %123)
  %228 = add nuw nsw i32 %224, 1
  br label %229

229:                                              ; preds = %226, %223
  %230 = phi i32 [ %228, %226 ], [ %224, %223 ]
  %231 = icmp eq i32 %105, 0
  br i1 %231, label %235, label %232

232:                                              ; preds = %229
  %233 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 115, i32 %105)
  %234 = add nuw nsw i32 %230, 1
  br label %235

235:                                              ; preds = %232, %229
  %236 = phi i32 [ %234, %232 ], [ %230, %229 ]
  %237 = icmp eq i32 %124, 0
  br i1 %237, label %241, label %238

238:                                              ; preds = %235
  %239 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 116, i32 %124)
  %240 = add nuw nsw i32 %236, 1
  br label %241

241:                                              ; preds = %238, %235
  %242 = phi i32 [ %240, %238 ], [ %236, %235 ]
  %243 = icmp eq i32 %104, 0
  br i1 %243, label %247, label %244

244:                                              ; preds = %241
  %245 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 117, i32 %104)
  %246 = add nuw nsw i32 %242, 1
  br label %247

247:                                              ; preds = %244, %241
  %248 = phi i32 [ %246, %244 ], [ %242, %241 ]
  %249 = icmp eq i32 %125, 0
  br i1 %249, label %253, label %250

250:                                              ; preds = %247
  %251 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 118, i32 %125)
  %252 = add nuw nsw i32 %248, 1
  br label %253

253:                                              ; preds = %250, %247
  %254 = phi i32 [ %252, %250 ], [ %248, %247 ]
  %255 = icmp eq i32 %103, 0
  br i1 %255, label %259, label %256

256:                                              ; preds = %253
  %257 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 119, i32 %103)
  %258 = add nuw nsw i32 %254, 1
  br label %259

259:                                              ; preds = %256, %253
  %260 = phi i32 [ %258, %256 ], [ %254, %253 ]
  %261 = icmp eq i32 %126, 0
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 120, i32 %126)
  %264 = add nuw nsw i32 %260, 1
  br label %265

265:                                              ; preds = %262, %259
  %266 = phi i32 [ %264, %262 ], [ %260, %259 ]
  %267 = icmp eq i32 %102, 0
  br i1 %267, label %271, label %268

268:                                              ; preds = %265
  %269 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 121, i32 %102)
  %270 = add nuw nsw i32 %266, 1
  br label %271

271:                                              ; preds = %268, %265
  %272 = phi i32 [ %270, %268 ], [ %266, %265 ]
  %273 = icmp eq i32 %127, 0
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 122, i32 %127)
  br label %50

276:                                              ; preds = %271
  %277 = icmp eq i32 %272, 0
  br i1 %277, label %48, label %50
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @gets(...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
