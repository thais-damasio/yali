; ModuleID = 'source-C-CXX/99/1033.c'
source_filename = "source-C-CXX/99/1033.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"%c=%d\0A\00", align 1
@str = private unnamed_addr constant [3 x i8] c"No\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca [300 x i8], align 16
  %2 = getelementptr inbounds [300 x i8], [300 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 300, i8* nonnull %2) #5
  %3 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %2)
  %4 = call i64 @strlen(i8* noundef nonnull %2) #6
  %5 = trunc i64 %4 to i32
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %227

7:                                                ; preds = %0
  %8 = and i64 %4, 4294967295
  br label %9

9:                                                ; preds = %7, %100
  %10 = phi i32 [ 0, %7 ], [ %114, %100 ]
  %11 = phi i32 [ 0, %7 ], [ %112, %100 ]
  %12 = phi i32 [ 0, %7 ], [ %115, %100 ]
  %13 = phi i32 [ 0, %7 ], [ %111, %100 ]
  %14 = phi i32 [ 0, %7 ], [ %116, %100 ]
  %15 = phi i32 [ 0, %7 ], [ %110, %100 ]
  %16 = phi i32 [ 0, %7 ], [ %117, %100 ]
  %17 = phi i32 [ 0, %7 ], [ %109, %100 ]
  %18 = phi i32 [ 0, %7 ], [ %118, %100 ]
  %19 = phi i32 [ 0, %7 ], [ %108, %100 ]
  %20 = phi i32 [ 0, %7 ], [ %119, %100 ]
  %21 = phi i32 [ 0, %7 ], [ %107, %100 ]
  %22 = phi i32 [ 0, %7 ], [ %120, %100 ]
  %23 = phi i32 [ 0, %7 ], [ %106, %100 ]
  %24 = phi i32 [ 0, %7 ], [ %121, %100 ]
  %25 = phi i32 [ 0, %7 ], [ %105, %100 ]
  %26 = phi i32 [ 0, %7 ], [ %122, %100 ]
  %27 = phi i32 [ 0, %7 ], [ %104, %100 ]
  %28 = phi i32 [ 0, %7 ], [ %123, %100 ]
  %29 = phi i32 [ 0, %7 ], [ %103, %100 ]
  %30 = phi i32 [ 0, %7 ], [ %124, %100 ]
  %31 = phi i32 [ 0, %7 ], [ %102, %100 ]
  %32 = phi i32 [ 0, %7 ], [ %125, %100 ]
  %33 = phi i32 [ 0, %7 ], [ %101, %100 ]
  %34 = phi i32 [ 0, %7 ], [ %126, %100 ]
  %35 = phi i32 [ 0, %7 ], [ %113, %100 ]
  %36 = phi i64 [ 0, %7 ], [ %127, %100 ]
  %37 = getelementptr inbounds [300 x i8], [300 x i8]* %1, i64 0, i64 %36
  %38 = load i8, i8* %37, align 1, !tbaa !5
  switch i8 %38, label %100 [
    i8 97, label %41
    i8 98, label %50
    i8 99, label %52
    i8 100, label %54
    i8 101, label %56
    i8 102, label %58
    i8 103, label %60
    i8 104, label %62
    i8 105, label %64
    i8 106, label %66
    i8 107, label %68
    i8 108, label %70
    i8 109, label %72
    i8 110, label %74
    i8 111, label %76
    i8 112, label %78
    i8 113, label %80
    i8 114, label %82
    i8 115, label %84
    i8 116, label %86
    i8 117, label %88
    i8 118, label %90
    i8 119, label %92
    i8 120, label %94
    i8 121, label %96
    i8 122, label %98
  ]

39:                                               ; preds = %100
  %40 = icmp sgt i32 %113, 0
  br i1 %40, label %43, label %45

41:                                               ; preds = %9
  %42 = add nsw i32 %35, 1
  br label %100

43:                                               ; preds = %39
  %44 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 97, i32 %113)
  br label %45

45:                                               ; preds = %39, %43
  %46 = icmp sgt i32 %114, 0
  br i1 %46, label %129, label %131

47:                                               ; preds = %227
  %48 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str, i64 0, i64 0))
  br label %49

49:                                               ; preds = %47, %227
  call void @llvm.lifetime.end.p0i8(i64 300, i8* nonnull %2) #5
  ret i32 0

50:                                               ; preds = %9
  %51 = add nsw i32 %10, 1
  br label %100

52:                                               ; preds = %9
  %53 = add nsw i32 %11, 1
  br label %100

54:                                               ; preds = %9
  %55 = add nsw i32 %12, 1
  br label %100

56:                                               ; preds = %9
  %57 = add nsw i32 %13, 1
  br label %100

58:                                               ; preds = %9
  %59 = add nsw i32 %14, 1
  br label %100

60:                                               ; preds = %9
  %61 = add nsw i32 %15, 1
  br label %100

62:                                               ; preds = %9
  %63 = add nsw i32 %16, 1
  br label %100

64:                                               ; preds = %9
  %65 = add nsw i32 %17, 1
  br label %100

66:                                               ; preds = %9
  %67 = add nsw i32 %18, 1
  br label %100

68:                                               ; preds = %9
  %69 = add nsw i32 %19, 1
  br label %100

70:                                               ; preds = %9
  %71 = add nsw i32 %20, 1
  br label %100

72:                                               ; preds = %9
  %73 = add nsw i32 %21, 1
  br label %100

74:                                               ; preds = %9
  %75 = add nsw i32 %22, 1
  br label %100

76:                                               ; preds = %9
  %77 = add nsw i32 %23, 1
  br label %100

78:                                               ; preds = %9
  %79 = add nsw i32 %24, 1
  br label %100

80:                                               ; preds = %9
  %81 = add nsw i32 %25, 1
  br label %100

82:                                               ; preds = %9
  %83 = add nsw i32 %26, 1
  br label %100

84:                                               ; preds = %9
  %85 = add nsw i32 %27, 1
  br label %100

86:                                               ; preds = %9
  %87 = add nsw i32 %28, 1
  br label %100

88:                                               ; preds = %9
  %89 = add nsw i32 %29, 1
  br label %100

90:                                               ; preds = %9
  %91 = add nsw i32 %30, 1
  br label %100

92:                                               ; preds = %9
  %93 = add nsw i32 %31, 1
  br label %100

94:                                               ; preds = %9
  %95 = add nsw i32 %32, 1
  br label %100

96:                                               ; preds = %9
  %97 = add nsw i32 %33, 1
  br label %100

98:                                               ; preds = %9
  %99 = add nsw i32 %34, 1
  br label %100

100:                                              ; preds = %9, %50, %41, %52, %54, %56, %58, %60, %62, %64, %66, %68, %70, %72, %74, %76, %78, %80, %82, %84, %86, %88, %90, %92, %94, %96, %98
  %101 = phi i32 [ %33, %98 ], [ %97, %96 ], [ %33, %94 ], [ %33, %92 ], [ %33, %90 ], [ %33, %88 ], [ %33, %86 ], [ %33, %84 ], [ %33, %82 ], [ %33, %80 ], [ %33, %78 ], [ %33, %76 ], [ %33, %74 ], [ %33, %72 ], [ %33, %70 ], [ %33, %68 ], [ %33, %66 ], [ %33, %64 ], [ %33, %62 ], [ %33, %60 ], [ %33, %58 ], [ %33, %56 ], [ %33, %54 ], [ %33, %52 ], [ %33, %41 ], [ %33, %50 ], [ %33, %9 ]
  %102 = phi i32 [ %31, %98 ], [ %31, %96 ], [ %31, %94 ], [ %93, %92 ], [ %31, %90 ], [ %31, %88 ], [ %31, %86 ], [ %31, %84 ], [ %31, %82 ], [ %31, %80 ], [ %31, %78 ], [ %31, %76 ], [ %31, %74 ], [ %31, %72 ], [ %31, %70 ], [ %31, %68 ], [ %31, %66 ], [ %31, %64 ], [ %31, %62 ], [ %31, %60 ], [ %31, %58 ], [ %31, %56 ], [ %31, %54 ], [ %31, %52 ], [ %31, %41 ], [ %31, %50 ], [ %31, %9 ]
  %103 = phi i32 [ %29, %98 ], [ %29, %96 ], [ %29, %94 ], [ %29, %92 ], [ %29, %90 ], [ %89, %88 ], [ %29, %86 ], [ %29, %84 ], [ %29, %82 ], [ %29, %80 ], [ %29, %78 ], [ %29, %76 ], [ %29, %74 ], [ %29, %72 ], [ %29, %70 ], [ %29, %68 ], [ %29, %66 ], [ %29, %64 ], [ %29, %62 ], [ %29, %60 ], [ %29, %58 ], [ %29, %56 ], [ %29, %54 ], [ %29, %52 ], [ %29, %41 ], [ %29, %50 ], [ %29, %9 ]
  %104 = phi i32 [ %27, %98 ], [ %27, %96 ], [ %27, %94 ], [ %27, %92 ], [ %27, %90 ], [ %27, %88 ], [ %27, %86 ], [ %85, %84 ], [ %27, %82 ], [ %27, %80 ], [ %27, %78 ], [ %27, %76 ], [ %27, %74 ], [ %27, %72 ], [ %27, %70 ], [ %27, %68 ], [ %27, %66 ], [ %27, %64 ], [ %27, %62 ], [ %27, %60 ], [ %27, %58 ], [ %27, %56 ], [ %27, %54 ], [ %27, %52 ], [ %27, %41 ], [ %27, %50 ], [ %27, %9 ]
  %105 = phi i32 [ %25, %98 ], [ %25, %96 ], [ %25, %94 ], [ %25, %92 ], [ %25, %90 ], [ %25, %88 ], [ %25, %86 ], [ %25, %84 ], [ %25, %82 ], [ %81, %80 ], [ %25, %78 ], [ %25, %76 ], [ %25, %74 ], [ %25, %72 ], [ %25, %70 ], [ %25, %68 ], [ %25, %66 ], [ %25, %64 ], [ %25, %62 ], [ %25, %60 ], [ %25, %58 ], [ %25, %56 ], [ %25, %54 ], [ %25, %52 ], [ %25, %41 ], [ %25, %50 ], [ %25, %9 ]
  %106 = phi i32 [ %23, %98 ], [ %23, %96 ], [ %23, %94 ], [ %23, %92 ], [ %23, %90 ], [ %23, %88 ], [ %23, %86 ], [ %23, %84 ], [ %23, %82 ], [ %23, %80 ], [ %23, %78 ], [ %77, %76 ], [ %23, %74 ], [ %23, %72 ], [ %23, %70 ], [ %23, %68 ], [ %23, %66 ], [ %23, %64 ], [ %23, %62 ], [ %23, %60 ], [ %23, %58 ], [ %23, %56 ], [ %23, %54 ], [ %23, %52 ], [ %23, %41 ], [ %23, %50 ], [ %23, %9 ]
  %107 = phi i32 [ %21, %98 ], [ %21, %96 ], [ %21, %94 ], [ %21, %92 ], [ %21, %90 ], [ %21, %88 ], [ %21, %86 ], [ %21, %84 ], [ %21, %82 ], [ %21, %80 ], [ %21, %78 ], [ %21, %76 ], [ %21, %74 ], [ %73, %72 ], [ %21, %70 ], [ %21, %68 ], [ %21, %66 ], [ %21, %64 ], [ %21, %62 ], [ %21, %60 ], [ %21, %58 ], [ %21, %56 ], [ %21, %54 ], [ %21, %52 ], [ %21, %41 ], [ %21, %50 ], [ %21, %9 ]
  %108 = phi i32 [ %19, %98 ], [ %19, %96 ], [ %19, %94 ], [ %19, %92 ], [ %19, %90 ], [ %19, %88 ], [ %19, %86 ], [ %19, %84 ], [ %19, %82 ], [ %19, %80 ], [ %19, %78 ], [ %19, %76 ], [ %19, %74 ], [ %19, %72 ], [ %19, %70 ], [ %69, %68 ], [ %19, %66 ], [ %19, %64 ], [ %19, %62 ], [ %19, %60 ], [ %19, %58 ], [ %19, %56 ], [ %19, %54 ], [ %19, %52 ], [ %19, %41 ], [ %19, %50 ], [ %19, %9 ]
  %109 = phi i32 [ %17, %98 ], [ %17, %96 ], [ %17, %94 ], [ %17, %92 ], [ %17, %90 ], [ %17, %88 ], [ %17, %86 ], [ %17, %84 ], [ %17, %82 ], [ %17, %80 ], [ %17, %78 ], [ %17, %76 ], [ %17, %74 ], [ %17, %72 ], [ %17, %70 ], [ %17, %68 ], [ %17, %66 ], [ %65, %64 ], [ %17, %62 ], [ %17, %60 ], [ %17, %58 ], [ %17, %56 ], [ %17, %54 ], [ %17, %52 ], [ %17, %41 ], [ %17, %50 ], [ %17, %9 ]
  %110 = phi i32 [ %15, %98 ], [ %15, %96 ], [ %15, %94 ], [ %15, %92 ], [ %15, %90 ], [ %15, %88 ], [ %15, %86 ], [ %15, %84 ], [ %15, %82 ], [ %15, %80 ], [ %15, %78 ], [ %15, %76 ], [ %15, %74 ], [ %15, %72 ], [ %15, %70 ], [ %15, %68 ], [ %15, %66 ], [ %15, %64 ], [ %15, %62 ], [ %61, %60 ], [ %15, %58 ], [ %15, %56 ], [ %15, %54 ], [ %15, %52 ], [ %15, %41 ], [ %15, %50 ], [ %15, %9 ]
  %111 = phi i32 [ %13, %98 ], [ %13, %96 ], [ %13, %94 ], [ %13, %92 ], [ %13, %90 ], [ %13, %88 ], [ %13, %86 ], [ %13, %84 ], [ %13, %82 ], [ %13, %80 ], [ %13, %78 ], [ %13, %76 ], [ %13, %74 ], [ %13, %72 ], [ %13, %70 ], [ %13, %68 ], [ %13, %66 ], [ %13, %64 ], [ %13, %62 ], [ %13, %60 ], [ %13, %58 ], [ %57, %56 ], [ %13, %54 ], [ %13, %52 ], [ %13, %41 ], [ %13, %50 ], [ %13, %9 ]
  %112 = phi i32 [ %11, %98 ], [ %11, %96 ], [ %11, %94 ], [ %11, %92 ], [ %11, %90 ], [ %11, %88 ], [ %11, %86 ], [ %11, %84 ], [ %11, %82 ], [ %11, %80 ], [ %11, %78 ], [ %11, %76 ], [ %11, %74 ], [ %11, %72 ], [ %11, %70 ], [ %11, %68 ], [ %11, %66 ], [ %11, %64 ], [ %11, %62 ], [ %11, %60 ], [ %11, %58 ], [ %11, %56 ], [ %11, %54 ], [ %53, %52 ], [ %11, %41 ], [ %11, %50 ], [ %11, %9 ]
  %113 = phi i32 [ %35, %98 ], [ %35, %96 ], [ %35, %94 ], [ %35, %92 ], [ %35, %90 ], [ %35, %88 ], [ %35, %86 ], [ %35, %84 ], [ %35, %82 ], [ %35, %80 ], [ %35, %78 ], [ %35, %76 ], [ %35, %74 ], [ %35, %72 ], [ %35, %70 ], [ %35, %68 ], [ %35, %66 ], [ %35, %64 ], [ %35, %62 ], [ %35, %60 ], [ %35, %58 ], [ %35, %56 ], [ %35, %54 ], [ %35, %52 ], [ %42, %41 ], [ %35, %50 ], [ %35, %9 ]
  %114 = phi i32 [ %10, %98 ], [ %10, %96 ], [ %10, %94 ], [ %10, %92 ], [ %10, %90 ], [ %10, %88 ], [ %10, %86 ], [ %10, %84 ], [ %10, %82 ], [ %10, %80 ], [ %10, %78 ], [ %10, %76 ], [ %10, %74 ], [ %10, %72 ], [ %10, %70 ], [ %10, %68 ], [ %10, %66 ], [ %10, %64 ], [ %10, %62 ], [ %10, %60 ], [ %10, %58 ], [ %10, %56 ], [ %10, %54 ], [ %10, %52 ], [ %10, %41 ], [ %51, %50 ], [ %10, %9 ]
  %115 = phi i32 [ %12, %98 ], [ %12, %96 ], [ %12, %94 ], [ %12, %92 ], [ %12, %90 ], [ %12, %88 ], [ %12, %86 ], [ %12, %84 ], [ %12, %82 ], [ %12, %80 ], [ %12, %78 ], [ %12, %76 ], [ %12, %74 ], [ %12, %72 ], [ %12, %70 ], [ %12, %68 ], [ %12, %66 ], [ %12, %64 ], [ %12, %62 ], [ %12, %60 ], [ %12, %58 ], [ %12, %56 ], [ %55, %54 ], [ %12, %52 ], [ %12, %41 ], [ %12, %50 ], [ %12, %9 ]
  %116 = phi i32 [ %14, %98 ], [ %14, %96 ], [ %14, %94 ], [ %14, %92 ], [ %14, %90 ], [ %14, %88 ], [ %14, %86 ], [ %14, %84 ], [ %14, %82 ], [ %14, %80 ], [ %14, %78 ], [ %14, %76 ], [ %14, %74 ], [ %14, %72 ], [ %14, %70 ], [ %14, %68 ], [ %14, %66 ], [ %14, %64 ], [ %14, %62 ], [ %14, %60 ], [ %59, %58 ], [ %14, %56 ], [ %14, %54 ], [ %14, %52 ], [ %14, %41 ], [ %14, %50 ], [ %14, %9 ]
  %117 = phi i32 [ %16, %98 ], [ %16, %96 ], [ %16, %94 ], [ %16, %92 ], [ %16, %90 ], [ %16, %88 ], [ %16, %86 ], [ %16, %84 ], [ %16, %82 ], [ %16, %80 ], [ %16, %78 ], [ %16, %76 ], [ %16, %74 ], [ %16, %72 ], [ %16, %70 ], [ %16, %68 ], [ %16, %66 ], [ %16, %64 ], [ %63, %62 ], [ %16, %60 ], [ %16, %58 ], [ %16, %56 ], [ %16, %54 ], [ %16, %52 ], [ %16, %41 ], [ %16, %50 ], [ %16, %9 ]
  %118 = phi i32 [ %18, %98 ], [ %18, %96 ], [ %18, %94 ], [ %18, %92 ], [ %18, %90 ], [ %18, %88 ], [ %18, %86 ], [ %18, %84 ], [ %18, %82 ], [ %18, %80 ], [ %18, %78 ], [ %18, %76 ], [ %18, %74 ], [ %18, %72 ], [ %18, %70 ], [ %18, %68 ], [ %67, %66 ], [ %18, %64 ], [ %18, %62 ], [ %18, %60 ], [ %18, %58 ], [ %18, %56 ], [ %18, %54 ], [ %18, %52 ], [ %18, %41 ], [ %18, %50 ], [ %18, %9 ]
  %119 = phi i32 [ %20, %98 ], [ %20, %96 ], [ %20, %94 ], [ %20, %92 ], [ %20, %90 ], [ %20, %88 ], [ %20, %86 ], [ %20, %84 ], [ %20, %82 ], [ %20, %80 ], [ %20, %78 ], [ %20, %76 ], [ %20, %74 ], [ %20, %72 ], [ %71, %70 ], [ %20, %68 ], [ %20, %66 ], [ %20, %64 ], [ %20, %62 ], [ %20, %60 ], [ %20, %58 ], [ %20, %56 ], [ %20, %54 ], [ %20, %52 ], [ %20, %41 ], [ %20, %50 ], [ %20, %9 ]
  %120 = phi i32 [ %22, %98 ], [ %22, %96 ], [ %22, %94 ], [ %22, %92 ], [ %22, %90 ], [ %22, %88 ], [ %22, %86 ], [ %22, %84 ], [ %22, %82 ], [ %22, %80 ], [ %22, %78 ], [ %22, %76 ], [ %75, %74 ], [ %22, %72 ], [ %22, %70 ], [ %22, %68 ], [ %22, %66 ], [ %22, %64 ], [ %22, %62 ], [ %22, %60 ], [ %22, %58 ], [ %22, %56 ], [ %22, %54 ], [ %22, %52 ], [ %22, %41 ], [ %22, %50 ], [ %22, %9 ]
  %121 = phi i32 [ %24, %98 ], [ %24, %96 ], [ %24, %94 ], [ %24, %92 ], [ %24, %90 ], [ %24, %88 ], [ %24, %86 ], [ %24, %84 ], [ %24, %82 ], [ %24, %80 ], [ %79, %78 ], [ %24, %76 ], [ %24, %74 ], [ %24, %72 ], [ %24, %70 ], [ %24, %68 ], [ %24, %66 ], [ %24, %64 ], [ %24, %62 ], [ %24, %60 ], [ %24, %58 ], [ %24, %56 ], [ %24, %54 ], [ %24, %52 ], [ %24, %41 ], [ %24, %50 ], [ %24, %9 ]
  %122 = phi i32 [ %26, %98 ], [ %26, %96 ], [ %26, %94 ], [ %26, %92 ], [ %26, %90 ], [ %26, %88 ], [ %26, %86 ], [ %26, %84 ], [ %83, %82 ], [ %26, %80 ], [ %26, %78 ], [ %26, %76 ], [ %26, %74 ], [ %26, %72 ], [ %26, %70 ], [ %26, %68 ], [ %26, %66 ], [ %26, %64 ], [ %26, %62 ], [ %26, %60 ], [ %26, %58 ], [ %26, %56 ], [ %26, %54 ], [ %26, %52 ], [ %26, %41 ], [ %26, %50 ], [ %26, %9 ]
  %123 = phi i32 [ %28, %98 ], [ %28, %96 ], [ %28, %94 ], [ %28, %92 ], [ %28, %90 ], [ %28, %88 ], [ %87, %86 ], [ %28, %84 ], [ %28, %82 ], [ %28, %80 ], [ %28, %78 ], [ %28, %76 ], [ %28, %74 ], [ %28, %72 ], [ %28, %70 ], [ %28, %68 ], [ %28, %66 ], [ %28, %64 ], [ %28, %62 ], [ %28, %60 ], [ %28, %58 ], [ %28, %56 ], [ %28, %54 ], [ %28, %52 ], [ %28, %41 ], [ %28, %50 ], [ %28, %9 ]
  %124 = phi i32 [ %30, %98 ], [ %30, %96 ], [ %30, %94 ], [ %30, %92 ], [ %91, %90 ], [ %30, %88 ], [ %30, %86 ], [ %30, %84 ], [ %30, %82 ], [ %30, %80 ], [ %30, %78 ], [ %30, %76 ], [ %30, %74 ], [ %30, %72 ], [ %30, %70 ], [ %30, %68 ], [ %30, %66 ], [ %30, %64 ], [ %30, %62 ], [ %30, %60 ], [ %30, %58 ], [ %30, %56 ], [ %30, %54 ], [ %30, %52 ], [ %30, %41 ], [ %30, %50 ], [ %30, %9 ]
  %125 = phi i32 [ %32, %98 ], [ %32, %96 ], [ %95, %94 ], [ %32, %92 ], [ %32, %90 ], [ %32, %88 ], [ %32, %86 ], [ %32, %84 ], [ %32, %82 ], [ %32, %80 ], [ %32, %78 ], [ %32, %76 ], [ %32, %74 ], [ %32, %72 ], [ %32, %70 ], [ %32, %68 ], [ %32, %66 ], [ %32, %64 ], [ %32, %62 ], [ %32, %60 ], [ %32, %58 ], [ %32, %56 ], [ %32, %54 ], [ %32, %52 ], [ %32, %41 ], [ %32, %50 ], [ %32, %9 ]
  %126 = phi i32 [ %99, %98 ], [ %34, %96 ], [ %34, %94 ], [ %34, %92 ], [ %34, %90 ], [ %34, %88 ], [ %34, %86 ], [ %34, %84 ], [ %34, %82 ], [ %34, %80 ], [ %34, %78 ], [ %34, %76 ], [ %34, %74 ], [ %34, %72 ], [ %34, %70 ], [ %34, %68 ], [ %34, %66 ], [ %34, %64 ], [ %34, %62 ], [ %34, %60 ], [ %34, %58 ], [ %34, %56 ], [ %34, %54 ], [ %34, %52 ], [ %34, %41 ], [ %34, %50 ], [ %34, %9 ]
  %127 = add nuw nsw i64 %36, 1
  %128 = icmp eq i64 %127, %8
  br i1 %128, label %39, label %9, !llvm.loop !8

129:                                              ; preds = %45
  %130 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 98, i32 %114)
  br label %131

131:                                              ; preds = %129, %45
  %132 = icmp sgt i32 %112, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %131
  %134 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 99, i32 %112)
  br label %135

135:                                              ; preds = %133, %131
  %136 = icmp sgt i32 %115, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %135
  %138 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 100, i32 %115)
  br label %139

139:                                              ; preds = %137, %135
  %140 = icmp sgt i32 %111, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %139
  %142 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 101, i32 %111)
  br label %143

143:                                              ; preds = %141, %139
  %144 = icmp sgt i32 %116, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %143
  %146 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 102, i32 %116)
  br label %147

147:                                              ; preds = %145, %143
  %148 = icmp sgt i32 %110, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %147
  %150 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 103, i32 %110)
  br label %151

151:                                              ; preds = %149, %147
  %152 = icmp sgt i32 %117, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %151
  %154 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 104, i32 %117)
  br label %155

155:                                              ; preds = %153, %151
  %156 = icmp sgt i32 %109, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %155
  %158 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 105, i32 %109)
  br label %159

159:                                              ; preds = %157, %155
  %160 = icmp sgt i32 %118, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %159
  %162 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 106, i32 %118)
  br label %163

163:                                              ; preds = %161, %159
  %164 = icmp sgt i32 %108, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 107, i32 %108)
  br label %167

167:                                              ; preds = %165, %163
  %168 = icmp sgt i32 %119, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %167
  %170 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 108, i32 %119)
  br label %171

171:                                              ; preds = %169, %167
  %172 = icmp sgt i32 %107, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %171
  %174 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 109, i32 %107)
  br label %175

175:                                              ; preds = %173, %171
  %176 = icmp sgt i32 %120, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %175
  %178 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 110, i32 %120)
  br label %179

179:                                              ; preds = %177, %175
  %180 = icmp sgt i32 %106, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %179
  %182 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 111, i32 %106)
  br label %183

183:                                              ; preds = %181, %179
  %184 = icmp sgt i32 %121, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %183
  %186 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 112, i32 %121)
  br label %187

187:                                              ; preds = %185, %183
  %188 = icmp sgt i32 %105, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %187
  %190 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 113, i32 %105)
  br label %191

191:                                              ; preds = %189, %187
  %192 = icmp sgt i32 %122, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %191
  %194 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 114, i32 %122)
  br label %195

195:                                              ; preds = %193, %191
  %196 = icmp sgt i32 %104, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %195
  %198 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 115, i32 %104)
  br label %199

199:                                              ; preds = %197, %195
  %200 = icmp sgt i32 %123, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %199
  %202 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 116, i32 %123)
  br label %203

203:                                              ; preds = %201, %199
  %204 = icmp sgt i32 %103, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %203
  %206 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 117, i32 %103)
  br label %207

207:                                              ; preds = %205, %203
  %208 = icmp sgt i32 %124, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %207
  %210 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 118, i32 %124)
  br label %211

211:                                              ; preds = %209, %207
  %212 = icmp sgt i32 %102, 0
  br i1 %212, label %213, label %215

213:                                              ; preds = %211
  %214 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 119, i32 %102)
  br label %215

215:                                              ; preds = %213, %211
  %216 = icmp sgt i32 %125, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %215
  %218 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 120, i32 %125)
  br label %219

219:                                              ; preds = %217, %215
  %220 = icmp sgt i32 %101, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %219
  %222 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 121, i32 %101)
  br label %223

223:                                              ; preds = %221, %219
  %224 = icmp sgt i32 %126, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %223
  %226 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 122, i32 %126)
  br label %227

227:                                              ; preds = %0, %225, %223
  %228 = phi i32 [ %101, %225 ], [ %101, %223 ], [ 0, %0 ]
  %229 = phi i32 [ %102, %225 ], [ %102, %223 ], [ 0, %0 ]
  %230 = phi i32 [ %103, %225 ], [ %103, %223 ], [ 0, %0 ]
  %231 = phi i32 [ %104, %225 ], [ %104, %223 ], [ 0, %0 ]
  %232 = phi i32 [ %105, %225 ], [ %105, %223 ], [ 0, %0 ]
  %233 = phi i32 [ %106, %225 ], [ %106, %223 ], [ 0, %0 ]
  %234 = phi i32 [ %107, %225 ], [ %107, %223 ], [ 0, %0 ]
  %235 = phi i32 [ %108, %225 ], [ %108, %223 ], [ 0, %0 ]
  %236 = phi i32 [ %109, %225 ], [ %109, %223 ], [ 0, %0 ]
  %237 = phi i32 [ %110, %225 ], [ %110, %223 ], [ 0, %0 ]
  %238 = phi i32 [ %111, %225 ], [ %111, %223 ], [ 0, %0 ]
  %239 = phi i32 [ %112, %225 ], [ %112, %223 ], [ 0, %0 ]
  %240 = phi i32 [ %113, %225 ], [ %113, %223 ], [ 0, %0 ]
  %241 = phi i32 [ %114, %225 ], [ %114, %223 ], [ 0, %0 ]
  %242 = phi i32 [ %115, %225 ], [ %115, %223 ], [ 0, %0 ]
  %243 = phi i32 [ %116, %225 ], [ %116, %223 ], [ 0, %0 ]
  %244 = phi i32 [ %117, %225 ], [ %117, %223 ], [ 0, %0 ]
  %245 = phi i32 [ %118, %225 ], [ %118, %223 ], [ 0, %0 ]
  %246 = phi i32 [ %119, %225 ], [ %119, %223 ], [ 0, %0 ]
  %247 = phi i32 [ %120, %225 ], [ %120, %223 ], [ 0, %0 ]
  %248 = phi i32 [ %121, %225 ], [ %121, %223 ], [ 0, %0 ]
  %249 = phi i32 [ %122, %225 ], [ %122, %223 ], [ 0, %0 ]
  %250 = phi i32 [ %123, %225 ], [ %123, %223 ], [ 0, %0 ]
  %251 = phi i32 [ %124, %225 ], [ %124, %223 ], [ 0, %0 ]
  %252 = phi i32 [ %125, %225 ], [ %125, %223 ], [ 0, %0 ]
  %253 = phi i32 [ %126, %225 ], [ %126, %223 ], [ 0, %0 ]
  %254 = add nsw i32 %241, %240
  %255 = add nsw i32 %239, %254
  %256 = add nsw i32 %242, %255
  %257 = add nsw i32 %238, %256
  %258 = add nsw i32 %243, %257
  %259 = add nsw i32 %237, %258
  %260 = add nsw i32 %244, %259
  %261 = add nsw i32 %236, %260
  %262 = add nsw i32 %245, %261
  %263 = add nsw i32 %235, %262
  %264 = add nsw i32 %246, %263
  %265 = add nsw i32 %234, %264
  %266 = add nsw i32 %247, %265
  %267 = add nsw i32 %233, %266
  %268 = add nsw i32 %248, %267
  %269 = add nsw i32 %232, %268
  %270 = add nsw i32 %249, %269
  %271 = add nsw i32 %231, %270
  %272 = add nsw i32 %250, %271
  %273 = add nsw i32 %230, %272
  %274 = add nsw i32 %251, %273
  %275 = add nsw i32 %229, %274
  %276 = add nsw i32 %252, %275
  %277 = add nsw i32 %228, %276
  %278 = sub i32 0, %277
  %279 = icmp eq i32 %253, %278
  br i1 %279, label %47, label %49
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
