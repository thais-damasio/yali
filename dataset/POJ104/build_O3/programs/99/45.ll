; ModuleID = 'source-C-CXX/99/45.c'
source_filename = "source-C-CXX/99/45.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"No\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"%c=%d\0A\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @main() local_unnamed_addr #0 {
  %1 = alloca [300 x i8], align 16
  %2 = getelementptr inbounds [300 x i8], [300 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 300, i8* nonnull %2) #5
  %3 = call i32 (i8*, ...) bitcast (i32 (...)* @gets to i32 (i8*, ...)*)(i8* nonnull %2) #5
  %4 = call i64 @strlen(i8* noundef nonnull %2) #6
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %117, label %6

6:                                                ; preds = %0, %88
  %7 = phi i32 [ %89, %88 ], [ 0, %0 ]
  %8 = phi i32 [ %90, %88 ], [ 0, %0 ]
  %9 = phi i32 [ %91, %88 ], [ 0, %0 ]
  %10 = phi i32 [ %92, %88 ], [ 0, %0 ]
  %11 = phi i32 [ %93, %88 ], [ 0, %0 ]
  %12 = phi i32 [ %94, %88 ], [ 0, %0 ]
  %13 = phi i32 [ %95, %88 ], [ 0, %0 ]
  %14 = phi i32 [ %96, %88 ], [ 0, %0 ]
  %15 = phi i32 [ %97, %88 ], [ 0, %0 ]
  %16 = phi i32 [ %98, %88 ], [ 0, %0 ]
  %17 = phi i32 [ %99, %88 ], [ 0, %0 ]
  %18 = phi i32 [ %100, %88 ], [ 0, %0 ]
  %19 = phi i32 [ %101, %88 ], [ 0, %0 ]
  %20 = phi i32 [ %102, %88 ], [ 0, %0 ]
  %21 = phi i32 [ %103, %88 ], [ 0, %0 ]
  %22 = phi i32 [ %104, %88 ], [ 0, %0 ]
  %23 = phi i32 [ %105, %88 ], [ 0, %0 ]
  %24 = phi i32 [ %106, %88 ], [ 0, %0 ]
  %25 = phi i32 [ %107, %88 ], [ 0, %0 ]
  %26 = phi i32 [ %108, %88 ], [ 0, %0 ]
  %27 = phi i32 [ %109, %88 ], [ 0, %0 ]
  %28 = phi i32 [ %110, %88 ], [ 0, %0 ]
  %29 = phi i32 [ %111, %88 ], [ 0, %0 ]
  %30 = phi i32 [ %112, %88 ], [ 0, %0 ]
  %31 = phi i32 [ %113, %88 ], [ 0, %0 ]
  %32 = phi i32 [ %114, %88 ], [ 0, %0 ]
  %33 = phi i64 [ %115, %88 ], [ 0, %0 ]
  %34 = getelementptr inbounds [300 x i8], [300 x i8]* %1, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1, !tbaa !5
  switch i8 %35, label %88 [
    i8 97, label %36
    i8 98, label %38
    i8 99, label %40
    i8 100, label %42
    i8 101, label %44
    i8 102, label %46
    i8 103, label %48
    i8 104, label %50
    i8 105, label %52
    i8 106, label %54
    i8 107, label %56
    i8 108, label %58
    i8 109, label %60
    i8 110, label %62
    i8 111, label %64
    i8 112, label %66
    i8 113, label %68
    i8 114, label %70
    i8 115, label %72
    i8 116, label %74
    i8 117, label %76
    i8 118, label %78
    i8 119, label %80
    i8 120, label %82
    i8 121, label %84
    i8 122, label %86
  ]

36:                                               ; preds = %6
  %37 = add nsw i32 %7, 1
  br label %88

38:                                               ; preds = %6
  %39 = add nsw i32 %8, 1
  br label %88

40:                                               ; preds = %6
  %41 = add nsw i32 %9, 1
  br label %88

42:                                               ; preds = %6
  %43 = add nsw i32 %10, 1
  br label %88

44:                                               ; preds = %6
  %45 = add nsw i32 %11, 1
  br label %88

46:                                               ; preds = %6
  %47 = add nsw i32 %12, 1
  br label %88

48:                                               ; preds = %6
  %49 = add nsw i32 %13, 1
  br label %88

50:                                               ; preds = %6
  %51 = add nsw i32 %14, 1
  br label %88

52:                                               ; preds = %6
  %53 = add nsw i32 %15, 1
  br label %88

54:                                               ; preds = %6
  %55 = add nsw i32 %16, 1
  br label %88

56:                                               ; preds = %6
  %57 = add nsw i32 %17, 1
  br label %88

58:                                               ; preds = %6
  %59 = add nsw i32 %18, 1
  br label %88

60:                                               ; preds = %6
  %61 = add nsw i32 %19, 1
  br label %88

62:                                               ; preds = %6
  %63 = add nsw i32 %20, 1
  br label %88

64:                                               ; preds = %6
  %65 = add nsw i32 %21, 1
  br label %88

66:                                               ; preds = %6
  %67 = add nsw i32 %22, 1
  br label %88

68:                                               ; preds = %6
  %69 = add nsw i32 %23, 1
  br label %88

70:                                               ; preds = %6
  %71 = add nsw i32 %24, 1
  br label %88

72:                                               ; preds = %6
  %73 = add nsw i32 %25, 1
  br label %88

74:                                               ; preds = %6
  %75 = add nsw i32 %26, 1
  br label %88

76:                                               ; preds = %6
  %77 = add nsw i32 %27, 1
  br label %88

78:                                               ; preds = %6
  %79 = add nsw i32 %28, 1
  br label %88

80:                                               ; preds = %6
  %81 = add nsw i32 %29, 1
  br label %88

82:                                               ; preds = %6
  %83 = add nsw i32 %30, 1
  br label %88

84:                                               ; preds = %6
  %85 = add nsw i32 %31, 1
  br label %88

86:                                               ; preds = %6
  %87 = add nsw i32 %32, 1
  br label %88

88:                                               ; preds = %6, %36, %40, %44, %48, %52, %56, %60, %64, %68, %72, %76, %80, %84, %86, %82, %78, %74, %70, %66, %62, %58, %54, %50, %46, %42, %38
  %89 = phi i32 [ %7, %6 ], [ %7, %86 ], [ %7, %84 ], [ %7, %82 ], [ %7, %80 ], [ %7, %78 ], [ %7, %76 ], [ %7, %74 ], [ %7, %72 ], [ %7, %70 ], [ %7, %68 ], [ %7, %66 ], [ %7, %64 ], [ %7, %62 ], [ %7, %60 ], [ %7, %58 ], [ %7, %56 ], [ %7, %54 ], [ %7, %52 ], [ %7, %50 ], [ %7, %48 ], [ %7, %46 ], [ %7, %44 ], [ %7, %42 ], [ %7, %40 ], [ %7, %38 ], [ %37, %36 ]
  %90 = phi i32 [ %8, %6 ], [ %8, %86 ], [ %8, %84 ], [ %8, %82 ], [ %8, %80 ], [ %8, %78 ], [ %8, %76 ], [ %8, %74 ], [ %8, %72 ], [ %8, %70 ], [ %8, %68 ], [ %8, %66 ], [ %8, %64 ], [ %8, %62 ], [ %8, %60 ], [ %8, %58 ], [ %8, %56 ], [ %8, %54 ], [ %8, %52 ], [ %8, %50 ], [ %8, %48 ], [ %8, %46 ], [ %8, %44 ], [ %8, %42 ], [ %8, %40 ], [ %39, %38 ], [ %8, %36 ]
  %91 = phi i32 [ %9, %6 ], [ %9, %86 ], [ %9, %84 ], [ %9, %82 ], [ %9, %80 ], [ %9, %78 ], [ %9, %76 ], [ %9, %74 ], [ %9, %72 ], [ %9, %70 ], [ %9, %68 ], [ %9, %66 ], [ %9, %64 ], [ %9, %62 ], [ %9, %60 ], [ %9, %58 ], [ %9, %56 ], [ %9, %54 ], [ %9, %52 ], [ %9, %50 ], [ %9, %48 ], [ %9, %46 ], [ %9, %44 ], [ %9, %42 ], [ %41, %40 ], [ %9, %38 ], [ %9, %36 ]
  %92 = phi i32 [ %10, %6 ], [ %10, %86 ], [ %10, %84 ], [ %10, %82 ], [ %10, %80 ], [ %10, %78 ], [ %10, %76 ], [ %10, %74 ], [ %10, %72 ], [ %10, %70 ], [ %10, %68 ], [ %10, %66 ], [ %10, %64 ], [ %10, %62 ], [ %10, %60 ], [ %10, %58 ], [ %10, %56 ], [ %10, %54 ], [ %10, %52 ], [ %10, %50 ], [ %10, %48 ], [ %10, %46 ], [ %10, %44 ], [ %43, %42 ], [ %10, %40 ], [ %10, %38 ], [ %10, %36 ]
  %93 = phi i32 [ %11, %6 ], [ %11, %86 ], [ %11, %84 ], [ %11, %82 ], [ %11, %80 ], [ %11, %78 ], [ %11, %76 ], [ %11, %74 ], [ %11, %72 ], [ %11, %70 ], [ %11, %68 ], [ %11, %66 ], [ %11, %64 ], [ %11, %62 ], [ %11, %60 ], [ %11, %58 ], [ %11, %56 ], [ %11, %54 ], [ %11, %52 ], [ %11, %50 ], [ %11, %48 ], [ %11, %46 ], [ %45, %44 ], [ %11, %42 ], [ %11, %40 ], [ %11, %38 ], [ %11, %36 ]
  %94 = phi i32 [ %12, %6 ], [ %12, %86 ], [ %12, %84 ], [ %12, %82 ], [ %12, %80 ], [ %12, %78 ], [ %12, %76 ], [ %12, %74 ], [ %12, %72 ], [ %12, %70 ], [ %12, %68 ], [ %12, %66 ], [ %12, %64 ], [ %12, %62 ], [ %12, %60 ], [ %12, %58 ], [ %12, %56 ], [ %12, %54 ], [ %12, %52 ], [ %12, %50 ], [ %12, %48 ], [ %47, %46 ], [ %12, %44 ], [ %12, %42 ], [ %12, %40 ], [ %12, %38 ], [ %12, %36 ]
  %95 = phi i32 [ %13, %6 ], [ %13, %86 ], [ %13, %84 ], [ %13, %82 ], [ %13, %80 ], [ %13, %78 ], [ %13, %76 ], [ %13, %74 ], [ %13, %72 ], [ %13, %70 ], [ %13, %68 ], [ %13, %66 ], [ %13, %64 ], [ %13, %62 ], [ %13, %60 ], [ %13, %58 ], [ %13, %56 ], [ %13, %54 ], [ %13, %52 ], [ %13, %50 ], [ %49, %48 ], [ %13, %46 ], [ %13, %44 ], [ %13, %42 ], [ %13, %40 ], [ %13, %38 ], [ %13, %36 ]
  %96 = phi i32 [ %14, %6 ], [ %14, %86 ], [ %14, %84 ], [ %14, %82 ], [ %14, %80 ], [ %14, %78 ], [ %14, %76 ], [ %14, %74 ], [ %14, %72 ], [ %14, %70 ], [ %14, %68 ], [ %14, %66 ], [ %14, %64 ], [ %14, %62 ], [ %14, %60 ], [ %14, %58 ], [ %14, %56 ], [ %14, %54 ], [ %14, %52 ], [ %51, %50 ], [ %14, %48 ], [ %14, %46 ], [ %14, %44 ], [ %14, %42 ], [ %14, %40 ], [ %14, %38 ], [ %14, %36 ]
  %97 = phi i32 [ %15, %6 ], [ %15, %86 ], [ %15, %84 ], [ %15, %82 ], [ %15, %80 ], [ %15, %78 ], [ %15, %76 ], [ %15, %74 ], [ %15, %72 ], [ %15, %70 ], [ %15, %68 ], [ %15, %66 ], [ %15, %64 ], [ %15, %62 ], [ %15, %60 ], [ %15, %58 ], [ %15, %56 ], [ %15, %54 ], [ %53, %52 ], [ %15, %50 ], [ %15, %48 ], [ %15, %46 ], [ %15, %44 ], [ %15, %42 ], [ %15, %40 ], [ %15, %38 ], [ %15, %36 ]
  %98 = phi i32 [ %16, %6 ], [ %16, %86 ], [ %16, %84 ], [ %16, %82 ], [ %16, %80 ], [ %16, %78 ], [ %16, %76 ], [ %16, %74 ], [ %16, %72 ], [ %16, %70 ], [ %16, %68 ], [ %16, %66 ], [ %16, %64 ], [ %16, %62 ], [ %16, %60 ], [ %16, %58 ], [ %16, %56 ], [ %55, %54 ], [ %16, %52 ], [ %16, %50 ], [ %16, %48 ], [ %16, %46 ], [ %16, %44 ], [ %16, %42 ], [ %16, %40 ], [ %16, %38 ], [ %16, %36 ]
  %99 = phi i32 [ %17, %6 ], [ %17, %86 ], [ %17, %84 ], [ %17, %82 ], [ %17, %80 ], [ %17, %78 ], [ %17, %76 ], [ %17, %74 ], [ %17, %72 ], [ %17, %70 ], [ %17, %68 ], [ %17, %66 ], [ %17, %64 ], [ %17, %62 ], [ %17, %60 ], [ %17, %58 ], [ %57, %56 ], [ %17, %54 ], [ %17, %52 ], [ %17, %50 ], [ %17, %48 ], [ %17, %46 ], [ %17, %44 ], [ %17, %42 ], [ %17, %40 ], [ %17, %38 ], [ %17, %36 ]
  %100 = phi i32 [ %18, %6 ], [ %18, %86 ], [ %18, %84 ], [ %18, %82 ], [ %18, %80 ], [ %18, %78 ], [ %18, %76 ], [ %18, %74 ], [ %18, %72 ], [ %18, %70 ], [ %18, %68 ], [ %18, %66 ], [ %18, %64 ], [ %18, %62 ], [ %18, %60 ], [ %59, %58 ], [ %18, %56 ], [ %18, %54 ], [ %18, %52 ], [ %18, %50 ], [ %18, %48 ], [ %18, %46 ], [ %18, %44 ], [ %18, %42 ], [ %18, %40 ], [ %18, %38 ], [ %18, %36 ]
  %101 = phi i32 [ %19, %6 ], [ %19, %86 ], [ %19, %84 ], [ %19, %82 ], [ %19, %80 ], [ %19, %78 ], [ %19, %76 ], [ %19, %74 ], [ %19, %72 ], [ %19, %70 ], [ %19, %68 ], [ %19, %66 ], [ %19, %64 ], [ %19, %62 ], [ %61, %60 ], [ %19, %58 ], [ %19, %56 ], [ %19, %54 ], [ %19, %52 ], [ %19, %50 ], [ %19, %48 ], [ %19, %46 ], [ %19, %44 ], [ %19, %42 ], [ %19, %40 ], [ %19, %38 ], [ %19, %36 ]
  %102 = phi i32 [ %20, %6 ], [ %20, %86 ], [ %20, %84 ], [ %20, %82 ], [ %20, %80 ], [ %20, %78 ], [ %20, %76 ], [ %20, %74 ], [ %20, %72 ], [ %20, %70 ], [ %20, %68 ], [ %20, %66 ], [ %20, %64 ], [ %63, %62 ], [ %20, %60 ], [ %20, %58 ], [ %20, %56 ], [ %20, %54 ], [ %20, %52 ], [ %20, %50 ], [ %20, %48 ], [ %20, %46 ], [ %20, %44 ], [ %20, %42 ], [ %20, %40 ], [ %20, %38 ], [ %20, %36 ]
  %103 = phi i32 [ %21, %6 ], [ %21, %86 ], [ %21, %84 ], [ %21, %82 ], [ %21, %80 ], [ %21, %78 ], [ %21, %76 ], [ %21, %74 ], [ %21, %72 ], [ %21, %70 ], [ %21, %68 ], [ %21, %66 ], [ %65, %64 ], [ %21, %62 ], [ %21, %60 ], [ %21, %58 ], [ %21, %56 ], [ %21, %54 ], [ %21, %52 ], [ %21, %50 ], [ %21, %48 ], [ %21, %46 ], [ %21, %44 ], [ %21, %42 ], [ %21, %40 ], [ %21, %38 ], [ %21, %36 ]
  %104 = phi i32 [ %22, %6 ], [ %22, %86 ], [ %22, %84 ], [ %22, %82 ], [ %22, %80 ], [ %22, %78 ], [ %22, %76 ], [ %22, %74 ], [ %22, %72 ], [ %22, %70 ], [ %22, %68 ], [ %67, %66 ], [ %22, %64 ], [ %22, %62 ], [ %22, %60 ], [ %22, %58 ], [ %22, %56 ], [ %22, %54 ], [ %22, %52 ], [ %22, %50 ], [ %22, %48 ], [ %22, %46 ], [ %22, %44 ], [ %22, %42 ], [ %22, %40 ], [ %22, %38 ], [ %22, %36 ]
  %105 = phi i32 [ %23, %6 ], [ %23, %86 ], [ %23, %84 ], [ %23, %82 ], [ %23, %80 ], [ %23, %78 ], [ %23, %76 ], [ %23, %74 ], [ %23, %72 ], [ %23, %70 ], [ %69, %68 ], [ %23, %66 ], [ %23, %64 ], [ %23, %62 ], [ %23, %60 ], [ %23, %58 ], [ %23, %56 ], [ %23, %54 ], [ %23, %52 ], [ %23, %50 ], [ %23, %48 ], [ %23, %46 ], [ %23, %44 ], [ %23, %42 ], [ %23, %40 ], [ %23, %38 ], [ %23, %36 ]
  %106 = phi i32 [ %24, %6 ], [ %24, %86 ], [ %24, %84 ], [ %24, %82 ], [ %24, %80 ], [ %24, %78 ], [ %24, %76 ], [ %24, %74 ], [ %24, %72 ], [ %71, %70 ], [ %24, %68 ], [ %24, %66 ], [ %24, %64 ], [ %24, %62 ], [ %24, %60 ], [ %24, %58 ], [ %24, %56 ], [ %24, %54 ], [ %24, %52 ], [ %24, %50 ], [ %24, %48 ], [ %24, %46 ], [ %24, %44 ], [ %24, %42 ], [ %24, %40 ], [ %24, %38 ], [ %24, %36 ]
  %107 = phi i32 [ %25, %6 ], [ %25, %86 ], [ %25, %84 ], [ %25, %82 ], [ %25, %80 ], [ %25, %78 ], [ %25, %76 ], [ %25, %74 ], [ %73, %72 ], [ %25, %70 ], [ %25, %68 ], [ %25, %66 ], [ %25, %64 ], [ %25, %62 ], [ %25, %60 ], [ %25, %58 ], [ %25, %56 ], [ %25, %54 ], [ %25, %52 ], [ %25, %50 ], [ %25, %48 ], [ %25, %46 ], [ %25, %44 ], [ %25, %42 ], [ %25, %40 ], [ %25, %38 ], [ %25, %36 ]
  %108 = phi i32 [ %26, %6 ], [ %26, %86 ], [ %26, %84 ], [ %26, %82 ], [ %26, %80 ], [ %26, %78 ], [ %26, %76 ], [ %75, %74 ], [ %26, %72 ], [ %26, %70 ], [ %26, %68 ], [ %26, %66 ], [ %26, %64 ], [ %26, %62 ], [ %26, %60 ], [ %26, %58 ], [ %26, %56 ], [ %26, %54 ], [ %26, %52 ], [ %26, %50 ], [ %26, %48 ], [ %26, %46 ], [ %26, %44 ], [ %26, %42 ], [ %26, %40 ], [ %26, %38 ], [ %26, %36 ]
  %109 = phi i32 [ %27, %6 ], [ %27, %86 ], [ %27, %84 ], [ %27, %82 ], [ %27, %80 ], [ %27, %78 ], [ %77, %76 ], [ %27, %74 ], [ %27, %72 ], [ %27, %70 ], [ %27, %68 ], [ %27, %66 ], [ %27, %64 ], [ %27, %62 ], [ %27, %60 ], [ %27, %58 ], [ %27, %56 ], [ %27, %54 ], [ %27, %52 ], [ %27, %50 ], [ %27, %48 ], [ %27, %46 ], [ %27, %44 ], [ %27, %42 ], [ %27, %40 ], [ %27, %38 ], [ %27, %36 ]
  %110 = phi i32 [ %28, %6 ], [ %28, %86 ], [ %28, %84 ], [ %28, %82 ], [ %28, %80 ], [ %79, %78 ], [ %28, %76 ], [ %28, %74 ], [ %28, %72 ], [ %28, %70 ], [ %28, %68 ], [ %28, %66 ], [ %28, %64 ], [ %28, %62 ], [ %28, %60 ], [ %28, %58 ], [ %28, %56 ], [ %28, %54 ], [ %28, %52 ], [ %28, %50 ], [ %28, %48 ], [ %28, %46 ], [ %28, %44 ], [ %28, %42 ], [ %28, %40 ], [ %28, %38 ], [ %28, %36 ]
  %111 = phi i32 [ %29, %6 ], [ %29, %86 ], [ %29, %84 ], [ %29, %82 ], [ %81, %80 ], [ %29, %78 ], [ %29, %76 ], [ %29, %74 ], [ %29, %72 ], [ %29, %70 ], [ %29, %68 ], [ %29, %66 ], [ %29, %64 ], [ %29, %62 ], [ %29, %60 ], [ %29, %58 ], [ %29, %56 ], [ %29, %54 ], [ %29, %52 ], [ %29, %50 ], [ %29, %48 ], [ %29, %46 ], [ %29, %44 ], [ %29, %42 ], [ %29, %40 ], [ %29, %38 ], [ %29, %36 ]
  %112 = phi i32 [ %30, %6 ], [ %30, %86 ], [ %30, %84 ], [ %83, %82 ], [ %30, %80 ], [ %30, %78 ], [ %30, %76 ], [ %30, %74 ], [ %30, %72 ], [ %30, %70 ], [ %30, %68 ], [ %30, %66 ], [ %30, %64 ], [ %30, %62 ], [ %30, %60 ], [ %30, %58 ], [ %30, %56 ], [ %30, %54 ], [ %30, %52 ], [ %30, %50 ], [ %30, %48 ], [ %30, %46 ], [ %30, %44 ], [ %30, %42 ], [ %30, %40 ], [ %30, %38 ], [ %30, %36 ]
  %113 = phi i32 [ %31, %6 ], [ %31, %86 ], [ %85, %84 ], [ %31, %82 ], [ %31, %80 ], [ %31, %78 ], [ %31, %76 ], [ %31, %74 ], [ %31, %72 ], [ %31, %70 ], [ %31, %68 ], [ %31, %66 ], [ %31, %64 ], [ %31, %62 ], [ %31, %60 ], [ %31, %58 ], [ %31, %56 ], [ %31, %54 ], [ %31, %52 ], [ %31, %50 ], [ %31, %48 ], [ %31, %46 ], [ %31, %44 ], [ %31, %42 ], [ %31, %40 ], [ %31, %38 ], [ %31, %36 ]
  %114 = phi i32 [ %32, %6 ], [ %87, %86 ], [ %32, %84 ], [ %32, %82 ], [ %32, %80 ], [ %32, %78 ], [ %32, %76 ], [ %32, %74 ], [ %32, %72 ], [ %32, %70 ], [ %32, %68 ], [ %32, %66 ], [ %32, %64 ], [ %32, %62 ], [ %32, %60 ], [ %32, %58 ], [ %32, %56 ], [ %32, %54 ], [ %32, %52 ], [ %32, %50 ], [ %32, %48 ], [ %32, %46 ], [ %32, %44 ], [ %32, %42 ], [ %32, %40 ], [ %32, %38 ], [ %32, %36 ]
  %115 = add nuw nsw i64 %33, 1
  %116 = icmp eq i64 %115, %4
  br i1 %116, label %117, label %6, !llvm.loop !8

117:                                              ; preds = %88, %0
  %118 = phi i32 [ 0, %0 ], [ %89, %88 ]
  %119 = phi i32 [ 0, %0 ], [ %90, %88 ]
  %120 = phi i32 [ 0, %0 ], [ %91, %88 ]
  %121 = phi i32 [ 0, %0 ], [ %92, %88 ]
  %122 = phi i32 [ 0, %0 ], [ %93, %88 ]
  %123 = phi i32 [ 0, %0 ], [ %94, %88 ]
  %124 = phi i32 [ 0, %0 ], [ %95, %88 ]
  %125 = phi i32 [ 0, %0 ], [ %96, %88 ]
  %126 = phi i32 [ 0, %0 ], [ %97, %88 ]
  %127 = phi i32 [ 0, %0 ], [ %98, %88 ]
  %128 = phi i32 [ 0, %0 ], [ %99, %88 ]
  %129 = phi i32 [ 0, %0 ], [ %100, %88 ]
  %130 = phi i32 [ 0, %0 ], [ %101, %88 ]
  %131 = phi i32 [ 0, %0 ], [ %102, %88 ]
  %132 = phi i32 [ 0, %0 ], [ %103, %88 ]
  %133 = phi i32 [ 0, %0 ], [ %104, %88 ]
  %134 = phi i32 [ 0, %0 ], [ %105, %88 ]
  %135 = phi i32 [ 0, %0 ], [ %106, %88 ]
  %136 = phi i32 [ 0, %0 ], [ %107, %88 ]
  %137 = phi i32 [ 0, %0 ], [ %108, %88 ]
  %138 = phi i32 [ 0, %0 ], [ %109, %88 ]
  %139 = phi i32 [ 0, %0 ], [ %110, %88 ]
  %140 = phi i32 [ 0, %0 ], [ %111, %88 ]
  %141 = phi i32 [ 0, %0 ], [ %112, %88 ]
  %142 = phi i32 [ 0, %0 ], [ %113, %88 ]
  %143 = phi i32 [ 0, %0 ], [ %114, %88 ]
  %144 = add nsw i32 %119, %118
  %145 = add nsw i32 %144, %120
  %146 = add nsw i32 %145, %121
  %147 = add nsw i32 %146, %122
  %148 = add nsw i32 %147, %123
  %149 = add nsw i32 %148, %124
  %150 = add nsw i32 %149, %125
  %151 = add nsw i32 %150, %126
  %152 = add nsw i32 %151, %127
  %153 = add nsw i32 %152, %128
  %154 = add nsw i32 %153, %129
  %155 = add nsw i32 %154, %130
  %156 = add nsw i32 %155, %131
  %157 = add nsw i32 %156, %132
  %158 = add nsw i32 %157, %133
  %159 = add nsw i32 %158, %134
  %160 = add nsw i32 %159, %135
  %161 = add nsw i32 %160, %136
  %162 = add nsw i32 %161, %137
  %163 = add nsw i32 %162, %138
  %164 = add nsw i32 %163, %139
  %165 = add nsw i32 %164, %140
  %166 = add nsw i32 %165, %141
  %167 = add nsw i32 %166, %142
  %168 = sub i32 0, %143
  %169 = icmp eq i32 %167, %168
  br i1 %169, label %170, label %172

170:                                              ; preds = %117
  %171 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  br label %172

172:                                              ; preds = %170, %117
  %173 = icmp eq i32 %118, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %172
  %175 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 97, i32 %118)
  br label %176

176:                                              ; preds = %172, %174
  %177 = icmp eq i32 %119, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 98, i32 %119)
  br label %180

180:                                              ; preds = %178, %176
  %181 = icmp eq i32 %120, 0
  br i1 %181, label %184, label %182

182:                                              ; preds = %180
  %183 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 99, i32 %120)
  br label %184

184:                                              ; preds = %182, %180
  %185 = icmp eq i32 %121, 0
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 100, i32 %121)
  br label %188

188:                                              ; preds = %186, %184
  %189 = icmp eq i32 %122, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %188
  %191 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 101, i32 %122)
  br label %192

192:                                              ; preds = %190, %188
  %193 = icmp eq i32 %123, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 102, i32 %123)
  br label %196

196:                                              ; preds = %194, %192
  %197 = icmp eq i32 %124, 0
  br i1 %197, label %200, label %198

198:                                              ; preds = %196
  %199 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 103, i32 %124)
  br label %200

200:                                              ; preds = %198, %196
  %201 = icmp eq i32 %125, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %200
  %203 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 104, i32 %125)
  br label %204

204:                                              ; preds = %202, %200
  %205 = icmp eq i32 %126, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %204
  %207 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 105, i32 %126)
  br label %208

208:                                              ; preds = %206, %204
  %209 = icmp eq i32 %127, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  %211 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 106, i32 %127)
  br label %212

212:                                              ; preds = %210, %208
  %213 = icmp eq i32 %128, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %212
  %215 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 107, i32 %128)
  br label %216

216:                                              ; preds = %214, %212
  %217 = icmp eq i32 %129, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %216
  %219 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 108, i32 %129)
  br label %220

220:                                              ; preds = %218, %216
  %221 = icmp eq i32 %130, 0
  br i1 %221, label %224, label %222

222:                                              ; preds = %220
  %223 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 109, i32 %130)
  br label %224

224:                                              ; preds = %222, %220
  %225 = icmp eq i32 %131, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %224
  %227 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 110, i32 %131)
  br label %228

228:                                              ; preds = %226, %224
  %229 = icmp eq i32 %132, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %228
  %231 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 111, i32 %132)
  br label %232

232:                                              ; preds = %230, %228
  %233 = icmp eq i32 %133, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %232
  %235 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 112, i32 %133)
  br label %236

236:                                              ; preds = %234, %232
  %237 = icmp eq i32 %134, 0
  br i1 %237, label %240, label %238

238:                                              ; preds = %236
  %239 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 113, i32 %134)
  br label %240

240:                                              ; preds = %238, %236
  %241 = icmp eq i32 %135, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %240
  %243 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 114, i32 %135)
  br label %244

244:                                              ; preds = %242, %240
  %245 = icmp eq i32 %136, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %244
  %247 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 115, i32 %136)
  br label %248

248:                                              ; preds = %246, %244
  %249 = icmp eq i32 %137, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %248
  %251 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 116, i32 %137)
  br label %252

252:                                              ; preds = %250, %248
  %253 = icmp eq i32 %138, 0
  br i1 %253, label %256, label %254

254:                                              ; preds = %252
  %255 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 117, i32 %138)
  br label %256

256:                                              ; preds = %254, %252
  %257 = icmp eq i32 %139, 0
  br i1 %257, label %260, label %258

258:                                              ; preds = %256
  %259 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 118, i32 %139)
  br label %260

260:                                              ; preds = %258, %256
  %261 = icmp eq i32 %140, 0
  br i1 %261, label %264, label %262

262:                                              ; preds = %260
  %263 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 119, i32 %140)
  br label %264

264:                                              ; preds = %262, %260
  %265 = icmp eq i32 %141, 0
  br i1 %265, label %268, label %266

266:                                              ; preds = %264
  %267 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 120, i32 %141)
  br label %268

268:                                              ; preds = %266, %264
  %269 = icmp eq i32 %142, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %268
  %271 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 121, i32 %142)
  br label %272

272:                                              ; preds = %270, %268
  %273 = icmp eq i32 %143, 0
  br i1 %273, label %276, label %274

274:                                              ; preds = %272
  %275 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 122, i32 %143)
  br label %276

276:                                              ; preds = %274, %272
  call void @llvm.lifetime.end.p0i8(i64 300, i8* nonnull %2) #5
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @gets(...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
