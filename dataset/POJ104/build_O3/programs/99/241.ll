; ModuleID = 'source-C-CXX/99/241.c'
source_filename = "source-C-CXX/99/241.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [7 x i8] c"%c=%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"No\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @main(i32 %0, i8** nocapture readnone %1) local_unnamed_addr #0 {
  %3 = alloca [300 x i8], align 16
  %4 = getelementptr inbounds [300 x i8], [300 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 300, i8* nonnull %4) #5
  %5 = call i32 (i8*, ...) bitcast (i32 (...)* @gets to i32 (i8*, ...)*)(i8* nonnull %4) #5
  %6 = call i64 @strlen(i8* noundef nonnull %4) #6
  %7 = trunc i64 %6 to i32
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %277

9:                                                ; preds = %2
  %10 = and i64 %6, 4294967295
  br label %11

11:                                               ; preds = %9, %149
  %12 = phi i32 [ 0, %9 ], [ %162, %149 ]
  %13 = phi i32 [ 0, %9 ], [ %163, %149 ]
  %14 = phi i32 [ 0, %9 ], [ %161, %149 ]
  %15 = phi i32 [ 0, %9 ], [ %164, %149 ]
  %16 = phi i32 [ 0, %9 ], [ %160, %149 ]
  %17 = phi i32 [ 0, %9 ], [ %165, %149 ]
  %18 = phi i32 [ 0, %9 ], [ %159, %149 ]
  %19 = phi i32 [ 0, %9 ], [ %166, %149 ]
  %20 = phi i32 [ 0, %9 ], [ %158, %149 ]
  %21 = phi i32 [ 0, %9 ], [ %167, %149 ]
  %22 = phi i32 [ 0, %9 ], [ %157, %149 ]
  %23 = phi i32 [ 0, %9 ], [ %168, %149 ]
  %24 = phi i32 [ 0, %9 ], [ %156, %149 ]
  %25 = phi i32 [ 0, %9 ], [ %169, %149 ]
  %26 = phi i32 [ 0, %9 ], [ %155, %149 ]
  %27 = phi i32 [ 0, %9 ], [ %170, %149 ]
  %28 = phi i32 [ 0, %9 ], [ %154, %149 ]
  %29 = phi i32 [ 0, %9 ], [ %171, %149 ]
  %30 = phi i32 [ 0, %9 ], [ %153, %149 ]
  %31 = phi i32 [ 0, %9 ], [ %172, %149 ]
  %32 = phi i32 [ 0, %9 ], [ %152, %149 ]
  %33 = phi i32 [ 0, %9 ], [ %173, %149 ]
  %34 = phi i32 [ 0, %9 ], [ %151, %149 ]
  %35 = phi i32 [ 0, %9 ], [ %174, %149 ]
  %36 = phi i32 [ 0, %9 ], [ %150, %149 ]
  %37 = phi i32 [ 0, %9 ], [ %175, %149 ]
  %38 = phi i64 [ 0, %9 ], [ %176, %149 ]
  %39 = getelementptr inbounds [300 x i8], [300 x i8]* %3, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1, !tbaa !5
  switch i8 %40, label %149 [
    i8 97, label %43
    i8 98, label %99
    i8 99, label %101
    i8 100, label %103
    i8 101, label %105
    i8 102, label %107
    i8 103, label %109
    i8 104, label %111
    i8 105, label %113
    i8 106, label %115
    i8 107, label %117
    i8 108, label %119
    i8 109, label %121
    i8 110, label %123
    i8 111, label %125
    i8 112, label %127
    i8 113, label %129
    i8 114, label %131
    i8 115, label %133
    i8 116, label %135
    i8 117, label %137
    i8 118, label %139
    i8 119, label %141
    i8 120, label %143
    i8 121, label %145
    i8 122, label %147
  ]

41:                                               ; preds = %149
  %42 = icmp eq i32 %162, 0
  br i1 %42, label %47, label %45

43:                                               ; preds = %11
  %44 = add nsw i32 %12, 1
  br label %149

45:                                               ; preds = %41
  %46 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 97, i32 %162)
  br label %47

47:                                               ; preds = %41, %45
  %48 = icmp eq i32 %163, 0
  br i1 %48, label %180, label %178

49:                                               ; preds = %274, %276
  %50 = or i32 %163, %161
  %51 = icmp ne i32 %50, 0
  %52 = xor i1 %185, true
  %53 = or i1 %51, %52
  %54 = xor i1 %189, true
  %55 = or i1 %53, %54
  %56 = xor i1 %193, true
  %57 = or i1 %55, %56
  %58 = xor i1 %197, true
  %59 = or i1 %57, %58
  %60 = xor i1 %201, true
  %61 = or i1 %59, %60
  %62 = xor i1 %205, true
  %63 = or i1 %61, %62
  %64 = xor i1 %209, true
  %65 = or i1 %63, %64
  %66 = xor i1 %213, true
  %67 = or i1 %65, %66
  %68 = xor i1 %217, true
  %69 = or i1 %67, %68
  %70 = xor i1 %221, true
  %71 = or i1 %69, %70
  %72 = xor i1 %225, true
  %73 = or i1 %71, %72
  %74 = xor i1 %229, true
  %75 = or i1 %73, %74
  %76 = xor i1 %233, true
  %77 = or i1 %75, %76
  %78 = xor i1 %237, true
  %79 = or i1 %77, %78
  %80 = xor i1 %241, true
  %81 = or i1 %79, %80
  %82 = xor i1 %245, true
  %83 = or i1 %81, %82
  %84 = xor i1 %249, true
  %85 = or i1 %83, %84
  %86 = xor i1 %253, true
  %87 = or i1 %85, %86
  %88 = xor i1 %257, true
  %89 = or i1 %87, %88
  %90 = xor i1 %261, true
  %91 = or i1 %89, %90
  %92 = xor i1 %265, true
  %93 = or i1 %91, %92
  %94 = xor i1 %269, true
  %95 = or i1 %93, %94
  %96 = xor i1 %273, true
  %97 = or i1 %95, %96
  br i1 %97, label %98, label %277

98:                                               ; preds = %49, %274, %276, %277
  call void @llvm.lifetime.end.p0i8(i64 300, i8* nonnull %4) #5
  ret i32 0

99:                                               ; preds = %11
  %100 = add nsw i32 %13, 1
  br label %149

101:                                              ; preds = %11
  %102 = add nsw i32 %14, 1
  br label %149

103:                                              ; preds = %11
  %104 = add nsw i32 %15, 1
  br label %149

105:                                              ; preds = %11
  %106 = add nsw i32 %16, 1
  br label %149

107:                                              ; preds = %11
  %108 = add nsw i32 %17, 1
  br label %149

109:                                              ; preds = %11
  %110 = add nsw i32 %18, 1
  br label %149

111:                                              ; preds = %11
  %112 = add nsw i32 %19, 1
  br label %149

113:                                              ; preds = %11
  %114 = add nsw i32 %20, 1
  br label %149

115:                                              ; preds = %11
  %116 = add nsw i32 %21, 1
  br label %149

117:                                              ; preds = %11
  %118 = add nsw i32 %22, 1
  br label %149

119:                                              ; preds = %11
  %120 = add nsw i32 %23, 1
  br label %149

121:                                              ; preds = %11
  %122 = add nsw i32 %24, 1
  br label %149

123:                                              ; preds = %11
  %124 = add nsw i32 %25, 1
  br label %149

125:                                              ; preds = %11
  %126 = add nsw i32 %26, 1
  br label %149

127:                                              ; preds = %11
  %128 = add nsw i32 %27, 1
  br label %149

129:                                              ; preds = %11
  %130 = add nsw i32 %28, 1
  br label %149

131:                                              ; preds = %11
  %132 = add nsw i32 %29, 1
  br label %149

133:                                              ; preds = %11
  %134 = add nsw i32 %30, 1
  br label %149

135:                                              ; preds = %11
  %136 = add nsw i32 %31, 1
  br label %149

137:                                              ; preds = %11
  %138 = add nsw i32 %32, 1
  br label %149

139:                                              ; preds = %11
  %140 = add nsw i32 %33, 1
  br label %149

141:                                              ; preds = %11
  %142 = add nsw i32 %34, 1
  br label %149

143:                                              ; preds = %11
  %144 = add nsw i32 %35, 1
  br label %149

145:                                              ; preds = %11
  %146 = add nsw i32 %36, 1
  br label %149

147:                                              ; preds = %11
  %148 = add nsw i32 %37, 1
  br label %149

149:                                              ; preds = %11, %99, %43, %101, %103, %105, %107, %109, %111, %113, %115, %117, %119, %121, %123, %125, %127, %129, %131, %133, %135, %137, %139, %141, %143, %145, %147
  %150 = phi i32 [ %36, %147 ], [ %146, %145 ], [ %36, %143 ], [ %36, %141 ], [ %36, %139 ], [ %36, %137 ], [ %36, %135 ], [ %36, %133 ], [ %36, %131 ], [ %36, %129 ], [ %36, %127 ], [ %36, %125 ], [ %36, %123 ], [ %36, %121 ], [ %36, %119 ], [ %36, %117 ], [ %36, %115 ], [ %36, %113 ], [ %36, %111 ], [ %36, %109 ], [ %36, %107 ], [ %36, %105 ], [ %36, %103 ], [ %36, %101 ], [ %36, %43 ], [ %36, %99 ], [ %36, %11 ]
  %151 = phi i32 [ %34, %147 ], [ %34, %145 ], [ %34, %143 ], [ %142, %141 ], [ %34, %139 ], [ %34, %137 ], [ %34, %135 ], [ %34, %133 ], [ %34, %131 ], [ %34, %129 ], [ %34, %127 ], [ %34, %125 ], [ %34, %123 ], [ %34, %121 ], [ %34, %119 ], [ %34, %117 ], [ %34, %115 ], [ %34, %113 ], [ %34, %111 ], [ %34, %109 ], [ %34, %107 ], [ %34, %105 ], [ %34, %103 ], [ %34, %101 ], [ %34, %43 ], [ %34, %99 ], [ %34, %11 ]
  %152 = phi i32 [ %32, %147 ], [ %32, %145 ], [ %32, %143 ], [ %32, %141 ], [ %32, %139 ], [ %138, %137 ], [ %32, %135 ], [ %32, %133 ], [ %32, %131 ], [ %32, %129 ], [ %32, %127 ], [ %32, %125 ], [ %32, %123 ], [ %32, %121 ], [ %32, %119 ], [ %32, %117 ], [ %32, %115 ], [ %32, %113 ], [ %32, %111 ], [ %32, %109 ], [ %32, %107 ], [ %32, %105 ], [ %32, %103 ], [ %32, %101 ], [ %32, %43 ], [ %32, %99 ], [ %32, %11 ]
  %153 = phi i32 [ %30, %147 ], [ %30, %145 ], [ %30, %143 ], [ %30, %141 ], [ %30, %139 ], [ %30, %137 ], [ %30, %135 ], [ %134, %133 ], [ %30, %131 ], [ %30, %129 ], [ %30, %127 ], [ %30, %125 ], [ %30, %123 ], [ %30, %121 ], [ %30, %119 ], [ %30, %117 ], [ %30, %115 ], [ %30, %113 ], [ %30, %111 ], [ %30, %109 ], [ %30, %107 ], [ %30, %105 ], [ %30, %103 ], [ %30, %101 ], [ %30, %43 ], [ %30, %99 ], [ %30, %11 ]
  %154 = phi i32 [ %28, %147 ], [ %28, %145 ], [ %28, %143 ], [ %28, %141 ], [ %28, %139 ], [ %28, %137 ], [ %28, %135 ], [ %28, %133 ], [ %28, %131 ], [ %130, %129 ], [ %28, %127 ], [ %28, %125 ], [ %28, %123 ], [ %28, %121 ], [ %28, %119 ], [ %28, %117 ], [ %28, %115 ], [ %28, %113 ], [ %28, %111 ], [ %28, %109 ], [ %28, %107 ], [ %28, %105 ], [ %28, %103 ], [ %28, %101 ], [ %28, %43 ], [ %28, %99 ], [ %28, %11 ]
  %155 = phi i32 [ %26, %147 ], [ %26, %145 ], [ %26, %143 ], [ %26, %141 ], [ %26, %139 ], [ %26, %137 ], [ %26, %135 ], [ %26, %133 ], [ %26, %131 ], [ %26, %129 ], [ %26, %127 ], [ %126, %125 ], [ %26, %123 ], [ %26, %121 ], [ %26, %119 ], [ %26, %117 ], [ %26, %115 ], [ %26, %113 ], [ %26, %111 ], [ %26, %109 ], [ %26, %107 ], [ %26, %105 ], [ %26, %103 ], [ %26, %101 ], [ %26, %43 ], [ %26, %99 ], [ %26, %11 ]
  %156 = phi i32 [ %24, %147 ], [ %24, %145 ], [ %24, %143 ], [ %24, %141 ], [ %24, %139 ], [ %24, %137 ], [ %24, %135 ], [ %24, %133 ], [ %24, %131 ], [ %24, %129 ], [ %24, %127 ], [ %24, %125 ], [ %24, %123 ], [ %122, %121 ], [ %24, %119 ], [ %24, %117 ], [ %24, %115 ], [ %24, %113 ], [ %24, %111 ], [ %24, %109 ], [ %24, %107 ], [ %24, %105 ], [ %24, %103 ], [ %24, %101 ], [ %24, %43 ], [ %24, %99 ], [ %24, %11 ]
  %157 = phi i32 [ %22, %147 ], [ %22, %145 ], [ %22, %143 ], [ %22, %141 ], [ %22, %139 ], [ %22, %137 ], [ %22, %135 ], [ %22, %133 ], [ %22, %131 ], [ %22, %129 ], [ %22, %127 ], [ %22, %125 ], [ %22, %123 ], [ %22, %121 ], [ %22, %119 ], [ %118, %117 ], [ %22, %115 ], [ %22, %113 ], [ %22, %111 ], [ %22, %109 ], [ %22, %107 ], [ %22, %105 ], [ %22, %103 ], [ %22, %101 ], [ %22, %43 ], [ %22, %99 ], [ %22, %11 ]
  %158 = phi i32 [ %20, %147 ], [ %20, %145 ], [ %20, %143 ], [ %20, %141 ], [ %20, %139 ], [ %20, %137 ], [ %20, %135 ], [ %20, %133 ], [ %20, %131 ], [ %20, %129 ], [ %20, %127 ], [ %20, %125 ], [ %20, %123 ], [ %20, %121 ], [ %20, %119 ], [ %20, %117 ], [ %20, %115 ], [ %114, %113 ], [ %20, %111 ], [ %20, %109 ], [ %20, %107 ], [ %20, %105 ], [ %20, %103 ], [ %20, %101 ], [ %20, %43 ], [ %20, %99 ], [ %20, %11 ]
  %159 = phi i32 [ %18, %147 ], [ %18, %145 ], [ %18, %143 ], [ %18, %141 ], [ %18, %139 ], [ %18, %137 ], [ %18, %135 ], [ %18, %133 ], [ %18, %131 ], [ %18, %129 ], [ %18, %127 ], [ %18, %125 ], [ %18, %123 ], [ %18, %121 ], [ %18, %119 ], [ %18, %117 ], [ %18, %115 ], [ %18, %113 ], [ %18, %111 ], [ %110, %109 ], [ %18, %107 ], [ %18, %105 ], [ %18, %103 ], [ %18, %101 ], [ %18, %43 ], [ %18, %99 ], [ %18, %11 ]
  %160 = phi i32 [ %16, %147 ], [ %16, %145 ], [ %16, %143 ], [ %16, %141 ], [ %16, %139 ], [ %16, %137 ], [ %16, %135 ], [ %16, %133 ], [ %16, %131 ], [ %16, %129 ], [ %16, %127 ], [ %16, %125 ], [ %16, %123 ], [ %16, %121 ], [ %16, %119 ], [ %16, %117 ], [ %16, %115 ], [ %16, %113 ], [ %16, %111 ], [ %16, %109 ], [ %16, %107 ], [ %106, %105 ], [ %16, %103 ], [ %16, %101 ], [ %16, %43 ], [ %16, %99 ], [ %16, %11 ]
  %161 = phi i32 [ %14, %147 ], [ %14, %145 ], [ %14, %143 ], [ %14, %141 ], [ %14, %139 ], [ %14, %137 ], [ %14, %135 ], [ %14, %133 ], [ %14, %131 ], [ %14, %129 ], [ %14, %127 ], [ %14, %125 ], [ %14, %123 ], [ %14, %121 ], [ %14, %119 ], [ %14, %117 ], [ %14, %115 ], [ %14, %113 ], [ %14, %111 ], [ %14, %109 ], [ %14, %107 ], [ %14, %105 ], [ %14, %103 ], [ %102, %101 ], [ %14, %43 ], [ %14, %99 ], [ %14, %11 ]
  %162 = phi i32 [ %12, %147 ], [ %12, %145 ], [ %12, %143 ], [ %12, %141 ], [ %12, %139 ], [ %12, %137 ], [ %12, %135 ], [ %12, %133 ], [ %12, %131 ], [ %12, %129 ], [ %12, %127 ], [ %12, %125 ], [ %12, %123 ], [ %12, %121 ], [ %12, %119 ], [ %12, %117 ], [ %12, %115 ], [ %12, %113 ], [ %12, %111 ], [ %12, %109 ], [ %12, %107 ], [ %12, %105 ], [ %12, %103 ], [ %12, %101 ], [ %44, %43 ], [ %12, %99 ], [ %12, %11 ]
  %163 = phi i32 [ %13, %147 ], [ %13, %145 ], [ %13, %143 ], [ %13, %141 ], [ %13, %139 ], [ %13, %137 ], [ %13, %135 ], [ %13, %133 ], [ %13, %131 ], [ %13, %129 ], [ %13, %127 ], [ %13, %125 ], [ %13, %123 ], [ %13, %121 ], [ %13, %119 ], [ %13, %117 ], [ %13, %115 ], [ %13, %113 ], [ %13, %111 ], [ %13, %109 ], [ %13, %107 ], [ %13, %105 ], [ %13, %103 ], [ %13, %101 ], [ %13, %43 ], [ %100, %99 ], [ %13, %11 ]
  %164 = phi i32 [ %15, %147 ], [ %15, %145 ], [ %15, %143 ], [ %15, %141 ], [ %15, %139 ], [ %15, %137 ], [ %15, %135 ], [ %15, %133 ], [ %15, %131 ], [ %15, %129 ], [ %15, %127 ], [ %15, %125 ], [ %15, %123 ], [ %15, %121 ], [ %15, %119 ], [ %15, %117 ], [ %15, %115 ], [ %15, %113 ], [ %15, %111 ], [ %15, %109 ], [ %15, %107 ], [ %15, %105 ], [ %104, %103 ], [ %15, %101 ], [ %15, %43 ], [ %15, %99 ], [ %15, %11 ]
  %165 = phi i32 [ %17, %147 ], [ %17, %145 ], [ %17, %143 ], [ %17, %141 ], [ %17, %139 ], [ %17, %137 ], [ %17, %135 ], [ %17, %133 ], [ %17, %131 ], [ %17, %129 ], [ %17, %127 ], [ %17, %125 ], [ %17, %123 ], [ %17, %121 ], [ %17, %119 ], [ %17, %117 ], [ %17, %115 ], [ %17, %113 ], [ %17, %111 ], [ %17, %109 ], [ %108, %107 ], [ %17, %105 ], [ %17, %103 ], [ %17, %101 ], [ %17, %43 ], [ %17, %99 ], [ %17, %11 ]
  %166 = phi i32 [ %19, %147 ], [ %19, %145 ], [ %19, %143 ], [ %19, %141 ], [ %19, %139 ], [ %19, %137 ], [ %19, %135 ], [ %19, %133 ], [ %19, %131 ], [ %19, %129 ], [ %19, %127 ], [ %19, %125 ], [ %19, %123 ], [ %19, %121 ], [ %19, %119 ], [ %19, %117 ], [ %19, %115 ], [ %19, %113 ], [ %112, %111 ], [ %19, %109 ], [ %19, %107 ], [ %19, %105 ], [ %19, %103 ], [ %19, %101 ], [ %19, %43 ], [ %19, %99 ], [ %19, %11 ]
  %167 = phi i32 [ %21, %147 ], [ %21, %145 ], [ %21, %143 ], [ %21, %141 ], [ %21, %139 ], [ %21, %137 ], [ %21, %135 ], [ %21, %133 ], [ %21, %131 ], [ %21, %129 ], [ %21, %127 ], [ %21, %125 ], [ %21, %123 ], [ %21, %121 ], [ %21, %119 ], [ %21, %117 ], [ %116, %115 ], [ %21, %113 ], [ %21, %111 ], [ %21, %109 ], [ %21, %107 ], [ %21, %105 ], [ %21, %103 ], [ %21, %101 ], [ %21, %43 ], [ %21, %99 ], [ %21, %11 ]
  %168 = phi i32 [ %23, %147 ], [ %23, %145 ], [ %23, %143 ], [ %23, %141 ], [ %23, %139 ], [ %23, %137 ], [ %23, %135 ], [ %23, %133 ], [ %23, %131 ], [ %23, %129 ], [ %23, %127 ], [ %23, %125 ], [ %23, %123 ], [ %23, %121 ], [ %120, %119 ], [ %23, %117 ], [ %23, %115 ], [ %23, %113 ], [ %23, %111 ], [ %23, %109 ], [ %23, %107 ], [ %23, %105 ], [ %23, %103 ], [ %23, %101 ], [ %23, %43 ], [ %23, %99 ], [ %23, %11 ]
  %169 = phi i32 [ %25, %147 ], [ %25, %145 ], [ %25, %143 ], [ %25, %141 ], [ %25, %139 ], [ %25, %137 ], [ %25, %135 ], [ %25, %133 ], [ %25, %131 ], [ %25, %129 ], [ %25, %127 ], [ %25, %125 ], [ %124, %123 ], [ %25, %121 ], [ %25, %119 ], [ %25, %117 ], [ %25, %115 ], [ %25, %113 ], [ %25, %111 ], [ %25, %109 ], [ %25, %107 ], [ %25, %105 ], [ %25, %103 ], [ %25, %101 ], [ %25, %43 ], [ %25, %99 ], [ %25, %11 ]
  %170 = phi i32 [ %27, %147 ], [ %27, %145 ], [ %27, %143 ], [ %27, %141 ], [ %27, %139 ], [ %27, %137 ], [ %27, %135 ], [ %27, %133 ], [ %27, %131 ], [ %27, %129 ], [ %128, %127 ], [ %27, %125 ], [ %27, %123 ], [ %27, %121 ], [ %27, %119 ], [ %27, %117 ], [ %27, %115 ], [ %27, %113 ], [ %27, %111 ], [ %27, %109 ], [ %27, %107 ], [ %27, %105 ], [ %27, %103 ], [ %27, %101 ], [ %27, %43 ], [ %27, %99 ], [ %27, %11 ]
  %171 = phi i32 [ %29, %147 ], [ %29, %145 ], [ %29, %143 ], [ %29, %141 ], [ %29, %139 ], [ %29, %137 ], [ %29, %135 ], [ %29, %133 ], [ %132, %131 ], [ %29, %129 ], [ %29, %127 ], [ %29, %125 ], [ %29, %123 ], [ %29, %121 ], [ %29, %119 ], [ %29, %117 ], [ %29, %115 ], [ %29, %113 ], [ %29, %111 ], [ %29, %109 ], [ %29, %107 ], [ %29, %105 ], [ %29, %103 ], [ %29, %101 ], [ %29, %43 ], [ %29, %99 ], [ %29, %11 ]
  %172 = phi i32 [ %31, %147 ], [ %31, %145 ], [ %31, %143 ], [ %31, %141 ], [ %31, %139 ], [ %31, %137 ], [ %136, %135 ], [ %31, %133 ], [ %31, %131 ], [ %31, %129 ], [ %31, %127 ], [ %31, %125 ], [ %31, %123 ], [ %31, %121 ], [ %31, %119 ], [ %31, %117 ], [ %31, %115 ], [ %31, %113 ], [ %31, %111 ], [ %31, %109 ], [ %31, %107 ], [ %31, %105 ], [ %31, %103 ], [ %31, %101 ], [ %31, %43 ], [ %31, %99 ], [ %31, %11 ]
  %173 = phi i32 [ %33, %147 ], [ %33, %145 ], [ %33, %143 ], [ %33, %141 ], [ %140, %139 ], [ %33, %137 ], [ %33, %135 ], [ %33, %133 ], [ %33, %131 ], [ %33, %129 ], [ %33, %127 ], [ %33, %125 ], [ %33, %123 ], [ %33, %121 ], [ %33, %119 ], [ %33, %117 ], [ %33, %115 ], [ %33, %113 ], [ %33, %111 ], [ %33, %109 ], [ %33, %107 ], [ %33, %105 ], [ %33, %103 ], [ %33, %101 ], [ %33, %43 ], [ %33, %99 ], [ %33, %11 ]
  %174 = phi i32 [ %35, %147 ], [ %35, %145 ], [ %144, %143 ], [ %35, %141 ], [ %35, %139 ], [ %35, %137 ], [ %35, %135 ], [ %35, %133 ], [ %35, %131 ], [ %35, %129 ], [ %35, %127 ], [ %35, %125 ], [ %35, %123 ], [ %35, %121 ], [ %35, %119 ], [ %35, %117 ], [ %35, %115 ], [ %35, %113 ], [ %35, %111 ], [ %35, %109 ], [ %35, %107 ], [ %35, %105 ], [ %35, %103 ], [ %35, %101 ], [ %35, %43 ], [ %35, %99 ], [ %35, %11 ]
  %175 = phi i32 [ %148, %147 ], [ %37, %145 ], [ %37, %143 ], [ %37, %141 ], [ %37, %139 ], [ %37, %137 ], [ %37, %135 ], [ %37, %133 ], [ %37, %131 ], [ %37, %129 ], [ %37, %127 ], [ %37, %125 ], [ %37, %123 ], [ %37, %121 ], [ %37, %119 ], [ %37, %117 ], [ %37, %115 ], [ %37, %113 ], [ %37, %111 ], [ %37, %109 ], [ %37, %107 ], [ %37, %105 ], [ %37, %103 ], [ %37, %101 ], [ %37, %43 ], [ %37, %99 ], [ %37, %11 ]
  %176 = add nuw nsw i64 %38, 1
  %177 = icmp eq i64 %176, %10
  br i1 %177, label %41, label %11, !llvm.loop !8

178:                                              ; preds = %47
  %179 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 98, i32 %163)
  br label %180

180:                                              ; preds = %178, %47
  %181 = icmp eq i32 %161, 0
  br i1 %181, label %184, label %182

182:                                              ; preds = %180
  %183 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 99, i32 %161)
  br label %184

184:                                              ; preds = %182, %180
  %185 = icmp eq i32 %164, 0
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 100, i32 %164)
  br label %188

188:                                              ; preds = %186, %184
  %189 = icmp eq i32 %160, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %188
  %191 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 101, i32 %160)
  br label %192

192:                                              ; preds = %190, %188
  %193 = icmp eq i32 %165, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 102, i32 %165)
  br label %196

196:                                              ; preds = %194, %192
  %197 = icmp eq i32 %159, 0
  br i1 %197, label %200, label %198

198:                                              ; preds = %196
  %199 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 103, i32 %159)
  br label %200

200:                                              ; preds = %198, %196
  %201 = icmp eq i32 %166, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %200
  %203 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 104, i32 %166)
  br label %204

204:                                              ; preds = %202, %200
  %205 = icmp eq i32 %158, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %204
  %207 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 105, i32 %158)
  br label %208

208:                                              ; preds = %206, %204
  %209 = icmp eq i32 %167, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  %211 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 106, i32 %167)
  br label %212

212:                                              ; preds = %210, %208
  %213 = icmp eq i32 %157, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %212
  %215 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 107, i32 %157)
  br label %216

216:                                              ; preds = %214, %212
  %217 = icmp eq i32 %168, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %216
  %219 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 108, i32 %168)
  br label %220

220:                                              ; preds = %218, %216
  %221 = icmp eq i32 %156, 0
  br i1 %221, label %224, label %222

222:                                              ; preds = %220
  %223 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 109, i32 %156)
  br label %224

224:                                              ; preds = %222, %220
  %225 = icmp eq i32 %169, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %224
  %227 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 110, i32 %169)
  br label %228

228:                                              ; preds = %226, %224
  %229 = icmp eq i32 %155, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %228
  %231 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 111, i32 %155)
  br label %232

232:                                              ; preds = %230, %228
  %233 = icmp eq i32 %170, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %232
  %235 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112, i32 %170)
  br label %236

236:                                              ; preds = %234, %232
  %237 = icmp eq i32 %154, 0
  br i1 %237, label %240, label %238

238:                                              ; preds = %236
  %239 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 113, i32 %154)
  br label %240

240:                                              ; preds = %238, %236
  %241 = icmp eq i32 %171, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %240
  %243 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 114, i32 %171)
  br label %244

244:                                              ; preds = %242, %240
  %245 = icmp eq i32 %153, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %244
  %247 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 115, i32 %153)
  br label %248

248:                                              ; preds = %246, %244
  %249 = icmp eq i32 %172, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %248
  %251 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 116, i32 %172)
  br label %252

252:                                              ; preds = %250, %248
  %253 = icmp eq i32 %152, 0
  br i1 %253, label %256, label %254

254:                                              ; preds = %252
  %255 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 117, i32 %152)
  br label %256

256:                                              ; preds = %254, %252
  %257 = icmp eq i32 %173, 0
  br i1 %257, label %260, label %258

258:                                              ; preds = %256
  %259 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 118, i32 %173)
  br label %260

260:                                              ; preds = %258, %256
  %261 = icmp eq i32 %151, 0
  br i1 %261, label %264, label %262

262:                                              ; preds = %260
  %263 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 119, i32 %151)
  br label %264

264:                                              ; preds = %262, %260
  %265 = icmp eq i32 %174, 0
  br i1 %265, label %268, label %266

266:                                              ; preds = %264
  %267 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 120, i32 %174)
  br label %268

268:                                              ; preds = %266, %264
  %269 = icmp eq i32 %150, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %268
  %271 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 121, i32 %150)
  br label %272

272:                                              ; preds = %270, %268
  %273 = icmp eq i32 %175, 0
  br i1 %273, label %276, label %274

274:                                              ; preds = %272
  %275 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 122, i32 %175)
  br i1 %42, label %49, label %98

276:                                              ; preds = %272
  br i1 %42, label %49, label %98

277:                                              ; preds = %49, %2
  %278 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  br label %98
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @gets(...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
