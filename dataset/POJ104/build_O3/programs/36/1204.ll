; ModuleID = 'source-C-CXX/36/1204.c'
source_filename = "source-C-CXX/36/1204.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@sz = dso_local global [100000 x i8] zeroinitializer, align 16
@.str.4 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@str = private unnamed_addr constant [3 x i8] c"no\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #5
  %3 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %1)
  %4 = load i32, i32* %1, align 4, !tbaa !5
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %17

6:                                                ; preds = %0, %13
  %7 = phi i32 [ %14, %13 ], [ 0, %0 ]
  %8 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([100000 x i8], [100000 x i8]* @sz, i64 0, i64 0))
  %9 = call i32 @zd(i8* getelementptr inbounds ([100000 x i8], [100000 x i8]* @sz, i64 0, i64 0))
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str, i64 0, i64 0))
  br label %13

13:                                               ; preds = %6, %11
  %14 = add nuw nsw i32 %7, 1
  %15 = load i32, i32* %1, align 4, !tbaa !5
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %6, label %17, !llvm.loop !9

17:                                               ; preds = %13, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #5
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local i32 @zd(i8* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %0) #6
  %3 = trunc i64 %2 to i32
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %76

5:                                                ; preds = %1
  %6 = and i64 %2, 4294967295
  br label %7

7:                                                ; preds = %5, %128
  %8 = phi i32 [ 0, %5 ], [ %141, %128 ]
  %9 = phi i32 [ 0, %5 ], [ %142, %128 ]
  %10 = phi i32 [ 0, %5 ], [ %140, %128 ]
  %11 = phi i32 [ 0, %5 ], [ %143, %128 ]
  %12 = phi i32 [ 0, %5 ], [ %139, %128 ]
  %13 = phi i32 [ 0, %5 ], [ %144, %128 ]
  %14 = phi i32 [ 0, %5 ], [ %138, %128 ]
  %15 = phi i32 [ 0, %5 ], [ %145, %128 ]
  %16 = phi i32 [ 0, %5 ], [ %137, %128 ]
  %17 = phi i32 [ 0, %5 ], [ %146, %128 ]
  %18 = phi i32 [ 0, %5 ], [ %136, %128 ]
  %19 = phi i32 [ 0, %5 ], [ %147, %128 ]
  %20 = phi i32 [ 0, %5 ], [ %135, %128 ]
  %21 = phi i32 [ 0, %5 ], [ %148, %128 ]
  %22 = phi i32 [ 0, %5 ], [ %134, %128 ]
  %23 = phi i32 [ 0, %5 ], [ %149, %128 ]
  %24 = phi i32 [ 0, %5 ], [ %133, %128 ]
  %25 = phi i32 [ 0, %5 ], [ %150, %128 ]
  %26 = phi i32 [ 0, %5 ], [ %132, %128 ]
  %27 = phi i32 [ 0, %5 ], [ %151, %128 ]
  %28 = phi i32 [ 0, %5 ], [ %131, %128 ]
  %29 = phi i32 [ 0, %5 ], [ %152, %128 ]
  %30 = phi i32 [ 0, %5 ], [ %130, %128 ]
  %31 = phi i32 [ 0, %5 ], [ %153, %128 ]
  %32 = phi i32 [ 0, %5 ], [ %129, %128 ]
  %33 = phi i32 [ 0, %5 ], [ %154, %128 ]
  %34 = phi i64 [ 0, %5 ], [ %155, %128 ]
  %35 = getelementptr inbounds i8, i8* %0, i64 %34
  %36 = load i8, i8* %35, align 1, !tbaa !11
  switch i8 %36, label %128 [
    i8 97, label %66
    i8 98, label %78
    i8 99, label %80
    i8 100, label %82
    i8 101, label %84
    i8 102, label %86
    i8 103, label %88
    i8 104, label %90
    i8 105, label %92
    i8 106, label %94
    i8 107, label %96
    i8 108, label %98
    i8 109, label %100
    i8 110, label %102
    i8 111, label %104
    i8 112, label %106
    i8 113, label %108
    i8 114, label %110
    i8 115, label %112
    i8 116, label %114
    i8 117, label %116
    i8 118, label %118
    i8 119, label %120
    i8 120, label %122
    i8 121, label %124
    i8 122, label %126
  ]

37:                                               ; preds = %128
  br i1 %4, label %38, label %76

38:                                               ; preds = %37
  %39 = and i64 %2, 4294967295
  %40 = icmp eq i32 %154, 1
  %41 = icmp eq i32 %129, 1
  %42 = icmp eq i32 %153, 1
  %43 = icmp eq i32 %130, 1
  %44 = icmp eq i32 %152, 1
  %45 = icmp eq i32 %131, 1
  %46 = icmp eq i32 %151, 1
  %47 = icmp eq i32 %132, 1
  %48 = icmp eq i32 %150, 1
  %49 = icmp eq i32 %133, 1
  %50 = icmp eq i32 %149, 1
  %51 = icmp eq i32 %134, 1
  %52 = icmp eq i32 %148, 1
  %53 = icmp eq i32 %135, 1
  %54 = icmp eq i32 %147, 1
  %55 = icmp eq i32 %136, 1
  %56 = icmp eq i32 %146, 1
  %57 = icmp eq i32 %137, 1
  %58 = icmp eq i32 %145, 1
  %59 = icmp eq i32 %138, 1
  %60 = icmp eq i32 %144, 1
  %61 = icmp eq i32 %139, 1
  %62 = icmp eq i32 %143, 1
  %63 = icmp eq i32 %140, 1
  %64 = icmp eq i32 %142, 1
  %65 = icmp eq i32 %141, 1
  br label %68

66:                                               ; preds = %7
  %67 = add nsw i32 %8, 1
  br label %128

68:                                               ; preds = %38, %182
  %69 = phi i64 [ 0, %38 ], [ %183, %182 ]
  %70 = getelementptr inbounds i8, i8* %0, i64 %69
  %71 = load i8, i8* %70, align 1, !tbaa !11
  switch i8 %71, label %182 [
    i8 97, label %72
    i8 98, label %157
    i8 99, label %158
    i8 100, label %159
    i8 101, label %160
    i8 102, label %161
    i8 103, label %162
    i8 104, label %163
    i8 105, label %164
    i8 106, label %165
    i8 107, label %166
    i8 108, label %167
    i8 109, label %168
    i8 110, label %169
    i8 111, label %170
    i8 112, label %171
    i8 113, label %172
    i8 114, label %173
    i8 115, label %174
    i8 116, label %175
    i8 117, label %176
    i8 118, label %177
    i8 119, label %178
    i8 120, label %179
    i8 121, label %180
    i8 122, label %181
  ]

72:                                               ; preds = %68
  br i1 %65, label %73, label %182

73:                                               ; preds = %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167, %166, %165, %164, %163, %162, %161, %160, %159, %158, %157, %72
  %74 = phi i32 [ 97, %72 ], [ 98, %157 ], [ 99, %158 ], [ 100, %159 ], [ 101, %160 ], [ 102, %161 ], [ 103, %162 ], [ 104, %163 ], [ 105, %164 ], [ 106, %165 ], [ 107, %166 ], [ 108, %167 ], [ 109, %168 ], [ 110, %169 ], [ 111, %170 ], [ 112, %171 ], [ 113, %172 ], [ 114, %173 ], [ 115, %174 ], [ 116, %175 ], [ 117, %176 ], [ 118, %177 ], [ 119, %178 ], [ 120, %179 ], [ 121, %180 ], [ 122, %181 ]
  %75 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 %74)
  br label %76

76:                                               ; preds = %182, %1, %37, %73
  %77 = phi i32 [ 1, %73 ], [ 0, %37 ], [ 0, %1 ], [ 0, %182 ]
  ret i32 %77

78:                                               ; preds = %7
  %79 = add nsw i32 %9, 1
  br label %128

80:                                               ; preds = %7
  %81 = add nsw i32 %10, 1
  br label %128

82:                                               ; preds = %7
  %83 = add nsw i32 %11, 1
  br label %128

84:                                               ; preds = %7
  %85 = add nsw i32 %12, 1
  br label %128

86:                                               ; preds = %7
  %87 = add nsw i32 %13, 1
  br label %128

88:                                               ; preds = %7
  %89 = add nsw i32 %14, 1
  br label %128

90:                                               ; preds = %7
  %91 = add nsw i32 %15, 1
  br label %128

92:                                               ; preds = %7
  %93 = add nsw i32 %16, 1
  br label %128

94:                                               ; preds = %7
  %95 = add nsw i32 %17, 1
  br label %128

96:                                               ; preds = %7
  %97 = add nsw i32 %18, 1
  br label %128

98:                                               ; preds = %7
  %99 = add nsw i32 %19, 1
  br label %128

100:                                              ; preds = %7
  %101 = add nsw i32 %20, 1
  br label %128

102:                                              ; preds = %7
  %103 = add nsw i32 %21, 1
  br label %128

104:                                              ; preds = %7
  %105 = add nsw i32 %22, 1
  br label %128

106:                                              ; preds = %7
  %107 = add nsw i32 %23, 1
  br label %128

108:                                              ; preds = %7
  %109 = add nsw i32 %24, 1
  br label %128

110:                                              ; preds = %7
  %111 = add nsw i32 %25, 1
  br label %128

112:                                              ; preds = %7
  %113 = add nsw i32 %26, 1
  br label %128

114:                                              ; preds = %7
  %115 = add nsw i32 %27, 1
  br label %128

116:                                              ; preds = %7
  %117 = add nsw i32 %28, 1
  br label %128

118:                                              ; preds = %7
  %119 = add nsw i32 %29, 1
  br label %128

120:                                              ; preds = %7
  %121 = add nsw i32 %30, 1
  br label %128

122:                                              ; preds = %7
  %123 = add nsw i32 %31, 1
  br label %128

124:                                              ; preds = %7
  %125 = add nsw i32 %32, 1
  br label %128

126:                                              ; preds = %7
  %127 = add nsw i32 %33, 1
  br label %128

128:                                              ; preds = %7, %78, %66, %80, %82, %84, %86, %88, %90, %92, %94, %96, %98, %100, %102, %104, %106, %108, %110, %112, %114, %116, %118, %120, %122, %124, %126
  %129 = phi i32 [ %32, %126 ], [ %125, %124 ], [ %32, %122 ], [ %32, %120 ], [ %32, %118 ], [ %32, %116 ], [ %32, %114 ], [ %32, %112 ], [ %32, %110 ], [ %32, %108 ], [ %32, %106 ], [ %32, %104 ], [ %32, %102 ], [ %32, %100 ], [ %32, %98 ], [ %32, %96 ], [ %32, %94 ], [ %32, %92 ], [ %32, %90 ], [ %32, %88 ], [ %32, %86 ], [ %32, %84 ], [ %32, %82 ], [ %32, %80 ], [ %32, %66 ], [ %32, %78 ], [ %32, %7 ]
  %130 = phi i32 [ %30, %126 ], [ %30, %124 ], [ %30, %122 ], [ %121, %120 ], [ %30, %118 ], [ %30, %116 ], [ %30, %114 ], [ %30, %112 ], [ %30, %110 ], [ %30, %108 ], [ %30, %106 ], [ %30, %104 ], [ %30, %102 ], [ %30, %100 ], [ %30, %98 ], [ %30, %96 ], [ %30, %94 ], [ %30, %92 ], [ %30, %90 ], [ %30, %88 ], [ %30, %86 ], [ %30, %84 ], [ %30, %82 ], [ %30, %80 ], [ %30, %66 ], [ %30, %78 ], [ %30, %7 ]
  %131 = phi i32 [ %28, %126 ], [ %28, %124 ], [ %28, %122 ], [ %28, %120 ], [ %28, %118 ], [ %117, %116 ], [ %28, %114 ], [ %28, %112 ], [ %28, %110 ], [ %28, %108 ], [ %28, %106 ], [ %28, %104 ], [ %28, %102 ], [ %28, %100 ], [ %28, %98 ], [ %28, %96 ], [ %28, %94 ], [ %28, %92 ], [ %28, %90 ], [ %28, %88 ], [ %28, %86 ], [ %28, %84 ], [ %28, %82 ], [ %28, %80 ], [ %28, %66 ], [ %28, %78 ], [ %28, %7 ]
  %132 = phi i32 [ %26, %126 ], [ %26, %124 ], [ %26, %122 ], [ %26, %120 ], [ %26, %118 ], [ %26, %116 ], [ %26, %114 ], [ %113, %112 ], [ %26, %110 ], [ %26, %108 ], [ %26, %106 ], [ %26, %104 ], [ %26, %102 ], [ %26, %100 ], [ %26, %98 ], [ %26, %96 ], [ %26, %94 ], [ %26, %92 ], [ %26, %90 ], [ %26, %88 ], [ %26, %86 ], [ %26, %84 ], [ %26, %82 ], [ %26, %80 ], [ %26, %66 ], [ %26, %78 ], [ %26, %7 ]
  %133 = phi i32 [ %24, %126 ], [ %24, %124 ], [ %24, %122 ], [ %24, %120 ], [ %24, %118 ], [ %24, %116 ], [ %24, %114 ], [ %24, %112 ], [ %24, %110 ], [ %109, %108 ], [ %24, %106 ], [ %24, %104 ], [ %24, %102 ], [ %24, %100 ], [ %24, %98 ], [ %24, %96 ], [ %24, %94 ], [ %24, %92 ], [ %24, %90 ], [ %24, %88 ], [ %24, %86 ], [ %24, %84 ], [ %24, %82 ], [ %24, %80 ], [ %24, %66 ], [ %24, %78 ], [ %24, %7 ]
  %134 = phi i32 [ %22, %126 ], [ %22, %124 ], [ %22, %122 ], [ %22, %120 ], [ %22, %118 ], [ %22, %116 ], [ %22, %114 ], [ %22, %112 ], [ %22, %110 ], [ %22, %108 ], [ %22, %106 ], [ %105, %104 ], [ %22, %102 ], [ %22, %100 ], [ %22, %98 ], [ %22, %96 ], [ %22, %94 ], [ %22, %92 ], [ %22, %90 ], [ %22, %88 ], [ %22, %86 ], [ %22, %84 ], [ %22, %82 ], [ %22, %80 ], [ %22, %66 ], [ %22, %78 ], [ %22, %7 ]
  %135 = phi i32 [ %20, %126 ], [ %20, %124 ], [ %20, %122 ], [ %20, %120 ], [ %20, %118 ], [ %20, %116 ], [ %20, %114 ], [ %20, %112 ], [ %20, %110 ], [ %20, %108 ], [ %20, %106 ], [ %20, %104 ], [ %20, %102 ], [ %101, %100 ], [ %20, %98 ], [ %20, %96 ], [ %20, %94 ], [ %20, %92 ], [ %20, %90 ], [ %20, %88 ], [ %20, %86 ], [ %20, %84 ], [ %20, %82 ], [ %20, %80 ], [ %20, %66 ], [ %20, %78 ], [ %20, %7 ]
  %136 = phi i32 [ %18, %126 ], [ %18, %124 ], [ %18, %122 ], [ %18, %120 ], [ %18, %118 ], [ %18, %116 ], [ %18, %114 ], [ %18, %112 ], [ %18, %110 ], [ %18, %108 ], [ %18, %106 ], [ %18, %104 ], [ %18, %102 ], [ %18, %100 ], [ %18, %98 ], [ %97, %96 ], [ %18, %94 ], [ %18, %92 ], [ %18, %90 ], [ %18, %88 ], [ %18, %86 ], [ %18, %84 ], [ %18, %82 ], [ %18, %80 ], [ %18, %66 ], [ %18, %78 ], [ %18, %7 ]
  %137 = phi i32 [ %16, %126 ], [ %16, %124 ], [ %16, %122 ], [ %16, %120 ], [ %16, %118 ], [ %16, %116 ], [ %16, %114 ], [ %16, %112 ], [ %16, %110 ], [ %16, %108 ], [ %16, %106 ], [ %16, %104 ], [ %16, %102 ], [ %16, %100 ], [ %16, %98 ], [ %16, %96 ], [ %16, %94 ], [ %93, %92 ], [ %16, %90 ], [ %16, %88 ], [ %16, %86 ], [ %16, %84 ], [ %16, %82 ], [ %16, %80 ], [ %16, %66 ], [ %16, %78 ], [ %16, %7 ]
  %138 = phi i32 [ %14, %126 ], [ %14, %124 ], [ %14, %122 ], [ %14, %120 ], [ %14, %118 ], [ %14, %116 ], [ %14, %114 ], [ %14, %112 ], [ %14, %110 ], [ %14, %108 ], [ %14, %106 ], [ %14, %104 ], [ %14, %102 ], [ %14, %100 ], [ %14, %98 ], [ %14, %96 ], [ %14, %94 ], [ %14, %92 ], [ %14, %90 ], [ %89, %88 ], [ %14, %86 ], [ %14, %84 ], [ %14, %82 ], [ %14, %80 ], [ %14, %66 ], [ %14, %78 ], [ %14, %7 ]
  %139 = phi i32 [ %12, %126 ], [ %12, %124 ], [ %12, %122 ], [ %12, %120 ], [ %12, %118 ], [ %12, %116 ], [ %12, %114 ], [ %12, %112 ], [ %12, %110 ], [ %12, %108 ], [ %12, %106 ], [ %12, %104 ], [ %12, %102 ], [ %12, %100 ], [ %12, %98 ], [ %12, %96 ], [ %12, %94 ], [ %12, %92 ], [ %12, %90 ], [ %12, %88 ], [ %12, %86 ], [ %85, %84 ], [ %12, %82 ], [ %12, %80 ], [ %12, %66 ], [ %12, %78 ], [ %12, %7 ]
  %140 = phi i32 [ %10, %126 ], [ %10, %124 ], [ %10, %122 ], [ %10, %120 ], [ %10, %118 ], [ %10, %116 ], [ %10, %114 ], [ %10, %112 ], [ %10, %110 ], [ %10, %108 ], [ %10, %106 ], [ %10, %104 ], [ %10, %102 ], [ %10, %100 ], [ %10, %98 ], [ %10, %96 ], [ %10, %94 ], [ %10, %92 ], [ %10, %90 ], [ %10, %88 ], [ %10, %86 ], [ %10, %84 ], [ %10, %82 ], [ %81, %80 ], [ %10, %66 ], [ %10, %78 ], [ %10, %7 ]
  %141 = phi i32 [ %8, %126 ], [ %8, %124 ], [ %8, %122 ], [ %8, %120 ], [ %8, %118 ], [ %8, %116 ], [ %8, %114 ], [ %8, %112 ], [ %8, %110 ], [ %8, %108 ], [ %8, %106 ], [ %8, %104 ], [ %8, %102 ], [ %8, %100 ], [ %8, %98 ], [ %8, %96 ], [ %8, %94 ], [ %8, %92 ], [ %8, %90 ], [ %8, %88 ], [ %8, %86 ], [ %8, %84 ], [ %8, %82 ], [ %8, %80 ], [ %67, %66 ], [ %8, %78 ], [ %8, %7 ]
  %142 = phi i32 [ %9, %126 ], [ %9, %124 ], [ %9, %122 ], [ %9, %120 ], [ %9, %118 ], [ %9, %116 ], [ %9, %114 ], [ %9, %112 ], [ %9, %110 ], [ %9, %108 ], [ %9, %106 ], [ %9, %104 ], [ %9, %102 ], [ %9, %100 ], [ %9, %98 ], [ %9, %96 ], [ %9, %94 ], [ %9, %92 ], [ %9, %90 ], [ %9, %88 ], [ %9, %86 ], [ %9, %84 ], [ %9, %82 ], [ %9, %80 ], [ %9, %66 ], [ %79, %78 ], [ %9, %7 ]
  %143 = phi i32 [ %11, %126 ], [ %11, %124 ], [ %11, %122 ], [ %11, %120 ], [ %11, %118 ], [ %11, %116 ], [ %11, %114 ], [ %11, %112 ], [ %11, %110 ], [ %11, %108 ], [ %11, %106 ], [ %11, %104 ], [ %11, %102 ], [ %11, %100 ], [ %11, %98 ], [ %11, %96 ], [ %11, %94 ], [ %11, %92 ], [ %11, %90 ], [ %11, %88 ], [ %11, %86 ], [ %11, %84 ], [ %83, %82 ], [ %11, %80 ], [ %11, %66 ], [ %11, %78 ], [ %11, %7 ]
  %144 = phi i32 [ %13, %126 ], [ %13, %124 ], [ %13, %122 ], [ %13, %120 ], [ %13, %118 ], [ %13, %116 ], [ %13, %114 ], [ %13, %112 ], [ %13, %110 ], [ %13, %108 ], [ %13, %106 ], [ %13, %104 ], [ %13, %102 ], [ %13, %100 ], [ %13, %98 ], [ %13, %96 ], [ %13, %94 ], [ %13, %92 ], [ %13, %90 ], [ %13, %88 ], [ %87, %86 ], [ %13, %84 ], [ %13, %82 ], [ %13, %80 ], [ %13, %66 ], [ %13, %78 ], [ %13, %7 ]
  %145 = phi i32 [ %15, %126 ], [ %15, %124 ], [ %15, %122 ], [ %15, %120 ], [ %15, %118 ], [ %15, %116 ], [ %15, %114 ], [ %15, %112 ], [ %15, %110 ], [ %15, %108 ], [ %15, %106 ], [ %15, %104 ], [ %15, %102 ], [ %15, %100 ], [ %15, %98 ], [ %15, %96 ], [ %15, %94 ], [ %15, %92 ], [ %91, %90 ], [ %15, %88 ], [ %15, %86 ], [ %15, %84 ], [ %15, %82 ], [ %15, %80 ], [ %15, %66 ], [ %15, %78 ], [ %15, %7 ]
  %146 = phi i32 [ %17, %126 ], [ %17, %124 ], [ %17, %122 ], [ %17, %120 ], [ %17, %118 ], [ %17, %116 ], [ %17, %114 ], [ %17, %112 ], [ %17, %110 ], [ %17, %108 ], [ %17, %106 ], [ %17, %104 ], [ %17, %102 ], [ %17, %100 ], [ %17, %98 ], [ %17, %96 ], [ %95, %94 ], [ %17, %92 ], [ %17, %90 ], [ %17, %88 ], [ %17, %86 ], [ %17, %84 ], [ %17, %82 ], [ %17, %80 ], [ %17, %66 ], [ %17, %78 ], [ %17, %7 ]
  %147 = phi i32 [ %19, %126 ], [ %19, %124 ], [ %19, %122 ], [ %19, %120 ], [ %19, %118 ], [ %19, %116 ], [ %19, %114 ], [ %19, %112 ], [ %19, %110 ], [ %19, %108 ], [ %19, %106 ], [ %19, %104 ], [ %19, %102 ], [ %19, %100 ], [ %99, %98 ], [ %19, %96 ], [ %19, %94 ], [ %19, %92 ], [ %19, %90 ], [ %19, %88 ], [ %19, %86 ], [ %19, %84 ], [ %19, %82 ], [ %19, %80 ], [ %19, %66 ], [ %19, %78 ], [ %19, %7 ]
  %148 = phi i32 [ %21, %126 ], [ %21, %124 ], [ %21, %122 ], [ %21, %120 ], [ %21, %118 ], [ %21, %116 ], [ %21, %114 ], [ %21, %112 ], [ %21, %110 ], [ %21, %108 ], [ %21, %106 ], [ %21, %104 ], [ %103, %102 ], [ %21, %100 ], [ %21, %98 ], [ %21, %96 ], [ %21, %94 ], [ %21, %92 ], [ %21, %90 ], [ %21, %88 ], [ %21, %86 ], [ %21, %84 ], [ %21, %82 ], [ %21, %80 ], [ %21, %66 ], [ %21, %78 ], [ %21, %7 ]
  %149 = phi i32 [ %23, %126 ], [ %23, %124 ], [ %23, %122 ], [ %23, %120 ], [ %23, %118 ], [ %23, %116 ], [ %23, %114 ], [ %23, %112 ], [ %23, %110 ], [ %23, %108 ], [ %107, %106 ], [ %23, %104 ], [ %23, %102 ], [ %23, %100 ], [ %23, %98 ], [ %23, %96 ], [ %23, %94 ], [ %23, %92 ], [ %23, %90 ], [ %23, %88 ], [ %23, %86 ], [ %23, %84 ], [ %23, %82 ], [ %23, %80 ], [ %23, %66 ], [ %23, %78 ], [ %23, %7 ]
  %150 = phi i32 [ %25, %126 ], [ %25, %124 ], [ %25, %122 ], [ %25, %120 ], [ %25, %118 ], [ %25, %116 ], [ %25, %114 ], [ %25, %112 ], [ %111, %110 ], [ %25, %108 ], [ %25, %106 ], [ %25, %104 ], [ %25, %102 ], [ %25, %100 ], [ %25, %98 ], [ %25, %96 ], [ %25, %94 ], [ %25, %92 ], [ %25, %90 ], [ %25, %88 ], [ %25, %86 ], [ %25, %84 ], [ %25, %82 ], [ %25, %80 ], [ %25, %66 ], [ %25, %78 ], [ %25, %7 ]
  %151 = phi i32 [ %27, %126 ], [ %27, %124 ], [ %27, %122 ], [ %27, %120 ], [ %27, %118 ], [ %27, %116 ], [ %115, %114 ], [ %27, %112 ], [ %27, %110 ], [ %27, %108 ], [ %27, %106 ], [ %27, %104 ], [ %27, %102 ], [ %27, %100 ], [ %27, %98 ], [ %27, %96 ], [ %27, %94 ], [ %27, %92 ], [ %27, %90 ], [ %27, %88 ], [ %27, %86 ], [ %27, %84 ], [ %27, %82 ], [ %27, %80 ], [ %27, %66 ], [ %27, %78 ], [ %27, %7 ]
  %152 = phi i32 [ %29, %126 ], [ %29, %124 ], [ %29, %122 ], [ %29, %120 ], [ %119, %118 ], [ %29, %116 ], [ %29, %114 ], [ %29, %112 ], [ %29, %110 ], [ %29, %108 ], [ %29, %106 ], [ %29, %104 ], [ %29, %102 ], [ %29, %100 ], [ %29, %98 ], [ %29, %96 ], [ %29, %94 ], [ %29, %92 ], [ %29, %90 ], [ %29, %88 ], [ %29, %86 ], [ %29, %84 ], [ %29, %82 ], [ %29, %80 ], [ %29, %66 ], [ %29, %78 ], [ %29, %7 ]
  %153 = phi i32 [ %31, %126 ], [ %31, %124 ], [ %123, %122 ], [ %31, %120 ], [ %31, %118 ], [ %31, %116 ], [ %31, %114 ], [ %31, %112 ], [ %31, %110 ], [ %31, %108 ], [ %31, %106 ], [ %31, %104 ], [ %31, %102 ], [ %31, %100 ], [ %31, %98 ], [ %31, %96 ], [ %31, %94 ], [ %31, %92 ], [ %31, %90 ], [ %31, %88 ], [ %31, %86 ], [ %31, %84 ], [ %31, %82 ], [ %31, %80 ], [ %31, %66 ], [ %31, %78 ], [ %31, %7 ]
  %154 = phi i32 [ %127, %126 ], [ %33, %124 ], [ %33, %122 ], [ %33, %120 ], [ %33, %118 ], [ %33, %116 ], [ %33, %114 ], [ %33, %112 ], [ %33, %110 ], [ %33, %108 ], [ %33, %106 ], [ %33, %104 ], [ %33, %102 ], [ %33, %100 ], [ %33, %98 ], [ %33, %96 ], [ %33, %94 ], [ %33, %92 ], [ %33, %90 ], [ %33, %88 ], [ %33, %86 ], [ %33, %84 ], [ %33, %82 ], [ %33, %80 ], [ %33, %66 ], [ %33, %78 ], [ %33, %7 ]
  %155 = add nuw nsw i64 %34, 1
  %156 = icmp eq i64 %155, %6
  br i1 %156, label %37, label %7, !llvm.loop !12

157:                                              ; preds = %68
  br i1 %64, label %73, label %182

158:                                              ; preds = %68
  br i1 %63, label %73, label %182

159:                                              ; preds = %68
  br i1 %62, label %73, label %182

160:                                              ; preds = %68
  br i1 %61, label %73, label %182

161:                                              ; preds = %68
  br i1 %60, label %73, label %182

162:                                              ; preds = %68
  br i1 %59, label %73, label %182

163:                                              ; preds = %68
  br i1 %58, label %73, label %182

164:                                              ; preds = %68
  br i1 %57, label %73, label %182

165:                                              ; preds = %68
  br i1 %56, label %73, label %182

166:                                              ; preds = %68
  br i1 %55, label %73, label %182

167:                                              ; preds = %68
  br i1 %54, label %73, label %182

168:                                              ; preds = %68
  br i1 %53, label %73, label %182

169:                                              ; preds = %68
  br i1 %52, label %73, label %182

170:                                              ; preds = %68
  br i1 %51, label %73, label %182

171:                                              ; preds = %68
  br i1 %50, label %73, label %182

172:                                              ; preds = %68
  br i1 %49, label %73, label %182

173:                                              ; preds = %68
  br i1 %48, label %73, label %182

174:                                              ; preds = %68
  br i1 %47, label %73, label %182

175:                                              ; preds = %68
  br i1 %46, label %73, label %182

176:                                              ; preds = %68
  br i1 %45, label %73, label %182

177:                                              ; preds = %68
  br i1 %44, label %73, label %182

178:                                              ; preds = %68
  br i1 %43, label %73, label %182

179:                                              ; preds = %68
  br i1 %42, label %73, label %182

180:                                              ; preds = %68
  br i1 %41, label %73, label %182

181:                                              ; preds = %68
  br i1 %40, label %73, label %182

182:                                              ; preds = %68, %72, %157, %158, %159, %160, %161, %162, %163, %164, %165, %166, %167, %168, %169, %170, %171, %172, %173, %174, %175, %176, %177, %178, %179, %180, %181
  %183 = add nuw nsw i64 %69, 1
  %184 = icmp eq i64 %183, %39
  br i1 %184, label %76, label %68, !llvm.loop !13
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #4

attributes #0 = { nofree nounwind sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
