; ModuleID = 'source-C-CXX/96/825.c'
source_filename = "source-C-CXX/96/825.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
  %1 = load i32, i32* @x
  %2 = load i32, i32* @y
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %144

; <label>:9:                                      ; preds = %0, %144
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 0, i32* %10, align 4
  %12 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %11)
  %13 = load i32, i32* %11, align 4
  %14 = sdiv i32 %13, 100
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %14)
  %16 = load i32, i32* %11, align 4
  %17 = load i32, i32* %11, align 4
  %18 = sdiv i32 %17, 100
  %19 = mul nsw i32 %18, 100
  %20 = sub nsw i32 %16, %19
  %21 = sdiv i32 %20, 50
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %21)
  %23 = load i32, i32* %11, align 4
  %24 = load i32, i32* %11, align 4
  %25 = sdiv i32 %24, 100
  %26 = mul nsw i32 %25, 100
  %27 = sub nsw i32 %23, %26
  %28 = load i32, i32* %11, align 4
  %29 = load i32, i32* %11, align 4
  %30 = sdiv i32 %29, 100
  %31 = mul nsw i32 %30, 100
  %32 = sub nsw i32 %28, %31
  %33 = sdiv i32 %32, 50
  %34 = mul nsw i32 %33, 50
  %35 = sub nsw i32 %27, %34
  %36 = sdiv i32 %35, 20
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %36)
  %38 = load i32, i32* %11, align 4
  %39 = load i32, i32* %11, align 4
  %40 = sdiv i32 %39, 100
  %41 = mul nsw i32 %40, 100
  %42 = sub nsw i32 %38, %41
  %43 = load i32, i32* %11, align 4
  %44 = load i32, i32* %11, align 4
  %45 = sdiv i32 %44, 100
  %46 = mul nsw i32 %45, 100
  %47 = sub nsw i32 %43, %46
  %48 = sdiv i32 %47, 50
  %49 = mul nsw i32 %48, 50
  %50 = sub nsw i32 %42, %49
  %51 = load i32, i32* %11, align 4
  %52 = load i32, i32* %11, align 4
  %53 = sdiv i32 %52, 100
  %54 = mul nsw i32 %53, 100
  %55 = sub nsw i32 %51, %54
  %56 = load i32, i32* %11, align 4
  %57 = load i32, i32* %11, align 4
  %58 = sdiv i32 %57, 100
  %59 = mul nsw i32 %58, 100
  %60 = sub nsw i32 %56, %59
  %61 = sdiv i32 %60, 50
  %62 = mul nsw i32 %61, 50
  %63 = sub nsw i32 %55, %62
  %64 = sdiv i32 %63, 20
  %65 = mul nsw i32 %64, 20
  %66 = sub nsw i32 %50, %65
  %67 = sdiv i32 %66, 10
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %67)
  %69 = load i32, i32* %11, align 4
  %70 = load i32, i32* %11, align 4
  %71 = sdiv i32 %70, 100
  %72 = mul nsw i32 %71, 100
  %73 = sub nsw i32 %69, %72
  %74 = load i32, i32* %11, align 4
  %75 = load i32, i32* %11, align 4
  %76 = sdiv i32 %75, 100
  %77 = mul nsw i32 %76, 100
  %78 = sub nsw i32 %74, %77
  %79 = sdiv i32 %78, 50
  %80 = mul nsw i32 %79, 50
  %81 = sub nsw i32 %73, %80
  %82 = load i32, i32* %11, align 4
  %83 = load i32, i32* %11, align 4
  %84 = sdiv i32 %83, 100
  %85 = mul nsw i32 %84, 100
  %86 = sub nsw i32 %82, %85
  %87 = load i32, i32* %11, align 4
  %88 = load i32, i32* %11, align 4
  %89 = sdiv i32 %88, 100
  %90 = mul nsw i32 %89, 100
  %91 = sub nsw i32 %87, %90
  %92 = sdiv i32 %91, 50
  %93 = mul nsw i32 %92, 50
  %94 = sub nsw i32 %86, %93
  %95 = sdiv i32 %94, 20
  %96 = mul nsw i32 %95, 20
  %97 = sub nsw i32 %81, %96
  %98 = load i32, i32* %11, align 4
  %99 = load i32, i32* %11, align 4
  %100 = sdiv i32 %99, 100
  %101 = mul nsw i32 %100, 100
  %102 = sub nsw i32 %98, %101
  %103 = load i32, i32* %11, align 4
  %104 = load i32, i32* %11, align 4
  %105 = sdiv i32 %104, 100
  %106 = mul nsw i32 %105, 100
  %107 = sub nsw i32 %103, %106
  %108 = sdiv i32 %107, 50
  %109 = mul nsw i32 %108, 50
  %110 = sub nsw i32 %102, %109
  %111 = load i32, i32* %11, align 4
  %112 = load i32, i32* %11, align 4
  %113 = sdiv i32 %112, 100
  %114 = mul nsw i32 %113, 100
  %115 = sub nsw i32 %111, %114
  %116 = load i32, i32* %11, align 4
  %117 = load i32, i32* %11, align 4
  %118 = sdiv i32 %117, 100
  %119 = mul nsw i32 %118, 100
  %120 = sub nsw i32 %116, %119
  %121 = sdiv i32 %120, 50
  %122 = mul nsw i32 %121, 50
  %123 = sub nsw i32 %115, %122
  %124 = sdiv i32 %123, 20
  %125 = mul nsw i32 %124, 20
  %126 = sub nsw i32 %110, %125
  %127 = sdiv i32 %126, 10
  %128 = mul nsw i32 %127, 10
  %129 = sub nsw i32 %97, %128
  %130 = sdiv i32 %129, 5
  %131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %130)
  %132 = load i32, i32* %11, align 4
  %133 = srem i32 %132, 5
  %134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %133)
  %135 = load i32, i32* @x
  %136 = load i32, i32* @y
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %143, label %144

; <label>:143:                                    ; preds = %9
  ret i32 0

; <label>:144:                                    ; preds = %9, %0
  %145 = alloca i32, align 4
  %146 = alloca i32, align 4
  store i32 0, i32* %145, align 4
  %147 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %146)
  %148 = load i32, i32* %146, align 4
  %149 = sdiv i32 %148, 100
  %150 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %149)
  %151 = load i32, i32* %146, align 4
  %152 = load i32, i32* %146, align 4
  %153 = sdiv i32 %152, 100
  %154 = sub i32 %153, 100
  %155 = mul i32 %154, 100
  %156 = shl i32 %153, 100
  %157 = mul nsw i32 %153, 100
  %158 = shl i32 %151, %157
  %159 = shl i32 %151, %157
  %160 = shl i32 %151, %157
  %161 = sub i32 0, %151
  %162 = add i32 %161, %157
  %163 = shl i32 %151, %157
  %164 = sub nsw i32 %151, %157
  %165 = sub i32 0, %164
  %166 = add i32 %165, 50
  %167 = sub i32 0, %164
  %168 = add i32 %167, 50
  %169 = sub i32 %164, 50
  %170 = mul i32 %169, 50
  %171 = sub i32 0, %164
  %172 = add i32 %171, 50
  %173 = shl i32 %164, 50
  %174 = sub i32 0, %164
  %175 = add i32 %174, 50
  %176 = shl i32 %164, 50
  %177 = sub i32 0, %164
  %178 = add i32 %177, 50
  %179 = sdiv i32 %164, 50
  %180 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %179)
  %181 = load i32, i32* %146, align 4
  %182 = load i32, i32* %146, align 4
  %183 = shl i32 %182, 100
  %184 = shl i32 %182, 100
  %185 = sub i32 0, %182
  %186 = add i32 %185, 100
  %187 = sub i32 %182, 100
  %188 = mul i32 %187, 100
  %189 = sub i32 %182, 100
  %190 = mul i32 %189, 100
  %191 = shl i32 %182, 100
  %192 = sub i32 %182, 100
  %193 = mul i32 %192, 100
  %194 = shl i32 %182, 100
  %195 = sdiv i32 %182, 100
  %196 = shl i32 %195, 100
  %197 = sub i32 0, %195
  %198 = add i32 %197, 100
  %199 = sub i32 %195, 100
  %200 = mul i32 %199, 100
  %201 = shl i32 %195, 100
  %202 = shl i32 %195, 100
  %203 = sub i32 0, %195
  %204 = add i32 %203, 100
  %205 = shl i32 %195, 100
  %206 = mul nsw i32 %195, 100
  %207 = sub i32 %181, %206
  %208 = mul i32 %207, %206
  %209 = sub i32 0, %181
  %210 = add i32 %209, %206
  %211 = sub i32 %181, %206
  %212 = mul i32 %211, %206
  %213 = sub nsw i32 %181, %206
  %214 = load i32, i32* %146, align 4
  %215 = load i32, i32* %146, align 4
  %216 = sub i32 0, %215
  %217 = add i32 %216, 100
  %218 = sdiv i32 %215, 100
  %219 = shl i32 %218, 100
  %220 = shl i32 %218, 100
  %221 = sub i32 0, %218
  %222 = add i32 %221, 100
  %223 = sub i32 %218, 100
  %224 = mul i32 %223, 100
  %225 = mul nsw i32 %218, 100
  %226 = sub nsw i32 %214, %225
  %227 = sub i32 %226, 50
  %228 = mul i32 %227, 50
  %229 = sub i32 %226, 50
  %230 = mul i32 %229, 50
  %231 = sub i32 0, %226
  %232 = add i32 %231, 50
  %233 = shl i32 %226, 50
  %234 = sub i32 0, %226
  %235 = add i32 %234, 50
  %236 = shl i32 %226, 50
  %237 = sub i32 0, %226
  %238 = add i32 %237, 50
  %239 = sdiv i32 %226, 50
  %240 = shl i32 %239, 50
  %241 = sub i32 0, %239
  %242 = add i32 %241, 50
  %243 = sub i32 0, %239
  %244 = add i32 %243, 50
  %245 = shl i32 %239, 50
  %246 = shl i32 %239, 50
  %247 = mul nsw i32 %239, 50
  %248 = sub i32 0, %213
  %249 = add i32 %248, %247
  %250 = sub i32 %213, %247
  %251 = mul i32 %250, %247
  %252 = shl i32 %213, %247
  %253 = sub i32 0, %213
  %254 = add i32 %253, %247
  %255 = sub i32 0, %213
  %256 = add i32 %255, %247
  %257 = sub i32 0, %213
  %258 = add i32 %257, %247
  %259 = sub nsw i32 %213, %247
  %260 = sub i32 0, %259
  %261 = add i32 %260, 20
  %262 = shl i32 %259, 20
  %263 = shl i32 %259, 20
  %264 = shl i32 %259, 20
  %265 = shl i32 %259, 20
  %266 = sdiv i32 %259, 20
  %267 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %266)
  %268 = load i32, i32* %146, align 4
  %269 = load i32, i32* %146, align 4
  %270 = sub i32 %269, 100
  %271 = mul i32 %270, 100
  %272 = shl i32 %269, 100
  %273 = shl i32 %269, 100
  %274 = sub i32 0, %269
  %275 = add i32 %274, 100
  %276 = sub i32 0, %269
  %277 = add i32 %276, 100
  %278 = sdiv i32 %269, 100
  %279 = sub i32 %278, 100
  %280 = mul i32 %279, 100
  %281 = shl i32 %278, 100
  %282 = shl i32 %278, 100
  %283 = sub i32 0, %278
  %284 = add i32 %283, 100
  %285 = sub i32 %278, 100
  %286 = mul i32 %285, 100
  %287 = mul nsw i32 %278, 100
  %288 = sub i32 %268, %287
  %289 = mul i32 %288, %287
  %290 = shl i32 %268, %287
  %291 = shl i32 %268, %287
  %292 = shl i32 %268, %287
  %293 = sub i32 0, %268
  %294 = add i32 %293, %287
  %295 = shl i32 %268, %287
  %296 = sub i32 0, %268
  %297 = add i32 %296, %287
  %298 = sub nsw i32 %268, %287
  %299 = load i32, i32* %146, align 4
  %300 = load i32, i32* %146, align 4
  %301 = shl i32 %300, 100
  %302 = sub i32 %300, 100
  %303 = mul i32 %302, 100
  %304 = shl i32 %300, 100
  %305 = sdiv i32 %300, 100
  %306 = sub i32 %305, 100
  %307 = mul i32 %306, 100
  %308 = sub i32 %305, 100
  %309 = mul i32 %308, 100
  %310 = mul nsw i32 %305, 100
  %311 = shl i32 %299, %310
  %312 = sub i32 0, %299
  %313 = add i32 %312, %310
  %314 = shl i32 %299, %310
  %315 = sub i32 0, %299
  %316 = add i32 %315, %310
  %317 = sub i32 0, %299
  %318 = add i32 %317, %310
  %319 = sub i32 %299, %310
  %320 = mul i32 %319, %310
  %321 = sub i32 %299, %310
  %322 = mul i32 %321, %310
  %323 = shl i32 %299, %310
  %324 = sub nsw i32 %299, %310
  %325 = shl i32 %324, 50
  %326 = sub i32 0, %324
  %327 = add i32 %326, 50
  %328 = sub i32 0, %324
  %329 = add i32 %328, 50
  %330 = sub i32 0, %324
  %331 = add i32 %330, 50
  %332 = sub i32 0, %324
  %333 = add i32 %332, 50
  %334 = sub i32 %324, 50
  %335 = mul i32 %334, 50
  %336 = sub i32 0, %324
  %337 = add i32 %336, 50
  %338 = sdiv i32 %324, 50
  %339 = shl i32 %338, 50
  %340 = mul nsw i32 %338, 50
  %341 = sub i32 %298, %340
  %342 = mul i32 %341, %340
  %343 = sub i32 %298, %340
  %344 = mul i32 %343, %340
  %345 = shl i32 %298, %340
  %346 = sub i32 %298, %340
  %347 = mul i32 %346, %340
  %348 = sub i32 %298, %340
  %349 = mul i32 %348, %340
  %350 = shl i32 %298, %340
  %351 = sub nsw i32 %298, %340
  %352 = load i32, i32* %146, align 4
  %353 = load i32, i32* %146, align 4
  %354 = shl i32 %353, 100
  %355 = shl i32 %353, 100
  %356 = sub i32 0, %353
  %357 = add i32 %356, 100
  %358 = sub i32 %353, 100
  %359 = mul i32 %358, 100
  %360 = sdiv i32 %353, 100
  %361 = sub i32 %360, 100
  %362 = mul i32 %361, 100
  %363 = shl i32 %360, 100
  %364 = mul nsw i32 %360, 100
  %365 = shl i32 %352, %364
  %366 = sub i32 %352, %364
  %367 = mul i32 %366, %364
  %368 = sub i32 0, %352
  %369 = add i32 %368, %364
  %370 = sub i32 0, %352
  %371 = add i32 %370, %364
  %372 = sub nsw i32 %352, %364
  %373 = load i32, i32* %146, align 4
  %374 = load i32, i32* %146, align 4
  %375 = sub i32 %374, 100
  %376 = mul i32 %375, 100
  %377 = shl i32 %374, 100
  %378 = shl i32 %374, 100
  %379 = sub i32 %374, 100
  %380 = mul i32 %379, 100
  %381 = shl i32 %374, 100
  %382 = sub i32 0, %374
  %383 = add i32 %382, 100
  %384 = shl i32 %374, 100
  %385 = shl i32 %374, 100
  %386 = sdiv i32 %374, 100
  %387 = sub i32 %386, 100
  %388 = mul i32 %387, 100
  %389 = sub i32 0, %386
  %390 = add i32 %389, 100
  %391 = sub i32 %386, 100
  %392 = mul i32 %391, 100
  %393 = sub i32 %386, 100
  %394 = mul i32 %393, 100
  %395 = sub i32 %386, 100
  %396 = mul i32 %395, 100
  %397 = sub i32 %386, 100
  %398 = mul i32 %397, 100
  %399 = sub i32 0, %386
  %400 = add i32 %399, 100
  %401 = shl i32 %386, 100
  %402 = mul nsw i32 %386, 100
  %403 = sub i32 0, %373
  %404 = add i32 %403, %402
  %405 = sub i32 %373, %402
  %406 = mul i32 %405, %402
  %407 = sub i32 0, %373
  %408 = add i32 %407, %402
  %409 = shl i32 %373, %402
  %410 = sub i32 0, %373
  %411 = add i32 %410, %402
  %412 = sub nsw i32 %373, %402
  %413 = sub i32 %412, 50
  %414 = mul i32 %413, 50
  %415 = sub i32 0, %412
  %416 = add i32 %415, 50
  %417 = sub i32 %412, 50
  %418 = mul i32 %417, 50
  %419 = sub i32 0, %412
  %420 = add i32 %419, 50
  %421 = sdiv i32 %412, 50
  %422 = shl i32 %421, 50
  %423 = mul nsw i32 %421, 50
  %424 = shl i32 %372, %423
  %425 = sub i32 %372, %423
  %426 = mul i32 %425, %423
  %427 = sub i32 %372, %423
  %428 = mul i32 %427, %423
  %429 = sub nsw i32 %372, %423
  %430 = sdiv i32 %429, 20
  %431 = sub i32 %430, 20
  %432 = mul i32 %431, 20
  %433 = shl i32 %430, 20
  %434 = sub i32 0, %430
  %435 = add i32 %434, 20
  %436 = sub i32 0, %430
  %437 = add i32 %436, 20
  %438 = sub i32 %430, 20
  %439 = mul i32 %438, 20
  %440 = sub i32 0, %430
  %441 = add i32 %440, 20
  %442 = sub i32 0, %430
  %443 = add i32 %442, 20
  %444 = sub i32 %430, 20
  %445 = mul i32 %444, 20
  %446 = mul nsw i32 %430, 20
  %447 = sub nsw i32 %351, %446
  %448 = shl i32 %447, 10
  %449 = sub i32 %447, 10
  %450 = mul i32 %449, 10
  %451 = sdiv i32 %447, 10
  %452 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %451)
  %453 = load i32, i32* %146, align 4
  %454 = load i32, i32* %146, align 4
  %455 = shl i32 %454, 100
  %456 = sub i32 %454, 100
  %457 = mul i32 %456, 100
  %458 = sub i32 0, %454
  %459 = add i32 %458, 100
  %460 = sub i32 %454, 100
  %461 = mul i32 %460, 100
  %462 = shl i32 %454, 100
  %463 = sdiv i32 %454, 100
  %464 = shl i32 %463, 100
  %465 = sub i32 %463, 100
  %466 = mul i32 %465, 100
  %467 = sub i32 %463, 100
  %468 = mul i32 %467, 100
  %469 = sub i32 %463, 100
  %470 = mul i32 %469, 100
  %471 = shl i32 %463, 100
  %472 = mul nsw i32 %463, 100
  %473 = sub i32 0, %453
  %474 = add i32 %473, %472
  %475 = sub nsw i32 %453, %472
  %476 = load i32, i32* %146, align 4
  %477 = load i32, i32* %146, align 4
  %478 = shl i32 %477, 100
  %479 = shl i32 %477, 100
  %480 = sub i32 %477, 100
  %481 = mul i32 %480, 100
  %482 = shl i32 %477, 100
  %483 = sub i32 %477, 100
  %484 = mul i32 %483, 100
  %485 = sdiv i32 %477, 100
  %486 = sub i32 0, %485
  %487 = add i32 %486, 100
  %488 = shl i32 %485, 100
  %489 = shl i32 %485, 100
  %490 = shl i32 %485, 100
  %491 = mul nsw i32 %485, 100
  %492 = sub i32 0, %476
  %493 = add i32 %492, %491
  %494 = sub i32 %476, %491
  %495 = mul i32 %494, %491
  %496 = sub i32 %476, %491
  %497 = mul i32 %496, %491
  %498 = sub nsw i32 %476, %491
  %499 = shl i32 %498, 50
  %500 = shl i32 %498, 50
  %501 = shl i32 %498, 50
  %502 = sdiv i32 %498, 50
  %503 = sub i32 0, %502
  %504 = add i32 %503, 50
  %505 = sub i32 0, %502
  %506 = add i32 %505, 50
  %507 = sub i32 0, %502
  %508 = add i32 %507, 50
  %509 = sub i32 0, %502
  %510 = add i32 %509, 50
  %511 = mul nsw i32 %502, 50
  %512 = shl i32 %475, %511
  %513 = sub nsw i32 %475, %511
  %514 = load i32, i32* %146, align 4
  %515 = load i32, i32* %146, align 4
  %516 = sub i32 %515, 100
  %517 = mul i32 %516, 100
  %518 = sub i32 %515, 100
  %519 = mul i32 %518, 100
  %520 = shl i32 %515, 100
  %521 = sub i32 %515, 100
  %522 = mul i32 %521, 100
  %523 = sdiv i32 %515, 100
  %524 = shl i32 %523, 100
  %525 = sub i32 %523, 100
  %526 = mul i32 %525, 100
  %527 = sub i32 %523, 100
  %528 = mul i32 %527, 100
  %529 = shl i32 %523, 100
  %530 = sub i32 %523, 100
  %531 = mul i32 %530, 100
  %532 = mul nsw i32 %523, 100
  %533 = sub i32 0, %514
  %534 = add i32 %533, %532
  %535 = shl i32 %514, %532
  %536 = shl i32 %514, %532
  %537 = sub i32 %514, %532
  %538 = mul i32 %537, %532
  %539 = sub nsw i32 %514, %532
  %540 = load i32, i32* %146, align 4
  %541 = load i32, i32* %146, align 4
  %542 = sub i32 0, %541
  %543 = add i32 %542, 100
  %544 = shl i32 %541, 100
  %545 = sdiv i32 %541, 100
  %546 = sub i32 %545, 100
  %547 = mul i32 %546, 100
  %548 = mul nsw i32 %545, 100
  %549 = sub i32 %540, %548
  %550 = mul i32 %549, %548
  %551 = sub i32 %540, %548
  %552 = mul i32 %551, %548
  %553 = sub nsw i32 %540, %548
  %554 = sub i32 0, %553
  %555 = add i32 %554, 50
  %556 = sub i32 %553, 50
  %557 = mul i32 %556, 50
  %558 = sub i32 0, %553
  %559 = add i32 %558, 50
  %560 = sdiv i32 %553, 50
  %561 = sub i32 %560, 50
  %562 = mul i32 %561, 50
  %563 = shl i32 %560, 50
  %564 = shl i32 %560, 50
  %565 = sub i32 %560, 50
  %566 = mul i32 %565, 50
  %567 = shl i32 %560, 50
  %568 = mul nsw i32 %560, 50
  %569 = sub i32 %539, %568
  %570 = mul i32 %569, %568
  %571 = sub nsw i32 %539, %568
  %572 = sub i32 0, %571
  %573 = add i32 %572, 20
  %574 = sub i32 %571, 20
  %575 = mul i32 %574, 20
  %576 = sdiv i32 %571, 20
  %577 = shl i32 %576, 20
  %578 = sub i32 0, %576
  %579 = add i32 %578, 20
  %580 = shl i32 %576, 20
  %581 = sub i32 0, %576
  %582 = add i32 %581, 20
  %583 = shl i32 %576, 20
  %584 = sub i32 %576, 20
  %585 = mul i32 %584, 20
  %586 = sub i32 0, %576
  %587 = add i32 %586, 20
  %588 = mul nsw i32 %576, 20
  %589 = sub i32 0, %513
  %590 = add i32 %589, %588
  %591 = sub i32 0, %513
  %592 = add i32 %591, %588
  %593 = shl i32 %513, %588
  %594 = sub nsw i32 %513, %588
  %595 = load i32, i32* %146, align 4
  %596 = load i32, i32* %146, align 4
  %597 = sub i32 0, %596
  %598 = add i32 %597, 100
  %599 = sub i32 %596, 100
  %600 = mul i32 %599, 100
  %601 = sub i32 0, %596
  %602 = add i32 %601, 100
  %603 = sub i32 0, %596
  %604 = add i32 %603, 100
  %605 = sub i32 %596, 100
  %606 = mul i32 %605, 100
  %607 = sdiv i32 %596, 100
  %608 = shl i32 %607, 100
  %609 = sub i32 %607, 100
  %610 = mul i32 %609, 100
  %611 = sub i32 %607, 100
  %612 = mul i32 %611, 100
  %613 = sub i32 %607, 100
  %614 = mul i32 %613, 100
  %615 = sub i32 0, %607
  %616 = add i32 %615, 100
  %617 = shl i32 %607, 100
  %618 = mul nsw i32 %607, 100
  %619 = sub i32 0, %595
  %620 = add i32 %619, %618
  %621 = sub i32 0, %595
  %622 = add i32 %621, %618
  %623 = sub i32 %595, %618
  %624 = mul i32 %623, %618
  %625 = sub nsw i32 %595, %618
  %626 = load i32, i32* %146, align 4
  %627 = load i32, i32* %146, align 4
  %628 = shl i32 %627, 100
  %629 = sdiv i32 %627, 100
  %630 = sub i32 %629, 100
  %631 = mul i32 %630, 100
  %632 = shl i32 %629, 100
  %633 = sub i32 0, %629
  %634 = add i32 %633, 100
  %635 = mul nsw i32 %629, 100
  %636 = sub nsw i32 %626, %635
  %637 = sub i32 0, %636
  %638 = add i32 %637, 50
  %639 = sub i32 %636, 50
  %640 = mul i32 %639, 50
  %641 = sub i32 0, %636
  %642 = add i32 %641, 50
  %643 = shl i32 %636, 50
  %644 = sub i32 %636, 50
  %645 = mul i32 %644, 50
  %646 = sub i32 0, %636
  %647 = add i32 %646, 50
  %648 = sub i32 %636, 50
  %649 = mul i32 %648, 50
  %650 = sub i32 0, %636
  %651 = add i32 %650, 50
  %652 = sdiv i32 %636, 50
  %653 = sub i32 0, %652
  %654 = add i32 %653, 50
  %655 = shl i32 %652, 50
  %656 = mul nsw i32 %652, 50
  %657 = sub i32 0, %625
  %658 = add i32 %657, %656
  %659 = sub i32 %625, %656
  %660 = mul i32 %659, %656
  %661 = sub i32 0, %625
  %662 = add i32 %661, %656
  %663 = sub i32 %625, %656
  %664 = mul i32 %663, %656
  %665 = sub nsw i32 %625, %656
  %666 = load i32, i32* %146, align 4
  %667 = load i32, i32* %146, align 4
  %668 = sub i32 %667, 100
  %669 = mul i32 %668, 100
  %670 = sub i32 %667, 100
  %671 = mul i32 %670, 100
  %672 = sub i32 %667, 100
  %673 = mul i32 %672, 100
  %674 = shl i32 %667, 100
  %675 = shl i32 %667, 100
  %676 = sdiv i32 %667, 100
  %677 = sub i32 %676, 100
  %678 = mul i32 %677, 100
  %679 = sub i32 %676, 100
  %680 = mul i32 %679, 100
  %681 = sub i32 0, %676
  %682 = add i32 %681, 100
  %683 = shl i32 %676, 100
  %684 = mul nsw i32 %676, 100
  %685 = sub i32 0, %666
  %686 = add i32 %685, %684
  %687 = shl i32 %666, %684
  %688 = shl i32 %666, %684
  %689 = shl i32 %666, %684
  %690 = sub i32 0, %666
  %691 = add i32 %690, %684
  %692 = shl i32 %666, %684
  %693 = sub i32 0, %666
  %694 = add i32 %693, %684
  %695 = sub i32 0, %666
  %696 = add i32 %695, %684
  %697 = sub nsw i32 %666, %684
  %698 = load i32, i32* %146, align 4
  %699 = load i32, i32* %146, align 4
  %700 = shl i32 %699, 100
  %701 = sub i32 0, %699
  %702 = add i32 %701, 100
  %703 = shl i32 %699, 100
  %704 = sub i32 0, %699
  %705 = add i32 %704, 100
  %706 = sdiv i32 %699, 100
  %707 = sub i32 0, %706
  %708 = add i32 %707, 100
  %709 = shl i32 %706, 100
  %710 = sub i32 %706, 100
  %711 = mul i32 %710, 100
  %712 = sub i32 0, %706
  %713 = add i32 %712, 100
  %714 = shl i32 %706, 100
  %715 = mul nsw i32 %706, 100
  %716 = sub i32 0, %698
  %717 = add i32 %716, %715
  %718 = shl i32 %698, %715
  %719 = sub i32 %698, %715
  %720 = mul i32 %719, %715
  %721 = sub i32 %698, %715
  %722 = mul i32 %721, %715
  %723 = sub nsw i32 %698, %715
  %724 = shl i32 %723, 50
  %725 = sub i32 0, %723
  %726 = add i32 %725, 50
  %727 = sub i32 0, %723
  %728 = add i32 %727, 50
  %729 = sub i32 %723, 50
  %730 = mul i32 %729, 50
  %731 = sub i32 %723, 50
  %732 = mul i32 %731, 50
  %733 = sub i32 0, %723
  %734 = add i32 %733, 50
  %735 = shl i32 %723, 50
  %736 = shl i32 %723, 50
  %737 = shl i32 %723, 50
  %738 = sub i32 0, %723
  %739 = add i32 %738, 50
  %740 = sdiv i32 %723, 50
  %741 = shl i32 %740, 50
  %742 = mul nsw i32 %740, 50
  %743 = sub i32 %697, %742
  %744 = mul i32 %743, %742
  %745 = sub i32 0, %697
  %746 = add i32 %745, %742
  %747 = shl i32 %697, %742
  %748 = sub nsw i32 %697, %742
  %749 = shl i32 %748, 20
  %750 = sub i32 0, %748
  %751 = add i32 %750, 20
  %752 = sdiv i32 %748, 20
  %753 = sub i32 0, %752
  %754 = add i32 %753, 20
  %755 = mul nsw i32 %752, 20
  %756 = shl i32 %665, %755
  %757 = sub i32 0, %665
  %758 = add i32 %757, %755
  %759 = sub i32 %665, %755
  %760 = mul i32 %759, %755
  %761 = sub i32 %665, %755
  %762 = mul i32 %761, %755
  %763 = shl i32 %665, %755
  %764 = shl i32 %665, %755
  %765 = sub i32 %665, %755
  %766 = mul i32 %765, %755
  %767 = sub i32 %665, %755
  %768 = mul i32 %767, %755
  %769 = sub nsw i32 %665, %755
  %770 = shl i32 %769, 10
  %771 = sdiv i32 %769, 10
  %772 = sub i32 0, %771
  %773 = add i32 %772, 10
  %774 = sub i32 %771, 10
  %775 = mul i32 %774, 10
  %776 = shl i32 %771, 10
  %777 = sub i32 0, %771
  %778 = add i32 %777, 10
  %779 = sub i32 0, %771
  %780 = add i32 %779, 10
  %781 = mul nsw i32 %771, 10
  %782 = sub i32 %594, %781
  %783 = mul i32 %782, %781
  %784 = sub nsw i32 %594, %781
  %785 = shl i32 %784, 5
  %786 = sub i32 0, %784
  %787 = add i32 %786, 5
  %788 = shl i32 %784, 5
  %789 = sub i32 0, %784
  %790 = add i32 %789, 5
  %791 = sub i32 %784, 5
  %792 = mul i32 %791, 5
  %793 = sdiv i32 %784, 5
  %794 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %793)
  %795 = load i32, i32* %146, align 4
  %796 = shl i32 %795, 5
  %797 = sub i32 %795, 5
  %798 = mul i32 %797, 5
  %799 = shl i32 %795, 5
  %800 = srem i32 %795, 5
  %801 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %800)
  br label %9
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
