; ModuleID = 'source-C-CXX/96/1932.c'
source_filename = "source-C-CXX/96/1932.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"%d\0A%d\0A%d\0A%d\0A%d\0A%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
  %1 = load i32, i32* @x
  %2 = load i32, i32* @y
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %110

; <label>:9:                                      ; preds = %0, %110
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i32 0, i32* %10, align 4
  %18 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %11)
  %19 = load i32, i32* %11, align 4
  %20 = sdiv i32 %19, 100
  %21 = sitofp i32 %20 to double
  %22 = call double @ceil(double %21) #3
  %23 = fptosi double %22 to i32
  store i32 %23, i32* %12, align 4
  %24 = load i32, i32* %11, align 4
  %25 = load i32, i32* %12, align 4
  %26 = mul nsw i32 %25, 100
  %27 = sub nsw i32 %24, %26
  %28 = sdiv i32 %27, 50
  %29 = sitofp i32 %28 to double
  %30 = call double @ceil(double %29) #3
  %31 = fptosi double %30 to i32
  store i32 %31, i32* %13, align 4
  %32 = load i32, i32* %11, align 4
  %33 = load i32, i32* %12, align 4
  %34 = mul nsw i32 %33, 100
  %35 = sub nsw i32 %32, %34
  %36 = load i32, i32* %13, align 4
  %37 = mul nsw i32 %36, 50
  %38 = sub nsw i32 %35, %37
  %39 = sdiv i32 %38, 20
  %40 = sitofp i32 %39 to double
  %41 = call double @ceil(double %40) #3
  %42 = fptosi double %41 to i32
  store i32 %42, i32* %14, align 4
  %43 = load i32, i32* %11, align 4
  %44 = load i32, i32* %12, align 4
  %45 = mul nsw i32 %44, 100
  %46 = sub nsw i32 %43, %45
  %47 = load i32, i32* %13, align 4
  %48 = mul nsw i32 %47, 50
  %49 = sub nsw i32 %46, %48
  %50 = load i32, i32* %14, align 4
  %51 = mul nsw i32 %50, 20
  %52 = sub nsw i32 %49, %51
  %53 = sdiv i32 %52, 10
  %54 = sitofp i32 %53 to double
  %55 = call double @ceil(double %54) #3
  %56 = fptosi double %55 to i32
  store i32 %56, i32* %15, align 4
  %57 = load i32, i32* %11, align 4
  %58 = load i32, i32* %12, align 4
  %59 = mul nsw i32 %58, 100
  %60 = sub nsw i32 %57, %59
  %61 = load i32, i32* %13, align 4
  %62 = mul nsw i32 %61, 50
  %63 = sub nsw i32 %60, %62
  %64 = load i32, i32* %14, align 4
  %65 = mul nsw i32 %64, 20
  %66 = sub nsw i32 %63, %65
  %67 = load i32, i32* %15, align 4
  %68 = mul nsw i32 %67, 10
  %69 = sub nsw i32 %66, %68
  %70 = sdiv i32 %69, 5
  %71 = sitofp i32 %70 to double
  %72 = call double @ceil(double %71) #3
  %73 = fptosi double %72 to i32
  store i32 %73, i32* %16, align 4
  %74 = load i32, i32* %11, align 4
  %75 = load i32, i32* %12, align 4
  %76 = mul nsw i32 %75, 100
  %77 = sub nsw i32 %74, %76
  %78 = load i32, i32* %13, align 4
  %79 = mul nsw i32 %78, 50
  %80 = sub nsw i32 %77, %79
  %81 = load i32, i32* %14, align 4
  %82 = mul nsw i32 %81, 20
  %83 = sub nsw i32 %80, %82
  %84 = load i32, i32* %15, align 4
  %85 = mul nsw i32 %84, 10
  %86 = sub nsw i32 %83, %85
  %87 = load i32, i32* %16, align 4
  %88 = mul nsw i32 %87, 5
  %89 = sub nsw i32 %86, %88
  %90 = sdiv i32 %89, 1
  %91 = sitofp i32 %90 to double
  %92 = call double @ceil(double %91) #3
  %93 = fptosi double %92 to i32
  store i32 %93, i32* %17, align 4
  %94 = load i32, i32* %12, align 4
  %95 = load i32, i32* %13, align 4
  %96 = load i32, i32* %14, align 4
  %97 = load i32, i32* %15, align 4
  %98 = load i32, i32* %16, align 4
  %99 = load i32, i32* %17, align 4
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i32 %94, i32 %95, i32 %96, i32 %97, i32 %98, i32 %99)
  %101 = load i32, i32* @x
  %102 = load i32, i32* @y
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %109, label %110

; <label>:109:                                    ; preds = %9
  ret i32 0

; <label>:110:                                    ; preds = %9, %0
  %111 = alloca i32, align 4
  %112 = alloca i32, align 4
  %113 = alloca i32, align 4
  %114 = alloca i32, align 4
  %115 = alloca i32, align 4
  %116 = alloca i32, align 4
  %117 = alloca i32, align 4
  %118 = alloca i32, align 4
  store i32 0, i32* %111, align 4
  %119 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %112)
  %120 = load i32, i32* %112, align 4
  %121 = sub i32 %120, 100
  %122 = mul i32 %121, 100
  %123 = sdiv i32 %120, 100
  %124 = sitofp i32 %123 to double
  %125 = call double @ceil(double %124) #3
  %126 = fptosi double %125 to i32
  store i32 %126, i32* %113, align 4
  %127 = load i32, i32* %112, align 4
  %128 = load i32, i32* %113, align 4
  %129 = sub i32 %128, 100
  %130 = mul i32 %129, 100
  %131 = sub i32 0, %128
  %132 = add i32 %131, 100
  %133 = mul nsw i32 %128, 100
  %134 = shl i32 %127, %133
  %135 = sub i32 0, %127
  %136 = add i32 %135, %133
  %137 = sub i32 %127, %133
  %138 = mul i32 %137, %133
  %139 = sub i32 %127, %133
  %140 = mul i32 %139, %133
  %141 = sub i32 0, %127
  %142 = add i32 %141, %133
  %143 = shl i32 %127, %133
  %144 = sub i32 0, %127
  %145 = add i32 %144, %133
  %146 = sub i32 0, %127
  %147 = add i32 %146, %133
  %148 = sub nsw i32 %127, %133
  %149 = shl i32 %148, 50
  %150 = shl i32 %148, 50
  %151 = sub i32 %148, 50
  %152 = mul i32 %151, 50
  %153 = sub i32 0, %148
  %154 = add i32 %153, 50
  %155 = shl i32 %148, 50
  %156 = sdiv i32 %148, 50
  %157 = sitofp i32 %156 to double
  %158 = call double @ceil(double %157) #3
  %159 = fptosi double %158 to i32
  store i32 %159, i32* %114, align 4
  %160 = load i32, i32* %112, align 4
  %161 = load i32, i32* %113, align 4
  %162 = shl i32 %161, 100
  %163 = sub i32 %161, 100
  %164 = mul i32 %163, 100
  %165 = sub i32 %161, 100
  %166 = mul i32 %165, 100
  %167 = sub i32 %161, 100
  %168 = mul i32 %167, 100
  %169 = sub i32 0, %161
  %170 = add i32 %169, 100
  %171 = sub i32 %161, 100
  %172 = mul i32 %171, 100
  %173 = mul nsw i32 %161, 100
  %174 = sub i32 0, %160
  %175 = add i32 %174, %173
  %176 = sub i32 0, %160
  %177 = add i32 %176, %173
  %178 = sub nsw i32 %160, %173
  %179 = load i32, i32* %114, align 4
  %180 = sub i32 %179, 50
  %181 = mul i32 %180, 50
  %182 = sub i32 %179, 50
  %183 = mul i32 %182, 50
  %184 = sub i32 0, %179
  %185 = add i32 %184, 50
  %186 = mul nsw i32 %179, 50
  %187 = shl i32 %178, %186
  %188 = sub i32 %178, %186
  %189 = mul i32 %188, %186
  %190 = sub i32 0, %178
  %191 = add i32 %190, %186
  %192 = shl i32 %178, %186
  %193 = shl i32 %178, %186
  %194 = sub i32 %178, %186
  %195 = mul i32 %194, %186
  %196 = sub i32 %178, %186
  %197 = mul i32 %196, %186
  %198 = shl i32 %178, %186
  %199 = sub i32 0, %178
  %200 = add i32 %199, %186
  %201 = sub nsw i32 %178, %186
  %202 = shl i32 %201, 20
  %203 = sub i32 0, %201
  %204 = add i32 %203, 20
  %205 = sub i32 %201, 20
  %206 = mul i32 %205, 20
  %207 = sub i32 0, %201
  %208 = add i32 %207, 20
  %209 = sub i32 %201, 20
  %210 = mul i32 %209, 20
  %211 = sdiv i32 %201, 20
  %212 = sitofp i32 %211 to double
  %213 = call double @ceil(double %212) #3
  %214 = fptosi double %213 to i32
  store i32 %214, i32* %115, align 4
  %215 = load i32, i32* %112, align 4
  %216 = load i32, i32* %113, align 4
  %217 = sub i32 0, %216
  %218 = add i32 %217, 100
  %219 = sub i32 %216, 100
  %220 = mul i32 %219, 100
  %221 = mul nsw i32 %216, 100
  %222 = sub i32 %215, %221
  %223 = mul i32 %222, %221
  %224 = shl i32 %215, %221
  %225 = sub i32 %215, %221
  %226 = mul i32 %225, %221
  %227 = shl i32 %215, %221
  %228 = sub i32 %215, %221
  %229 = mul i32 %228, %221
  %230 = shl i32 %215, %221
  %231 = sub i32 %215, %221
  %232 = mul i32 %231, %221
  %233 = sub i32 0, %215
  %234 = add i32 %233, %221
  %235 = sub i32 0, %215
  %236 = add i32 %235, %221
  %237 = sub nsw i32 %215, %221
  %238 = load i32, i32* %114, align 4
  %239 = mul nsw i32 %238, 50
  %240 = sub i32 0, %237
  %241 = add i32 %240, %239
  %242 = sub nsw i32 %237, %239
  %243 = load i32, i32* %115, align 4
  %244 = sub i32 %243, 20
  %245 = mul i32 %244, 20
  %246 = shl i32 %243, 20
  %247 = mul nsw i32 %243, 20
  %248 = sub i32 %242, %247
  %249 = mul i32 %248, %247
  %250 = sub nsw i32 %242, %247
  %251 = shl i32 %250, 10
  %252 = sub i32 0, %250
  %253 = add i32 %252, 10
  %254 = sub i32 0, %250
  %255 = add i32 %254, 10
  %256 = sub i32 0, %250
  %257 = add i32 %256, 10
  %258 = shl i32 %250, 10
  %259 = sdiv i32 %250, 10
  %260 = sitofp i32 %259 to double
  %261 = call double @ceil(double %260) #3
  %262 = fptosi double %261 to i32
  store i32 %262, i32* %116, align 4
  %263 = load i32, i32* %112, align 4
  %264 = load i32, i32* %113, align 4
  %265 = sub i32 0, %264
  %266 = add i32 %265, 100
  %267 = sub i32 %264, 100
  %268 = mul i32 %267, 100
  %269 = sub i32 0, %264
  %270 = add i32 %269, 100
  %271 = sub i32 0, %264
  %272 = add i32 %271, 100
  %273 = sub i32 %264, 100
  %274 = mul i32 %273, 100
  %275 = shl i32 %264, 100
  %276 = mul nsw i32 %264, 100
  %277 = shl i32 %263, %276
  %278 = sub nsw i32 %263, %276
  %279 = load i32, i32* %114, align 4
  %280 = shl i32 %279, 50
  %281 = sub i32 %279, 50
  %282 = mul i32 %281, 50
  %283 = shl i32 %279, 50
  %284 = shl i32 %279, 50
  %285 = mul nsw i32 %279, 50
  %286 = sub i32 %278, %285
  %287 = mul i32 %286, %285
  %288 = sub i32 %278, %285
  %289 = mul i32 %288, %285
  %290 = sub nsw i32 %278, %285
  %291 = load i32, i32* %115, align 4
  %292 = sub i32 %291, 20
  %293 = mul i32 %292, 20
  %294 = sub i32 0, %291
  %295 = add i32 %294, 20
  %296 = shl i32 %291, 20
  %297 = shl i32 %291, 20
  %298 = sub i32 0, %291
  %299 = add i32 %298, 20
  %300 = shl i32 %291, 20
  %301 = mul nsw i32 %291, 20
  %302 = sub i32 0, %290
  %303 = add i32 %302, %301
  %304 = sub i32 %290, %301
  %305 = mul i32 %304, %301
  %306 = sub i32 %290, %301
  %307 = mul i32 %306, %301
  %308 = sub i32 0, %290
  %309 = add i32 %308, %301
  %310 = sub i32 %290, %301
  %311 = mul i32 %310, %301
  %312 = shl i32 %290, %301
  %313 = sub i32 0, %290
  %314 = add i32 %313, %301
  %315 = sub nsw i32 %290, %301
  %316 = load i32, i32* %116, align 4
  %317 = sub i32 0, %316
  %318 = add i32 %317, 10
  %319 = sub i32 %316, 10
  %320 = mul i32 %319, 10
  %321 = mul nsw i32 %316, 10
  %322 = sub i32 %315, %321
  %323 = mul i32 %322, %321
  %324 = sub i32 %315, %321
  %325 = mul i32 %324, %321
  %326 = sub i32 %315, %321
  %327 = mul i32 %326, %321
  %328 = sub i32 0, %315
  %329 = add i32 %328, %321
  %330 = shl i32 %315, %321
  %331 = sub i32 0, %315
  %332 = add i32 %331, %321
  %333 = sub i32 0, %315
  %334 = add i32 %333, %321
  %335 = sub nsw i32 %315, %321
  %336 = sub i32 0, %335
  %337 = add i32 %336, 5
  %338 = sub i32 0, %335
  %339 = add i32 %338, 5
  %340 = sdiv i32 %335, 5
  %341 = sitofp i32 %340 to double
  %342 = call double @ceil(double %341) #3
  %343 = fptosi double %342 to i32
  store i32 %343, i32* %117, align 4
  %344 = load i32, i32* %112, align 4
  %345 = load i32, i32* %113, align 4
  %346 = shl i32 %345, 100
  %347 = sub i32 %345, 100
  %348 = mul i32 %347, 100
  %349 = shl i32 %345, 100
  %350 = sub i32 0, %345
  %351 = add i32 %350, 100
  %352 = mul nsw i32 %345, 100
  %353 = sub i32 %344, %352
  %354 = mul i32 %353, %352
  %355 = shl i32 %344, %352
  %356 = shl i32 %344, %352
  %357 = shl i32 %344, %352
  %358 = shl i32 %344, %352
  %359 = shl i32 %344, %352
  %360 = sub i32 %344, %352
  %361 = mul i32 %360, %352
  %362 = sub i32 %344, %352
  %363 = mul i32 %362, %352
  %364 = sub nsw i32 %344, %352
  %365 = load i32, i32* %114, align 4
  %366 = sub i32 %365, 50
  %367 = mul i32 %366, 50
  %368 = sub i32 0, %365
  %369 = add i32 %368, 50
  %370 = sub i32 0, %365
  %371 = add i32 %370, 50
  %372 = sub i32 %365, 50
  %373 = mul i32 %372, 50
  %374 = mul nsw i32 %365, 50
  %375 = sub i32 0, %364
  %376 = add i32 %375, %374
  %377 = sub i32 %364, %374
  %378 = mul i32 %377, %374
  %379 = shl i32 %364, %374
  %380 = sub i32 0, %364
  %381 = add i32 %380, %374
  %382 = sub i32 0, %364
  %383 = add i32 %382, %374
  %384 = sub nsw i32 %364, %374
  %385 = load i32, i32* %115, align 4
  %386 = mul nsw i32 %385, 20
  %387 = shl i32 %384, %386
  %388 = sub nsw i32 %384, %386
  %389 = load i32, i32* %116, align 4
  %390 = sub i32 0, %389
  %391 = add i32 %390, 10
  %392 = shl i32 %389, 10
  %393 = sub i32 %389, 10
  %394 = mul i32 %393, 10
  %395 = shl i32 %389, 10
  %396 = sub i32 0, %389
  %397 = add i32 %396, 10
  %398 = sub i32 0, %389
  %399 = add i32 %398, 10
  %400 = mul nsw i32 %389, 10
  %401 = sub i32 0, %388
  %402 = add i32 %401, %400
  %403 = sub nsw i32 %388, %400
  %404 = load i32, i32* %117, align 4
  %405 = sub i32 0, %404
  %406 = add i32 %405, 5
  %407 = shl i32 %404, 5
  %408 = sub i32 %404, 5
  %409 = mul i32 %408, 5
  %410 = shl i32 %404, 5
  %411 = sub i32 %404, 5
  %412 = mul i32 %411, 5
  %413 = mul nsw i32 %404, 5
  %414 = sub i32 %403, %413
  %415 = mul i32 %414, %413
  %416 = shl i32 %403, %413
  %417 = shl i32 %403, %413
  %418 = shl i32 %403, %413
  %419 = sub nsw i32 %403, %413
  %420 = sub i32 %419, 1
  %421 = mul i32 %420, 1
  %422 = sub i32 0, %419
  %423 = add i32 %422, 1
  %424 = shl i32 %419, 1
  %425 = sub i32 0, %419
  %426 = add i32 %425, 1
  %427 = shl i32 %419, 1
  %428 = sdiv i32 %419, 1
  %429 = sitofp i32 %428 to double
  %430 = call double @ceil(double %429) #3
  %431 = fptosi double %430 to i32
  store i32 %431, i32* %118, align 4
  %432 = load i32, i32* %113, align 4
  %433 = load i32, i32* %114, align 4
  %434 = load i32, i32* %115, align 4
  %435 = load i32, i32* %116, align 4
  %436 = load i32, i32* %117, align 4
  %437 = load i32, i32* %118, align 4
  %438 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i32 %432, i32 %433, i32 %434, i32 %435, i32 %436, i32 %437)
  br label %9
}

declare i32 @__isoc99_scanf(i8*, ...) #1

; Function Attrs: nounwind readnone
declare double @ceil(double) #2

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
