; ModuleID = 'source-C-CXX/96/241.c'
source_filename = "source-C-CXX/96/241.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"%d\0A%d\0A%d\0A%d\0A%d\0A%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #0 {
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %117

; <label>:11:                                     ; preds = %2, %117
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8**, align 8
  %15 = alloca i32, align 4
  %16 = alloca [7 x i32], align 16
  store i32 0, i32* %12, align 4
  store i32 %0, i32* %13, align 4
  store i8** %1, i8*** %14, align 8
  %17 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %15)
  %18 = load i32, i32* %15, align 4
  %19 = sdiv i32 %18, 100
  %20 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 0
  store i32 %19, i32* %20, align 16
  %21 = load i32, i32* %15, align 4
  %22 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 0
  %23 = load i32, i32* %22, align 16
  %24 = mul nsw i32 %23, 100
  %25 = sub nsw i32 %21, %24
  %26 = sdiv i32 %25, 50
  %27 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 1
  store i32 %26, i32* %27, align 4
  %28 = load i32, i32* %15, align 4
  %29 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 0
  %30 = load i32, i32* %29, align 16
  %31 = mul nsw i32 %30, 100
  %32 = sub nsw i32 %28, %31
  %33 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = mul nsw i32 %34, 50
  %36 = sub nsw i32 %32, %35
  %37 = sdiv i32 %36, 20
  %38 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 2
  store i32 %37, i32* %38, align 8
  %39 = load i32, i32* %15, align 4
  %40 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 0
  %41 = load i32, i32* %40, align 16
  %42 = mul nsw i32 %41, 100
  %43 = sub nsw i32 %39, %42
  %44 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = mul nsw i32 %45, 50
  %47 = sub nsw i32 %43, %46
  %48 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 2
  %49 = load i32, i32* %48, align 8
  %50 = mul nsw i32 %49, 20
  %51 = sub nsw i32 %47, %50
  %52 = sdiv i32 %51, 10
  %53 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 3
  store i32 %52, i32* %53, align 4
  %54 = load i32, i32* %15, align 4
  %55 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 0
  %56 = load i32, i32* %55, align 16
  %57 = mul nsw i32 %56, 100
  %58 = sub nsw i32 %54, %57
  %59 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 1
  %60 = load i32, i32* %59, align 4
  %61 = mul nsw i32 %60, 50
  %62 = sub nsw i32 %58, %61
  %63 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 2
  %64 = load i32, i32* %63, align 8
  %65 = mul nsw i32 %64, 20
  %66 = sub nsw i32 %62, %65
  %67 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 3
  %68 = load i32, i32* %67, align 4
  %69 = mul nsw i32 %68, 10
  %70 = sub nsw i32 %66, %69
  %71 = sdiv i32 %70, 5
  %72 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 4
  store i32 %71, i32* %72, align 16
  %73 = load i32, i32* %15, align 4
  %74 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 0
  %75 = load i32, i32* %74, align 16
  %76 = mul nsw i32 %75, 100
  %77 = sub nsw i32 %73, %76
  %78 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 1
  %79 = load i32, i32* %78, align 4
  %80 = mul nsw i32 %79, 50
  %81 = sub nsw i32 %77, %80
  %82 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 2
  %83 = load i32, i32* %82, align 8
  %84 = mul nsw i32 %83, 20
  %85 = sub nsw i32 %81, %84
  %86 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = mul nsw i32 %87, 10
  %89 = sub nsw i32 %85, %88
  %90 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 4
  %91 = load i32, i32* %90, align 16
  %92 = mul nsw i32 %91, 5
  %93 = sub nsw i32 %89, %92
  %94 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 5
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 0
  %96 = load i32, i32* %95, align 16
  %97 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 2
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 3
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 4
  %104 = load i32, i32* %103, align 16
  %105 = getelementptr inbounds [7 x i32], [7 x i32]* %16, i64 0, i64 5
  %106 = load i32, i32* %105, align 4
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i32 %96, i32 %98, i32 %100, i32 %102, i32 %104, i32 %106)
  %108 = load i32, i32* @x
  %109 = load i32, i32* @y
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %116, label %117

; <label>:116:                                    ; preds = %11
  ret i32 0

; <label>:117:                                    ; preds = %11, %2
  %118 = alloca i32, align 4
  %119 = alloca i32, align 4
  %120 = alloca i8**, align 8
  %121 = alloca i32, align 4
  %122 = alloca [7 x i32], align 16
  store i32 0, i32* %118, align 4
  store i32 %0, i32* %119, align 4
  store i8** %1, i8*** %120, align 8
  %123 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %121)
  %124 = load i32, i32* %121, align 4
  %125 = sub i32 %124, 100
  %126 = mul i32 %125, 100
  %127 = sub i32 %124, 100
  %128 = mul i32 %127, 100
  %129 = sub i32 0, %124
  %130 = add i32 %129, 100
  %131 = sub i32 %124, 100
  %132 = mul i32 %131, 100
  %133 = shl i32 %124, 100
  %134 = sub i32 %124, 100
  %135 = mul i32 %134, 100
  %136 = sdiv i32 %124, 100
  %137 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 0
  store i32 %136, i32* %137, align 16
  %138 = load i32, i32* %121, align 4
  %139 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 0
  %140 = load i32, i32* %139, align 16
  %141 = sub i32 %140, 100
  %142 = mul i32 %141, 100
  %143 = shl i32 %140, 100
  %144 = sub i32 %140, 100
  %145 = mul i32 %144, 100
  %146 = mul nsw i32 %140, 100
  %147 = sub i32 0, %138
  %148 = add i32 %147, %146
  %149 = sub nsw i32 %138, %146
  %150 = shl i32 %149, 50
  %151 = sub i32 0, %149
  %152 = add i32 %151, 50
  %153 = sdiv i32 %149, 50
  %154 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 1
  store i32 %153, i32* %154, align 4
  %155 = load i32, i32* %121, align 4
  %156 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 0
  %157 = load i32, i32* %156, align 16
  %158 = shl i32 %157, 100
  %159 = sub i32 %157, 100
  %160 = mul i32 %159, 100
  %161 = sub i32 0, %157
  %162 = add i32 %161, 100
  %163 = shl i32 %157, 100
  %164 = mul nsw i32 %157, 100
  %165 = shl i32 %155, %164
  %166 = shl i32 %155, %164
  %167 = sub i32 0, %155
  %168 = add i32 %167, %164
  %169 = sub i32 %155, %164
  %170 = mul i32 %169, %164
  %171 = sub nsw i32 %155, %164
  %172 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 1
  %173 = load i32, i32* %172, align 4
  %174 = sub i32 %173, 50
  %175 = mul i32 %174, 50
  %176 = shl i32 %173, 50
  %177 = shl i32 %173, 50
  %178 = mul nsw i32 %173, 50
  %179 = sub i32 %171, %178
  %180 = mul i32 %179, %178
  %181 = sub nsw i32 %171, %178
  %182 = sub i32 %181, 20
  %183 = mul i32 %182, 20
  %184 = shl i32 %181, 20
  %185 = sub i32 %181, 20
  %186 = mul i32 %185, 20
  %187 = shl i32 %181, 20
  %188 = shl i32 %181, 20
  %189 = shl i32 %181, 20
  %190 = sub i32 %181, 20
  %191 = mul i32 %190, 20
  %192 = sub i32 0, %181
  %193 = add i32 %192, 20
  %194 = sdiv i32 %181, 20
  %195 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 2
  store i32 %194, i32* %195, align 8
  %196 = load i32, i32* %121, align 4
  %197 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 0
  %198 = load i32, i32* %197, align 16
  %199 = mul nsw i32 %198, 100
  %200 = sub i32 %196, %199
  %201 = mul i32 %200, %199
  %202 = sub i32 %196, %199
  %203 = mul i32 %202, %199
  %204 = sub i32 0, %196
  %205 = add i32 %204, %199
  %206 = sub nsw i32 %196, %199
  %207 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 1
  %208 = load i32, i32* %207, align 4
  %209 = shl i32 %208, 50
  %210 = mul nsw i32 %208, 50
  %211 = sub nsw i32 %206, %210
  %212 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 2
  %213 = load i32, i32* %212, align 8
  %214 = shl i32 %213, 20
  %215 = mul nsw i32 %213, 20
  %216 = sub i32 0, %211
  %217 = add i32 %216, %215
  %218 = sub i32 0, %211
  %219 = add i32 %218, %215
  %220 = sub nsw i32 %211, %215
  %221 = shl i32 %220, 10
  %222 = sub i32 0, %220
  %223 = add i32 %222, 10
  %224 = sub i32 0, %220
  %225 = add i32 %224, 10
  %226 = sub i32 %220, 10
  %227 = mul i32 %226, 10
  %228 = sdiv i32 %220, 10
  %229 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 3
  store i32 %228, i32* %229, align 4
  %230 = load i32, i32* %121, align 4
  %231 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 0
  %232 = load i32, i32* %231, align 16
  %233 = sub i32 0, %232
  %234 = add i32 %233, 100
  %235 = sub i32 0, %232
  %236 = add i32 %235, 100
  %237 = sub i32 %232, 100
  %238 = mul i32 %237, 100
  %239 = shl i32 %232, 100
  %240 = shl i32 %232, 100
  %241 = sub i32 0, %232
  %242 = add i32 %241, 100
  %243 = sub i32 %232, 100
  %244 = mul i32 %243, 100
  %245 = mul nsw i32 %232, 100
  %246 = sub i32 0, %230
  %247 = add i32 %246, %245
  %248 = shl i32 %230, %245
  %249 = shl i32 %230, %245
  %250 = shl i32 %230, %245
  %251 = shl i32 %230, %245
  %252 = sub i32 %230, %245
  %253 = mul i32 %252, %245
  %254 = shl i32 %230, %245
  %255 = shl i32 %230, %245
  %256 = sub nsw i32 %230, %245
  %257 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 1
  %258 = load i32, i32* %257, align 4
  %259 = sub i32 0, %258
  %260 = add i32 %259, 50
  %261 = sub i32 %258, 50
  %262 = mul i32 %261, 50
  %263 = sub i32 %258, 50
  %264 = mul i32 %263, 50
  %265 = sub i32 %258, 50
  %266 = mul i32 %265, 50
  %267 = shl i32 %258, 50
  %268 = mul nsw i32 %258, 50
  %269 = shl i32 %256, %268
  %270 = sub i32 %256, %268
  %271 = mul i32 %270, %268
  %272 = sub i32 0, %256
  %273 = add i32 %272, %268
  %274 = shl i32 %256, %268
  %275 = sub i32 %256, %268
  %276 = mul i32 %275, %268
  %277 = sub i32 %256, %268
  %278 = mul i32 %277, %268
  %279 = sub nsw i32 %256, %268
  %280 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 2
  %281 = load i32, i32* %280, align 8
  %282 = sub i32 0, %281
  %283 = add i32 %282, 20
  %284 = sub i32 %281, 20
  %285 = mul i32 %284, 20
  %286 = mul nsw i32 %281, 20
  %287 = sub i32 0, %279
  %288 = add i32 %287, %286
  %289 = shl i32 %279, %286
  %290 = sub i32 %279, %286
  %291 = mul i32 %290, %286
  %292 = shl i32 %279, %286
  %293 = sub i32 0, %279
  %294 = add i32 %293, %286
  %295 = sub nsw i32 %279, %286
  %296 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 3
  %297 = load i32, i32* %296, align 4
  %298 = shl i32 %297, 10
  %299 = sub i32 %297, 10
  %300 = mul i32 %299, 10
  %301 = sub i32 0, %297
  %302 = add i32 %301, 10
  %303 = sub i32 0, %297
  %304 = add i32 %303, 10
  %305 = mul nsw i32 %297, 10
  %306 = sub i32 %295, %305
  %307 = mul i32 %306, %305
  %308 = sub nsw i32 %295, %305
  %309 = sub i32 0, %308
  %310 = add i32 %309, 5
  %311 = shl i32 %308, 5
  %312 = shl i32 %308, 5
  %313 = sub i32 %308, 5
  %314 = mul i32 %313, 5
  %315 = sdiv i32 %308, 5
  %316 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 4
  store i32 %315, i32* %316, align 16
  %317 = load i32, i32* %121, align 4
  %318 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 0
  %319 = load i32, i32* %318, align 16
  %320 = sub i32 0, %319
  %321 = add i32 %320, 100
  %322 = shl i32 %319, 100
  %323 = mul nsw i32 %319, 100
  %324 = shl i32 %317, %323
  %325 = shl i32 %317, %323
  %326 = sub nsw i32 %317, %323
  %327 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 1
  %328 = load i32, i32* %327, align 4
  %329 = sub i32 0, %328
  %330 = add i32 %329, 50
  %331 = mul nsw i32 %328, 50
  %332 = shl i32 %326, %331
  %333 = sub i32 0, %326
  %334 = add i32 %333, %331
  %335 = shl i32 %326, %331
  %336 = shl i32 %326, %331
  %337 = sub i32 %326, %331
  %338 = mul i32 %337, %331
  %339 = shl i32 %326, %331
  %340 = sub i32 %326, %331
  %341 = mul i32 %340, %331
  %342 = sub nsw i32 %326, %331
  %343 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 2
  %344 = load i32, i32* %343, align 8
  %345 = sub i32 %344, 20
  %346 = mul i32 %345, 20
  %347 = shl i32 %344, 20
  %348 = sub i32 %344, 20
  %349 = mul i32 %348, 20
  %350 = sub i32 0, %344
  %351 = add i32 %350, 20
  %352 = sub i32 0, %344
  %353 = add i32 %352, 20
  %354 = sub i32 0, %344
  %355 = add i32 %354, 20
  %356 = mul nsw i32 %344, 20
  %357 = sub i32 %342, %356
  %358 = mul i32 %357, %356
  %359 = sub i32 %342, %356
  %360 = mul i32 %359, %356
  %361 = sub nsw i32 %342, %356
  %362 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 3
  %363 = load i32, i32* %362, align 4
  %364 = shl i32 %363, 10
  %365 = sub i32 %363, 10
  %366 = mul i32 %365, 10
  %367 = sub i32 %363, 10
  %368 = mul i32 %367, 10
  %369 = sub i32 %363, 10
  %370 = mul i32 %369, 10
  %371 = sub i32 0, %363
  %372 = add i32 %371, 10
  %373 = sub i32 0, %363
  %374 = add i32 %373, 10
  %375 = shl i32 %363, 10
  %376 = sub i32 0, %363
  %377 = add i32 %376, 10
  %378 = sub i32 %363, 10
  %379 = mul i32 %378, 10
  %380 = sub i32 0, %363
  %381 = add i32 %380, 10
  %382 = mul nsw i32 %363, 10
  %383 = sub nsw i32 %361, %382
  %384 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 4
  %385 = load i32, i32* %384, align 16
  %386 = sub i32 %385, 5
  %387 = mul i32 %386, 5
  %388 = shl i32 %385, 5
  %389 = sub i32 0, %385
  %390 = add i32 %389, 5
  %391 = sub i32 %385, 5
  %392 = mul i32 %391, 5
  %393 = shl i32 %385, 5
  %394 = mul nsw i32 %385, 5
  %395 = sub i32 %383, %394
  %396 = mul i32 %395, %394
  %397 = shl i32 %383, %394
  %398 = sub i32 0, %383
  %399 = add i32 %398, %394
  %400 = sub nsw i32 %383, %394
  %401 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 5
  store i32 %400, i32* %401, align 4
  %402 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 0
  %403 = load i32, i32* %402, align 16
  %404 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 1
  %405 = load i32, i32* %404, align 4
  %406 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 2
  %407 = load i32, i32* %406, align 8
  %408 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 3
  %409 = load i32, i32* %408, align 4
  %410 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 4
  %411 = load i32, i32* %410, align 16
  %412 = getelementptr inbounds [7 x i32], [7 x i32]* %122, i64 0, i64 5
  %413 = load i32, i32* %412, align 4
  %414 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i32 %403, i32 %405, i32 %407, i32 %409, i32 %411, i32 %413)
  br label %11
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
