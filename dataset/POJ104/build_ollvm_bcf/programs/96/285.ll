; ModuleID = 'source-C-CXX/96/285.c'
source_filename = "source-C-CXX/96/285.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
  %1 = load i32, i32* @x
  %2 = load i32, i32* @y
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %55

; <label>:9:                                      ; preds = %0, %55
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 0, i32* %10, align 4
  %12 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %11)
  %13 = load i32, i32* %11, align 4
  %14 = sdiv i32 %13, 100
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %14)
  %16 = load i32, i32* %11, align 4
  %17 = srem i32 %16, 100
  %18 = sdiv i32 %17, 50
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %18)
  %20 = load i32, i32* %11, align 4
  %21 = srem i32 %20, 100
  %22 = srem i32 %21, 50
  %23 = sdiv i32 %22, 20
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %23)
  %25 = load i32, i32* %11, align 4
  %26 = srem i32 %25, 100
  %27 = srem i32 %26, 50
  %28 = srem i32 %27, 20
  %29 = sdiv i32 %28, 10
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %29)
  %31 = load i32, i32* %11, align 4
  %32 = srem i32 %31, 100
  %33 = srem i32 %32, 50
  %34 = srem i32 %33, 20
  %35 = srem i32 %34, 10
  %36 = sdiv i32 %35, 5
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %36)
  %38 = load i32, i32* %11, align 4
  %39 = srem i32 %38, 100
  %40 = srem i32 %39, 50
  %41 = srem i32 %40, 20
  %42 = srem i32 %41, 10
  %43 = srem i32 %42, 5
  %44 = sdiv i32 %43, 1
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %44)
  %46 = load i32, i32* @x
  %47 = load i32, i32* @y
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %55

; <label>:54:                                     ; preds = %9
  ret i32 0

; <label>:55:                                     ; preds = %9, %0
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  store i32 0, i32* %56, align 4
  %58 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %57)
  %59 = load i32, i32* %57, align 4
  %60 = sub i32 %59, 100
  %61 = mul i32 %60, 100
  %62 = sub i32 %59, 100
  %63 = mul i32 %62, 100
  %64 = sub i32 %59, 100
  %65 = mul i32 %64, 100
  %66 = sub i32 %59, 100
  %67 = mul i32 %66, 100
  %68 = sub i32 0, %59
  %69 = add i32 %68, 100
  %70 = sub i32 0, %59
  %71 = add i32 %70, 100
  %72 = sub i32 %59, 100
  %73 = mul i32 %72, 100
  %74 = sdiv i32 %59, 100
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %74)
  %76 = load i32, i32* %57, align 4
  %77 = sub i32 %76, 100
  %78 = mul i32 %77, 100
  %79 = sub i32 0, %76
  %80 = add i32 %79, 100
  %81 = sub i32 0, %76
  %82 = add i32 %81, 100
  %83 = shl i32 %76, 100
  %84 = sub i32 %76, 100
  %85 = mul i32 %84, 100
  %86 = shl i32 %76, 100
  %87 = shl i32 %76, 100
  %88 = srem i32 %76, 100
  %89 = shl i32 %88, 50
  %90 = sub i32 0, %88
  %91 = add i32 %90, 50
  %92 = sub i32 %88, 50
  %93 = mul i32 %92, 50
  %94 = sdiv i32 %88, 50
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %94)
  %96 = load i32, i32* %57, align 4
  %97 = sub i32 %96, 100
  %98 = mul i32 %97, 100
  %99 = srem i32 %96, 100
  %100 = shl i32 %99, 50
  %101 = shl i32 %99, 50
  %102 = shl i32 %99, 50
  %103 = sub i32 0, %99
  %104 = add i32 %103, 50
  %105 = sub i32 0, %99
  %106 = add i32 %105, 50
  %107 = sub i32 %99, 50
  %108 = mul i32 %107, 50
  %109 = shl i32 %99, 50
  %110 = sub i32 0, %99
  %111 = add i32 %110, 50
  %112 = srem i32 %99, 50
  %113 = shl i32 %112, 20
  %114 = sub i32 %112, 20
  %115 = mul i32 %114, 20
  %116 = sub i32 0, %112
  %117 = add i32 %116, 20
  %118 = sub i32 0, %112
  %119 = add i32 %118, 20
  %120 = sub i32 %112, 20
  %121 = mul i32 %120, 20
  %122 = shl i32 %112, 20
  %123 = sdiv i32 %112, 20
  %124 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %123)
  %125 = load i32, i32* %57, align 4
  %126 = sub i32 0, %125
  %127 = add i32 %126, 100
  %128 = srem i32 %125, 100
  %129 = shl i32 %128, 50
  %130 = shl i32 %128, 50
  %131 = sub i32 %128, 50
  %132 = mul i32 %131, 50
  %133 = sub i32 0, %128
  %134 = add i32 %133, 50
  %135 = sub i32 0, %128
  %136 = add i32 %135, 50
  %137 = sub i32 0, %128
  %138 = add i32 %137, 50
  %139 = sub i32 0, %128
  %140 = add i32 %139, 50
  %141 = srem i32 %128, 50
  %142 = sub i32 %141, 20
  %143 = mul i32 %142, 20
  %144 = sub i32 %141, 20
  %145 = mul i32 %144, 20
  %146 = sub i32 0, %141
  %147 = add i32 %146, 20
  %148 = shl i32 %141, 20
  %149 = shl i32 %141, 20
  %150 = sub i32 0, %141
  %151 = add i32 %150, 20
  %152 = shl i32 %141, 20
  %153 = srem i32 %141, 20
  %154 = sub i32 %153, 10
  %155 = mul i32 %154, 10
  %156 = sdiv i32 %153, 10
  %157 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %156)
  %158 = load i32, i32* %57, align 4
  %159 = sub i32 0, %158
  %160 = add i32 %159, 100
  %161 = srem i32 %158, 100
  %162 = sub i32 0, %161
  %163 = add i32 %162, 50
  %164 = sub i32 0, %161
  %165 = add i32 %164, 50
  %166 = sub i32 0, %161
  %167 = add i32 %166, 50
  %168 = srem i32 %161, 50
  %169 = shl i32 %168, 20
  %170 = sub i32 %168, 20
  %171 = mul i32 %170, 20
  %172 = sub i32 0, %168
  %173 = add i32 %172, 20
  %174 = shl i32 %168, 20
  %175 = sub i32 %168, 20
  %176 = mul i32 %175, 20
  %177 = sub i32 0, %168
  %178 = add i32 %177, 20
  %179 = srem i32 %168, 20
  %180 = shl i32 %179, 10
  %181 = srem i32 %179, 10
  %182 = shl i32 %181, 5
  %183 = shl i32 %181, 5
  %184 = shl i32 %181, 5
  %185 = shl i32 %181, 5
  %186 = sub i32 %181, 5
  %187 = mul i32 %186, 5
  %188 = sub i32 %181, 5
  %189 = mul i32 %188, 5
  %190 = shl i32 %181, 5
  %191 = sdiv i32 %181, 5
  %192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %191)
  %193 = load i32, i32* %57, align 4
  %194 = sub i32 0, %193
  %195 = add i32 %194, 100
  %196 = shl i32 %193, 100
  %197 = sub i32 0, %193
  %198 = add i32 %197, 100
  %199 = srem i32 %193, 100
  %200 = srem i32 %199, 50
  %201 = shl i32 %200, 20
  %202 = sub i32 0, %200
  %203 = add i32 %202, 20
  %204 = sub i32 0, %200
  %205 = add i32 %204, 20
  %206 = shl i32 %200, 20
  %207 = shl i32 %200, 20
  %208 = sub i32 0, %200
  %209 = add i32 %208, 20
  %210 = sub i32 %200, 20
  %211 = mul i32 %210, 20
  %212 = srem i32 %200, 20
  %213 = sub i32 %212, 10
  %214 = mul i32 %213, 10
  %215 = shl i32 %212, 10
  %216 = sub i32 %212, 10
  %217 = mul i32 %216, 10
  %218 = shl i32 %212, 10
  %219 = shl i32 %212, 10
  %220 = sub i32 0, %212
  %221 = add i32 %220, 10
  %222 = srem i32 %212, 10
  %223 = sub i32 %222, 5
  %224 = mul i32 %223, 5
  %225 = sub i32 0, %222
  %226 = add i32 %225, 5
  %227 = srem i32 %222, 5
  %228 = sub i32 0, %227
  %229 = add i32 %228, 1
  %230 = sub i32 0, %227
  %231 = add i32 %230, 1
  %232 = sdiv i32 %227, 1
  %233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %232)
  br label %9
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
