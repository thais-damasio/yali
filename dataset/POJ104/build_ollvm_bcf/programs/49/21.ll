; ModuleID = 'source-C-CXX/49/21.c'
source_filename = "source-C-CXX/49/21.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@main.a = private unnamed_addr constant [12 x i32] [i32 31, i32 28, i32 31, i32 30, i32 31, i32 30, i32 31, i32 31, i32 30, i32 31, i32 30, i32 31], align 16
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
  %1 = load i32, i32* @x
  %2 = load i32, i32* @y
  %3 = sub i32 %1, 1
  %4 = mul i32 %1, %3
  %5 = urem i32 %4, 2
  %6 = icmp eq i32 %5, 0
  %7 = icmp slt i32 %2, 10
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %294

; <label>:9:                                      ; preds = %0, %294
  %10 = alloca i32, align 4
  %11 = alloca [12 x i32], align 16
  %12 = alloca [12 x i32], align 16
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 0, i32* %10, align 4
  %15 = bitcast [12 x i32]* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* bitcast ([12 x i32]* @main.a to i8*), i64 48, i32 16, i1 false)
  %16 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %14)
  %17 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 0
  store i32 13, i32* %17, align 16
  %18 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %19 = load i32, i32* %18, align 16
  %20 = add nsw i32 %19, 13
  %21 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 1
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %23 = load i32, i32* %22, align 16
  %24 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %23, %25
  %27 = add nsw i32 %26, 13
  %28 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 2
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %30 = load i32, i32* %29, align 16
  %31 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %30, %32
  %34 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 2
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %33, %35
  %37 = add nsw i32 %36, 13
  %38 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 3
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %40 = load i32, i32* %39, align 16
  %41 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %40, %42
  %44 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 2
  %45 = load i32, i32* %44, align 8
  %46 = add nsw i32 %43, %45
  %47 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 3
  %48 = load i32, i32* %47, align 4
  %49 = add nsw i32 %46, %48
  %50 = add nsw i32 %49, 13
  %51 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 4
  store i32 %50, i32* %51, align 16
  %52 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %53 = load i32, i32* %52, align 16
  %54 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %53, %55
  %57 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 2
  %58 = load i32, i32* %57, align 8
  %59 = add nsw i32 %56, %58
  %60 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 3
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %59, %61
  %63 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 4
  %64 = load i32, i32* %63, align 16
  %65 = add nsw i32 %62, %64
  %66 = add nsw i32 %65, 13
  %67 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 5
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %69 = load i32, i32* %68, align 16
  %70 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %69, %71
  %73 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %72, %74
  %76 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 3
  %77 = load i32, i32* %76, align 4
  %78 = add nsw i32 %75, %77
  %79 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 4
  %80 = load i32, i32* %79, align 16
  %81 = add nsw i32 %78, %80
  %82 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 5
  %83 = load i32, i32* %82, align 4
  %84 = add nsw i32 %81, %83
  %85 = add nsw i32 %84, 13
  %86 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 6
  store i32 %85, i32* %86, align 8
  %87 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %88 = load i32, i32* %87, align 16
  %89 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %90 = load i32, i32* %89, align 4
  %91 = add nsw i32 %88, %90
  %92 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 2
  %93 = load i32, i32* %92, align 8
  %94 = add nsw i32 %91, %93
  %95 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 3
  %96 = load i32, i32* %95, align 4
  %97 = add nsw i32 %94, %96
  %98 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 4
  %99 = load i32, i32* %98, align 16
  %100 = add nsw i32 %97, %99
  %101 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 5
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %100, %102
  %104 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 6
  %105 = load i32, i32* %104, align 8
  %106 = add nsw i32 %103, %105
  %107 = add nsw i32 %106, 13
  %108 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 7
  store i32 %107, i32* %108, align 4
  %109 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %110 = load i32, i32* %109, align 16
  %111 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %112 = load i32, i32* %111, align 4
  %113 = add nsw i32 %110, %112
  %114 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 2
  %115 = load i32, i32* %114, align 8
  %116 = add nsw i32 %113, %115
  %117 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 3
  %118 = load i32, i32* %117, align 4
  %119 = add nsw i32 %116, %118
  %120 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 4
  %121 = load i32, i32* %120, align 16
  %122 = add nsw i32 %119, %121
  %123 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 5
  %124 = load i32, i32* %123, align 4
  %125 = add nsw i32 %122, %124
  %126 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 6
  %127 = load i32, i32* %126, align 8
  %128 = add nsw i32 %125, %127
  %129 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 7
  %130 = load i32, i32* %129, align 4
  %131 = add nsw i32 %128, %130
  %132 = add nsw i32 %131, 13
  %133 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 8
  store i32 %132, i32* %133, align 16
  %134 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %135 = load i32, i32* %134, align 16
  %136 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %137 = load i32, i32* %136, align 4
  %138 = add nsw i32 %135, %137
  %139 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = add nsw i32 %138, %140
  %142 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 3
  %143 = load i32, i32* %142, align 4
  %144 = add nsw i32 %141, %143
  %145 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 4
  %146 = load i32, i32* %145, align 16
  %147 = add nsw i32 %144, %146
  %148 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 5
  %149 = load i32, i32* %148, align 4
  %150 = add nsw i32 %147, %149
  %151 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 6
  %152 = load i32, i32* %151, align 8
  %153 = add nsw i32 %150, %152
  %154 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 7
  %155 = load i32, i32* %154, align 4
  %156 = add nsw i32 %153, %155
  %157 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 8
  %158 = load i32, i32* %157, align 16
  %159 = add nsw i32 %156, %158
  %160 = add nsw i32 %159, 13
  %161 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 9
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %163 = load i32, i32* %162, align 16
  %164 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %165 = load i32, i32* %164, align 4
  %166 = add nsw i32 %163, %165
  %167 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 2
  %168 = load i32, i32* %167, align 8
  %169 = add nsw i32 %166, %168
  %170 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 3
  %171 = load i32, i32* %170, align 4
  %172 = add nsw i32 %169, %171
  %173 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 4
  %174 = load i32, i32* %173, align 16
  %175 = add nsw i32 %172, %174
  %176 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 5
  %177 = load i32, i32* %176, align 4
  %178 = add nsw i32 %175, %177
  %179 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 6
  %180 = load i32, i32* %179, align 8
  %181 = add nsw i32 %178, %180
  %182 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 7
  %183 = load i32, i32* %182, align 4
  %184 = add nsw i32 %181, %183
  %185 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 8
  %186 = load i32, i32* %185, align 16
  %187 = add nsw i32 %184, %186
  %188 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 9
  %189 = load i32, i32* %188, align 4
  %190 = add nsw i32 %187, %189
  %191 = add nsw i32 %190, 13
  %192 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 10
  store i32 %191, i32* %192, align 8
  %193 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 0
  %194 = load i32, i32* %193, align 16
  %195 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 1
  %196 = load i32, i32* %195, align 4
  %197 = add nsw i32 %194, %196
  %198 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 2
  %199 = load i32, i32* %198, align 8
  %200 = add nsw i32 %197, %199
  %201 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 3
  %202 = load i32, i32* %201, align 4
  %203 = add nsw i32 %200, %202
  %204 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 4
  %205 = load i32, i32* %204, align 16
  %206 = add nsw i32 %203, %205
  %207 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 5
  %208 = load i32, i32* %207, align 4
  %209 = add nsw i32 %206, %208
  %210 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 6
  %211 = load i32, i32* %210, align 8
  %212 = add nsw i32 %209, %211
  %213 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 7
  %214 = load i32, i32* %213, align 4
  %215 = add nsw i32 %212, %214
  %216 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 8
  %217 = load i32, i32* %216, align 16
  %218 = add nsw i32 %215, %217
  %219 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 9
  %220 = load i32, i32* %219, align 4
  %221 = add nsw i32 %218, %220
  %222 = getelementptr inbounds [12 x i32], [12 x i32]* %11, i64 0, i64 10
  %223 = load i32, i32* %222, align 8
  %224 = add nsw i32 %221, %223
  %225 = add nsw i32 %224, 13
  %226 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 11
  store i32 %225, i32* %226, align 4
  store i32 0, i32* %13, align 4
  %227 = load i32, i32* @x
  %228 = load i32, i32* @y
  %229 = sub i32 %227, 1
  %230 = mul i32 %227, %229
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %232, %233
  br i1 %234, label %235, label %294

; <label>:235:                                    ; preds = %9
  br label %236

; <label>:236:                                    ; preds = %272, %235
  %237 = load i32, i32* %13, align 4
  %238 = icmp slt i32 %237, 12
  br i1 %238, label %239, label %275

; <label>:239:                                    ; preds = %236
  %240 = load i32, i32* @x
  %241 = load i32, i32* @y
  %242 = sub i32 %240, 1
  %243 = mul i32 %240, %242
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %241, 10
  %247 = or i1 %245, %246
  br i1 %247, label %248, label %981

; <label>:248:                                    ; preds = %239, %981
  %249 = load i32, i32* %13, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = load i32, i32* %14, align 4
  %254 = sub nsw i32 8, %253
  %255 = sub nsw i32 %252, %254
  %256 = srem i32 %255, 7
  %257 = icmp eq i32 %256, 5
  %258 = load i32, i32* @x
  %259 = load i32, i32* @y
  %260 = sub i32 %258, 1
  %261 = mul i32 %258, %260
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %263, %264
  br i1 %265, label %266, label %981

; <label>:266:                                    ; preds = %248
  br i1 %257, label %267, label %271

; <label>:267:                                    ; preds = %266
  %268 = load i32, i32* %13, align 4
  %269 = add nsw i32 %268, 1
  %270 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %269)
  br label %271

; <label>:271:                                    ; preds = %267, %266
  br label %272

; <label>:272:                                    ; preds = %271
  %273 = load i32, i32* %13, align 4
  %274 = add nsw i32 %273, 1
  store i32 %274, i32* %13, align 4
  br label %236

; <label>:275:                                    ; preds = %236
  %276 = load i32, i32* @x
  %277 = load i32, i32* @y
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %284, label %999

; <label>:284:                                    ; preds = %275, %999
  %285 = load i32, i32* @x
  %286 = load i32, i32* @y
  %287 = sub i32 %285, 1
  %288 = mul i32 %285, %287
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %290, %291
  br i1 %292, label %293, label %999

; <label>:293:                                    ; preds = %284
  ret i32 0

; <label>:294:                                    ; preds = %9, %0
  %295 = alloca i32, align 4
  %296 = alloca [12 x i32], align 16
  %297 = alloca [12 x i32], align 16
  %298 = alloca i32, align 4
  %299 = alloca i32, align 4
  store i32 0, i32* %295, align 4
  %300 = bitcast [12 x i32]* %296 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %300, i8* bitcast ([12 x i32]* @main.a to i8*), i64 48, i32 16, i1 false)
  %301 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %299)
  %302 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 0
  store i32 13, i32* %302, align 16
  %303 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %304 = load i32, i32* %303, align 16
  %305 = sub i32 %304, 13
  %306 = mul i32 %305, 13
  %307 = add nsw i32 %304, 13
  %308 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 1
  store i32 %307, i32* %308, align 4
  %309 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %310 = load i32, i32* %309, align 16
  %311 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %312 = load i32, i32* %311, align 4
  %313 = shl i32 %310, %312
  %314 = sub i32 0, %310
  %315 = add i32 %314, %312
  %316 = sub i32 0, %310
  %317 = add i32 %316, %312
  %318 = add nsw i32 %310, %312
  %319 = sub i32 %318, 13
  %320 = mul i32 %319, 13
  %321 = sub i32 %318, 13
  %322 = mul i32 %321, 13
  %323 = shl i32 %318, 13
  %324 = shl i32 %318, 13
  %325 = sub i32 %318, 13
  %326 = mul i32 %325, 13
  %327 = shl i32 %318, 13
  %328 = add nsw i32 %318, 13
  %329 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 2
  store i32 %328, i32* %329, align 8
  %330 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %331 = load i32, i32* %330, align 16
  %332 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %333 = load i32, i32* %332, align 4
  %334 = sub i32 %331, %333
  %335 = mul i32 %334, %333
  %336 = sub i32 0, %331
  %337 = add i32 %336, %333
  %338 = add nsw i32 %331, %333
  %339 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 2
  %340 = load i32, i32* %339, align 8
  %341 = sub i32 %338, %340
  %342 = mul i32 %341, %340
  %343 = shl i32 %338, %340
  %344 = shl i32 %338, %340
  %345 = add nsw i32 %338, %340
  %346 = sub i32 %345, 13
  %347 = mul i32 %346, 13
  %348 = sub i32 %345, 13
  %349 = mul i32 %348, 13
  %350 = sub i32 0, %345
  %351 = add i32 %350, 13
  %352 = shl i32 %345, 13
  %353 = add nsw i32 %345, 13
  %354 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 3
  store i32 %353, i32* %354, align 4
  %355 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %356 = load i32, i32* %355, align 16
  %357 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %358 = load i32, i32* %357, align 4
  %359 = sub i32 %356, %358
  %360 = mul i32 %359, %358
  %361 = shl i32 %356, %358
  %362 = shl i32 %356, %358
  %363 = sub i32 0, %356
  %364 = add i32 %363, %358
  %365 = sub i32 %356, %358
  %366 = mul i32 %365, %358
  %367 = shl i32 %356, %358
  %368 = add nsw i32 %356, %358
  %369 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 2
  %370 = load i32, i32* %369, align 8
  %371 = shl i32 %368, %370
  %372 = sub i32 0, %368
  %373 = add i32 %372, %370
  %374 = sub i32 0, %368
  %375 = add i32 %374, %370
  %376 = sub i32 0, %368
  %377 = add i32 %376, %370
  %378 = shl i32 %368, %370
  %379 = sub i32 %368, %370
  %380 = mul i32 %379, %370
  %381 = shl i32 %368, %370
  %382 = add nsw i32 %368, %370
  %383 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 3
  %384 = load i32, i32* %383, align 4
  %385 = shl i32 %382, %384
  %386 = sub i32 %382, %384
  %387 = mul i32 %386, %384
  %388 = sub i32 0, %382
  %389 = add i32 %388, %384
  %390 = shl i32 %382, %384
  %391 = sub i32 %382, %384
  %392 = mul i32 %391, %384
  %393 = sub i32 0, %382
  %394 = add i32 %393, %384
  %395 = add nsw i32 %382, %384
  %396 = shl i32 %395, 13
  %397 = sub i32 %395, 13
  %398 = mul i32 %397, 13
  %399 = shl i32 %395, 13
  %400 = shl i32 %395, 13
  %401 = add nsw i32 %395, 13
  %402 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 4
  store i32 %401, i32* %402, align 16
  %403 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %404 = load i32, i32* %403, align 16
  %405 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %406 = load i32, i32* %405, align 4
  %407 = sub i32 0, %404
  %408 = add i32 %407, %406
  %409 = sub i32 0, %404
  %410 = add i32 %409, %406
  %411 = add nsw i32 %404, %406
  %412 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 2
  %413 = load i32, i32* %412, align 8
  %414 = sub i32 %411, %413
  %415 = mul i32 %414, %413
  %416 = sub i32 0, %411
  %417 = add i32 %416, %413
  %418 = sub i32 %411, %413
  %419 = mul i32 %418, %413
  %420 = sub i32 0, %411
  %421 = add i32 %420, %413
  %422 = add nsw i32 %411, %413
  %423 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 3
  %424 = load i32, i32* %423, align 4
  %425 = sub i32 0, %422
  %426 = add i32 %425, %424
  %427 = sub i32 %422, %424
  %428 = mul i32 %427, %424
  %429 = sub i32 %422, %424
  %430 = mul i32 %429, %424
  %431 = sub i32 0, %422
  %432 = add i32 %431, %424
  %433 = shl i32 %422, %424
  %434 = sub i32 0, %422
  %435 = add i32 %434, %424
  %436 = sub i32 0, %422
  %437 = add i32 %436, %424
  %438 = add nsw i32 %422, %424
  %439 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 4
  %440 = load i32, i32* %439, align 16
  %441 = sub i32 0, %438
  %442 = add i32 %441, %440
  %443 = shl i32 %438, %440
  %444 = add nsw i32 %438, %440
  %445 = sub i32 %444, 13
  %446 = mul i32 %445, 13
  %447 = sub i32 %444, 13
  %448 = mul i32 %447, 13
  %449 = sub i32 %444, 13
  %450 = mul i32 %449, 13
  %451 = sub i32 0, %444
  %452 = add i32 %451, 13
  %453 = sub i32 %444, 13
  %454 = mul i32 %453, 13
  %455 = shl i32 %444, 13
  %456 = sub i32 0, %444
  %457 = add i32 %456, 13
  %458 = add nsw i32 %444, 13
  %459 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 5
  store i32 %458, i32* %459, align 4
  %460 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %461 = load i32, i32* %460, align 16
  %462 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %463 = load i32, i32* %462, align 4
  %464 = shl i32 %461, %463
  %465 = sub i32 0, %461
  %466 = add i32 %465, %463
  %467 = shl i32 %461, %463
  %468 = sub i32 %461, %463
  %469 = mul i32 %468, %463
  %470 = shl i32 %461, %463
  %471 = sub i32 0, %461
  %472 = add i32 %471, %463
  %473 = sub i32 %461, %463
  %474 = mul i32 %473, %463
  %475 = sub i32 %461, %463
  %476 = mul i32 %475, %463
  %477 = shl i32 %461, %463
  %478 = add nsw i32 %461, %463
  %479 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 2
  %480 = load i32, i32* %479, align 8
  %481 = shl i32 %478, %480
  %482 = sub i32 %478, %480
  %483 = mul i32 %482, %480
  %484 = shl i32 %478, %480
  %485 = sub i32 %478, %480
  %486 = mul i32 %485, %480
  %487 = shl i32 %478, %480
  %488 = shl i32 %478, %480
  %489 = add nsw i32 %478, %480
  %490 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 3
  %491 = load i32, i32* %490, align 4
  %492 = sub i32 0, %489
  %493 = add i32 %492, %491
  %494 = sub i32 0, %489
  %495 = add i32 %494, %491
  %496 = shl i32 %489, %491
  %497 = sub i32 0, %489
  %498 = add i32 %497, %491
  %499 = shl i32 %489, %491
  %500 = shl i32 %489, %491
  %501 = sub i32 %489, %491
  %502 = mul i32 %501, %491
  %503 = sub i32 0, %489
  %504 = add i32 %503, %491
  %505 = add nsw i32 %489, %491
  %506 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 4
  %507 = load i32, i32* %506, align 16
  %508 = sub i32 0, %505
  %509 = add i32 %508, %507
  %510 = sub i32 %505, %507
  %511 = mul i32 %510, %507
  %512 = add nsw i32 %505, %507
  %513 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 5
  %514 = load i32, i32* %513, align 4
  %515 = shl i32 %512, %514
  %516 = add nsw i32 %512, %514
  %517 = shl i32 %516, 13
  %518 = sub i32 %516, 13
  %519 = mul i32 %518, 13
  %520 = shl i32 %516, 13
  %521 = sub i32 %516, 13
  %522 = mul i32 %521, 13
  %523 = add nsw i32 %516, 13
  %524 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 6
  store i32 %523, i32* %524, align 8
  %525 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %526 = load i32, i32* %525, align 16
  %527 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %528 = load i32, i32* %527, align 4
  %529 = shl i32 %526, %528
  %530 = sub i32 0, %526
  %531 = add i32 %530, %528
  %532 = shl i32 %526, %528
  %533 = sub i32 %526, %528
  %534 = mul i32 %533, %528
  %535 = add nsw i32 %526, %528
  %536 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 2
  %537 = load i32, i32* %536, align 8
  %538 = sub i32 %535, %537
  %539 = mul i32 %538, %537
  %540 = add nsw i32 %535, %537
  %541 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 3
  %542 = load i32, i32* %541, align 4
  %543 = sub i32 %540, %542
  %544 = mul i32 %543, %542
  %545 = sub i32 0, %540
  %546 = add i32 %545, %542
  %547 = sub i32 %540, %542
  %548 = mul i32 %547, %542
  %549 = add nsw i32 %540, %542
  %550 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 4
  %551 = load i32, i32* %550, align 16
  %552 = shl i32 %549, %551
  %553 = shl i32 %549, %551
  %554 = sub i32 %549, %551
  %555 = mul i32 %554, %551
  %556 = shl i32 %549, %551
  %557 = sub i32 0, %549
  %558 = add i32 %557, %551
  %559 = shl i32 %549, %551
  %560 = shl i32 %549, %551
  %561 = sub i32 0, %549
  %562 = add i32 %561, %551
  %563 = sub i32 %549, %551
  %564 = mul i32 %563, %551
  %565 = add nsw i32 %549, %551
  %566 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 5
  %567 = load i32, i32* %566, align 4
  %568 = sub i32 0, %565
  %569 = add i32 %568, %567
  %570 = sub i32 0, %565
  %571 = add i32 %570, %567
  %572 = sub i32 %565, %567
  %573 = mul i32 %572, %567
  %574 = sub i32 %565, %567
  %575 = mul i32 %574, %567
  %576 = sub i32 0, %565
  %577 = add i32 %576, %567
  %578 = sub i32 0, %565
  %579 = add i32 %578, %567
  %580 = shl i32 %565, %567
  %581 = add nsw i32 %565, %567
  %582 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 6
  %583 = load i32, i32* %582, align 8
  %584 = add nsw i32 %581, %583
  %585 = sub i32 %584, 13
  %586 = mul i32 %585, 13
  %587 = sub i32 0, %584
  %588 = add i32 %587, 13
  %589 = sub i32 %584, 13
  %590 = mul i32 %589, 13
  %591 = add nsw i32 %584, 13
  %592 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 7
  store i32 %591, i32* %592, align 4
  %593 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %594 = load i32, i32* %593, align 16
  %595 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %596 = load i32, i32* %595, align 4
  %597 = shl i32 %594, %596
  %598 = sub i32 %594, %596
  %599 = mul i32 %598, %596
  %600 = shl i32 %594, %596
  %601 = add nsw i32 %594, %596
  %602 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 2
  %603 = load i32, i32* %602, align 8
  %604 = shl i32 %601, %603
  %605 = sub i32 %601, %603
  %606 = mul i32 %605, %603
  %607 = sub i32 0, %601
  %608 = add i32 %607, %603
  %609 = add nsw i32 %601, %603
  %610 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 3
  %611 = load i32, i32* %610, align 4
  %612 = sub i32 %609, %611
  %613 = mul i32 %612, %611
  %614 = shl i32 %609, %611
  %615 = add nsw i32 %609, %611
  %616 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 4
  %617 = load i32, i32* %616, align 16
  %618 = shl i32 %615, %617
  %619 = shl i32 %615, %617
  %620 = add nsw i32 %615, %617
  %621 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 5
  %622 = load i32, i32* %621, align 4
  %623 = sub i32 0, %620
  %624 = add i32 %623, %622
  %625 = shl i32 %620, %622
  %626 = shl i32 %620, %622
  %627 = add nsw i32 %620, %622
  %628 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 6
  %629 = load i32, i32* %628, align 8
  %630 = sub i32 %627, %629
  %631 = mul i32 %630, %629
  %632 = add nsw i32 %627, %629
  %633 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 7
  %634 = load i32, i32* %633, align 4
  %635 = sub i32 %632, %634
  %636 = mul i32 %635, %634
  %637 = shl i32 %632, %634
  %638 = shl i32 %632, %634
  %639 = sub i32 %632, %634
  %640 = mul i32 %639, %634
  %641 = sub i32 %632, %634
  %642 = mul i32 %641, %634
  %643 = sub i32 %632, %634
  %644 = mul i32 %643, %634
  %645 = sub i32 %632, %634
  %646 = mul i32 %645, %634
  %647 = sub i32 0, %632
  %648 = add i32 %647, %634
  %649 = add nsw i32 %632, %634
  %650 = shl i32 %649, 13
  %651 = shl i32 %649, 13
  %652 = sub i32 0, %649
  %653 = add i32 %652, 13
  %654 = sub i32 0, %649
  %655 = add i32 %654, 13
  %656 = sub i32 %649, 13
  %657 = mul i32 %656, 13
  %658 = sub i32 %649, 13
  %659 = mul i32 %658, 13
  %660 = sub i32 0, %649
  %661 = add i32 %660, 13
  %662 = shl i32 %649, 13
  %663 = add nsw i32 %649, 13
  %664 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 8
  store i32 %663, i32* %664, align 16
  %665 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %666 = load i32, i32* %665, align 16
  %667 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %668 = load i32, i32* %667, align 4
  %669 = shl i32 %666, %668
  %670 = shl i32 %666, %668
  %671 = shl i32 %666, %668
  %672 = sub i32 0, %666
  %673 = add i32 %672, %668
  %674 = add nsw i32 %666, %668
  %675 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 2
  %676 = load i32, i32* %675, align 8
  %677 = sub i32 0, %674
  %678 = add i32 %677, %676
  %679 = sub i32 %674, %676
  %680 = mul i32 %679, %676
  %681 = shl i32 %674, %676
  %682 = add nsw i32 %674, %676
  %683 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 3
  %684 = load i32, i32* %683, align 4
  %685 = add nsw i32 %682, %684
  %686 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 4
  %687 = load i32, i32* %686, align 16
  %688 = sub i32 0, %685
  %689 = add i32 %688, %687
  %690 = add nsw i32 %685, %687
  %691 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 5
  %692 = load i32, i32* %691, align 4
  %693 = sub i32 %690, %692
  %694 = mul i32 %693, %692
  %695 = sub i32 0, %690
  %696 = add i32 %695, %692
  %697 = sub i32 %690, %692
  %698 = mul i32 %697, %692
  %699 = sub i32 0, %690
  %700 = add i32 %699, %692
  %701 = shl i32 %690, %692
  %702 = sub i32 %690, %692
  %703 = mul i32 %702, %692
  %704 = shl i32 %690, %692
  %705 = add nsw i32 %690, %692
  %706 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 6
  %707 = load i32, i32* %706, align 8
  %708 = sub i32 0, %705
  %709 = add i32 %708, %707
  %710 = shl i32 %705, %707
  %711 = sub i32 %705, %707
  %712 = mul i32 %711, %707
  %713 = sub i32 0, %705
  %714 = add i32 %713, %707
  %715 = sub i32 %705, %707
  %716 = mul i32 %715, %707
  %717 = sub i32 0, %705
  %718 = add i32 %717, %707
  %719 = sub i32 0, %705
  %720 = add i32 %719, %707
  %721 = add nsw i32 %705, %707
  %722 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 7
  %723 = load i32, i32* %722, align 4
  %724 = sub i32 %721, %723
  %725 = mul i32 %724, %723
  %726 = add nsw i32 %721, %723
  %727 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 8
  %728 = load i32, i32* %727, align 16
  %729 = sub i32 %726, %728
  %730 = mul i32 %729, %728
  %731 = sub i32 0, %726
  %732 = add i32 %731, %728
  %733 = sub i32 0, %726
  %734 = add i32 %733, %728
  %735 = add nsw i32 %726, %728
  %736 = shl i32 %735, 13
  %737 = sub i32 %735, 13
  %738 = mul i32 %737, 13
  %739 = add nsw i32 %735, 13
  %740 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 9
  store i32 %739, i32* %740, align 4
  %741 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %742 = load i32, i32* %741, align 16
  %743 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %744 = load i32, i32* %743, align 4
  %745 = sub i32 %742, %744
  %746 = mul i32 %745, %744
  %747 = sub i32 %742, %744
  %748 = mul i32 %747, %744
  %749 = sub i32 0, %742
  %750 = add i32 %749, %744
  %751 = add nsw i32 %742, %744
  %752 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 2
  %753 = load i32, i32* %752, align 8
  %754 = shl i32 %751, %753
  %755 = sub i32 %751, %753
  %756 = mul i32 %755, %753
  %757 = sub i32 %751, %753
  %758 = mul i32 %757, %753
  %759 = sub i32 0, %751
  %760 = add i32 %759, %753
  %761 = add nsw i32 %751, %753
  %762 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 3
  %763 = load i32, i32* %762, align 4
  %764 = shl i32 %761, %763
  %765 = shl i32 %761, %763
  %766 = sub i32 %761, %763
  %767 = mul i32 %766, %763
  %768 = sub i32 0, %761
  %769 = add i32 %768, %763
  %770 = sub i32 0, %761
  %771 = add i32 %770, %763
  %772 = add nsw i32 %761, %763
  %773 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 4
  %774 = load i32, i32* %773, align 16
  %775 = sub i32 0, %772
  %776 = add i32 %775, %774
  %777 = shl i32 %772, %774
  %778 = sub i32 0, %772
  %779 = add i32 %778, %774
  %780 = add nsw i32 %772, %774
  %781 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 5
  %782 = load i32, i32* %781, align 4
  %783 = sub i32 0, %780
  %784 = add i32 %783, %782
  %785 = sub i32 0, %780
  %786 = add i32 %785, %782
  %787 = add nsw i32 %780, %782
  %788 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 6
  %789 = load i32, i32* %788, align 8
  %790 = sub i32 %787, %789
  %791 = mul i32 %790, %789
  %792 = shl i32 %787, %789
  %793 = shl i32 %787, %789
  %794 = sub i32 0, %787
  %795 = add i32 %794, %789
  %796 = sub i32 %787, %789
  %797 = mul i32 %796, %789
  %798 = sub i32 %787, %789
  %799 = mul i32 %798, %789
  %800 = add nsw i32 %787, %789
  %801 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 7
  %802 = load i32, i32* %801, align 4
  %803 = sub i32 %800, %802
  %804 = mul i32 %803, %802
  %805 = sub i32 0, %800
  %806 = add i32 %805, %802
  %807 = sub i32 %800, %802
  %808 = mul i32 %807, %802
  %809 = sub i32 %800, %802
  %810 = mul i32 %809, %802
  %811 = add nsw i32 %800, %802
  %812 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 8
  %813 = load i32, i32* %812, align 16
  %814 = sub i32 %811, %813
  %815 = mul i32 %814, %813
  %816 = sub i32 0, %811
  %817 = add i32 %816, %813
  %818 = sub i32 %811, %813
  %819 = mul i32 %818, %813
  %820 = sub i32 0, %811
  %821 = add i32 %820, %813
  %822 = sub i32 0, %811
  %823 = add i32 %822, %813
  %824 = sub i32 %811, %813
  %825 = mul i32 %824, %813
  %826 = sub i32 0, %811
  %827 = add i32 %826, %813
  %828 = add nsw i32 %811, %813
  %829 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 9
  %830 = load i32, i32* %829, align 4
  %831 = sub i32 0, %828
  %832 = add i32 %831, %830
  %833 = shl i32 %828, %830
  %834 = shl i32 %828, %830
  %835 = sub i32 %828, %830
  %836 = mul i32 %835, %830
  %837 = sub i32 %828, %830
  %838 = mul i32 %837, %830
  %839 = shl i32 %828, %830
  %840 = add nsw i32 %828, %830
  %841 = sub i32 0, %840
  %842 = add i32 %841, 13
  %843 = add nsw i32 %840, 13
  %844 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 10
  store i32 %843, i32* %844, align 8
  %845 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 0
  %846 = load i32, i32* %845, align 16
  %847 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 1
  %848 = load i32, i32* %847, align 4
  %849 = sub i32 %846, %848
  %850 = mul i32 %849, %848
  %851 = sub i32 %846, %848
  %852 = mul i32 %851, %848
  %853 = sub i32 %846, %848
  %854 = mul i32 %853, %848
  %855 = sub i32 %846, %848
  %856 = mul i32 %855, %848
  %857 = sub i32 %846, %848
  %858 = mul i32 %857, %848
  %859 = sub i32 0, %846
  %860 = add i32 %859, %848
  %861 = add nsw i32 %846, %848
  %862 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 2
  %863 = load i32, i32* %862, align 8
  %864 = shl i32 %861, %863
  %865 = sub i32 %861, %863
  %866 = mul i32 %865, %863
  %867 = sub i32 0, %861
  %868 = add i32 %867, %863
  %869 = sub i32 %861, %863
  %870 = mul i32 %869, %863
  %871 = sub i32 %861, %863
  %872 = mul i32 %871, %863
  %873 = shl i32 %861, %863
  %874 = sub i32 %861, %863
  %875 = mul i32 %874, %863
  %876 = sub i32 %861, %863
  %877 = mul i32 %876, %863
  %878 = add nsw i32 %861, %863
  %879 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 3
  %880 = load i32, i32* %879, align 4
  %881 = sub i32 0, %878
  %882 = add i32 %881, %880
  %883 = shl i32 %878, %880
  %884 = sub i32 0, %878
  %885 = add i32 %884, %880
  %886 = sub i32 0, %878
  %887 = add i32 %886, %880
  %888 = sub i32 0, %878
  %889 = add i32 %888, %880
  %890 = add nsw i32 %878, %880
  %891 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 4
  %892 = load i32, i32* %891, align 16
  %893 = sub i32 %890, %892
  %894 = mul i32 %893, %892
  %895 = shl i32 %890, %892
  %896 = sub i32 0, %890
  %897 = add i32 %896, %892
  %898 = sub i32 %890, %892
  %899 = mul i32 %898, %892
  %900 = sub i32 0, %890
  %901 = add i32 %900, %892
  %902 = sub i32 0, %890
  %903 = add i32 %902, %892
  %904 = sub i32 %890, %892
  %905 = mul i32 %904, %892
  %906 = sub i32 0, %890
  %907 = add i32 %906, %892
  %908 = sub i32 0, %890
  %909 = add i32 %908, %892
  %910 = add nsw i32 %890, %892
  %911 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 5
  %912 = load i32, i32* %911, align 4
  %913 = sub i32 0, %910
  %914 = add i32 %913, %912
  %915 = sub i32 0, %910
  %916 = add i32 %915, %912
  %917 = shl i32 %910, %912
  %918 = add nsw i32 %910, %912
  %919 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 6
  %920 = load i32, i32* %919, align 8
  %921 = sub i32 0, %918
  %922 = add i32 %921, %920
  %923 = sub i32 %918, %920
  %924 = mul i32 %923, %920
  %925 = sub i32 %918, %920
  %926 = mul i32 %925, %920
  %927 = add nsw i32 %918, %920
  %928 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 7
  %929 = load i32, i32* %928, align 4
  %930 = shl i32 %927, %929
  %931 = sub i32 0, %927
  %932 = add i32 %931, %929
  %933 = shl i32 %927, %929
  %934 = shl i32 %927, %929
  %935 = add nsw i32 %927, %929
  %936 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 8
  %937 = load i32, i32* %936, align 16
  %938 = sub i32 %935, %937
  %939 = mul i32 %938, %937
  %940 = shl i32 %935, %937
  %941 = add nsw i32 %935, %937
  %942 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 9
  %943 = load i32, i32* %942, align 4
  %944 = shl i32 %941, %943
  %945 = shl i32 %941, %943
  %946 = sub i32 %941, %943
  %947 = mul i32 %946, %943
  %948 = sub i32 %941, %943
  %949 = mul i32 %948, %943
  %950 = sub i32 0, %941
  %951 = add i32 %950, %943
  %952 = shl i32 %941, %943
  %953 = sub i32 0, %941
  %954 = add i32 %953, %943
  %955 = sub i32 %941, %943
  %956 = mul i32 %955, %943
  %957 = shl i32 %941, %943
  %958 = shl i32 %941, %943
  %959 = add nsw i32 %941, %943
  %960 = getelementptr inbounds [12 x i32], [12 x i32]* %296, i64 0, i64 10
  %961 = load i32, i32* %960, align 8
  %962 = sub i32 %959, %961
  %963 = mul i32 %962, %961
  %964 = sub i32 0, %959
  %965 = add i32 %964, %961
  %966 = sub i32 %959, %961
  %967 = mul i32 %966, %961
  %968 = sub i32 %959, %961
  %969 = mul i32 %968, %961
  %970 = add nsw i32 %959, %961
  %971 = shl i32 %970, 13
  %972 = shl i32 %970, 13
  %973 = shl i32 %970, 13
  %974 = sub i32 %970, 13
  %975 = mul i32 %974, 13
  %976 = sub i32 0, %970
  %977 = add i32 %976, 13
  %978 = shl i32 %970, 13
  %979 = add nsw i32 %970, 13
  %980 = getelementptr inbounds [12 x i32], [12 x i32]* %297, i64 0, i64 11
  store i32 %979, i32* %980, align 4
  store i32 0, i32* %298, align 4
  br label %9

; <label>:981:                                    ; preds = %248, %239
  %982 = load i32, i32* %13, align 4
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds [12 x i32], [12 x i32]* %12, i64 0, i64 %983
  %985 = load i32, i32* %984, align 4
  %986 = load i32, i32* %14, align 4
  %987 = sub i32 8, %986
  %988 = mul i32 %987, %986
  %989 = sub nsw i32 8, %986
  %990 = sub i32 %985, %989
  %991 = mul i32 %990, %989
  %992 = sub nsw i32 %985, %989
  %993 = sub i32 %992, 7
  %994 = mul i32 %993, 7
  %995 = sub i32 %992, 7
  %996 = mul i32 %995, 7
  %997 = srem i32 %992, 7
  %998 = icmp eq i32 %997, 5
  br label %248

; <label>:999:                                    ; preds = %284, %275
  br label %284
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

declare i32 @__isoc99_scanf(i8*, ...) #2

declare i32 @printf(i8*, ...) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
