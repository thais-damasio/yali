; ModuleID = 'source-C-CXX/96/225.c'
source_filename = "source-C-CXX/96/225.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"%d\0A%d\0A%d\0A%d\0A%d\0A%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %.reg2mem172 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = sub i32 %0, -818755033
  %3 = sub i32 %2, 1
  %4 = add i32 %3, -818755033
  %5 = sub i32 %0, 1
  %6 = mul i32 %0, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %.reg2mem
  %9 = icmp slt i32 %1, 10
  store i1 %9, i1* %.reg2mem172
  %switchVar = alloca i32
  store i32 -191370058, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar171 = load i32, i32* %switchVar
  switch i32 %switchVar171, label %switchDefault [
    i32 -191370058, label %first
    i32 1032787355, label %originalBB
    i32 -355117488, label %originalBBpart2
    i32 -889022295, label %originalBBalteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload173 = load volatile i1, i1* %.reg2mem172
  %10 = and i1 %.reload, %.reload173
  %11 = xor i1 %.reload, %.reload173
  %12 = or i1 %10, %11
  %13 = or i1 %.reload, %.reload173
  %14 = select i1 %12, i32 1032787355, i32 -889022295
  store i32 %14, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %n = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  %n1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %n3 = alloca i32, align 4
  %n4 = alloca i32, align 4
  %n5 = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %15 = load i32, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %rem = srem i32 %16, 100
  %17 = sub i32 %15, 1922479578
  %18 = sub i32 %17, %rem
  %19 = add i32 %18, 1922479578
  %sub = sub nsw i32 %15, %rem
  %div = sdiv i32 %19, 100
  store i32 %div, i32* %a, align 4
  %20 = load i32, i32* %n, align 4
  %21 = load i32, i32* %a, align 4
  %mul = mul nsw i32 %21, 100
  %22 = sub i32 %20, -1252906786
  %23 = sub i32 %22, %mul
  %24 = add i32 %23, -1252906786
  %sub1 = sub nsw i32 %20, %mul
  store i32 %24, i32* %n1, align 4
  %25 = load i32, i32* %n1, align 4
  %26 = load i32, i32* %n1, align 4
  %rem2 = srem i32 %26, 50
  %27 = sub i32 0, %rem2
  %28 = add i32 %25, %27
  %sub3 = sub nsw i32 %25, %rem2
  %div4 = sdiv i32 %28, 50
  store i32 %div4, i32* %b, align 4
  %29 = load i32, i32* %n1, align 4
  %30 = load i32, i32* %b, align 4
  %mul5 = mul nsw i32 %30, 50
  %31 = sub i32 0, %mul5
  %32 = add i32 %29, %31
  %sub6 = sub nsw i32 %29, %mul5
  store i32 %32, i32* %n2, align 4
  %33 = load i32, i32* %n2, align 4
  %34 = load i32, i32* %n2, align 4
  %rem7 = srem i32 %34, 20
  %35 = sub i32 %33, -35346846
  %36 = sub i32 %35, %rem7
  %37 = add i32 %36, -35346846
  %sub8 = sub nsw i32 %33, %rem7
  %div9 = sdiv i32 %37, 20
  store i32 %div9, i32* %c, align 4
  %38 = load i32, i32* %n2, align 4
  %39 = load i32, i32* %c, align 4
  %mul10 = mul nsw i32 %39, 20
  %40 = add i32 %38, -831090380
  %41 = sub i32 %40, %mul10
  %42 = sub i32 %41, -831090380
  %sub11 = sub nsw i32 %38, %mul10
  store i32 %42, i32* %n3, align 4
  %43 = load i32, i32* %n3, align 4
  %44 = load i32, i32* %n3, align 4
  %rem12 = srem i32 %44, 10
  %45 = sub i32 %43, -1051826603
  %46 = sub i32 %45, %rem12
  %47 = add i32 %46, -1051826603
  %sub13 = sub nsw i32 %43, %rem12
  %div14 = sdiv i32 %47, 10
  store i32 %div14, i32* %d, align 4
  %48 = load i32, i32* %n3, align 4
  %49 = load i32, i32* %d, align 4
  %mul15 = mul nsw i32 %49, 10
  %50 = sub i32 0, %mul15
  %51 = add i32 %48, %50
  %sub16 = sub nsw i32 %48, %mul15
  store i32 %51, i32* %n4, align 4
  %52 = load i32, i32* %n4, align 4
  %53 = load i32, i32* %n4, align 4
  %rem17 = srem i32 %53, 5
  %54 = sub i32 %52, 693834016
  %55 = sub i32 %54, %rem17
  %56 = add i32 %55, 693834016
  %sub18 = sub nsw i32 %52, %rem17
  %div19 = sdiv i32 %56, 5
  store i32 %div19, i32* %e, align 4
  %57 = load i32, i32* %n4, align 4
  %58 = load i32, i32* %e, align 4
  %mul20 = mul nsw i32 %58, 5
  %59 = sub i32 0, %mul20
  %60 = add i32 %57, %59
  %sub21 = sub nsw i32 %57, %mul20
  store i32 %60, i32* %n5, align 4
  %61 = load i32, i32* %n5, align 4
  store i32 %61, i32* %f, align 4
  %62 = load i32, i32* %a, align 4
  %63 = load i32, i32* %b, align 4
  %64 = load i32, i32* %c, align 4
  %65 = load i32, i32* %d, align 4
  %66 = load i32, i32* %e, align 4
  %67 = load i32, i32* %f, align 4
  %call22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i32 %62, i32 %63, i32 %64, i32 %65, i32 %66, i32 %67)
  %68 = load i32, i32* @x
  %69 = load i32, i32* @y
  %70 = add i32 %68, 458332580
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, 458332580
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 -355117488, i32 -889022295
  store i32 %94, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %argc.addralteredBB = alloca i32, align 4
  %argv.addralteredBB = alloca i8**, align 8
  %nalteredBB = alloca i32, align 4
  %aalteredBB = alloca i32, align 4
  %balteredBB = alloca i32, align 4
  %calteredBB = alloca i32, align 4
  %dalteredBB = alloca i32, align 4
  %ealteredBB = alloca i32, align 4
  %falteredBB = alloca i32, align 4
  %n1alteredBB = alloca i32, align 4
  %n2alteredBB = alloca i32, align 4
  %n3alteredBB = alloca i32, align 4
  %n4alteredBB = alloca i32, align 4
  %n5alteredBB = alloca i32, align 4
  store i32 0, i32* %retvalalteredBB, align 4
  store i32 %argc, i32* %argc.addralteredBB, align 4
  store i8** %argv, i8*** %argv.addralteredBB, align 8
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %nalteredBB)
  %95 = load i32, i32* %nalteredBB, align 4
  %96 = load i32, i32* %nalteredBB, align 4
  %97 = add i32 0, 1288148585
  %98 = sub i32 %97, %96
  %99 = sub i32 %98, 1288148585
  %_ = sub i32 0, %96
  %100 = sub i32 0, %99
  %101 = sub i32 0, 100
  %102 = add i32 %100, %101
  %103 = sub i32 0, %102
  %gen = add i32 %99, 100
  %104 = add i32 %96, 507824172
  %105 = sub i32 %104, 100
  %106 = sub i32 %105, 507824172
  %_23 = sub i32 %96, 100
  %gen24 = mul i32 %106, 100
  %107 = sub i32 0, 100
  %108 = add i32 %96, %107
  %_25 = sub i32 %96, 100
  %gen26 = mul i32 %108, 100
  %109 = sub i32 0, 100
  %110 = add i32 %96, %109
  %_27 = sub i32 %96, 100
  %gen28 = mul i32 %110, 100
  %remalteredBB = srem i32 %96, 100
  %_29 = shl i32 %95, %remalteredBB
  %111 = sub i32 0, 1166678148
  %112 = sub i32 %111, %95
  %113 = add i32 %112, 1166678148
  %_30 = sub i32 0, %95
  %114 = sub i32 0, %remalteredBB
  %115 = sub i32 %113, %114
  %gen31 = add i32 %113, %remalteredBB
  %116 = sub i32 0, %remalteredBB
  %117 = add i32 %95, %116
  %subalteredBB = sub nsw i32 %95, %remalteredBB
  %118 = sub i32 0, %117
  %119 = add i32 0, %118
  %_32 = sub i32 0, %117
  %120 = add i32 %119, -808621802
  %121 = add i32 %120, 100
  %122 = sub i32 %121, -808621802
  %gen33 = add i32 %119, 100
  %divalteredBB = sdiv i32 %117, 100
  store i32 %divalteredBB, i32* %aalteredBB, align 4
  %123 = load i32, i32* %nalteredBB, align 4
  %124 = load i32, i32* %aalteredBB, align 4
  %_34 = shl i32 %124, 100
  %_35 = shl i32 %124, 100
  %125 = sub i32 %124, 1347731815
  %126 = sub i32 %125, 100
  %127 = add i32 %126, 1347731815
  %_36 = sub i32 %124, 100
  %gen37 = mul i32 %127, 100
  %mulalteredBB = mul nsw i32 %124, 100
  %128 = add i32 0, 899376215
  %129 = sub i32 %128, %123
  %130 = sub i32 %129, 899376215
  %_38 = sub i32 0, %123
  %131 = add i32 %130, 1310230853
  %132 = add i32 %131, %mulalteredBB
  %133 = sub i32 %132, 1310230853
  %gen39 = add i32 %130, %mulalteredBB
  %134 = sub i32 %123, 82170648
  %135 = sub i32 %134, %mulalteredBB
  %136 = add i32 %135, 82170648
  %_40 = sub i32 %123, %mulalteredBB
  %gen41 = mul i32 %136, %mulalteredBB
  %137 = sub i32 0, %mulalteredBB
  %138 = add i32 %123, %137
  %_42 = sub i32 %123, %mulalteredBB
  %gen43 = mul i32 %138, %mulalteredBB
  %139 = sub i32 0, %mulalteredBB
  %140 = add i32 %123, %139
  %_44 = sub i32 %123, %mulalteredBB
  %gen45 = mul i32 %140, %mulalteredBB
  %141 = sub i32 %123, 1984715832
  %142 = sub i32 %141, %mulalteredBB
  %143 = add i32 %142, 1984715832
  %sub1alteredBB = sub nsw i32 %123, %mulalteredBB
  store i32 %143, i32* %n1alteredBB, align 4
  %144 = load i32, i32* %n1alteredBB, align 4
  %145 = load i32, i32* %n1alteredBB, align 4
  %146 = sub i32 0, -53797614
  %147 = sub i32 %146, %145
  %148 = add i32 %147, -53797614
  %_46 = sub i32 0, %145
  %149 = sub i32 0, %148
  %150 = sub i32 0, 50
  %151 = add i32 %149, %150
  %152 = sub i32 0, %151
  %gen47 = add i32 %148, 50
  %153 = sub i32 %145, 1687541598
  %154 = sub i32 %153, 50
  %155 = add i32 %154, 1687541598
  %_48 = sub i32 %145, 50
  %gen49 = mul i32 %155, 50
  %_50 = shl i32 %145, 50
  %156 = sub i32 0, 50
  %157 = add i32 %145, %156
  %_51 = sub i32 %145, 50
  %gen52 = mul i32 %157, 50
  %_53 = shl i32 %145, 50
  %158 = add i32 %145, 932781655
  %159 = sub i32 %158, 50
  %160 = sub i32 %159, 932781655
  %_54 = sub i32 %145, 50
  %gen55 = mul i32 %160, 50
  %161 = sub i32 0, 50
  %162 = add i32 %145, %161
  %_56 = sub i32 %145, 50
  %gen57 = mul i32 %162, 50
  %rem2alteredBB = srem i32 %145, 50
  %163 = sub i32 0, -128795295
  %164 = sub i32 %163, %144
  %165 = add i32 %164, -128795295
  %_58 = sub i32 0, %144
  %166 = sub i32 %165, -917163764
  %167 = add i32 %166, %rem2alteredBB
  %168 = add i32 %167, -917163764
  %gen59 = add i32 %165, %rem2alteredBB
  %_60 = shl i32 %144, %rem2alteredBB
  %169 = add i32 %144, 944432968
  %170 = sub i32 %169, %rem2alteredBB
  %171 = sub i32 %170, 944432968
  %_61 = sub i32 %144, %rem2alteredBB
  %gen62 = mul i32 %171, %rem2alteredBB
  %172 = sub i32 0, -1499257869
  %173 = sub i32 %172, %144
  %174 = add i32 %173, -1499257869
  %_63 = sub i32 0, %144
  %175 = sub i32 0, %174
  %176 = sub i32 0, %rem2alteredBB
  %177 = add i32 %175, %176
  %178 = sub i32 0, %177
  %gen64 = add i32 %174, %rem2alteredBB
  %179 = sub i32 0, 334645698
  %180 = sub i32 %179, %144
  %181 = add i32 %180, 334645698
  %_65 = sub i32 0, %144
  %182 = sub i32 0, %rem2alteredBB
  %183 = sub i32 %181, %182
  %gen66 = add i32 %181, %rem2alteredBB
  %184 = sub i32 %144, 852722990
  %185 = sub i32 %184, %rem2alteredBB
  %186 = add i32 %185, 852722990
  %sub3alteredBB = sub nsw i32 %144, %rem2alteredBB
  %_67 = shl i32 %186, 50
  %187 = sub i32 0, %186
  %188 = add i32 0, %187
  %_68 = sub i32 0, %186
  %189 = sub i32 0, %188
  %190 = sub i32 0, 50
  %191 = add i32 %189, %190
  %192 = sub i32 0, %191
  %gen69 = add i32 %188, 50
  %_70 = shl i32 %186, 50
  %193 = add i32 0, 1515546524
  %194 = sub i32 %193, %186
  %195 = sub i32 %194, 1515546524
  %_71 = sub i32 0, %186
  %196 = sub i32 0, 50
  %197 = sub i32 %195, %196
  %gen72 = add i32 %195, 50
  %_73 = shl i32 %186, 50
  %div4alteredBB = sdiv i32 %186, 50
  store i32 %div4alteredBB, i32* %balteredBB, align 4
  %198 = load i32, i32* %n1alteredBB, align 4
  %199 = load i32, i32* %balteredBB, align 4
  %200 = add i32 0, -1278048468
  %201 = sub i32 %200, %199
  %202 = sub i32 %201, -1278048468
  %_74 = sub i32 0, %199
  %203 = sub i32 %202, -651498399
  %204 = add i32 %203, 50
  %205 = add i32 %204, -651498399
  %gen75 = add i32 %202, 50
  %206 = sub i32 0, 1870727484
  %207 = sub i32 %206, %199
  %208 = add i32 %207, 1870727484
  %_76 = sub i32 0, %199
  %209 = sub i32 0, 50
  %210 = sub i32 %208, %209
  %gen77 = add i32 %208, 50
  %211 = sub i32 0, -1322340616
  %212 = sub i32 %211, %199
  %213 = add i32 %212, -1322340616
  %_78 = sub i32 0, %199
  %214 = sub i32 0, 50
  %215 = sub i32 %213, %214
  %gen79 = add i32 %213, 50
  %mul5alteredBB = mul nsw i32 %199, 50
  %216 = sub i32 0, %198
  %217 = add i32 0, %216
  %_80 = sub i32 0, %198
  %218 = add i32 %217, 762619382
  %219 = add i32 %218, %mul5alteredBB
  %220 = sub i32 %219, 762619382
  %gen81 = add i32 %217, %mul5alteredBB
  %_82 = shl i32 %198, %mul5alteredBB
  %221 = add i32 0, 1842226790
  %222 = sub i32 %221, %198
  %223 = sub i32 %222, 1842226790
  %_83 = sub i32 0, %198
  %224 = sub i32 %223, -473777406
  %225 = add i32 %224, %mul5alteredBB
  %226 = add i32 %225, -473777406
  %gen84 = add i32 %223, %mul5alteredBB
  %_85 = shl i32 %198, %mul5alteredBB
  %_86 = shl i32 %198, %mul5alteredBB
  %227 = add i32 0, -888037099
  %228 = sub i32 %227, %198
  %229 = sub i32 %228, -888037099
  %_87 = sub i32 0, %198
  %230 = add i32 %229, -98186273
  %231 = add i32 %230, %mul5alteredBB
  %232 = sub i32 %231, -98186273
  %gen88 = add i32 %229, %mul5alteredBB
  %233 = sub i32 %198, 583375152
  %234 = sub i32 %233, %mul5alteredBB
  %235 = add i32 %234, 583375152
  %sub6alteredBB = sub nsw i32 %198, %mul5alteredBB
  store i32 %235, i32* %n2alteredBB, align 4
  %236 = load i32, i32* %n2alteredBB, align 4
  %237 = load i32, i32* %n2alteredBB, align 4
  %238 = sub i32 0, 20
  %239 = add i32 %237, %238
  %_89 = sub i32 %237, 20
  %gen90 = mul i32 %239, 20
  %240 = sub i32 %237, 907457868
  %241 = sub i32 %240, 20
  %242 = add i32 %241, 907457868
  %_91 = sub i32 %237, 20
  %gen92 = mul i32 %242, 20
  %_93 = shl i32 %237, 20
  %243 = sub i32 0, -1744925646
  %244 = sub i32 %243, %237
  %245 = add i32 %244, -1744925646
  %_94 = sub i32 0, %237
  %246 = sub i32 %245, 1226884652
  %247 = add i32 %246, 20
  %248 = add i32 %247, 1226884652
  %gen95 = add i32 %245, 20
  %249 = add i32 %237, 2382850
  %250 = sub i32 %249, 20
  %251 = sub i32 %250, 2382850
  %_96 = sub i32 %237, 20
  %gen97 = mul i32 %251, 20
  %_98 = shl i32 %237, 20
  %rem7alteredBB = srem i32 %237, 20
  %252 = sub i32 %236, -687116112
  %253 = sub i32 %252, %rem7alteredBB
  %254 = add i32 %253, -687116112
  %_99 = sub i32 %236, %rem7alteredBB
  %gen100 = mul i32 %254, %rem7alteredBB
  %255 = sub i32 0, %rem7alteredBB
  %256 = add i32 %236, %255
  %sub8alteredBB = sub nsw i32 %236, %rem7alteredBB
  %257 = sub i32 %256, 1132617519
  %258 = sub i32 %257, 20
  %259 = add i32 %258, 1132617519
  %_101 = sub i32 %256, 20
  %gen102 = mul i32 %259, 20
  %_103 = shl i32 %256, 20
  %_104 = shl i32 %256, 20
  %div9alteredBB = sdiv i32 %256, 20
  store i32 %div9alteredBB, i32* %calteredBB, align 4
  %260 = load i32, i32* %n2alteredBB, align 4
  %261 = load i32, i32* %calteredBB, align 4
  %_105 = shl i32 %261, 20
  %_106 = shl i32 %261, 20
  %mul10alteredBB = mul nsw i32 %261, 20
  %262 = add i32 0, 674423634
  %263 = sub i32 %262, %260
  %264 = sub i32 %263, 674423634
  %_107 = sub i32 0, %260
  %265 = sub i32 %264, -1691003026
  %266 = add i32 %265, %mul10alteredBB
  %267 = add i32 %266, -1691003026
  %gen108 = add i32 %264, %mul10alteredBB
  %268 = add i32 0, -966127901
  %269 = sub i32 %268, %260
  %270 = sub i32 %269, -966127901
  %_109 = sub i32 0, %260
  %271 = add i32 %270, 757268867
  %272 = add i32 %271, %mul10alteredBB
  %273 = sub i32 %272, 757268867
  %gen110 = add i32 %270, %mul10alteredBB
  %274 = add i32 0, -2009697168
  %275 = sub i32 %274, %260
  %276 = sub i32 %275, -2009697168
  %_111 = sub i32 0, %260
  %277 = sub i32 %276, 1364354484
  %278 = add i32 %277, %mul10alteredBB
  %279 = add i32 %278, 1364354484
  %gen112 = add i32 %276, %mul10alteredBB
  %_113 = shl i32 %260, %mul10alteredBB
  %280 = sub i32 0, %mul10alteredBB
  %281 = add i32 %260, %280
  %_114 = sub i32 %260, %mul10alteredBB
  %gen115 = mul i32 %281, %mul10alteredBB
  %_116 = shl i32 %260, %mul10alteredBB
  %282 = add i32 %260, 24600941
  %283 = sub i32 %282, %mul10alteredBB
  %284 = sub i32 %283, 24600941
  %sub11alteredBB = sub nsw i32 %260, %mul10alteredBB
  store i32 %284, i32* %n3alteredBB, align 4
  %285 = load i32, i32* %n3alteredBB, align 4
  %286 = load i32, i32* %n3alteredBB, align 4
  %_117 = shl i32 %286, 10
  %287 = sub i32 0, %286
  %288 = add i32 0, %287
  %_118 = sub i32 0, %286
  %289 = sub i32 0, %288
  %290 = sub i32 0, 10
  %291 = add i32 %289, %290
  %292 = sub i32 0, %291
  %gen119 = add i32 %288, 10
  %293 = sub i32 0, %286
  %294 = add i32 0, %293
  %_120 = sub i32 0, %286
  %295 = sub i32 0, %294
  %296 = sub i32 0, 10
  %297 = add i32 %295, %296
  %298 = sub i32 0, %297
  %gen121 = add i32 %294, 10
  %299 = sub i32 0, -1160635058
  %300 = sub i32 %299, %286
  %301 = add i32 %300, -1160635058
  %_122 = sub i32 0, %286
  %302 = add i32 %301, 329462238
  %303 = add i32 %302, 10
  %304 = sub i32 %303, 329462238
  %gen123 = add i32 %301, 10
  %305 = sub i32 %286, -451377798
  %306 = sub i32 %305, 10
  %307 = add i32 %306, -451377798
  %_124 = sub i32 %286, 10
  %gen125 = mul i32 %307, 10
  %rem12alteredBB = srem i32 %286, 10
  %308 = add i32 0, -1191670704
  %309 = sub i32 %308, %285
  %310 = sub i32 %309, -1191670704
  %_126 = sub i32 0, %285
  %311 = sub i32 0, %310
  %312 = sub i32 0, %rem12alteredBB
  %313 = add i32 %311, %312
  %314 = sub i32 0, %313
  %gen127 = add i32 %310, %rem12alteredBB
  %315 = sub i32 0, %285
  %316 = add i32 0, %315
  %_128 = sub i32 0, %285
  %317 = sub i32 0, %316
  %318 = sub i32 0, %rem12alteredBB
  %319 = add i32 %317, %318
  %320 = sub i32 0, %319
  %gen129 = add i32 %316, %rem12alteredBB
  %_130 = shl i32 %285, %rem12alteredBB
  %_131 = shl i32 %285, %rem12alteredBB
  %321 = add i32 %285, 1394963611
  %322 = sub i32 %321, %rem12alteredBB
  %323 = sub i32 %322, 1394963611
  %_132 = sub i32 %285, %rem12alteredBB
  %gen133 = mul i32 %323, %rem12alteredBB
  %_134 = shl i32 %285, %rem12alteredBB
  %324 = sub i32 %285, 686789184
  %325 = sub i32 %324, %rem12alteredBB
  %326 = add i32 %325, 686789184
  %sub13alteredBB = sub nsw i32 %285, %rem12alteredBB
  %327 = add i32 0, -1804213559
  %328 = sub i32 %327, %326
  %329 = sub i32 %328, -1804213559
  %_135 = sub i32 0, %326
  %330 = sub i32 0, 10
  %331 = sub i32 %329, %330
  %gen136 = add i32 %329, 10
  %div14alteredBB = sdiv i32 %326, 10
  store i32 %div14alteredBB, i32* %dalteredBB, align 4
  %332 = load i32, i32* %n3alteredBB, align 4
  %333 = load i32, i32* %dalteredBB, align 4
  %_137 = shl i32 %333, 10
  %mul15alteredBB = mul nsw i32 %333, 10
  %334 = sub i32 0, %mul15alteredBB
  %335 = add i32 %332, %334
  %_138 = sub i32 %332, %mul15alteredBB
  %gen139 = mul i32 %335, %mul15alteredBB
  %336 = sub i32 0, %mul15alteredBB
  %337 = add i32 %332, %336
  %sub16alteredBB = sub nsw i32 %332, %mul15alteredBB
  store i32 %337, i32* %n4alteredBB, align 4
  %338 = load i32, i32* %n4alteredBB, align 4
  %339 = load i32, i32* %n4alteredBB, align 4
  %340 = add i32 0, -2055634339
  %341 = sub i32 %340, %339
  %342 = sub i32 %341, -2055634339
  %_140 = sub i32 0, %339
  %343 = add i32 %342, 887357991
  %344 = add i32 %343, 5
  %345 = sub i32 %344, 887357991
  %gen141 = add i32 %342, 5
  %_142 = shl i32 %339, 5
  %rem17alteredBB = srem i32 %339, 5
  %346 = sub i32 0, %rem17alteredBB
  %347 = add i32 %338, %346
  %_143 = sub i32 %338, %rem17alteredBB
  %gen144 = mul i32 %347, %rem17alteredBB
  %_145 = shl i32 %338, %rem17alteredBB
  %348 = sub i32 0, 98723112
  %349 = sub i32 %348, %338
  %350 = add i32 %349, 98723112
  %_146 = sub i32 0, %338
  %351 = sub i32 0, %rem17alteredBB
  %352 = sub i32 %350, %351
  %gen147 = add i32 %350, %rem17alteredBB
  %_148 = shl i32 %338, %rem17alteredBB
  %353 = sub i32 0, %338
  %354 = add i32 0, %353
  %_149 = sub i32 0, %338
  %355 = sub i32 0, %354
  %356 = sub i32 0, %rem17alteredBB
  %357 = add i32 %355, %356
  %358 = sub i32 0, %357
  %gen150 = add i32 %354, %rem17alteredBB
  %359 = sub i32 0, 2034648933
  %360 = sub i32 %359, %338
  %361 = add i32 %360, 2034648933
  %_151 = sub i32 0, %338
  %362 = sub i32 0, %361
  %363 = sub i32 0, %rem17alteredBB
  %364 = add i32 %362, %363
  %365 = sub i32 0, %364
  %gen152 = add i32 %361, %rem17alteredBB
  %366 = sub i32 %338, 832046978
  %367 = sub i32 %366, %rem17alteredBB
  %368 = add i32 %367, 832046978
  %_153 = sub i32 %338, %rem17alteredBB
  %gen154 = mul i32 %368, %rem17alteredBB
  %369 = sub i32 0, %rem17alteredBB
  %370 = add i32 %338, %369
  %sub18alteredBB = sub nsw i32 %338, %rem17alteredBB
  %371 = sub i32 %370, -643176818
  %372 = sub i32 %371, 5
  %373 = add i32 %372, -643176818
  %_155 = sub i32 %370, 5
  %gen156 = mul i32 %373, 5
  %374 = add i32 0, 946902310
  %375 = sub i32 %374, %370
  %376 = sub i32 %375, 946902310
  %_157 = sub i32 0, %370
  %377 = sub i32 0, 5
  %378 = sub i32 %376, %377
  %gen158 = add i32 %376, 5
  %_159 = shl i32 %370, 5
  %div19alteredBB = sdiv i32 %370, 5
  store i32 %div19alteredBB, i32* %ealteredBB, align 4
  %379 = load i32, i32* %n4alteredBB, align 4
  %380 = load i32, i32* %ealteredBB, align 4
  %_160 = shl i32 %380, 5
  %381 = add i32 %380, 190481630
  %382 = sub i32 %381, 5
  %383 = sub i32 %382, 190481630
  %_161 = sub i32 %380, 5
  %gen162 = mul i32 %383, 5
  %mul20alteredBB = mul nsw i32 %380, 5
  %384 = sub i32 0, %379
  %385 = add i32 0, %384
  %_163 = sub i32 0, %379
  %386 = sub i32 0, %385
  %387 = sub i32 0, %mul20alteredBB
  %388 = add i32 %386, %387
  %389 = sub i32 0, %388
  %gen164 = add i32 %385, %mul20alteredBB
  %390 = sub i32 0, %mul20alteredBB
  %391 = add i32 %379, %390
  %_165 = sub i32 %379, %mul20alteredBB
  %gen166 = mul i32 %391, %mul20alteredBB
  %392 = sub i32 0, %mul20alteredBB
  %393 = add i32 %379, %392
  %_167 = sub i32 %379, %mul20alteredBB
  %gen168 = mul i32 %393, %mul20alteredBB
  %394 = add i32 0, -2063338939
  %395 = sub i32 %394, %379
  %396 = sub i32 %395, -2063338939
  %_169 = sub i32 0, %379
  %397 = sub i32 %396, 1815965640
  %398 = add i32 %397, %mul20alteredBB
  %399 = add i32 %398, 1815965640
  %gen170 = add i32 %396, %mul20alteredBB
  %400 = sub i32 0, %mul20alteredBB
  %401 = add i32 %379, %400
  %sub21alteredBB = sub nsw i32 %379, %mul20alteredBB
  store i32 %401, i32* %n5alteredBB, align 4
  %402 = load i32, i32* %n5alteredBB, align 4
  store i32 %402, i32* %falteredBB, align 4
  %403 = load i32, i32* %aalteredBB, align 4
  %404 = load i32, i32* %balteredBB, align 4
  %405 = load i32, i32* %calteredBB, align 4
  %406 = load i32, i32* %dalteredBB, align 4
  %407 = load i32, i32* %ealteredBB, align 4
  %408 = load i32, i32* %falteredBB, align 4
  %call22alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i32 %403, i32 %404, i32 %405, i32 %406, i32 %407, i32 %408)
  store i32 1032787355, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBBalteredBB, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
