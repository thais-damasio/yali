; ModuleID = 'source-C-CXX/96/1204.c'
source_filename = "source-C-CXX/96/1204.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %.reg2mem189 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = sub i32 %0, -2129672830
  %3 = sub i32 %2, 1
  %4 = add i32 %3, -2129672830
  %5 = sub i32 %0, 1
  %6 = mul i32 %0, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %.reg2mem
  %9 = icmp slt i32 %1, 10
  store i1 %9, i1* %.reg2mem189
  %switchVar = alloca i32
  store i32 -978152345, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar188 = load i32, i32* %switchVar
  switch i32 %switchVar188, label %switchDefault [
    i32 -978152345, label %first
    i32 -529322241, label %originalBB
    i32 190887111, label %originalBBpart2
    i32 -797499211, label %originalBBalteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload190 = load volatile i1, i1* %.reg2mem189
  %10 = xor i1 %.reload, true
  %11 = xor i1 %.reload190, true
  %12 = xor i1 false, true
  %13 = and i1 %10, false
  %14 = and i1 %.reload, %12
  %15 = and i1 %11, false
  %16 = and i1 %.reload190, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 false, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %.reload, %.reload190
  %26 = select i1 %24, i32 -529322241, i32 -797499211
  store i32 %26, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %27 = load i32, i32* %n, align 4
  %div = sdiv i32 %27, 100
  store i32 %div, i32* %a, align 4
  %28 = load i32, i32* %n, align 4
  %rem = srem i32 %28, 100
  %div1 = sdiv i32 %rem, 50
  store i32 %div1, i32* %b, align 4
  %29 = load i32, i32* %n, align 4
  %rem2 = srem i32 %29, 100
  %rem3 = srem i32 %rem2, 50
  %div4 = sdiv i32 %rem3, 20
  store i32 %div4, i32* %c, align 4
  %30 = load i32, i32* %n, align 4
  %rem5 = srem i32 %30, 100
  %rem6 = srem i32 %rem5, 50
  %rem7 = srem i32 %rem6, 20
  %div8 = sdiv i32 %rem7, 10
  store i32 %div8, i32* %d, align 4
  %31 = load i32, i32* %n, align 4
  %rem9 = srem i32 %31, 100
  %rem10 = srem i32 %rem9, 50
  %rem11 = srem i32 %rem10, 20
  %rem12 = srem i32 %rem11, 10
  %div13 = sdiv i32 %rem12, 5
  store i32 %div13, i32* %e, align 4
  %32 = load i32, i32* %n, align 4
  %33 = load i32, i32* %a, align 4
  %mul = mul nsw i32 %33, 100
  %34 = sub i32 0, %mul
  %35 = add i32 %32, %34
  %sub = sub nsw i32 %32, %mul
  %36 = load i32, i32* %b, align 4
  %mul14 = mul nsw i32 %36, 50
  %37 = sub i32 0, %mul14
  %38 = add i32 %35, %37
  %sub15 = sub nsw i32 %35, %mul14
  %39 = load i32, i32* %c, align 4
  %mul16 = mul nsw i32 %39, 20
  %40 = add i32 %38, 185561949
  %41 = sub i32 %40, %mul16
  %42 = sub i32 %41, 185561949
  %sub17 = sub nsw i32 %38, %mul16
  %43 = load i32, i32* %d, align 4
  %mul18 = mul nsw i32 %43, 10
  %44 = add i32 %42, -1460705337
  %45 = sub i32 %44, %mul18
  %46 = sub i32 %45, -1460705337
  %sub19 = sub nsw i32 %42, %mul18
  %47 = load i32, i32* %e, align 4
  %mul20 = mul nsw i32 %47, 5
  %48 = add i32 %46, -789109682
  %49 = sub i32 %48, %mul20
  %50 = sub i32 %49, -789109682
  %sub21 = sub nsw i32 %46, %mul20
  store i32 %50, i32* %f, align 4
  %51 = load i32, i32* %a, align 4
  %call22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %51)
  %52 = load i32, i32* %b, align 4
  %call23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %52)
  %53 = load i32, i32* %c, align 4
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %53)
  %54 = load i32, i32* %d, align 4
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %54)
  %55 = load i32, i32* %e, align 4
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %55)
  %56 = load i32, i32* %f, align 4
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %56)
  %57 = load i32, i32* @x
  %58 = load i32, i32* @y
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 190887111, i32 -797499211
  store i32 %70, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %nalteredBB = alloca i32, align 4
  %aalteredBB = alloca i32, align 4
  %balteredBB = alloca i32, align 4
  %calteredBB = alloca i32, align 4
  %dalteredBB = alloca i32, align 4
  %ealteredBB = alloca i32, align 4
  %falteredBB = alloca i32, align 4
  store i32 0, i32* %retvalalteredBB, align 4
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %nalteredBB)
  %71 = load i32, i32* %nalteredBB, align 4
  %divalteredBB = sdiv i32 %71, 100
  store i32 %divalteredBB, i32* %aalteredBB, align 4
  %72 = load i32, i32* %nalteredBB, align 4
  %73 = add i32 %72, -11003982
  %74 = sub i32 %73, 100
  %75 = sub i32 %74, -11003982
  %_ = sub i32 %72, 100
  %gen = mul i32 %75, 100
  %_28 = shl i32 %72, 100
  %76 = sub i32 0, %72
  %77 = add i32 0, %76
  %_29 = sub i32 0, %72
  %78 = sub i32 0, %77
  %79 = sub i32 0, 100
  %80 = add i32 %78, %79
  %81 = sub i32 0, %80
  %gen30 = add i32 %77, 100
  %82 = add i32 %72, -1393746040
  %83 = sub i32 %82, 100
  %84 = sub i32 %83, -1393746040
  %_31 = sub i32 %72, 100
  %gen32 = mul i32 %84, 100
  %85 = sub i32 0, -42305617
  %86 = sub i32 %85, %72
  %87 = add i32 %86, -42305617
  %_33 = sub i32 0, %72
  %88 = sub i32 0, %87
  %89 = sub i32 0, 100
  %90 = add i32 %88, %89
  %91 = sub i32 0, %90
  %gen34 = add i32 %87, 100
  %92 = sub i32 0, 1287442923
  %93 = sub i32 %92, %72
  %94 = add i32 %93, 1287442923
  %_35 = sub i32 0, %72
  %95 = sub i32 %94, -2028312246
  %96 = add i32 %95, 100
  %97 = add i32 %96, -2028312246
  %gen36 = add i32 %94, 100
  %98 = sub i32 0, 1047991510
  %99 = sub i32 %98, %72
  %100 = add i32 %99, 1047991510
  %_37 = sub i32 0, %72
  %101 = sub i32 %100, -758587977
  %102 = add i32 %101, 100
  %103 = add i32 %102, -758587977
  %gen38 = add i32 %100, 100
  %_39 = shl i32 %72, 100
  %104 = sub i32 %72, -199266095
  %105 = sub i32 %104, 100
  %106 = add i32 %105, -199266095
  %_40 = sub i32 %72, 100
  %gen41 = mul i32 %106, 100
  %remalteredBB = srem i32 %72, 100
  %107 = sub i32 0, %remalteredBB
  %108 = add i32 0, %107
  %_42 = sub i32 0, %remalteredBB
  %109 = sub i32 0, %108
  %110 = sub i32 0, 50
  %111 = add i32 %109, %110
  %112 = sub i32 0, %111
  %gen43 = add i32 %108, 50
  %_44 = shl i32 %remalteredBB, 50
  %113 = sub i32 0, 50
  %114 = add i32 %remalteredBB, %113
  %_45 = sub i32 %remalteredBB, 50
  %gen46 = mul i32 %114, 50
  %_47 = shl i32 %remalteredBB, 50
  %115 = add i32 %remalteredBB, -991983553
  %116 = sub i32 %115, 50
  %117 = sub i32 %116, -991983553
  %_48 = sub i32 %remalteredBB, 50
  %gen49 = mul i32 %117, 50
  %div1alteredBB = sdiv i32 %remalteredBB, 50
  store i32 %div1alteredBB, i32* %balteredBB, align 4
  %118 = load i32, i32* %nalteredBB, align 4
  %119 = sub i32 0, %118
  %120 = add i32 0, %119
  %_50 = sub i32 0, %118
  %121 = sub i32 0, 100
  %122 = sub i32 %120, %121
  %gen51 = add i32 %120, 100
  %rem2alteredBB = srem i32 %118, 100
  %123 = add i32 0, -786809724
  %124 = sub i32 %123, %rem2alteredBB
  %125 = sub i32 %124, -786809724
  %_52 = sub i32 0, %rem2alteredBB
  %126 = sub i32 0, %125
  %127 = sub i32 0, 50
  %128 = add i32 %126, %127
  %129 = sub i32 0, %128
  %gen53 = add i32 %125, 50
  %rem3alteredBB = srem i32 %rem2alteredBB, 50
  %_54 = shl i32 %rem3alteredBB, 20
  %130 = sub i32 0, -1744829070
  %131 = sub i32 %130, %rem3alteredBB
  %132 = add i32 %131, -1744829070
  %_55 = sub i32 0, %rem3alteredBB
  %133 = sub i32 0, 20
  %134 = sub i32 %132, %133
  %gen56 = add i32 %132, 20
  %135 = add i32 %rem3alteredBB, 1458038693
  %136 = sub i32 %135, 20
  %137 = sub i32 %136, 1458038693
  %_57 = sub i32 %rem3alteredBB, 20
  %gen58 = mul i32 %137, 20
  %138 = sub i32 0, 8128007
  %139 = sub i32 %138, %rem3alteredBB
  %140 = add i32 %139, 8128007
  %_59 = sub i32 0, %rem3alteredBB
  %141 = sub i32 0, 20
  %142 = sub i32 %140, %141
  %gen60 = add i32 %140, 20
  %div4alteredBB = sdiv i32 %rem3alteredBB, 20
  store i32 %div4alteredBB, i32* %calteredBB, align 4
  %143 = load i32, i32* %nalteredBB, align 4
  %_61 = shl i32 %143, 100
  %_62 = shl i32 %143, 100
  %144 = sub i32 0, 100
  %145 = add i32 %143, %144
  %_63 = sub i32 %143, 100
  %gen64 = mul i32 %145, 100
  %146 = sub i32 0, 1610916604
  %147 = sub i32 %146, %143
  %148 = add i32 %147, 1610916604
  %_65 = sub i32 0, %143
  %149 = sub i32 %148, 1570756634
  %150 = add i32 %149, 100
  %151 = add i32 %150, 1570756634
  %gen66 = add i32 %148, 100
  %152 = sub i32 %143, 120516441
  %153 = sub i32 %152, 100
  %154 = add i32 %153, 120516441
  %_67 = sub i32 %143, 100
  %gen68 = mul i32 %154, 100
  %155 = sub i32 %143, -862285138
  %156 = sub i32 %155, 100
  %157 = add i32 %156, -862285138
  %_69 = sub i32 %143, 100
  %gen70 = mul i32 %157, 100
  %rem5alteredBB = srem i32 %143, 100
  %158 = sub i32 0, 50
  %159 = add i32 %rem5alteredBB, %158
  %_71 = sub i32 %rem5alteredBB, 50
  %gen72 = mul i32 %159, 50
  %160 = sub i32 %rem5alteredBB, 263130012
  %161 = sub i32 %160, 50
  %162 = add i32 %161, 263130012
  %_73 = sub i32 %rem5alteredBB, 50
  %gen74 = mul i32 %162, 50
  %rem6alteredBB = srem i32 %rem5alteredBB, 50
  %_75 = shl i32 %rem6alteredBB, 20
  %163 = sub i32 0, 20
  %164 = add i32 %rem6alteredBB, %163
  %_76 = sub i32 %rem6alteredBB, 20
  %gen77 = mul i32 %164, 20
  %_78 = shl i32 %rem6alteredBB, 20
  %_79 = shl i32 %rem6alteredBB, 20
  %165 = add i32 0, 2026745645
  %166 = sub i32 %165, %rem6alteredBB
  %167 = sub i32 %166, 2026745645
  %_80 = sub i32 0, %rem6alteredBB
  %168 = sub i32 0, 20
  %169 = sub i32 %167, %168
  %gen81 = add i32 %167, 20
  %_82 = shl i32 %rem6alteredBB, 20
  %_83 = shl i32 %rem6alteredBB, 20
  %_84 = shl i32 %rem6alteredBB, 20
  %rem7alteredBB = srem i32 %rem6alteredBB, 20
  %170 = sub i32 0, 10
  %171 = add i32 %rem7alteredBB, %170
  %_85 = sub i32 %rem7alteredBB, 10
  %gen86 = mul i32 %171, 10
  %172 = add i32 %rem7alteredBB, 1598003046
  %173 = sub i32 %172, 10
  %174 = sub i32 %173, 1598003046
  %_87 = sub i32 %rem7alteredBB, 10
  %gen88 = mul i32 %174, 10
  %_89 = shl i32 %rem7alteredBB, 10
  %_90 = shl i32 %rem7alteredBB, 10
  %_91 = shl i32 %rem7alteredBB, 10
  %175 = sub i32 0, %rem7alteredBB
  %176 = add i32 0, %175
  %_92 = sub i32 0, %rem7alteredBB
  %177 = sub i32 0, %176
  %178 = sub i32 0, 10
  %179 = add i32 %177, %178
  %180 = sub i32 0, %179
  %gen93 = add i32 %176, 10
  %div8alteredBB = sdiv i32 %rem7alteredBB, 10
  store i32 %div8alteredBB, i32* %dalteredBB, align 4
  %181 = load i32, i32* %nalteredBB, align 4
  %_94 = shl i32 %181, 100
  %182 = sub i32 0, %181
  %183 = add i32 0, %182
  %_95 = sub i32 0, %181
  %184 = add i32 %183, -1897688926
  %185 = add i32 %184, 100
  %186 = sub i32 %185, -1897688926
  %gen96 = add i32 %183, 100
  %187 = add i32 %181, -544888983
  %188 = sub i32 %187, 100
  %189 = sub i32 %188, -544888983
  %_97 = sub i32 %181, 100
  %gen98 = mul i32 %189, 100
  %190 = add i32 %181, -716790383
  %191 = sub i32 %190, 100
  %192 = sub i32 %191, -716790383
  %_99 = sub i32 %181, 100
  %gen100 = mul i32 %192, 100
  %_101 = shl i32 %181, 100
  %_102 = shl i32 %181, 100
  %193 = sub i32 %181, -1535178627
  %194 = sub i32 %193, 100
  %195 = add i32 %194, -1535178627
  %_103 = sub i32 %181, 100
  %gen104 = mul i32 %195, 100
  %196 = sub i32 0, %181
  %197 = add i32 0, %196
  %_105 = sub i32 0, %181
  %198 = add i32 %197, 2104668923
  %199 = add i32 %198, 100
  %200 = sub i32 %199, 2104668923
  %gen106 = add i32 %197, 100
  %rem9alteredBB = srem i32 %181, 100
  %rem10alteredBB = srem i32 %rem9alteredBB, 50
  %201 = sub i32 0, 1737003346
  %202 = sub i32 %201, %rem10alteredBB
  %203 = add i32 %202, 1737003346
  %_107 = sub i32 0, %rem10alteredBB
  %204 = sub i32 0, 20
  %205 = sub i32 %203, %204
  %gen108 = add i32 %203, 20
  %206 = add i32 %rem10alteredBB, -1105224887
  %207 = sub i32 %206, 20
  %208 = sub i32 %207, -1105224887
  %_109 = sub i32 %rem10alteredBB, 20
  %gen110 = mul i32 %208, 20
  %209 = add i32 0, -1359880993
  %210 = sub i32 %209, %rem10alteredBB
  %211 = sub i32 %210, -1359880993
  %_111 = sub i32 0, %rem10alteredBB
  %212 = sub i32 0, %211
  %213 = sub i32 0, 20
  %214 = add i32 %212, %213
  %215 = sub i32 0, %214
  %gen112 = add i32 %211, 20
  %_113 = shl i32 %rem10alteredBB, 20
  %_114 = shl i32 %rem10alteredBB, 20
  %216 = add i32 0, -792411819
  %217 = sub i32 %216, %rem10alteredBB
  %218 = sub i32 %217, -792411819
  %_115 = sub i32 0, %rem10alteredBB
  %219 = sub i32 %218, 164511663
  %220 = add i32 %219, 20
  %221 = add i32 %220, 164511663
  %gen116 = add i32 %218, 20
  %rem11alteredBB = srem i32 %rem10alteredBB, 20
  %222 = add i32 0, -31880688
  %223 = sub i32 %222, %rem11alteredBB
  %224 = sub i32 %223, -31880688
  %_117 = sub i32 0, %rem11alteredBB
  %225 = sub i32 %224, -739688905
  %226 = add i32 %225, 10
  %227 = add i32 %226, -739688905
  %gen118 = add i32 %224, 10
  %228 = add i32 0, 1784888916
  %229 = sub i32 %228, %rem11alteredBB
  %230 = sub i32 %229, 1784888916
  %_119 = sub i32 0, %rem11alteredBB
  %231 = sub i32 0, %230
  %232 = sub i32 0, 10
  %233 = add i32 %231, %232
  %234 = sub i32 0, %233
  %gen120 = add i32 %230, 10
  %235 = add i32 %rem11alteredBB, 2042740165
  %236 = sub i32 %235, 10
  %237 = sub i32 %236, 2042740165
  %_121 = sub i32 %rem11alteredBB, 10
  %gen122 = mul i32 %237, 10
  %238 = sub i32 %rem11alteredBB, 2139173903
  %239 = sub i32 %238, 10
  %240 = add i32 %239, 2139173903
  %_123 = sub i32 %rem11alteredBB, 10
  %gen124 = mul i32 %240, 10
  %rem12alteredBB = srem i32 %rem11alteredBB, 10
  %241 = sub i32 0, 1831312052
  %242 = sub i32 %241, %rem12alteredBB
  %243 = add i32 %242, 1831312052
  %_125 = sub i32 0, %rem12alteredBB
  %244 = add i32 %243, 1645108479
  %245 = add i32 %244, 5
  %246 = sub i32 %245, 1645108479
  %gen126 = add i32 %243, 5
  %247 = add i32 0, -1821329282
  %248 = sub i32 %247, %rem12alteredBB
  %249 = sub i32 %248, -1821329282
  %_127 = sub i32 0, %rem12alteredBB
  %250 = add i32 %249, -2144621139
  %251 = add i32 %250, 5
  %252 = sub i32 %251, -2144621139
  %gen128 = add i32 %249, 5
  %253 = add i32 0, 26289109
  %254 = sub i32 %253, %rem12alteredBB
  %255 = sub i32 %254, 26289109
  %_129 = sub i32 0, %rem12alteredBB
  %256 = add i32 %255, 1829617850
  %257 = add i32 %256, 5
  %258 = sub i32 %257, 1829617850
  %gen130 = add i32 %255, 5
  %div13alteredBB = sdiv i32 %rem12alteredBB, 5
  store i32 %div13alteredBB, i32* %ealteredBB, align 4
  %259 = load i32, i32* %nalteredBB, align 4
  %260 = load i32, i32* %aalteredBB, align 4
  %261 = sub i32 0, 1230945983
  %262 = sub i32 %261, %260
  %263 = add i32 %262, 1230945983
  %_131 = sub i32 0, %260
  %264 = sub i32 0, %263
  %265 = sub i32 0, 100
  %266 = add i32 %264, %265
  %267 = sub i32 0, %266
  %gen132 = add i32 %263, 100
  %268 = add i32 0, 341715851
  %269 = sub i32 %268, %260
  %270 = sub i32 %269, 341715851
  %_133 = sub i32 0, %260
  %271 = sub i32 0, 100
  %272 = sub i32 %270, %271
  %gen134 = add i32 %270, 100
  %mulalteredBB = mul nsw i32 %260, 100
  %273 = sub i32 0, -875654585
  %274 = sub i32 %273, %259
  %275 = add i32 %274, -875654585
  %_135 = sub i32 0, %259
  %276 = add i32 %275, -1409884774
  %277 = add i32 %276, %mulalteredBB
  %278 = sub i32 %277, -1409884774
  %gen136 = add i32 %275, %mulalteredBB
  %279 = add i32 %259, -2096435605
  %280 = sub i32 %279, %mulalteredBB
  %281 = sub i32 %280, -2096435605
  %subalteredBB = sub nsw i32 %259, %mulalteredBB
  %282 = load i32, i32* %balteredBB, align 4
  %283 = sub i32 0, 2076044127
  %284 = sub i32 %283, %282
  %285 = add i32 %284, 2076044127
  %_137 = sub i32 0, %282
  %286 = sub i32 %285, -1567920631
  %287 = add i32 %286, 50
  %288 = add i32 %287, -1567920631
  %gen138 = add i32 %285, 50
  %_139 = shl i32 %282, 50
  %289 = sub i32 %282, 1364075833
  %290 = sub i32 %289, 50
  %291 = add i32 %290, 1364075833
  %_140 = sub i32 %282, 50
  %gen141 = mul i32 %291, 50
  %_142 = shl i32 %282, 50
  %292 = add i32 0, 1570738744
  %293 = sub i32 %292, %282
  %294 = sub i32 %293, 1570738744
  %_143 = sub i32 0, %282
  %295 = sub i32 0, 50
  %296 = sub i32 %294, %295
  %gen144 = add i32 %294, 50
  %mul14alteredBB = mul nsw i32 %282, 50
  %_145 = shl i32 %281, %mul14alteredBB
  %297 = add i32 0, 207777935
  %298 = sub i32 %297, %281
  %299 = sub i32 %298, 207777935
  %_146 = sub i32 0, %281
  %300 = add i32 %299, 1084095259
  %301 = add i32 %300, %mul14alteredBB
  %302 = sub i32 %301, 1084095259
  %gen147 = add i32 %299, %mul14alteredBB
  %303 = add i32 %281, -1253628988
  %304 = sub i32 %303, %mul14alteredBB
  %305 = sub i32 %304, -1253628988
  %_148 = sub i32 %281, %mul14alteredBB
  %gen149 = mul i32 %305, %mul14alteredBB
  %306 = sub i32 0, %mul14alteredBB
  %307 = add i32 %281, %306
  %sub15alteredBB = sub nsw i32 %281, %mul14alteredBB
  %308 = load i32, i32* %calteredBB, align 4
  %_150 = shl i32 %308, 20
  %_151 = shl i32 %308, 20
  %_152 = shl i32 %308, 20
  %mul16alteredBB = mul nsw i32 %308, 20
  %309 = sub i32 0, %mul16alteredBB
  %310 = add i32 %307, %309
  %_153 = sub i32 %307, %mul16alteredBB
  %gen154 = mul i32 %310, %mul16alteredBB
  %311 = sub i32 0, %mul16alteredBB
  %312 = add i32 %307, %311
  %_155 = sub i32 %307, %mul16alteredBB
  %gen156 = mul i32 %312, %mul16alteredBB
  %313 = sub i32 0, 2102259243
  %314 = sub i32 %313, %307
  %315 = add i32 %314, 2102259243
  %_157 = sub i32 0, %307
  %316 = sub i32 0, %mul16alteredBB
  %317 = sub i32 %315, %316
  %gen158 = add i32 %315, %mul16alteredBB
  %318 = sub i32 0, %mul16alteredBB
  %319 = add i32 %307, %318
  %_159 = sub i32 %307, %mul16alteredBB
  %gen160 = mul i32 %319, %mul16alteredBB
  %320 = add i32 %307, 1414755085
  %321 = sub i32 %320, %mul16alteredBB
  %322 = sub i32 %321, 1414755085
  %_161 = sub i32 %307, %mul16alteredBB
  %gen162 = mul i32 %322, %mul16alteredBB
  %_163 = shl i32 %307, %mul16alteredBB
  %323 = sub i32 0, %mul16alteredBB
  %324 = add i32 %307, %323
  %_164 = sub i32 %307, %mul16alteredBB
  %gen165 = mul i32 %324, %mul16alteredBB
  %325 = sub i32 0, %mul16alteredBB
  %326 = add i32 %307, %325
  %_166 = sub i32 %307, %mul16alteredBB
  %gen167 = mul i32 %326, %mul16alteredBB
  %327 = sub i32 %307, -204911881
  %328 = sub i32 %327, %mul16alteredBB
  %329 = add i32 %328, -204911881
  %sub17alteredBB = sub nsw i32 %307, %mul16alteredBB
  %330 = load i32, i32* %dalteredBB, align 4
  %331 = sub i32 0, 10
  %332 = add i32 %330, %331
  %_168 = sub i32 %330, 10
  %gen169 = mul i32 %332, 10
  %mul18alteredBB = mul nsw i32 %330, 10
  %_170 = shl i32 %329, %mul18alteredBB
  %333 = add i32 0, -656497367
  %334 = sub i32 %333, %329
  %335 = sub i32 %334, -656497367
  %_171 = sub i32 0, %329
  %336 = add i32 %335, 2095775928
  %337 = add i32 %336, %mul18alteredBB
  %338 = sub i32 %337, 2095775928
  %gen172 = add i32 %335, %mul18alteredBB
  %_173 = shl i32 %329, %mul18alteredBB
  %339 = sub i32 %329, -2040908995
  %340 = sub i32 %339, %mul18alteredBB
  %341 = add i32 %340, -2040908995
  %_174 = sub i32 %329, %mul18alteredBB
  %gen175 = mul i32 %341, %mul18alteredBB
  %342 = sub i32 %329, -916956010
  %343 = sub i32 %342, %mul18alteredBB
  %344 = add i32 %343, -916956010
  %sub19alteredBB = sub nsw i32 %329, %mul18alteredBB
  %345 = load i32, i32* %ealteredBB, align 4
  %346 = add i32 0, 1580823550
  %347 = sub i32 %346, %345
  %348 = sub i32 %347, 1580823550
  %_176 = sub i32 0, %345
  %349 = sub i32 %348, 1612324057
  %350 = add i32 %349, 5
  %351 = add i32 %350, 1612324057
  %gen177 = add i32 %348, 5
  %mul20alteredBB = mul nsw i32 %345, 5
  %352 = sub i32 0, 1644073228
  %353 = sub i32 %352, %344
  %354 = add i32 %353, 1644073228
  %_178 = sub i32 0, %344
  %355 = sub i32 0, %mul20alteredBB
  %356 = sub i32 %354, %355
  %gen179 = add i32 %354, %mul20alteredBB
  %357 = sub i32 0, -1522439280
  %358 = sub i32 %357, %344
  %359 = add i32 %358, -1522439280
  %_180 = sub i32 0, %344
  %360 = sub i32 %359, 1488812404
  %361 = add i32 %360, %mul20alteredBB
  %362 = add i32 %361, 1488812404
  %gen181 = add i32 %359, %mul20alteredBB
  %363 = sub i32 0, %344
  %364 = add i32 0, %363
  %_182 = sub i32 0, %344
  %365 = add i32 %364, 1581845540
  %366 = add i32 %365, %mul20alteredBB
  %367 = sub i32 %366, 1581845540
  %gen183 = add i32 %364, %mul20alteredBB
  %368 = sub i32 0, %344
  %369 = add i32 0, %368
  %_184 = sub i32 0, %344
  %370 = sub i32 0, %mul20alteredBB
  %371 = sub i32 %369, %370
  %gen185 = add i32 %369, %mul20alteredBB
  %372 = add i32 %344, -821565135
  %373 = sub i32 %372, %mul20alteredBB
  %374 = sub i32 %373, -821565135
  %_186 = sub i32 %344, %mul20alteredBB
  %gen187 = mul i32 %374, %mul20alteredBB
  %375 = sub i32 0, %mul20alteredBB
  %376 = add i32 %344, %375
  %sub21alteredBB = sub nsw i32 %344, %mul20alteredBB
  store i32 %376, i32* %falteredBB, align 4
  %377 = load i32, i32* %aalteredBB, align 4
  %call22alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %377)
  %378 = load i32, i32* %balteredBB, align 4
  %call23alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %378)
  %379 = load i32, i32* %calteredBB, align 4
  %call24alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %379)
  %380 = load i32, i32* %dalteredBB, align 4
  %call25alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %380)
  %381 = load i32, i32* %ealteredBB, align 4
  %call26alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %381)
  %382 = load i32, i32* %falteredBB, align 4
  %call27alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %382)
  store i32 -529322241, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBBalteredBB, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
