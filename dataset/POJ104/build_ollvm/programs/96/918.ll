; ModuleID = 'source-C-CXX/96/918.c'
source_filename = "source-C-CXX/96/918.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"%d\0A%d\0A%d\0A%d\0A%d\0A%d\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  %g = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %a)
  %0 = load i32, i32* %a, align 4
  %1 = load i32, i32* %a, align 4
  %rem = srem i32 %1, 100
  %2 = sub i32 0, %rem
  %3 = add i32 %0, %2
  %sub = sub nsw i32 %0, %rem
  %div = sdiv i32 %3, 100
  store i32 %div, i32* %b, align 4
  %4 = load i32, i32* %a, align 4
  %5 = load i32, i32* %b, align 4
  %mul = mul nsw i32 %5, 100
  %6 = add i32 %4, 1307139921
  %7 = sub i32 %6, %mul
  %8 = sub i32 %7, 1307139921
  %sub1 = sub nsw i32 %4, %mul
  %9 = load i32, i32* %a, align 4
  %10 = load i32, i32* %b, align 4
  %mul2 = mul nsw i32 %10, 100
  %11 = sub i32 %9, 696146533
  %12 = sub i32 %11, %mul2
  %13 = add i32 %12, 696146533
  %sub3 = sub nsw i32 %9, %mul2
  %rem4 = srem i32 %13, 50
  %14 = add i32 %8, 789381257
  %15 = sub i32 %14, %rem4
  %16 = sub i32 %15, 789381257
  %sub5 = sub nsw i32 %8, %rem4
  %div6 = sdiv i32 %16, 50
  store i32 %div6, i32* %c, align 4
  %17 = load i32, i32* %a, align 4
  %18 = load i32, i32* %b, align 4
  %mul7 = mul nsw i32 %18, 100
  %19 = sub i32 0, %mul7
  %20 = add i32 %17, %19
  %sub8 = sub nsw i32 %17, %mul7
  %21 = load i32, i32* %c, align 4
  %mul9 = mul nsw i32 %21, 50
  %22 = sub i32 0, %mul9
  %23 = add i32 %20, %22
  %sub10 = sub nsw i32 %20, %mul9
  %24 = load i32, i32* %a, align 4
  %25 = load i32, i32* %b, align 4
  %mul11 = mul nsw i32 %25, 100
  %26 = sub i32 %24, 1239231192
  %27 = sub i32 %26, %mul11
  %28 = add i32 %27, 1239231192
  %sub12 = sub nsw i32 %24, %mul11
  %29 = load i32, i32* %c, align 4
  %mul13 = mul nsw i32 %29, 50
  %30 = add i32 %28, -1705649061
  %31 = sub i32 %30, %mul13
  %32 = sub i32 %31, -1705649061
  %sub14 = sub nsw i32 %28, %mul13
  %rem15 = srem i32 %32, 20
  %33 = sub i32 %23, -341886578
  %34 = sub i32 %33, %rem15
  %35 = add i32 %34, -341886578
  %sub16 = sub nsw i32 %23, %rem15
  %div17 = sdiv i32 %35, 20
  store i32 %div17, i32* %d, align 4
  %36 = load i32, i32* %a, align 4
  %37 = load i32, i32* %b, align 4
  %mul18 = mul nsw i32 %37, 100
  %38 = sub i32 %36, -1225527863
  %39 = sub i32 %38, %mul18
  %40 = add i32 %39, -1225527863
  %sub19 = sub nsw i32 %36, %mul18
  %41 = load i32, i32* %c, align 4
  %mul20 = mul nsw i32 %41, 50
  %42 = add i32 %40, -1470253425
  %43 = sub i32 %42, %mul20
  %44 = sub i32 %43, -1470253425
  %sub21 = sub nsw i32 %40, %mul20
  %45 = load i32, i32* %d, align 4
  %mul22 = mul nsw i32 %45, 20
  %46 = sub i32 0, %mul22
  %47 = add i32 %44, %46
  %sub23 = sub nsw i32 %44, %mul22
  %48 = load i32, i32* %a, align 4
  %49 = load i32, i32* %b, align 4
  %mul24 = mul nsw i32 %49, 100
  %50 = add i32 %48, -1118018834
  %51 = sub i32 %50, %mul24
  %52 = sub i32 %51, -1118018834
  %sub25 = sub nsw i32 %48, %mul24
  %53 = load i32, i32* %c, align 4
  %mul26 = mul nsw i32 %53, 50
  %54 = sub i32 %52, -1045101640
  %55 = sub i32 %54, %mul26
  %56 = add i32 %55, -1045101640
  %sub27 = sub nsw i32 %52, %mul26
  %57 = load i32, i32* %d, align 4
  %mul28 = mul nsw i32 %57, 20
  %58 = add i32 %56, 2031097574
  %59 = sub i32 %58, %mul28
  %60 = sub i32 %59, 2031097574
  %sub29 = sub nsw i32 %56, %mul28
  %rem30 = srem i32 %60, 10
  %61 = sub i32 %47, 1372212214
  %62 = sub i32 %61, %rem30
  %63 = add i32 %62, 1372212214
  %sub31 = sub nsw i32 %47, %rem30
  %div32 = sdiv i32 %63, 10
  store i32 %div32, i32* %e, align 4
  %64 = load i32, i32* %a, align 4
  %65 = load i32, i32* %b, align 4
  %mul33 = mul nsw i32 %65, 100
  %66 = sub i32 %64, -1491076940
  %67 = sub i32 %66, %mul33
  %68 = add i32 %67, -1491076940
  %sub34 = sub nsw i32 %64, %mul33
  %69 = load i32, i32* %c, align 4
  %mul35 = mul nsw i32 %69, 50
  %70 = add i32 %68, -2003601850
  %71 = sub i32 %70, %mul35
  %72 = sub i32 %71, -2003601850
  %sub36 = sub nsw i32 %68, %mul35
  %73 = load i32, i32* %d, align 4
  %mul37 = mul nsw i32 %73, 20
  %74 = sub i32 0, %mul37
  %75 = add i32 %72, %74
  %sub38 = sub nsw i32 %72, %mul37
  %76 = load i32, i32* %e, align 4
  %mul39 = mul nsw i32 %76, 10
  %77 = sub i32 0, %mul39
  %78 = add i32 %75, %77
  %sub40 = sub nsw i32 %75, %mul39
  %79 = load i32, i32* %a, align 4
  %80 = load i32, i32* %b, align 4
  %mul41 = mul nsw i32 %80, 100
  %81 = sub i32 %79, 1612601179
  %82 = sub i32 %81, %mul41
  %83 = add i32 %82, 1612601179
  %sub42 = sub nsw i32 %79, %mul41
  %84 = load i32, i32* %c, align 4
  %mul43 = mul nsw i32 %84, 50
  %85 = add i32 %83, -1591881519
  %86 = sub i32 %85, %mul43
  %87 = sub i32 %86, -1591881519
  %sub44 = sub nsw i32 %83, %mul43
  %88 = load i32, i32* %d, align 4
  %mul45 = mul nsw i32 %88, 20
  %89 = sub i32 %87, 921899001
  %90 = sub i32 %89, %mul45
  %91 = add i32 %90, 921899001
  %sub46 = sub nsw i32 %87, %mul45
  %92 = load i32, i32* %e, align 4
  %mul47 = mul nsw i32 %92, 10
  %93 = add i32 %91, -2026777205
  %94 = sub i32 %93, %mul47
  %95 = sub i32 %94, -2026777205
  %sub48 = sub nsw i32 %91, %mul47
  %rem49 = srem i32 %95, 5
  %96 = add i32 %78, 1644379688
  %97 = sub i32 %96, %rem49
  %98 = sub i32 %97, 1644379688
  %sub50 = sub nsw i32 %78, %rem49
  %div51 = sdiv i32 %98, 5
  store i32 %div51, i32* %f, align 4
  %99 = load i32, i32* %a, align 4
  %100 = load i32, i32* %b, align 4
  %mul52 = mul nsw i32 %100, 100
  %101 = sub i32 0, %mul52
  %102 = add i32 %99, %101
  %sub53 = sub nsw i32 %99, %mul52
  %103 = load i32, i32* %c, align 4
  %mul54 = mul nsw i32 %103, 50
  %104 = sub i32 %102, -857329634
  %105 = sub i32 %104, %mul54
  %106 = add i32 %105, -857329634
  %sub55 = sub nsw i32 %102, %mul54
  %107 = load i32, i32* %d, align 4
  %mul56 = mul nsw i32 %107, 20
  %108 = sub i32 %106, 304543263
  %109 = sub i32 %108, %mul56
  %110 = add i32 %109, 304543263
  %sub57 = sub nsw i32 %106, %mul56
  %111 = load i32, i32* %e, align 4
  %mul58 = mul nsw i32 %111, 10
  %112 = sub i32 0, %mul58
  %113 = add i32 %110, %112
  %sub59 = sub nsw i32 %110, %mul58
  %114 = load i32, i32* %f, align 4
  %mul60 = mul nsw i32 %114, 5
  %115 = sub i32 %113, 1296223920
  %116 = sub i32 %115, %mul60
  %117 = add i32 %116, 1296223920
  %sub61 = sub nsw i32 %113, %mul60
  %118 = load i32, i32* %a, align 4
  %119 = load i32, i32* %b, align 4
  %mul62 = mul nsw i32 %119, 100
  %120 = add i32 %118, 2121078879
  %121 = sub i32 %120, %mul62
  %122 = sub i32 %121, 2121078879
  %sub63 = sub nsw i32 %118, %mul62
  %123 = load i32, i32* %c, align 4
  %mul64 = mul nsw i32 %123, 50
  %124 = sub i32 %122, 99778693
  %125 = sub i32 %124, %mul64
  %126 = add i32 %125, 99778693
  %sub65 = sub nsw i32 %122, %mul64
  %127 = load i32, i32* %d, align 4
  %mul66 = mul nsw i32 %127, 20
  %128 = sub i32 0, %mul66
  %129 = add i32 %126, %128
  %sub67 = sub nsw i32 %126, %mul66
  %130 = load i32, i32* %e, align 4
  %mul68 = mul nsw i32 %130, 10
  %131 = sub i32 0, %mul68
  %132 = add i32 %129, %131
  %sub69 = sub nsw i32 %129, %mul68
  %133 = load i32, i32* %f, align 4
  %mul70 = mul nsw i32 %133, 5
  %134 = sub i32 0, %mul70
  %135 = add i32 %132, %134
  %sub71 = sub nsw i32 %132, %mul70
  %rem72 = srem i32 %135, 1
  %136 = add i32 %117, -27436297
  %137 = sub i32 %136, %rem72
  %138 = sub i32 %137, -27436297
  %sub73 = sub nsw i32 %117, %rem72
  %div74 = sdiv i32 %138, 1
  store i32 %div74, i32* %g, align 4
  %139 = load i32, i32* %b, align 4
  %140 = load i32, i32* %c, align 4
  %141 = load i32, i32* %d, align 4
  %142 = load i32, i32* %e, align 4
  %143 = load i32, i32* %f, align 4
  %144 = load i32, i32* %g, align 4
  %call75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i32 %139, i32 %140, i32 %141, i32 %142, i32 %143, i32 %144)
  ret i32 0
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
