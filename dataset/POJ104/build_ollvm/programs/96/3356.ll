; ModuleID = 'source-C-CXX/96/3356.c'
source_filename = "source-C-CXX/96/3356.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %.reg2mem140 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = add i32 %0, 1997540136
  %3 = sub i32 %2, 1
  %4 = sub i32 %3, 1997540136
  %5 = sub i32 %0, 1
  %6 = mul i32 %0, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %.reg2mem
  %9 = icmp slt i32 %1, 10
  store i1 %9, i1* %.reg2mem140
  %switchVar = alloca i32
  store i32 380293477, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar139 = load i32, i32* %switchVar
  switch i32 %switchVar139, label %switchDefault [
    i32 380293477, label %first
    i32 560856203, label %originalBB
    i32 1900033351, label %originalBBpart2
    i32 -1699049374, label %originalBBalteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload141 = load volatile i1, i1* %.reg2mem140
  %10 = xor i1 %.reload, true
  %11 = xor i1 %.reload141, true
  %12 = xor i1 false, true
  %13 = and i1 %10, false
  %14 = and i1 %.reload, %12
  %15 = and i1 %11, false
  %16 = and i1 %.reload141, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 false, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %.reload, %.reload141
  %26 = select i1 %24, i32 560856203, i32 -1699049374
  store i32 %26, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %27 = load i32, i32* %n, align 4
  %div = sdiv i32 %27, 100
  store i32 %div, i32* %a, align 4
  %28 = load i32, i32* %n, align 4
  %29 = load i32, i32* %a, align 4
  %mul = mul nsw i32 100, %29
  %30 = add i32 %28, 2050953757
  %31 = sub i32 %30, %mul
  %32 = sub i32 %31, 2050953757
  %sub = sub nsw i32 %28, %mul
  %div1 = sdiv i32 %32, 50
  store i32 %div1, i32* %b, align 4
  %33 = load i32, i32* %n, align 4
  %34 = load i32, i32* %a, align 4
  %mul2 = mul nsw i32 100, %34
  %35 = add i32 %33, -835680024
  %36 = sub i32 %35, %mul2
  %37 = sub i32 %36, -835680024
  %sub3 = sub nsw i32 %33, %mul2
  %38 = load i32, i32* %b, align 4
  %mul4 = mul nsw i32 50, %38
  %39 = sub i32 %37, -2120755539
  %40 = sub i32 %39, %mul4
  %41 = add i32 %40, -2120755539
  %sub5 = sub nsw i32 %37, %mul4
  %div6 = sdiv i32 %41, 20
  store i32 %div6, i32* %c, align 4
  %42 = load i32, i32* %n, align 4
  %43 = load i32, i32* %a, align 4
  %mul7 = mul nsw i32 100, %43
  %44 = sub i32 0, %mul7
  %45 = add i32 %42, %44
  %sub8 = sub nsw i32 %42, %mul7
  %46 = load i32, i32* %b, align 4
  %mul9 = mul nsw i32 50, %46
  %47 = add i32 %45, 328899286
  %48 = sub i32 %47, %mul9
  %49 = sub i32 %48, 328899286
  %sub10 = sub nsw i32 %45, %mul9
  %50 = load i32, i32* %c, align 4
  %mul11 = mul nsw i32 %50, 20
  %51 = sub i32 0, %mul11
  %52 = add i32 %49, %51
  %sub12 = sub nsw i32 %49, %mul11
  %div13 = sdiv i32 %52, 10
  store i32 %div13, i32* %d, align 4
  %53 = load i32, i32* %n, align 4
  %rem = srem i32 %53, 10
  %div14 = sdiv i32 %rem, 5
  store i32 %div14, i32* %e, align 4
  %54 = load i32, i32* %n, align 4
  %rem15 = srem i32 %54, 5
  store i32 %rem15, i32* %f, align 4
  %55 = load i32, i32* %a, align 4
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %55)
  %56 = load i32, i32* %b, align 4
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %56)
  %57 = load i32, i32* %c, align 4
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %57)
  %58 = load i32, i32* %d, align 4
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %58)
  %59 = load i32, i32* %e, align 4
  %call20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %59)
  %60 = load i32, i32* %f, align 4
  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %60)
  %61 = load i32, i32* @x
  %62 = load i32, i32* @y
  %63 = add i32 %61, 1074777282
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 1074777282
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 1900033351, i32 -1699049374
  store i32 %87, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %nalteredBB = alloca i32, align 4
  %aalteredBB = alloca i32, align 4
  %balteredBB = alloca i32, align 4
  %calteredBB = alloca i32, align 4
  %dalteredBB = alloca i32, align 4
  %ealteredBB = alloca i32, align 4
  %falteredBB = alloca i32, align 4
  store i32 0, i32* %retvalalteredBB, align 4
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %nalteredBB)
  %88 = load i32, i32* %nalteredBB, align 4
  %_ = shl i32 %88, 100
  %89 = sub i32 0, 100
  %90 = add i32 %88, %89
  %_22 = sub i32 %88, 100
  %gen = mul i32 %90, 100
  %91 = sub i32 %88, 1276558703
  %92 = sub i32 %91, 100
  %93 = add i32 %92, 1276558703
  %_23 = sub i32 %88, 100
  %gen24 = mul i32 %93, 100
  %94 = sub i32 0, 517912926
  %95 = sub i32 %94, %88
  %96 = add i32 %95, 517912926
  %_25 = sub i32 0, %88
  %97 = sub i32 0, %96
  %98 = sub i32 0, 100
  %99 = add i32 %97, %98
  %100 = sub i32 0, %99
  %gen26 = add i32 %96, 100
  %101 = sub i32 0, 950212178
  %102 = sub i32 %101, %88
  %103 = add i32 %102, 950212178
  %_27 = sub i32 0, %88
  %104 = sub i32 %103, -58709391
  %105 = add i32 %104, 100
  %106 = add i32 %105, -58709391
  %gen28 = add i32 %103, 100
  %107 = add i32 0, -1400316354
  %108 = sub i32 %107, %88
  %109 = sub i32 %108, -1400316354
  %_29 = sub i32 0, %88
  %110 = add i32 %109, 1219099643
  %111 = add i32 %110, 100
  %112 = sub i32 %111, 1219099643
  %gen30 = add i32 %109, 100
  %113 = add i32 0, 187234993
  %114 = sub i32 %113, %88
  %115 = sub i32 %114, 187234993
  %_31 = sub i32 0, %88
  %116 = sub i32 %115, 46284139
  %117 = add i32 %116, 100
  %118 = add i32 %117, 46284139
  %gen32 = add i32 %115, 100
  %_33 = shl i32 %88, 100
  %divalteredBB = sdiv i32 %88, 100
  store i32 %divalteredBB, i32* %aalteredBB, align 4
  %119 = load i32, i32* %nalteredBB, align 4
  %120 = load i32, i32* %aalteredBB, align 4
  %_34 = shl i32 100, %120
  %_35 = shl i32 100, %120
  %_36 = shl i32 100, %120
  %mulalteredBB = mul nsw i32 100, %120
  %121 = add i32 0, 1688148114
  %122 = sub i32 %121, %119
  %123 = sub i32 %122, 1688148114
  %_37 = sub i32 0, %119
  %124 = add i32 %123, -1225622683
  %125 = add i32 %124, %mulalteredBB
  %126 = sub i32 %125, -1225622683
  %gen38 = add i32 %123, %mulalteredBB
  %127 = sub i32 %119, 1832167111
  %128 = sub i32 %127, %mulalteredBB
  %129 = add i32 %128, 1832167111
  %_39 = sub i32 %119, %mulalteredBB
  %gen40 = mul i32 %129, %mulalteredBB
  %_41 = shl i32 %119, %mulalteredBB
  %130 = sub i32 0, -376545173
  %131 = sub i32 %130, %119
  %132 = add i32 %131, -376545173
  %_42 = sub i32 0, %119
  %133 = add i32 %132, -1317010825
  %134 = add i32 %133, %mulalteredBB
  %135 = sub i32 %134, -1317010825
  %gen43 = add i32 %132, %mulalteredBB
  %136 = sub i32 0, %119
  %137 = add i32 0, %136
  %_44 = sub i32 0, %119
  %138 = sub i32 0, %mulalteredBB
  %139 = sub i32 %137, %138
  %gen45 = add i32 %137, %mulalteredBB
  %140 = add i32 %119, -164745161
  %141 = sub i32 %140, %mulalteredBB
  %142 = sub i32 %141, -164745161
  %subalteredBB = sub nsw i32 %119, %mulalteredBB
  %143 = add i32 %142, 1809460191
  %144 = sub i32 %143, 50
  %145 = sub i32 %144, 1809460191
  %_46 = sub i32 %142, 50
  %gen47 = mul i32 %145, 50
  %146 = add i32 %142, -1403260186
  %147 = sub i32 %146, 50
  %148 = sub i32 %147, -1403260186
  %_48 = sub i32 %142, 50
  %gen49 = mul i32 %148, 50
  %149 = sub i32 0, 1029742569
  %150 = sub i32 %149, %142
  %151 = add i32 %150, 1029742569
  %_50 = sub i32 0, %142
  %152 = sub i32 0, 50
  %153 = sub i32 %151, %152
  %gen51 = add i32 %151, 50
  %154 = sub i32 0, %142
  %155 = add i32 0, %154
  %_52 = sub i32 0, %142
  %156 = sub i32 0, %155
  %157 = sub i32 0, 50
  %158 = add i32 %156, %157
  %159 = sub i32 0, %158
  %gen53 = add i32 %155, 50
  %_54 = shl i32 %142, 50
  %_55 = shl i32 %142, 50
  %div1alteredBB = sdiv i32 %142, 50
  store i32 %div1alteredBB, i32* %balteredBB, align 4
  %160 = load i32, i32* %nalteredBB, align 4
  %161 = load i32, i32* %aalteredBB, align 4
  %162 = sub i32 0, 781068634
  %163 = sub i32 %162, 100
  %164 = add i32 %163, 781068634
  %_56 = sub i32 0, 100
  %165 = add i32 %164, -996005111
  %166 = add i32 %165, %161
  %167 = sub i32 %166, -996005111
  %gen57 = add i32 %164, %161
  %_58 = shl i32 100, %161
  %mul2alteredBB = mul nsw i32 100, %161
  %168 = sub i32 %160, 473874634
  %169 = sub i32 %168, %mul2alteredBB
  %170 = add i32 %169, 473874634
  %_59 = sub i32 %160, %mul2alteredBB
  %gen60 = mul i32 %170, %mul2alteredBB
  %171 = add i32 %160, -616255622
  %172 = sub i32 %171, %mul2alteredBB
  %173 = sub i32 %172, -616255622
  %sub3alteredBB = sub nsw i32 %160, %mul2alteredBB
  %174 = load i32, i32* %balteredBB, align 4
  %175 = sub i32 0, 50
  %176 = add i32 0, %175
  %_61 = sub i32 0, 50
  %177 = add i32 %176, 1717375369
  %178 = add i32 %177, %174
  %179 = sub i32 %178, 1717375369
  %gen62 = add i32 %176, %174
  %180 = sub i32 50, -1319675323
  %181 = sub i32 %180, %174
  %182 = add i32 %181, -1319675323
  %_63 = sub i32 50, %174
  %gen64 = mul i32 %182, %174
  %_65 = shl i32 50, %174
  %183 = sub i32 50, -846437720
  %184 = sub i32 %183, %174
  %185 = add i32 %184, -846437720
  %_66 = sub i32 50, %174
  %gen67 = mul i32 %185, %174
  %_68 = shl i32 50, %174
  %mul4alteredBB = mul nsw i32 50, %174
  %186 = sub i32 %173, -518455947
  %187 = sub i32 %186, %mul4alteredBB
  %188 = add i32 %187, -518455947
  %_69 = sub i32 %173, %mul4alteredBB
  %gen70 = mul i32 %188, %mul4alteredBB
  %_71 = shl i32 %173, %mul4alteredBB
  %189 = add i32 %173, 781784494
  %190 = sub i32 %189, %mul4alteredBB
  %191 = sub i32 %190, 781784494
  %sub5alteredBB = sub nsw i32 %173, %mul4alteredBB
  %_72 = shl i32 %191, 20
  %div6alteredBB = sdiv i32 %191, 20
  store i32 %div6alteredBB, i32* %calteredBB, align 4
  %192 = load i32, i32* %nalteredBB, align 4
  %193 = load i32, i32* %aalteredBB, align 4
  %194 = sub i32 0, 363410513
  %195 = sub i32 %194, 100
  %196 = add i32 %195, 363410513
  %_73 = sub i32 0, 100
  %197 = sub i32 0, %193
  %198 = sub i32 %196, %197
  %gen74 = add i32 %196, %193
  %199 = sub i32 0, 100
  %200 = add i32 0, %199
  %_75 = sub i32 0, 100
  %201 = add i32 %200, -272359700
  %202 = add i32 %201, %193
  %203 = sub i32 %202, -272359700
  %gen76 = add i32 %200, %193
  %_77 = shl i32 100, %193
  %204 = sub i32 0, 393339482
  %205 = sub i32 %204, 100
  %206 = add i32 %205, 393339482
  %_78 = sub i32 0, 100
  %207 = sub i32 %206, -1361058546
  %208 = add i32 %207, %193
  %209 = add i32 %208, -1361058546
  %gen79 = add i32 %206, %193
  %210 = sub i32 0, 2002052468
  %211 = sub i32 %210, 100
  %212 = add i32 %211, 2002052468
  %_80 = sub i32 0, 100
  %213 = add i32 %212, -2039843841
  %214 = add i32 %213, %193
  %215 = sub i32 %214, -2039843841
  %gen81 = add i32 %212, %193
  %216 = add i32 0, 584173733
  %217 = sub i32 %216, 100
  %218 = sub i32 %217, 584173733
  %_82 = sub i32 0, 100
  %219 = sub i32 0, %193
  %220 = sub i32 %218, %219
  %gen83 = add i32 %218, %193
  %_84 = shl i32 100, %193
  %_85 = shl i32 100, %193
  %_86 = shl i32 100, %193
  %mul7alteredBB = mul nsw i32 100, %193
  %_87 = shl i32 %192, %mul7alteredBB
  %221 = sub i32 0, %mul7alteredBB
  %222 = add i32 %192, %221
  %_88 = sub i32 %192, %mul7alteredBB
  %gen89 = mul i32 %222, %mul7alteredBB
  %_90 = shl i32 %192, %mul7alteredBB
  %223 = add i32 0, 218404656
  %224 = sub i32 %223, %192
  %225 = sub i32 %224, 218404656
  %_91 = sub i32 0, %192
  %226 = sub i32 0, %mul7alteredBB
  %227 = sub i32 %225, %226
  %gen92 = add i32 %225, %mul7alteredBB
  %228 = sub i32 0, %192
  %229 = add i32 0, %228
  %_93 = sub i32 0, %192
  %230 = add i32 %229, -1606318033
  %231 = add i32 %230, %mul7alteredBB
  %232 = sub i32 %231, -1606318033
  %gen94 = add i32 %229, %mul7alteredBB
  %233 = sub i32 %192, -72614845
  %234 = sub i32 %233, %mul7alteredBB
  %235 = add i32 %234, -72614845
  %_95 = sub i32 %192, %mul7alteredBB
  %gen96 = mul i32 %235, %mul7alteredBB
  %236 = sub i32 0, %mul7alteredBB
  %237 = add i32 %192, %236
  %sub8alteredBB = sub nsw i32 %192, %mul7alteredBB
  %238 = load i32, i32* %balteredBB, align 4
  %239 = sub i32 0, 50
  %240 = add i32 0, %239
  %_97 = sub i32 0, 50
  %241 = sub i32 0, %240
  %242 = sub i32 0, %238
  %243 = add i32 %241, %242
  %244 = sub i32 0, %243
  %gen98 = add i32 %240, %238
  %245 = sub i32 0, 530629457
  %246 = sub i32 %245, 50
  %247 = add i32 %246, 530629457
  %_99 = sub i32 0, 50
  %248 = sub i32 0, %247
  %249 = sub i32 0, %238
  %250 = add i32 %248, %249
  %251 = sub i32 0, %250
  %gen100 = add i32 %247, %238
  %_101 = shl i32 50, %238
  %252 = sub i32 0, 50
  %253 = add i32 0, %252
  %_102 = sub i32 0, 50
  %254 = sub i32 0, %238
  %255 = sub i32 %253, %254
  %gen103 = add i32 %253, %238
  %_104 = shl i32 50, %238
  %mul9alteredBB = mul nsw i32 50, %238
  %256 = sub i32 %237, -180906180
  %257 = sub i32 %256, %mul9alteredBB
  %258 = add i32 %257, -180906180
  %_105 = sub i32 %237, %mul9alteredBB
  %gen106 = mul i32 %258, %mul9alteredBB
  %_107 = shl i32 %237, %mul9alteredBB
  %_108 = shl i32 %237, %mul9alteredBB
  %259 = add i32 %237, -764120058
  %260 = sub i32 %259, %mul9alteredBB
  %261 = sub i32 %260, -764120058
  %sub10alteredBB = sub nsw i32 %237, %mul9alteredBB
  %262 = load i32, i32* %calteredBB, align 4
  %mul11alteredBB = mul nsw i32 %262, 20
  %263 = sub i32 0, %mul11alteredBB
  %264 = add i32 %261, %263
  %sub12alteredBB = sub nsw i32 %261, %mul11alteredBB
  %_109 = shl i32 %264, 10
  %265 = sub i32 %264, 1170913835
  %266 = sub i32 %265, 10
  %267 = add i32 %266, 1170913835
  %_110 = sub i32 %264, 10
  %gen111 = mul i32 %267, 10
  %268 = sub i32 0, 1073420888
  %269 = sub i32 %268, %264
  %270 = add i32 %269, 1073420888
  %_112 = sub i32 0, %264
  %271 = sub i32 0, %270
  %272 = sub i32 0, 10
  %273 = add i32 %271, %272
  %274 = sub i32 0, %273
  %gen113 = add i32 %270, 10
  %275 = sub i32 %264, 1130350510
  %276 = sub i32 %275, 10
  %277 = add i32 %276, 1130350510
  %_114 = sub i32 %264, 10
  %gen115 = mul i32 %277, 10
  %278 = sub i32 0, %264
  %279 = add i32 0, %278
  %_116 = sub i32 0, %264
  %280 = sub i32 0, 10
  %281 = sub i32 %279, %280
  %gen117 = add i32 %279, 10
  %div13alteredBB = sdiv i32 %264, 10
  store i32 %div13alteredBB, i32* %dalteredBB, align 4
  %282 = load i32, i32* %nalteredBB, align 4
  %283 = add i32 %282, -668423114
  %284 = sub i32 %283, 10
  %285 = sub i32 %284, -668423114
  %_118 = sub i32 %282, 10
  %gen119 = mul i32 %285, 10
  %286 = sub i32 0, 10
  %287 = add i32 %282, %286
  %_120 = sub i32 %282, 10
  %gen121 = mul i32 %287, 10
  %288 = add i32 %282, 890468029
  %289 = sub i32 %288, 10
  %290 = sub i32 %289, 890468029
  %_122 = sub i32 %282, 10
  %gen123 = mul i32 %290, 10
  %_124 = shl i32 %282, 10
  %291 = sub i32 0, 10
  %292 = add i32 %282, %291
  %_125 = sub i32 %282, 10
  %gen126 = mul i32 %292, 10
  %remalteredBB = srem i32 %282, 10
  %_127 = shl i32 %remalteredBB, 5
  %293 = sub i32 %remalteredBB, -170357457
  %294 = sub i32 %293, 5
  %295 = add i32 %294, -170357457
  %_128 = sub i32 %remalteredBB, 5
  %gen129 = mul i32 %295, 5
  %296 = add i32 %remalteredBB, -544232546
  %297 = sub i32 %296, 5
  %298 = sub i32 %297, -544232546
  %_130 = sub i32 %remalteredBB, 5
  %gen131 = mul i32 %298, 5
  %_132 = shl i32 %remalteredBB, 5
  %299 = add i32 0, -90232106
  %300 = sub i32 %299, %remalteredBB
  %301 = sub i32 %300, -90232106
  %_133 = sub i32 0, %remalteredBB
  %302 = sub i32 0, %301
  %303 = sub i32 0, 5
  %304 = add i32 %302, %303
  %305 = sub i32 0, %304
  %gen134 = add i32 %301, 5
  %_135 = shl i32 %remalteredBB, 5
  %div14alteredBB = sdiv i32 %remalteredBB, 5
  store i32 %div14alteredBB, i32* %ealteredBB, align 4
  %306 = load i32, i32* %nalteredBB, align 4
  %307 = add i32 %306, -256649256
  %308 = sub i32 %307, 5
  %309 = sub i32 %308, -256649256
  %_136 = sub i32 %306, 5
  %gen137 = mul i32 %309, 5
  %_138 = shl i32 %306, 5
  %rem15alteredBB = srem i32 %306, 5
  store i32 %rem15alteredBB, i32* %falteredBB, align 4
  %310 = load i32, i32* %aalteredBB, align 4
  %call16alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %310)
  %311 = load i32, i32* %balteredBB, align 4
  %call17alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %311)
  %312 = load i32, i32* %calteredBB, align 4
  %call18alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %312)
  %313 = load i32, i32* %dalteredBB, align 4
  %call19alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %313)
  %314 = load i32, i32* %ealteredBB, align 4
  %call20alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %314)
  %315 = load i32, i32* %falteredBB, align 4
  %call21alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %315)
  store i32 560856203, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBBalteredBB, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
