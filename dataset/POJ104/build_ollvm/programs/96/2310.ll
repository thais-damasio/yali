; ModuleID = 'source-C-CXX/96/2310.c'
source_filename = "source-C-CXX/96/2310.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"%d\0A%d\0A%d\0A%d\0A%d\0A%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"please input a number less than 1000\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %.reg2mem = alloca i32
  %retval = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  %g = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %a)
  %0 = load i32, i32* %a, align 4
  store i32 %0, i32* %.reg2mem
  %switchVar = alloca i32
  store i32 -1118241779, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar201 = load i32, i32* %switchVar
  switch i32 %switchVar201, label %switchDefault [
    i32 -1118241779, label %first
    i32 1836810265, label %if.then
    i32 719011522, label %originalBB
    i32 2041166713, label %originalBBpart2
    i32 -2032450844, label %if.else
    i32 -268399660, label %originalBB197
    i32 -1623662502, label %originalBBpart2199
    i32 -1050393018, label %if.end
    i32 1969296627, label %originalBBalteredBB
    i32 702270733, label %originalBB197alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i32, i32* %.reg2mem
  %cmp = icmp slt i32 %.reload, 1000
  %1 = select i1 %cmp, i32 1836810265, i32 -2032450844
  store i32 %1, i32* %switchVar
  br label %loopEnd

if.then:                                          ; preds = %loopEntry
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 %2, 1307874920
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1307874920
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  %16 = select i1 %14, i32 719011522, i32 1969296627
  store i32 %16, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %17 = load i32, i32* %a, align 4
  %div = sdiv i32 %17, 100
  store i32 %div, i32* %b, align 4
  %18 = load i32, i32* %a, align 4
  %19 = load i32, i32* %b, align 4
  %mul = mul nsw i32 100, %19
  %20 = sub i32 %18, -1872045545
  %21 = sub i32 %20, %mul
  %22 = add i32 %21, -1872045545
  %sub = sub nsw i32 %18, %mul
  %div1 = sdiv i32 %22, 50
  store i32 %div1, i32* %c, align 4
  %23 = load i32, i32* %a, align 4
  %24 = load i32, i32* %b, align 4
  %mul2 = mul nsw i32 100, %24
  %25 = sub i32 0, %mul2
  %26 = add i32 %23, %25
  %sub3 = sub nsw i32 %23, %mul2
  %27 = load i32, i32* %c, align 4
  %mul4 = mul nsw i32 50, %27
  %28 = add i32 %26, 50824781
  %29 = sub i32 %28, %mul4
  %30 = sub i32 %29, 50824781
  %sub5 = sub nsw i32 %26, %mul4
  %div6 = sdiv i32 %30, 20
  store i32 %div6, i32* %d, align 4
  %31 = load i32, i32* %a, align 4
  %32 = load i32, i32* %b, align 4
  %mul7 = mul nsw i32 100, %32
  %33 = add i32 %31, -1122776594
  %34 = sub i32 %33, %mul7
  %35 = sub i32 %34, -1122776594
  %sub8 = sub nsw i32 %31, %mul7
  %36 = load i32, i32* %c, align 4
  %mul9 = mul nsw i32 50, %36
  %37 = sub i32 0, %mul9
  %38 = add i32 %35, %37
  %sub10 = sub nsw i32 %35, %mul9
  %39 = load i32, i32* %d, align 4
  %mul11 = mul nsw i32 20, %39
  %40 = sub i32 %38, 2013369579
  %41 = sub i32 %40, %mul11
  %42 = add i32 %41, 2013369579
  %sub12 = sub nsw i32 %38, %mul11
  %div13 = sdiv i32 %42, 10
  store i32 %div13, i32* %e, align 4
  %43 = load i32, i32* %a, align 4
  %44 = load i32, i32* %b, align 4
  %mul14 = mul nsw i32 100, %44
  %45 = sub i32 0, %mul14
  %46 = add i32 %43, %45
  %sub15 = sub nsw i32 %43, %mul14
  %47 = load i32, i32* %c, align 4
  %mul16 = mul nsw i32 50, %47
  %48 = sub i32 %46, -1144986027
  %49 = sub i32 %48, %mul16
  %50 = add i32 %49, -1144986027
  %sub17 = sub nsw i32 %46, %mul16
  %51 = load i32, i32* %d, align 4
  %mul18 = mul nsw i32 20, %51
  %52 = sub i32 %50, -1318622682
  %53 = sub i32 %52, %mul18
  %54 = add i32 %53, -1318622682
  %sub19 = sub nsw i32 %50, %mul18
  %55 = load i32, i32* %e, align 4
  %mul20 = mul nsw i32 10, %55
  %56 = sub i32 0, %mul20
  %57 = add i32 %54, %56
  %sub21 = sub nsw i32 %54, %mul20
  %div22 = sdiv i32 %57, 5
  store i32 %div22, i32* %f, align 4
  %58 = load i32, i32* %a, align 4
  %rem = srem i32 %58, 5
  store i32 %rem, i32* %g, align 4
  %59 = load i32, i32* %b, align 4
  %60 = load i32, i32* %c, align 4
  %61 = load i32, i32* %d, align 4
  %62 = load i32, i32* %e, align 4
  %63 = load i32, i32* %f, align 4
  %64 = load i32, i32* %g, align 4
  %call23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i32 %59, i32 %60, i32 %61, i32 %62, i32 %63, i32 %64)
  %65 = load i32, i32* @x
  %66 = load i32, i32* @y
  %67 = sub i32 %65, 739811172
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 739811172
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 2041166713, i32 1969296627
  store i32 %79, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  store i32 -1050393018, i32* %switchVar
  br label %loopEnd

if.else:                                          ; preds = %loopEntry
  %80 = load i32, i32* @x
  %81 = load i32, i32* @y
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 -268399660, i32 702270733
  store i32 %105, i32* %switchVar
  br label %loopEnd

originalBB197:                                    ; preds = %loopEntry
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i32 0, i32 0))
  %106 = load i32, i32* @x
  %107 = load i32, i32* @y
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 -1623662502, i32 702270733
  store i32 %119, i32* %switchVar
  br label %loopEnd

originalBBpart2199:                               ; preds = %loopEntry
  store i32 -1050393018, i32* %switchVar
  br label %loopEnd

if.end:                                           ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %120 = load i32, i32* %a, align 4
  %121 = sub i32 %120, -1879409951
  %122 = sub i32 %121, 100
  %123 = add i32 %122, -1879409951
  %_ = sub i32 %120, 100
  %gen = mul i32 %123, 100
  %_25 = shl i32 %120, 100
  %124 = sub i32 0, %120
  %125 = add i32 0, %124
  %_26 = sub i32 0, %120
  %126 = sub i32 %125, 1316023264
  %127 = add i32 %126, 100
  %128 = add i32 %127, 1316023264
  %gen27 = add i32 %125, 100
  %129 = add i32 0, 1759842856
  %130 = sub i32 %129, %120
  %131 = sub i32 %130, 1759842856
  %_28 = sub i32 0, %120
  %132 = sub i32 0, 100
  %133 = sub i32 %131, %132
  %gen29 = add i32 %131, 100
  %134 = add i32 %120, -1815719797
  %135 = sub i32 %134, 100
  %136 = sub i32 %135, -1815719797
  %_30 = sub i32 %120, 100
  %gen31 = mul i32 %136, 100
  %divalteredBB = sdiv i32 %120, 100
  store i32 %divalteredBB, i32* %b, align 4
  %137 = load i32, i32* %a, align 4
  %138 = load i32, i32* %b, align 4
  %mulalteredBB = mul nsw i32 100, %138
  %139 = sub i32 0, %137
  %140 = add i32 0, %139
  %_32 = sub i32 0, %137
  %141 = add i32 %140, -818793657
  %142 = add i32 %141, %mulalteredBB
  %143 = sub i32 %142, -818793657
  %gen33 = add i32 %140, %mulalteredBB
  %144 = sub i32 0, 1279971174
  %145 = sub i32 %144, %137
  %146 = add i32 %145, 1279971174
  %_34 = sub i32 0, %137
  %147 = add i32 %146, 1902370312
  %148 = add i32 %147, %mulalteredBB
  %149 = sub i32 %148, 1902370312
  %gen35 = add i32 %146, %mulalteredBB
  %150 = add i32 %137, -1906896232
  %151 = sub i32 %150, %mulalteredBB
  %152 = sub i32 %151, -1906896232
  %_36 = sub i32 %137, %mulalteredBB
  %gen37 = mul i32 %152, %mulalteredBB
  %_38 = shl i32 %137, %mulalteredBB
  %153 = add i32 0, -1624674446
  %154 = sub i32 %153, %137
  %155 = sub i32 %154, -1624674446
  %_39 = sub i32 0, %137
  %156 = sub i32 0, %155
  %157 = sub i32 0, %mulalteredBB
  %158 = add i32 %156, %157
  %159 = sub i32 0, %158
  %gen40 = add i32 %155, %mulalteredBB
  %_41 = shl i32 %137, %mulalteredBB
  %160 = sub i32 0, 915812560
  %161 = sub i32 %160, %137
  %162 = add i32 %161, 915812560
  %_42 = sub i32 0, %137
  %163 = sub i32 0, %mulalteredBB
  %164 = sub i32 %162, %163
  %gen43 = add i32 %162, %mulalteredBB
  %_44 = shl i32 %137, %mulalteredBB
  %165 = add i32 %137, 1356362845
  %166 = sub i32 %165, %mulalteredBB
  %167 = sub i32 %166, 1356362845
  %subalteredBB = sub nsw i32 %137, %mulalteredBB
  %168 = sub i32 0, 1438245034
  %169 = sub i32 %168, %167
  %170 = add i32 %169, 1438245034
  %_45 = sub i32 0, %167
  %171 = sub i32 %170, -816477023
  %172 = add i32 %171, 50
  %173 = add i32 %172, -816477023
  %gen46 = add i32 %170, 50
  %174 = sub i32 %167, -1482889572
  %175 = sub i32 %174, 50
  %176 = add i32 %175, -1482889572
  %_47 = sub i32 %167, 50
  %gen48 = mul i32 %176, 50
  %_49 = shl i32 %167, 50
  %177 = sub i32 0, %167
  %178 = add i32 0, %177
  %_50 = sub i32 0, %167
  %179 = add i32 %178, 1927237427
  %180 = add i32 %179, 50
  %181 = sub i32 %180, 1927237427
  %gen51 = add i32 %178, 50
  %div1alteredBB = sdiv i32 %167, 50
  store i32 %div1alteredBB, i32* %c, align 4
  %182 = load i32, i32* %a, align 4
  %183 = load i32, i32* %b, align 4
  %184 = sub i32 0, %183
  %185 = add i32 100, %184
  %_52 = sub i32 100, %183
  %gen53 = mul i32 %185, %183
  %_54 = shl i32 100, %183
  %186 = add i32 100, -623152855
  %187 = sub i32 %186, %183
  %188 = sub i32 %187, -623152855
  %_55 = sub i32 100, %183
  %gen56 = mul i32 %188, %183
  %mul2alteredBB = mul nsw i32 100, %183
  %_57 = shl i32 %182, %mul2alteredBB
  %189 = sub i32 %182, 2104354806
  %190 = sub i32 %189, %mul2alteredBB
  %191 = add i32 %190, 2104354806
  %_58 = sub i32 %182, %mul2alteredBB
  %gen59 = mul i32 %191, %mul2alteredBB
  %192 = add i32 0, -1851783952
  %193 = sub i32 %192, %182
  %194 = sub i32 %193, -1851783952
  %_60 = sub i32 0, %182
  %195 = sub i32 0, %mul2alteredBB
  %196 = sub i32 %194, %195
  %gen61 = add i32 %194, %mul2alteredBB
  %197 = sub i32 0, %mul2alteredBB
  %198 = add i32 %182, %197
  %_62 = sub i32 %182, %mul2alteredBB
  %gen63 = mul i32 %198, %mul2alteredBB
  %199 = add i32 %182, 1664540224
  %200 = sub i32 %199, %mul2alteredBB
  %201 = sub i32 %200, 1664540224
  %_64 = sub i32 %182, %mul2alteredBB
  %gen65 = mul i32 %201, %mul2alteredBB
  %_66 = shl i32 %182, %mul2alteredBB
  %202 = sub i32 %182, 1173732366
  %203 = sub i32 %202, %mul2alteredBB
  %204 = add i32 %203, 1173732366
  %sub3alteredBB = sub nsw i32 %182, %mul2alteredBB
  %205 = load i32, i32* %c, align 4
  %206 = add i32 50, -1088802010
  %207 = sub i32 %206, %205
  %208 = sub i32 %207, -1088802010
  %_67 = sub i32 50, %205
  %gen68 = mul i32 %208, %205
  %209 = add i32 0, 1946630707
  %210 = sub i32 %209, 50
  %211 = sub i32 %210, 1946630707
  %_69 = sub i32 0, 50
  %212 = add i32 %211, -1316590577
  %213 = add i32 %212, %205
  %214 = sub i32 %213, -1316590577
  %gen70 = add i32 %211, %205
  %215 = add i32 0, 712991607
  %216 = sub i32 %215, 50
  %217 = sub i32 %216, 712991607
  %_71 = sub i32 0, 50
  %218 = add i32 %217, -1542388596
  %219 = add i32 %218, %205
  %220 = sub i32 %219, -1542388596
  %gen72 = add i32 %217, %205
  %_73 = shl i32 50, %205
  %mul4alteredBB = mul nsw i32 50, %205
  %221 = sub i32 0, %mul4alteredBB
  %222 = add i32 %204, %221
  %_74 = sub i32 %204, %mul4alteredBB
  %gen75 = mul i32 %222, %mul4alteredBB
  %_76 = shl i32 %204, %mul4alteredBB
  %223 = sub i32 0, %204
  %224 = add i32 0, %223
  %_77 = sub i32 0, %204
  %225 = sub i32 %224, 1657603384
  %226 = add i32 %225, %mul4alteredBB
  %227 = add i32 %226, 1657603384
  %gen78 = add i32 %224, %mul4alteredBB
  %228 = sub i32 0, %204
  %229 = add i32 0, %228
  %_79 = sub i32 0, %204
  %230 = sub i32 %229, -161321631
  %231 = add i32 %230, %mul4alteredBB
  %232 = add i32 %231, -161321631
  %gen80 = add i32 %229, %mul4alteredBB
  %233 = sub i32 %204, 405866142
  %234 = sub i32 %233, %mul4alteredBB
  %235 = add i32 %234, 405866142
  %sub5alteredBB = sub nsw i32 %204, %mul4alteredBB
  %236 = sub i32 0, 20
  %237 = add i32 %235, %236
  %_81 = sub i32 %235, 20
  %gen82 = mul i32 %237, 20
  %238 = add i32 0, 1132384033
  %239 = sub i32 %238, %235
  %240 = sub i32 %239, 1132384033
  %_83 = sub i32 0, %235
  %241 = sub i32 0, %240
  %242 = sub i32 0, 20
  %243 = add i32 %241, %242
  %244 = sub i32 0, %243
  %gen84 = add i32 %240, 20
  %245 = sub i32 0, %235
  %246 = add i32 0, %245
  %_85 = sub i32 0, %235
  %247 = sub i32 0, 20
  %248 = sub i32 %246, %247
  %gen86 = add i32 %246, 20
  %249 = add i32 %235, 480041148
  %250 = sub i32 %249, 20
  %251 = sub i32 %250, 480041148
  %_87 = sub i32 %235, 20
  %gen88 = mul i32 %251, 20
  %_89 = shl i32 %235, 20
  %div6alteredBB = sdiv i32 %235, 20
  store i32 %div6alteredBB, i32* %d, align 4
  %252 = load i32, i32* %a, align 4
  %253 = load i32, i32* %b, align 4
  %_90 = shl i32 100, %253
  %_91 = shl i32 100, %253
  %254 = add i32 0, -1831804842
  %255 = sub i32 %254, 100
  %256 = sub i32 %255, -1831804842
  %_92 = sub i32 0, 100
  %257 = sub i32 0, %253
  %258 = sub i32 %256, %257
  %gen93 = add i32 %256, %253
  %mul7alteredBB = mul nsw i32 100, %253
  %_94 = shl i32 %252, %mul7alteredBB
  %_95 = shl i32 %252, %mul7alteredBB
  %259 = sub i32 0, %252
  %260 = add i32 0, %259
  %_96 = sub i32 0, %252
  %261 = sub i32 0, %mul7alteredBB
  %262 = sub i32 %260, %261
  %gen97 = add i32 %260, %mul7alteredBB
  %263 = sub i32 0, %252
  %264 = add i32 0, %263
  %_98 = sub i32 0, %252
  %265 = add i32 %264, 764531659
  %266 = add i32 %265, %mul7alteredBB
  %267 = sub i32 %266, 764531659
  %gen99 = add i32 %264, %mul7alteredBB
  %_100 = shl i32 %252, %mul7alteredBB
  %268 = sub i32 0, %mul7alteredBB
  %269 = add i32 %252, %268
  %_101 = sub i32 %252, %mul7alteredBB
  %gen102 = mul i32 %269, %mul7alteredBB
  %270 = add i32 %252, 2093822585
  %271 = sub i32 %270, %mul7alteredBB
  %272 = sub i32 %271, 2093822585
  %_103 = sub i32 %252, %mul7alteredBB
  %gen104 = mul i32 %272, %mul7alteredBB
  %273 = sub i32 0, %mul7alteredBB
  %274 = add i32 %252, %273
  %sub8alteredBB = sub nsw i32 %252, %mul7alteredBB
  %275 = load i32, i32* %c, align 4
  %_105 = shl i32 50, %275
  %276 = sub i32 0, 50
  %277 = add i32 0, %276
  %_106 = sub i32 0, 50
  %278 = add i32 %277, -25463292
  %279 = add i32 %278, %275
  %280 = sub i32 %279, -25463292
  %gen107 = add i32 %277, %275
  %mul9alteredBB = mul nsw i32 50, %275
  %281 = sub i32 0, %274
  %282 = add i32 0, %281
  %_108 = sub i32 0, %274
  %283 = sub i32 %282, -570274266
  %284 = add i32 %283, %mul9alteredBB
  %285 = add i32 %284, -570274266
  %gen109 = add i32 %282, %mul9alteredBB
  %_110 = shl i32 %274, %mul9alteredBB
  %286 = add i32 0, -1767705556
  %287 = sub i32 %286, %274
  %288 = sub i32 %287, -1767705556
  %_111 = sub i32 0, %274
  %289 = add i32 %288, 1967834794
  %290 = add i32 %289, %mul9alteredBB
  %291 = sub i32 %290, 1967834794
  %gen112 = add i32 %288, %mul9alteredBB
  %292 = sub i32 %274, 1489343258
  %293 = sub i32 %292, %mul9alteredBB
  %294 = add i32 %293, 1489343258
  %sub10alteredBB = sub nsw i32 %274, %mul9alteredBB
  %295 = load i32, i32* %d, align 4
  %296 = sub i32 0, 2066999072
  %297 = sub i32 %296, 20
  %298 = add i32 %297, 2066999072
  %_113 = sub i32 0, 20
  %299 = sub i32 %298, 93365446
  %300 = add i32 %299, %295
  %301 = add i32 %300, 93365446
  %gen114 = add i32 %298, %295
  %_115 = shl i32 20, %295
  %302 = add i32 20, 1416383908
  %303 = sub i32 %302, %295
  %304 = sub i32 %303, 1416383908
  %_116 = sub i32 20, %295
  %gen117 = mul i32 %304, %295
  %mul11alteredBB = mul nsw i32 20, %295
  %305 = sub i32 0, -2085059222
  %306 = sub i32 %305, %294
  %307 = add i32 %306, -2085059222
  %_118 = sub i32 0, %294
  %308 = sub i32 0, %307
  %309 = sub i32 0, %mul11alteredBB
  %310 = add i32 %308, %309
  %311 = sub i32 0, %310
  %gen119 = add i32 %307, %mul11alteredBB
  %312 = sub i32 0, %mul11alteredBB
  %313 = add i32 %294, %312
  %sub12alteredBB = sub nsw i32 %294, %mul11alteredBB
  %_120 = shl i32 %313, 10
  %_121 = shl i32 %313, 10
  %div13alteredBB = sdiv i32 %313, 10
  store i32 %div13alteredBB, i32* %e, align 4
  %314 = load i32, i32* %a, align 4
  %315 = load i32, i32* %b, align 4
  %_122 = shl i32 100, %315
  %316 = sub i32 100, 94564179
  %317 = sub i32 %316, %315
  %318 = add i32 %317, 94564179
  %_123 = sub i32 100, %315
  %gen124 = mul i32 %318, %315
  %_125 = shl i32 100, %315
  %mul14alteredBB = mul nsw i32 100, %315
  %_126 = shl i32 %314, %mul14alteredBB
  %319 = sub i32 0, -827073851
  %320 = sub i32 %319, %314
  %321 = add i32 %320, -827073851
  %_127 = sub i32 0, %314
  %322 = add i32 %321, -455709740
  %323 = add i32 %322, %mul14alteredBB
  %324 = sub i32 %323, -455709740
  %gen128 = add i32 %321, %mul14alteredBB
  %325 = sub i32 0, -447296908
  %326 = sub i32 %325, %314
  %327 = add i32 %326, -447296908
  %_129 = sub i32 0, %314
  %328 = sub i32 %327, 1659784549
  %329 = add i32 %328, %mul14alteredBB
  %330 = add i32 %329, 1659784549
  %gen130 = add i32 %327, %mul14alteredBB
  %331 = sub i32 %314, 522519601
  %332 = sub i32 %331, %mul14alteredBB
  %333 = add i32 %332, 522519601
  %_131 = sub i32 %314, %mul14alteredBB
  %gen132 = mul i32 %333, %mul14alteredBB
  %334 = sub i32 %314, 1563491714
  %335 = sub i32 %334, %mul14alteredBB
  %336 = add i32 %335, 1563491714
  %sub15alteredBB = sub nsw i32 %314, %mul14alteredBB
  %337 = load i32, i32* %c, align 4
  %338 = sub i32 0, 50
  %339 = add i32 0, %338
  %_133 = sub i32 0, 50
  %340 = add i32 %339, 1414324615
  %341 = add i32 %340, %337
  %342 = sub i32 %341, 1414324615
  %gen134 = add i32 %339, %337
  %343 = add i32 50, 324506839
  %344 = sub i32 %343, %337
  %345 = sub i32 %344, 324506839
  %_135 = sub i32 50, %337
  %gen136 = mul i32 %345, %337
  %_137 = shl i32 50, %337
  %346 = sub i32 0, %337
  %347 = add i32 50, %346
  %_138 = sub i32 50, %337
  %gen139 = mul i32 %347, %337
  %348 = sub i32 0, %337
  %349 = add i32 50, %348
  %_140 = sub i32 50, %337
  %gen141 = mul i32 %349, %337
  %_142 = shl i32 50, %337
  %350 = add i32 50, 712587607
  %351 = sub i32 %350, %337
  %352 = sub i32 %351, 712587607
  %_143 = sub i32 50, %337
  %gen144 = mul i32 %352, %337
  %_145 = shl i32 50, %337
  %mul16alteredBB = mul nsw i32 50, %337
  %_146 = shl i32 %336, %mul16alteredBB
  %353 = add i32 %336, -1139541381
  %354 = sub i32 %353, %mul16alteredBB
  %355 = sub i32 %354, -1139541381
  %sub17alteredBB = sub nsw i32 %336, %mul16alteredBB
  %356 = load i32, i32* %d, align 4
  %357 = sub i32 0, %356
  %358 = add i32 20, %357
  %_147 = sub i32 20, %356
  %gen148 = mul i32 %358, %356
  %359 = sub i32 0, %356
  %360 = add i32 20, %359
  %_149 = sub i32 20, %356
  %gen150 = mul i32 %360, %356
  %mul18alteredBB = mul nsw i32 20, %356
  %361 = sub i32 0, %mul18alteredBB
  %362 = add i32 %355, %361
  %_151 = sub i32 %355, %mul18alteredBB
  %gen152 = mul i32 %362, %mul18alteredBB
  %363 = sub i32 0, -1358092880
  %364 = sub i32 %363, %355
  %365 = add i32 %364, -1358092880
  %_153 = sub i32 0, %355
  %366 = sub i32 0, %mul18alteredBB
  %367 = sub i32 %365, %366
  %gen154 = add i32 %365, %mul18alteredBB
  %368 = sub i32 0, %mul18alteredBB
  %369 = add i32 %355, %368
  %_155 = sub i32 %355, %mul18alteredBB
  %gen156 = mul i32 %369, %mul18alteredBB
  %370 = sub i32 %355, 860826211
  %371 = sub i32 %370, %mul18alteredBB
  %372 = add i32 %371, 860826211
  %sub19alteredBB = sub nsw i32 %355, %mul18alteredBB
  %373 = load i32, i32* %e, align 4
  %374 = sub i32 0, 1101302014
  %375 = sub i32 %374, 10
  %376 = add i32 %375, 1101302014
  %_157 = sub i32 0, 10
  %377 = add i32 %376, 2130989341
  %378 = add i32 %377, %373
  %379 = sub i32 %378, 2130989341
  %gen158 = add i32 %376, %373
  %380 = sub i32 0, %373
  %381 = add i32 10, %380
  %_159 = sub i32 10, %373
  %gen160 = mul i32 %381, %373
  %_161 = shl i32 10, %373
  %382 = sub i32 10, -438063705
  %383 = sub i32 %382, %373
  %384 = add i32 %383, -438063705
  %_162 = sub i32 10, %373
  %gen163 = mul i32 %384, %373
  %385 = sub i32 10, -809102768
  %386 = sub i32 %385, %373
  %387 = add i32 %386, -809102768
  %_164 = sub i32 10, %373
  %gen165 = mul i32 %387, %373
  %mul20alteredBB = mul nsw i32 10, %373
  %388 = add i32 0, -1871012751
  %389 = sub i32 %388, %372
  %390 = sub i32 %389, -1871012751
  %_166 = sub i32 0, %372
  %391 = sub i32 0, %mul20alteredBB
  %392 = sub i32 %390, %391
  %gen167 = add i32 %390, %mul20alteredBB
  %393 = add i32 0, -762609024
  %394 = sub i32 %393, %372
  %395 = sub i32 %394, -762609024
  %_168 = sub i32 0, %372
  %396 = sub i32 0, %395
  %397 = sub i32 0, %mul20alteredBB
  %398 = add i32 %396, %397
  %399 = sub i32 0, %398
  %gen169 = add i32 %395, %mul20alteredBB
  %400 = sub i32 %372, -697437303
  %401 = sub i32 %400, %mul20alteredBB
  %402 = add i32 %401, -697437303
  %_170 = sub i32 %372, %mul20alteredBB
  %gen171 = mul i32 %402, %mul20alteredBB
  %403 = sub i32 0, %372
  %404 = add i32 0, %403
  %_172 = sub i32 0, %372
  %405 = sub i32 0, %404
  %406 = sub i32 0, %mul20alteredBB
  %407 = add i32 %405, %406
  %408 = sub i32 0, %407
  %gen173 = add i32 %404, %mul20alteredBB
  %_174 = shl i32 %372, %mul20alteredBB
  %_175 = shl i32 %372, %mul20alteredBB
  %409 = add i32 %372, 2104032824
  %410 = sub i32 %409, %mul20alteredBB
  %411 = sub i32 %410, 2104032824
  %sub21alteredBB = sub nsw i32 %372, %mul20alteredBB
  %_176 = shl i32 %411, 5
  %412 = sub i32 0, 5
  %413 = add i32 %411, %412
  %_177 = sub i32 %411, 5
  %gen178 = mul i32 %413, 5
  %414 = sub i32 0, %411
  %415 = add i32 0, %414
  %_179 = sub i32 0, %411
  %416 = sub i32 %415, 1814250046
  %417 = add i32 %416, 5
  %418 = add i32 %417, 1814250046
  %gen180 = add i32 %415, 5
  %419 = add i32 %411, -1559107988
  %420 = sub i32 %419, 5
  %421 = sub i32 %420, -1559107988
  %_181 = sub i32 %411, 5
  %gen182 = mul i32 %421, 5
  %422 = sub i32 0, -36740861
  %423 = sub i32 %422, %411
  %424 = add i32 %423, -36740861
  %_183 = sub i32 0, %411
  %425 = add i32 %424, 30076752
  %426 = add i32 %425, 5
  %427 = sub i32 %426, 30076752
  %gen184 = add i32 %424, 5
  %428 = add i32 %411, -1076315952
  %429 = sub i32 %428, 5
  %430 = sub i32 %429, -1076315952
  %_185 = sub i32 %411, 5
  %gen186 = mul i32 %430, 5
  %431 = sub i32 0, %411
  %432 = add i32 0, %431
  %_187 = sub i32 0, %411
  %433 = add i32 %432, 1456204564
  %434 = add i32 %433, 5
  %435 = sub i32 %434, 1456204564
  %gen188 = add i32 %432, 5
  %div22alteredBB = sdiv i32 %411, 5
  store i32 %div22alteredBB, i32* %f, align 4
  %436 = load i32, i32* %a, align 4
  %437 = sub i32 0, 22346458
  %438 = sub i32 %437, %436
  %439 = add i32 %438, 22346458
  %_189 = sub i32 0, %436
  %440 = sub i32 %439, -75626221
  %441 = add i32 %440, 5
  %442 = add i32 %441, -75626221
  %gen190 = add i32 %439, 5
  %443 = sub i32 0, %436
  %444 = add i32 0, %443
  %_191 = sub i32 0, %436
  %445 = sub i32 %444, -577803887
  %446 = add i32 %445, 5
  %447 = add i32 %446, -577803887
  %gen192 = add i32 %444, 5
  %448 = add i32 %436, -886091599
  %449 = sub i32 %448, 5
  %450 = sub i32 %449, -886091599
  %_193 = sub i32 %436, 5
  %gen194 = mul i32 %450, 5
  %451 = sub i32 0, 5
  %452 = add i32 %436, %451
  %_195 = sub i32 %436, 5
  %gen196 = mul i32 %452, 5
  %remalteredBB = srem i32 %436, 5
  store i32 %remalteredBB, i32* %g, align 4
  %453 = load i32, i32* %b, align 4
  %454 = load i32, i32* %c, align 4
  %455 = load i32, i32* %d, align 4
  %456 = load i32, i32* %e, align 4
  %457 = load i32, i32* %f, align 4
  %458 = load i32, i32* %g, align 4
  %call23alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i32 %453, i32 %454, i32 %455, i32 %456, i32 %457, i32 %458)
  store i32 719011522, i32* %switchVar
  br label %loopEnd

originalBB197alteredBB:                           ; preds = %loopEntry
  %call24alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i32 0, i32 0))
  store i32 -268399660, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB197alteredBB, %originalBBalteredBB, %originalBBpart2199, %originalBB197, %if.else, %originalBBpart2, %originalBB, %if.then, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
