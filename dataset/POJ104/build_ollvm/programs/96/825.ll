; ModuleID = 'source-C-CXX/96/825.c'
source_filename = "source-C-CXX/96/825.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %0 = load i32, i32* %n, align 4
  %div = sdiv i32 %0, 100
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %div)
  %1 = load i32, i32* %n, align 4
  %2 = load i32, i32* %n, align 4
  %div2 = sdiv i32 %2, 100
  %mul = mul nsw i32 %div2, 100
  %3 = sub i32 %1, -2113158106
  %4 = sub i32 %3, %mul
  %5 = add i32 %4, -2113158106
  %sub = sub nsw i32 %1, %mul
  %div3 = sdiv i32 %5, 50
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %div3)
  %6 = load i32, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %div5 = sdiv i32 %7, 100
  %mul6 = mul nsw i32 %div5, 100
  %8 = add i32 %6, 1083306279
  %9 = sub i32 %8, %mul6
  %10 = sub i32 %9, 1083306279
  %sub7 = sub nsw i32 %6, %mul6
  %11 = load i32, i32* %n, align 4
  %12 = load i32, i32* %n, align 4
  %div8 = sdiv i32 %12, 100
  %mul9 = mul nsw i32 %div8, 100
  %13 = sub i32 %11, -396709112
  %14 = sub i32 %13, %mul9
  %15 = add i32 %14, -396709112
  %sub10 = sub nsw i32 %11, %mul9
  %div11 = sdiv i32 %15, 50
  %mul12 = mul nsw i32 %div11, 50
  %16 = sub i32 0, %mul12
  %17 = add i32 %10, %16
  %sub13 = sub nsw i32 %10, %mul12
  %div14 = sdiv i32 %17, 20
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %div14)
  %18 = load i32, i32* %n, align 4
  %19 = load i32, i32* %n, align 4
  %div16 = sdiv i32 %19, 100
  %mul17 = mul nsw i32 %div16, 100
  %20 = sub i32 %18, -1346013123
  %21 = sub i32 %20, %mul17
  %22 = add i32 %21, -1346013123
  %sub18 = sub nsw i32 %18, %mul17
  %23 = load i32, i32* %n, align 4
  %24 = load i32, i32* %n, align 4
  %div19 = sdiv i32 %24, 100
  %mul20 = mul nsw i32 %div19, 100
  %25 = sub i32 0, %mul20
  %26 = add i32 %23, %25
  %sub21 = sub nsw i32 %23, %mul20
  %div22 = sdiv i32 %26, 50
  %mul23 = mul nsw i32 %div22, 50
  %27 = add i32 %22, 1544146238
  %28 = sub i32 %27, %mul23
  %29 = sub i32 %28, 1544146238
  %sub24 = sub nsw i32 %22, %mul23
  %30 = load i32, i32* %n, align 4
  %31 = load i32, i32* %n, align 4
  %div25 = sdiv i32 %31, 100
  %mul26 = mul nsw i32 %div25, 100
  %32 = add i32 %30, -1741293354
  %33 = sub i32 %32, %mul26
  %34 = sub i32 %33, -1741293354
  %sub27 = sub nsw i32 %30, %mul26
  %35 = load i32, i32* %n, align 4
  %36 = load i32, i32* %n, align 4
  %div28 = sdiv i32 %36, 100
  %mul29 = mul nsw i32 %div28, 100
  %37 = sub i32 0, %mul29
  %38 = add i32 %35, %37
  %sub30 = sub nsw i32 %35, %mul29
  %div31 = sdiv i32 %38, 50
  %mul32 = mul nsw i32 %div31, 50
  %39 = sub i32 0, %mul32
  %40 = add i32 %34, %39
  %sub33 = sub nsw i32 %34, %mul32
  %div34 = sdiv i32 %40, 20
  %mul35 = mul nsw i32 %div34, 20
  %41 = sub i32 0, %mul35
  %42 = add i32 %29, %41
  %sub36 = sub nsw i32 %29, %mul35
  %div37 = sdiv i32 %42, 10
  %call38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %div37)
  %43 = load i32, i32* %n, align 4
  %44 = load i32, i32* %n, align 4
  %div39 = sdiv i32 %44, 100
  %mul40 = mul nsw i32 %div39, 100
  %45 = sub i32 0, %mul40
  %46 = add i32 %43, %45
  %sub41 = sub nsw i32 %43, %mul40
  %47 = load i32, i32* %n, align 4
  %48 = load i32, i32* %n, align 4
  %div42 = sdiv i32 %48, 100
  %mul43 = mul nsw i32 %div42, 100
  %49 = add i32 %47, 598679248
  %50 = sub i32 %49, %mul43
  %51 = sub i32 %50, 598679248
  %sub44 = sub nsw i32 %47, %mul43
  %div45 = sdiv i32 %51, 50
  %mul46 = mul nsw i32 %div45, 50
  %52 = sub i32 0, %mul46
  %53 = add i32 %46, %52
  %sub47 = sub nsw i32 %46, %mul46
  %54 = load i32, i32* %n, align 4
  %55 = load i32, i32* %n, align 4
  %div48 = sdiv i32 %55, 100
  %mul49 = mul nsw i32 %div48, 100
  %56 = add i32 %54, 197219080
  %57 = sub i32 %56, %mul49
  %58 = sub i32 %57, 197219080
  %sub50 = sub nsw i32 %54, %mul49
  %59 = load i32, i32* %n, align 4
  %60 = load i32, i32* %n, align 4
  %div51 = sdiv i32 %60, 100
  %mul52 = mul nsw i32 %div51, 100
  %61 = sub i32 0, %mul52
  %62 = add i32 %59, %61
  %sub53 = sub nsw i32 %59, %mul52
  %div54 = sdiv i32 %62, 50
  %mul55 = mul nsw i32 %div54, 50
  %63 = add i32 %58, -494206312
  %64 = sub i32 %63, %mul55
  %65 = sub i32 %64, -494206312
  %sub56 = sub nsw i32 %58, %mul55
  %div57 = sdiv i32 %65, 20
  %mul58 = mul nsw i32 %div57, 20
  %66 = sub i32 0, %mul58
  %67 = add i32 %53, %66
  %sub59 = sub nsw i32 %53, %mul58
  %68 = load i32, i32* %n, align 4
  %69 = load i32, i32* %n, align 4
  %div60 = sdiv i32 %69, 100
  %mul61 = mul nsw i32 %div60, 100
  %70 = add i32 %68, -844724130
  %71 = sub i32 %70, %mul61
  %72 = sub i32 %71, -844724130
  %sub62 = sub nsw i32 %68, %mul61
  %73 = load i32, i32* %n, align 4
  %74 = load i32, i32* %n, align 4
  %div63 = sdiv i32 %74, 100
  %mul64 = mul nsw i32 %div63, 100
  %75 = add i32 %73, -1544100812
  %76 = sub i32 %75, %mul64
  %77 = sub i32 %76, -1544100812
  %sub65 = sub nsw i32 %73, %mul64
  %div66 = sdiv i32 %77, 50
  %mul67 = mul nsw i32 %div66, 50
  %78 = sub i32 %72, 1223809993
  %79 = sub i32 %78, %mul67
  %80 = add i32 %79, 1223809993
  %sub68 = sub nsw i32 %72, %mul67
  %81 = load i32, i32* %n, align 4
  %82 = load i32, i32* %n, align 4
  %div69 = sdiv i32 %82, 100
  %mul70 = mul nsw i32 %div69, 100
  %83 = sub i32 0, %mul70
  %84 = add i32 %81, %83
  %sub71 = sub nsw i32 %81, %mul70
  %85 = load i32, i32* %n, align 4
  %86 = load i32, i32* %n, align 4
  %div72 = sdiv i32 %86, 100
  %mul73 = mul nsw i32 %div72, 100
  %87 = sub i32 0, %mul73
  %88 = add i32 %85, %87
  %sub74 = sub nsw i32 %85, %mul73
  %div75 = sdiv i32 %88, 50
  %mul76 = mul nsw i32 %div75, 50
  %89 = add i32 %84, 1693723094
  %90 = sub i32 %89, %mul76
  %91 = sub i32 %90, 1693723094
  %sub77 = sub nsw i32 %84, %mul76
  %div78 = sdiv i32 %91, 20
  %mul79 = mul nsw i32 %div78, 20
  %92 = sub i32 %80, -705837400
  %93 = sub i32 %92, %mul79
  %94 = add i32 %93, -705837400
  %sub80 = sub nsw i32 %80, %mul79
  %div81 = sdiv i32 %94, 10
  %mul82 = mul nsw i32 %div81, 10
  %95 = sub i32 0, %mul82
  %96 = add i32 %67, %95
  %sub83 = sub nsw i32 %67, %mul82
  %div84 = sdiv i32 %96, 5
  %call85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %div84)
  %97 = load i32, i32* %n, align 4
  %rem = srem i32 %97, 5
  %call86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %rem)
  ret i32 0
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
