; ModuleID = 'source-C-CXX/96/3555.cpp'
source_filename = "source-C-CXX/96/3555.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_3555.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #2
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #2

; Function Attrs: noinline norecurse uwtable
define i32 @main() #3 {
entry:
  %i.reg2mem = alloca i32*
  %a.reg2mem = alloca [6 x i32]*
  %.reg2mem299 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x.1
  %1 = load i32, i32* @y.2
  %2 = add i32 %0, -120597114
  %3 = sub i32 %2, 1
  %4 = sub i32 %3, -120597114
  %5 = sub i32 %0, 1
  %6 = mul i32 %0, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %.reg2mem
  %9 = icmp slt i32 %1, 10
  store i1 %9, i1* %.reg2mem299
  %switchVar = alloca i32
  store i32 153401066, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar298 = load i32, i32* %switchVar
  switch i32 %switchVar298, label %switchDefault [
    i32 153401066, label %first
    i32 -111188260, label %originalBB
    i32 -832468567, label %originalBBpart2
    i32 1711518946, label %for.cond
    i32 -32158343, label %for.body
    i32 654384144, label %for.inc
    i32 -569856572, label %for.end
    i32 -1809782164, label %originalBBalteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload300 = load volatile i1, i1* %.reg2mem299
  %10 = and i1 %.reload, %.reload300
  %11 = xor i1 %.reload, %.reload300
  %12 = or i1 %10, %11
  %13 = or i1 %.reload, %.reload300
  %14 = select i1 %12, i32 -111188260, i32 -1809782164
  store i32 %14, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %p = alloca i32, align 4
  %a = alloca [6 x i32], align 16
  store [6 x i32]* %a, [6 x i32]** %a.reg2mem
  %i = alloca i32, align 4
  store i32* %i, i32** %i.reg2mem
  store i32 0, i32* %retval, align 4
  %call = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %p)
  %15 = load i32, i32* %p, align 4
  %div = sdiv i32 %15, 100
  %a.reload321 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload321, i64 0, i64 0
  store i32 %div, i32* %arrayidx, align 16
  %16 = load i32, i32* %p, align 4
  %a.reload320 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx1 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload320, i64 0, i64 0
  %17 = load i32, i32* %arrayidx1, align 16
  %mul = mul nsw i32 %17, 100
  %18 = add i32 %16, -2100237393
  %19 = sub i32 %18, %mul
  %20 = sub i32 %19, -2100237393
  %sub = sub nsw i32 %16, %mul
  %div2 = sdiv i32 %20, 50
  %a.reload319 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx3 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload319, i64 0, i64 1
  store i32 %div2, i32* %arrayidx3, align 4
  %21 = load i32, i32* %p, align 4
  %a.reload318 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload318, i64 0, i64 0
  %22 = load i32, i32* %arrayidx4, align 16
  %mul5 = mul nsw i32 %22, 100
  %23 = sub i32 0, %mul5
  %24 = add i32 %21, %23
  %sub6 = sub nsw i32 %21, %mul5
  %a.reload317 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx7 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload317, i64 0, i64 1
  %25 = load i32, i32* %arrayidx7, align 4
  %mul8 = mul nsw i32 %25, 50
  %26 = sub i32 0, %mul8
  %27 = add i32 %24, %26
  %sub9 = sub nsw i32 %24, %mul8
  %div10 = sdiv i32 %27, 20
  %a.reload316 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx11 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload316, i64 0, i64 2
  store i32 %div10, i32* %arrayidx11, align 8
  %28 = load i32, i32* %p, align 4
  %a.reload315 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx12 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload315, i64 0, i64 0
  %29 = load i32, i32* %arrayidx12, align 16
  %mul13 = mul nsw i32 %29, 100
  %30 = sub i32 0, %mul13
  %31 = add i32 %28, %30
  %sub14 = sub nsw i32 %28, %mul13
  %a.reload314 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx15 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload314, i64 0, i64 1
  %32 = load i32, i32* %arrayidx15, align 4
  %mul16 = mul nsw i32 %32, 50
  %33 = sub i32 0, %mul16
  %34 = add i32 %31, %33
  %sub17 = sub nsw i32 %31, %mul16
  %a.reload313 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx18 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload313, i64 0, i64 2
  %35 = load i32, i32* %arrayidx18, align 8
  %mul19 = mul nsw i32 %35, 20
  %36 = sub i32 0, %mul19
  %37 = add i32 %34, %36
  %sub20 = sub nsw i32 %34, %mul19
  %div21 = sdiv i32 %37, 10
  %a.reload312 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx22 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload312, i64 0, i64 3
  store i32 %div21, i32* %arrayidx22, align 4
  %38 = load i32, i32* %p, align 4
  %a.reload311 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx23 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload311, i64 0, i64 0
  %39 = load i32, i32* %arrayidx23, align 16
  %mul24 = mul nsw i32 %39, 100
  %40 = sub i32 %38, -756239034
  %41 = sub i32 %40, %mul24
  %42 = add i32 %41, -756239034
  %sub25 = sub nsw i32 %38, %mul24
  %a.reload310 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx26 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload310, i64 0, i64 1
  %43 = load i32, i32* %arrayidx26, align 4
  %mul27 = mul nsw i32 %43, 50
  %44 = sub i32 0, %mul27
  %45 = add i32 %42, %44
  %sub28 = sub nsw i32 %42, %mul27
  %a.reload309 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx29 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload309, i64 0, i64 2
  %46 = load i32, i32* %arrayidx29, align 8
  %mul30 = mul nsw i32 %46, 20
  %47 = sub i32 %45, 1791686053
  %48 = sub i32 %47, %mul30
  %49 = add i32 %48, 1791686053
  %sub31 = sub nsw i32 %45, %mul30
  %a.reload308 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx32 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload308, i64 0, i64 3
  %50 = load i32, i32* %arrayidx32, align 4
  %mul33 = mul nsw i32 %50, 10
  %51 = add i32 %49, -709903891
  %52 = sub i32 %51, %mul33
  %53 = sub i32 %52, -709903891
  %sub34 = sub nsw i32 %49, %mul33
  %div35 = sdiv i32 %53, 5
  %a.reload307 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx36 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload307, i64 0, i64 4
  store i32 %div35, i32* %arrayidx36, align 16
  %54 = load i32, i32* %p, align 4
  %a.reload306 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx37 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload306, i64 0, i64 0
  %55 = load i32, i32* %arrayidx37, align 16
  %mul38 = mul nsw i32 %55, 100
  %56 = sub i32 0, %mul38
  %57 = add i32 %54, %56
  %sub39 = sub nsw i32 %54, %mul38
  %a.reload305 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx40 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload305, i64 0, i64 1
  %58 = load i32, i32* %arrayidx40, align 4
  %mul41 = mul nsw i32 %58, 50
  %59 = sub i32 %57, 594656313
  %60 = sub i32 %59, %mul41
  %61 = add i32 %60, 594656313
  %sub42 = sub nsw i32 %57, %mul41
  %a.reload304 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx43 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload304, i64 0, i64 2
  %62 = load i32, i32* %arrayidx43, align 8
  %mul44 = mul nsw i32 %62, 20
  %63 = add i32 %61, -1537732407
  %64 = sub i32 %63, %mul44
  %65 = sub i32 %64, -1537732407
  %sub45 = sub nsw i32 %61, %mul44
  %a.reload303 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx46 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload303, i64 0, i64 3
  %66 = load i32, i32* %arrayidx46, align 4
  %mul47 = mul nsw i32 %66, 10
  %67 = sub i32 %65, 1638285853
  %68 = sub i32 %67, %mul47
  %69 = add i32 %68, 1638285853
  %sub48 = sub nsw i32 %65, %mul47
  %a.reload302 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx49 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload302, i64 0, i64 4
  %70 = load i32, i32* %arrayidx49, align 16
  %mul50 = mul nsw i32 %70, 5
  %71 = sub i32 0, %mul50
  %72 = add i32 %69, %71
  %sub51 = sub nsw i32 %69, %mul50
  %a.reload301 = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx52 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload301, i64 0, i64 5
  store i32 %72, i32* %arrayidx52, align 4
  %i.reload325 = load volatile i32*, i32** %i.reg2mem
  store i32 0, i32* %i.reload325, align 4
  %73 = load i32, i32* @x.1
  %74 = load i32, i32* @y.2
  %75 = sub i32 %73, -1197413477
  %76 = sub i32 %75, 1
  %77 = add i32 %76, -1197413477
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 -832468567, i32 -1809782164
  store i32 %87, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  store i32 1711518946, i32* %switchVar
  br label %loopEnd

for.cond:                                         ; preds = %loopEntry
  %i.reload324 = load volatile i32*, i32** %i.reg2mem
  %88 = load i32, i32* %i.reload324, align 4
  %cmp = icmp slt i32 %88, 6
  %89 = select i1 %cmp, i32 -32158343, i32 -569856572
  store i32 %89, i32* %switchVar
  br label %loopEnd

for.body:                                         ; preds = %loopEntry
  %i.reload323 = load volatile i32*, i32** %i.reg2mem
  %90 = load i32, i32* %i.reload323, align 4
  %idxprom = sext i32 %90 to i64
  %a.reload = load volatile [6 x i32]*, [6 x i32]** %a.reg2mem
  %arrayidx53 = getelementptr inbounds [6 x i32], [6 x i32]* %a.reload, i64 0, i64 %idxprom
  %91 = load i32, i32* %arrayidx53, align 4
  %call54 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %91)
  %call55 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call54, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 654384144, i32* %switchVar
  br label %loopEnd

for.inc:                                          ; preds = %loopEntry
  %i.reload322 = load volatile i32*, i32** %i.reg2mem
  %92 = load i32, i32* %i.reload322, align 4
  %93 = sub i32 0, 1
  %94 = sub i32 %92, %93
  %inc = add nsw i32 %92, 1
  %i.reload = load volatile i32*, i32** %i.reg2mem
  store i32 %94, i32* %i.reload, align 4
  store i32 1711518946, i32* %switchVar
  br label %loopEnd

for.end:                                          ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %palteredBB = alloca i32, align 4
  %aalteredBB = alloca [6 x i32], align 16
  %ialteredBB = alloca i32, align 4
  store i32 0, i32* %retvalalteredBB, align 4
  %callalteredBB = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %palteredBB)
  %95 = load i32, i32* %palteredBB, align 4
  %96 = add i32 0, 1216952255
  %97 = sub i32 %96, %95
  %98 = sub i32 %97, 1216952255
  %_ = sub i32 0, %95
  %99 = sub i32 0, 100
  %100 = sub i32 %98, %99
  %gen = add i32 %98, 100
  %101 = add i32 %95, 207901626
  %102 = sub i32 %101, 100
  %103 = sub i32 %102, 207901626
  %_56 = sub i32 %95, 100
  %gen57 = mul i32 %103, 100
  %104 = sub i32 0, 100
  %105 = add i32 %95, %104
  %_58 = sub i32 %95, 100
  %gen59 = mul i32 %105, 100
  %_60 = shl i32 %95, 100
  %106 = sub i32 %95, 1641288591
  %107 = sub i32 %106, 100
  %108 = add i32 %107, 1641288591
  %_61 = sub i32 %95, 100
  %gen62 = mul i32 %108, 100
  %divalteredBB = sdiv i32 %95, 100
  %arrayidxalteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 0
  store i32 %divalteredBB, i32* %arrayidxalteredBB, align 16
  %109 = load i32, i32* %palteredBB, align 4
  %arrayidx1alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 0
  %110 = load i32, i32* %arrayidx1alteredBB, align 16
  %_63 = shl i32 %110, 100
  %111 = sub i32 0, 100
  %112 = add i32 %110, %111
  %_64 = sub i32 %110, 100
  %gen65 = mul i32 %112, 100
  %mulalteredBB = mul nsw i32 %110, 100
  %_66 = shl i32 %109, %mulalteredBB
  %113 = sub i32 0, %mulalteredBB
  %114 = add i32 %109, %113
  %subalteredBB = sub nsw i32 %109, %mulalteredBB
  %115 = sub i32 0, %114
  %116 = add i32 0, %115
  %_67 = sub i32 0, %114
  %117 = sub i32 0, 50
  %118 = sub i32 %116, %117
  %gen68 = add i32 %116, 50
  %div2alteredBB = sdiv i32 %114, 50
  %arrayidx3alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 1
  store i32 %div2alteredBB, i32* %arrayidx3alteredBB, align 4
  %119 = load i32, i32* %palteredBB, align 4
  %arrayidx4alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 0
  %120 = load i32, i32* %arrayidx4alteredBB, align 16
  %121 = sub i32 0, %120
  %122 = add i32 0, %121
  %_69 = sub i32 0, %120
  %123 = sub i32 0, %122
  %124 = sub i32 0, 100
  %125 = add i32 %123, %124
  %126 = sub i32 0, %125
  %gen70 = add i32 %122, 100
  %127 = sub i32 %120, 1547919987
  %128 = sub i32 %127, 100
  %129 = add i32 %128, 1547919987
  %_71 = sub i32 %120, 100
  %gen72 = mul i32 %129, 100
  %130 = add i32 %120, 2101325733
  %131 = sub i32 %130, 100
  %132 = sub i32 %131, 2101325733
  %_73 = sub i32 %120, 100
  %gen74 = mul i32 %132, 100
  %133 = add i32 %120, 727976379
  %134 = sub i32 %133, 100
  %135 = sub i32 %134, 727976379
  %_75 = sub i32 %120, 100
  %gen76 = mul i32 %135, 100
  %136 = add i32 %120, 205233305
  %137 = sub i32 %136, 100
  %138 = sub i32 %137, 205233305
  %_77 = sub i32 %120, 100
  %gen78 = mul i32 %138, 100
  %mul5alteredBB = mul nsw i32 %120, 100
  %139 = sub i32 0, 909736920
  %140 = sub i32 %139, %119
  %141 = add i32 %140, 909736920
  %_79 = sub i32 0, %119
  %142 = sub i32 %141, 927990685
  %143 = add i32 %142, %mul5alteredBB
  %144 = add i32 %143, 927990685
  %gen80 = add i32 %141, %mul5alteredBB
  %145 = sub i32 %119, -888391198
  %146 = sub i32 %145, %mul5alteredBB
  %147 = add i32 %146, -888391198
  %_81 = sub i32 %119, %mul5alteredBB
  %gen82 = mul i32 %147, %mul5alteredBB
  %148 = add i32 %119, 1889352646
  %149 = sub i32 %148, %mul5alteredBB
  %150 = sub i32 %149, 1889352646
  %sub6alteredBB = sub nsw i32 %119, %mul5alteredBB
  %arrayidx7alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 1
  %151 = load i32, i32* %arrayidx7alteredBB, align 4
  %152 = sub i32 0, 1266652886
  %153 = sub i32 %152, %151
  %154 = add i32 %153, 1266652886
  %_83 = sub i32 0, %151
  %155 = sub i32 0, %154
  %156 = sub i32 0, 50
  %157 = add i32 %155, %156
  %158 = sub i32 0, %157
  %gen84 = add i32 %154, 50
  %159 = sub i32 %151, 1627679843
  %160 = sub i32 %159, 50
  %161 = add i32 %160, 1627679843
  %_85 = sub i32 %151, 50
  %gen86 = mul i32 %161, 50
  %_87 = shl i32 %151, 50
  %mul8alteredBB = mul nsw i32 %151, 50
  %_88 = shl i32 %150, %mul8alteredBB
  %162 = add i32 0, 1842179958
  %163 = sub i32 %162, %150
  %164 = sub i32 %163, 1842179958
  %_89 = sub i32 0, %150
  %165 = sub i32 0, %164
  %166 = sub i32 0, %mul8alteredBB
  %167 = add i32 %165, %166
  %168 = sub i32 0, %167
  %gen90 = add i32 %164, %mul8alteredBB
  %169 = add i32 %150, -1163411124
  %170 = sub i32 %169, %mul8alteredBB
  %171 = sub i32 %170, -1163411124
  %_91 = sub i32 %150, %mul8alteredBB
  %gen92 = mul i32 %171, %mul8alteredBB
  %172 = add i32 %150, -1915879114
  %173 = sub i32 %172, %mul8alteredBB
  %174 = sub i32 %173, -1915879114
  %_93 = sub i32 %150, %mul8alteredBB
  %gen94 = mul i32 %174, %mul8alteredBB
  %175 = add i32 0, -325722253
  %176 = sub i32 %175, %150
  %177 = sub i32 %176, -325722253
  %_95 = sub i32 0, %150
  %178 = add i32 %177, 725666842
  %179 = add i32 %178, %mul8alteredBB
  %180 = sub i32 %179, 725666842
  %gen96 = add i32 %177, %mul8alteredBB
  %181 = sub i32 %150, 1699979482
  %182 = sub i32 %181, %mul8alteredBB
  %183 = add i32 %182, 1699979482
  %_97 = sub i32 %150, %mul8alteredBB
  %gen98 = mul i32 %183, %mul8alteredBB
  %184 = add i32 %150, -706271479
  %185 = sub i32 %184, %mul8alteredBB
  %186 = sub i32 %185, -706271479
  %_99 = sub i32 %150, %mul8alteredBB
  %gen100 = mul i32 %186, %mul8alteredBB
  %187 = sub i32 %150, -419328322
  %188 = sub i32 %187, %mul8alteredBB
  %189 = add i32 %188, -419328322
  %_101 = sub i32 %150, %mul8alteredBB
  %gen102 = mul i32 %189, %mul8alteredBB
  %190 = sub i32 %150, -490587919
  %191 = sub i32 %190, %mul8alteredBB
  %192 = add i32 %191, -490587919
  %_103 = sub i32 %150, %mul8alteredBB
  %gen104 = mul i32 %192, %mul8alteredBB
  %193 = sub i32 0, %mul8alteredBB
  %194 = add i32 %150, %193
  %sub9alteredBB = sub nsw i32 %150, %mul8alteredBB
  %195 = add i32 %194, 1411310621
  %196 = sub i32 %195, 20
  %197 = sub i32 %196, 1411310621
  %_105 = sub i32 %194, 20
  %gen106 = mul i32 %197, 20
  %_107 = shl i32 %194, 20
  %198 = sub i32 0, -389872741
  %199 = sub i32 %198, %194
  %200 = add i32 %199, -389872741
  %_108 = sub i32 0, %194
  %201 = sub i32 %200, -101749721
  %202 = add i32 %201, 20
  %203 = add i32 %202, -101749721
  %gen109 = add i32 %200, 20
  %204 = sub i32 0, 20
  %205 = add i32 %194, %204
  %_110 = sub i32 %194, 20
  %gen111 = mul i32 %205, 20
  %_112 = shl i32 %194, 20
  %div10alteredBB = sdiv i32 %194, 20
  %arrayidx11alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 2
  store i32 %div10alteredBB, i32* %arrayidx11alteredBB, align 8
  %206 = load i32, i32* %palteredBB, align 4
  %arrayidx12alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 0
  %207 = load i32, i32* %arrayidx12alteredBB, align 16
  %208 = sub i32 %207, -528897450
  %209 = sub i32 %208, 100
  %210 = add i32 %209, -528897450
  %_113 = sub i32 %207, 100
  %gen114 = mul i32 %210, 100
  %211 = sub i32 0, %207
  %212 = add i32 0, %211
  %_115 = sub i32 0, %207
  %213 = sub i32 0, %212
  %214 = sub i32 0, 100
  %215 = add i32 %213, %214
  %216 = sub i32 0, %215
  %gen116 = add i32 %212, 100
  %217 = add i32 0, -2052500758
  %218 = sub i32 %217, %207
  %219 = sub i32 %218, -2052500758
  %_117 = sub i32 0, %207
  %220 = add i32 %219, 1632407012
  %221 = add i32 %220, 100
  %222 = sub i32 %221, 1632407012
  %gen118 = add i32 %219, 100
  %mul13alteredBB = mul nsw i32 %207, 100
  %_119 = shl i32 %206, %mul13alteredBB
  %223 = sub i32 0, -412614019
  %224 = sub i32 %223, %206
  %225 = add i32 %224, -412614019
  %_120 = sub i32 0, %206
  %226 = add i32 %225, -1881900051
  %227 = add i32 %226, %mul13alteredBB
  %228 = sub i32 %227, -1881900051
  %gen121 = add i32 %225, %mul13alteredBB
  %229 = add i32 0, -2074394204
  %230 = sub i32 %229, %206
  %231 = sub i32 %230, -2074394204
  %_122 = sub i32 0, %206
  %232 = sub i32 %231, 301677949
  %233 = add i32 %232, %mul13alteredBB
  %234 = add i32 %233, 301677949
  %gen123 = add i32 %231, %mul13alteredBB
  %235 = sub i32 0, %mul13alteredBB
  %236 = add i32 %206, %235
  %_124 = sub i32 %206, %mul13alteredBB
  %gen125 = mul i32 %236, %mul13alteredBB
  %_126 = shl i32 %206, %mul13alteredBB
  %237 = add i32 0, -840850875
  %238 = sub i32 %237, %206
  %239 = sub i32 %238, -840850875
  %_127 = sub i32 0, %206
  %240 = sub i32 0, %239
  %241 = sub i32 0, %mul13alteredBB
  %242 = add i32 %240, %241
  %243 = sub i32 0, %242
  %gen128 = add i32 %239, %mul13alteredBB
  %244 = sub i32 %206, 1108926872
  %245 = sub i32 %244, %mul13alteredBB
  %246 = add i32 %245, 1108926872
  %_129 = sub i32 %206, %mul13alteredBB
  %gen130 = mul i32 %246, %mul13alteredBB
  %247 = sub i32 0, %mul13alteredBB
  %248 = add i32 %206, %247
  %sub14alteredBB = sub nsw i32 %206, %mul13alteredBB
  %arrayidx15alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 1
  %249 = load i32, i32* %arrayidx15alteredBB, align 4
  %250 = add i32 %249, 519485582
  %251 = sub i32 %250, 50
  %252 = sub i32 %251, 519485582
  %_131 = sub i32 %249, 50
  %gen132 = mul i32 %252, 50
  %mul16alteredBB = mul nsw i32 %249, 50
  %253 = sub i32 0, %248
  %254 = add i32 0, %253
  %_133 = sub i32 0, %248
  %255 = add i32 %254, 303053688
  %256 = add i32 %255, %mul16alteredBB
  %257 = sub i32 %256, 303053688
  %gen134 = add i32 %254, %mul16alteredBB
  %258 = sub i32 %248, 573735854
  %259 = sub i32 %258, %mul16alteredBB
  %260 = add i32 %259, 573735854
  %_135 = sub i32 %248, %mul16alteredBB
  %gen136 = mul i32 %260, %mul16alteredBB
  %261 = sub i32 %248, 1244413407
  %262 = sub i32 %261, %mul16alteredBB
  %263 = add i32 %262, 1244413407
  %_137 = sub i32 %248, %mul16alteredBB
  %gen138 = mul i32 %263, %mul16alteredBB
  %_139 = shl i32 %248, %mul16alteredBB
  %_140 = shl i32 %248, %mul16alteredBB
  %264 = sub i32 %248, 645237752
  %265 = sub i32 %264, %mul16alteredBB
  %266 = add i32 %265, 645237752
  %sub17alteredBB = sub nsw i32 %248, %mul16alteredBB
  %arrayidx18alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 2
  %267 = load i32, i32* %arrayidx18alteredBB, align 8
  %268 = add i32 %267, -1371793762
  %269 = sub i32 %268, 20
  %270 = sub i32 %269, -1371793762
  %_141 = sub i32 %267, 20
  %gen142 = mul i32 %270, 20
  %_143 = shl i32 %267, 20
  %271 = sub i32 0, 20408030
  %272 = sub i32 %271, %267
  %273 = add i32 %272, 20408030
  %_144 = sub i32 0, %267
  %274 = sub i32 0, %273
  %275 = sub i32 0, 20
  %276 = add i32 %274, %275
  %277 = sub i32 0, %276
  %gen145 = add i32 %273, 20
  %mul19alteredBB = mul nsw i32 %267, 20
  %278 = sub i32 0, -268527216
  %279 = sub i32 %278, %266
  %280 = add i32 %279, -268527216
  %_146 = sub i32 0, %266
  %281 = add i32 %280, 1324606812
  %282 = add i32 %281, %mul19alteredBB
  %283 = sub i32 %282, 1324606812
  %gen147 = add i32 %280, %mul19alteredBB
  %284 = add i32 %266, -1945004901
  %285 = sub i32 %284, %mul19alteredBB
  %286 = sub i32 %285, -1945004901
  %sub20alteredBB = sub nsw i32 %266, %mul19alteredBB
  %287 = add i32 0, -1195363860
  %288 = sub i32 %287, %286
  %289 = sub i32 %288, -1195363860
  %_148 = sub i32 0, %286
  %290 = sub i32 0, %289
  %291 = sub i32 0, 10
  %292 = add i32 %290, %291
  %293 = sub i32 0, %292
  %gen149 = add i32 %289, 10
  %294 = sub i32 0, 10
  %295 = add i32 %286, %294
  %_150 = sub i32 %286, 10
  %gen151 = mul i32 %295, 10
  %296 = add i32 0, 616589288
  %297 = sub i32 %296, %286
  %298 = sub i32 %297, 616589288
  %_152 = sub i32 0, %286
  %299 = sub i32 0, 10
  %300 = sub i32 %298, %299
  %gen153 = add i32 %298, 10
  %_154 = shl i32 %286, 10
  %_155 = shl i32 %286, 10
  %div21alteredBB = sdiv i32 %286, 10
  %arrayidx22alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 3
  store i32 %div21alteredBB, i32* %arrayidx22alteredBB, align 4
  %301 = load i32, i32* %palteredBB, align 4
  %arrayidx23alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 0
  %302 = load i32, i32* %arrayidx23alteredBB, align 16
  %303 = sub i32 %302, -50250351
  %304 = sub i32 %303, 100
  %305 = add i32 %304, -50250351
  %_156 = sub i32 %302, 100
  %gen157 = mul i32 %305, 100
  %306 = sub i32 0, %302
  %307 = add i32 0, %306
  %_158 = sub i32 0, %302
  %308 = sub i32 %307, -841260173
  %309 = add i32 %308, 100
  %310 = add i32 %309, -841260173
  %gen159 = add i32 %307, 100
  %311 = sub i32 0, %302
  %312 = add i32 0, %311
  %_160 = sub i32 0, %302
  %313 = add i32 %312, 963117521
  %314 = add i32 %313, 100
  %315 = sub i32 %314, 963117521
  %gen161 = add i32 %312, 100
  %316 = add i32 %302, 1927697416
  %317 = sub i32 %316, 100
  %318 = sub i32 %317, 1927697416
  %_162 = sub i32 %302, 100
  %gen163 = mul i32 %318, 100
  %319 = add i32 %302, -317937109
  %320 = sub i32 %319, 100
  %321 = sub i32 %320, -317937109
  %_164 = sub i32 %302, 100
  %gen165 = mul i32 %321, 100
  %322 = add i32 %302, -276926932
  %323 = sub i32 %322, 100
  %324 = sub i32 %323, -276926932
  %_166 = sub i32 %302, 100
  %gen167 = mul i32 %324, 100
  %325 = sub i32 0, %302
  %326 = add i32 0, %325
  %_168 = sub i32 0, %302
  %327 = add i32 %326, -1910337274
  %328 = add i32 %327, 100
  %329 = sub i32 %328, -1910337274
  %gen169 = add i32 %326, 100
  %mul24alteredBB = mul nsw i32 %302, 100
  %330 = add i32 %301, -1465180380
  %331 = sub i32 %330, %mul24alteredBB
  %332 = sub i32 %331, -1465180380
  %_170 = sub i32 %301, %mul24alteredBB
  %gen171 = mul i32 %332, %mul24alteredBB
  %_172 = shl i32 %301, %mul24alteredBB
  %333 = sub i32 0, 5014811
  %334 = sub i32 %333, %301
  %335 = add i32 %334, 5014811
  %_173 = sub i32 0, %301
  %336 = sub i32 %335, 546392635
  %337 = add i32 %336, %mul24alteredBB
  %338 = add i32 %337, 546392635
  %gen174 = add i32 %335, %mul24alteredBB
  %339 = sub i32 %301, -1968543596
  %340 = sub i32 %339, %mul24alteredBB
  %341 = add i32 %340, -1968543596
  %_175 = sub i32 %301, %mul24alteredBB
  %gen176 = mul i32 %341, %mul24alteredBB
  %342 = sub i32 %301, -341954432
  %343 = sub i32 %342, %mul24alteredBB
  %344 = add i32 %343, -341954432
  %_177 = sub i32 %301, %mul24alteredBB
  %gen178 = mul i32 %344, %mul24alteredBB
  %345 = sub i32 %301, -82263008
  %346 = sub i32 %345, %mul24alteredBB
  %347 = add i32 %346, -82263008
  %sub25alteredBB = sub nsw i32 %301, %mul24alteredBB
  %arrayidx26alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 1
  %348 = load i32, i32* %arrayidx26alteredBB, align 4
  %349 = sub i32 0, %348
  %350 = add i32 0, %349
  %_179 = sub i32 0, %348
  %351 = add i32 %350, -1671061369
  %352 = add i32 %351, 50
  %353 = sub i32 %352, -1671061369
  %gen180 = add i32 %350, 50
  %mul27alteredBB = mul nsw i32 %348, 50
  %_181 = shl i32 %347, %mul27alteredBB
  %354 = sub i32 0, %347
  %355 = add i32 0, %354
  %_182 = sub i32 0, %347
  %356 = sub i32 0, %355
  %357 = sub i32 0, %mul27alteredBB
  %358 = add i32 %356, %357
  %359 = sub i32 0, %358
  %gen183 = add i32 %355, %mul27alteredBB
  %_184 = shl i32 %347, %mul27alteredBB
  %360 = sub i32 0, 1964705362
  %361 = sub i32 %360, %347
  %362 = add i32 %361, 1964705362
  %_185 = sub i32 0, %347
  %363 = sub i32 %362, -587937845
  %364 = add i32 %363, %mul27alteredBB
  %365 = add i32 %364, -587937845
  %gen186 = add i32 %362, %mul27alteredBB
  %366 = sub i32 0, -1013488026
  %367 = sub i32 %366, %347
  %368 = add i32 %367, -1013488026
  %_187 = sub i32 0, %347
  %369 = sub i32 %368, -1921235850
  %370 = add i32 %369, %mul27alteredBB
  %371 = add i32 %370, -1921235850
  %gen188 = add i32 %368, %mul27alteredBB
  %372 = sub i32 %347, -2025578351
  %373 = sub i32 %372, %mul27alteredBB
  %374 = add i32 %373, -2025578351
  %_189 = sub i32 %347, %mul27alteredBB
  %gen190 = mul i32 %374, %mul27alteredBB
  %_191 = shl i32 %347, %mul27alteredBB
  %375 = sub i32 %347, 75106217
  %376 = sub i32 %375, %mul27alteredBB
  %377 = add i32 %376, 75106217
  %sub28alteredBB = sub nsw i32 %347, %mul27alteredBB
  %arrayidx29alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 2
  %378 = load i32, i32* %arrayidx29alteredBB, align 8
  %379 = sub i32 0, 20
  %380 = add i32 %378, %379
  %_192 = sub i32 %378, 20
  %gen193 = mul i32 %380, 20
  %381 = sub i32 0, %378
  %382 = add i32 0, %381
  %_194 = sub i32 0, %378
  %383 = sub i32 %382, 749778322
  %384 = add i32 %383, 20
  %385 = add i32 %384, 749778322
  %gen195 = add i32 %382, 20
  %386 = sub i32 0, %378
  %387 = add i32 0, %386
  %_196 = sub i32 0, %378
  %388 = add i32 %387, -1436279178
  %389 = add i32 %388, 20
  %390 = sub i32 %389, -1436279178
  %gen197 = add i32 %387, 20
  %391 = sub i32 %378, 456629857
  %392 = sub i32 %391, 20
  %393 = add i32 %392, 456629857
  %_198 = sub i32 %378, 20
  %gen199 = mul i32 %393, 20
  %394 = add i32 %378, -235665964
  %395 = sub i32 %394, 20
  %396 = sub i32 %395, -235665964
  %_200 = sub i32 %378, 20
  %gen201 = mul i32 %396, 20
  %397 = add i32 0, -1779986396
  %398 = sub i32 %397, %378
  %399 = sub i32 %398, -1779986396
  %_202 = sub i32 0, %378
  %400 = sub i32 0, 20
  %401 = sub i32 %399, %400
  %gen203 = add i32 %399, 20
  %mul30alteredBB = mul nsw i32 %378, 20
  %402 = sub i32 0, -1021537390
  %403 = sub i32 %402, %377
  %404 = add i32 %403, -1021537390
  %_204 = sub i32 0, %377
  %405 = add i32 %404, 743258704
  %406 = add i32 %405, %mul30alteredBB
  %407 = sub i32 %406, 743258704
  %gen205 = add i32 %404, %mul30alteredBB
  %_206 = shl i32 %377, %mul30alteredBB
  %408 = add i32 %377, 1627775056
  %409 = sub i32 %408, %mul30alteredBB
  %410 = sub i32 %409, 1627775056
  %_207 = sub i32 %377, %mul30alteredBB
  %gen208 = mul i32 %410, %mul30alteredBB
  %411 = sub i32 0, %mul30alteredBB
  %412 = add i32 %377, %411
  %_209 = sub i32 %377, %mul30alteredBB
  %gen210 = mul i32 %412, %mul30alteredBB
  %413 = add i32 %377, -1241942230
  %414 = sub i32 %413, %mul30alteredBB
  %415 = sub i32 %414, -1241942230
  %sub31alteredBB = sub nsw i32 %377, %mul30alteredBB
  %arrayidx32alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 3
  %416 = load i32, i32* %arrayidx32alteredBB, align 4
  %417 = add i32 0, -1438854722
  %418 = sub i32 %417, %416
  %419 = sub i32 %418, -1438854722
  %_211 = sub i32 0, %416
  %420 = sub i32 0, 10
  %421 = sub i32 %419, %420
  %gen212 = add i32 %419, 10
  %422 = add i32 %416, -1869392680
  %423 = sub i32 %422, 10
  %424 = sub i32 %423, -1869392680
  %_213 = sub i32 %416, 10
  %gen214 = mul i32 %424, 10
  %mul33alteredBB = mul nsw i32 %416, 10
  %425 = sub i32 0, 2115419823
  %426 = sub i32 %425, %415
  %427 = add i32 %426, 2115419823
  %_215 = sub i32 0, %415
  %428 = sub i32 %427, 1129229043
  %429 = add i32 %428, %mul33alteredBB
  %430 = add i32 %429, 1129229043
  %gen216 = add i32 %427, %mul33alteredBB
  %431 = sub i32 0, %mul33alteredBB
  %432 = add i32 %415, %431
  %_217 = sub i32 %415, %mul33alteredBB
  %gen218 = mul i32 %432, %mul33alteredBB
  %433 = sub i32 0, %415
  %434 = add i32 0, %433
  %_219 = sub i32 0, %415
  %435 = sub i32 0, %434
  %436 = sub i32 0, %mul33alteredBB
  %437 = add i32 %435, %436
  %438 = sub i32 0, %437
  %gen220 = add i32 %434, %mul33alteredBB
  %439 = add i32 %415, -2106626127
  %440 = sub i32 %439, %mul33alteredBB
  %441 = sub i32 %440, -2106626127
  %sub34alteredBB = sub nsw i32 %415, %mul33alteredBB
  %_221 = shl i32 %441, 5
  %_222 = shl i32 %441, 5
  %_223 = shl i32 %441, 5
  %div35alteredBB = sdiv i32 %441, 5
  %arrayidx36alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 4
  store i32 %div35alteredBB, i32* %arrayidx36alteredBB, align 16
  %442 = load i32, i32* %palteredBB, align 4
  %arrayidx37alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 0
  %443 = load i32, i32* %arrayidx37alteredBB, align 16
  %_224 = shl i32 %443, 100
  %mul38alteredBB = mul nsw i32 %443, 100
  %_225 = shl i32 %442, %mul38alteredBB
  %_226 = shl i32 %442, %mul38alteredBB
  %444 = sub i32 %442, 1420486145
  %445 = sub i32 %444, %mul38alteredBB
  %446 = add i32 %445, 1420486145
  %sub39alteredBB = sub nsw i32 %442, %mul38alteredBB
  %arrayidx40alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 1
  %447 = load i32, i32* %arrayidx40alteredBB, align 4
  %448 = sub i32 0, -2090514325
  %449 = sub i32 %448, %447
  %450 = add i32 %449, -2090514325
  %_227 = sub i32 0, %447
  %451 = add i32 %450, 221476533
  %452 = add i32 %451, 50
  %453 = sub i32 %452, 221476533
  %gen228 = add i32 %450, 50
  %454 = sub i32 0, 1304359473
  %455 = sub i32 %454, %447
  %456 = add i32 %455, 1304359473
  %_229 = sub i32 0, %447
  %457 = sub i32 %456, -1148724455
  %458 = add i32 %457, 50
  %459 = add i32 %458, -1148724455
  %gen230 = add i32 %456, 50
  %460 = sub i32 0, %447
  %461 = add i32 0, %460
  %_231 = sub i32 0, %447
  %462 = sub i32 0, %461
  %463 = sub i32 0, 50
  %464 = add i32 %462, %463
  %465 = sub i32 0, %464
  %gen232 = add i32 %461, 50
  %_233 = shl i32 %447, 50
  %mul41alteredBB = mul nsw i32 %447, 50
  %466 = sub i32 %446, 1558259517
  %467 = sub i32 %466, %mul41alteredBB
  %468 = add i32 %467, 1558259517
  %_234 = sub i32 %446, %mul41alteredBB
  %gen235 = mul i32 %468, %mul41alteredBB
  %469 = sub i32 %446, 204680876
  %470 = sub i32 %469, %mul41alteredBB
  %471 = add i32 %470, 204680876
  %_236 = sub i32 %446, %mul41alteredBB
  %gen237 = mul i32 %471, %mul41alteredBB
  %472 = sub i32 0, 1879204201
  %473 = sub i32 %472, %446
  %474 = add i32 %473, 1879204201
  %_238 = sub i32 0, %446
  %475 = sub i32 0, %474
  %476 = sub i32 0, %mul41alteredBB
  %477 = add i32 %475, %476
  %478 = sub i32 0, %477
  %gen239 = add i32 %474, %mul41alteredBB
  %_240 = shl i32 %446, %mul41alteredBB
  %479 = sub i32 0, -1261900217
  %480 = sub i32 %479, %446
  %481 = add i32 %480, -1261900217
  %_241 = sub i32 0, %446
  %482 = sub i32 0, %481
  %483 = sub i32 0, %mul41alteredBB
  %484 = add i32 %482, %483
  %485 = sub i32 0, %484
  %gen242 = add i32 %481, %mul41alteredBB
  %486 = add i32 0, 828229981
  %487 = sub i32 %486, %446
  %488 = sub i32 %487, 828229981
  %_243 = sub i32 0, %446
  %489 = sub i32 %488, 1567028771
  %490 = add i32 %489, %mul41alteredBB
  %491 = add i32 %490, 1567028771
  %gen244 = add i32 %488, %mul41alteredBB
  %492 = sub i32 %446, -1893415288
  %493 = sub i32 %492, %mul41alteredBB
  %494 = add i32 %493, -1893415288
  %sub42alteredBB = sub nsw i32 %446, %mul41alteredBB
  %arrayidx43alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 2
  %495 = load i32, i32* %arrayidx43alteredBB, align 8
  %_245 = shl i32 %495, 20
  %_246 = shl i32 %495, 20
  %496 = sub i32 0, -270502744
  %497 = sub i32 %496, %495
  %498 = add i32 %497, -270502744
  %_247 = sub i32 0, %495
  %499 = sub i32 0, %498
  %500 = sub i32 0, 20
  %501 = add i32 %499, %500
  %502 = sub i32 0, %501
  %gen248 = add i32 %498, 20
  %_249 = shl i32 %495, 20
  %_250 = shl i32 %495, 20
  %503 = sub i32 0, %495
  %504 = add i32 0, %503
  %_251 = sub i32 0, %495
  %505 = add i32 %504, -2070229244
  %506 = add i32 %505, 20
  %507 = sub i32 %506, -2070229244
  %gen252 = add i32 %504, 20
  %mul44alteredBB = mul nsw i32 %495, 20
  %508 = sub i32 0, %494
  %509 = add i32 0, %508
  %_253 = sub i32 0, %494
  %510 = sub i32 0, %509
  %511 = sub i32 0, %mul44alteredBB
  %512 = add i32 %510, %511
  %513 = sub i32 0, %512
  %gen254 = add i32 %509, %mul44alteredBB
  %_255 = shl i32 %494, %mul44alteredBB
  %514 = sub i32 0, -2037312569
  %515 = sub i32 %514, %494
  %516 = add i32 %515, -2037312569
  %_256 = sub i32 0, %494
  %517 = sub i32 0, %mul44alteredBB
  %518 = sub i32 %516, %517
  %gen257 = add i32 %516, %mul44alteredBB
  %519 = sub i32 %494, 138944091
  %520 = sub i32 %519, %mul44alteredBB
  %521 = add i32 %520, 138944091
  %_258 = sub i32 %494, %mul44alteredBB
  %gen259 = mul i32 %521, %mul44alteredBB
  %522 = sub i32 0, %mul44alteredBB
  %523 = add i32 %494, %522
  %_260 = sub i32 %494, %mul44alteredBB
  %gen261 = mul i32 %523, %mul44alteredBB
  %524 = sub i32 0, %mul44alteredBB
  %525 = add i32 %494, %524
  %_262 = sub i32 %494, %mul44alteredBB
  %gen263 = mul i32 %525, %mul44alteredBB
  %_264 = shl i32 %494, %mul44alteredBB
  %526 = sub i32 %494, -464912229
  %527 = sub i32 %526, %mul44alteredBB
  %528 = add i32 %527, -464912229
  %sub45alteredBB = sub nsw i32 %494, %mul44alteredBB
  %arrayidx46alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 3
  %529 = load i32, i32* %arrayidx46alteredBB, align 4
  %530 = sub i32 0, 10
  %531 = add i32 %529, %530
  %_265 = sub i32 %529, 10
  %gen266 = mul i32 %531, 10
  %_267 = shl i32 %529, 10
  %532 = sub i32 0, 10
  %533 = add i32 %529, %532
  %_268 = sub i32 %529, 10
  %gen269 = mul i32 %533, 10
  %_270 = shl i32 %529, 10
  %534 = add i32 %529, 100221855
  %535 = sub i32 %534, 10
  %536 = sub i32 %535, 100221855
  %_271 = sub i32 %529, 10
  %gen272 = mul i32 %536, 10
  %537 = sub i32 0, -2050649727
  %538 = sub i32 %537, %529
  %539 = add i32 %538, -2050649727
  %_273 = sub i32 0, %529
  %540 = sub i32 0, %539
  %541 = sub i32 0, 10
  %542 = add i32 %540, %541
  %543 = sub i32 0, %542
  %gen274 = add i32 %539, 10
  %544 = add i32 %529, 553782134
  %545 = sub i32 %544, 10
  %546 = sub i32 %545, 553782134
  %_275 = sub i32 %529, 10
  %gen276 = mul i32 %546, 10
  %mul47alteredBB = mul nsw i32 %529, 10
  %547 = add i32 %528, -1687788404
  %548 = sub i32 %547, %mul47alteredBB
  %549 = sub i32 %548, -1687788404
  %_277 = sub i32 %528, %mul47alteredBB
  %gen278 = mul i32 %549, %mul47alteredBB
  %550 = add i32 0, 450075997
  %551 = sub i32 %550, %528
  %552 = sub i32 %551, 450075997
  %_279 = sub i32 0, %528
  %553 = add i32 %552, -474491326
  %554 = add i32 %553, %mul47alteredBB
  %555 = sub i32 %554, -474491326
  %gen280 = add i32 %552, %mul47alteredBB
  %556 = sub i32 %528, -2045835056
  %557 = sub i32 %556, %mul47alteredBB
  %558 = add i32 %557, -2045835056
  %_281 = sub i32 %528, %mul47alteredBB
  %gen282 = mul i32 %558, %mul47alteredBB
  %559 = sub i32 0, %mul47alteredBB
  %560 = add i32 %528, %559
  %_283 = sub i32 %528, %mul47alteredBB
  %gen284 = mul i32 %560, %mul47alteredBB
  %561 = sub i32 %528, -687409617
  %562 = sub i32 %561, %mul47alteredBB
  %563 = add i32 %562, -687409617
  %sub48alteredBB = sub nsw i32 %528, %mul47alteredBB
  %arrayidx49alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 4
  %564 = load i32, i32* %arrayidx49alteredBB, align 16
  %565 = sub i32 0, 530168043
  %566 = sub i32 %565, %564
  %567 = add i32 %566, 530168043
  %_285 = sub i32 0, %564
  %568 = sub i32 0, %567
  %569 = sub i32 0, 5
  %570 = add i32 %568, %569
  %571 = sub i32 0, %570
  %gen286 = add i32 %567, 5
  %572 = sub i32 0, 1312536529
  %573 = sub i32 %572, %564
  %574 = add i32 %573, 1312536529
  %_287 = sub i32 0, %564
  %575 = sub i32 0, %574
  %576 = sub i32 0, 5
  %577 = add i32 %575, %576
  %578 = sub i32 0, %577
  %gen288 = add i32 %574, 5
  %579 = sub i32 0, -323794454
  %580 = sub i32 %579, %564
  %581 = add i32 %580, -323794454
  %_289 = sub i32 0, %564
  %582 = sub i32 0, 5
  %583 = sub i32 %581, %582
  %gen290 = add i32 %581, 5
  %_291 = shl i32 %564, 5
  %mul50alteredBB = mul nsw i32 %564, 5
  %584 = add i32 %563, 711174799
  %585 = sub i32 %584, %mul50alteredBB
  %586 = sub i32 %585, 711174799
  %_292 = sub i32 %563, %mul50alteredBB
  %gen293 = mul i32 %586, %mul50alteredBB
  %_294 = shl i32 %563, %mul50alteredBB
  %_295 = shl i32 %563, %mul50alteredBB
  %_296 = shl i32 %563, %mul50alteredBB
  %_297 = shl i32 %563, %mul50alteredBB
  %587 = add i32 %563, -818764460
  %588 = sub i32 %587, %mul50alteredBB
  %589 = sub i32 %588, -818764460
  %sub51alteredBB = sub nsw i32 %563, %mul50alteredBB
  %arrayidx52alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 5
  store i32 %589, i32* %arrayidx52alteredBB, align 4
  store i32 0, i32* %ialteredBB, align 4
  store i32 -111188260, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBBalteredBB, %for.inc, %for.body, %for.cond, %originalBBpart2, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_3555.cpp() #0 section ".text.startup" {
entry:
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
