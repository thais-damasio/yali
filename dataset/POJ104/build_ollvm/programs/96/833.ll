; ModuleID = 'source-C-CXX/96/833.c'
source_filename = "source-C-CXX/96/833.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %cmp116.reg2mem = alloca i1
  %cmp.reg2mem = alloca i1
  %f.reg2mem = alloca i32*
  %e.reg2mem = alloca i32*
  %d.reg2mem = alloca i32*
  %c.reg2mem = alloca i32*
  %b.reg2mem = alloca i32*
  %a.reg2mem = alloca i32*
  %n.reg2mem = alloca i32*
  %.reg2mem521 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = sub i32 0, 1
  %3 = add i32 %0, %2
  %4 = sub i32 %0, 1
  %5 = mul i32 %0, %3
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  store i1 %7, i1* %.reg2mem
  %8 = icmp slt i32 %1, 10
  store i1 %8, i1* %.reg2mem521
  %switchVar = alloca i32
  store i32 -1126859188, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar520 = load i32, i32* %switchVar
  switch i32 %switchVar520, label %switchDefault [
    i32 -1126859188, label %first
    i32 -1223369157, label %originalBB
    i32 -872006176, label %originalBBpart2
    i32 1593493106, label %if.then
    i32 401000571, label %if.else
    i32 -1098433954, label %land.lhs.true
    i32 -499329277, label %if.then47
    i32 1989815746, label %if.else59
    i32 793033350, label %if.then65
    i32 -841064642, label %if.end
    i32 -1534644521, label %if.end66
    i32 -909539818, label %if.end67
    i32 -846126470, label %if.then77
    i32 -1805622368, label %originalBB236
    i32 -860223120, label %originalBBpart2459
    i32 1036908483, label %if.else107
    i32 1328580754, label %originalBB461
    i32 -928737086, label %originalBBpart2514
    i32 132940438, label %if.then117
    i32 -1751430141, label %if.end128
    i32 -1274784147, label %if.end129
    i32 1404319725, label %originalBB516
    i32 1748256254, label %originalBBpart2518
    i32 -1935341785, label %originalBBalteredBB
    i32 -1023062070, label %originalBB236alteredBB
    i32 -1829010275, label %originalBB461alteredBB
    i32 -1635234260, label %originalBB516alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload522 = load volatile i1, i1* %.reg2mem521
  %9 = and i1 %.reload, %.reload522
  %10 = xor i1 %.reload, %.reload522
  %11 = or i1 %9, %10
  %12 = or i1 %.reload, %.reload522
  %13 = select i1 %11, i32 -1223369157, i32 -1935341785
  store i32 %13, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %n, i32** %n.reg2mem
  %a = alloca i32, align 4
  store i32* %a, i32** %a.reg2mem
  %b = alloca i32, align 4
  store i32* %b, i32** %b.reg2mem
  %c = alloca i32, align 4
  store i32* %c, i32** %c.reg2mem
  %d = alloca i32, align 4
  store i32* %d, i32** %d.reg2mem
  %e = alloca i32, align 4
  store i32* %e, i32** %e.reg2mem
  %f = alloca i32, align 4
  store i32* %f, i32** %f.reg2mem
  store i32 0, i32* %retval, align 4
  %n.reload546 = load volatile i32*, i32** %n.reg2mem
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %n.reload546)
  %n.reload545 = load volatile i32*, i32** %n.reg2mem
  %14 = load i32, i32* %n.reload545, align 4
  %n.reload544 = load volatile i32*, i32** %n.reg2mem
  %15 = load i32, i32* %n.reload544, align 4
  %rem = srem i32 %15, 100
  %16 = sub i32 0, %rem
  %17 = add i32 %14, %16
  %sub = sub nsw i32 %14, %rem
  %div = sdiv i32 %17, 100
  %a.reload570 = load volatile i32*, i32** %a.reg2mem
  store i32 %div, i32* %a.reload570, align 4
  %n.reload543 = load volatile i32*, i32** %n.reg2mem
  %18 = load i32, i32* %n.reload543, align 4
  %a.reload569 = load volatile i32*, i32** %a.reg2mem
  %19 = load i32, i32* %a.reload569, align 4
  %mul = mul nsw i32 %19, 100
  %20 = add i32 %18, 1836433881
  %21 = sub i32 %20, %mul
  %22 = sub i32 %21, 1836433881
  %sub1 = sub nsw i32 %18, %mul
  %n.reload542 = load volatile i32*, i32** %n.reg2mem
  %23 = load i32, i32* %n.reload542, align 4
  %a.reload568 = load volatile i32*, i32** %a.reg2mem
  %24 = load i32, i32* %a.reload568, align 4
  %mul2 = mul nsw i32 %24, 100
  %25 = add i32 %23, -533520837
  %26 = sub i32 %25, %mul2
  %27 = sub i32 %26, -533520837
  %sub3 = sub nsw i32 %23, %mul2
  %rem4 = srem i32 %27, 50
  %28 = sub i32 0, %rem4
  %29 = add i32 %22, %28
  %sub5 = sub nsw i32 %22, %rem4
  %div6 = sdiv i32 %29, 50
  %b.reload592 = load volatile i32*, i32** %b.reg2mem
  store i32 %div6, i32* %b.reload592, align 4
  %n.reload541 = load volatile i32*, i32** %n.reg2mem
  %30 = load i32, i32* %n.reload541, align 4
  %a.reload567 = load volatile i32*, i32** %a.reg2mem
  %31 = load i32, i32* %a.reload567, align 4
  %mul7 = mul nsw i32 %31, 100
  %32 = sub i32 0, %mul7
  %33 = add i32 %30, %32
  %sub8 = sub nsw i32 %30, %mul7
  %b.reload591 = load volatile i32*, i32** %b.reg2mem
  %34 = load i32, i32* %b.reload591, align 4
  %mul9 = mul nsw i32 %34, 50
  %35 = sub i32 %33, -1788472042
  %36 = sub i32 %35, %mul9
  %37 = add i32 %36, -1788472042
  %sub10 = sub nsw i32 %33, %mul9
  %cmp = icmp sge i32 %37, 20
  store i1 %cmp, i1* %cmp.reg2mem
  %38 = load i32, i32* @x
  %39 = load i32, i32* @y
  %40 = sub i32 %38, -1992007953
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1992007953
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -872006176, i32 -1935341785
  store i32 %52, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  %cmp.reload = load volatile i1, i1* %cmp.reg2mem
  %53 = select i1 %cmp.reload, i32 1593493106, i32 401000571
  store i32 %53, i32* %switchVar
  br label %loopEnd

if.then:                                          ; preds = %loopEntry
  %n.reload540 = load volatile i32*, i32** %n.reg2mem
  %54 = load i32, i32* %n.reload540, align 4
  %a.reload566 = load volatile i32*, i32** %a.reg2mem
  %55 = load i32, i32* %a.reload566, align 4
  %mul11 = mul nsw i32 %55, 100
  %56 = sub i32 %54, 2136313100
  %57 = sub i32 %56, %mul11
  %58 = add i32 %57, 2136313100
  %sub12 = sub nsw i32 %54, %mul11
  %b.reload590 = load volatile i32*, i32** %b.reg2mem
  %59 = load i32, i32* %b.reload590, align 4
  %mul13 = mul nsw i32 %59, 50
  %60 = add i32 %58, 1379179894
  %61 = sub i32 %60, %mul13
  %62 = sub i32 %61, 1379179894
  %sub14 = sub nsw i32 %58, %mul13
  %n.reload539 = load volatile i32*, i32** %n.reg2mem
  %63 = load i32, i32* %n.reload539, align 4
  %a.reload565 = load volatile i32*, i32** %a.reg2mem
  %64 = load i32, i32* %a.reload565, align 4
  %mul15 = mul nsw i32 %64, 100
  %65 = add i32 %63, -1647386237
  %66 = sub i32 %65, %mul15
  %67 = sub i32 %66, -1647386237
  %sub16 = sub nsw i32 %63, %mul15
  %b.reload589 = load volatile i32*, i32** %b.reg2mem
  %68 = load i32, i32* %b.reload589, align 4
  %mul17 = mul nsw i32 %68, 50
  %69 = sub i32 %67, 30253910
  %70 = sub i32 %69, %mul17
  %71 = add i32 %70, 30253910
  %sub18 = sub nsw i32 %67, %mul17
  %rem19 = srem i32 %71, 20
  %72 = sub i32 %62, 1960771387
  %73 = sub i32 %72, %rem19
  %74 = add i32 %73, 1960771387
  %sub20 = sub nsw i32 %62, %rem19
  %div21 = sdiv i32 %74, 20
  %c.reload608 = load volatile i32*, i32** %c.reg2mem
  store i32 %div21, i32* %c.reload608, align 4
  %n.reload538 = load volatile i32*, i32** %n.reg2mem
  %75 = load i32, i32* %n.reload538, align 4
  %a.reload564 = load volatile i32*, i32** %a.reg2mem
  %76 = load i32, i32* %a.reload564, align 4
  %mul22 = mul nsw i32 %76, 100
  %77 = sub i32 0, %mul22
  %78 = add i32 %75, %77
  %sub23 = sub nsw i32 %75, %mul22
  %b.reload588 = load volatile i32*, i32** %b.reg2mem
  %79 = load i32, i32* %b.reload588, align 4
  %mul24 = mul nsw i32 %79, 50
  %80 = add i32 %78, -1688689773
  %81 = sub i32 %80, %mul24
  %82 = sub i32 %81, -1688689773
  %sub25 = sub nsw i32 %78, %mul24
  %c.reload607 = load volatile i32*, i32** %c.reg2mem
  %83 = load i32, i32* %c.reload607, align 4
  %mul26 = mul nsw i32 %83, 20
  %84 = add i32 %82, -278250434
  %85 = sub i32 %84, %mul26
  %86 = sub i32 %85, -278250434
  %sub27 = sub nsw i32 %82, %mul26
  %n.reload537 = load volatile i32*, i32** %n.reg2mem
  %87 = load i32, i32* %n.reload537, align 4
  %a.reload563 = load volatile i32*, i32** %a.reg2mem
  %88 = load i32, i32* %a.reload563, align 4
  %mul28 = mul nsw i32 %88, 100
  %89 = sub i32 0, %mul28
  %90 = add i32 %87, %89
  %sub29 = sub nsw i32 %87, %mul28
  %b.reload587 = load volatile i32*, i32** %b.reg2mem
  %91 = load i32, i32* %b.reload587, align 4
  %mul30 = mul nsw i32 %91, 50
  %92 = sub i32 0, %mul30
  %93 = add i32 %90, %92
  %sub31 = sub nsw i32 %90, %mul30
  %c.reload606 = load volatile i32*, i32** %c.reg2mem
  %94 = load i32, i32* %c.reload606, align 4
  %mul32 = mul nsw i32 %94, 20
  %95 = add i32 %93, 224272572
  %96 = sub i32 %95, %mul32
  %97 = sub i32 %96, 224272572
  %sub33 = sub nsw i32 %93, %mul32
  %rem34 = srem i32 %97, 10
  %98 = sub i32 %86, 1045370604
  %99 = sub i32 %98, %rem34
  %100 = add i32 %99, 1045370604
  %sub35 = sub nsw i32 %86, %rem34
  %div36 = sdiv i32 %100, 10
  %d.reload622 = load volatile i32*, i32** %d.reg2mem
  store i32 %div36, i32* %d.reload622, align 4
  store i32 -909539818, i32* %switchVar
  br label %loopEnd

if.else:                                          ; preds = %loopEntry
  %n.reload536 = load volatile i32*, i32** %n.reg2mem
  %101 = load i32, i32* %n.reload536, align 4
  %a.reload562 = load volatile i32*, i32** %a.reg2mem
  %102 = load i32, i32* %a.reload562, align 4
  %mul37 = mul nsw i32 %102, 100
  %103 = sub i32 0, %mul37
  %104 = add i32 %101, %103
  %sub38 = sub nsw i32 %101, %mul37
  %b.reload586 = load volatile i32*, i32** %b.reg2mem
  %105 = load i32, i32* %b.reload586, align 4
  %mul39 = mul nsw i32 %105, 50
  %106 = add i32 %104, -431567849
  %107 = sub i32 %106, %mul39
  %108 = sub i32 %107, -431567849
  %sub40 = sub nsw i32 %104, %mul39
  %cmp41 = icmp slt i32 %108, 20
  %109 = select i1 %cmp41, i32 -1098433954, i32 1989815746
  store i32 %109, i32* %switchVar
  br label %loopEnd

land.lhs.true:                                    ; preds = %loopEntry
  %n.reload535 = load volatile i32*, i32** %n.reg2mem
  %110 = load i32, i32* %n.reload535, align 4
  %a.reload561 = load volatile i32*, i32** %a.reg2mem
  %111 = load i32, i32* %a.reload561, align 4
  %mul42 = mul nsw i32 %111, 100
  %112 = sub i32 0, %mul42
  %113 = add i32 %110, %112
  %sub43 = sub nsw i32 %110, %mul42
  %b.reload585 = load volatile i32*, i32** %b.reg2mem
  %114 = load i32, i32* %b.reload585, align 4
  %mul44 = mul nsw i32 %114, 50
  %115 = sub i32 0, %mul44
  %116 = add i32 %113, %115
  %sub45 = sub nsw i32 %113, %mul44
  %cmp46 = icmp sge i32 %116, 10
  %117 = select i1 %cmp46, i32 -499329277, i32 1989815746
  store i32 %117, i32* %switchVar
  br label %loopEnd

if.then47:                                        ; preds = %loopEntry
  %c.reload605 = load volatile i32*, i32** %c.reg2mem
  store i32 0, i32* %c.reload605, align 4
  %n.reload534 = load volatile i32*, i32** %n.reg2mem
  %118 = load i32, i32* %n.reload534, align 4
  %a.reload560 = load volatile i32*, i32** %a.reg2mem
  %119 = load i32, i32* %a.reload560, align 4
  %mul48 = mul nsw i32 %119, 100
  %120 = add i32 %118, 188574686
  %121 = sub i32 %120, %mul48
  %122 = sub i32 %121, 188574686
  %sub49 = sub nsw i32 %118, %mul48
  %b.reload584 = load volatile i32*, i32** %b.reg2mem
  %123 = load i32, i32* %b.reload584, align 4
  %mul50 = mul nsw i32 %123, 50
  %124 = sub i32 0, %mul50
  %125 = add i32 %122, %124
  %sub51 = sub nsw i32 %122, %mul50
  %n.reload533 = load volatile i32*, i32** %n.reg2mem
  %126 = load i32, i32* %n.reload533, align 4
  %a.reload559 = load volatile i32*, i32** %a.reg2mem
  %127 = load i32, i32* %a.reload559, align 4
  %mul52 = mul nsw i32 %127, 100
  %128 = sub i32 0, %mul52
  %129 = add i32 %126, %128
  %sub53 = sub nsw i32 %126, %mul52
  %b.reload583 = load volatile i32*, i32** %b.reg2mem
  %130 = load i32, i32* %b.reload583, align 4
  %mul54 = mul nsw i32 %130, 50
  %131 = sub i32 0, %mul54
  %132 = add i32 %129, %131
  %sub55 = sub nsw i32 %129, %mul54
  %rem56 = srem i32 %132, 10
  %133 = add i32 %125, 1129471314
  %134 = sub i32 %133, %rem56
  %135 = sub i32 %134, 1129471314
  %sub57 = sub nsw i32 %125, %rem56
  %div58 = sdiv i32 %135, 10
  %d.reload621 = load volatile i32*, i32** %d.reg2mem
  store i32 %div58, i32* %d.reload621, align 4
  store i32 -1534644521, i32* %switchVar
  br label %loopEnd

if.else59:                                        ; preds = %loopEntry
  %n.reload532 = load volatile i32*, i32** %n.reg2mem
  %136 = load i32, i32* %n.reload532, align 4
  %a.reload558 = load volatile i32*, i32** %a.reg2mem
  %137 = load i32, i32* %a.reload558, align 4
  %mul60 = mul nsw i32 %137, 100
  %138 = sub i32 0, %mul60
  %139 = add i32 %136, %138
  %sub61 = sub nsw i32 %136, %mul60
  %b.reload582 = load volatile i32*, i32** %b.reg2mem
  %140 = load i32, i32* %b.reload582, align 4
  %mul62 = mul nsw i32 %140, 50
  %141 = sub i32 0, %mul62
  %142 = add i32 %139, %141
  %sub63 = sub nsw i32 %139, %mul62
  %cmp64 = icmp slt i32 %142, 10
  %143 = select i1 %cmp64, i32 793033350, i32 -841064642
  store i32 %143, i32* %switchVar
  br label %loopEnd

if.then65:                                        ; preds = %loopEntry
  %c.reload604 = load volatile i32*, i32** %c.reg2mem
  store i32 0, i32* %c.reload604, align 4
  %d.reload620 = load volatile i32*, i32** %d.reg2mem
  store i32 0, i32* %d.reload620, align 4
  store i32 -841064642, i32* %switchVar
  br label %loopEnd

if.end:                                           ; preds = %loopEntry
  store i32 -1534644521, i32* %switchVar
  br label %loopEnd

if.end66:                                         ; preds = %loopEntry
  store i32 -909539818, i32* %switchVar
  br label %loopEnd

if.end67:                                         ; preds = %loopEntry
  %n.reload531 = load volatile i32*, i32** %n.reg2mem
  %144 = load i32, i32* %n.reload531, align 4
  %a.reload557 = load volatile i32*, i32** %a.reg2mem
  %145 = load i32, i32* %a.reload557, align 4
  %mul68 = mul nsw i32 %145, 100
  %146 = add i32 %144, 1878841163
  %147 = sub i32 %146, %mul68
  %148 = sub i32 %147, 1878841163
  %sub69 = sub nsw i32 %144, %mul68
  %b.reload581 = load volatile i32*, i32** %b.reg2mem
  %149 = load i32, i32* %b.reload581, align 4
  %mul70 = mul nsw i32 %149, 50
  %150 = sub i32 0, %mul70
  %151 = add i32 %148, %150
  %sub71 = sub nsw i32 %148, %mul70
  %c.reload603 = load volatile i32*, i32** %c.reg2mem
  %152 = load i32, i32* %c.reload603, align 4
  %mul72 = mul nsw i32 %152, 20
  %153 = sub i32 %151, 1877759774
  %154 = sub i32 %153, %mul72
  %155 = add i32 %154, 1877759774
  %sub73 = sub nsw i32 %151, %mul72
  %d.reload619 = load volatile i32*, i32** %d.reg2mem
  %156 = load i32, i32* %d.reload619, align 4
  %mul74 = mul nsw i32 %156, 10
  %157 = add i32 %155, -877096019
  %158 = sub i32 %157, %mul74
  %159 = sub i32 %158, -877096019
  %sub75 = sub nsw i32 %155, %mul74
  %cmp76 = icmp sge i32 %159, 5
  %160 = select i1 %cmp76, i32 -846126470, i32 1036908483
  store i32 %160, i32* %switchVar
  br label %loopEnd

if.then77:                                        ; preds = %loopEntry
  %161 = load i32, i32* @x
  %162 = load i32, i32* @y
  %163 = sub i32 %161, 1476945652
  %164 = sub i32 %163, 1
  %165 = add i32 %164, 1476945652
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  %187 = select i1 %185, i32 -1805622368, i32 -1023062070
  store i32 %187, i32* %switchVar
  br label %loopEnd

originalBB236:                                    ; preds = %loopEntry
  %n.reload530 = load volatile i32*, i32** %n.reg2mem
  %188 = load i32, i32* %n.reload530, align 4
  %a.reload556 = load volatile i32*, i32** %a.reg2mem
  %189 = load i32, i32* %a.reload556, align 4
  %mul78 = mul nsw i32 %189, 100
  %190 = sub i32 %188, 2097255433
  %191 = sub i32 %190, %mul78
  %192 = add i32 %191, 2097255433
  %sub79 = sub nsw i32 %188, %mul78
  %b.reload580 = load volatile i32*, i32** %b.reg2mem
  %193 = load i32, i32* %b.reload580, align 4
  %mul80 = mul nsw i32 %193, 50
  %194 = sub i32 0, %mul80
  %195 = add i32 %192, %194
  %sub81 = sub nsw i32 %192, %mul80
  %c.reload602 = load volatile i32*, i32** %c.reg2mem
  %196 = load i32, i32* %c.reload602, align 4
  %mul82 = mul nsw i32 %196, 20
  %197 = sub i32 %195, -300464356
  %198 = sub i32 %197, %mul82
  %199 = add i32 %198, -300464356
  %sub83 = sub nsw i32 %195, %mul82
  %d.reload618 = load volatile i32*, i32** %d.reg2mem
  %200 = load i32, i32* %d.reload618, align 4
  %mul84 = mul nsw i32 %200, 10
  %201 = add i32 %199, 2081348912
  %202 = sub i32 %201, %mul84
  %203 = sub i32 %202, 2081348912
  %sub85 = sub nsw i32 %199, %mul84
  %n.reload529 = load volatile i32*, i32** %n.reg2mem
  %204 = load i32, i32* %n.reload529, align 4
  %a.reload555 = load volatile i32*, i32** %a.reg2mem
  %205 = load i32, i32* %a.reload555, align 4
  %mul86 = mul nsw i32 %205, 100
  %206 = add i32 %204, 1076098644
  %207 = sub i32 %206, %mul86
  %208 = sub i32 %207, 1076098644
  %sub87 = sub nsw i32 %204, %mul86
  %b.reload579 = load volatile i32*, i32** %b.reg2mem
  %209 = load i32, i32* %b.reload579, align 4
  %mul88 = mul nsw i32 %209, 50
  %210 = sub i32 %208, 1044036573
  %211 = sub i32 %210, %mul88
  %212 = add i32 %211, 1044036573
  %sub89 = sub nsw i32 %208, %mul88
  %c.reload601 = load volatile i32*, i32** %c.reg2mem
  %213 = load i32, i32* %c.reload601, align 4
  %mul90 = mul nsw i32 %213, 20
  %214 = sub i32 0, %mul90
  %215 = add i32 %212, %214
  %sub91 = sub nsw i32 %212, %mul90
  %d.reload617 = load volatile i32*, i32** %d.reg2mem
  %216 = load i32, i32* %d.reload617, align 4
  %mul92 = mul nsw i32 %216, 10
  %217 = sub i32 0, %mul92
  %218 = add i32 %215, %217
  %sub93 = sub nsw i32 %215, %mul92
  %rem94 = srem i32 %218, 5
  %219 = sub i32 %203, 465135812
  %220 = sub i32 %219, %rem94
  %221 = add i32 %220, 465135812
  %sub95 = sub nsw i32 %203, %rem94
  %div96 = sdiv i32 %221, 5
  %e.reload629 = load volatile i32*, i32** %e.reg2mem
  store i32 %div96, i32* %e.reload629, align 4
  %n.reload528 = load volatile i32*, i32** %n.reg2mem
  %222 = load i32, i32* %n.reload528, align 4
  %a.reload554 = load volatile i32*, i32** %a.reg2mem
  %223 = load i32, i32* %a.reload554, align 4
  %mul97 = mul nsw i32 %223, 100
  %224 = sub i32 0, %mul97
  %225 = add i32 %222, %224
  %sub98 = sub nsw i32 %222, %mul97
  %b.reload578 = load volatile i32*, i32** %b.reg2mem
  %226 = load i32, i32* %b.reload578, align 4
  %mul99 = mul nsw i32 %226, 50
  %227 = sub i32 0, %mul99
  %228 = add i32 %225, %227
  %sub100 = sub nsw i32 %225, %mul99
  %c.reload600 = load volatile i32*, i32** %c.reg2mem
  %229 = load i32, i32* %c.reload600, align 4
  %mul101 = mul nsw i32 %229, 20
  %230 = sub i32 %228, 2120145349
  %231 = sub i32 %230, %mul101
  %232 = add i32 %231, 2120145349
  %sub102 = sub nsw i32 %228, %mul101
  %d.reload616 = load volatile i32*, i32** %d.reg2mem
  %233 = load i32, i32* %d.reload616, align 4
  %mul103 = mul nsw i32 %233, 10
  %234 = sub i32 0, %mul103
  %235 = add i32 %232, %234
  %sub104 = sub nsw i32 %232, %mul103
  %e.reload628 = load volatile i32*, i32** %e.reg2mem
  %236 = load i32, i32* %e.reload628, align 4
  %mul105 = mul nsw i32 %236, 5
  %237 = sub i32 %235, 1973209066
  %238 = sub i32 %237, %mul105
  %239 = add i32 %238, 1973209066
  %sub106 = sub nsw i32 %235, %mul105
  %f.reload634 = load volatile i32*, i32** %f.reg2mem
  store i32 %239, i32* %f.reload634, align 4
  %240 = load i32, i32* @x
  %241 = load i32, i32* @y
  %242 = add i32 %240, 1863983346
  %243 = sub i32 %242, 1
  %244 = sub i32 %243, 1863983346
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = xor i1 %248, true
  %251 = xor i1 %249, true
  %252 = xor i1 true, true
  %253 = and i1 %250, true
  %254 = and i1 %248, %252
  %255 = and i1 %251, true
  %256 = and i1 %249, %252
  %257 = or i1 %253, %254
  %258 = or i1 %255, %256
  %259 = xor i1 %257, %258
  %260 = or i1 %250, %251
  %261 = xor i1 %260, true
  %262 = or i1 true, %252
  %263 = and i1 %261, %262
  %264 = or i1 %259, %263
  %265 = or i1 %248, %249
  %266 = select i1 %264, i32 -860223120, i32 -1023062070
  store i32 %266, i32* %switchVar
  br label %loopEnd

originalBBpart2459:                               ; preds = %loopEntry
  store i32 -1274784147, i32* %switchVar
  br label %loopEnd

if.else107:                                       ; preds = %loopEntry
  %267 = load i32, i32* @x
  %268 = load i32, i32* @y
  %269 = sub i32 %267, 867318507
  %270 = sub i32 %269, 1
  %271 = add i32 %270, 867318507
  %272 = sub i32 %267, 1
  %273 = mul i32 %267, %271
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %268, 10
  %277 = and i1 %275, %276
  %278 = xor i1 %275, %276
  %279 = or i1 %277, %278
  %280 = or i1 %275, %276
  %281 = select i1 %279, i32 1328580754, i32 -1829010275
  store i32 %281, i32* %switchVar
  br label %loopEnd

originalBB461:                                    ; preds = %loopEntry
  %n.reload527 = load volatile i32*, i32** %n.reg2mem
  %282 = load i32, i32* %n.reload527, align 4
  %a.reload553 = load volatile i32*, i32** %a.reg2mem
  %283 = load i32, i32* %a.reload553, align 4
  %mul108 = mul nsw i32 %283, 100
  %284 = sub i32 %282, -894541291
  %285 = sub i32 %284, %mul108
  %286 = add i32 %285, -894541291
  %sub109 = sub nsw i32 %282, %mul108
  %b.reload577 = load volatile i32*, i32** %b.reg2mem
  %287 = load i32, i32* %b.reload577, align 4
  %mul110 = mul nsw i32 %287, 50
  %288 = add i32 %286, -284335255
  %289 = sub i32 %288, %mul110
  %290 = sub i32 %289, -284335255
  %sub111 = sub nsw i32 %286, %mul110
  %c.reload599 = load volatile i32*, i32** %c.reg2mem
  %291 = load i32, i32* %c.reload599, align 4
  %mul112 = mul nsw i32 %291, 20
  %292 = sub i32 0, %mul112
  %293 = add i32 %290, %292
  %sub113 = sub nsw i32 %290, %mul112
  %d.reload615 = load volatile i32*, i32** %d.reg2mem
  %294 = load i32, i32* %d.reload615, align 4
  %mul114 = mul nsw i32 %294, 10
  %295 = add i32 %293, 1790668219
  %296 = sub i32 %295, %mul114
  %297 = sub i32 %296, 1790668219
  %sub115 = sub nsw i32 %293, %mul114
  %cmp116 = icmp slt i32 %297, 5
  store i1 %cmp116, i1* %cmp116.reg2mem
  %298 = load i32, i32* @x
  %299 = load i32, i32* @y
  %300 = add i32 %298, -1554844071
  %301 = sub i32 %300, 1
  %302 = sub i32 %301, -1554844071
  %303 = sub i32 %298, 1
  %304 = mul i32 %298, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %299, 10
  %308 = and i1 %306, %307
  %309 = xor i1 %306, %307
  %310 = or i1 %308, %309
  %311 = or i1 %306, %307
  %312 = select i1 %310, i32 -928737086, i32 -1829010275
  store i32 %312, i32* %switchVar
  br label %loopEnd

originalBBpart2514:                               ; preds = %loopEntry
  %cmp116.reload = load volatile i1, i1* %cmp116.reg2mem
  %313 = select i1 %cmp116.reload, i32 132940438, i32 -1751430141
  store i32 %313, i32* %switchVar
  br label %loopEnd

if.then117:                                       ; preds = %loopEntry
  %e.reload627 = load volatile i32*, i32** %e.reg2mem
  store i32 0, i32* %e.reload627, align 4
  %n.reload526 = load volatile i32*, i32** %n.reg2mem
  %314 = load i32, i32* %n.reload526, align 4
  %a.reload552 = load volatile i32*, i32** %a.reg2mem
  %315 = load i32, i32* %a.reload552, align 4
  %mul118 = mul nsw i32 %315, 100
  %316 = sub i32 %314, 560042200
  %317 = sub i32 %316, %mul118
  %318 = add i32 %317, 560042200
  %sub119 = sub nsw i32 %314, %mul118
  %b.reload576 = load volatile i32*, i32** %b.reg2mem
  %319 = load i32, i32* %b.reload576, align 4
  %mul120 = mul nsw i32 %319, 50
  %320 = add i32 %318, -1068013580
  %321 = sub i32 %320, %mul120
  %322 = sub i32 %321, -1068013580
  %sub121 = sub nsw i32 %318, %mul120
  %c.reload598 = load volatile i32*, i32** %c.reg2mem
  %323 = load i32, i32* %c.reload598, align 4
  %mul122 = mul nsw i32 %323, 20
  %324 = add i32 %322, -1299896432
  %325 = sub i32 %324, %mul122
  %326 = sub i32 %325, -1299896432
  %sub123 = sub nsw i32 %322, %mul122
  %d.reload614 = load volatile i32*, i32** %d.reg2mem
  %327 = load i32, i32* %d.reload614, align 4
  %mul124 = mul nsw i32 %327, 10
  %328 = add i32 %326, -2032357972
  %329 = sub i32 %328, %mul124
  %330 = sub i32 %329, -2032357972
  %sub125 = sub nsw i32 %326, %mul124
  %e.reload626 = load volatile i32*, i32** %e.reg2mem
  %331 = load i32, i32* %e.reload626, align 4
  %mul126 = mul nsw i32 %331, 5
  %332 = sub i32 0, %mul126
  %333 = add i32 %330, %332
  %sub127 = sub nsw i32 %330, %mul126
  %f.reload633 = load volatile i32*, i32** %f.reg2mem
  store i32 %333, i32* %f.reload633, align 4
  %f.reload632 = load volatile i32*, i32** %f.reg2mem
  store i32 %333, i32* %f.reload632, align 4
  store i32 -1751430141, i32* %switchVar
  br label %loopEnd

if.end128:                                        ; preds = %loopEntry
  store i32 -1274784147, i32* %switchVar
  br label %loopEnd

if.end129:                                        ; preds = %loopEntry
  %334 = load i32, i32* @x
  %335 = load i32, i32* @y
  %336 = sub i32 %334, -520799865
  %337 = sub i32 %336, 1
  %338 = add i32 %337, -520799865
  %339 = sub i32 %334, 1
  %340 = mul i32 %334, %338
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %335, 10
  %344 = and i1 %342, %343
  %345 = xor i1 %342, %343
  %346 = or i1 %344, %345
  %347 = or i1 %342, %343
  %348 = select i1 %346, i32 1404319725, i32 -1635234260
  store i32 %348, i32* %switchVar
  br label %loopEnd

originalBB516:                                    ; preds = %loopEntry
  %a.reload551 = load volatile i32*, i32** %a.reg2mem
  %349 = load i32, i32* %a.reload551, align 4
  %call130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %349)
  %b.reload575 = load volatile i32*, i32** %b.reg2mem
  %350 = load i32, i32* %b.reload575, align 4
  %call131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %350)
  %c.reload597 = load volatile i32*, i32** %c.reg2mem
  %351 = load i32, i32* %c.reload597, align 4
  %call132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %351)
  %d.reload613 = load volatile i32*, i32** %d.reg2mem
  %352 = load i32, i32* %d.reload613, align 4
  %call133 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %352)
  %e.reload625 = load volatile i32*, i32** %e.reg2mem
  %353 = load i32, i32* %e.reload625, align 4
  %call134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %353)
  %f.reload631 = load volatile i32*, i32** %f.reg2mem
  %354 = load i32, i32* %f.reload631, align 4
  %call135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %354)
  %355 = load i32, i32* @x
  %356 = load i32, i32* @y
  %357 = add i32 %355, 177731786
  %358 = sub i32 %357, 1
  %359 = sub i32 %358, 177731786
  %360 = sub i32 %355, 1
  %361 = mul i32 %355, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %356, 10
  %365 = and i1 %363, %364
  %366 = xor i1 %363, %364
  %367 = or i1 %365, %366
  %368 = or i1 %363, %364
  %369 = select i1 %367, i32 1748256254, i32 -1635234260
  store i32 %369, i32* %switchVar
  br label %loopEnd

originalBBpart2518:                               ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %nalteredBB = alloca i32, align 4
  %aalteredBB = alloca i32, align 4
  %balteredBB = alloca i32, align 4
  %calteredBB = alloca i32, align 4
  %dalteredBB = alloca i32, align 4
  %ealteredBB = alloca i32, align 4
  %falteredBB = alloca i32, align 4
  store i32 0, i32* %retvalalteredBB, align 4
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %nalteredBB)
  %370 = load i32, i32* %nalteredBB, align 4
  %371 = load i32, i32* %nalteredBB, align 4
  %_ = shl i32 %371, 100
  %372 = sub i32 0, %371
  %373 = add i32 0, %372
  %_136 = sub i32 0, %371
  %374 = sub i32 0, %373
  %375 = sub i32 0, 100
  %376 = add i32 %374, %375
  %377 = sub i32 0, %376
  %gen = add i32 %373, 100
  %remalteredBB = srem i32 %371, 100
  %_137 = shl i32 %370, %remalteredBB
  %378 = add i32 0, -1337290309
  %379 = sub i32 %378, %370
  %380 = sub i32 %379, -1337290309
  %_138 = sub i32 0, %370
  %381 = sub i32 0, %remalteredBB
  %382 = sub i32 %380, %381
  %gen139 = add i32 %380, %remalteredBB
  %383 = sub i32 0, %remalteredBB
  %384 = add i32 %370, %383
  %subalteredBB = sub nsw i32 %370, %remalteredBB
  %_140 = shl i32 %384, 100
  %_141 = shl i32 %384, 100
  %385 = sub i32 %384, 753310381
  %386 = sub i32 %385, 100
  %387 = add i32 %386, 753310381
  %_142 = sub i32 %384, 100
  %gen143 = mul i32 %387, 100
  %388 = add i32 %384, -1107479792
  %389 = sub i32 %388, 100
  %390 = sub i32 %389, -1107479792
  %_144 = sub i32 %384, 100
  %gen145 = mul i32 %390, 100
  %391 = sub i32 0, 2086377419
  %392 = sub i32 %391, %384
  %393 = add i32 %392, 2086377419
  %_146 = sub i32 0, %384
  %394 = sub i32 0, %393
  %395 = sub i32 0, 100
  %396 = add i32 %394, %395
  %397 = sub i32 0, %396
  %gen147 = add i32 %393, 100
  %398 = sub i32 0, %384
  %399 = add i32 0, %398
  %_148 = sub i32 0, %384
  %400 = sub i32 0, %399
  %401 = sub i32 0, 100
  %402 = add i32 %400, %401
  %403 = sub i32 0, %402
  %gen149 = add i32 %399, 100
  %404 = add i32 %384, 209084652
  %405 = sub i32 %404, 100
  %406 = sub i32 %405, 209084652
  %_150 = sub i32 %384, 100
  %gen151 = mul i32 %406, 100
  %divalteredBB = sdiv i32 %384, 100
  store i32 %divalteredBB, i32* %aalteredBB, align 4
  %407 = load i32, i32* %nalteredBB, align 4
  %408 = load i32, i32* %aalteredBB, align 4
  %_152 = shl i32 %408, 100
  %_153 = shl i32 %408, 100
  %409 = add i32 %408, 1013095004
  %410 = sub i32 %409, 100
  %411 = sub i32 %410, 1013095004
  %_154 = sub i32 %408, 100
  %gen155 = mul i32 %411, 100
  %_156 = shl i32 %408, 100
  %_157 = shl i32 %408, 100
  %412 = add i32 %408, 1195243362
  %413 = sub i32 %412, 100
  %414 = sub i32 %413, 1195243362
  %_158 = sub i32 %408, 100
  %gen159 = mul i32 %414, 100
  %_160 = shl i32 %408, 100
  %415 = sub i32 %408, 417371578
  %416 = sub i32 %415, 100
  %417 = add i32 %416, 417371578
  %_161 = sub i32 %408, 100
  %gen162 = mul i32 %417, 100
  %418 = add i32 0, -1782308643
  %419 = sub i32 %418, %408
  %420 = sub i32 %419, -1782308643
  %_163 = sub i32 0, %408
  %421 = add i32 %420, -958850216
  %422 = add i32 %421, 100
  %423 = sub i32 %422, -958850216
  %gen164 = add i32 %420, 100
  %mulalteredBB = mul nsw i32 %408, 100
  %424 = sub i32 0, %407
  %425 = add i32 0, %424
  %_165 = sub i32 0, %407
  %426 = sub i32 %425, -1565769450
  %427 = add i32 %426, %mulalteredBB
  %428 = add i32 %427, -1565769450
  %gen166 = add i32 %425, %mulalteredBB
  %429 = sub i32 %407, -577348222
  %430 = sub i32 %429, %mulalteredBB
  %431 = add i32 %430, -577348222
  %_167 = sub i32 %407, %mulalteredBB
  %gen168 = mul i32 %431, %mulalteredBB
  %432 = sub i32 0, %mulalteredBB
  %433 = add i32 %407, %432
  %_169 = sub i32 %407, %mulalteredBB
  %gen170 = mul i32 %433, %mulalteredBB
  %434 = sub i32 0, %mulalteredBB
  %435 = add i32 %407, %434
  %sub1alteredBB = sub nsw i32 %407, %mulalteredBB
  %436 = load i32, i32* %nalteredBB, align 4
  %437 = load i32, i32* %aalteredBB, align 4
  %438 = sub i32 %437, 1540644125
  %439 = sub i32 %438, 100
  %440 = add i32 %439, 1540644125
  %_171 = sub i32 %437, 100
  %gen172 = mul i32 %440, 100
  %441 = add i32 %437, 2121686003
  %442 = sub i32 %441, 100
  %443 = sub i32 %442, 2121686003
  %_173 = sub i32 %437, 100
  %gen174 = mul i32 %443, 100
  %444 = sub i32 0, 100
  %445 = add i32 %437, %444
  %_175 = sub i32 %437, 100
  %gen176 = mul i32 %445, 100
  %_177 = shl i32 %437, 100
  %_178 = shl i32 %437, 100
  %_179 = shl i32 %437, 100
  %mul2alteredBB = mul nsw i32 %437, 100
  %_180 = shl i32 %436, %mul2alteredBB
  %_181 = shl i32 %436, %mul2alteredBB
  %_182 = shl i32 %436, %mul2alteredBB
  %446 = sub i32 0, %mul2alteredBB
  %447 = add i32 %436, %446
  %sub3alteredBB = sub nsw i32 %436, %mul2alteredBB
  %_183 = shl i32 %447, 50
  %448 = sub i32 %447, 1249680746
  %449 = sub i32 %448, 50
  %450 = add i32 %449, 1249680746
  %_184 = sub i32 %447, 50
  %gen185 = mul i32 %450, 50
  %451 = add i32 0, 1050796857
  %452 = sub i32 %451, %447
  %453 = sub i32 %452, 1050796857
  %_186 = sub i32 0, %447
  %454 = sub i32 %453, -386810262
  %455 = add i32 %454, 50
  %456 = add i32 %455, -386810262
  %gen187 = add i32 %453, 50
  %rem4alteredBB = srem i32 %447, 50
  %_188 = shl i32 %435, %rem4alteredBB
  %457 = sub i32 0, -2124239990
  %458 = sub i32 %457, %435
  %459 = add i32 %458, -2124239990
  %_189 = sub i32 0, %435
  %460 = sub i32 0, %459
  %461 = sub i32 0, %rem4alteredBB
  %462 = add i32 %460, %461
  %463 = sub i32 0, %462
  %gen190 = add i32 %459, %rem4alteredBB
  %464 = sub i32 0, -1606561035
  %465 = sub i32 %464, %435
  %466 = add i32 %465, -1606561035
  %_191 = sub i32 0, %435
  %467 = add i32 %466, 2100025362
  %468 = add i32 %467, %rem4alteredBB
  %469 = sub i32 %468, 2100025362
  %gen192 = add i32 %466, %rem4alteredBB
  %470 = add i32 %435, -1909036551
  %471 = sub i32 %470, %rem4alteredBB
  %472 = sub i32 %471, -1909036551
  %sub5alteredBB = sub nsw i32 %435, %rem4alteredBB
  %473 = sub i32 %472, -222533263
  %474 = sub i32 %473, 50
  %475 = add i32 %474, -222533263
  %_193 = sub i32 %472, 50
  %gen194 = mul i32 %475, 50
  %_195 = shl i32 %472, 50
  %_196 = shl i32 %472, 50
  %476 = add i32 0, 1189995146
  %477 = sub i32 %476, %472
  %478 = sub i32 %477, 1189995146
  %_197 = sub i32 0, %472
  %479 = add i32 %478, 1341201153
  %480 = add i32 %479, 50
  %481 = sub i32 %480, 1341201153
  %gen198 = add i32 %478, 50
  %482 = sub i32 0, 738668947
  %483 = sub i32 %482, %472
  %484 = add i32 %483, 738668947
  %_199 = sub i32 0, %472
  %485 = sub i32 0, %484
  %486 = sub i32 0, 50
  %487 = add i32 %485, %486
  %488 = sub i32 0, %487
  %gen200 = add i32 %484, 50
  %div6alteredBB = sdiv i32 %472, 50
  store i32 %div6alteredBB, i32* %balteredBB, align 4
  %489 = load i32, i32* %nalteredBB, align 4
  %490 = load i32, i32* %aalteredBB, align 4
  %_201 = shl i32 %490, 100
  %491 = sub i32 0, -1338442086
  %492 = sub i32 %491, %490
  %493 = add i32 %492, -1338442086
  %_202 = sub i32 0, %490
  %494 = sub i32 0, 100
  %495 = sub i32 %493, %494
  %gen203 = add i32 %493, 100
  %496 = sub i32 0, 100
  %497 = add i32 %490, %496
  %_204 = sub i32 %490, 100
  %gen205 = mul i32 %497, 100
  %498 = sub i32 0, %490
  %499 = add i32 0, %498
  %_206 = sub i32 0, %490
  %500 = sub i32 0, 100
  %501 = sub i32 %499, %500
  %gen207 = add i32 %499, 100
  %_208 = shl i32 %490, 100
  %_209 = shl i32 %490, 100
  %502 = sub i32 0, -2043133443
  %503 = sub i32 %502, %490
  %504 = add i32 %503, -2043133443
  %_210 = sub i32 0, %490
  %505 = sub i32 0, 100
  %506 = sub i32 %504, %505
  %gen211 = add i32 %504, 100
  %mul7alteredBB = mul nsw i32 %490, 100
  %507 = sub i32 %489, 367503720
  %508 = sub i32 %507, %mul7alteredBB
  %509 = add i32 %508, 367503720
  %_212 = sub i32 %489, %mul7alteredBB
  %gen213 = mul i32 %509, %mul7alteredBB
  %510 = sub i32 0, %489
  %511 = add i32 0, %510
  %_214 = sub i32 0, %489
  %512 = sub i32 0, %511
  %513 = sub i32 0, %mul7alteredBB
  %514 = add i32 %512, %513
  %515 = sub i32 0, %514
  %gen215 = add i32 %511, %mul7alteredBB
  %516 = sub i32 0, %489
  %517 = add i32 0, %516
  %_216 = sub i32 0, %489
  %518 = sub i32 0, %mul7alteredBB
  %519 = sub i32 %517, %518
  %gen217 = add i32 %517, %mul7alteredBB
  %520 = add i32 0, 309338060
  %521 = sub i32 %520, %489
  %522 = sub i32 %521, 309338060
  %_218 = sub i32 0, %489
  %523 = sub i32 0, %mul7alteredBB
  %524 = sub i32 %522, %523
  %gen219 = add i32 %522, %mul7alteredBB
  %525 = sub i32 %489, -832907278
  %526 = sub i32 %525, %mul7alteredBB
  %527 = add i32 %526, -832907278
  %_220 = sub i32 %489, %mul7alteredBB
  %gen221 = mul i32 %527, %mul7alteredBB
  %528 = sub i32 %489, 100008373
  %529 = sub i32 %528, %mul7alteredBB
  %530 = add i32 %529, 100008373
  %_222 = sub i32 %489, %mul7alteredBB
  %gen223 = mul i32 %530, %mul7alteredBB
  %531 = add i32 0, -1505423214
  %532 = sub i32 %531, %489
  %533 = sub i32 %532, -1505423214
  %_224 = sub i32 0, %489
  %534 = sub i32 %533, -1093539000
  %535 = add i32 %534, %mul7alteredBB
  %536 = add i32 %535, -1093539000
  %gen225 = add i32 %533, %mul7alteredBB
  %537 = sub i32 %489, -415223328
  %538 = sub i32 %537, %mul7alteredBB
  %539 = add i32 %538, -415223328
  %sub8alteredBB = sub nsw i32 %489, %mul7alteredBB
  %540 = load i32, i32* %balteredBB, align 4
  %_226 = shl i32 %540, 50
  %541 = sub i32 %540, 1178282870
  %542 = sub i32 %541, 50
  %543 = add i32 %542, 1178282870
  %_227 = sub i32 %540, 50
  %gen228 = mul i32 %543, 50
  %544 = sub i32 0, 50
  %545 = add i32 %540, %544
  %_229 = sub i32 %540, 50
  %gen230 = mul i32 %545, 50
  %mul9alteredBB = mul nsw i32 %540, 50
  %_231 = shl i32 %539, %mul9alteredBB
  %546 = sub i32 0, %mul9alteredBB
  %547 = add i32 %539, %546
  %_232 = sub i32 %539, %mul9alteredBB
  %gen233 = mul i32 %547, %mul9alteredBB
  %548 = add i32 %539, -2146171415
  %549 = sub i32 %548, %mul9alteredBB
  %550 = sub i32 %549, -2146171415
  %_234 = sub i32 %539, %mul9alteredBB
  %gen235 = mul i32 %550, %mul9alteredBB
  %551 = sub i32 %539, -764914735
  %552 = sub i32 %551, %mul9alteredBB
  %553 = add i32 %552, -764914735
  %sub10alteredBB = sub nsw i32 %539, %mul9alteredBB
  %cmpalteredBB = icmp sge i32 %553, 20
  store i32 -1223369157, i32* %switchVar
  br label %loopEnd

originalBB236alteredBB:                           ; preds = %loopEntry
  %n.reload525 = load volatile i32*, i32** %n.reg2mem
  %554 = load i32, i32* %n.reload525, align 4
  %a.reload550 = load volatile i32*, i32** %a.reg2mem
  %555 = load i32, i32* %a.reload550, align 4
  %_237 = shl i32 %555, 100
  %556 = sub i32 %555, 1697777660
  %557 = sub i32 %556, 100
  %558 = add i32 %557, 1697777660
  %_238 = sub i32 %555, 100
  %gen239 = mul i32 %558, 100
  %mul78alteredBB = mul nsw i32 %555, 100
  %559 = add i32 %554, -784701870
  %560 = sub i32 %559, %mul78alteredBB
  %561 = sub i32 %560, -784701870
  %_240 = sub i32 %554, %mul78alteredBB
  %gen241 = mul i32 %561, %mul78alteredBB
  %562 = add i32 0, -1556537506
  %563 = sub i32 %562, %554
  %564 = sub i32 %563, -1556537506
  %_242 = sub i32 0, %554
  %565 = sub i32 %564, -827249317
  %566 = add i32 %565, %mul78alteredBB
  %567 = add i32 %566, -827249317
  %gen243 = add i32 %564, %mul78alteredBB
  %568 = add i32 %554, -486869591
  %569 = sub i32 %568, %mul78alteredBB
  %570 = sub i32 %569, -486869591
  %_244 = sub i32 %554, %mul78alteredBB
  %gen245 = mul i32 %570, %mul78alteredBB
  %_246 = shl i32 %554, %mul78alteredBB
  %_247 = shl i32 %554, %mul78alteredBB
  %571 = add i32 0, 2058813505
  %572 = sub i32 %571, %554
  %573 = sub i32 %572, 2058813505
  %_248 = sub i32 0, %554
  %574 = sub i32 0, %573
  %575 = sub i32 0, %mul78alteredBB
  %576 = add i32 %574, %575
  %577 = sub i32 0, %576
  %gen249 = add i32 %573, %mul78alteredBB
  %578 = sub i32 0, %mul78alteredBB
  %579 = add i32 %554, %578
  %_250 = sub i32 %554, %mul78alteredBB
  %gen251 = mul i32 %579, %mul78alteredBB
  %580 = add i32 %554, -708647068
  %581 = sub i32 %580, %mul78alteredBB
  %582 = sub i32 %581, -708647068
  %_252 = sub i32 %554, %mul78alteredBB
  %gen253 = mul i32 %582, %mul78alteredBB
  %583 = add i32 %554, 1022912466
  %584 = sub i32 %583, %mul78alteredBB
  %585 = sub i32 %584, 1022912466
  %sub79alteredBB = sub nsw i32 %554, %mul78alteredBB
  %b.reload574 = load volatile i32*, i32** %b.reg2mem
  %586 = load i32, i32* %b.reload574, align 4
  %_254 = shl i32 %586, 50
  %587 = sub i32 0, 1384757185
  %588 = sub i32 %587, %586
  %589 = add i32 %588, 1384757185
  %_255 = sub i32 0, %586
  %590 = sub i32 %589, 663986522
  %591 = add i32 %590, 50
  %592 = add i32 %591, 663986522
  %gen256 = add i32 %589, 50
  %593 = sub i32 %586, 1699521156
  %594 = sub i32 %593, 50
  %595 = add i32 %594, 1699521156
  %_257 = sub i32 %586, 50
  %gen258 = mul i32 %595, 50
  %mul80alteredBB = mul nsw i32 %586, 50
  %596 = sub i32 0, %mul80alteredBB
  %597 = add i32 %585, %596
  %_259 = sub i32 %585, %mul80alteredBB
  %gen260 = mul i32 %597, %mul80alteredBB
  %_261 = shl i32 %585, %mul80alteredBB
  %_262 = shl i32 %585, %mul80alteredBB
  %_263 = shl i32 %585, %mul80alteredBB
  %598 = add i32 %585, -996029486
  %599 = sub i32 %598, %mul80alteredBB
  %600 = sub i32 %599, -996029486
  %sub81alteredBB = sub nsw i32 %585, %mul80alteredBB
  %c.reload596 = load volatile i32*, i32** %c.reg2mem
  %601 = load i32, i32* %c.reload596, align 4
  %_264 = shl i32 %601, 20
  %_265 = shl i32 %601, 20
  %602 = sub i32 0, 20
  %603 = add i32 %601, %602
  %_266 = sub i32 %601, 20
  %gen267 = mul i32 %603, 20
  %_268 = shl i32 %601, 20
  %604 = add i32 0, -1033337095
  %605 = sub i32 %604, %601
  %606 = sub i32 %605, -1033337095
  %_269 = sub i32 0, %601
  %607 = add i32 %606, 2062595134
  %608 = add i32 %607, 20
  %609 = sub i32 %608, 2062595134
  %gen270 = add i32 %606, 20
  %_271 = shl i32 %601, 20
  %610 = sub i32 0, 20
  %611 = add i32 %601, %610
  %_272 = sub i32 %601, 20
  %gen273 = mul i32 %611, 20
  %mul82alteredBB = mul nsw i32 %601, 20
  %612 = sub i32 0, %mul82alteredBB
  %613 = add i32 %600, %612
  %_274 = sub i32 %600, %mul82alteredBB
  %gen275 = mul i32 %613, %mul82alteredBB
  %614 = add i32 %600, -241387880
  %615 = sub i32 %614, %mul82alteredBB
  %616 = sub i32 %615, -241387880
  %_276 = sub i32 %600, %mul82alteredBB
  %gen277 = mul i32 %616, %mul82alteredBB
  %617 = add i32 0, 1560647570
  %618 = sub i32 %617, %600
  %619 = sub i32 %618, 1560647570
  %_278 = sub i32 0, %600
  %620 = sub i32 0, %619
  %621 = sub i32 0, %mul82alteredBB
  %622 = add i32 %620, %621
  %623 = sub i32 0, %622
  %gen279 = add i32 %619, %mul82alteredBB
  %624 = sub i32 0, %mul82alteredBB
  %625 = add i32 %600, %624
  %_280 = sub i32 %600, %mul82alteredBB
  %gen281 = mul i32 %625, %mul82alteredBB
  %626 = sub i32 %600, 940120832
  %627 = sub i32 %626, %mul82alteredBB
  %628 = add i32 %627, 940120832
  %sub83alteredBB = sub nsw i32 %600, %mul82alteredBB
  %d.reload612 = load volatile i32*, i32** %d.reg2mem
  %629 = load i32, i32* %d.reload612, align 4
  %_282 = shl i32 %629, 10
  %630 = sub i32 0, 10
  %631 = add i32 %629, %630
  %_283 = sub i32 %629, 10
  %gen284 = mul i32 %631, 10
  %632 = add i32 0, 136702225
  %633 = sub i32 %632, %629
  %634 = sub i32 %633, 136702225
  %_285 = sub i32 0, %629
  %635 = add i32 %634, 1448113234
  %636 = add i32 %635, 10
  %637 = sub i32 %636, 1448113234
  %gen286 = add i32 %634, 10
  %638 = add i32 %629, 631214628
  %639 = sub i32 %638, 10
  %640 = sub i32 %639, 631214628
  %_287 = sub i32 %629, 10
  %gen288 = mul i32 %640, 10
  %_289 = shl i32 %629, 10
  %mul84alteredBB = mul nsw i32 %629, 10
  %_290 = shl i32 %628, %mul84alteredBB
  %_291 = shl i32 %628, %mul84alteredBB
  %641 = sub i32 0, %mul84alteredBB
  %642 = add i32 %628, %641
  %_292 = sub i32 %628, %mul84alteredBB
  %gen293 = mul i32 %642, %mul84alteredBB
  %_294 = shl i32 %628, %mul84alteredBB
  %643 = add i32 0, 1720972444
  %644 = sub i32 %643, %628
  %645 = sub i32 %644, 1720972444
  %_295 = sub i32 0, %628
  %646 = sub i32 %645, -1363411304
  %647 = add i32 %646, %mul84alteredBB
  %648 = add i32 %647, -1363411304
  %gen296 = add i32 %645, %mul84alteredBB
  %649 = sub i32 0, %mul84alteredBB
  %650 = add i32 %628, %649
  %sub85alteredBB = sub nsw i32 %628, %mul84alteredBB
  %n.reload524 = load volatile i32*, i32** %n.reg2mem
  %651 = load i32, i32* %n.reload524, align 4
  %a.reload549 = load volatile i32*, i32** %a.reg2mem
  %652 = load i32, i32* %a.reload549, align 4
  %653 = sub i32 0, 100
  %654 = add i32 %652, %653
  %_297 = sub i32 %652, 100
  %gen298 = mul i32 %654, 100
  %mul86alteredBB = mul nsw i32 %652, 100
  %655 = add i32 %651, 1188583471
  %656 = sub i32 %655, %mul86alteredBB
  %657 = sub i32 %656, 1188583471
  %_299 = sub i32 %651, %mul86alteredBB
  %gen300 = mul i32 %657, %mul86alteredBB
  %_301 = shl i32 %651, %mul86alteredBB
  %658 = sub i32 %651, -483066278
  %659 = sub i32 %658, %mul86alteredBB
  %660 = add i32 %659, -483066278
  %sub87alteredBB = sub nsw i32 %651, %mul86alteredBB
  %b.reload573 = load volatile i32*, i32** %b.reg2mem
  %661 = load i32, i32* %b.reload573, align 4
  %662 = sub i32 0, 50
  %663 = add i32 %661, %662
  %_302 = sub i32 %661, 50
  %gen303 = mul i32 %663, 50
  %_304 = shl i32 %661, 50
  %664 = sub i32 0, 584968105
  %665 = sub i32 %664, %661
  %666 = add i32 %665, 584968105
  %_305 = sub i32 0, %661
  %667 = add i32 %666, 1059790230
  %668 = add i32 %667, 50
  %669 = sub i32 %668, 1059790230
  %gen306 = add i32 %666, 50
  %670 = sub i32 0, -208168303
  %671 = sub i32 %670, %661
  %672 = add i32 %671, -208168303
  %_307 = sub i32 0, %661
  %673 = sub i32 0, 50
  %674 = sub i32 %672, %673
  %gen308 = add i32 %672, 50
  %675 = sub i32 0, %661
  %676 = add i32 0, %675
  %_309 = sub i32 0, %661
  %677 = sub i32 0, %676
  %678 = sub i32 0, 50
  %679 = add i32 %677, %678
  %680 = sub i32 0, %679
  %gen310 = add i32 %676, 50
  %681 = sub i32 0, 50
  %682 = add i32 %661, %681
  %_311 = sub i32 %661, 50
  %gen312 = mul i32 %682, 50
  %mul88alteredBB = mul nsw i32 %661, 50
  %_313 = shl i32 %660, %mul88alteredBB
  %_314 = shl i32 %660, %mul88alteredBB
  %683 = add i32 %660, 1516916636
  %684 = sub i32 %683, %mul88alteredBB
  %685 = sub i32 %684, 1516916636
  %_315 = sub i32 %660, %mul88alteredBB
  %gen316 = mul i32 %685, %mul88alteredBB
  %_317 = shl i32 %660, %mul88alteredBB
  %686 = sub i32 0, -1293626369
  %687 = sub i32 %686, %660
  %688 = add i32 %687, -1293626369
  %_318 = sub i32 0, %660
  %689 = sub i32 %688, -1112572897
  %690 = add i32 %689, %mul88alteredBB
  %691 = add i32 %690, -1112572897
  %gen319 = add i32 %688, %mul88alteredBB
  %692 = add i32 %660, 1714332158
  %693 = sub i32 %692, %mul88alteredBB
  %694 = sub i32 %693, 1714332158
  %sub89alteredBB = sub nsw i32 %660, %mul88alteredBB
  %c.reload595 = load volatile i32*, i32** %c.reg2mem
  %695 = load i32, i32* %c.reload595, align 4
  %696 = add i32 0, 2143027608
  %697 = sub i32 %696, %695
  %698 = sub i32 %697, 2143027608
  %_320 = sub i32 0, %695
  %699 = add i32 %698, 2003001185
  %700 = add i32 %699, 20
  %701 = sub i32 %700, 2003001185
  %gen321 = add i32 %698, 20
  %702 = sub i32 0, 457740889
  %703 = sub i32 %702, %695
  %704 = add i32 %703, 457740889
  %_322 = sub i32 0, %695
  %705 = sub i32 0, 20
  %706 = sub i32 %704, %705
  %gen323 = add i32 %704, 20
  %707 = add i32 0, 1118377769
  %708 = sub i32 %707, %695
  %709 = sub i32 %708, 1118377769
  %_324 = sub i32 0, %695
  %710 = sub i32 0, %709
  %711 = sub i32 0, 20
  %712 = add i32 %710, %711
  %713 = sub i32 0, %712
  %gen325 = add i32 %709, 20
  %714 = add i32 0, 2094703119
  %715 = sub i32 %714, %695
  %716 = sub i32 %715, 2094703119
  %_326 = sub i32 0, %695
  %717 = sub i32 0, %716
  %718 = sub i32 0, 20
  %719 = add i32 %717, %718
  %720 = sub i32 0, %719
  %gen327 = add i32 %716, 20
  %mul90alteredBB = mul nsw i32 %695, 20
  %721 = sub i32 0, %mul90alteredBB
  %722 = add i32 %694, %721
  %_328 = sub i32 %694, %mul90alteredBB
  %gen329 = mul i32 %722, %mul90alteredBB
  %_330 = shl i32 %694, %mul90alteredBB
  %723 = sub i32 0, %mul90alteredBB
  %724 = add i32 %694, %723
  %_331 = sub i32 %694, %mul90alteredBB
  %gen332 = mul i32 %724, %mul90alteredBB
  %725 = sub i32 0, %694
  %726 = add i32 0, %725
  %_333 = sub i32 0, %694
  %727 = add i32 %726, -1930563189
  %728 = add i32 %727, %mul90alteredBB
  %729 = sub i32 %728, -1930563189
  %gen334 = add i32 %726, %mul90alteredBB
  %_335 = shl i32 %694, %mul90alteredBB
  %_336 = shl i32 %694, %mul90alteredBB
  %730 = add i32 %694, 168702801
  %731 = sub i32 %730, %mul90alteredBB
  %732 = sub i32 %731, 168702801
  %sub91alteredBB = sub nsw i32 %694, %mul90alteredBB
  %d.reload611 = load volatile i32*, i32** %d.reg2mem
  %733 = load i32, i32* %d.reload611, align 4
  %734 = sub i32 %733, -2085328169
  %735 = sub i32 %734, 10
  %736 = add i32 %735, -2085328169
  %_337 = sub i32 %733, 10
  %gen338 = mul i32 %736, 10
  %737 = sub i32 %733, 2084897757
  %738 = sub i32 %737, 10
  %739 = add i32 %738, 2084897757
  %_339 = sub i32 %733, 10
  %gen340 = mul i32 %739, 10
  %_341 = shl i32 %733, 10
  %_342 = shl i32 %733, 10
  %_343 = shl i32 %733, 10
  %_344 = shl i32 %733, 10
  %740 = sub i32 0, 2056928203
  %741 = sub i32 %740, %733
  %742 = add i32 %741, 2056928203
  %_345 = sub i32 0, %733
  %743 = add i32 %742, 1037606079
  %744 = add i32 %743, 10
  %745 = sub i32 %744, 1037606079
  %gen346 = add i32 %742, 10
  %_347 = shl i32 %733, 10
  %mul92alteredBB = mul nsw i32 %733, 10
  %_348 = shl i32 %732, %mul92alteredBB
  %746 = sub i32 %732, -1131061616
  %747 = sub i32 %746, %mul92alteredBB
  %748 = add i32 %747, -1131061616
  %_349 = sub i32 %732, %mul92alteredBB
  %gen350 = mul i32 %748, %mul92alteredBB
  %749 = add i32 %732, -1488780571
  %750 = sub i32 %749, %mul92alteredBB
  %751 = sub i32 %750, -1488780571
  %_351 = sub i32 %732, %mul92alteredBB
  %gen352 = mul i32 %751, %mul92alteredBB
  %_353 = shl i32 %732, %mul92alteredBB
  %752 = sub i32 %732, 69957958
  %753 = sub i32 %752, %mul92alteredBB
  %754 = add i32 %753, 69957958
  %sub93alteredBB = sub nsw i32 %732, %mul92alteredBB
  %755 = sub i32 0, 5
  %756 = add i32 %754, %755
  %_354 = sub i32 %754, 5
  %gen355 = mul i32 %756, 5
  %757 = sub i32 0, 5
  %758 = add i32 %754, %757
  %_356 = sub i32 %754, 5
  %gen357 = mul i32 %758, 5
  %759 = sub i32 0, 5
  %760 = add i32 %754, %759
  %_358 = sub i32 %754, 5
  %gen359 = mul i32 %760, 5
  %761 = sub i32 %754, -1891194588
  %762 = sub i32 %761, 5
  %763 = add i32 %762, -1891194588
  %_360 = sub i32 %754, 5
  %gen361 = mul i32 %763, 5
  %_362 = shl i32 %754, 5
  %_363 = shl i32 %754, 5
  %_364 = shl i32 %754, 5
  %rem94alteredBB = srem i32 %754, 5
  %764 = add i32 0, -2033804567
  %765 = sub i32 %764, %650
  %766 = sub i32 %765, -2033804567
  %_365 = sub i32 0, %650
  %767 = sub i32 %766, 1949376406
  %768 = add i32 %767, %rem94alteredBB
  %769 = add i32 %768, 1949376406
  %gen366 = add i32 %766, %rem94alteredBB
  %770 = sub i32 %650, -2046222741
  %771 = sub i32 %770, %rem94alteredBB
  %772 = add i32 %771, -2046222741
  %_367 = sub i32 %650, %rem94alteredBB
  %gen368 = mul i32 %772, %rem94alteredBB
  %773 = sub i32 %650, 245713729
  %774 = sub i32 %773, %rem94alteredBB
  %775 = add i32 %774, 245713729
  %sub95alteredBB = sub nsw i32 %650, %rem94alteredBB
  %776 = sub i32 0, %775
  %777 = add i32 0, %776
  %_369 = sub i32 0, %775
  %778 = sub i32 0, %777
  %779 = sub i32 0, 5
  %780 = add i32 %778, %779
  %781 = sub i32 0, %780
  %gen370 = add i32 %777, 5
  %_371 = shl i32 %775, 5
  %782 = sub i32 0, %775
  %783 = add i32 0, %782
  %_372 = sub i32 0, %775
  %784 = sub i32 %783, -607005190
  %785 = add i32 %784, 5
  %786 = add i32 %785, -607005190
  %gen373 = add i32 %783, 5
  %div96alteredBB = sdiv i32 %775, 5
  %e.reload624 = load volatile i32*, i32** %e.reg2mem
  store i32 %div96alteredBB, i32* %e.reload624, align 4
  %n.reload523 = load volatile i32*, i32** %n.reg2mem
  %787 = load i32, i32* %n.reload523, align 4
  %a.reload548 = load volatile i32*, i32** %a.reg2mem
  %788 = load i32, i32* %a.reload548, align 4
  %789 = sub i32 0, 96645353
  %790 = sub i32 %789, %788
  %791 = add i32 %790, 96645353
  %_374 = sub i32 0, %788
  %792 = add i32 %791, -491095606
  %793 = add i32 %792, 100
  %794 = sub i32 %793, -491095606
  %gen375 = add i32 %791, 100
  %_376 = shl i32 %788, 100
  %795 = sub i32 %788, -1240760152
  %796 = sub i32 %795, 100
  %797 = add i32 %796, -1240760152
  %_377 = sub i32 %788, 100
  %gen378 = mul i32 %797, 100
  %798 = add i32 %788, -1240656185
  %799 = sub i32 %798, 100
  %800 = sub i32 %799, -1240656185
  %_379 = sub i32 %788, 100
  %gen380 = mul i32 %800, 100
  %801 = sub i32 0, -1248183352
  %802 = sub i32 %801, %788
  %803 = add i32 %802, -1248183352
  %_381 = sub i32 0, %788
  %804 = sub i32 0, 100
  %805 = sub i32 %803, %804
  %gen382 = add i32 %803, 100
  %806 = add i32 0, 758375943
  %807 = sub i32 %806, %788
  %808 = sub i32 %807, 758375943
  %_383 = sub i32 0, %788
  %809 = add i32 %808, -1661892189
  %810 = add i32 %809, 100
  %811 = sub i32 %810, -1661892189
  %gen384 = add i32 %808, 100
  %mul97alteredBB = mul nsw i32 %788, 100
  %_385 = shl i32 %787, %mul97alteredBB
  %812 = sub i32 %787, -1680138285
  %813 = sub i32 %812, %mul97alteredBB
  %814 = add i32 %813, -1680138285
  %_386 = sub i32 %787, %mul97alteredBB
  %gen387 = mul i32 %814, %mul97alteredBB
  %_388 = shl i32 %787, %mul97alteredBB
  %_389 = shl i32 %787, %mul97alteredBB
  %815 = sub i32 0, %mul97alteredBB
  %816 = add i32 %787, %815
  %_390 = sub i32 %787, %mul97alteredBB
  %gen391 = mul i32 %816, %mul97alteredBB
  %817 = add i32 0, -2085437337
  %818 = sub i32 %817, %787
  %819 = sub i32 %818, -2085437337
  %_392 = sub i32 0, %787
  %820 = sub i32 0, %819
  %821 = sub i32 0, %mul97alteredBB
  %822 = add i32 %820, %821
  %823 = sub i32 0, %822
  %gen393 = add i32 %819, %mul97alteredBB
  %824 = sub i32 %787, -717629428
  %825 = sub i32 %824, %mul97alteredBB
  %826 = add i32 %825, -717629428
  %_394 = sub i32 %787, %mul97alteredBB
  %gen395 = mul i32 %826, %mul97alteredBB
  %827 = sub i32 0, %mul97alteredBB
  %828 = add i32 %787, %827
  %sub98alteredBB = sub nsw i32 %787, %mul97alteredBB
  %b.reload572 = load volatile i32*, i32** %b.reg2mem
  %829 = load i32, i32* %b.reload572, align 4
  %830 = add i32 0, 1722999221
  %831 = sub i32 %830, %829
  %832 = sub i32 %831, 1722999221
  %_396 = sub i32 0, %829
  %833 = sub i32 0, %832
  %834 = sub i32 0, 50
  %835 = add i32 %833, %834
  %836 = sub i32 0, %835
  %gen397 = add i32 %832, 50
  %_398 = shl i32 %829, 50
  %837 = add i32 %829, -957898875
  %838 = sub i32 %837, 50
  %839 = sub i32 %838, -957898875
  %_399 = sub i32 %829, 50
  %gen400 = mul i32 %839, 50
  %_401 = shl i32 %829, 50
  %mul99alteredBB = mul nsw i32 %829, 50
  %840 = sub i32 %828, 1171926544
  %841 = sub i32 %840, %mul99alteredBB
  %842 = add i32 %841, 1171926544
  %_402 = sub i32 %828, %mul99alteredBB
  %gen403 = mul i32 %842, %mul99alteredBB
  %843 = add i32 0, -778819110
  %844 = sub i32 %843, %828
  %845 = sub i32 %844, -778819110
  %_404 = sub i32 0, %828
  %846 = sub i32 0, %mul99alteredBB
  %847 = sub i32 %845, %846
  %gen405 = add i32 %845, %mul99alteredBB
  %848 = sub i32 0, %828
  %849 = add i32 0, %848
  %_406 = sub i32 0, %828
  %850 = sub i32 %849, 391263162
  %851 = add i32 %850, %mul99alteredBB
  %852 = add i32 %851, 391263162
  %gen407 = add i32 %849, %mul99alteredBB
  %853 = sub i32 %828, 1328423212
  %854 = sub i32 %853, %mul99alteredBB
  %855 = add i32 %854, 1328423212
  %_408 = sub i32 %828, %mul99alteredBB
  %gen409 = mul i32 %855, %mul99alteredBB
  %856 = add i32 0, 552929883
  %857 = sub i32 %856, %828
  %858 = sub i32 %857, 552929883
  %_410 = sub i32 0, %828
  %859 = sub i32 0, %858
  %860 = sub i32 0, %mul99alteredBB
  %861 = add i32 %859, %860
  %862 = sub i32 0, %861
  %gen411 = add i32 %858, %mul99alteredBB
  %863 = add i32 0, 1764195055
  %864 = sub i32 %863, %828
  %865 = sub i32 %864, 1764195055
  %_412 = sub i32 0, %828
  %866 = sub i32 0, %mul99alteredBB
  %867 = sub i32 %865, %866
  %gen413 = add i32 %865, %mul99alteredBB
  %868 = add i32 %828, 463084391
  %869 = sub i32 %868, %mul99alteredBB
  %870 = sub i32 %869, 463084391
  %sub100alteredBB = sub nsw i32 %828, %mul99alteredBB
  %c.reload594 = load volatile i32*, i32** %c.reg2mem
  %871 = load i32, i32* %c.reload594, align 4
  %_414 = shl i32 %871, 20
  %872 = sub i32 0, 20
  %873 = add i32 %871, %872
  %_415 = sub i32 %871, 20
  %gen416 = mul i32 %873, 20
  %874 = add i32 %871, 1721459123
  %875 = sub i32 %874, 20
  %876 = sub i32 %875, 1721459123
  %_417 = sub i32 %871, 20
  %gen418 = mul i32 %876, 20
  %877 = sub i32 0, 20
  %878 = add i32 %871, %877
  %_419 = sub i32 %871, 20
  %gen420 = mul i32 %878, 20
  %mul101alteredBB = mul nsw i32 %871, 20
  %_421 = shl i32 %870, %mul101alteredBB
  %879 = sub i32 0, 411186360
  %880 = sub i32 %879, %870
  %881 = add i32 %880, 411186360
  %_422 = sub i32 0, %870
  %882 = sub i32 %881, -1367407723
  %883 = add i32 %882, %mul101alteredBB
  %884 = add i32 %883, -1367407723
  %gen423 = add i32 %881, %mul101alteredBB
  %885 = add i32 %870, 627196676
  %886 = sub i32 %885, %mul101alteredBB
  %887 = sub i32 %886, 627196676
  %sub102alteredBB = sub nsw i32 %870, %mul101alteredBB
  %d.reload610 = load volatile i32*, i32** %d.reg2mem
  %888 = load i32, i32* %d.reload610, align 4
  %889 = sub i32 0, 10
  %890 = add i32 %888, %889
  %_424 = sub i32 %888, 10
  %gen425 = mul i32 %890, 10
  %891 = sub i32 0, %888
  %892 = add i32 0, %891
  %_426 = sub i32 0, %888
  %893 = sub i32 %892, 898911068
  %894 = add i32 %893, 10
  %895 = add i32 %894, 898911068
  %gen427 = add i32 %892, 10
  %mul103alteredBB = mul nsw i32 %888, 10
  %_428 = shl i32 %887, %mul103alteredBB
  %896 = add i32 %887, -701272790
  %897 = sub i32 %896, %mul103alteredBB
  %898 = sub i32 %897, -701272790
  %_429 = sub i32 %887, %mul103alteredBB
  %gen430 = mul i32 %898, %mul103alteredBB
  %899 = sub i32 0, %887
  %900 = add i32 0, %899
  %_431 = sub i32 0, %887
  %901 = sub i32 %900, 626090296
  %902 = add i32 %901, %mul103alteredBB
  %903 = add i32 %902, 626090296
  %gen432 = add i32 %900, %mul103alteredBB
  %_433 = shl i32 %887, %mul103alteredBB
  %904 = sub i32 0, %mul103alteredBB
  %905 = add i32 %887, %904
  %_434 = sub i32 %887, %mul103alteredBB
  %gen435 = mul i32 %905, %mul103alteredBB
  %906 = add i32 %887, -296718835
  %907 = sub i32 %906, %mul103alteredBB
  %908 = sub i32 %907, -296718835
  %_436 = sub i32 %887, %mul103alteredBB
  %gen437 = mul i32 %908, %mul103alteredBB
  %909 = sub i32 %887, -447752175
  %910 = sub i32 %909, %mul103alteredBB
  %911 = add i32 %910, -447752175
  %_438 = sub i32 %887, %mul103alteredBB
  %gen439 = mul i32 %911, %mul103alteredBB
  %912 = sub i32 0, %mul103alteredBB
  %913 = add i32 %887, %912
  %sub104alteredBB = sub nsw i32 %887, %mul103alteredBB
  %e.reload623 = load volatile i32*, i32** %e.reg2mem
  %914 = load i32, i32* %e.reload623, align 4
  %915 = sub i32 %914, 1534760941
  %916 = sub i32 %915, 5
  %917 = add i32 %916, 1534760941
  %_440 = sub i32 %914, 5
  %gen441 = mul i32 %917, 5
  %918 = add i32 0, 1445992897
  %919 = sub i32 %918, %914
  %920 = sub i32 %919, 1445992897
  %_442 = sub i32 0, %914
  %921 = sub i32 %920, 864851412
  %922 = add i32 %921, 5
  %923 = add i32 %922, 864851412
  %gen443 = add i32 %920, 5
  %_444 = shl i32 %914, 5
  %mul105alteredBB = mul nsw i32 %914, 5
  %924 = add i32 0, 1358342452
  %925 = sub i32 %924, %913
  %926 = sub i32 %925, 1358342452
  %_445 = sub i32 0, %913
  %927 = sub i32 %926, 1883050203
  %928 = add i32 %927, %mul105alteredBB
  %929 = add i32 %928, 1883050203
  %gen446 = add i32 %926, %mul105alteredBB
  %930 = add i32 %913, 1614893325
  %931 = sub i32 %930, %mul105alteredBB
  %932 = sub i32 %931, 1614893325
  %_447 = sub i32 %913, %mul105alteredBB
  %gen448 = mul i32 %932, %mul105alteredBB
  %933 = sub i32 %913, -528382472
  %934 = sub i32 %933, %mul105alteredBB
  %935 = add i32 %934, -528382472
  %_449 = sub i32 %913, %mul105alteredBB
  %gen450 = mul i32 %935, %mul105alteredBB
  %_451 = shl i32 %913, %mul105alteredBB
  %936 = add i32 %913, -768941097
  %937 = sub i32 %936, %mul105alteredBB
  %938 = sub i32 %937, -768941097
  %_452 = sub i32 %913, %mul105alteredBB
  %gen453 = mul i32 %938, %mul105alteredBB
  %939 = sub i32 0, %913
  %940 = add i32 0, %939
  %_454 = sub i32 0, %913
  %941 = add i32 %940, 1015214958
  %942 = add i32 %941, %mul105alteredBB
  %943 = sub i32 %942, 1015214958
  %gen455 = add i32 %940, %mul105alteredBB
  %944 = add i32 %913, 1431374514
  %945 = sub i32 %944, %mul105alteredBB
  %946 = sub i32 %945, 1431374514
  %_456 = sub i32 %913, %mul105alteredBB
  %gen457 = mul i32 %946, %mul105alteredBB
  %947 = add i32 %913, -654205333
  %948 = sub i32 %947, %mul105alteredBB
  %949 = sub i32 %948, -654205333
  %sub106alteredBB = sub nsw i32 %913, %mul105alteredBB
  %f.reload630 = load volatile i32*, i32** %f.reg2mem
  store i32 %949, i32* %f.reload630, align 4
  store i32 -1805622368, i32* %switchVar
  br label %loopEnd

originalBB461alteredBB:                           ; preds = %loopEntry
  %n.reload = load volatile i32*, i32** %n.reg2mem
  %950 = load i32, i32* %n.reload, align 4
  %a.reload547 = load volatile i32*, i32** %a.reg2mem
  %951 = load i32, i32* %a.reload547, align 4
  %mul108alteredBB = mul nsw i32 %951, 100
  %952 = sub i32 0, %mul108alteredBB
  %953 = add i32 %950, %952
  %_462 = sub i32 %950, %mul108alteredBB
  %gen463 = mul i32 %953, %mul108alteredBB
  %954 = sub i32 0, 1375758435
  %955 = sub i32 %954, %950
  %956 = add i32 %955, 1375758435
  %_464 = sub i32 0, %950
  %957 = add i32 %956, 148614507
  %958 = add i32 %957, %mul108alteredBB
  %959 = sub i32 %958, 148614507
  %gen465 = add i32 %956, %mul108alteredBB
  %960 = sub i32 %950, -431901995
  %961 = sub i32 %960, %mul108alteredBB
  %962 = add i32 %961, -431901995
  %_466 = sub i32 %950, %mul108alteredBB
  %gen467 = mul i32 %962, %mul108alteredBB
  %963 = sub i32 0, %950
  %964 = add i32 0, %963
  %_468 = sub i32 0, %950
  %965 = add i32 %964, 1755410784
  %966 = add i32 %965, %mul108alteredBB
  %967 = sub i32 %966, 1755410784
  %gen469 = add i32 %964, %mul108alteredBB
  %_470 = shl i32 %950, %mul108alteredBB
  %968 = sub i32 %950, 810623842
  %969 = sub i32 %968, %mul108alteredBB
  %970 = add i32 %969, 810623842
  %sub109alteredBB = sub nsw i32 %950, %mul108alteredBB
  %b.reload571 = load volatile i32*, i32** %b.reg2mem
  %971 = load i32, i32* %b.reload571, align 4
  %_471 = shl i32 %971, 50
  %972 = sub i32 0, 1890760655
  %973 = sub i32 %972, %971
  %974 = add i32 %973, 1890760655
  %_472 = sub i32 0, %971
  %975 = sub i32 0, %974
  %976 = sub i32 0, 50
  %977 = add i32 %975, %976
  %978 = sub i32 0, %977
  %gen473 = add i32 %974, 50
  %_474 = shl i32 %971, 50
  %_475 = shl i32 %971, 50
  %979 = sub i32 %971, 1556577765
  %980 = sub i32 %979, 50
  %981 = add i32 %980, 1556577765
  %_476 = sub i32 %971, 50
  %gen477 = mul i32 %981, 50
  %982 = add i32 %971, -971763776
  %983 = sub i32 %982, 50
  %984 = sub i32 %983, -971763776
  %_478 = sub i32 %971, 50
  %gen479 = mul i32 %984, 50
  %985 = sub i32 %971, -1592605128
  %986 = sub i32 %985, 50
  %987 = add i32 %986, -1592605128
  %_480 = sub i32 %971, 50
  %gen481 = mul i32 %987, 50
  %mul110alteredBB = mul nsw i32 %971, 50
  %988 = add i32 %970, -175054191
  %989 = sub i32 %988, %mul110alteredBB
  %990 = sub i32 %989, -175054191
  %_482 = sub i32 %970, %mul110alteredBB
  %gen483 = mul i32 %990, %mul110alteredBB
  %991 = sub i32 %970, -1878798178
  %992 = sub i32 %991, %mul110alteredBB
  %993 = add i32 %992, -1878798178
  %sub111alteredBB = sub nsw i32 %970, %mul110alteredBB
  %c.reload593 = load volatile i32*, i32** %c.reg2mem
  %994 = load i32, i32* %c.reload593, align 4
  %995 = sub i32 0, 20
  %996 = add i32 %994, %995
  %_484 = sub i32 %994, 20
  %gen485 = mul i32 %996, 20
  %_486 = shl i32 %994, 20
  %997 = sub i32 0, %994
  %998 = add i32 0, %997
  %_487 = sub i32 0, %994
  %999 = sub i32 0, %998
  %1000 = sub i32 0, 20
  %1001 = add i32 %999, %1000
  %1002 = sub i32 0, %1001
  %gen488 = add i32 %998, 20
  %1003 = add i32 %994, 1141534643
  %1004 = sub i32 %1003, 20
  %1005 = sub i32 %1004, 1141534643
  %_489 = sub i32 %994, 20
  %gen490 = mul i32 %1005, 20
  %1006 = add i32 0, 1303335216
  %1007 = sub i32 %1006, %994
  %1008 = sub i32 %1007, 1303335216
  %_491 = sub i32 0, %994
  %1009 = add i32 %1008, 996134100
  %1010 = add i32 %1009, 20
  %1011 = sub i32 %1010, 996134100
  %gen492 = add i32 %1008, 20
  %1012 = sub i32 0, %994
  %1013 = add i32 0, %1012
  %_493 = sub i32 0, %994
  %1014 = sub i32 0, 20
  %1015 = sub i32 %1013, %1014
  %gen494 = add i32 %1013, 20
  %mul112alteredBB = mul nsw i32 %994, 20
  %_495 = shl i32 %993, %mul112alteredBB
  %_496 = shl i32 %993, %mul112alteredBB
  %1016 = sub i32 %993, -567075390
  %1017 = sub i32 %1016, %mul112alteredBB
  %1018 = add i32 %1017, -567075390
  %sub113alteredBB = sub nsw i32 %993, %mul112alteredBB
  %d.reload609 = load volatile i32*, i32** %d.reg2mem
  %1019 = load i32, i32* %d.reload609, align 4
  %1020 = add i32 0, 520906860
  %1021 = sub i32 %1020, %1019
  %1022 = sub i32 %1021, 520906860
  %_497 = sub i32 0, %1019
  %1023 = sub i32 0, 10
  %1024 = sub i32 %1022, %1023
  %gen498 = add i32 %1022, 10
  %1025 = add i32 %1019, 1493942217
  %1026 = sub i32 %1025, 10
  %1027 = sub i32 %1026, 1493942217
  %_499 = sub i32 %1019, 10
  %gen500 = mul i32 %1027, 10
  %_501 = shl i32 %1019, 10
  %1028 = sub i32 0, 10
  %1029 = add i32 %1019, %1028
  %_502 = sub i32 %1019, 10
  %gen503 = mul i32 %1029, 10
  %1030 = add i32 0, 1072655180
  %1031 = sub i32 %1030, %1019
  %1032 = sub i32 %1031, 1072655180
  %_504 = sub i32 0, %1019
  %1033 = sub i32 0, %1032
  %1034 = sub i32 0, 10
  %1035 = add i32 %1033, %1034
  %1036 = sub i32 0, %1035
  %gen505 = add i32 %1032, 10
  %1037 = add i32 0, 1049469114
  %1038 = sub i32 %1037, %1019
  %1039 = sub i32 %1038, 1049469114
  %_506 = sub i32 0, %1019
  %1040 = sub i32 0, 10
  %1041 = sub i32 %1039, %1040
  %gen507 = add i32 %1039, 10
  %1042 = sub i32 0, %1019
  %1043 = add i32 0, %1042
  %_508 = sub i32 0, %1019
  %1044 = sub i32 0, %1043
  %1045 = sub i32 0, 10
  %1046 = add i32 %1044, %1045
  %1047 = sub i32 0, %1046
  %gen509 = add i32 %1043, 10
  %mul114alteredBB = mul nsw i32 %1019, 10
  %_510 = shl i32 %1018, %mul114alteredBB
  %1048 = sub i32 0, %1018
  %1049 = add i32 0, %1048
  %_511 = sub i32 0, %1018
  %1050 = sub i32 0, %1049
  %1051 = sub i32 0, %mul114alteredBB
  %1052 = add i32 %1050, %1051
  %1053 = sub i32 0, %1052
  %gen512 = add i32 %1049, %mul114alteredBB
  %1054 = add i32 %1018, 106151654
  %1055 = sub i32 %1054, %mul114alteredBB
  %1056 = sub i32 %1055, 106151654
  %sub115alteredBB = sub nsw i32 %1018, %mul114alteredBB
  %cmp116alteredBB = icmp slt i32 %1056, 5
  store i32 1328580754, i32* %switchVar
  br label %loopEnd

originalBB516alteredBB:                           ; preds = %loopEntry
  %a.reload = load volatile i32*, i32** %a.reg2mem
  %1057 = load i32, i32* %a.reload, align 4
  %call130alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %1057)
  %b.reload = load volatile i32*, i32** %b.reg2mem
  %1058 = load i32, i32* %b.reload, align 4
  %call131alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %1058)
  %c.reload = load volatile i32*, i32** %c.reg2mem
  %1059 = load i32, i32* %c.reload, align 4
  %call132alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %1059)
  %d.reload = load volatile i32*, i32** %d.reg2mem
  %1060 = load i32, i32* %d.reload, align 4
  %call133alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %1060)
  %e.reload = load volatile i32*, i32** %e.reg2mem
  %1061 = load i32, i32* %e.reload, align 4
  %call134alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %1061)
  %f.reload = load volatile i32*, i32** %f.reg2mem
  %1062 = load i32, i32* %f.reload, align 4
  %call135alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %1062)
  store i32 1404319725, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB516alteredBB, %originalBB461alteredBB, %originalBB236alteredBB, %originalBBalteredBB, %originalBB516, %if.end129, %if.end128, %if.then117, %originalBBpart2514, %originalBB461, %if.else107, %originalBBpart2459, %originalBB236, %if.then77, %if.end67, %if.end66, %if.end, %if.then65, %if.else59, %if.then47, %land.lhs.true, %if.else, %if.then, %originalBBpart2, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
