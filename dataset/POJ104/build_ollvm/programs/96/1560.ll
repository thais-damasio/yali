; ModuleID = 'source-C-CXX/96/1560.c'
source_filename = "source-C-CXX/96/1560.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %i.reg2mem = alloca i32*
  %a.reg2mem = alloca [5 x i32]*
  %.reg2mem226 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = sub i32 %0, 344448390
  %3 = sub i32 %2, 1
  %4 = add i32 %3, 344448390
  %5 = sub i32 %0, 1
  %6 = mul i32 %0, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %.reg2mem
  %9 = icmp slt i32 %1, 10
  store i1 %9, i1* %.reg2mem226
  %switchVar = alloca i32
  store i32 27863498, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar225 = load i32, i32* %switchVar
  switch i32 %switchVar225, label %switchDefault [
    i32 27863498, label %first
    i32 -48978823, label %originalBB
    i32 1245661478, label %originalBBpart2
    i32 1955696438, label %for.cond
    i32 -102569522, label %for.body
    i32 -939442025, label %for.inc
    i32 -988070618, label %for.end
    i32 1195606822, label %originalBBalteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload227 = load volatile i1, i1* %.reg2mem226
  %10 = xor i1 %.reload, true
  %11 = xor i1 %.reload227, true
  %12 = xor i1 true, true
  %13 = and i1 %10, true
  %14 = and i1 %.reload, %12
  %15 = and i1 %11, true
  %16 = and i1 %.reload227, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 true, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %.reload, %.reload227
  %26 = select i1 %24, i32 -48978823, i32 1195606822
  store i32 %26, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %a = alloca [5 x i32], align 16
  store [5 x i32]* %a, [5 x i32]** %a.reg2mem
  %i = alloca i32, align 4
  store i32* %i, i32** %i.reg2mem
  store i32 0, i32* %retval, align 4
  %a.reload243 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %27 = bitcast [5 x i32]* %a.reload243 to i8*
  call void @llvm.memset.p0i8.i64(i8* %27, i8 0, i64 20, i32 16, i1 false)
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %28 = load i32, i32* %n, align 4
  %div = sdiv i32 %28, 100
  %a.reload242 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload242, i64 0, i64 0
  store i32 %div, i32* %arrayidx, align 16
  %29 = load i32, i32* %n, align 4
  %rem = srem i32 %29, 100
  %30 = load i32, i32* %n, align 4
  %rem1 = srem i32 %30, 100
  %rem2 = srem i32 %rem1, 50
  %31 = sub i32 %rem, -1721169340
  %32 = sub i32 %31, %rem2
  %33 = add i32 %32, -1721169340
  %sub = sub nsw i32 %rem, %rem2
  %div3 = sdiv i32 %33, 50
  %a.reload241 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx4 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload241, i64 0, i64 1
  store i32 %div3, i32* %arrayidx4, align 4
  %34 = load i32, i32* %n, align 4
  %a.reload240 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx5 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload240, i64 0, i64 0
  %35 = load i32, i32* %arrayidx5, align 16
  %mul = mul nsw i32 100, %35
  %36 = add i32 %34, -1354464897
  %37 = sub i32 %36, %mul
  %38 = sub i32 %37, -1354464897
  %sub6 = sub nsw i32 %34, %mul
  %a.reload239 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx7 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload239, i64 0, i64 1
  %39 = load i32, i32* %arrayidx7, align 4
  %mul8 = mul nsw i32 50, %39
  %40 = sub i32 %38, 1173091388
  %41 = sub i32 %40, %mul8
  %42 = add i32 %41, 1173091388
  %sub9 = sub nsw i32 %38, %mul8
  %div10 = sdiv i32 %42, 20
  %a.reload238 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx11 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload238, i64 0, i64 2
  store i32 %div10, i32* %arrayidx11, align 8
  %43 = load i32, i32* %n, align 4
  %a.reload237 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx12 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload237, i64 0, i64 0
  %44 = load i32, i32* %arrayidx12, align 16
  %mul13 = mul nsw i32 100, %44
  %45 = sub i32 0, %mul13
  %46 = add i32 %43, %45
  %sub14 = sub nsw i32 %43, %mul13
  %a.reload236 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx15 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload236, i64 0, i64 1
  %47 = load i32, i32* %arrayidx15, align 4
  %mul16 = mul nsw i32 50, %47
  %48 = add i32 %46, 2103256126
  %49 = sub i32 %48, %mul16
  %50 = sub i32 %49, 2103256126
  %sub17 = sub nsw i32 %46, %mul16
  %a.reload235 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx18 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload235, i64 0, i64 2
  %51 = load i32, i32* %arrayidx18, align 8
  %mul19 = mul nsw i32 20, %51
  %52 = sub i32 0, %mul19
  %53 = add i32 %50, %52
  %sub20 = sub nsw i32 %50, %mul19
  %div21 = sdiv i32 %53, 10
  %a.reload234 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx22 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload234, i64 0, i64 3
  store i32 %div21, i32* %arrayidx22, align 4
  %54 = load i32, i32* %n, align 4
  %a.reload233 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx23 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload233, i64 0, i64 0
  %55 = load i32, i32* %arrayidx23, align 16
  %mul24 = mul nsw i32 100, %55
  %56 = sub i32 0, %mul24
  %57 = add i32 %54, %56
  %sub25 = sub nsw i32 %54, %mul24
  %a.reload232 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx26 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload232, i64 0, i64 1
  %58 = load i32, i32* %arrayidx26, align 4
  %mul27 = mul nsw i32 50, %58
  %59 = sub i32 0, %mul27
  %60 = add i32 %57, %59
  %sub28 = sub nsw i32 %57, %mul27
  %a.reload231 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx29 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload231, i64 0, i64 2
  %61 = load i32, i32* %arrayidx29, align 8
  %mul30 = mul nsw i32 20, %61
  %62 = sub i32 0, %mul30
  %63 = add i32 %60, %62
  %sub31 = sub nsw i32 %60, %mul30
  %a.reload230 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx32 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload230, i64 0, i64 3
  %64 = load i32, i32* %arrayidx32, align 4
  %mul33 = mul nsw i32 10, %64
  %65 = sub i32 0, %mul33
  %66 = add i32 %63, %65
  %sub34 = sub nsw i32 %63, %mul33
  %div35 = sdiv i32 %66, 5
  %a.reload229 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx36 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload229, i64 0, i64 4
  store i32 %div35, i32* %arrayidx36, align 16
  %67 = load i32, i32* %n, align 4
  %rem37 = srem i32 %67, 5
  %a.reload228 = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx38 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload228, i64 0, i64 5
  store i32 %rem37, i32* %arrayidx38, align 4
  %i.reload247 = load volatile i32*, i32** %i.reg2mem
  store i32 0, i32* %i.reload247, align 4
  %68 = load i32, i32* @x
  %69 = load i32, i32* @y
  %70 = sub i32 %68, -2076425015
  %71 = sub i32 %70, 1
  %72 = add i32 %71, -2076425015
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 1245661478, i32 1195606822
  store i32 %82, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  store i32 1955696438, i32* %switchVar
  br label %loopEnd

for.cond:                                         ; preds = %loopEntry
  %i.reload246 = load volatile i32*, i32** %i.reg2mem
  %83 = load i32, i32* %i.reload246, align 4
  %cmp = icmp slt i32 %83, 6
  %84 = select i1 %cmp, i32 -102569522, i32 -988070618
  store i32 %84, i32* %switchVar
  br label %loopEnd

for.body:                                         ; preds = %loopEntry
  %i.reload245 = load volatile i32*, i32** %i.reg2mem
  %85 = load i32, i32* %i.reload245, align 4
  %idxprom = sext i32 %85 to i64
  %a.reload = load volatile [5 x i32]*, [5 x i32]** %a.reg2mem
  %arrayidx39 = getelementptr inbounds [5 x i32], [5 x i32]* %a.reload, i64 0, i64 %idxprom
  %86 = load i32, i32* %arrayidx39, align 4
  %call40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %86)
  store i32 -939442025, i32* %switchVar
  br label %loopEnd

for.inc:                                          ; preds = %loopEntry
  %i.reload244 = load volatile i32*, i32** %i.reg2mem
  %87 = load i32, i32* %i.reload244, align 4
  %88 = sub i32 0, 1
  %89 = sub i32 %87, %88
  %inc = add nsw i32 %87, 1
  %i.reload = load volatile i32*, i32** %i.reg2mem
  store i32 %89, i32* %i.reload, align 4
  store i32 1955696438, i32* %switchVar
  br label %loopEnd

for.end:                                          ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %nalteredBB = alloca i32, align 4
  %aalteredBB = alloca [5 x i32], align 16
  %ialteredBB = alloca i32, align 4
  store i32 0, i32* %retvalalteredBB, align 4
  %90 = bitcast [5 x i32]* %aalteredBB to i8*
  call void @llvm.memset.p0i8.i64(i8* %90, i8 0, i64 20, i32 16, i1 false)
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %nalteredBB)
  %91 = load i32, i32* %nalteredBB, align 4
  %92 = sub i32 0, -1012199000
  %93 = sub i32 %92, %91
  %94 = add i32 %93, -1012199000
  %_ = sub i32 0, %91
  %95 = sub i32 0, %94
  %96 = sub i32 0, 100
  %97 = add i32 %95, %96
  %98 = sub i32 0, %97
  %gen = add i32 %94, 100
  %_41 = shl i32 %91, 100
  %99 = sub i32 0, -1019130754
  %100 = sub i32 %99, %91
  %101 = add i32 %100, -1019130754
  %_42 = sub i32 0, %91
  %102 = sub i32 %101, -482151867
  %103 = add i32 %102, 100
  %104 = add i32 %103, -482151867
  %gen43 = add i32 %101, 100
  %105 = add i32 0, 1145330356
  %106 = sub i32 %105, %91
  %107 = sub i32 %106, 1145330356
  %_44 = sub i32 0, %91
  %108 = sub i32 %107, -187585155
  %109 = add i32 %108, 100
  %110 = add i32 %109, -187585155
  %gen45 = add i32 %107, 100
  %divalteredBB = sdiv i32 %91, 100
  %arrayidxalteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 0
  store i32 %divalteredBB, i32* %arrayidxalteredBB, align 16
  %111 = load i32, i32* %nalteredBB, align 4
  %112 = add i32 0, 320905601
  %113 = sub i32 %112, %111
  %114 = sub i32 %113, 320905601
  %_46 = sub i32 0, %111
  %115 = sub i32 0, 100
  %116 = sub i32 %114, %115
  %gen47 = add i32 %114, 100
  %117 = sub i32 %111, -1468018103
  %118 = sub i32 %117, 100
  %119 = add i32 %118, -1468018103
  %_48 = sub i32 %111, 100
  %gen49 = mul i32 %119, 100
  %120 = sub i32 0, 2079870208
  %121 = sub i32 %120, %111
  %122 = add i32 %121, 2079870208
  %_50 = sub i32 0, %111
  %123 = sub i32 0, %122
  %124 = sub i32 0, 100
  %125 = add i32 %123, %124
  %126 = sub i32 0, %125
  %gen51 = add i32 %122, 100
  %_52 = shl i32 %111, 100
  %_53 = shl i32 %111, 100
  %_54 = shl i32 %111, 100
  %remalteredBB = srem i32 %111, 100
  %127 = load i32, i32* %nalteredBB, align 4
  %128 = sub i32 0, -388179619
  %129 = sub i32 %128, %127
  %130 = add i32 %129, -388179619
  %_55 = sub i32 0, %127
  %131 = sub i32 0, %130
  %132 = sub i32 0, 100
  %133 = add i32 %131, %132
  %134 = sub i32 0, %133
  %gen56 = add i32 %130, 100
  %_57 = shl i32 %127, 100
  %rem1alteredBB = srem i32 %127, 100
  %135 = sub i32 0, %rem1alteredBB
  %136 = add i32 0, %135
  %_58 = sub i32 0, %rem1alteredBB
  %137 = sub i32 0, %136
  %138 = sub i32 0, 50
  %139 = add i32 %137, %138
  %140 = sub i32 0, %139
  %gen59 = add i32 %136, 50
  %141 = sub i32 0, -2121412708
  %142 = sub i32 %141, %rem1alteredBB
  %143 = add i32 %142, -2121412708
  %_60 = sub i32 0, %rem1alteredBB
  %144 = add i32 %143, 1947747917
  %145 = add i32 %144, 50
  %146 = sub i32 %145, 1947747917
  %gen61 = add i32 %143, 50
  %147 = sub i32 %rem1alteredBB, 1972813947
  %148 = sub i32 %147, 50
  %149 = add i32 %148, 1972813947
  %_62 = sub i32 %rem1alteredBB, 50
  %gen63 = mul i32 %149, 50
  %150 = sub i32 %rem1alteredBB, 2022737151
  %151 = sub i32 %150, 50
  %152 = add i32 %151, 2022737151
  %_64 = sub i32 %rem1alteredBB, 50
  %gen65 = mul i32 %152, 50
  %153 = add i32 %rem1alteredBB, -429185846
  %154 = sub i32 %153, 50
  %155 = sub i32 %154, -429185846
  %_66 = sub i32 %rem1alteredBB, 50
  %gen67 = mul i32 %155, 50
  %156 = sub i32 0, -592032562
  %157 = sub i32 %156, %rem1alteredBB
  %158 = add i32 %157, -592032562
  %_68 = sub i32 0, %rem1alteredBB
  %159 = sub i32 %158, 144957507
  %160 = add i32 %159, 50
  %161 = add i32 %160, 144957507
  %gen69 = add i32 %158, 50
  %rem2alteredBB = srem i32 %rem1alteredBB, 50
  %162 = add i32 0, -1460753989
  %163 = sub i32 %162, %remalteredBB
  %164 = sub i32 %163, -1460753989
  %_70 = sub i32 0, %remalteredBB
  %165 = sub i32 0, %164
  %166 = sub i32 0, %rem2alteredBB
  %167 = add i32 %165, %166
  %168 = sub i32 0, %167
  %gen71 = add i32 %164, %rem2alteredBB
  %_72 = shl i32 %remalteredBB, %rem2alteredBB
  %169 = sub i32 0, -49636184
  %170 = sub i32 %169, %remalteredBB
  %171 = add i32 %170, -49636184
  %_73 = sub i32 0, %remalteredBB
  %172 = sub i32 %171, 101392198
  %173 = add i32 %172, %rem2alteredBB
  %174 = add i32 %173, 101392198
  %gen74 = add i32 %171, %rem2alteredBB
  %175 = sub i32 0, %rem2alteredBB
  %176 = add i32 %remalteredBB, %175
  %_75 = sub i32 %remalteredBB, %rem2alteredBB
  %gen76 = mul i32 %176, %rem2alteredBB
  %177 = sub i32 %remalteredBB, -45112798
  %178 = sub i32 %177, %rem2alteredBB
  %179 = add i32 %178, -45112798
  %subalteredBB = sub nsw i32 %remalteredBB, %rem2alteredBB
  %_77 = shl i32 %179, 50
  %180 = sub i32 0, 518511820
  %181 = sub i32 %180, %179
  %182 = add i32 %181, 518511820
  %_78 = sub i32 0, %179
  %183 = add i32 %182, 1750647881
  %184 = add i32 %183, 50
  %185 = sub i32 %184, 1750647881
  %gen79 = add i32 %182, 50
  %_80 = shl i32 %179, 50
  %_81 = shl i32 %179, 50
  %_82 = shl i32 %179, 50
  %_83 = shl i32 %179, 50
  %div3alteredBB = sdiv i32 %179, 50
  %arrayidx4alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 1
  store i32 %div3alteredBB, i32* %arrayidx4alteredBB, align 4
  %186 = load i32, i32* %nalteredBB, align 4
  %arrayidx5alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 0
  %187 = load i32, i32* %arrayidx5alteredBB, align 16
  %_84 = shl i32 100, %187
  %188 = add i32 0, -123894063
  %189 = sub i32 %188, 100
  %190 = sub i32 %189, -123894063
  %_85 = sub i32 0, 100
  %191 = add i32 %190, -356781390
  %192 = add i32 %191, %187
  %193 = sub i32 %192, -356781390
  %gen86 = add i32 %190, %187
  %194 = add i32 100, 1179410159
  %195 = sub i32 %194, %187
  %196 = sub i32 %195, 1179410159
  %_87 = sub i32 100, %187
  %gen88 = mul i32 %196, %187
  %197 = sub i32 0, 100
  %198 = add i32 0, %197
  %_89 = sub i32 0, 100
  %199 = sub i32 0, %198
  %200 = sub i32 0, %187
  %201 = add i32 %199, %200
  %202 = sub i32 0, %201
  %gen90 = add i32 %198, %187
  %_91 = shl i32 100, %187
  %203 = sub i32 0, 100
  %204 = add i32 0, %203
  %_92 = sub i32 0, 100
  %205 = add i32 %204, -1425145629
  %206 = add i32 %205, %187
  %207 = sub i32 %206, -1425145629
  %gen93 = add i32 %204, %187
  %_94 = shl i32 100, %187
  %mulalteredBB = mul nsw i32 100, %187
  %208 = add i32 %186, -2006005684
  %209 = sub i32 %208, %mulalteredBB
  %210 = sub i32 %209, -2006005684
  %sub6alteredBB = sub nsw i32 %186, %mulalteredBB
  %arrayidx7alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 1
  %211 = load i32, i32* %arrayidx7alteredBB, align 4
  %212 = add i32 50, 1408804245
  %213 = sub i32 %212, %211
  %214 = sub i32 %213, 1408804245
  %_95 = sub i32 50, %211
  %gen96 = mul i32 %214, %211
  %215 = sub i32 50, 1599111530
  %216 = sub i32 %215, %211
  %217 = add i32 %216, 1599111530
  %_97 = sub i32 50, %211
  %gen98 = mul i32 %217, %211
  %mul8alteredBB = mul nsw i32 50, %211
  %_99 = shl i32 %210, %mul8alteredBB
  %218 = sub i32 0, %mul8alteredBB
  %219 = add i32 %210, %218
  %_100 = sub i32 %210, %mul8alteredBB
  %gen101 = mul i32 %219, %mul8alteredBB
  %220 = add i32 0, 1187013507
  %221 = sub i32 %220, %210
  %222 = sub i32 %221, 1187013507
  %_102 = sub i32 0, %210
  %223 = sub i32 0, %222
  %224 = sub i32 0, %mul8alteredBB
  %225 = add i32 %223, %224
  %226 = sub i32 0, %225
  %gen103 = add i32 %222, %mul8alteredBB
  %227 = add i32 0, 1852374626
  %228 = sub i32 %227, %210
  %229 = sub i32 %228, 1852374626
  %_104 = sub i32 0, %210
  %230 = sub i32 0, %229
  %231 = sub i32 0, %mul8alteredBB
  %232 = add i32 %230, %231
  %233 = sub i32 0, %232
  %gen105 = add i32 %229, %mul8alteredBB
  %234 = sub i32 0, -1463569851
  %235 = sub i32 %234, %210
  %236 = add i32 %235, -1463569851
  %_106 = sub i32 0, %210
  %237 = add i32 %236, -1816251780
  %238 = add i32 %237, %mul8alteredBB
  %239 = sub i32 %238, -1816251780
  %gen107 = add i32 %236, %mul8alteredBB
  %240 = sub i32 %210, -647399958
  %241 = sub i32 %240, %mul8alteredBB
  %242 = add i32 %241, -647399958
  %_108 = sub i32 %210, %mul8alteredBB
  %gen109 = mul i32 %242, %mul8alteredBB
  %_110 = shl i32 %210, %mul8alteredBB
  %_111 = shl i32 %210, %mul8alteredBB
  %_112 = shl i32 %210, %mul8alteredBB
  %243 = sub i32 0, %mul8alteredBB
  %244 = add i32 %210, %243
  %sub9alteredBB = sub nsw i32 %210, %mul8alteredBB
  %245 = sub i32 0, 20
  %246 = add i32 %244, %245
  %_113 = sub i32 %244, 20
  %gen114 = mul i32 %246, 20
  %247 = add i32 %244, 414140235
  %248 = sub i32 %247, 20
  %249 = sub i32 %248, 414140235
  %_115 = sub i32 %244, 20
  %gen116 = mul i32 %249, 20
  %div10alteredBB = sdiv i32 %244, 20
  %arrayidx11alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 2
  store i32 %div10alteredBB, i32* %arrayidx11alteredBB, align 8
  %250 = load i32, i32* %nalteredBB, align 4
  %arrayidx12alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 0
  %251 = load i32, i32* %arrayidx12alteredBB, align 16
  %252 = sub i32 0, 100
  %253 = add i32 0, %252
  %_117 = sub i32 0, 100
  %254 = sub i32 0, %251
  %255 = sub i32 %253, %254
  %gen118 = add i32 %253, %251
  %256 = sub i32 0, %251
  %257 = add i32 100, %256
  %_119 = sub i32 100, %251
  %gen120 = mul i32 %257, %251
  %_121 = shl i32 100, %251
  %_122 = shl i32 100, %251
  %_123 = shl i32 100, %251
  %258 = sub i32 100, 292481005
  %259 = sub i32 %258, %251
  %260 = add i32 %259, 292481005
  %_124 = sub i32 100, %251
  %gen125 = mul i32 %260, %251
  %261 = add i32 100, 239264575
  %262 = sub i32 %261, %251
  %263 = sub i32 %262, 239264575
  %_126 = sub i32 100, %251
  %gen127 = mul i32 %263, %251
  %mul13alteredBB = mul nsw i32 100, %251
  %264 = sub i32 %250, -1362459816
  %265 = sub i32 %264, %mul13alteredBB
  %266 = add i32 %265, -1362459816
  %_128 = sub i32 %250, %mul13alteredBB
  %gen129 = mul i32 %266, %mul13alteredBB
  %267 = sub i32 0, -20298753
  %268 = sub i32 %267, %250
  %269 = add i32 %268, -20298753
  %_130 = sub i32 0, %250
  %270 = sub i32 %269, 1879588221
  %271 = add i32 %270, %mul13alteredBB
  %272 = add i32 %271, 1879588221
  %gen131 = add i32 %269, %mul13alteredBB
  %_132 = shl i32 %250, %mul13alteredBB
  %273 = add i32 0, 1308919819
  %274 = sub i32 %273, %250
  %275 = sub i32 %274, 1308919819
  %_133 = sub i32 0, %250
  %276 = sub i32 %275, 1762220505
  %277 = add i32 %276, %mul13alteredBB
  %278 = add i32 %277, 1762220505
  %gen134 = add i32 %275, %mul13alteredBB
  %279 = add i32 %250, -1340746060
  %280 = sub i32 %279, %mul13alteredBB
  %281 = sub i32 %280, -1340746060
  %sub14alteredBB = sub nsw i32 %250, %mul13alteredBB
  %arrayidx15alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 1
  %282 = load i32, i32* %arrayidx15alteredBB, align 4
  %283 = sub i32 0, 50
  %284 = add i32 0, %283
  %_135 = sub i32 0, 50
  %285 = sub i32 %284, -2124055988
  %286 = add i32 %285, %282
  %287 = add i32 %286, -2124055988
  %gen136 = add i32 %284, %282
  %288 = sub i32 0, 50
  %289 = add i32 0, %288
  %_137 = sub i32 0, 50
  %290 = sub i32 0, %282
  %291 = sub i32 %289, %290
  %gen138 = add i32 %289, %282
  %_139 = shl i32 50, %282
  %_140 = shl i32 50, %282
  %_141 = shl i32 50, %282
  %mul16alteredBB = mul nsw i32 50, %282
  %_142 = shl i32 %281, %mul16alteredBB
  %_143 = shl i32 %281, %mul16alteredBB
  %292 = sub i32 0, %281
  %293 = add i32 0, %292
  %_144 = sub i32 0, %281
  %294 = sub i32 0, %293
  %295 = sub i32 0, %mul16alteredBB
  %296 = add i32 %294, %295
  %297 = sub i32 0, %296
  %gen145 = add i32 %293, %mul16alteredBB
  %_146 = shl i32 %281, %mul16alteredBB
  %298 = add i32 0, -1147207116
  %299 = sub i32 %298, %281
  %300 = sub i32 %299, -1147207116
  %_147 = sub i32 0, %281
  %301 = add i32 %300, -1353958895
  %302 = add i32 %301, %mul16alteredBB
  %303 = sub i32 %302, -1353958895
  %gen148 = add i32 %300, %mul16alteredBB
  %304 = sub i32 %281, 776857557
  %305 = sub i32 %304, %mul16alteredBB
  %306 = add i32 %305, 776857557
  %_149 = sub i32 %281, %mul16alteredBB
  %gen150 = mul i32 %306, %mul16alteredBB
  %307 = sub i32 %281, -270218264
  %308 = sub i32 %307, %mul16alteredBB
  %309 = add i32 %308, -270218264
  %sub17alteredBB = sub nsw i32 %281, %mul16alteredBB
  %arrayidx18alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 2
  %310 = load i32, i32* %arrayidx18alteredBB, align 8
  %311 = sub i32 0, %310
  %312 = add i32 20, %311
  %_151 = sub i32 20, %310
  %gen152 = mul i32 %312, %310
  %313 = sub i32 0, %310
  %314 = add i32 20, %313
  %_153 = sub i32 20, %310
  %gen154 = mul i32 %314, %310
  %315 = sub i32 0, %310
  %316 = add i32 20, %315
  %_155 = sub i32 20, %310
  %gen156 = mul i32 %316, %310
  %317 = sub i32 0, 1042743061
  %318 = sub i32 %317, 20
  %319 = add i32 %318, 1042743061
  %_157 = sub i32 0, 20
  %320 = sub i32 0, %319
  %321 = sub i32 0, %310
  %322 = add i32 %320, %321
  %323 = sub i32 0, %322
  %gen158 = add i32 %319, %310
  %324 = add i32 0, 1344300123
  %325 = sub i32 %324, 20
  %326 = sub i32 %325, 1344300123
  %_159 = sub i32 0, 20
  %327 = sub i32 0, %326
  %328 = sub i32 0, %310
  %329 = add i32 %327, %328
  %330 = sub i32 0, %329
  %gen160 = add i32 %326, %310
  %mul19alteredBB = mul nsw i32 20, %310
  %331 = sub i32 0, -971415552
  %332 = sub i32 %331, %309
  %333 = add i32 %332, -971415552
  %_161 = sub i32 0, %309
  %334 = add i32 %333, 1716585567
  %335 = add i32 %334, %mul19alteredBB
  %336 = sub i32 %335, 1716585567
  %gen162 = add i32 %333, %mul19alteredBB
  %_163 = shl i32 %309, %mul19alteredBB
  %337 = sub i32 0, 1512094359
  %338 = sub i32 %337, %309
  %339 = add i32 %338, 1512094359
  %_164 = sub i32 0, %309
  %340 = add i32 %339, -1282077828
  %341 = add i32 %340, %mul19alteredBB
  %342 = sub i32 %341, -1282077828
  %gen165 = add i32 %339, %mul19alteredBB
  %343 = sub i32 0, %mul19alteredBB
  %344 = add i32 %309, %343
  %sub20alteredBB = sub nsw i32 %309, %mul19alteredBB
  %345 = add i32 0, 1549321995
  %346 = sub i32 %345, %344
  %347 = sub i32 %346, 1549321995
  %_166 = sub i32 0, %344
  %348 = sub i32 0, 10
  %349 = sub i32 %347, %348
  %gen167 = add i32 %347, 10
  %div21alteredBB = sdiv i32 %344, 10
  %arrayidx22alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 3
  store i32 %div21alteredBB, i32* %arrayidx22alteredBB, align 4
  %350 = load i32, i32* %nalteredBB, align 4
  %arrayidx23alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 0
  %351 = load i32, i32* %arrayidx23alteredBB, align 16
  %352 = sub i32 100, -649655631
  %353 = sub i32 %352, %351
  %354 = add i32 %353, -649655631
  %_168 = sub i32 100, %351
  %gen169 = mul i32 %354, %351
  %355 = add i32 0, -1221490147
  %356 = sub i32 %355, 100
  %357 = sub i32 %356, -1221490147
  %_170 = sub i32 0, 100
  %358 = sub i32 0, %351
  %359 = sub i32 %357, %358
  %gen171 = add i32 %357, %351
  %360 = sub i32 0, %351
  %361 = add i32 100, %360
  %_172 = sub i32 100, %351
  %gen173 = mul i32 %361, %351
  %mul24alteredBB = mul nsw i32 100, %351
  %362 = sub i32 0, %mul24alteredBB
  %363 = add i32 %350, %362
  %_174 = sub i32 %350, %mul24alteredBB
  %gen175 = mul i32 %363, %mul24alteredBB
  %364 = sub i32 %350, 1101739806
  %365 = sub i32 %364, %mul24alteredBB
  %366 = add i32 %365, 1101739806
  %_176 = sub i32 %350, %mul24alteredBB
  %gen177 = mul i32 %366, %mul24alteredBB
  %367 = sub i32 0, %mul24alteredBB
  %368 = add i32 %350, %367
  %sub25alteredBB = sub nsw i32 %350, %mul24alteredBB
  %arrayidx26alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 1
  %369 = load i32, i32* %arrayidx26alteredBB, align 4
  %370 = sub i32 0, 375129278
  %371 = sub i32 %370, 50
  %372 = add i32 %371, 375129278
  %_178 = sub i32 0, 50
  %373 = add i32 %372, 947596595
  %374 = add i32 %373, %369
  %375 = sub i32 %374, 947596595
  %gen179 = add i32 %372, %369
  %376 = sub i32 50, -917583280
  %377 = sub i32 %376, %369
  %378 = add i32 %377, -917583280
  %_180 = sub i32 50, %369
  %gen181 = mul i32 %378, %369
  %379 = sub i32 50, 1305843483
  %380 = sub i32 %379, %369
  %381 = add i32 %380, 1305843483
  %_182 = sub i32 50, %369
  %gen183 = mul i32 %381, %369
  %_184 = shl i32 50, %369
  %_185 = shl i32 50, %369
  %382 = sub i32 0, 50
  %383 = add i32 0, %382
  %_186 = sub i32 0, 50
  %384 = sub i32 %383, 126770580
  %385 = add i32 %384, %369
  %386 = add i32 %385, 126770580
  %gen187 = add i32 %383, %369
  %387 = sub i32 0, 50
  %388 = add i32 0, %387
  %_188 = sub i32 0, 50
  %389 = sub i32 %388, 933117742
  %390 = add i32 %389, %369
  %391 = add i32 %390, 933117742
  %gen189 = add i32 %388, %369
  %392 = add i32 50, -2031528078
  %393 = sub i32 %392, %369
  %394 = sub i32 %393, -2031528078
  %_190 = sub i32 50, %369
  %gen191 = mul i32 %394, %369
  %_192 = shl i32 50, %369
  %mul27alteredBB = mul nsw i32 50, %369
  %395 = add i32 %368, -912523250
  %396 = sub i32 %395, %mul27alteredBB
  %397 = sub i32 %396, -912523250
  %_193 = sub i32 %368, %mul27alteredBB
  %gen194 = mul i32 %397, %mul27alteredBB
  %398 = sub i32 %368, 1358643596
  %399 = sub i32 %398, %mul27alteredBB
  %400 = add i32 %399, 1358643596
  %sub28alteredBB = sub nsw i32 %368, %mul27alteredBB
  %arrayidx29alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 2
  %401 = load i32, i32* %arrayidx29alteredBB, align 8
  %402 = sub i32 0, 20
  %403 = add i32 0, %402
  %_195 = sub i32 0, 20
  %404 = add i32 %403, 584115875
  %405 = add i32 %404, %401
  %406 = sub i32 %405, 584115875
  %gen196 = add i32 %403, %401
  %mul30alteredBB = mul nsw i32 20, %401
  %407 = sub i32 %400, -196264473
  %408 = sub i32 %407, %mul30alteredBB
  %409 = add i32 %408, -196264473
  %_197 = sub i32 %400, %mul30alteredBB
  %gen198 = mul i32 %409, %mul30alteredBB
  %_199 = shl i32 %400, %mul30alteredBB
  %410 = add i32 %400, 1327684144
  %411 = sub i32 %410, %mul30alteredBB
  %412 = sub i32 %411, 1327684144
  %_200 = sub i32 %400, %mul30alteredBB
  %gen201 = mul i32 %412, %mul30alteredBB
  %413 = add i32 %400, -474051380
  %414 = sub i32 %413, %mul30alteredBB
  %415 = sub i32 %414, -474051380
  %_202 = sub i32 %400, %mul30alteredBB
  %gen203 = mul i32 %415, %mul30alteredBB
  %416 = sub i32 0, -2085998969
  %417 = sub i32 %416, %400
  %418 = add i32 %417, -2085998969
  %_204 = sub i32 0, %400
  %419 = sub i32 %418, -694090444
  %420 = add i32 %419, %mul30alteredBB
  %421 = add i32 %420, -694090444
  %gen205 = add i32 %418, %mul30alteredBB
  %_206 = shl i32 %400, %mul30alteredBB
  %422 = add i32 %400, 930779789
  %423 = sub i32 %422, %mul30alteredBB
  %424 = sub i32 %423, 930779789
  %sub31alteredBB = sub nsw i32 %400, %mul30alteredBB
  %arrayidx32alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 3
  %425 = load i32, i32* %arrayidx32alteredBB, align 4
  %426 = sub i32 0, 10
  %427 = add i32 0, %426
  %_207 = sub i32 0, 10
  %428 = sub i32 0, %427
  %429 = sub i32 0, %425
  %430 = add i32 %428, %429
  %431 = sub i32 0, %430
  %gen208 = add i32 %427, %425
  %mul33alteredBB = mul nsw i32 10, %425
  %432 = sub i32 %424, 1084538187
  %433 = sub i32 %432, %mul33alteredBB
  %434 = add i32 %433, 1084538187
  %_209 = sub i32 %424, %mul33alteredBB
  %gen210 = mul i32 %434, %mul33alteredBB
  %_211 = shl i32 %424, %mul33alteredBB
  %435 = sub i32 0, %mul33alteredBB
  %436 = add i32 %424, %435
  %_212 = sub i32 %424, %mul33alteredBB
  %gen213 = mul i32 %436, %mul33alteredBB
  %437 = sub i32 0, %mul33alteredBB
  %438 = add i32 %424, %437
  %sub34alteredBB = sub nsw i32 %424, %mul33alteredBB
  %_214 = shl i32 %438, 5
  %439 = sub i32 0, -1660496740
  %440 = sub i32 %439, %438
  %441 = add i32 %440, -1660496740
  %_215 = sub i32 0, %438
  %442 = sub i32 0, %441
  %443 = sub i32 0, 5
  %444 = add i32 %442, %443
  %445 = sub i32 0, %444
  %gen216 = add i32 %441, 5
  %446 = sub i32 %438, 1308282408
  %447 = sub i32 %446, 5
  %448 = add i32 %447, 1308282408
  %_217 = sub i32 %438, 5
  %gen218 = mul i32 %448, 5
  %_219 = shl i32 %438, 5
  %449 = sub i32 0, 760917603
  %450 = sub i32 %449, %438
  %451 = add i32 %450, 760917603
  %_220 = sub i32 0, %438
  %452 = add i32 %451, -863992156
  %453 = add i32 %452, 5
  %454 = sub i32 %453, -863992156
  %gen221 = add i32 %451, 5
  %_222 = shl i32 %438, 5
  %div35alteredBB = sdiv i32 %438, 5
  %arrayidx36alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 4
  store i32 %div35alteredBB, i32* %arrayidx36alteredBB, align 16
  %455 = load i32, i32* %nalteredBB, align 4
  %456 = sub i32 0, 5
  %457 = add i32 %455, %456
  %_223 = sub i32 %455, 5
  %gen224 = mul i32 %457, 5
  %rem37alteredBB = srem i32 %455, 5
  %arrayidx38alteredBB = getelementptr inbounds [5 x i32], [5 x i32]* %aalteredBB, i64 0, i64 5
  store i32 %rem37alteredBB, i32* %arrayidx38alteredBB, align 4
  store i32 0, i32* %ialteredBB, align 4
  store i32 -48978823, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBBalteredBB, %for.inc, %for.body, %for.cond, %originalBBpart2, %originalBB, %first, %switchDefault
  br label %loopEntry
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

declare i32 @__isoc99_scanf(i8*, ...) #2

declare i32 @printf(i8*, ...) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
