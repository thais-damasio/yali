; ModuleID = 'source-C-CXX/96/1176.c'
source_filename = "source-C-CXX/96/1176.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %num.reg2mem = alloca [6 x i32]*
  %i.reg2mem = alloca i32*
  %.reg2mem292 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = sub i32 %0, 8560557
  %3 = sub i32 %2, 1
  %4 = add i32 %3, 8560557
  %5 = sub i32 %0, 1
  %6 = mul i32 %0, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %.reg2mem
  %9 = icmp slt i32 %1, 10
  store i1 %9, i1* %.reg2mem292
  %switchVar = alloca i32
  store i32 -786410051, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar291 = load i32, i32* %switchVar
  switch i32 %switchVar291, label %switchDefault [
    i32 -786410051, label %first
    i32 2021656115, label %originalBB
    i32 -1157370885, label %originalBBpart2
    i32 -2028865710, label %for.cond
    i32 -1812211865, label %for.body
    i32 -1422545804, label %originalBB287
    i32 294953799, label %originalBBpart2289
    i32 781513742, label %for.inc
    i32 216708096, label %for.end
    i32 -1989061605, label %originalBBalteredBB
    i32 1065340547, label %originalBB287alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload293 = load volatile i1, i1* %.reg2mem292
  %10 = xor i1 %.reload, true
  %11 = xor i1 %.reload293, true
  %12 = xor i1 false, true
  %13 = and i1 %10, false
  %14 = and i1 %.reload, %12
  %15 = and i1 %11, false
  %16 = and i1 %.reload293, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 false, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %.reload, %.reload293
  %26 = select i1 %24, i32 2021656115, i32 -1989061605
  store i32 %26, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %money = alloca i32, align 4
  %i = alloca i32, align 4
  store i32* %i, i32** %i.reg2mem
  %num = alloca [6 x i32], align 16
  store [6 x i32]* %num, [6 x i32]** %num.reg2mem
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %money)
  %27 = load i32, i32* %money, align 4
  %div = sdiv i32 %27, 100
  %num.reload320 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload320, i64 0, i64 0
  store i32 %div, i32* %arrayidx, align 16
  %28 = load i32, i32* %money, align 4
  %num.reload319 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx1 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload319, i64 0, i64 0
  %29 = load i32, i32* %arrayidx1, align 16
  %mul = mul nsw i32 100, %29
  %30 = sub i32 %28, 2137125806
  %31 = sub i32 %30, %mul
  %32 = add i32 %31, 2137125806
  %sub = sub nsw i32 %28, %mul
  %div2 = sdiv i32 %32, 50
  %num.reload318 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx3 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload318, i64 0, i64 1
  store i32 %div2, i32* %arrayidx3, align 4
  %33 = load i32, i32* %money, align 4
  %num.reload317 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload317, i64 0, i64 0
  %34 = load i32, i32* %arrayidx4, align 16
  %mul5 = mul nsw i32 100, %34
  %35 = add i32 %33, -665205188
  %36 = sub i32 %35, %mul5
  %37 = sub i32 %36, -665205188
  %sub6 = sub nsw i32 %33, %mul5
  %num.reload316 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx7 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload316, i64 0, i64 1
  %38 = load i32, i32* %arrayidx7, align 4
  %mul8 = mul nsw i32 50, %38
  %39 = sub i32 %37, -118058579
  %40 = sub i32 %39, %mul8
  %41 = add i32 %40, -118058579
  %sub9 = sub nsw i32 %37, %mul8
  %div10 = sdiv i32 %41, 20
  %num.reload315 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx11 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload315, i64 0, i64 2
  store i32 %div10, i32* %arrayidx11, align 8
  %42 = load i32, i32* %money, align 4
  %num.reload314 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx12 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload314, i64 0, i64 0
  %43 = load i32, i32* %arrayidx12, align 16
  %mul13 = mul nsw i32 100, %43
  %44 = sub i32 %42, -171657913
  %45 = sub i32 %44, %mul13
  %46 = add i32 %45, -171657913
  %sub14 = sub nsw i32 %42, %mul13
  %num.reload313 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx15 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload313, i64 0, i64 1
  %47 = load i32, i32* %arrayidx15, align 4
  %mul16 = mul nsw i32 50, %47
  %48 = sub i32 %46, -724388914
  %49 = sub i32 %48, %mul16
  %50 = add i32 %49, -724388914
  %sub17 = sub nsw i32 %46, %mul16
  %num.reload312 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx18 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload312, i64 0, i64 2
  %51 = load i32, i32* %arrayidx18, align 8
  %mul19 = mul nsw i32 20, %51
  %52 = sub i32 %50, -557081912
  %53 = sub i32 %52, %mul19
  %54 = add i32 %53, -557081912
  %sub20 = sub nsw i32 %50, %mul19
  %div21 = sdiv i32 %54, 10
  %num.reload311 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx22 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload311, i64 0, i64 3
  store i32 %div21, i32* %arrayidx22, align 4
  %55 = load i32, i32* %money, align 4
  %num.reload310 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx23 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload310, i64 0, i64 0
  %56 = load i32, i32* %arrayidx23, align 16
  %mul24 = mul nsw i32 100, %56
  %57 = sub i32 %55, -2021799576
  %58 = sub i32 %57, %mul24
  %59 = add i32 %58, -2021799576
  %sub25 = sub nsw i32 %55, %mul24
  %num.reload309 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx26 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload309, i64 0, i64 1
  %60 = load i32, i32* %arrayidx26, align 4
  %mul27 = mul nsw i32 50, %60
  %61 = sub i32 %59, 924467047
  %62 = sub i32 %61, %mul27
  %63 = add i32 %62, 924467047
  %sub28 = sub nsw i32 %59, %mul27
  %num.reload308 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx29 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload308, i64 0, i64 2
  %64 = load i32, i32* %arrayidx29, align 8
  %mul30 = mul nsw i32 20, %64
  %65 = sub i32 %63, 1529532811
  %66 = sub i32 %65, %mul30
  %67 = add i32 %66, 1529532811
  %sub31 = sub nsw i32 %63, %mul30
  %num.reload307 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx32 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload307, i64 0, i64 3
  %68 = load i32, i32* %arrayidx32, align 4
  %mul33 = mul nsw i32 10, %68
  %69 = add i32 %67, -94213301
  %70 = sub i32 %69, %mul33
  %71 = sub i32 %70, -94213301
  %sub34 = sub nsw i32 %67, %mul33
  %div35 = sdiv i32 %71, 5
  %num.reload306 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx36 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload306, i64 0, i64 4
  store i32 %div35, i32* %arrayidx36, align 16
  %72 = load i32, i32* %money, align 4
  %num.reload305 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx37 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload305, i64 0, i64 0
  %73 = load i32, i32* %arrayidx37, align 16
  %mul38 = mul nsw i32 100, %73
  %74 = sub i32 0, %mul38
  %75 = add i32 %72, %74
  %sub39 = sub nsw i32 %72, %mul38
  %num.reload304 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx40 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload304, i64 0, i64 1
  %76 = load i32, i32* %arrayidx40, align 4
  %mul41 = mul nsw i32 50, %76
  %77 = sub i32 0, %mul41
  %78 = add i32 %75, %77
  %sub42 = sub nsw i32 %75, %mul41
  %num.reload303 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx43 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload303, i64 0, i64 2
  %79 = load i32, i32* %arrayidx43, align 8
  %mul44 = mul nsw i32 20, %79
  %80 = add i32 %78, 289095753
  %81 = sub i32 %80, %mul44
  %82 = sub i32 %81, 289095753
  %sub45 = sub nsw i32 %78, %mul44
  %num.reload302 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx46 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload302, i64 0, i64 3
  %83 = load i32, i32* %arrayidx46, align 4
  %mul47 = mul nsw i32 10, %83
  %84 = sub i32 %82, -1399462188
  %85 = sub i32 %84, %mul47
  %86 = add i32 %85, -1399462188
  %sub48 = sub nsw i32 %82, %mul47
  %num.reload301 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx49 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload301, i64 0, i64 4
  %87 = load i32, i32* %arrayidx49, align 16
  %mul50 = mul nsw i32 5, %87
  %88 = sub i32 0, %mul50
  %89 = add i32 %86, %88
  %sub51 = sub nsw i32 %86, %mul50
  %num.reload300 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx52 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload300, i64 0, i64 5
  store i32 %89, i32* %arrayidx52, align 4
  %i.reload298 = load volatile i32*, i32** %i.reg2mem
  store i32 0, i32* %i.reload298, align 4
  %90 = load i32, i32* @x
  %91 = load i32, i32* @y
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 -1157370885, i32 -1989061605
  store i32 %115, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  store i32 -2028865710, i32* %switchVar
  br label %loopEnd

for.cond:                                         ; preds = %loopEntry
  %i.reload297 = load volatile i32*, i32** %i.reg2mem
  %116 = load i32, i32* %i.reload297, align 4
  %cmp = icmp slt i32 %116, 6
  %117 = select i1 %cmp, i32 -1812211865, i32 216708096
  store i32 %117, i32* %switchVar
  br label %loopEnd

for.body:                                         ; preds = %loopEntry
  %118 = load i32, i32* @x
  %119 = load i32, i32* @y
  %120 = sub i32 %118, 1467011984
  %121 = sub i32 %120, 1
  %122 = add i32 %121, 1467011984
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 -1422545804, i32 1065340547
  store i32 %144, i32* %switchVar
  br label %loopEnd

originalBB287:                                    ; preds = %loopEntry
  %i.reload296 = load volatile i32*, i32** %i.reg2mem
  %145 = load i32, i32* %i.reload296, align 4
  %idxprom = sext i32 %145 to i64
  %num.reload299 = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx53 = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload299, i64 0, i64 %idxprom
  %146 = load i32, i32* %arrayidx53, align 4
  %call54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %146)
  %147 = load i32, i32* @x
  %148 = load i32, i32* @y
  %149 = sub i32 %147, -4024957
  %150 = sub i32 %149, 1
  %151 = add i32 %150, -4024957
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  %173 = select i1 %171, i32 294953799, i32 1065340547
  store i32 %173, i32* %switchVar
  br label %loopEnd

originalBBpart2289:                               ; preds = %loopEntry
  store i32 781513742, i32* %switchVar
  br label %loopEnd

for.inc:                                          ; preds = %loopEntry
  %i.reload295 = load volatile i32*, i32** %i.reg2mem
  %174 = load i32, i32* %i.reload295, align 4
  %175 = sub i32 0, %174
  %176 = sub i32 0, 1
  %177 = add i32 %175, %176
  %178 = sub i32 0, %177
  %inc = add nsw i32 %174, 1
  %i.reload294 = load volatile i32*, i32** %i.reg2mem
  store i32 %178, i32* %i.reload294, align 4
  store i32 -2028865710, i32* %switchVar
  br label %loopEnd

for.end:                                          ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %moneyalteredBB = alloca i32, align 4
  %ialteredBB = alloca i32, align 4
  %numalteredBB = alloca [6 x i32], align 16
  store i32 0, i32* %retvalalteredBB, align 4
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %moneyalteredBB)
  %179 = load i32, i32* %moneyalteredBB, align 4
  %180 = sub i32 0, %179
  %181 = add i32 0, %180
  %_ = sub i32 0, %179
  %182 = sub i32 %181, 1080708684
  %183 = add i32 %182, 100
  %184 = add i32 %183, 1080708684
  %gen = add i32 %181, 100
  %185 = sub i32 %179, -2133025691
  %186 = sub i32 %185, 100
  %187 = add i32 %186, -2133025691
  %_55 = sub i32 %179, 100
  %gen56 = mul i32 %187, 100
  %188 = add i32 %179, 1641966631
  %189 = sub i32 %188, 100
  %190 = sub i32 %189, 1641966631
  %_57 = sub i32 %179, 100
  %gen58 = mul i32 %190, 100
  %191 = add i32 %179, -1173195285
  %192 = sub i32 %191, 100
  %193 = sub i32 %192, -1173195285
  %_59 = sub i32 %179, 100
  %gen60 = mul i32 %193, 100
  %194 = sub i32 0, 100
  %195 = add i32 %179, %194
  %_61 = sub i32 %179, 100
  %gen62 = mul i32 %195, 100
  %divalteredBB = sdiv i32 %179, 100
  %arrayidxalteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 0
  store i32 %divalteredBB, i32* %arrayidxalteredBB, align 16
  %196 = load i32, i32* %moneyalteredBB, align 4
  %arrayidx1alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 0
  %197 = load i32, i32* %arrayidx1alteredBB, align 16
  %mulalteredBB = mul nsw i32 100, %197
  %_63 = shl i32 %196, %mulalteredBB
  %198 = sub i32 0, %mulalteredBB
  %199 = add i32 %196, %198
  %subalteredBB = sub nsw i32 %196, %mulalteredBB
  %200 = sub i32 0, -936388538
  %201 = sub i32 %200, %199
  %202 = add i32 %201, -936388538
  %_64 = sub i32 0, %199
  %203 = sub i32 %202, -1754915051
  %204 = add i32 %203, 50
  %205 = add i32 %204, -1754915051
  %gen65 = add i32 %202, 50
  %206 = sub i32 0, 50
  %207 = add i32 %199, %206
  %_66 = sub i32 %199, 50
  %gen67 = mul i32 %207, 50
  %div2alteredBB = sdiv i32 %199, 50
  %arrayidx3alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 1
  store i32 %div2alteredBB, i32* %arrayidx3alteredBB, align 4
  %208 = load i32, i32* %moneyalteredBB, align 4
  %arrayidx4alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 0
  %209 = load i32, i32* %arrayidx4alteredBB, align 16
  %210 = sub i32 100, 1008901379
  %211 = sub i32 %210, %209
  %212 = add i32 %211, 1008901379
  %_68 = sub i32 100, %209
  %gen69 = mul i32 %212, %209
  %213 = add i32 0, 1078668044
  %214 = sub i32 %213, 100
  %215 = sub i32 %214, 1078668044
  %_70 = sub i32 0, 100
  %216 = add i32 %215, 361451060
  %217 = add i32 %216, %209
  %218 = sub i32 %217, 361451060
  %gen71 = add i32 %215, %209
  %219 = add i32 100, 692835508
  %220 = sub i32 %219, %209
  %221 = sub i32 %220, 692835508
  %_72 = sub i32 100, %209
  %gen73 = mul i32 %221, %209
  %222 = sub i32 0, %209
  %223 = add i32 100, %222
  %_74 = sub i32 100, %209
  %gen75 = mul i32 %223, %209
  %224 = sub i32 0, %209
  %225 = add i32 100, %224
  %_76 = sub i32 100, %209
  %gen77 = mul i32 %225, %209
  %226 = sub i32 0, 100
  %227 = add i32 0, %226
  %_78 = sub i32 0, 100
  %228 = sub i32 0, %209
  %229 = sub i32 %227, %228
  %gen79 = add i32 %227, %209
  %mul5alteredBB = mul nsw i32 100, %209
  %230 = sub i32 0, %mul5alteredBB
  %231 = add i32 %208, %230
  %_80 = sub i32 %208, %mul5alteredBB
  %gen81 = mul i32 %231, %mul5alteredBB
  %232 = add i32 %208, -2138289001
  %233 = sub i32 %232, %mul5alteredBB
  %234 = sub i32 %233, -2138289001
  %_82 = sub i32 %208, %mul5alteredBB
  %gen83 = mul i32 %234, %mul5alteredBB
  %_84 = shl i32 %208, %mul5alteredBB
  %_85 = shl i32 %208, %mul5alteredBB
  %_86 = shl i32 %208, %mul5alteredBB
  %235 = sub i32 %208, 1839729396
  %236 = sub i32 %235, %mul5alteredBB
  %237 = add i32 %236, 1839729396
  %_87 = sub i32 %208, %mul5alteredBB
  %gen88 = mul i32 %237, %mul5alteredBB
  %238 = sub i32 0, %mul5alteredBB
  %239 = add i32 %208, %238
  %_89 = sub i32 %208, %mul5alteredBB
  %gen90 = mul i32 %239, %mul5alteredBB
  %240 = sub i32 0, -1785543412
  %241 = sub i32 %240, %208
  %242 = add i32 %241, -1785543412
  %_91 = sub i32 0, %208
  %243 = sub i32 0, %mul5alteredBB
  %244 = sub i32 %242, %243
  %gen92 = add i32 %242, %mul5alteredBB
  %245 = add i32 %208, 1111613404
  %246 = sub i32 %245, %mul5alteredBB
  %247 = sub i32 %246, 1111613404
  %sub6alteredBB = sub nsw i32 %208, %mul5alteredBB
  %arrayidx7alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 1
  %248 = load i32, i32* %arrayidx7alteredBB, align 4
  %249 = add i32 0, 1934406358
  %250 = sub i32 %249, 50
  %251 = sub i32 %250, 1934406358
  %_93 = sub i32 0, 50
  %252 = sub i32 0, %251
  %253 = sub i32 0, %248
  %254 = add i32 %252, %253
  %255 = sub i32 0, %254
  %gen94 = add i32 %251, %248
  %256 = sub i32 50, 1517873773
  %257 = sub i32 %256, %248
  %258 = add i32 %257, 1517873773
  %_95 = sub i32 50, %248
  %gen96 = mul i32 %258, %248
  %_97 = shl i32 50, %248
  %_98 = shl i32 50, %248
  %_99 = shl i32 50, %248
  %_100 = shl i32 50, %248
  %_101 = shl i32 50, %248
  %mul8alteredBB = mul nsw i32 50, %248
  %259 = sub i32 0, -1912152700
  %260 = sub i32 %259, %247
  %261 = add i32 %260, -1912152700
  %_102 = sub i32 0, %247
  %262 = sub i32 %261, -267734503
  %263 = add i32 %262, %mul8alteredBB
  %264 = add i32 %263, -267734503
  %gen103 = add i32 %261, %mul8alteredBB
  %_104 = shl i32 %247, %mul8alteredBB
  %_105 = shl i32 %247, %mul8alteredBB
  %265 = add i32 %247, -1689183408
  %266 = sub i32 %265, %mul8alteredBB
  %267 = sub i32 %266, -1689183408
  %sub9alteredBB = sub nsw i32 %247, %mul8alteredBB
  %_106 = shl i32 %267, 20
  %268 = add i32 %267, -269553941
  %269 = sub i32 %268, 20
  %270 = sub i32 %269, -269553941
  %_107 = sub i32 %267, 20
  %gen108 = mul i32 %270, 20
  %271 = sub i32 %267, -1477409135
  %272 = sub i32 %271, 20
  %273 = add i32 %272, -1477409135
  %_109 = sub i32 %267, 20
  %gen110 = mul i32 %273, 20
  %div10alteredBB = sdiv i32 %267, 20
  %arrayidx11alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 2
  store i32 %div10alteredBB, i32* %arrayidx11alteredBB, align 8
  %274 = load i32, i32* %moneyalteredBB, align 4
  %arrayidx12alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 0
  %275 = load i32, i32* %arrayidx12alteredBB, align 16
  %276 = sub i32 100, -1514824280
  %277 = sub i32 %276, %275
  %278 = add i32 %277, -1514824280
  %_111 = sub i32 100, %275
  %gen112 = mul i32 %278, %275
  %279 = sub i32 0, 1334413933
  %280 = sub i32 %279, 100
  %281 = add i32 %280, 1334413933
  %_113 = sub i32 0, 100
  %282 = sub i32 %281, -1395755956
  %283 = add i32 %282, %275
  %284 = add i32 %283, -1395755956
  %gen114 = add i32 %281, %275
  %285 = add i32 100, 1224043964
  %286 = sub i32 %285, %275
  %287 = sub i32 %286, 1224043964
  %_115 = sub i32 100, %275
  %gen116 = mul i32 %287, %275
  %_117 = shl i32 100, %275
  %288 = add i32 100, 1389613747
  %289 = sub i32 %288, %275
  %290 = sub i32 %289, 1389613747
  %_118 = sub i32 100, %275
  %gen119 = mul i32 %290, %275
  %mul13alteredBB = mul nsw i32 100, %275
  %291 = add i32 0, 1569023893
  %292 = sub i32 %291, %274
  %293 = sub i32 %292, 1569023893
  %_120 = sub i32 0, %274
  %294 = add i32 %293, -1888758373
  %295 = add i32 %294, %mul13alteredBB
  %296 = sub i32 %295, -1888758373
  %gen121 = add i32 %293, %mul13alteredBB
  %297 = sub i32 0, %mul13alteredBB
  %298 = add i32 %274, %297
  %sub14alteredBB = sub nsw i32 %274, %mul13alteredBB
  %arrayidx15alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 1
  %299 = load i32, i32* %arrayidx15alteredBB, align 4
  %300 = sub i32 0, 50
  %301 = add i32 0, %300
  %_122 = sub i32 0, 50
  %302 = add i32 %301, 199900446
  %303 = add i32 %302, %299
  %304 = sub i32 %303, 199900446
  %gen123 = add i32 %301, %299
  %_124 = shl i32 50, %299
  %305 = add i32 50, -97220038
  %306 = sub i32 %305, %299
  %307 = sub i32 %306, -97220038
  %_125 = sub i32 50, %299
  %gen126 = mul i32 %307, %299
  %mul16alteredBB = mul nsw i32 50, %299
  %308 = sub i32 0, %298
  %309 = add i32 0, %308
  %_127 = sub i32 0, %298
  %310 = sub i32 %309, -866319746
  %311 = add i32 %310, %mul16alteredBB
  %312 = add i32 %311, -866319746
  %gen128 = add i32 %309, %mul16alteredBB
  %313 = sub i32 0, %298
  %314 = add i32 0, %313
  %_129 = sub i32 0, %298
  %315 = sub i32 0, %314
  %316 = sub i32 0, %mul16alteredBB
  %317 = add i32 %315, %316
  %318 = sub i32 0, %317
  %gen130 = add i32 %314, %mul16alteredBB
  %319 = add i32 %298, 1508342028
  %320 = sub i32 %319, %mul16alteredBB
  %321 = sub i32 %320, 1508342028
  %_131 = sub i32 %298, %mul16alteredBB
  %gen132 = mul i32 %321, %mul16alteredBB
  %322 = sub i32 0, %298
  %323 = add i32 0, %322
  %_133 = sub i32 0, %298
  %324 = sub i32 0, %323
  %325 = sub i32 0, %mul16alteredBB
  %326 = add i32 %324, %325
  %327 = sub i32 0, %326
  %gen134 = add i32 %323, %mul16alteredBB
  %328 = sub i32 0, %298
  %329 = add i32 0, %328
  %_135 = sub i32 0, %298
  %330 = sub i32 0, %329
  %331 = sub i32 0, %mul16alteredBB
  %332 = add i32 %330, %331
  %333 = sub i32 0, %332
  %gen136 = add i32 %329, %mul16alteredBB
  %334 = sub i32 0, %mul16alteredBB
  %335 = add i32 %298, %334
  %sub17alteredBB = sub nsw i32 %298, %mul16alteredBB
  %arrayidx18alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 2
  %336 = load i32, i32* %arrayidx18alteredBB, align 8
  %_137 = shl i32 20, %336
  %mul19alteredBB = mul nsw i32 20, %336
  %_138 = shl i32 %335, %mul19alteredBB
  %337 = add i32 0, 96990503
  %338 = sub i32 %337, %335
  %339 = sub i32 %338, 96990503
  %_139 = sub i32 0, %335
  %340 = sub i32 0, %339
  %341 = sub i32 0, %mul19alteredBB
  %342 = add i32 %340, %341
  %343 = sub i32 0, %342
  %gen140 = add i32 %339, %mul19alteredBB
  %344 = add i32 %335, -1836820028
  %345 = sub i32 %344, %mul19alteredBB
  %346 = sub i32 %345, -1836820028
  %_141 = sub i32 %335, %mul19alteredBB
  %gen142 = mul i32 %346, %mul19alteredBB
  %_143 = shl i32 %335, %mul19alteredBB
  %347 = add i32 0, -1482044338
  %348 = sub i32 %347, %335
  %349 = sub i32 %348, -1482044338
  %_144 = sub i32 0, %335
  %350 = add i32 %349, 717138840
  %351 = add i32 %350, %mul19alteredBB
  %352 = sub i32 %351, 717138840
  %gen145 = add i32 %349, %mul19alteredBB
  %353 = sub i32 %335, 1535321738
  %354 = sub i32 %353, %mul19alteredBB
  %355 = add i32 %354, 1535321738
  %_146 = sub i32 %335, %mul19alteredBB
  %gen147 = mul i32 %355, %mul19alteredBB
  %356 = add i32 %335, 748617437
  %357 = sub i32 %356, %mul19alteredBB
  %358 = sub i32 %357, 748617437
  %sub20alteredBB = sub nsw i32 %335, %mul19alteredBB
  %div21alteredBB = sdiv i32 %358, 10
  %arrayidx22alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 3
  store i32 %div21alteredBB, i32* %arrayidx22alteredBB, align 4
  %359 = load i32, i32* %moneyalteredBB, align 4
  %arrayidx23alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 0
  %360 = load i32, i32* %arrayidx23alteredBB, align 16
  %361 = add i32 100, -669138204
  %362 = sub i32 %361, %360
  %363 = sub i32 %362, -669138204
  %_148 = sub i32 100, %360
  %gen149 = mul i32 %363, %360
  %364 = add i32 100, 2100483825
  %365 = sub i32 %364, %360
  %366 = sub i32 %365, 2100483825
  %_150 = sub i32 100, %360
  %gen151 = mul i32 %366, %360
  %_152 = shl i32 100, %360
  %mul24alteredBB = mul nsw i32 100, %360
  %367 = add i32 %359, 387077645
  %368 = sub i32 %367, %mul24alteredBB
  %369 = sub i32 %368, 387077645
  %_153 = sub i32 %359, %mul24alteredBB
  %gen154 = mul i32 %369, %mul24alteredBB
  %370 = sub i32 0, -1654792163
  %371 = sub i32 %370, %359
  %372 = add i32 %371, -1654792163
  %_155 = sub i32 0, %359
  %373 = sub i32 %372, -56759927
  %374 = add i32 %373, %mul24alteredBB
  %375 = add i32 %374, -56759927
  %gen156 = add i32 %372, %mul24alteredBB
  %_157 = shl i32 %359, %mul24alteredBB
  %_158 = shl i32 %359, %mul24alteredBB
  %376 = sub i32 0, %mul24alteredBB
  %377 = add i32 %359, %376
  %_159 = sub i32 %359, %mul24alteredBB
  %gen160 = mul i32 %377, %mul24alteredBB
  %_161 = shl i32 %359, %mul24alteredBB
  %378 = sub i32 %359, 1947136169
  %379 = sub i32 %378, %mul24alteredBB
  %380 = add i32 %379, 1947136169
  %sub25alteredBB = sub nsw i32 %359, %mul24alteredBB
  %arrayidx26alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 1
  %381 = load i32, i32* %arrayidx26alteredBB, align 4
  %_162 = shl i32 50, %381
  %_163 = shl i32 50, %381
  %382 = add i32 50, -584011363
  %383 = sub i32 %382, %381
  %384 = sub i32 %383, -584011363
  %_164 = sub i32 50, %381
  %gen165 = mul i32 %384, %381
  %_166 = shl i32 50, %381
  %mul27alteredBB = mul nsw i32 50, %381
  %385 = sub i32 0, 503484078
  %386 = sub i32 %385, %380
  %387 = add i32 %386, 503484078
  %_167 = sub i32 0, %380
  %388 = add i32 %387, 1328876438
  %389 = add i32 %388, %mul27alteredBB
  %390 = sub i32 %389, 1328876438
  %gen168 = add i32 %387, %mul27alteredBB
  %391 = add i32 %380, 1348866731
  %392 = sub i32 %391, %mul27alteredBB
  %393 = sub i32 %392, 1348866731
  %sub28alteredBB = sub nsw i32 %380, %mul27alteredBB
  %arrayidx29alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 2
  %394 = load i32, i32* %arrayidx29alteredBB, align 8
  %395 = add i32 20, 1515652075
  %396 = sub i32 %395, %394
  %397 = sub i32 %396, 1515652075
  %_169 = sub i32 20, %394
  %gen170 = mul i32 %397, %394
  %398 = sub i32 0, 20
  %399 = add i32 0, %398
  %_171 = sub i32 0, 20
  %400 = add i32 %399, 1275000817
  %401 = add i32 %400, %394
  %402 = sub i32 %401, 1275000817
  %gen172 = add i32 %399, %394
  %403 = add i32 20, -93348631
  %404 = sub i32 %403, %394
  %405 = sub i32 %404, -93348631
  %_173 = sub i32 20, %394
  %gen174 = mul i32 %405, %394
  %406 = add i32 20, 140054533
  %407 = sub i32 %406, %394
  %408 = sub i32 %407, 140054533
  %_175 = sub i32 20, %394
  %gen176 = mul i32 %408, %394
  %409 = add i32 0, -527316117
  %410 = sub i32 %409, 20
  %411 = sub i32 %410, -527316117
  %_177 = sub i32 0, 20
  %412 = sub i32 %411, -1716012636
  %413 = add i32 %412, %394
  %414 = add i32 %413, -1716012636
  %gen178 = add i32 %411, %394
  %_179 = shl i32 20, %394
  %mul30alteredBB = mul nsw i32 20, %394
  %415 = sub i32 0, %393
  %416 = add i32 0, %415
  %_180 = sub i32 0, %393
  %417 = add i32 %416, -1883290212
  %418 = add i32 %417, %mul30alteredBB
  %419 = sub i32 %418, -1883290212
  %gen181 = add i32 %416, %mul30alteredBB
  %_182 = shl i32 %393, %mul30alteredBB
  %_183 = shl i32 %393, %mul30alteredBB
  %420 = sub i32 0, %mul30alteredBB
  %421 = add i32 %393, %420
  %sub31alteredBB = sub nsw i32 %393, %mul30alteredBB
  %arrayidx32alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 3
  %422 = load i32, i32* %arrayidx32alteredBB, align 4
  %423 = sub i32 0, %422
  %424 = add i32 10, %423
  %_184 = sub i32 10, %422
  %gen185 = mul i32 %424, %422
  %_186 = shl i32 10, %422
  %mul33alteredBB = mul nsw i32 10, %422
  %425 = sub i32 %421, -1878086610
  %426 = sub i32 %425, %mul33alteredBB
  %427 = add i32 %426, -1878086610
  %_187 = sub i32 %421, %mul33alteredBB
  %gen188 = mul i32 %427, %mul33alteredBB
  %428 = add i32 %421, 1241002495
  %429 = sub i32 %428, %mul33alteredBB
  %430 = sub i32 %429, 1241002495
  %_189 = sub i32 %421, %mul33alteredBB
  %gen190 = mul i32 %430, %mul33alteredBB
  %_191 = shl i32 %421, %mul33alteredBB
  %431 = sub i32 %421, 1777089192
  %432 = sub i32 %431, %mul33alteredBB
  %433 = add i32 %432, 1777089192
  %sub34alteredBB = sub nsw i32 %421, %mul33alteredBB
  %_192 = shl i32 %433, 5
  %_193 = shl i32 %433, 5
  %434 = add i32 %433, 1777559229
  %435 = sub i32 %434, 5
  %436 = sub i32 %435, 1777559229
  %_194 = sub i32 %433, 5
  %gen195 = mul i32 %436, 5
  %div35alteredBB = sdiv i32 %433, 5
  %arrayidx36alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 4
  store i32 %div35alteredBB, i32* %arrayidx36alteredBB, align 16
  %437 = load i32, i32* %moneyalteredBB, align 4
  %arrayidx37alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 0
  %438 = load i32, i32* %arrayidx37alteredBB, align 16
  %_196 = shl i32 100, %438
  %439 = add i32 0, -909514010
  %440 = sub i32 %439, 100
  %441 = sub i32 %440, -909514010
  %_197 = sub i32 0, 100
  %442 = sub i32 0, %438
  %443 = sub i32 %441, %442
  %gen198 = add i32 %441, %438
  %_199 = shl i32 100, %438
  %_200 = shl i32 100, %438
  %444 = add i32 0, -2109227899
  %445 = sub i32 %444, 100
  %446 = sub i32 %445, -2109227899
  %_201 = sub i32 0, 100
  %447 = sub i32 0, %446
  %448 = sub i32 0, %438
  %449 = add i32 %447, %448
  %450 = sub i32 0, %449
  %gen202 = add i32 %446, %438
  %mul38alteredBB = mul nsw i32 100, %438
  %451 = sub i32 0, -231493733
  %452 = sub i32 %451, %437
  %453 = add i32 %452, -231493733
  %_203 = sub i32 0, %437
  %454 = sub i32 0, %mul38alteredBB
  %455 = sub i32 %453, %454
  %gen204 = add i32 %453, %mul38alteredBB
  %456 = add i32 0, -1804035395
  %457 = sub i32 %456, %437
  %458 = sub i32 %457, -1804035395
  %_205 = sub i32 0, %437
  %459 = sub i32 0, %mul38alteredBB
  %460 = sub i32 %458, %459
  %gen206 = add i32 %458, %mul38alteredBB
  %_207 = shl i32 %437, %mul38alteredBB
  %_208 = shl i32 %437, %mul38alteredBB
  %461 = sub i32 %437, 1933928492
  %462 = sub i32 %461, %mul38alteredBB
  %463 = add i32 %462, 1933928492
  %_209 = sub i32 %437, %mul38alteredBB
  %gen210 = mul i32 %463, %mul38alteredBB
  %464 = add i32 0, -569182071
  %465 = sub i32 %464, %437
  %466 = sub i32 %465, -569182071
  %_211 = sub i32 0, %437
  %467 = sub i32 %466, -2050379802
  %468 = add i32 %467, %mul38alteredBB
  %469 = add i32 %468, -2050379802
  %gen212 = add i32 %466, %mul38alteredBB
  %470 = sub i32 0, %437
  %471 = add i32 0, %470
  %_213 = sub i32 0, %437
  %472 = sub i32 0, %471
  %473 = sub i32 0, %mul38alteredBB
  %474 = add i32 %472, %473
  %475 = sub i32 0, %474
  %gen214 = add i32 %471, %mul38alteredBB
  %476 = sub i32 %437, -728984437
  %477 = sub i32 %476, %mul38alteredBB
  %478 = add i32 %477, -728984437
  %sub39alteredBB = sub nsw i32 %437, %mul38alteredBB
  %arrayidx40alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 1
  %479 = load i32, i32* %arrayidx40alteredBB, align 4
  %480 = add i32 50, 978474751
  %481 = sub i32 %480, %479
  %482 = sub i32 %481, 978474751
  %_215 = sub i32 50, %479
  %gen216 = mul i32 %482, %479
  %483 = sub i32 0, 50
  %484 = add i32 0, %483
  %_217 = sub i32 0, 50
  %485 = sub i32 %484, 1772331921
  %486 = add i32 %485, %479
  %487 = add i32 %486, 1772331921
  %gen218 = add i32 %484, %479
  %488 = sub i32 0, %479
  %489 = add i32 50, %488
  %_219 = sub i32 50, %479
  %gen220 = mul i32 %489, %479
  %_221 = shl i32 50, %479
  %490 = add i32 0, -853665126
  %491 = sub i32 %490, 50
  %492 = sub i32 %491, -853665126
  %_222 = sub i32 0, 50
  %493 = sub i32 %492, -324931254
  %494 = add i32 %493, %479
  %495 = add i32 %494, -324931254
  %gen223 = add i32 %492, %479
  %496 = sub i32 0, %479
  %497 = add i32 50, %496
  %_224 = sub i32 50, %479
  %gen225 = mul i32 %497, %479
  %498 = add i32 50, -379791717
  %499 = sub i32 %498, %479
  %500 = sub i32 %499, -379791717
  %_226 = sub i32 50, %479
  %gen227 = mul i32 %500, %479
  %_228 = shl i32 50, %479
  %mul41alteredBB = mul nsw i32 50, %479
  %501 = sub i32 %478, -532300402
  %502 = sub i32 %501, %mul41alteredBB
  %503 = add i32 %502, -532300402
  %_229 = sub i32 %478, %mul41alteredBB
  %gen230 = mul i32 %503, %mul41alteredBB
  %504 = sub i32 0, -1935971872
  %505 = sub i32 %504, %478
  %506 = add i32 %505, -1935971872
  %_231 = sub i32 0, %478
  %507 = sub i32 0, %506
  %508 = sub i32 0, %mul41alteredBB
  %509 = add i32 %507, %508
  %510 = sub i32 0, %509
  %gen232 = add i32 %506, %mul41alteredBB
  %_233 = shl i32 %478, %mul41alteredBB
  %_234 = shl i32 %478, %mul41alteredBB
  %511 = sub i32 0, %mul41alteredBB
  %512 = add i32 %478, %511
  %sub42alteredBB = sub nsw i32 %478, %mul41alteredBB
  %arrayidx43alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 2
  %513 = load i32, i32* %arrayidx43alteredBB, align 8
  %_235 = shl i32 20, %513
  %_236 = shl i32 20, %513
  %514 = add i32 0, -2087709235
  %515 = sub i32 %514, 20
  %516 = sub i32 %515, -2087709235
  %_237 = sub i32 0, 20
  %517 = sub i32 0, %516
  %518 = sub i32 0, %513
  %519 = add i32 %517, %518
  %520 = sub i32 0, %519
  %gen238 = add i32 %516, %513
  %_239 = shl i32 20, %513
  %521 = add i32 20, 801013185
  %522 = sub i32 %521, %513
  %523 = sub i32 %522, 801013185
  %_240 = sub i32 20, %513
  %gen241 = mul i32 %523, %513
  %mul44alteredBB = mul nsw i32 20, %513
  %_242 = shl i32 %512, %mul44alteredBB
  %524 = sub i32 0, -254429959
  %525 = sub i32 %524, %512
  %526 = add i32 %525, -254429959
  %_243 = sub i32 0, %512
  %527 = sub i32 0, %mul44alteredBB
  %528 = sub i32 %526, %527
  %gen244 = add i32 %526, %mul44alteredBB
  %529 = add i32 %512, 1462934848
  %530 = sub i32 %529, %mul44alteredBB
  %531 = sub i32 %530, 1462934848
  %_245 = sub i32 %512, %mul44alteredBB
  %gen246 = mul i32 %531, %mul44alteredBB
  %_247 = shl i32 %512, %mul44alteredBB
  %532 = sub i32 %512, 402188142
  %533 = sub i32 %532, %mul44alteredBB
  %534 = add i32 %533, 402188142
  %sub45alteredBB = sub nsw i32 %512, %mul44alteredBB
  %arrayidx46alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 3
  %535 = load i32, i32* %arrayidx46alteredBB, align 4
  %536 = sub i32 10, -1304314544
  %537 = sub i32 %536, %535
  %538 = add i32 %537, -1304314544
  %_248 = sub i32 10, %535
  %gen249 = mul i32 %538, %535
  %539 = sub i32 10, -166152435
  %540 = sub i32 %539, %535
  %541 = add i32 %540, -166152435
  %_250 = sub i32 10, %535
  %gen251 = mul i32 %541, %535
  %_252 = shl i32 10, %535
  %542 = sub i32 0, %535
  %543 = add i32 10, %542
  %_253 = sub i32 10, %535
  %gen254 = mul i32 %543, %535
  %544 = sub i32 10, 1227941098
  %545 = sub i32 %544, %535
  %546 = add i32 %545, 1227941098
  %_255 = sub i32 10, %535
  %gen256 = mul i32 %546, %535
  %547 = sub i32 0, 10
  %548 = add i32 0, %547
  %_257 = sub i32 0, 10
  %549 = sub i32 0, %535
  %550 = sub i32 %548, %549
  %gen258 = add i32 %548, %535
  %_259 = shl i32 10, %535
  %mul47alteredBB = mul nsw i32 10, %535
  %551 = add i32 %534, -532859285
  %552 = sub i32 %551, %mul47alteredBB
  %553 = sub i32 %552, -532859285
  %_260 = sub i32 %534, %mul47alteredBB
  %gen261 = mul i32 %553, %mul47alteredBB
  %_262 = shl i32 %534, %mul47alteredBB
  %554 = sub i32 0, %534
  %555 = add i32 0, %554
  %_263 = sub i32 0, %534
  %556 = sub i32 %555, -471237084
  %557 = add i32 %556, %mul47alteredBB
  %558 = add i32 %557, -471237084
  %gen264 = add i32 %555, %mul47alteredBB
  %559 = sub i32 0, %mul47alteredBB
  %560 = add i32 %534, %559
  %_265 = sub i32 %534, %mul47alteredBB
  %gen266 = mul i32 %560, %mul47alteredBB
  %561 = sub i32 %534, -426436648
  %562 = sub i32 %561, %mul47alteredBB
  %563 = add i32 %562, -426436648
  %_267 = sub i32 %534, %mul47alteredBB
  %gen268 = mul i32 %563, %mul47alteredBB
  %_269 = shl i32 %534, %mul47alteredBB
  %564 = sub i32 %534, 807889974
  %565 = sub i32 %564, %mul47alteredBB
  %566 = add i32 %565, 807889974
  %sub48alteredBB = sub nsw i32 %534, %mul47alteredBB
  %arrayidx49alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 4
  %567 = load i32, i32* %arrayidx49alteredBB, align 16
  %568 = sub i32 0, %567
  %569 = add i32 5, %568
  %_270 = sub i32 5, %567
  %gen271 = mul i32 %569, %567
  %570 = sub i32 0, 5
  %571 = add i32 0, %570
  %_272 = sub i32 0, 5
  %572 = add i32 %571, 1564959916
  %573 = add i32 %572, %567
  %574 = sub i32 %573, 1564959916
  %gen273 = add i32 %571, %567
  %575 = sub i32 5, -234239112
  %576 = sub i32 %575, %567
  %577 = add i32 %576, -234239112
  %_274 = sub i32 5, %567
  %gen275 = mul i32 %577, %567
  %_276 = shl i32 5, %567
  %_277 = shl i32 5, %567
  %578 = sub i32 0, %567
  %579 = add i32 5, %578
  %_278 = sub i32 5, %567
  %gen279 = mul i32 %579, %567
  %mul50alteredBB = mul nsw i32 5, %567
  %580 = sub i32 0, %mul50alteredBB
  %581 = add i32 %566, %580
  %_280 = sub i32 %566, %mul50alteredBB
  %gen281 = mul i32 %581, %mul50alteredBB
  %_282 = shl i32 %566, %mul50alteredBB
  %582 = sub i32 0, 899300257
  %583 = sub i32 %582, %566
  %584 = add i32 %583, 899300257
  %_283 = sub i32 0, %566
  %585 = sub i32 0, %584
  %586 = sub i32 0, %mul50alteredBB
  %587 = add i32 %585, %586
  %588 = sub i32 0, %587
  %gen284 = add i32 %584, %mul50alteredBB
  %_285 = shl i32 %566, %mul50alteredBB
  %_286 = shl i32 %566, %mul50alteredBB
  %589 = sub i32 %566, 575666804
  %590 = sub i32 %589, %mul50alteredBB
  %591 = add i32 %590, 575666804
  %sub51alteredBB = sub nsw i32 %566, %mul50alteredBB
  %arrayidx52alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %numalteredBB, i64 0, i64 5
  store i32 %591, i32* %arrayidx52alteredBB, align 4
  store i32 0, i32* %ialteredBB, align 4
  store i32 2021656115, i32* %switchVar
  br label %loopEnd

originalBB287alteredBB:                           ; preds = %loopEntry
  %i.reload = load volatile i32*, i32** %i.reg2mem
  %592 = load i32, i32* %i.reload, align 4
  %idxpromalteredBB = sext i32 %592 to i64
  %num.reload = load volatile [6 x i32]*, [6 x i32]** %num.reg2mem
  %arrayidx53alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %num.reload, i64 0, i64 %idxpromalteredBB
  %593 = load i32, i32* %arrayidx53alteredBB, align 4
  %call54alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %593)
  store i32 -1422545804, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB287alteredBB, %originalBBalteredBB, %for.inc, %originalBBpart2289, %originalBB287, %for.body, %for.cond, %originalBBpart2, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
