; ModuleID = 'source-C-CXX/96/1599.c'
source_filename = "source-C-CXX/96/1599.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %i.reg2mem = alloca i32*
  %sz.reg2mem = alloca [6 x i32]*
  %.reg2mem312 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = sub i32 0, 1
  %3 = add i32 %0, %2
  %4 = sub i32 %0, 1
  %5 = mul i32 %0, %3
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  store i1 %7, i1* %.reg2mem
  %8 = icmp slt i32 %1, 10
  store i1 %8, i1* %.reg2mem312
  %switchVar = alloca i32
  store i32 -440092658, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar311 = load i32, i32* %switchVar
  switch i32 %switchVar311, label %switchDefault [
    i32 -440092658, label %first
    i32 -667074383, label %originalBB
    i32 -1586408196, label %originalBBpart2
    i32 -1121683332, label %for.cond
    i32 540736, label %for.body
    i32 21087403, label %originalBB303
    i32 -2074197340, label %originalBBpart2305
    i32 398822389, label %for.inc
    i32 -11486590, label %for.end
    i32 -336893247, label %originalBB307
    i32 -1935874249, label %originalBBpart2309
    i32 36502351, label %originalBBalteredBB
    i32 -741001955, label %originalBB303alteredBB
    i32 -526726175, label %originalBB307alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload313 = load volatile i1, i1* %.reg2mem312
  %9 = and i1 %.reload, %.reload313
  %10 = xor i1 %.reload, %.reload313
  %11 = or i1 %9, %10
  %12 = or i1 %.reload, %.reload313
  %13 = select i1 %11, i32 -667074383, i32 36502351
  store i32 %13, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %hun = alloca i32, align 4
  %fif = alloca i32, align 4
  %twe = alloca i32, align 4
  %ten = alloca i32, align 4
  %fiv = alloca i32, align 4
  %one = alloca i32, align 4
  %sz = alloca [6 x i32], align 16
  store [6 x i32]* %sz, [6 x i32]** %sz.reg2mem
  %i = alloca i32, align 4
  store i32* %i, i32** %i.reg2mem
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %14 = load i32, i32* %n, align 4
  %div = sdiv i32 %14, 100
  store i32 %div, i32* %hun, align 4
  %15 = load i32, i32* %n, align 4
  %16 = load i32, i32* %hun, align 4
  %mul = mul nsw i32 %16, 100
  %17 = sub i32 0, %mul
  %18 = add i32 %15, %17
  %sub = sub nsw i32 %15, %mul
  %div1 = sdiv i32 %18, 50
  store i32 %div1, i32* %fif, align 4
  %19 = load i32, i32* %n, align 4
  %20 = load i32, i32* %hun, align 4
  %mul2 = mul nsw i32 %20, 100
  %21 = sub i32 %19, -19684167
  %22 = sub i32 %21, %mul2
  %23 = add i32 %22, -19684167
  %sub3 = sub nsw i32 %19, %mul2
  %24 = load i32, i32* %fif, align 4
  %mul4 = mul nsw i32 %24, 50
  %25 = sub i32 0, %mul4
  %26 = add i32 %23, %25
  %sub5 = sub nsw i32 %23, %mul4
  %div6 = sdiv i32 %26, 20
  store i32 %div6, i32* %twe, align 4
  %27 = load i32, i32* %n, align 4
  %28 = load i32, i32* %hun, align 4
  %mul7 = mul nsw i32 %28, 100
  %29 = add i32 %27, 822409587
  %30 = sub i32 %29, %mul7
  %31 = sub i32 %30, 822409587
  %sub8 = sub nsw i32 %27, %mul7
  %32 = load i32, i32* %fif, align 4
  %mul9 = mul nsw i32 %32, 50
  %33 = sub i32 0, %mul9
  %34 = add i32 %31, %33
  %sub10 = sub nsw i32 %31, %mul9
  %35 = load i32, i32* %twe, align 4
  %mul11 = mul nsw i32 %35, 20
  %36 = sub i32 0, %mul11
  %37 = add i32 %34, %36
  %sub12 = sub nsw i32 %34, %mul11
  %div13 = sdiv i32 %37, 10
  store i32 %div13, i32* %ten, align 4
  %38 = load i32, i32* %n, align 4
  %39 = load i32, i32* %hun, align 4
  %mul14 = mul nsw i32 %39, 100
  %40 = add i32 %38, -1697448257
  %41 = sub i32 %40, %mul14
  %42 = sub i32 %41, -1697448257
  %sub15 = sub nsw i32 %38, %mul14
  %43 = load i32, i32* %fif, align 4
  %mul16 = mul nsw i32 %43, 50
  %44 = sub i32 0, %mul16
  %45 = add i32 %42, %44
  %sub17 = sub nsw i32 %42, %mul16
  %46 = load i32, i32* %twe, align 4
  %mul18 = mul nsw i32 %46, 20
  %47 = add i32 %45, 6542454
  %48 = sub i32 %47, %mul18
  %49 = sub i32 %48, 6542454
  %sub19 = sub nsw i32 %45, %mul18
  %50 = load i32, i32* %ten, align 4
  %mul20 = mul nsw i32 %50, 10
  %51 = sub i32 %49, 1079973735
  %52 = sub i32 %51, %mul20
  %53 = add i32 %52, 1079973735
  %sub21 = sub nsw i32 %49, %mul20
  %div22 = sdiv i32 %53, 5
  store i32 %div22, i32* %fiv, align 4
  %54 = load i32, i32* %n, align 4
  %55 = load i32, i32* %hun, align 4
  %mul23 = mul nsw i32 %55, 100
  %56 = sub i32 %54, -1234885148
  %57 = sub i32 %56, %mul23
  %58 = add i32 %57, -1234885148
  %sub24 = sub nsw i32 %54, %mul23
  %59 = load i32, i32* %fif, align 4
  %mul25 = mul nsw i32 %59, 50
  %60 = sub i32 0, %mul25
  %61 = add i32 %58, %60
  %sub26 = sub nsw i32 %58, %mul25
  %62 = load i32, i32* %twe, align 4
  %mul27 = mul nsw i32 %62, 20
  %63 = add i32 %61, 1180444279
  %64 = sub i32 %63, %mul27
  %65 = sub i32 %64, 1180444279
  %sub28 = sub nsw i32 %61, %mul27
  %66 = load i32, i32* %ten, align 4
  %mul29 = mul nsw i32 %66, 10
  %67 = sub i32 0, %mul29
  %68 = add i32 %65, %67
  %sub30 = sub nsw i32 %65, %mul29
  %69 = load i32, i32* %fiv, align 4
  %mul31 = mul nsw i32 %69, 5
  %70 = sub i32 0, %mul31
  %71 = add i32 %68, %70
  %sub32 = sub nsw i32 %68, %mul31
  %div33 = sdiv i32 %71, 1
  store i32 %div33, i32* %one, align 4
  %sz.reload315 = load volatile [6 x i32]*, [6 x i32]** %sz.reg2mem
  %arrayinit.begin = getelementptr inbounds [6 x i32], [6 x i32]* %sz.reload315, i64 0, i64 0
  %72 = load i32, i32* %hun, align 4
  store i32 %72, i32* %arrayinit.begin, align 4
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1
  %73 = load i32, i32* %fif, align 4
  store i32 %73, i32* %arrayinit.element, align 4
  %arrayinit.element34 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1
  %74 = load i32, i32* %twe, align 4
  store i32 %74, i32* %arrayinit.element34, align 4
  %arrayinit.element35 = getelementptr inbounds i32, i32* %arrayinit.element34, i64 1
  %75 = load i32, i32* %ten, align 4
  store i32 %75, i32* %arrayinit.element35, align 4
  %arrayinit.element36 = getelementptr inbounds i32, i32* %arrayinit.element35, i64 1
  %76 = load i32, i32* %fiv, align 4
  store i32 %76, i32* %arrayinit.element36, align 4
  %arrayinit.element37 = getelementptr inbounds i32, i32* %arrayinit.element36, i64 1
  %77 = load i32, i32* %one, align 4
  store i32 %77, i32* %arrayinit.element37, align 4
  %i.reload320 = load volatile i32*, i32** %i.reg2mem
  store i32 0, i32* %i.reload320, align 4
  %78 = load i32, i32* @x
  %79 = load i32, i32* @y
  %80 = add i32 %78, 875373699
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 875373699
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -1586408196, i32 36502351
  store i32 %104, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  store i32 -1121683332, i32* %switchVar
  br label %loopEnd

for.cond:                                         ; preds = %loopEntry
  %i.reload319 = load volatile i32*, i32** %i.reg2mem
  %105 = load i32, i32* %i.reload319, align 4
  %cmp = icmp slt i32 %105, 6
  %106 = select i1 %cmp, i32 540736, i32 -11486590
  store i32 %106, i32* %switchVar
  br label %loopEnd

for.body:                                         ; preds = %loopEntry
  %107 = load i32, i32* @x
  %108 = load i32, i32* @y
  %109 = sub i32 %107, -1769822245
  %110 = sub i32 %109, 1
  %111 = add i32 %110, -1769822245
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 21087403, i32 -741001955
  store i32 %121, i32* %switchVar
  br label %loopEnd

originalBB303:                                    ; preds = %loopEntry
  %i.reload318 = load volatile i32*, i32** %i.reg2mem
  %122 = load i32, i32* %i.reload318, align 4
  %idxprom = sext i32 %122 to i64
  %sz.reload314 = load volatile [6 x i32]*, [6 x i32]** %sz.reg2mem
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* %sz.reload314, i64 0, i64 %idxprom
  %123 = load i32, i32* %arrayidx, align 4
  %call38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %123)
  %124 = load i32, i32* @x
  %125 = load i32, i32* @y
  %126 = sub i32 %124, 1879456009
  %127 = sub i32 %126, 1
  %128 = add i32 %127, 1879456009
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 -2074197340, i32 -741001955
  store i32 %138, i32* %switchVar
  br label %loopEnd

originalBBpart2305:                               ; preds = %loopEntry
  store i32 398822389, i32* %switchVar
  br label %loopEnd

for.inc:                                          ; preds = %loopEntry
  %i.reload317 = load volatile i32*, i32** %i.reg2mem
  %139 = load i32, i32* %i.reload317, align 4
  %140 = sub i32 0, 1
  %141 = sub i32 %139, %140
  %inc = add nsw i32 %139, 1
  %i.reload316 = load volatile i32*, i32** %i.reg2mem
  store i32 %141, i32* %i.reload316, align 4
  store i32 -1121683332, i32* %switchVar
  br label %loopEnd

for.end:                                          ; preds = %loopEntry
  %142 = load i32, i32* @x
  %143 = load i32, i32* @y
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  %155 = select i1 %153, i32 -336893247, i32 -526726175
  store i32 %155, i32* %switchVar
  br label %loopEnd

originalBB307:                                    ; preds = %loopEntry
  %156 = load i32, i32* @x
  %157 = load i32, i32* @y
  %158 = sub i32 %156, 208397924
  %159 = sub i32 %158, 1
  %160 = add i32 %159, 208397924
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 false, true
  %169 = and i1 %166, false
  %170 = and i1 %164, %168
  %171 = and i1 %167, false
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 false, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  %182 = select i1 %180, i32 -1935874249, i32 -526726175
  store i32 %182, i32* %switchVar
  br label %loopEnd

originalBBpart2309:                               ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %nalteredBB = alloca i32, align 4
  %hunalteredBB = alloca i32, align 4
  %fifalteredBB = alloca i32, align 4
  %twealteredBB = alloca i32, align 4
  %tenalteredBB = alloca i32, align 4
  %fivalteredBB = alloca i32, align 4
  %onealteredBB = alloca i32, align 4
  %szalteredBB = alloca [6 x i32], align 16
  %ialteredBB = alloca i32, align 4
  store i32 0, i32* %retvalalteredBB, align 4
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %nalteredBB)
  %183 = load i32, i32* %nalteredBB, align 4
  %_ = shl i32 %183, 100
  %_39 = shl i32 %183, 100
  %184 = sub i32 0, %183
  %185 = add i32 0, %184
  %_40 = sub i32 0, %183
  %186 = sub i32 0, 100
  %187 = sub i32 %185, %186
  %gen = add i32 %185, 100
  %188 = sub i32 0, -1752754875
  %189 = sub i32 %188, %183
  %190 = add i32 %189, -1752754875
  %_41 = sub i32 0, %183
  %191 = add i32 %190, -1621519496
  %192 = add i32 %191, 100
  %193 = sub i32 %192, -1621519496
  %gen42 = add i32 %190, 100
  %194 = add i32 0, 1276466393
  %195 = sub i32 %194, %183
  %196 = sub i32 %195, 1276466393
  %_43 = sub i32 0, %183
  %197 = add i32 %196, -1447012711
  %198 = add i32 %197, 100
  %199 = sub i32 %198, -1447012711
  %gen44 = add i32 %196, 100
  %200 = sub i32 0, 100
  %201 = add i32 %183, %200
  %_45 = sub i32 %183, 100
  %gen46 = mul i32 %201, 100
  %202 = sub i32 0, %183
  %203 = add i32 0, %202
  %_47 = sub i32 0, %183
  %204 = sub i32 0, %203
  %205 = sub i32 0, 100
  %206 = add i32 %204, %205
  %207 = sub i32 0, %206
  %gen48 = add i32 %203, 100
  %_49 = shl i32 %183, 100
  %divalteredBB = sdiv i32 %183, 100
  store i32 %divalteredBB, i32* %hunalteredBB, align 4
  %208 = load i32, i32* %nalteredBB, align 4
  %209 = load i32, i32* %hunalteredBB, align 4
  %210 = add i32 0, 807203962
  %211 = sub i32 %210, %209
  %212 = sub i32 %211, 807203962
  %_50 = sub i32 0, %209
  %213 = sub i32 0, %212
  %214 = sub i32 0, 100
  %215 = add i32 %213, %214
  %216 = sub i32 0, %215
  %gen51 = add i32 %212, 100
  %217 = add i32 0, 813664027
  %218 = sub i32 %217, %209
  %219 = sub i32 %218, 813664027
  %_52 = sub i32 0, %209
  %220 = add i32 %219, 577984672
  %221 = add i32 %220, 100
  %222 = sub i32 %221, 577984672
  %gen53 = add i32 %219, 100
  %mulalteredBB = mul nsw i32 %209, 100
  %223 = sub i32 %208, 565779179
  %224 = sub i32 %223, %mulalteredBB
  %225 = add i32 %224, 565779179
  %_54 = sub i32 %208, %mulalteredBB
  %gen55 = mul i32 %225, %mulalteredBB
  %226 = sub i32 %208, 570333542
  %227 = sub i32 %226, %mulalteredBB
  %228 = add i32 %227, 570333542
  %_56 = sub i32 %208, %mulalteredBB
  %gen57 = mul i32 %228, %mulalteredBB
  %_58 = shl i32 %208, %mulalteredBB
  %_59 = shl i32 %208, %mulalteredBB
  %229 = sub i32 0, 2055081854
  %230 = sub i32 %229, %208
  %231 = add i32 %230, 2055081854
  %_60 = sub i32 0, %208
  %232 = sub i32 %231, -2069559147
  %233 = add i32 %232, %mulalteredBB
  %234 = add i32 %233, -2069559147
  %gen61 = add i32 %231, %mulalteredBB
  %235 = add i32 %208, -1668276457
  %236 = sub i32 %235, %mulalteredBB
  %237 = sub i32 %236, -1668276457
  %subalteredBB = sub nsw i32 %208, %mulalteredBB
  %238 = sub i32 %237, -1306365788
  %239 = sub i32 %238, 50
  %240 = add i32 %239, -1306365788
  %_62 = sub i32 %237, 50
  %gen63 = mul i32 %240, 50
  %_64 = shl i32 %237, 50
  %div1alteredBB = sdiv i32 %237, 50
  store i32 %div1alteredBB, i32* %fifalteredBB, align 4
  %241 = load i32, i32* %nalteredBB, align 4
  %242 = load i32, i32* %hunalteredBB, align 4
  %mul2alteredBB = mul nsw i32 %242, 100
  %243 = sub i32 0, %mul2alteredBB
  %244 = add i32 %241, %243
  %sub3alteredBB = sub nsw i32 %241, %mul2alteredBB
  %245 = load i32, i32* %fifalteredBB, align 4
  %246 = add i32 %245, 1253449804
  %247 = sub i32 %246, 50
  %248 = sub i32 %247, 1253449804
  %_65 = sub i32 %245, 50
  %gen66 = mul i32 %248, 50
  %249 = add i32 0, 1611221563
  %250 = sub i32 %249, %245
  %251 = sub i32 %250, 1611221563
  %_67 = sub i32 0, %245
  %252 = add i32 %251, -1628490093
  %253 = add i32 %252, 50
  %254 = sub i32 %253, -1628490093
  %gen68 = add i32 %251, 50
  %255 = sub i32 0, 183592383
  %256 = sub i32 %255, %245
  %257 = add i32 %256, 183592383
  %_69 = sub i32 0, %245
  %258 = sub i32 %257, 209715190
  %259 = add i32 %258, 50
  %260 = add i32 %259, 209715190
  %gen70 = add i32 %257, 50
  %261 = sub i32 0, %245
  %262 = add i32 0, %261
  %_71 = sub i32 0, %245
  %263 = sub i32 0, %262
  %264 = sub i32 0, 50
  %265 = add i32 %263, %264
  %266 = sub i32 0, %265
  %gen72 = add i32 %262, 50
  %267 = sub i32 0, 50
  %268 = add i32 %245, %267
  %_73 = sub i32 %245, 50
  %gen74 = mul i32 %268, 50
  %_75 = shl i32 %245, 50
  %269 = add i32 0, -37452357
  %270 = sub i32 %269, %245
  %271 = sub i32 %270, -37452357
  %_76 = sub i32 0, %245
  %272 = sub i32 %271, 692160286
  %273 = add i32 %272, 50
  %274 = add i32 %273, 692160286
  %gen77 = add i32 %271, 50
  %mul4alteredBB = mul nsw i32 %245, 50
  %275 = add i32 %244, -1364696259
  %276 = sub i32 %275, %mul4alteredBB
  %277 = sub i32 %276, -1364696259
  %_78 = sub i32 %244, %mul4alteredBB
  %gen79 = mul i32 %277, %mul4alteredBB
  %278 = sub i32 %244, -1997146229
  %279 = sub i32 %278, %mul4alteredBB
  %280 = add i32 %279, -1997146229
  %_80 = sub i32 %244, %mul4alteredBB
  %gen81 = mul i32 %280, %mul4alteredBB
  %_82 = shl i32 %244, %mul4alteredBB
  %281 = sub i32 0, %mul4alteredBB
  %282 = add i32 %244, %281
  %sub5alteredBB = sub nsw i32 %244, %mul4alteredBB
  %283 = add i32 %282, -1816433102
  %284 = sub i32 %283, 20
  %285 = sub i32 %284, -1816433102
  %_83 = sub i32 %282, 20
  %gen84 = mul i32 %285, 20
  %div6alteredBB = sdiv i32 %282, 20
  store i32 %div6alteredBB, i32* %twealteredBB, align 4
  %286 = load i32, i32* %nalteredBB, align 4
  %287 = load i32, i32* %hunalteredBB, align 4
  %288 = sub i32 0, 100
  %289 = add i32 %287, %288
  %_85 = sub i32 %287, 100
  %gen86 = mul i32 %289, 100
  %_87 = shl i32 %287, 100
  %_88 = shl i32 %287, 100
  %290 = add i32 0, 1793243600
  %291 = sub i32 %290, %287
  %292 = sub i32 %291, 1793243600
  %_89 = sub i32 0, %287
  %293 = sub i32 %292, -1349726412
  %294 = add i32 %293, 100
  %295 = add i32 %294, -1349726412
  %gen90 = add i32 %292, 100
  %mul7alteredBB = mul nsw i32 %287, 100
  %296 = sub i32 0, %mul7alteredBB
  %297 = add i32 %286, %296
  %_91 = sub i32 %286, %mul7alteredBB
  %gen92 = mul i32 %297, %mul7alteredBB
  %298 = sub i32 0, 1409026173
  %299 = sub i32 %298, %286
  %300 = add i32 %299, 1409026173
  %_93 = sub i32 0, %286
  %301 = sub i32 0, %mul7alteredBB
  %302 = sub i32 %300, %301
  %gen94 = add i32 %300, %mul7alteredBB
  %303 = sub i32 0, %286
  %304 = add i32 0, %303
  %_95 = sub i32 0, %286
  %305 = sub i32 %304, 197072711
  %306 = add i32 %305, %mul7alteredBB
  %307 = add i32 %306, 197072711
  %gen96 = add i32 %304, %mul7alteredBB
  %308 = sub i32 0, %286
  %309 = add i32 0, %308
  %_97 = sub i32 0, %286
  %310 = sub i32 %309, -699677999
  %311 = add i32 %310, %mul7alteredBB
  %312 = add i32 %311, -699677999
  %gen98 = add i32 %309, %mul7alteredBB
  %313 = sub i32 0, 1215890009
  %314 = sub i32 %313, %286
  %315 = add i32 %314, 1215890009
  %_99 = sub i32 0, %286
  %316 = sub i32 %315, -867332378
  %317 = add i32 %316, %mul7alteredBB
  %318 = add i32 %317, -867332378
  %gen100 = add i32 %315, %mul7alteredBB
  %_101 = shl i32 %286, %mul7alteredBB
  %_102 = shl i32 %286, %mul7alteredBB
  %_103 = shl i32 %286, %mul7alteredBB
  %319 = sub i32 0, %mul7alteredBB
  %320 = add i32 %286, %319
  %sub8alteredBB = sub nsw i32 %286, %mul7alteredBB
  %321 = load i32, i32* %fifalteredBB, align 4
  %322 = sub i32 %321, -1958463617
  %323 = sub i32 %322, 50
  %324 = add i32 %323, -1958463617
  %_104 = sub i32 %321, 50
  %gen105 = mul i32 %324, 50
  %_106 = shl i32 %321, 50
  %325 = sub i32 0, 50
  %326 = add i32 %321, %325
  %_107 = sub i32 %321, 50
  %gen108 = mul i32 %326, 50
  %327 = add i32 0, -1749368897
  %328 = sub i32 %327, %321
  %329 = sub i32 %328, -1749368897
  %_109 = sub i32 0, %321
  %330 = add i32 %329, -617088505
  %331 = add i32 %330, 50
  %332 = sub i32 %331, -617088505
  %gen110 = add i32 %329, 50
  %333 = sub i32 0, %321
  %334 = add i32 0, %333
  %_111 = sub i32 0, %321
  %335 = sub i32 0, %334
  %336 = sub i32 0, 50
  %337 = add i32 %335, %336
  %338 = sub i32 0, %337
  %gen112 = add i32 %334, 50
  %339 = sub i32 %321, 1364021368
  %340 = sub i32 %339, 50
  %341 = add i32 %340, 1364021368
  %_113 = sub i32 %321, 50
  %gen114 = mul i32 %341, 50
  %_115 = shl i32 %321, 50
  %mul9alteredBB = mul nsw i32 %321, 50
  %_116 = shl i32 %320, %mul9alteredBB
  %_117 = shl i32 %320, %mul9alteredBB
  %_118 = shl i32 %320, %mul9alteredBB
  %342 = sub i32 0, %mul9alteredBB
  %343 = add i32 %320, %342
  %_119 = sub i32 %320, %mul9alteredBB
  %gen120 = mul i32 %343, %mul9alteredBB
  %344 = sub i32 %320, -322169732
  %345 = sub i32 %344, %mul9alteredBB
  %346 = add i32 %345, -322169732
  %_121 = sub i32 %320, %mul9alteredBB
  %gen122 = mul i32 %346, %mul9alteredBB
  %347 = add i32 %320, 1017139637
  %348 = sub i32 %347, %mul9alteredBB
  %349 = sub i32 %348, 1017139637
  %sub10alteredBB = sub nsw i32 %320, %mul9alteredBB
  %350 = load i32, i32* %twealteredBB, align 4
  %351 = sub i32 0, -846968219
  %352 = sub i32 %351, %350
  %353 = add i32 %352, -846968219
  %_123 = sub i32 0, %350
  %354 = add i32 %353, 993163540
  %355 = add i32 %354, 20
  %356 = sub i32 %355, 993163540
  %gen124 = add i32 %353, 20
  %_125 = shl i32 %350, 20
  %_126 = shl i32 %350, 20
  %357 = sub i32 0, 1154359984
  %358 = sub i32 %357, %350
  %359 = add i32 %358, 1154359984
  %_127 = sub i32 0, %350
  %360 = sub i32 0, 20
  %361 = sub i32 %359, %360
  %gen128 = add i32 %359, 20
  %362 = sub i32 %350, -1372193918
  %363 = sub i32 %362, 20
  %364 = add i32 %363, -1372193918
  %_129 = sub i32 %350, 20
  %gen130 = mul i32 %364, 20
  %365 = sub i32 0, 20
  %366 = add i32 %350, %365
  %_131 = sub i32 %350, 20
  %gen132 = mul i32 %366, 20
  %_133 = shl i32 %350, 20
  %367 = sub i32 0, 20
  %368 = add i32 %350, %367
  %_134 = sub i32 %350, 20
  %gen135 = mul i32 %368, 20
  %mul11alteredBB = mul nsw i32 %350, 20
  %_136 = shl i32 %349, %mul11alteredBB
  %369 = sub i32 0, -1863131560
  %370 = sub i32 %369, %349
  %371 = add i32 %370, -1863131560
  %_137 = sub i32 0, %349
  %372 = sub i32 0, %371
  %373 = sub i32 0, %mul11alteredBB
  %374 = add i32 %372, %373
  %375 = sub i32 0, %374
  %gen138 = add i32 %371, %mul11alteredBB
  %376 = sub i32 0, %mul11alteredBB
  %377 = add i32 %349, %376
  %_139 = sub i32 %349, %mul11alteredBB
  %gen140 = mul i32 %377, %mul11alteredBB
  %378 = sub i32 0, %mul11alteredBB
  %379 = add i32 %349, %378
  %_141 = sub i32 %349, %mul11alteredBB
  %gen142 = mul i32 %379, %mul11alteredBB
  %380 = sub i32 0, %349
  %381 = add i32 0, %380
  %_143 = sub i32 0, %349
  %382 = sub i32 %381, -1163156532
  %383 = add i32 %382, %mul11alteredBB
  %384 = add i32 %383, -1163156532
  %gen144 = add i32 %381, %mul11alteredBB
  %385 = sub i32 0, %mul11alteredBB
  %386 = add i32 %349, %385
  %sub12alteredBB = sub nsw i32 %349, %mul11alteredBB
  %387 = sub i32 0, -367915547
  %388 = sub i32 %387, %386
  %389 = add i32 %388, -367915547
  %_145 = sub i32 0, %386
  %390 = sub i32 %389, -257918423
  %391 = add i32 %390, 10
  %392 = add i32 %391, -257918423
  %gen146 = add i32 %389, 10
  %393 = add i32 0, -552877744
  %394 = sub i32 %393, %386
  %395 = sub i32 %394, -552877744
  %_147 = sub i32 0, %386
  %396 = sub i32 %395, -1623628183
  %397 = add i32 %396, 10
  %398 = add i32 %397, -1623628183
  %gen148 = add i32 %395, 10
  %div13alteredBB = sdiv i32 %386, 10
  store i32 %div13alteredBB, i32* %tenalteredBB, align 4
  %399 = load i32, i32* %nalteredBB, align 4
  %400 = load i32, i32* %hunalteredBB, align 4
  %401 = add i32 %400, 479454264
  %402 = sub i32 %401, 100
  %403 = sub i32 %402, 479454264
  %_149 = sub i32 %400, 100
  %gen150 = mul i32 %403, 100
  %404 = add i32 %400, 1912749057
  %405 = sub i32 %404, 100
  %406 = sub i32 %405, 1912749057
  %_151 = sub i32 %400, 100
  %gen152 = mul i32 %406, 100
  %_153 = shl i32 %400, 100
  %407 = add i32 0, -2135078995
  %408 = sub i32 %407, %400
  %409 = sub i32 %408, -2135078995
  %_154 = sub i32 0, %400
  %410 = sub i32 0, %409
  %411 = sub i32 0, 100
  %412 = add i32 %410, %411
  %413 = sub i32 0, %412
  %gen155 = add i32 %409, 100
  %414 = sub i32 %400, 1456687543
  %415 = sub i32 %414, 100
  %416 = add i32 %415, 1456687543
  %_156 = sub i32 %400, 100
  %gen157 = mul i32 %416, 100
  %mul14alteredBB = mul nsw i32 %400, 100
  %417 = sub i32 0, %399
  %418 = add i32 0, %417
  %_158 = sub i32 0, %399
  %419 = sub i32 0, %mul14alteredBB
  %420 = sub i32 %418, %419
  %gen159 = add i32 %418, %mul14alteredBB
  %_160 = shl i32 %399, %mul14alteredBB
  %421 = sub i32 0, %mul14alteredBB
  %422 = add i32 %399, %421
  %_161 = sub i32 %399, %mul14alteredBB
  %gen162 = mul i32 %422, %mul14alteredBB
  %423 = add i32 %399, 1645116192
  %424 = sub i32 %423, %mul14alteredBB
  %425 = sub i32 %424, 1645116192
  %sub15alteredBB = sub nsw i32 %399, %mul14alteredBB
  %426 = load i32, i32* %fifalteredBB, align 4
  %427 = sub i32 0, %426
  %428 = add i32 0, %427
  %_163 = sub i32 0, %426
  %429 = sub i32 %428, -921030373
  %430 = add i32 %429, 50
  %431 = add i32 %430, -921030373
  %gen164 = add i32 %428, 50
  %_165 = shl i32 %426, 50
  %432 = add i32 %426, -1802719704
  %433 = sub i32 %432, 50
  %434 = sub i32 %433, -1802719704
  %_166 = sub i32 %426, 50
  %gen167 = mul i32 %434, 50
  %435 = add i32 %426, 121784070
  %436 = sub i32 %435, 50
  %437 = sub i32 %436, 121784070
  %_168 = sub i32 %426, 50
  %gen169 = mul i32 %437, 50
  %_170 = shl i32 %426, 50
  %_171 = shl i32 %426, 50
  %mul16alteredBB = mul nsw i32 %426, 50
  %438 = sub i32 0, %mul16alteredBB
  %439 = add i32 %425, %438
  %_172 = sub i32 %425, %mul16alteredBB
  %gen173 = mul i32 %439, %mul16alteredBB
  %440 = sub i32 %425, -448801261
  %441 = sub i32 %440, %mul16alteredBB
  %442 = add i32 %441, -448801261
  %_174 = sub i32 %425, %mul16alteredBB
  %gen175 = mul i32 %442, %mul16alteredBB
  %_176 = shl i32 %425, %mul16alteredBB
  %443 = sub i32 %425, 1886597791
  %444 = sub i32 %443, %mul16alteredBB
  %445 = add i32 %444, 1886597791
  %_177 = sub i32 %425, %mul16alteredBB
  %gen178 = mul i32 %445, %mul16alteredBB
  %446 = add i32 0, -1877197587
  %447 = sub i32 %446, %425
  %448 = sub i32 %447, -1877197587
  %_179 = sub i32 0, %425
  %449 = sub i32 %448, 1627704080
  %450 = add i32 %449, %mul16alteredBB
  %451 = add i32 %450, 1627704080
  %gen180 = add i32 %448, %mul16alteredBB
  %452 = sub i32 0, %425
  %453 = add i32 0, %452
  %_181 = sub i32 0, %425
  %454 = sub i32 0, %mul16alteredBB
  %455 = sub i32 %453, %454
  %gen182 = add i32 %453, %mul16alteredBB
  %_183 = shl i32 %425, %mul16alteredBB
  %456 = sub i32 0, %mul16alteredBB
  %457 = add i32 %425, %456
  %sub17alteredBB = sub nsw i32 %425, %mul16alteredBB
  %458 = load i32, i32* %twealteredBB, align 4
  %459 = sub i32 %458, -832485534
  %460 = sub i32 %459, 20
  %461 = add i32 %460, -832485534
  %_184 = sub i32 %458, 20
  %gen185 = mul i32 %461, 20
  %mul18alteredBB = mul nsw i32 %458, 20
  %_186 = shl i32 %457, %mul18alteredBB
  %_187 = shl i32 %457, %mul18alteredBB
  %462 = add i32 %457, 158615172
  %463 = sub i32 %462, %mul18alteredBB
  %464 = sub i32 %463, 158615172
  %_188 = sub i32 %457, %mul18alteredBB
  %gen189 = mul i32 %464, %mul18alteredBB
  %465 = sub i32 0, 1586143718
  %466 = sub i32 %465, %457
  %467 = add i32 %466, 1586143718
  %_190 = sub i32 0, %457
  %468 = sub i32 0, %mul18alteredBB
  %469 = sub i32 %467, %468
  %gen191 = add i32 %467, %mul18alteredBB
  %_192 = shl i32 %457, %mul18alteredBB
  %470 = sub i32 %457, -824758441
  %471 = sub i32 %470, %mul18alteredBB
  %472 = add i32 %471, -824758441
  %sub19alteredBB = sub nsw i32 %457, %mul18alteredBB
  %473 = load i32, i32* %tenalteredBB, align 4
  %474 = sub i32 0, %473
  %475 = add i32 0, %474
  %_193 = sub i32 0, %473
  %476 = add i32 %475, -2048449212
  %477 = add i32 %476, 10
  %478 = sub i32 %477, -2048449212
  %gen194 = add i32 %475, 10
  %_195 = shl i32 %473, 10
  %479 = add i32 0, -1120567744
  %480 = sub i32 %479, %473
  %481 = sub i32 %480, -1120567744
  %_196 = sub i32 0, %473
  %482 = sub i32 0, %481
  %483 = sub i32 0, 10
  %484 = add i32 %482, %483
  %485 = sub i32 0, %484
  %gen197 = add i32 %481, 10
  %486 = sub i32 0, %473
  %487 = add i32 0, %486
  %_198 = sub i32 0, %473
  %488 = add i32 %487, 741229230
  %489 = add i32 %488, 10
  %490 = sub i32 %489, 741229230
  %gen199 = add i32 %487, 10
  %mul20alteredBB = mul nsw i32 %473, 10
  %_200 = shl i32 %472, %mul20alteredBB
  %491 = sub i32 %472, -686378660
  %492 = sub i32 %491, %mul20alteredBB
  %493 = add i32 %492, -686378660
  %_201 = sub i32 %472, %mul20alteredBB
  %gen202 = mul i32 %493, %mul20alteredBB
  %494 = add i32 %472, 1617329126
  %495 = sub i32 %494, %mul20alteredBB
  %496 = sub i32 %495, 1617329126
  %_203 = sub i32 %472, %mul20alteredBB
  %gen204 = mul i32 %496, %mul20alteredBB
  %_205 = shl i32 %472, %mul20alteredBB
  %497 = sub i32 0, %mul20alteredBB
  %498 = add i32 %472, %497
  %_206 = sub i32 %472, %mul20alteredBB
  %gen207 = mul i32 %498, %mul20alteredBB
  %499 = sub i32 0, -1997419879
  %500 = sub i32 %499, %472
  %501 = add i32 %500, -1997419879
  %_208 = sub i32 0, %472
  %502 = sub i32 %501, 1335481219
  %503 = add i32 %502, %mul20alteredBB
  %504 = add i32 %503, 1335481219
  %gen209 = add i32 %501, %mul20alteredBB
  %_210 = shl i32 %472, %mul20alteredBB
  %505 = sub i32 0, %mul20alteredBB
  %506 = add i32 %472, %505
  %sub21alteredBB = sub nsw i32 %472, %mul20alteredBB
  %507 = sub i32 0, 5
  %508 = add i32 %506, %507
  %_211 = sub i32 %506, 5
  %gen212 = mul i32 %508, 5
  %_213 = shl i32 %506, 5
  %509 = add i32 0, 1804242494
  %510 = sub i32 %509, %506
  %511 = sub i32 %510, 1804242494
  %_214 = sub i32 0, %506
  %512 = sub i32 0, %511
  %513 = sub i32 0, 5
  %514 = add i32 %512, %513
  %515 = sub i32 0, %514
  %gen215 = add i32 %511, 5
  %516 = add i32 %506, -303839223
  %517 = sub i32 %516, 5
  %518 = sub i32 %517, -303839223
  %_216 = sub i32 %506, 5
  %gen217 = mul i32 %518, 5
  %_218 = shl i32 %506, 5
  %div22alteredBB = sdiv i32 %506, 5
  store i32 %div22alteredBB, i32* %fivalteredBB, align 4
  %519 = load i32, i32* %nalteredBB, align 4
  %520 = load i32, i32* %hunalteredBB, align 4
  %521 = sub i32 0, %520
  %522 = add i32 0, %521
  %_219 = sub i32 0, %520
  %523 = sub i32 %522, 75227253
  %524 = add i32 %523, 100
  %525 = add i32 %524, 75227253
  %gen220 = add i32 %522, 100
  %526 = add i32 %520, -2085593206
  %527 = sub i32 %526, 100
  %528 = sub i32 %527, -2085593206
  %_221 = sub i32 %520, 100
  %gen222 = mul i32 %528, 100
  %_223 = shl i32 %520, 100
  %529 = add i32 0, -1765216041
  %530 = sub i32 %529, %520
  %531 = sub i32 %530, -1765216041
  %_224 = sub i32 0, %520
  %532 = add i32 %531, -1183704167
  %533 = add i32 %532, 100
  %534 = sub i32 %533, -1183704167
  %gen225 = add i32 %531, 100
  %535 = sub i32 0, -931573876
  %536 = sub i32 %535, %520
  %537 = add i32 %536, -931573876
  %_226 = sub i32 0, %520
  %538 = add i32 %537, 1870095502
  %539 = add i32 %538, 100
  %540 = sub i32 %539, 1870095502
  %gen227 = add i32 %537, 100
  %541 = sub i32 %520, -1138329953
  %542 = sub i32 %541, 100
  %543 = add i32 %542, -1138329953
  %_228 = sub i32 %520, 100
  %gen229 = mul i32 %543, 100
  %544 = add i32 0, -153130890
  %545 = sub i32 %544, %520
  %546 = sub i32 %545, -153130890
  %_230 = sub i32 0, %520
  %547 = add i32 %546, 1274753902
  %548 = add i32 %547, 100
  %549 = sub i32 %548, 1274753902
  %gen231 = add i32 %546, 100
  %550 = sub i32 0, 100
  %551 = add i32 %520, %550
  %_232 = sub i32 %520, 100
  %gen233 = mul i32 %551, 100
  %_234 = shl i32 %520, 100
  %mul23alteredBB = mul nsw i32 %520, 100
  %_235 = shl i32 %519, %mul23alteredBB
  %_236 = shl i32 %519, %mul23alteredBB
  %_237 = shl i32 %519, %mul23alteredBB
  %552 = add i32 %519, -1171751066
  %553 = sub i32 %552, %mul23alteredBB
  %554 = sub i32 %553, -1171751066
  %sub24alteredBB = sub nsw i32 %519, %mul23alteredBB
  %555 = load i32, i32* %fifalteredBB, align 4
  %556 = sub i32 0, 50
  %557 = add i32 %555, %556
  %_238 = sub i32 %555, 50
  %gen239 = mul i32 %557, 50
  %558 = sub i32 0, 1825067228
  %559 = sub i32 %558, %555
  %560 = add i32 %559, 1825067228
  %_240 = sub i32 0, %555
  %561 = sub i32 %560, -995234632
  %562 = add i32 %561, 50
  %563 = add i32 %562, -995234632
  %gen241 = add i32 %560, 50
  %mul25alteredBB = mul nsw i32 %555, 50
  %564 = sub i32 %554, 1259187617
  %565 = sub i32 %564, %mul25alteredBB
  %566 = add i32 %565, 1259187617
  %sub26alteredBB = sub nsw i32 %554, %mul25alteredBB
  %567 = load i32, i32* %twealteredBB, align 4
  %568 = add i32 0, 1506568214
  %569 = sub i32 %568, %567
  %570 = sub i32 %569, 1506568214
  %_242 = sub i32 0, %567
  %571 = sub i32 0, 20
  %572 = sub i32 %570, %571
  %gen243 = add i32 %570, 20
  %573 = sub i32 %567, 465195673
  %574 = sub i32 %573, 20
  %575 = add i32 %574, 465195673
  %_244 = sub i32 %567, 20
  %gen245 = mul i32 %575, 20
  %mul27alteredBB = mul nsw i32 %567, 20
  %576 = sub i32 0, %566
  %577 = add i32 0, %576
  %_246 = sub i32 0, %566
  %578 = sub i32 %577, 1826525847
  %579 = add i32 %578, %mul27alteredBB
  %580 = add i32 %579, 1826525847
  %gen247 = add i32 %577, %mul27alteredBB
  %581 = sub i32 0, %mul27alteredBB
  %582 = add i32 %566, %581
  %_248 = sub i32 %566, %mul27alteredBB
  %gen249 = mul i32 %582, %mul27alteredBB
  %583 = sub i32 0, -94197889
  %584 = sub i32 %583, %566
  %585 = add i32 %584, -94197889
  %_250 = sub i32 0, %566
  %586 = add i32 %585, -994788116
  %587 = add i32 %586, %mul27alteredBB
  %588 = sub i32 %587, -994788116
  %gen251 = add i32 %585, %mul27alteredBB
  %_252 = shl i32 %566, %mul27alteredBB
  %_253 = shl i32 %566, %mul27alteredBB
  %589 = sub i32 %566, -1396092357
  %590 = sub i32 %589, %mul27alteredBB
  %591 = add i32 %590, -1396092357
  %sub28alteredBB = sub nsw i32 %566, %mul27alteredBB
  %592 = load i32, i32* %tenalteredBB, align 4
  %593 = sub i32 0, 10
  %594 = add i32 %592, %593
  %_254 = sub i32 %592, 10
  %gen255 = mul i32 %594, 10
  %595 = sub i32 0, 10
  %596 = add i32 %592, %595
  %_256 = sub i32 %592, 10
  %gen257 = mul i32 %596, 10
  %597 = sub i32 0, 10
  %598 = add i32 %592, %597
  %_258 = sub i32 %592, 10
  %gen259 = mul i32 %598, 10
  %599 = add i32 %592, -1914775166
  %600 = sub i32 %599, 10
  %601 = sub i32 %600, -1914775166
  %_260 = sub i32 %592, 10
  %gen261 = mul i32 %601, 10
  %_262 = shl i32 %592, 10
  %602 = sub i32 0, -262149066
  %603 = sub i32 %602, %592
  %604 = add i32 %603, -262149066
  %_263 = sub i32 0, %592
  %605 = add i32 %604, -1350406946
  %606 = add i32 %605, 10
  %607 = sub i32 %606, -1350406946
  %gen264 = add i32 %604, 10
  %608 = add i32 %592, 598465660
  %609 = sub i32 %608, 10
  %610 = sub i32 %609, 598465660
  %_265 = sub i32 %592, 10
  %gen266 = mul i32 %610, 10
  %mul29alteredBB = mul nsw i32 %592, 10
  %611 = sub i32 0, %mul29alteredBB
  %612 = add i32 %591, %611
  %_267 = sub i32 %591, %mul29alteredBB
  %gen268 = mul i32 %612, %mul29alteredBB
  %613 = sub i32 %591, -621199550
  %614 = sub i32 %613, %mul29alteredBB
  %615 = add i32 %614, -621199550
  %_269 = sub i32 %591, %mul29alteredBB
  %gen270 = mul i32 %615, %mul29alteredBB
  %_271 = shl i32 %591, %mul29alteredBB
  %616 = add i32 %591, -980893539
  %617 = sub i32 %616, %mul29alteredBB
  %618 = sub i32 %617, -980893539
  %_272 = sub i32 %591, %mul29alteredBB
  %gen273 = mul i32 %618, %mul29alteredBB
  %619 = sub i32 %591, 292164840
  %620 = sub i32 %619, %mul29alteredBB
  %621 = add i32 %620, 292164840
  %_274 = sub i32 %591, %mul29alteredBB
  %gen275 = mul i32 %621, %mul29alteredBB
  %622 = add i32 %591, 540543494
  %623 = sub i32 %622, %mul29alteredBB
  %624 = sub i32 %623, 540543494
  %_276 = sub i32 %591, %mul29alteredBB
  %gen277 = mul i32 %624, %mul29alteredBB
  %625 = sub i32 0, %mul29alteredBB
  %626 = add i32 %591, %625
  %sub30alteredBB = sub nsw i32 %591, %mul29alteredBB
  %627 = load i32, i32* %fivalteredBB, align 4
  %_278 = shl i32 %627, 5
  %628 = add i32 %627, -1980521804
  %629 = sub i32 %628, 5
  %630 = sub i32 %629, -1980521804
  %_279 = sub i32 %627, 5
  %gen280 = mul i32 %630, 5
  %_281 = shl i32 %627, 5
  %mul31alteredBB = mul nsw i32 %627, 5
  %_282 = shl i32 %626, %mul31alteredBB
  %631 = sub i32 %626, 1846551475
  %632 = sub i32 %631, %mul31alteredBB
  %633 = add i32 %632, 1846551475
  %_283 = sub i32 %626, %mul31alteredBB
  %gen284 = mul i32 %633, %mul31alteredBB
  %634 = add i32 0, 1887718857
  %635 = sub i32 %634, %626
  %636 = sub i32 %635, 1887718857
  %_285 = sub i32 0, %626
  %637 = sub i32 0, %636
  %638 = sub i32 0, %mul31alteredBB
  %639 = add i32 %637, %638
  %640 = sub i32 0, %639
  %gen286 = add i32 %636, %mul31alteredBB
  %641 = add i32 0, 857879277
  %642 = sub i32 %641, %626
  %643 = sub i32 %642, 857879277
  %_287 = sub i32 0, %626
  %644 = add i32 %643, 1341553087
  %645 = add i32 %644, %mul31alteredBB
  %646 = sub i32 %645, 1341553087
  %gen288 = add i32 %643, %mul31alteredBB
  %647 = sub i32 0, %626
  %648 = add i32 0, %647
  %_289 = sub i32 0, %626
  %649 = add i32 %648, -1987638691
  %650 = add i32 %649, %mul31alteredBB
  %651 = sub i32 %650, -1987638691
  %gen290 = add i32 %648, %mul31alteredBB
  %652 = add i32 %626, -193690416
  %653 = sub i32 %652, %mul31alteredBB
  %654 = sub i32 %653, -193690416
  %sub32alteredBB = sub nsw i32 %626, %mul31alteredBB
  %_291 = shl i32 %654, 1
  %655 = sub i32 0, 1670156060
  %656 = sub i32 %655, %654
  %657 = add i32 %656, 1670156060
  %_292 = sub i32 0, %654
  %658 = sub i32 0, 1
  %659 = sub i32 %657, %658
  %gen293 = add i32 %657, 1
  %660 = sub i32 0, -1299012224
  %661 = sub i32 %660, %654
  %662 = add i32 %661, -1299012224
  %_294 = sub i32 0, %654
  %663 = sub i32 0, 1
  %664 = sub i32 %662, %663
  %gen295 = add i32 %662, 1
  %665 = sub i32 0, %654
  %666 = add i32 0, %665
  %_296 = sub i32 0, %654
  %667 = sub i32 %666, -322627523
  %668 = add i32 %667, 1
  %669 = add i32 %668, -322627523
  %gen297 = add i32 %666, 1
  %_298 = shl i32 %654, 1
  %_299 = shl i32 %654, 1
  %_300 = shl i32 %654, 1
  %670 = sub i32 0, 1755756518
  %671 = sub i32 %670, %654
  %672 = add i32 %671, 1755756518
  %_301 = sub i32 0, %654
  %673 = add i32 %672, 472189615
  %674 = add i32 %673, 1
  %675 = sub i32 %674, 472189615
  %gen302 = add i32 %672, 1
  %div33alteredBB = sdiv i32 %654, 1
  store i32 %div33alteredBB, i32* %onealteredBB, align 4
  %arrayinit.beginalteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %szalteredBB, i64 0, i64 0
  %676 = load i32, i32* %hunalteredBB, align 4
  store i32 %676, i32* %arrayinit.beginalteredBB, align 4
  %arrayinit.elementalteredBB = getelementptr inbounds i32, i32* %arrayinit.beginalteredBB, i64 1
  %677 = load i32, i32* %fifalteredBB, align 4
  store i32 %677, i32* %arrayinit.elementalteredBB, align 4
  %arrayinit.element34alteredBB = getelementptr inbounds i32, i32* %arrayinit.elementalteredBB, i64 1
  %678 = load i32, i32* %twealteredBB, align 4
  store i32 %678, i32* %arrayinit.element34alteredBB, align 4
  %arrayinit.element35alteredBB = getelementptr inbounds i32, i32* %arrayinit.element34alteredBB, i64 1
  %679 = load i32, i32* %tenalteredBB, align 4
  store i32 %679, i32* %arrayinit.element35alteredBB, align 4
  %arrayinit.element36alteredBB = getelementptr inbounds i32, i32* %arrayinit.element35alteredBB, i64 1
  %680 = load i32, i32* %fivalteredBB, align 4
  store i32 %680, i32* %arrayinit.element36alteredBB, align 4
  %arrayinit.element37alteredBB = getelementptr inbounds i32, i32* %arrayinit.element36alteredBB, i64 1
  %681 = load i32, i32* %onealteredBB, align 4
  store i32 %681, i32* %arrayinit.element37alteredBB, align 4
  store i32 0, i32* %ialteredBB, align 4
  store i32 -667074383, i32* %switchVar
  br label %loopEnd

originalBB303alteredBB:                           ; preds = %loopEntry
  %i.reload = load volatile i32*, i32** %i.reg2mem
  %682 = load i32, i32* %i.reload, align 4
  %idxpromalteredBB = sext i32 %682 to i64
  %sz.reload = load volatile [6 x i32]*, [6 x i32]** %sz.reg2mem
  %arrayidxalteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %sz.reload, i64 0, i64 %idxpromalteredBB
  %683 = load i32, i32* %arrayidxalteredBB, align 4
  %call38alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %683)
  store i32 21087403, i32* %switchVar
  br label %loopEnd

originalBB307alteredBB:                           ; preds = %loopEntry
  store i32 -336893247, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB307alteredBB, %originalBB303alteredBB, %originalBBalteredBB, %originalBB307, %for.end, %for.inc, %originalBBpart2305, %originalBB303, %for.body, %for.cond, %originalBBpart2, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
