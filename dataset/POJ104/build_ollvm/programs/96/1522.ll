; ModuleID = 'source-C-CXX/96/1522.c'
source_filename = "source-C-CXX/96/1522.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"%d\0A%d\0A%d\0A%d\0A%d\0A%d\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %.reg2mem168 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = add i32 %0, -55192582
  %3 = sub i32 %2, 1
  %4 = sub i32 %3, -55192582
  %5 = sub i32 %0, 1
  %6 = mul i32 %0, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %.reg2mem
  %9 = icmp slt i32 %1, 10
  store i1 %9, i1* %.reg2mem168
  %switchVar = alloca i32
  store i32 -881317707, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar167 = load i32, i32* %switchVar
  switch i32 %switchVar167, label %switchDefault [
    i32 -881317707, label %first
    i32 -1729925828, label %originalBB
    i32 1420154202, label %originalBBpart2
    i32 -2042323567, label %originalBBalteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload169 = load volatile i1, i1* %.reg2mem168
  %10 = xor i1 %.reload, true
  %11 = xor i1 %.reload169, true
  %12 = xor i1 false, true
  %13 = and i1 %10, false
  %14 = and i1 %.reload, %12
  %15 = and i1 %11, false
  %16 = and i1 %.reload169, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 false, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %.reload, %.reload169
  %26 = select i1 %24, i32 -1729925828, i32 -2042323567
  store i32 %26, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %a = alloca [6 x i32], align 16
  store i32 0, i32* %retval, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %27 = load i32, i32* %n, align 4
  %div = sdiv i32 %27, 100
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 0
  store i32 %div, i32* %arrayidx, align 16
  %28 = load i32, i32* %n, align 4
  %rem = srem i32 %28, 100
  %div1 = sdiv i32 %rem, 50
  %arrayidx2 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 1
  store i32 %div1, i32* %arrayidx2, align 4
  %29 = load i32, i32* %n, align 4
  %rem3 = srem i32 %29, 100
  %rem4 = srem i32 %rem3, 50
  %div5 = sdiv i32 %rem4, 20
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 2
  store i32 %div5, i32* %arrayidx6, align 8
  %30 = load i32, i32* %n, align 4
  %rem7 = srem i32 %30, 100
  %rem8 = srem i32 %rem7, 50
  %rem9 = srem i32 %rem8, 20
  %div10 = sdiv i32 %rem9, 10
  %arrayidx11 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 3
  store i32 %div10, i32* %arrayidx11, align 4
  %31 = load i32, i32* %n, align 4
  %rem12 = srem i32 %31, 100
  %rem13 = srem i32 %rem12, 50
  %rem14 = srem i32 %rem13, 20
  %rem15 = srem i32 %rem14, 10
  %div16 = sdiv i32 %rem15, 5
  %arrayidx17 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 4
  store i32 %div16, i32* %arrayidx17, align 16
  %32 = load i32, i32* %n, align 4
  %rem18 = srem i32 %32, 100
  %rem19 = srem i32 %rem18, 50
  %rem20 = srem i32 %rem19, 20
  %rem21 = srem i32 %rem20, 10
  %rem22 = srem i32 %rem21, 5
  %arrayidx23 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 5
  store i32 %rem22, i32* %arrayidx23, align 4
  %arrayidx24 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 0
  %33 = load i32, i32* %arrayidx24, align 16
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 1
  %34 = load i32, i32* %arrayidx25, align 4
  %arrayidx26 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 2
  %35 = load i32, i32* %arrayidx26, align 8
  %arrayidx27 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 3
  %36 = load i32, i32* %arrayidx27, align 4
  %arrayidx28 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 4
  %37 = load i32, i32* %arrayidx28, align 16
  %arrayidx29 = getelementptr inbounds [6 x i32], [6 x i32]* %a, i64 0, i64 5
  %38 = load i32, i32* %arrayidx29, align 4
  %call30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i32 %33, i32 %34, i32 %35, i32 %36, i32 %37, i32 %38)
  %39 = load i32, i32* @x
  %40 = load i32, i32* @y
  %41 = sub i32 %39, -1964157450
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1964157450
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1420154202, i32 -2042323567
  store i32 %53, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %nalteredBB = alloca i32, align 4
  %aalteredBB = alloca [6 x i32], align 16
  store i32 0, i32* %retvalalteredBB, align 4
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %nalteredBB)
  %54 = load i32, i32* %nalteredBB, align 4
  %55 = add i32 %54, 2097922120
  %56 = sub i32 %55, 100
  %57 = sub i32 %56, 2097922120
  %_ = sub i32 %54, 100
  %gen = mul i32 %57, 100
  %_31 = shl i32 %54, 100
  %58 = add i32 %54, -1197399215
  %59 = sub i32 %58, 100
  %60 = sub i32 %59, -1197399215
  %_32 = sub i32 %54, 100
  %gen33 = mul i32 %60, 100
  %61 = add i32 0, 535016960
  %62 = sub i32 %61, %54
  %63 = sub i32 %62, 535016960
  %_34 = sub i32 0, %54
  %64 = sub i32 0, 100
  %65 = sub i32 %63, %64
  %gen35 = add i32 %63, 100
  %66 = add i32 0, 1932237756
  %67 = sub i32 %66, %54
  %68 = sub i32 %67, 1932237756
  %_36 = sub i32 0, %54
  %69 = sub i32 0, 100
  %70 = sub i32 %68, %69
  %gen37 = add i32 %68, 100
  %_38 = shl i32 %54, 100
  %71 = add i32 0, 1465809802
  %72 = sub i32 %71, %54
  %73 = sub i32 %72, 1465809802
  %_39 = sub i32 0, %54
  %74 = sub i32 0, 100
  %75 = sub i32 %73, %74
  %gen40 = add i32 %73, 100
  %76 = sub i32 0, 100
  %77 = add i32 %54, %76
  %_41 = sub i32 %54, 100
  %gen42 = mul i32 %77, 100
  %_43 = shl i32 %54, 100
  %divalteredBB = sdiv i32 %54, 100
  %arrayidxalteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 0
  store i32 %divalteredBB, i32* %arrayidxalteredBB, align 16
  %78 = load i32, i32* %nalteredBB, align 4
  %79 = add i32 0, 2039321443
  %80 = sub i32 %79, %78
  %81 = sub i32 %80, 2039321443
  %_44 = sub i32 0, %78
  %82 = sub i32 %81, -881376033
  %83 = add i32 %82, 100
  %84 = add i32 %83, -881376033
  %gen45 = add i32 %81, 100
  %_46 = shl i32 %78, 100
  %_47 = shl i32 %78, 100
  %85 = sub i32 0, %78
  %86 = add i32 0, %85
  %_48 = sub i32 0, %78
  %87 = add i32 %86, 770707881
  %88 = add i32 %87, 100
  %89 = sub i32 %88, 770707881
  %gen49 = add i32 %86, 100
  %90 = sub i32 %78, 222094248
  %91 = sub i32 %90, 100
  %92 = add i32 %91, 222094248
  %_50 = sub i32 %78, 100
  %gen51 = mul i32 %92, 100
  %remalteredBB = srem i32 %78, 100
  %93 = sub i32 %remalteredBB, -1919871979
  %94 = sub i32 %93, 50
  %95 = add i32 %94, -1919871979
  %_52 = sub i32 %remalteredBB, 50
  %gen53 = mul i32 %95, 50
  %div1alteredBB = sdiv i32 %remalteredBB, 50
  %arrayidx2alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 1
  store i32 %div1alteredBB, i32* %arrayidx2alteredBB, align 4
  %96 = load i32, i32* %nalteredBB, align 4
  %_54 = shl i32 %96, 100
  %97 = sub i32 0, 1199281481
  %98 = sub i32 %97, %96
  %99 = add i32 %98, 1199281481
  %_55 = sub i32 0, %96
  %100 = add i32 %99, 707920168
  %101 = add i32 %100, 100
  %102 = sub i32 %101, 707920168
  %gen56 = add i32 %99, 100
  %103 = sub i32 0, 100
  %104 = add i32 %96, %103
  %_57 = sub i32 %96, 100
  %gen58 = mul i32 %104, 100
  %105 = sub i32 0, %96
  %106 = add i32 0, %105
  %_59 = sub i32 0, %96
  %107 = sub i32 %106, 1691227886
  %108 = add i32 %107, 100
  %109 = add i32 %108, 1691227886
  %gen60 = add i32 %106, 100
  %110 = sub i32 0, -1405407499
  %111 = sub i32 %110, %96
  %112 = add i32 %111, -1405407499
  %_61 = sub i32 0, %96
  %113 = add i32 %112, 250688900
  %114 = add i32 %113, 100
  %115 = sub i32 %114, 250688900
  %gen62 = add i32 %112, 100
  %rem3alteredBB = srem i32 %96, 100
  %_63 = shl i32 %rem3alteredBB, 50
  %rem4alteredBB = srem i32 %rem3alteredBB, 50
  %_64 = shl i32 %rem4alteredBB, 20
  %116 = add i32 0, 663840936
  %117 = sub i32 %116, %rem4alteredBB
  %118 = sub i32 %117, 663840936
  %_65 = sub i32 0, %rem4alteredBB
  %119 = sub i32 0, %118
  %120 = sub i32 0, 20
  %121 = add i32 %119, %120
  %122 = sub i32 0, %121
  %gen66 = add i32 %118, 20
  %123 = sub i32 0, %rem4alteredBB
  %124 = add i32 0, %123
  %_67 = sub i32 0, %rem4alteredBB
  %125 = add i32 %124, 1384126691
  %126 = add i32 %125, 20
  %127 = sub i32 %126, 1384126691
  %gen68 = add i32 %124, 20
  %128 = sub i32 %rem4alteredBB, 625768554
  %129 = sub i32 %128, 20
  %130 = add i32 %129, 625768554
  %_69 = sub i32 %rem4alteredBB, 20
  %gen70 = mul i32 %130, 20
  %131 = add i32 %rem4alteredBB, -1928783980
  %132 = sub i32 %131, 20
  %133 = sub i32 %132, -1928783980
  %_71 = sub i32 %rem4alteredBB, 20
  %gen72 = mul i32 %133, 20
  %134 = sub i32 0, 677261723
  %135 = sub i32 %134, %rem4alteredBB
  %136 = add i32 %135, 677261723
  %_73 = sub i32 0, %rem4alteredBB
  %137 = sub i32 0, %136
  %138 = sub i32 0, 20
  %139 = add i32 %137, %138
  %140 = sub i32 0, %139
  %gen74 = add i32 %136, 20
  %div5alteredBB = sdiv i32 %rem4alteredBB, 20
  %arrayidx6alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 2
  store i32 %div5alteredBB, i32* %arrayidx6alteredBB, align 8
  %141 = load i32, i32* %nalteredBB, align 4
  %_75 = shl i32 %141, 100
  %142 = sub i32 0, 100
  %143 = add i32 %141, %142
  %_76 = sub i32 %141, 100
  %gen77 = mul i32 %143, 100
  %_78 = shl i32 %141, 100
  %144 = sub i32 0, %141
  %145 = add i32 0, %144
  %_79 = sub i32 0, %141
  %146 = sub i32 %145, 1886201855
  %147 = add i32 %146, 100
  %148 = add i32 %147, 1886201855
  %gen80 = add i32 %145, 100
  %149 = sub i32 %141, -1381083102
  %150 = sub i32 %149, 100
  %151 = add i32 %150, -1381083102
  %_81 = sub i32 %141, 100
  %gen82 = mul i32 %151, 100
  %rem7alteredBB = srem i32 %141, 100
  %rem8alteredBB = srem i32 %rem7alteredBB, 50
  %_83 = shl i32 %rem8alteredBB, 20
  %152 = sub i32 0, %rem8alteredBB
  %153 = add i32 0, %152
  %_84 = sub i32 0, %rem8alteredBB
  %154 = sub i32 0, %153
  %155 = sub i32 0, 20
  %156 = add i32 %154, %155
  %157 = sub i32 0, %156
  %gen85 = add i32 %153, 20
  %158 = add i32 0, 1414290836
  %159 = sub i32 %158, %rem8alteredBB
  %160 = sub i32 %159, 1414290836
  %_86 = sub i32 0, %rem8alteredBB
  %161 = add i32 %160, -654650057
  %162 = add i32 %161, 20
  %163 = sub i32 %162, -654650057
  %gen87 = add i32 %160, 20
  %rem9alteredBB = srem i32 %rem8alteredBB, 20
  %_88 = shl i32 %rem9alteredBB, 10
  %_89 = shl i32 %rem9alteredBB, 10
  %164 = sub i32 0, -1755999919
  %165 = sub i32 %164, %rem9alteredBB
  %166 = add i32 %165, -1755999919
  %_90 = sub i32 0, %rem9alteredBB
  %167 = add i32 %166, -193036299
  %168 = add i32 %167, 10
  %169 = sub i32 %168, -193036299
  %gen91 = add i32 %166, 10
  %_92 = shl i32 %rem9alteredBB, 10
  %div10alteredBB = sdiv i32 %rem9alteredBB, 10
  %arrayidx11alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 3
  store i32 %div10alteredBB, i32* %arrayidx11alteredBB, align 4
  %170 = load i32, i32* %nalteredBB, align 4
  %_93 = shl i32 %170, 100
  %_94 = shl i32 %170, 100
  %171 = sub i32 0, 100
  %172 = add i32 %170, %171
  %_95 = sub i32 %170, 100
  %gen96 = mul i32 %172, 100
  %_97 = shl i32 %170, 100
  %rem12alteredBB = srem i32 %170, 100
  %_98 = shl i32 %rem12alteredBB, 50
  %_99 = shl i32 %rem12alteredBB, 50
  %_100 = shl i32 %rem12alteredBB, 50
  %_101 = shl i32 %rem12alteredBB, 50
  %173 = sub i32 0, 50
  %174 = add i32 %rem12alteredBB, %173
  %_102 = sub i32 %rem12alteredBB, 50
  %gen103 = mul i32 %174, 50
  %175 = sub i32 0, -1074493404
  %176 = sub i32 %175, %rem12alteredBB
  %177 = add i32 %176, -1074493404
  %_104 = sub i32 0, %rem12alteredBB
  %178 = add i32 %177, -1256059653
  %179 = add i32 %178, 50
  %180 = sub i32 %179, -1256059653
  %gen105 = add i32 %177, 50
  %181 = sub i32 0, %rem12alteredBB
  %182 = add i32 0, %181
  %_106 = sub i32 0, %rem12alteredBB
  %183 = add i32 %182, 1040095013
  %184 = add i32 %183, 50
  %185 = sub i32 %184, 1040095013
  %gen107 = add i32 %182, 50
  %186 = add i32 0, 997272517
  %187 = sub i32 %186, %rem12alteredBB
  %188 = sub i32 %187, 997272517
  %_108 = sub i32 0, %rem12alteredBB
  %189 = add i32 %188, -322181798
  %190 = add i32 %189, 50
  %191 = sub i32 %190, -322181798
  %gen109 = add i32 %188, 50
  %rem13alteredBB = srem i32 %rem12alteredBB, 50
  %192 = add i32 0, 1849859170
  %193 = sub i32 %192, %rem13alteredBB
  %194 = sub i32 %193, 1849859170
  %_110 = sub i32 0, %rem13alteredBB
  %195 = sub i32 0, %194
  %196 = sub i32 0, 20
  %197 = add i32 %195, %196
  %198 = sub i32 0, %197
  %gen111 = add i32 %194, 20
  %rem14alteredBB = srem i32 %rem13alteredBB, 20
  %199 = sub i32 0, 1904115740
  %200 = sub i32 %199, %rem14alteredBB
  %201 = add i32 %200, 1904115740
  %_112 = sub i32 0, %rem14alteredBB
  %202 = sub i32 0, %201
  %203 = sub i32 0, 10
  %204 = add i32 %202, %203
  %205 = sub i32 0, %204
  %gen113 = add i32 %201, 10
  %_114 = shl i32 %rem14alteredBB, 10
  %206 = sub i32 0, %rem14alteredBB
  %207 = add i32 0, %206
  %_115 = sub i32 0, %rem14alteredBB
  %208 = sub i32 %207, -1044745955
  %209 = add i32 %208, 10
  %210 = add i32 %209, -1044745955
  %gen116 = add i32 %207, 10
  %211 = sub i32 0, %rem14alteredBB
  %212 = add i32 0, %211
  %_117 = sub i32 0, %rem14alteredBB
  %213 = sub i32 0, %212
  %214 = sub i32 0, 10
  %215 = add i32 %213, %214
  %216 = sub i32 0, %215
  %gen118 = add i32 %212, 10
  %217 = sub i32 0, %rem14alteredBB
  %218 = add i32 0, %217
  %_119 = sub i32 0, %rem14alteredBB
  %219 = add i32 %218, 1533117625
  %220 = add i32 %219, 10
  %221 = sub i32 %220, 1533117625
  %gen120 = add i32 %218, 10
  %rem15alteredBB = srem i32 %rem14alteredBB, 10
  %222 = sub i32 0, %rem15alteredBB
  %223 = add i32 0, %222
  %_121 = sub i32 0, %rem15alteredBB
  %224 = sub i32 0, 5
  %225 = sub i32 %223, %224
  %gen122 = add i32 %223, 5
  %_123 = shl i32 %rem15alteredBB, 5
  %226 = add i32 %rem15alteredBB, 1741090631
  %227 = sub i32 %226, 5
  %228 = sub i32 %227, 1741090631
  %_124 = sub i32 %rem15alteredBB, 5
  %gen125 = mul i32 %228, 5
  %_126 = shl i32 %rem15alteredBB, 5
  %229 = sub i32 0, 5
  %230 = add i32 %rem15alteredBB, %229
  %_127 = sub i32 %rem15alteredBB, 5
  %gen128 = mul i32 %230, 5
  %div16alteredBB = sdiv i32 %rem15alteredBB, 5
  %arrayidx17alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 4
  store i32 %div16alteredBB, i32* %arrayidx17alteredBB, align 16
  %231 = load i32, i32* %nalteredBB, align 4
  %232 = sub i32 0, %231
  %233 = add i32 0, %232
  %_129 = sub i32 0, %231
  %234 = add i32 %233, -771066466
  %235 = add i32 %234, 100
  %236 = sub i32 %235, -771066466
  %gen130 = add i32 %233, 100
  %rem18alteredBB = srem i32 %231, 100
  %_131 = shl i32 %rem18alteredBB, 50
  %_132 = shl i32 %rem18alteredBB, 50
  %237 = sub i32 0, %rem18alteredBB
  %238 = add i32 0, %237
  %_133 = sub i32 0, %rem18alteredBB
  %239 = sub i32 0, 50
  %240 = sub i32 %238, %239
  %gen134 = add i32 %238, 50
  %241 = add i32 0, 1113534451
  %242 = sub i32 %241, %rem18alteredBB
  %243 = sub i32 %242, 1113534451
  %_135 = sub i32 0, %rem18alteredBB
  %244 = sub i32 0, %243
  %245 = sub i32 0, 50
  %246 = add i32 %244, %245
  %247 = sub i32 0, %246
  %gen136 = add i32 %243, 50
  %_137 = shl i32 %rem18alteredBB, 50
  %248 = add i32 0, 1319693784
  %249 = sub i32 %248, %rem18alteredBB
  %250 = sub i32 %249, 1319693784
  %_138 = sub i32 0, %rem18alteredBB
  %251 = sub i32 0, 50
  %252 = sub i32 %250, %251
  %gen139 = add i32 %250, 50
  %253 = sub i32 0, %rem18alteredBB
  %254 = add i32 0, %253
  %_140 = sub i32 0, %rem18alteredBB
  %255 = sub i32 0, %254
  %256 = sub i32 0, 50
  %257 = add i32 %255, %256
  %258 = sub i32 0, %257
  %gen141 = add i32 %254, 50
  %rem19alteredBB = srem i32 %rem18alteredBB, 50
  %259 = sub i32 0, 1742020243
  %260 = sub i32 %259, %rem19alteredBB
  %261 = add i32 %260, 1742020243
  %_142 = sub i32 0, %rem19alteredBB
  %262 = sub i32 0, 20
  %263 = sub i32 %261, %262
  %gen143 = add i32 %261, 20
  %264 = sub i32 0, -102230147
  %265 = sub i32 %264, %rem19alteredBB
  %266 = add i32 %265, -102230147
  %_144 = sub i32 0, %rem19alteredBB
  %267 = sub i32 %266, -2133069114
  %268 = add i32 %267, 20
  %269 = add i32 %268, -2133069114
  %gen145 = add i32 %266, 20
  %_146 = shl i32 %rem19alteredBB, 20
  %_147 = shl i32 %rem19alteredBB, 20
  %270 = sub i32 %rem19alteredBB, 370429563
  %271 = sub i32 %270, 20
  %272 = add i32 %271, 370429563
  %_148 = sub i32 %rem19alteredBB, 20
  %gen149 = mul i32 %272, 20
  %273 = sub i32 0, 605467227
  %274 = sub i32 %273, %rem19alteredBB
  %275 = add i32 %274, 605467227
  %_150 = sub i32 0, %rem19alteredBB
  %276 = sub i32 0, 20
  %277 = sub i32 %275, %276
  %gen151 = add i32 %275, 20
  %rem20alteredBB = srem i32 %rem19alteredBB, 20
  %278 = sub i32 %rem20alteredBB, -1378452819
  %279 = sub i32 %278, 10
  %280 = add i32 %279, -1378452819
  %_152 = sub i32 %rem20alteredBB, 10
  %gen153 = mul i32 %280, 10
  %281 = add i32 %rem20alteredBB, 559081157
  %282 = sub i32 %281, 10
  %283 = sub i32 %282, 559081157
  %_154 = sub i32 %rem20alteredBB, 10
  %gen155 = mul i32 %283, 10
  %284 = add i32 %rem20alteredBB, 935641911
  %285 = sub i32 %284, 10
  %286 = sub i32 %285, 935641911
  %_156 = sub i32 %rem20alteredBB, 10
  %gen157 = mul i32 %286, 10
  %287 = sub i32 %rem20alteredBB, -1544128895
  %288 = sub i32 %287, 10
  %289 = add i32 %288, -1544128895
  %_158 = sub i32 %rem20alteredBB, 10
  %gen159 = mul i32 %289, 10
  %rem21alteredBB = srem i32 %rem20alteredBB, 10
  %_160 = shl i32 %rem21alteredBB, 5
  %290 = sub i32 0, 5
  %291 = add i32 %rem21alteredBB, %290
  %_161 = sub i32 %rem21alteredBB, 5
  %gen162 = mul i32 %291, 5
  %292 = sub i32 %rem21alteredBB, 863464001
  %293 = sub i32 %292, 5
  %294 = add i32 %293, 863464001
  %_163 = sub i32 %rem21alteredBB, 5
  %gen164 = mul i32 %294, 5
  %295 = sub i32 0, %rem21alteredBB
  %296 = add i32 0, %295
  %_165 = sub i32 0, %rem21alteredBB
  %297 = sub i32 %296, 2014244163
  %298 = add i32 %297, 5
  %299 = add i32 %298, 2014244163
  %gen166 = add i32 %296, 5
  %rem22alteredBB = srem i32 %rem21alteredBB, 5
  %arrayidx23alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 5
  store i32 %rem22alteredBB, i32* %arrayidx23alteredBB, align 4
  %arrayidx24alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 0
  %300 = load i32, i32* %arrayidx24alteredBB, align 16
  %arrayidx25alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 1
  %301 = load i32, i32* %arrayidx25alteredBB, align 4
  %arrayidx26alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 2
  %302 = load i32, i32* %arrayidx26alteredBB, align 8
  %arrayidx27alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 3
  %303 = load i32, i32* %arrayidx27alteredBB, align 4
  %arrayidx28alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 4
  %304 = load i32, i32* %arrayidx28alteredBB, align 16
  %arrayidx29alteredBB = getelementptr inbounds [6 x i32], [6 x i32]* %aalteredBB, i64 0, i64 5
  %305 = load i32, i32* %arrayidx29alteredBB, align 4
  %call30alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i32 %300, i32 %301, i32 %302, i32 %303, i32 %304, i32 %305)
  store i32 -1729925828, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBBalteredBB, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
