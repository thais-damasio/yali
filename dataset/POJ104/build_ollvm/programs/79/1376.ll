; ModuleID = 'source-C-CXX/79/1376.c'
source_filename = "source-C-CXX/79/1376.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [13 x i8] c"%d%d%d%d%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %cmp2764.reg2mem = alloca i1
  %cmp2731.reg2mem = alloca i1
  %cmp2656.reg2mem = alloca i1
  %cmp2524.reg2mem = alloca i1
  %cmp2460.reg2mem = alloca i1
  %cmp2408.reg2mem = alloca i1
  %cmp2400.reg2mem = alloca i1
  %cmp2393.reg2mem = alloca i1
  %cmp2298.reg2mem = alloca i1
  %cmp2267.reg2mem = alloca i1
  %cmp2259.reg2mem = alloca i1
  %cmp2229.reg2mem = alloca i1
  %cmp2173.reg2mem = alloca i1
  %cmp2165.reg2mem = alloca i1
  %cmp2113.reg2mem = alloca i1
  %cmp2088.reg2mem = alloca i1
  %cmp2077.reg2mem = alloca i1
  %cmp2067.reg2mem = alloca i1
  %cmp2043.reg2mem = alloca i1
  %cmp2009.reg2mem = alloca i1
  %cmp1961.reg2mem = alloca i1
  %cmp1920.reg2mem = alloca i1
  %cmp1893.reg2mem = alloca i1
  %cmp1878.reg2mem = alloca i1
  %cmp1853.reg2mem = alloca i1
  %cmp1842.reg2mem = alloca i1
  %cmp1832.reg2mem = alloca i1
  %cmp1784.reg2mem = alloca i1
  %cmp1718.reg2mem = alloca i1
  %cmp1699.reg2mem = alloca i1
  %cmp1691.reg2mem = alloca i1
  %cmp1669.reg2mem = alloca i1
  %.reg2mem6914 = alloca i32
  %cmp1607.reg2mem = alloca i1
  %cmp1550.reg2mem = alloca i1
  %cmp1494.reg2mem = alloca i1
  %cmp1480.reg2mem = alloca i1
  %cmp1434.reg2mem = alloca i1
  %cmp1425.reg2mem = alloca i1
  %cmp1410.reg2mem = alloca i1
  %.reg2mem6910 = alloca i32
  %cmp1403.reg2mem = alloca i1
  %cmp1394.reg2mem = alloca i1
  %cmp1367.reg2mem = alloca i1
  %cmp1331.reg2mem = alloca i1
  %cmp1227.reg2mem = alloca i1
  %cmp1204.reg2mem = alloca i1
  %cmp1162.reg2mem = alloca i1
  %cmp1096.reg2mem = alloca i1
  %cmp1085.reg2mem = alloca i1
  %cmp1031.reg2mem = alloca i1
  %cmp1013.reg2mem = alloca i1
  %cmp961.reg2mem = alloca i1
  %cmp949.reg2mem = alloca i1
  %cmp936.reg2mem = alloca i1
  %cmp817.reg2mem = alloca i1
  %cmp805.reg2mem = alloca i1
  %cmp778.reg2mem = alloca i1
  %cmp726.reg2mem = alloca i1
  %cmp641.reg2mem = alloca i1
  %cmp632.reg2mem = alloca i1
  %cmp622.reg2mem = alloca i1
  %cmp597.reg2mem = alloca i1
  %cmp547.reg2mem = alloca i1
  %cmp525.reg2mem = alloca i1
  %cmp506.reg2mem = alloca i1
  %cmp445.reg2mem = alloca i1
  %cmp367.reg2mem = alloca i1
  %cmp321.reg2mem = alloca i1
  %cmp312.reg2mem = alloca i1
  %cmp265.reg2mem = alloca i1
  %cmp250.reg2mem = alloca i1
  %cmp211.reg2mem = alloca i1
  %cmp159.reg2mem = alloca i1
  %cmp141.reg2mem = alloca i1
  %cmp110.reg2mem = alloca i1
  %cmp41.reg2mem = alloca i1
  %.reg2mem6896 = alloca i32
  %cmp6.reg2mem = alloca i1
  %cmp4.reg2mem = alloca i1
  %cmp1.reg2mem = alloca i1
  %.reg2mem6894 = alloca i32
  %.reg2mem = alloca i32
  %retval = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  %s = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 0, i32* %s, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32* %a, i32* %b, i32* %c, i32* %d, i32* %e, i32* %f)
  %0 = load i32, i32* %a, align 4
  store i32 %0, i32* %.reg2mem
  %1 = load i32, i32* %d, align 4
  store i32 %1, i32* %.reg2mem6894
  %switchVar = alloca i32
  store i32 502089682, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar6893 = load i32, i32* %switchVar
  switch i32 %switchVar6893, label %switchDefault [
    i32 502089682, label %first
    i32 -846008518, label %if.then
    i32 285286981, label %for.cond
    i32 -1681586230, label %originalBB
    i32 -1359023154, label %originalBBpart2
    i32 -1501814812, label %for.body
    i32 908468993, label %land.lhs.true
    i32 2067472260, label %originalBB2789
    i32 -772885668, label %originalBBpart22792
    i32 -340156928, label %lor.lhs.false
    i32 -1468506229, label %originalBB2794
    i32 2131177277, label %originalBBpart22798
    i32 -768025480, label %if.then7
    i32 -1917329703, label %if.else
    i32 -1680976764, label %if.end
    i32 -1977724284, label %originalBB2800
    i32 1998246417, label %originalBBpart22802
    i32 411172575, label %for.inc
    i32 -2060764543, label %for.end
    i32 830858713, label %if.else9
    i32 1916792881, label %if.end10
    i32 -761181637, label %land.lhs.true13
    i32 276918643, label %lor.lhs.false16
    i32 1237816551, label %if.then19
    i32 1260625367, label %if.then21
    i32 788545139, label %if.else25
    i32 -829146233, label %NodeBlock6861
    i32 1728830723, label %NodeBlock6859
    i32 1299420947, label %NodeBlock6857
    i32 -485158610, label %NodeBlock6855
    i32 1414373964, label %LeafBlock6853
    i32 764253001, label %NodeBlock6851
    i32 -1224139382, label %NodeBlock6849
    i32 1641396635, label %NodeBlock6847
    i32 -673067793, label %NodeBlock6845
    i32 -954768535, label %NodeBlock6843
    i32 -293444747, label %NodeBlock6841
    i32 -1289324165, label %NodeBlock
    i32 881172901, label %LeafBlock
    i32 -1417578039, label %sw.bb
    i32 -1858433418, label %if.then27
    i32 -880784375, label %originalBB2804
    i32 -1474794880, label %originalBBpart22833
    i32 608164620, label %if.end32
    i32 1487793971, label %if.then34
    i32 -1500686313, label %if.end40
    i32 -1810214989, label %originalBB2835
    i32 -1050796611, label %originalBBpart22837
    i32 -847440386, label %if.then42
    i32 -1058640212, label %if.end49
    i32 1387459827, label %if.then51
    i32 218966396, label %originalBB2839
    i32 -2145384124, label %originalBBpart22874
    i32 -943489832, label %if.end59
    i32 1793607680, label %if.then61
    i32 -1256130856, label %if.end70
    i32 1619610895, label %if.then72
    i32 519070542, label %if.end82
    i32 1931847168, label %if.then84
    i32 -7108793, label %originalBB2876
    i32 1475226495, label %originalBBpart22939
    i32 -1873849328, label %if.end95
    i32 -1609094808, label %if.then97
    i32 378990316, label %if.end109
    i32 351892026, label %originalBB2941
    i32 -1919146256, label %originalBBpart22943
    i32 -61268351, label %if.then111
    i32 -1678010904, label %if.end124
    i32 98743904, label %if.then126
    i32 -1257243138, label %if.end140
    i32 972888253, label %originalBB2945
    i32 718651246, label %originalBBpart22947
    i32 1002635162, label %if.then142
    i32 -857779, label %originalBB2949
    i32 -825426869, label %originalBBpart23043
    i32 -1984756998, label %if.end157
    i32 1530980620, label %sw.bb158
    i32 -1093415071, label %originalBB3045
    i32 -1042189614, label %originalBBpart23047
    i32 -1668318822, label %if.then160
    i32 786672036, label %if.end165
    i32 1137645112, label %if.then167
    i32 2060642846, label %if.end172
    i32 -1956723757, label %if.then174
    i32 1617385855, label %originalBB3049
    i32 -19109670, label %originalBBpart23077
    i32 -1350914501, label %if.end180
    i32 710614564, label %if.then182
    i32 -194869309, label %originalBB3079
    i32 -370547199, label %originalBBpart23113
    i32 -332200959, label %if.end189
    i32 -1525920213, label %if.then191
    i32 1366553482, label %if.end199
    i32 -1497074340, label %if.then201
    i32 867364564, label %if.end210
    i32 -1741146246, label %originalBB3115
    i32 143196828, label %originalBBpart23117
    i32 907239561, label %if.then212
    i32 -2021373524, label %if.end222
    i32 -952723312, label %if.then224
    i32 -1147352040, label %if.end235
    i32 47004207, label %if.then237
    i32 574473160, label %originalBB3119
    i32 -1757637276, label %originalBBpart23164
    i32 1485411678, label %if.end249
    i32 1276490516, label %originalBB3166
    i32 1448341749, label %originalBBpart23168
    i32 640912339, label %if.then251
    i32 -1630659476, label %if.end264
    i32 -1658459582, label %originalBB3170
    i32 1422629385, label %originalBBpart23172
    i32 -1992649065, label %if.then266
    i32 152029212, label %originalBB3174
    i32 433913187, label %originalBBpart23258
    i32 1924998353, label %if.end280
    i32 1498202359, label %originalBB3260
    i32 1604871057, label %originalBBpart23262
    i32 22701750, label %sw.bb281
    i32 959591069, label %if.then283
    i32 -651562586, label %originalBB3264
    i32 1320408938, label %originalBBpart23291
    i32 977005313, label %if.end289
    i32 -1502588719, label %if.then291
    i32 1164339277, label %originalBB3293
    i32 -1573168634, label %originalBBpart23312
    i32 1264184839, label %if.end296
    i32 1095343226, label %if.then298
    i32 -90822462, label %if.end303
    i32 1682545356, label %if.then305
    i32 -1169010800, label %if.end311
    i32 2136741556, label %originalBB3314
    i32 1353948588, label %originalBBpart23316
    i32 1374790435, label %if.then313
    i32 1466365369, label %if.end320
    i32 -1880223793, label %originalBB3318
    i32 1531607390, label %originalBBpart23320
    i32 -2054630802, label %if.then322
    i32 772631462, label %if.end330
    i32 -521441175, label %if.then332
    i32 -779166883, label %if.end341
    i32 -1267062670, label %if.then343
    i32 -177762098, label %if.end353
    i32 968465343, label %if.then355
    i32 -859919835, label %if.end366
    i32 -112024796, label %originalBB3322
    i32 2133249099, label %originalBBpart23324
    i32 1403501685, label %if.then368
    i32 -2072970079, label %if.end380
    i32 -1855556367, label %if.then382
    i32 -1276545128, label %originalBB3326
    i32 -818604217, label %originalBBpart23412
    i32 -2026654503, label %if.end395
    i32 332635580, label %sw.bb396
    i32 1636057078, label %if.then398
    i32 2137256912, label %if.end405
    i32 1117650677, label %if.then407
    i32 1484583645, label %if.end413
    i32 1566150423, label %if.then415
    i32 -72129415, label %if.end420
    i32 -1062605699, label %if.then422
    i32 2143913474, label %originalBB3414
    i32 1887472960, label %originalBBpart23445
    i32 -1238820231, label %if.end427
    i32 -513468109, label %if.then429
    i32 1363543197, label %originalBB3447
    i32 -1390985190, label %originalBBpart23485
    i32 653663952, label %if.end435
    i32 -795076932, label %if.then437
    i32 -2010769785, label %originalBB3487
    i32 699021632, label %originalBBpart23522
    i32 2109614246, label %if.end444
    i32 -1229429443, label %originalBB3524
    i32 -1990546308, label %originalBBpart23526
    i32 771241018, label %if.then446
    i32 1346979380, label %originalBB3528
    i32 1886578541, label %originalBBpart23579
    i32 725691792, label %if.end454
    i32 619247614, label %if.then456
    i32 -3159952, label %if.end465
    i32 -1742181281, label %if.then467
    i32 -1482242848, label %if.end477
    i32 835989535, label %if.then479
    i32 1206610636, label %if.end490
    i32 -917180129, label %if.then492
    i32 1732090312, label %if.end504
    i32 -1566423399, label %sw.bb505
    i32 -906418732, label %originalBB3581
    i32 1884882650, label %originalBBpart23583
    i32 -1840395905, label %if.then507
    i32 -1716534500, label %originalBB3585
    i32 947042943, label %originalBBpart23639
    i32 2135090252, label %if.end515
    i32 404971317, label %if.then517
    i32 -1753551876, label %if.end524
    i32 -1877324521, label %originalBB3641
    i32 1978422533, label %originalBBpart23643
    i32 835180683, label %if.then526
    i32 481432727, label %if.end532
    i32 -1523028844, label %if.then534
    i32 -1488897477, label %if.end539
    i32 1550994287, label %if.then541
    i32 1707756890, label %originalBB3645
    i32 658449549, label %originalBBpart23662
    i32 36262153, label %if.end546
    i32 691387355, label %originalBB3664
    i32 -1019202491, label %originalBBpart23666
    i32 -864004520, label %if.then548
    i32 1985659938, label %originalBB3668
    i32 30901507, label %originalBBpart23692
    i32 -1285400959, label %if.end554
    i32 1357368317, label %if.then556
    i32 -1574288010, label %originalBB3694
    i32 -850567280, label %originalBBpart23722
    i32 -460843698, label %if.end563
    i32 -1539941307, label %if.then565
    i32 1870506049, label %if.end573
    i32 573150750, label %if.then575
    i32 184368386, label %originalBB3724
    i32 1735736279, label %originalBBpart23782
    i32 -808876832, label %if.end584
    i32 2036326583, label %if.then586
    i32 -1858427631, label %if.end596
    i32 1234533991, label %originalBB3784
    i32 2145837875, label %originalBBpart23786
    i32 -139043621, label %if.then598
    i32 -1739788930, label %if.end609
    i32 852231519, label %originalBB3788
    i32 -1022362626, label %originalBBpart23790
    i32 1452140042, label %sw.bb610
    i32 -24718576, label %if.then612
    i32 -737028363, label %if.end621
    i32 29790145, label %originalBB3792
    i32 967610818, label %originalBBpart23794
    i32 -1185174502, label %if.then623
    i32 562142704, label %if.end631
    i32 202303184, label %originalBB3796
    i32 50212332, label %originalBBpart23798
    i32 -517893045, label %if.then633
    i32 -2065013622, label %originalBB3800
    i32 1955795530, label %originalBBpart23831
    i32 382329853, label %if.end640
    i32 -118794139, label %originalBB3833
    i32 1706390611, label %originalBBpart23835
    i32 102158839, label %if.then642
    i32 -1048379284, label %originalBB3837
    i32 1439729283, label %originalBBpart23864
    i32 253747920, label %if.end648
    i32 -1567136976, label %if.then650
    i32 -787743339, label %if.end655
    i32 1420048409, label %if.then657
    i32 -1384581137, label %if.end662
    i32 339533759, label %if.then664
    i32 373682855, label %if.end670
    i32 -930943, label %if.then672
    i32 -1291526328, label %originalBB3866
    i32 -1628684105, label %originalBBpart23894
    i32 247902714, label %if.end679
    i32 593589393, label %if.then681
    i32 -323851057, label %if.end689
    i32 161071224, label %if.then691
    i32 807544879, label %if.end700
    i32 1839415644, label %if.then702
    i32 958719031, label %if.end712
    i32 -1782648663, label %sw.bb713
    i32 1056162511, label %if.then715
    i32 -1101515354, label %if.end725
    i32 -373167167, label %originalBB3896
    i32 -770124642, label %originalBBpart23898
    i32 -83622834, label %if.then727
    i32 -645541258, label %if.end736
    i32 489475044, label %if.then738
    i32 -1100191477, label %if.end746
    i32 -1416472490, label %if.then748
    i32 -2022872968, label %if.end755
    i32 1492637184, label %if.then757
    i32 852812909, label %originalBB3900
    i32 -613780429, label %originalBBpart23928
    i32 -1947372146, label %if.end763
    i32 1206938351, label %if.then765
    i32 592583478, label %if.end770
    i32 75597041, label %if.then772
    i32 1253426922, label %originalBB3930
    i32 1971012511, label %originalBBpart23956
    i32 1610557737, label %if.end777
    i32 1895290671, label %originalBB3958
    i32 1087667194, label %originalBBpart23960
    i32 712594245, label %if.then779
    i32 543617598, label %originalBB3962
    i32 -1327778727, label %originalBBpart23987
    i32 1753098685, label %if.end785
    i32 -1534420451, label %if.then787
    i32 1114887190, label %originalBB3989
    i32 1332639686, label %originalBBpart24010
    i32 1055920915, label %if.end794
    i32 -1526295037, label %if.then796
    i32 941618472, label %originalBB4012
    i32 1278777382, label %originalBBpart24053
    i32 -798082785, label %if.end804
    i32 -323754390, label %originalBB4055
    i32 -1459693914, label %originalBBpart24057
    i32 85698763, label %if.then806
    i32 1840193528, label %originalBB4059
    i32 -356468165, label %originalBBpart24105
    i32 -1663608441, label %if.end815
    i32 -750691086, label %originalBB4107
    i32 -1263621802, label %originalBBpart24109
    i32 1324344726, label %sw.bb816
    i32 69609552, label %originalBB4111
    i32 -1992611226, label %originalBBpart24113
    i32 -2069367072, label %if.then818
    i32 -1951494637, label %if.end829
    i32 -1138869943, label %if.then831
    i32 2118293245, label %originalBB4115
    i32 -266249869, label %originalBBpart24170
    i32 -1937944285, label %if.end841
    i32 -786063490, label %if.then843
    i32 -1232154977, label %if.end852
    i32 1165548492, label %if.then854
    i32 -1625295113, label %if.end862
    i32 -990968315, label %if.then864
    i32 -176728860, label %if.end871
    i32 1494373214, label %if.then873
    i32 -1727184455, label %originalBB4172
    i32 2001437131, label %originalBBpart24199
    i32 55117593, label %if.end879
    i32 1104931507, label %if.then881
    i32 -1731019515, label %originalBB4201
    i32 1351783538, label %originalBBpart24225
    i32 650364974, label %if.end886
    i32 -1274684882, label %if.then888
    i32 -699030034, label %originalBB4227
    i32 1715621628, label %originalBBpart24250
    i32 1872030230, label %if.end893
    i32 379676678, label %if.then895
    i32 -474413486, label %originalBB4252
    i32 -305949566, label %originalBBpart24283
    i32 -2124458388, label %if.end901
    i32 -981056913, label %if.then903
    i32 1837493573, label %if.end910
    i32 1521976341, label %if.then912
    i32 956564447, label %if.end920
    i32 61390667, label %sw.bb921
    i32 -273081274, label %if.then923
    i32 1041809614, label %if.end935
    i32 -785674141, label %originalBB4285
    i32 1381383977, label %originalBBpart24287
    i32 -1201356534, label %if.then937
    i32 -1905633544, label %if.end948
    i32 1372445417, label %originalBB4289
    i32 181374990, label %originalBBpart24291
    i32 1517683573, label %if.then950
    i32 -879922751, label %if.end960
    i32 971372955, label %originalBB4293
    i32 -1973961536, label %originalBBpart24295
    i32 2007437626, label %if.then962
    i32 651365966, label %if.end971
    i32 152109436, label %if.then973
    i32 -502610160, label %if.end981
    i32 590395787, label %if.then983
    i32 1929450195, label %originalBB4297
    i32 -368250559, label %originalBBpart24342
    i32 -1685802684, label %if.end990
    i32 1156030919, label %if.then992
    i32 -483729218, label %if.end998
    i32 914857664, label %if.then1000
    i32 1045852028, label %originalBB4344
    i32 -54015433, label %originalBBpart24357
    i32 -1589988128, label %if.end1005
    i32 1336064363, label %if.then1007
    i32 685067489, label %if.end1012
    i32 1120408221, label %originalBB4359
    i32 -560215487, label %originalBBpart24361
    i32 -901296656, label %if.then1014
    i32 -1223045550, label %if.end1020
    i32 132388769, label %if.then1022
    i32 418895697, label %if.end1029
    i32 1902806182, label %sw.bb1030
    i32 335749813, label %originalBB4363
    i32 213127445, label %originalBBpart24365
    i32 -742237687, label %if.then1032
    i32 877115691, label %if.end1045
    i32 1916912482, label %if.then1047
    i32 -1713466349, label %if.end1059
    i32 608346197, label %if.then1061
    i32 1424277960, label %if.end1072
    i32 1283957890, label %if.then1074
    i32 646055962, label %if.end1084
    i32 100221896, label %originalBB4367
    i32 -1143431946, label %originalBBpart24369
    i32 846596771, label %if.then1086
    i32 63331586, label %originalBB4371
    i32 40616819, label %originalBBpart24427
    i32 -899956219, label %if.end1095
    i32 -1840347845, label %originalBB4429
    i32 -1946416205, label %originalBBpart24431
    i32 -744487518, label %if.then1097
    i32 -1499076787, label %if.end1105
    i32 689631353, label %if.then1107
    i32 1301328479, label %if.end1114
    i32 -1467520537, label %if.then1116
    i32 -1979794549, label %originalBB4433
    i32 -1880772704, label %originalBBpart24474
    i32 689481453, label %if.end1122
    i32 -158835285, label %if.then1124
    i32 -1447745402, label %originalBB4476
    i32 -1534248211, label %originalBBpart24498
    i32 -1124477033, label %if.end1129
    i32 -1907985965, label %if.then1131
    i32 -208746010, label %if.end1136
    i32 -1988594481, label %if.then1138
    i32 -1410127414, label %if.end1144
    i32 2139689484, label %originalBB4500
    i32 1799127503, label %originalBBpart24502
    i32 806509563, label %sw.bb1145
    i32 -520639396, label %if.then1147
    i32 -181030996, label %if.end1161
    i32 1427037174, label %originalBB4504
    i32 776960909, label %originalBBpart24506
    i32 -155863520, label %if.then1163
    i32 180630612, label %if.end1176
    i32 -2137227400, label %if.then1178
    i32 -1674484978, label %if.end1190
    i32 -903091941, label %if.then1192
    i32 -1988307371, label %if.end1203
    i32 -816128580, label %originalBB4508
    i32 -2017285612, label %originalBBpart24510
    i32 1597634273, label %if.then1205
    i32 -2139882355, label %if.end1215
    i32 -976316645, label %if.then1217
    i32 -128420658, label %if.end1226
    i32 -1359728611, label %originalBB4512
    i32 -109923217, label %originalBBpart24514
    i32 -562288633, label %if.then1228
    i32 1370841615, label %if.end1236
    i32 -709497430, label %if.then1238
    i32 -66059447, label %originalBB4516
    i32 1854881013, label %originalBBpart24539
    i32 71398222, label %if.end1245
    i32 2039633933, label %if.then1247
    i32 71353727, label %if.end1253
    i32 399058878, label %if.then1255
    i32 -290410503, label %if.end1260
    i32 -1960180750, label %if.then1262
    i32 708385301, label %originalBB4541
    i32 818974379, label %originalBBpart24560
    i32 -1220936343, label %if.end1267
    i32 1712451928, label %sw.bb1268
    i32 -1486755139, label %if.then1270
    i32 1269814477, label %if.end1285
    i32 -1708278416, label %if.then1287
    i32 1817065755, label %if.end1301
    i32 1161525947, label %if.then1303
    i32 1449193042, label %if.end1316
    i32 -1486097728, label %if.then1318
    i32 941546688, label %originalBB4562
    i32 1593358251, label %originalBBpart24622
    i32 1026361724, label %if.end1330
    i32 -474843946, label %originalBB4624
    i32 413330505, label %originalBBpart24626
    i32 755660295, label %if.then1332
    i32 1374359433, label %originalBB4628
    i32 -1615516962, label %originalBBpart24678
    i32 -418858071, label %if.end1343
    i32 976125186, label %if.then1345
    i32 -2126104655, label %if.end1355
    i32 554845953, label %if.then1357
    i32 2060503141, label %if.end1366
    i32 1987914497, label %originalBB4680
    i32 1157029432, label %originalBBpart24682
    i32 888621392, label %if.then1368
    i32 -1467405618, label %if.end1376
    i32 2015750411, label %if.then1378
    i32 385575181, label %originalBB4684
    i32 -1478290082, label %originalBBpart24710
    i32 -1717157477, label %if.end1385
    i32 705420315, label %if.then1387
    i32 -1409223167, label %if.end1393
    i32 -636514357, label %originalBB4712
    i32 1187852314, label %originalBBpart24714
    i32 -812286201, label %if.then1395
    i32 721023479, label %if.end1400
    i32 1394101347, label %originalBB4716
    i32 347994632, label %originalBBpart24718
    i32 1583273717, label %NewDefault
    i32 -785424163, label %sw.epilog
    i32 -1405411124, label %if.end1401
    i32 -2015631116, label %if.else1402
    i32 819842834, label %originalBB4720
    i32 -342738932, label %originalBBpart24722
    i32 57212631, label %if.then1404
    i32 1763763121, label %originalBB4724
    i32 405465085, label %originalBBpart24730
    i32 654507149, label %if.else1408
    i32 -1766639698, label %originalBB4732
    i32 -1839057728, label %originalBBpart24734
    i32 1707545394, label %NodeBlock6868
    i32 -780776963, label %LeafBlock6866
    i32 -1303285259, label %LeafBlock6864
    i32 1296018018, label %sw.bb1409
    i32 -944567892, label %originalBB4736
    i32 -542112038, label %originalBBpart24738
    i32 440863436, label %if.then1411
    i32 -1873474434, label %if.end1416
    i32 -1398274930, label %if.then1418
    i32 -1172380964, label %if.end1424
    i32 -1007036407, label %originalBB4740
    i32 2110837480, label %originalBBpart24742
    i32 -2128672270, label %if.then1426
    i32 -901942765, label %if.end1433
    i32 -305474100, label %originalBB4744
    i32 -1886960965, label %originalBBpart24746
    i32 -1107402612, label %if.then1435
    i32 -1428856379, label %originalBB4748
    i32 445888031, label %originalBBpart24797
    i32 760283244, label %if.end1443
    i32 -1192683997, label %if.then1445
    i32 419540654, label %if.end1454
    i32 -962068092, label %if.then1456
    i32 1435978151, label %originalBB4799
    i32 -1593560158, label %originalBBpart24838
    i32 442402346, label %if.end1466
    i32 2132074, label %if.then1468
    i32 -1960814655, label %if.end1479
    i32 854729756, label %originalBB4840
    i32 1476561836, label %originalBBpart24842
    i32 71958313, label %if.then1481
    i32 -768428719, label %if.end1493
    i32 10232142, label %originalBB4844
    i32 -1956200600, label %originalBBpart24846
    i32 -1194518303, label %if.then1495
    i32 -1196559913, label %originalBB4848
    i32 -1606015573, label %originalBBpart24940
    i32 2098988144, label %if.end1508
    i32 79189920, label %if.then1510
    i32 13428551, label %if.end1524
    i32 -546271062, label %if.then1526
    i32 -751032583, label %if.end1541
    i32 1911510721, label %sw.bb1542
    i32 2119475869, label %if.then1544
    i32 1303749854, label %if.end1549
    i32 404273808, label %originalBB4942
    i32 -1655808879, label %originalBBpart24944
    i32 440011884, label %if.then1551
    i32 -563751696, label %if.end1556
    i32 -754310239, label %if.then1558
    i32 -57547955, label %if.end1564
    i32 -271037360, label %if.then1566
    i32 -1046034477, label %if.end1573
    i32 1145358166, label %if.then1575
    i32 -1449290983, label %if.end1583
    i32 -2003701935, label %if.then1585
    i32 1410305280, label %if.end1594
    i32 1116376230, label %if.then1596
    i32 -1303002025, label %if.end1606
    i32 1482865559, label %originalBB4946
    i32 -509140694, label %originalBBpart24948
    i32 -1486768833, label %if.then1608
    i32 -1945158198, label %if.end1619
    i32 1040504170, label %if.then1621
    i32 -981671880, label %if.end1633
    i32 -138684447, label %if.then1635
    i32 -779254767, label %originalBB4950
    i32 1310276695, label %originalBBpart25014
    i32 -678986069, label %if.end1648
    i32 -1408664534, label %if.then1650
    i32 1249300639, label %originalBB5016
    i32 -1120628285, label %originalBBpart25110
    i32 272048524, label %if.end1664
    i32 -123525773, label %NewDefault6863
    i32 -876928443, label %sw.epilog1665
    i32 -993345526, label %originalBB5112
    i32 -1494107497, label %originalBBpart25114
    i32 444623474, label %if.end1666
    i32 -688521829, label %if.end1667
    i32 -2069827530, label %NodeBlock6891
    i32 1324787062, label %NodeBlock6889
    i32 -1931138645, label %NodeBlock6887
    i32 1535109594, label %NodeBlock6885
    i32 1666475180, label %LeafBlock6883
    i32 2086112542, label %NodeBlock6881
    i32 -1161454552, label %NodeBlock6879
    i32 -1591171013, label %NodeBlock6877
    i32 1571630213, label %NodeBlock6875
    i32 -989639032, label %NodeBlock6873
    i32 -1190838530, label %LeafBlock6871
    i32 -728596079, label %sw.bb1668
    i32 -1446182639, label %originalBB5116
    i32 2122188930, label %originalBBpart25118
    i32 1729288895, label %if.then1670
    i32 316428276, label %originalBB5120
    i32 -531897450, label %originalBBpart25136
    i32 -1588963597, label %if.end1676
    i32 1706609643, label %if.then1678
    i32 946862043, label %if.end1683
    i32 546000699, label %if.then1685
    i32 2031738390, label %originalBB5138
    i32 1226684220, label %originalBBpart25167
    i32 -98947147, label %if.end1690
    i32 1345232318, label %originalBB5169
    i32 853275113, label %originalBBpart25171
    i32 -1601012499, label %if.then1692
    i32 -1154659405, label %originalBB5173
    i32 1983397786, label %originalBBpart25199
    i32 -1636721687, label %if.end1698
    i32 166915825, label %originalBB5201
    i32 109002459, label %originalBBpart25203
    i32 254000277, label %if.then1700
    i32 1893590690, label %if.end1707
    i32 -602691488, label %if.then1709
    i32 1818302017, label %originalBB5205
    i32 937226816, label %originalBBpart25267
    i32 -1132598256, label %if.end1717
    i32 347591410, label %originalBB5269
    i32 -312918642, label %originalBBpart25271
    i32 1953711049, label %if.then1719
    i32 -142270214, label %if.end1728
    i32 -812038003, label %if.then1730
    i32 1561779591, label %if.end1740
    i32 65253300, label %if.then1742
    i32 178605730, label %if.end1753
    i32 46466604, label %if.then1755
    i32 1550970550, label %originalBB5273
    i32 1099206876, label %originalBBpart25338
    i32 -1784160701, label %if.end1767
    i32 -817751821, label %if.then1769
    i32 744122684, label %if.end1782
    i32 -1462078161, label %sw.bb1783
    i32 162786023, label %originalBB5340
    i32 1997847592, label %originalBBpart25342
    i32 1825851786, label %if.then1785
    i32 969817886, label %originalBB5344
    i32 1582712654, label %originalBBpart25380
    i32 1910395940, label %if.end1792
    i32 -2012022756, label %if.then1794
    i32 1708541113, label %if.end1800
    i32 -1004668968, label %if.then1802
    i32 -1079375611, label %originalBB5382
    i32 -1639839683, label %originalBBpart25417
    i32 -585680668, label %if.end1807
    i32 -1744254290, label %if.then1809
    i32 1382144736, label %if.end1814
    i32 760733225, label %if.then1816
    i32 207489504, label %originalBB5419
    i32 -1343366322, label %originalBBpart25444
    i32 1956443335, label %if.end1822
    i32 389608655, label %if.then1824
    i32 -725902932, label %originalBB5446
    i32 -314969373, label %originalBBpart25478
    i32 -750255157, label %if.end1831
    i32 -1618559572, label %originalBB5480
    i32 375226331, label %originalBBpart25482
    i32 -1410174687, label %if.then1833
    i32 1893835353, label %originalBB5484
    i32 -2125679400, label %originalBBpart25524
    i32 795036839, label %if.end1841
    i32 653057325, label %originalBB5526
    i32 427480686, label %originalBBpart25528
    i32 -1209057024, label %if.then1843
    i32 767216833, label %originalBB5530
    i32 -2130966473, label %originalBBpart25582
    i32 -939581750, label %if.end1852
    i32 288498387, label %originalBB5584
    i32 -1654974375, label %originalBBpart25586
    i32 -976616, label %if.then1854
    i32 1851067610, label %if.end1864
    i32 2061773633, label %if.then1866
    i32 -984199703, label %if.end1877
    i32 -632235344, label %originalBB5588
    i32 1461720723, label %originalBBpart25590
    i32 -869977988, label %if.then1879
    i32 2109037055, label %if.end1891
    i32 -1389971942, label %originalBB5592
    i32 -1444623147, label %originalBBpart25594
    i32 156029240, label %sw.bb1892
    i32 411833382, label %originalBB5596
    i32 52255234, label %originalBBpart25598
    i32 -1596971186, label %if.then1894
    i32 171615066, label %if.end1902
    i32 -988009939, label %if.then1904
    i32 -253566946, label %if.end1911
    i32 1396744339, label %if.then1913
    i32 1921999730, label %originalBB5600
    i32 -1934734454, label %originalBBpart25632
    i32 -1912170630, label %if.end1919
    i32 -1432799176, label %originalBB5634
    i32 1566029743, label %originalBBpart25636
    i32 2122553265, label %if.then1921
    i32 1332338475, label %if.end1926
    i32 1117710171, label %if.then1928
    i32 967543038, label %if.end1933
    i32 1355298301, label %if.then1935
    i32 -1784243399, label %if.end1941
    i32 -6283393, label %if.then1943
    i32 -911836140, label %if.end1950
    i32 1255466096, label %if.then1952
    i32 -1217224891, label %if.end1960
    i32 -239076622, label %originalBB5638
    i32 1102782, label %originalBBpart25640
    i32 1350997646, label %if.then1962
    i32 907775263, label %originalBB5642
    i32 1157445846, label %originalBBpart25706
    i32 1702950263, label %if.end1971
    i32 -729441587, label %if.then1973
    i32 -1113920637, label %if.end1983
    i32 -544012550, label %if.then1985
    i32 1218521763, label %if.end1996
    i32 -1435247104, label %sw.bb1997
    i32 -1779626978, label %if.then1999
    i32 -1433400858, label %if.end2008
    i32 797902299, label %originalBB5708
    i32 -505294135, label %originalBBpart25710
    i32 844588262, label %if.then2010
    i32 436574504, label %if.end2018
    i32 -1811133707, label %if.then2020
    i32 -855898633, label %if.end2027
    i32 -1788668448, label %if.then2029
    i32 1740050033, label %if.end2035
    i32 315545875, label %if.then2037
    i32 -440054357, label %originalBB5712
    i32 -1379990939, label %originalBBpart25720
    i32 -1359286686, label %if.end2042
    i32 -1595913419, label %originalBB5722
    i32 1892738481, label %originalBBpart25724
    i32 -1703887359, label %if.then2044
    i32 355931655, label %if.end2049
    i32 451856692, label %if.then2051
    i32 1953581287, label %originalBB5726
    i32 1218420443, label %originalBBpart25759
    i32 -665403818, label %if.end2057
    i32 -948082335, label %if.then2059
    i32 1942298622, label %if.end2066
    i32 387921657, label %originalBB5761
    i32 -1657200862, label %originalBBpart25763
    i32 1207670955, label %if.then2068
    i32 2041352260, label %if.end2076
    i32 609328423, label %originalBB5765
    i32 -785628950, label %originalBBpart25767
    i32 -1247282483, label %if.then2078
    i32 1325271283, label %originalBB5769
    i32 -448351182, label %originalBBpart25807
    i32 32654993, label %if.end2087
    i32 -1833791035, label %originalBB5809
    i32 2109618678, label %originalBBpart25811
    i32 2106055629, label %if.then2089
    i32 -1041769420, label %originalBB5813
    i32 846328805, label %originalBBpart25881
    i32 -2017440696, label %if.end2099
    i32 391815493, label %sw.bb2100
    i32 -462561746, label %if.then2102
    i32 -1027535221, label %originalBB5883
    i32 245987728, label %originalBBpart25926
    i32 -315041583, label %if.end2112
    i32 1060332048, label %originalBB5928
    i32 -167601875, label %originalBBpart25930
    i32 -618684229, label %if.then2114
    i32 -766874844, label %if.end2123
    i32 1481835629, label %if.then2125
    i32 462254865, label %if.end2133
    i32 -1066502706, label %if.then2135
    i32 1434164456, label %originalBB5932
    i32 -536152326, label %originalBBpart25974
    i32 1361431507, label %if.end2142
    i32 -388403566, label %if.then2144
    i32 -544681885, label %originalBB5976
    i32 116258029, label %originalBBpart26002
    i32 438167056, label %if.end2150
    i32 787375962, label %if.then2152
    i32 -1107273224, label %originalBB6004
    i32 -1932090256, label %originalBBpart26035
    i32 -1251000150, label %if.end2157
    i32 1346244296, label %if.then2159
    i32 1529332866, label %originalBB6037
    i32 -593650087, label %originalBBpart26066
    i32 -2082997454, label %if.end2164
    i32 840263231, label %originalBB6068
    i32 75588563, label %originalBBpart26070
    i32 587655488, label %if.then2166
    i32 1350273157, label %originalBB6072
    i32 -1709551141, label %originalBBpart26105
    i32 369552733, label %if.end2172
    i32 455619043, label %originalBB6107
    i32 501835835, label %originalBBpart26109
    i32 -1090295075, label %if.then2174
    i32 1364631198, label %if.end2181
    i32 -1772493621, label %if.then2183
    i32 2085181241, label %originalBB6111
    i32 51155560, label %originalBBpart26179
    i32 36232525, label %if.end2191
    i32 -956545321, label %if.then2193
    i32 -973402796, label %if.end2202
    i32 -1901243995, label %sw.bb2203
    i32 -446167404, label %if.then2205
    i32 -305275816, label %originalBB6181
    i32 -145825925, label %originalBBpart26233
    i32 1735125875, label %if.end2216
    i32 1686471428, label %if.then2218
    i32 586540446, label %if.end2228
    i32 2095728487, label %originalBB6235
    i32 904531211, label %originalBBpart26237
    i32 273067509, label %if.then2230
    i32 -378535378, label %if.end2239
    i32 649971785, label %if.then2241
    i32 -677270201, label %originalBB6239
    i32 -1604694975, label %originalBBpart26288
    i32 690549741, label %if.end2249
    i32 1504378126, label %if.then2251
    i32 2043092796, label %if.end2258
    i32 2061015294, label %originalBB6290
    i32 -1910876433, label %originalBBpart26292
    i32 -865884482, label %if.then2260
    i32 1273002432, label %if.end2266
    i32 -1457616969, label %originalBB6294
    i32 1742239151, label %originalBBpart26296
    i32 -750253192, label %if.then2268
    i32 -1769373257, label %originalBB6298
    i32 2119098433, label %originalBBpart26315
    i32 283554169, label %if.end2273
    i32 245420293, label %if.then2275
    i32 -1924352367, label %if.end2280
    i32 1133938866, label %if.then2282
    i32 1729010585, label %if.end2288
    i32 -916210600, label %if.then2290
    i32 1688751975, label %if.end2297
    i32 214321737, label %originalBB6317
    i32 -516816391, label %originalBBpart26319
    i32 -168152812, label %if.then2299
    i32 654866151, label %originalBB6321
    i32 -1601666764, label %originalBBpart26349
    i32 -1013753951, label %if.end2307
    i32 -751300785, label %originalBB6351
    i32 -739864097, label %originalBBpart26353
    i32 905976988, label %sw.bb2308
    i32 -1265960314, label %if.then2310
    i32 1275375080, label %if.end2322
    i32 363140183, label %if.then2324
    i32 1169786462, label %if.end2335
    i32 -116259428, label %if.then2337
    i32 -205462107, label %if.end2347
    i32 256238299, label %if.then2349
    i32 -1670244154, label %if.end2358
    i32 34770917, label %if.then2360
    i32 2052074664, label %if.end2368
    i32 -1830464893, label %if.then2370
    i32 -908154801, label %if.end2377
    i32 -1253580853, label %if.then2379
    i32 1453567913, label %if.end2385
    i32 160945801, label %if.then2387
    i32 -1049462504, label %if.end2392
    i32 -1830869030, label %originalBB6355
    i32 -2023816808, label %originalBBpart26357
    i32 -1575736524, label %if.then2394
    i32 186335915, label %if.end2399
    i32 -210724751, label %originalBB6359
    i32 -93377213, label %originalBBpart26361
    i32 1033350440, label %if.then2401
    i32 247060730, label %originalBB6363
    i32 -297175081, label %originalBBpart26385
    i32 -663525852, label %if.end2407
    i32 1571325707, label %originalBB6387
    i32 1932431944, label %originalBBpart26389
    i32 -1408875690, label %if.then2409
    i32 -1425410747, label %originalBB6391
    i32 324895591, label %originalBBpart26425
    i32 -1684750804, label %if.end2416
    i32 18473160, label %sw.bb2417
    i32 1620993186, label %if.then2419
    i32 -2001560270, label %originalBB6427
    i32 1784094859, label %originalBBpart26506
    i32 1761003391, label %if.end2432
    i32 -1827431176, label %if.then2434
    i32 997453074, label %originalBB6508
    i32 -719316165, label %originalBBpart26580
    i32 -211281356, label %if.end2446
    i32 -1316021374, label %if.then2448
    i32 -281598752, label %if.end2459
    i32 1273421447, label %originalBB6582
    i32 799059728, label %originalBBpart26584
    i32 -1044112588, label %if.then2461
    i32 -1160201841, label %if.end2471
    i32 43256238, label %if.then2473
    i32 1521618006, label %if.end2482
    i32 -415717722, label %if.then2484
    i32 -1969202767, label %if.end2492
    i32 691811449, label %if.then2494
    i32 1786581484, label %originalBB6586
    i32 1123435076, label %originalBBpart26625
    i32 879164899, label %if.end2501
    i32 -1785441373, label %if.then2503
    i32 -1088548233, label %if.end2509
    i32 863733790, label %if.then2511
    i32 2064062062, label %originalBB6627
    i32 2044700609, label %originalBBpart26657
    i32 1834404740, label %if.end2516
    i32 575279727, label %if.then2518
    i32 1562739595, label %if.end2523
    i32 -1029749679, label %originalBB6659
    i32 -792045782, label %originalBBpart26661
    i32 -432020370, label %if.then2525
    i32 676521075, label %if.end2531
    i32 1639123074, label %sw.bb2532
    i32 1946879307, label %if.then2534
    i32 1936420001, label %if.end2548
    i32 216443463, label %if.then2550
    i32 -1865959958, label %if.end2563
    i32 1478078415, label %if.then2565
    i32 1748223312, label %if.end2577
    i32 -1192504109, label %if.then2579
    i32 -1052197482, label %originalBB6663
    i32 -1388332985, label %originalBBpart26727
    i32 -1926882295, label %if.end2590
    i32 1292896090, label %if.then2592
    i32 -2074106340, label %originalBB6729
    i32 -953796048, label %originalBBpart26774
    i32 -1280762305, label %if.end2602
    i32 -562538480, label %if.then2604
    i32 -1117482817, label %if.end2613
    i32 -309912575, label %if.then2615
    i32 -623346607, label %if.end2623
    i32 2024989397, label %if.then2625
    i32 1189061334, label %if.end2632
    i32 -2142999047, label %if.then2634
    i32 -567366679, label %if.end2640
    i32 676268525, label %if.then2642
    i32 1675134789, label %if.end2647
    i32 691608137, label %if.then2649
    i32 1229922192, label %if.end2654
    i32 -315141309, label %sw.bb2655
    i32 735805603, label %originalBB6776
    i32 -1310224616, label %originalBBpart26778
    i32 1276926935, label %if.then2657
    i32 -1096905154, label %if.end2672
    i32 -1496634094, label %if.then2674
    i32 450855263, label %if.end2688
    i32 -1164880954, label %if.then2690
    i32 -1885698739, label %if.end2703
    i32 -1004105133, label %if.then2705
    i32 -1858500925, label %if.end2717
    i32 -1313796600, label %if.then2719
    i32 624305601, label %if.end2730
    i32 584069336, label %originalBB6780
    i32 1526480986, label %originalBBpart26782
    i32 -1099431487, label %if.then2732
    i32 1509182448, label %if.end2742
    i32 -1873808302, label %if.then2744
    i32 484955065, label %if.end2753
    i32 -1448427410, label %if.then2755
    i32 -773330413, label %originalBB6784
    i32 1443138227, label %originalBBpart26835
    i32 1172766663, label %if.end2763
    i32 -1826121561, label %originalBB6837
    i32 374975646, label %originalBBpart26839
    i32 -1765840417, label %if.then2765
    i32 -1983442199, label %if.end2772
    i32 -1346381741, label %if.then2774
    i32 1709434634, label %if.end2780
    i32 322017214, label %if.then2782
    i32 -1131236830, label %if.end2787
    i32 -381034073, label %NewDefault6870
    i32 476738164, label %sw.epilog2788
    i32 976653493, label %originalBBalteredBB
    i32 1978941284, label %originalBB2789alteredBB
    i32 1461771045, label %originalBB2794alteredBB
    i32 333311316, label %originalBB2800alteredBB
    i32 2056147121, label %originalBB2804alteredBB
    i32 974788845, label %originalBB2835alteredBB
    i32 -625503400, label %originalBB2839alteredBB
    i32 165996935, label %originalBB2876alteredBB
    i32 -1196437898, label %originalBB2941alteredBB
    i32 959932487, label %originalBB2945alteredBB
    i32 341909704, label %originalBB2949alteredBB
    i32 2049496999, label %originalBB3045alteredBB
    i32 1530182454, label %originalBB3049alteredBB
    i32 -1353158340, label %originalBB3079alteredBB
    i32 -1187320961, label %originalBB3115alteredBB
    i32 1815897245, label %originalBB3119alteredBB
    i32 465290492, label %originalBB3166alteredBB
    i32 -1199746569, label %originalBB3170alteredBB
    i32 1337650707, label %originalBB3174alteredBB
    i32 1082313531, label %originalBB3260alteredBB
    i32 -1444114251, label %originalBB3264alteredBB
    i32 1932949694, label %originalBB3293alteredBB
    i32 1247750002, label %originalBB3314alteredBB
    i32 2040866360, label %originalBB3318alteredBB
    i32 -1393018707, label %originalBB3322alteredBB
    i32 1973581449, label %originalBB3326alteredBB
    i32 97640792, label %originalBB3414alteredBB
    i32 547503991, label %originalBB3447alteredBB
    i32 -433852817, label %originalBB3487alteredBB
    i32 1905137289, label %originalBB3524alteredBB
    i32 1012333125, label %originalBB3528alteredBB
    i32 887602159, label %originalBB3581alteredBB
    i32 434131926, label %originalBB3585alteredBB
    i32 1075951145, label %originalBB3641alteredBB
    i32 -261645660, label %originalBB3645alteredBB
    i32 2085962866, label %originalBB3664alteredBB
    i32 -340085028, label %originalBB3668alteredBB
    i32 1343408433, label %originalBB3694alteredBB
    i32 -926074727, label %originalBB3724alteredBB
    i32 -199409575, label %originalBB3784alteredBB
    i32 800444727, label %originalBB3788alteredBB
    i32 146952519, label %originalBB3792alteredBB
    i32 -1877496877, label %originalBB3796alteredBB
    i32 100338018, label %originalBB3800alteredBB
    i32 1976932066, label %originalBB3833alteredBB
    i32 640492829, label %originalBB3837alteredBB
    i32 -125769651, label %originalBB3866alteredBB
    i32 -658361646, label %originalBB3896alteredBB
    i32 -202220326, label %originalBB3900alteredBB
    i32 -302591151, label %originalBB3930alteredBB
    i32 1955409408, label %originalBB3958alteredBB
    i32 872162588, label %originalBB3962alteredBB
    i32 1950501327, label %originalBB3989alteredBB
    i32 -1846841175, label %originalBB4012alteredBB
    i32 665402074, label %originalBB4055alteredBB
    i32 -1040129541, label %originalBB4059alteredBB
    i32 -769301968, label %originalBB4107alteredBB
    i32 336335102, label %originalBB4111alteredBB
    i32 1158814341, label %originalBB4115alteredBB
    i32 -694038485, label %originalBB4172alteredBB
    i32 830037999, label %originalBB4201alteredBB
    i32 101230571, label %originalBB4227alteredBB
    i32 432950287, label %originalBB4252alteredBB
    i32 -1587670273, label %originalBB4285alteredBB
    i32 866786068, label %originalBB4289alteredBB
    i32 779816971, label %originalBB4293alteredBB
    i32 74005912, label %originalBB4297alteredBB
    i32 1230792233, label %originalBB4344alteredBB
    i32 1804857, label %originalBB4359alteredBB
    i32 705016799, label %originalBB4363alteredBB
    i32 -2126545518, label %originalBB4367alteredBB
    i32 1818834604, label %originalBB4371alteredBB
    i32 -1995338979, label %originalBB4429alteredBB
    i32 1526882932, label %originalBB4433alteredBB
    i32 -360400044, label %originalBB4476alteredBB
    i32 -1551403667, label %originalBB4500alteredBB
    i32 851526482, label %originalBB4504alteredBB
    i32 277361419, label %originalBB4508alteredBB
    i32 -329561592, label %originalBB4512alteredBB
    i32 331842433, label %originalBB4516alteredBB
    i32 561079042, label %originalBB4541alteredBB
    i32 -1434286399, label %originalBB4562alteredBB
    i32 722109195, label %originalBB4624alteredBB
    i32 2138579688, label %originalBB4628alteredBB
    i32 927045883, label %originalBB4680alteredBB
    i32 -1316084725, label %originalBB4684alteredBB
    i32 545666038, label %originalBB4712alteredBB
    i32 -599330334, label %originalBB4716alteredBB
    i32 1604265803, label %originalBB4720alteredBB
    i32 -2070727879, label %originalBB4724alteredBB
    i32 -1140215933, label %originalBB4732alteredBB
    i32 -426330939, label %originalBB4736alteredBB
    i32 912965101, label %originalBB4740alteredBB
    i32 1297444975, label %originalBB4744alteredBB
    i32 -1088009119, label %originalBB4748alteredBB
    i32 1751089366, label %originalBB4799alteredBB
    i32 -1110387914, label %originalBB4840alteredBB
    i32 469593917, label %originalBB4844alteredBB
    i32 1402428289, label %originalBB4848alteredBB
    i32 -476778337, label %originalBB4942alteredBB
    i32 -83411089, label %originalBB4946alteredBB
    i32 52245038, label %originalBB4950alteredBB
    i32 1997273185, label %originalBB5016alteredBB
    i32 298926136, label %originalBB5112alteredBB
    i32 108750737, label %originalBB5116alteredBB
    i32 861322175, label %originalBB5120alteredBB
    i32 1361048970, label %originalBB5138alteredBB
    i32 -1426066150, label %originalBB5169alteredBB
    i32 -272096250, label %originalBB5173alteredBB
    i32 -1450532508, label %originalBB5201alteredBB
    i32 -1619779320, label %originalBB5205alteredBB
    i32 -737541195, label %originalBB5269alteredBB
    i32 -1991884068, label %originalBB5273alteredBB
    i32 1458620988, label %originalBB5340alteredBB
    i32 968306894, label %originalBB5344alteredBB
    i32 758179464, label %originalBB5382alteredBB
    i32 -640632059, label %originalBB5419alteredBB
    i32 867903188, label %originalBB5446alteredBB
    i32 -2120530509, label %originalBB5480alteredBB
    i32 69715758, label %originalBB5484alteredBB
    i32 -1262945385, label %originalBB5526alteredBB
    i32 -882901538, label %originalBB5530alteredBB
    i32 -480544698, label %originalBB5584alteredBB
    i32 1765964532, label %originalBB5588alteredBB
    i32 -1633884581, label %originalBB5592alteredBB
    i32 413144997, label %originalBB5596alteredBB
    i32 -1296954311, label %originalBB5600alteredBB
    i32 -1331915677, label %originalBB5634alteredBB
    i32 1859753828, label %originalBB5638alteredBB
    i32 -1215675492, label %originalBB5642alteredBB
    i32 -1994352963, label %originalBB5708alteredBB
    i32 -186986560, label %originalBB5712alteredBB
    i32 -188451877, label %originalBB5722alteredBB
    i32 -1851991474, label %originalBB5726alteredBB
    i32 1459525808, label %originalBB5761alteredBB
    i32 -953034572, label %originalBB5765alteredBB
    i32 1322541535, label %originalBB5769alteredBB
    i32 199468500, label %originalBB5809alteredBB
    i32 1400680407, label %originalBB5813alteredBB
    i32 -394362075, label %originalBB5883alteredBB
    i32 -1162984651, label %originalBB5928alteredBB
    i32 -1958125617, label %originalBB5932alteredBB
    i32 -404797119, label %originalBB5976alteredBB
    i32 862151527, label %originalBB6004alteredBB
    i32 364986581, label %originalBB6037alteredBB
    i32 722310558, label %originalBB6068alteredBB
    i32 -172121246, label %originalBB6072alteredBB
    i32 1798764166, label %originalBB6107alteredBB
    i32 520177601, label %originalBB6111alteredBB
    i32 952151903, label %originalBB6181alteredBB
    i32 -508712304, label %originalBB6235alteredBB
    i32 1488481663, label %originalBB6239alteredBB
    i32 1267679392, label %originalBB6290alteredBB
    i32 -1441253651, label %originalBB6294alteredBB
    i32 -1941594624, label %originalBB6298alteredBB
    i32 1389655160, label %originalBB6317alteredBB
    i32 1912500025, label %originalBB6321alteredBB
    i32 -1281057075, label %originalBB6351alteredBB
    i32 -963320905, label %originalBB6355alteredBB
    i32 -878443146, label %originalBB6359alteredBB
    i32 1186572073, label %originalBB6363alteredBB
    i32 1861418974, label %originalBB6387alteredBB
    i32 1123202603, label %originalBB6391alteredBB
    i32 -496697900, label %originalBB6427alteredBB
    i32 1122751982, label %originalBB6508alteredBB
    i32 -1527641430, label %originalBB6582alteredBB
    i32 1866791886, label %originalBB6586alteredBB
    i32 -1316351742, label %originalBB6627alteredBB
    i32 249291045, label %originalBB6659alteredBB
    i32 1295110105, label %originalBB6663alteredBB
    i32 2082634842, label %originalBB6729alteredBB
    i32 -382133370, label %originalBB6776alteredBB
    i32 1966549015, label %originalBB6780alteredBB
    i32 -213063834, label %originalBB6784alteredBB
    i32 1507744972, label %originalBB6837alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i32, i32* %.reg2mem
  %.reload6895 = load volatile i32, i32* %.reg2mem6894
  %cmp = icmp ne i32 %.reload, %.reload6895
  %2 = select i1 %cmp, i32 -846008518, i32 830858713
  store i32 %2, i32* %switchVar
  br label %loopEnd

if.then:                                          ; preds = %loopEntry
  store i32 285286981, i32* %switchVar
  br label %loopEnd

for.cond:                                         ; preds = %loopEntry
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = add i32 %3, 652231758
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 652231758
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  %29 = select i1 %27, i32 -1681586230, i32 976653493
  store i32 %29, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %30 = load i32, i32* %a, align 4
  %31 = load i32, i32* %d, align 4
  %32 = add i32 %31, 436127171
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 436127171
  %sub = sub nsw i32 %31, 1
  %cmp1 = icmp sle i32 %30, %34
  store i1 %cmp1, i1* %cmp1.reg2mem
  %35 = load i32, i32* @x
  %36 = load i32, i32* @y
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1359023154, i32 976653493
  store i32 %48, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  %cmp1.reload = load volatile i1, i1* %cmp1.reg2mem
  %49 = select i1 %cmp1.reload, i32 -1501814812, i32 -2060764543
  store i32 %49, i32* %switchVar
  br label %loopEnd

for.body:                                         ; preds = %loopEntry
  %50 = load i32, i32* %a, align 4
  %rem = srem i32 %50, 4
  %cmp2 = icmp eq i32 %rem, 0
  %51 = select i1 %cmp2, i32 908468993, i32 -340156928
  store i32 %51, i32* %switchVar
  br label %loopEnd

land.lhs.true:                                    ; preds = %loopEntry
  %52 = load i32, i32* @x
  %53 = load i32, i32* @y
  %54 = add i32 %52, 832740442
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 832740442
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 2067472260, i32 1978941284
  store i32 %78, i32* %switchVar
  br label %loopEnd

originalBB2789:                                   ; preds = %loopEntry
  %79 = load i32, i32* %a, align 4
  %rem3 = srem i32 %79, 100
  %cmp4 = icmp ne i32 %rem3, 0
  store i1 %cmp4, i1* %cmp4.reg2mem
  %80 = load i32, i32* @x
  %81 = load i32, i32* @y
  %82 = add i32 %80, -1695790331
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -1695790331
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -772885668, i32 1978941284
  store i32 %94, i32* %switchVar
  br label %loopEnd

originalBBpart22792:                              ; preds = %loopEntry
  %cmp4.reload = load volatile i1, i1* %cmp4.reg2mem
  %95 = select i1 %cmp4.reload, i32 -768025480, i32 -340156928
  store i32 %95, i32* %switchVar
  br label %loopEnd

lor.lhs.false:                                    ; preds = %loopEntry
  %96 = load i32, i32* @x
  %97 = load i32, i32* @y
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 -1468506229, i32 1461771045
  store i32 %109, i32* %switchVar
  br label %loopEnd

originalBB2794:                                   ; preds = %loopEntry
  %110 = load i32, i32* %a, align 4
  %rem5 = srem i32 %110, 400
  %cmp6 = icmp eq i32 %rem5, 0
  store i1 %cmp6, i1* %cmp6.reg2mem
  %111 = load i32, i32* @x
  %112 = load i32, i32* @y
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 true, true
  %123 = and i1 %120, true
  %124 = and i1 %118, %122
  %125 = and i1 %121, true
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 true, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  %136 = select i1 %134, i32 2131177277, i32 1461771045
  store i32 %136, i32* %switchVar
  br label %loopEnd

originalBBpart22798:                              ; preds = %loopEntry
  %cmp6.reload = load volatile i1, i1* %cmp6.reg2mem
  %137 = select i1 %cmp6.reload, i32 -768025480, i32 -1917329703
  store i32 %137, i32* %switchVar
  br label %loopEnd

if.then7:                                         ; preds = %loopEntry
  %138 = load i32, i32* %s, align 4
  %139 = sub i32 0, 366
  %140 = sub i32 %138, %139
  %add = add nsw i32 %138, 366
  store i32 %140, i32* %s, align 4
  store i32 -1680976764, i32* %switchVar
  br label %loopEnd

if.else:                                          ; preds = %loopEntry
  %141 = load i32, i32* %s, align 4
  %142 = sub i32 0, %141
  %143 = sub i32 0, 365
  %144 = add i32 %142, %143
  %145 = sub i32 0, %144
  %add8 = add nsw i32 %141, 365
  store i32 %145, i32* %s, align 4
  store i32 -1680976764, i32* %switchVar
  br label %loopEnd

if.end:                                           ; preds = %loopEntry
  %146 = load i32, i32* @x
  %147 = load i32, i32* @y
  %148 = add i32 %146, -774907653
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, -774907653
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 false, true
  %159 = and i1 %156, false
  %160 = and i1 %154, %158
  %161 = and i1 %157, false
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 false, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  %172 = select i1 %170, i32 -1977724284, i32 333311316
  store i32 %172, i32* %switchVar
  br label %loopEnd

originalBB2800:                                   ; preds = %loopEntry
  %173 = load i32, i32* @x
  %174 = load i32, i32* @y
  %175 = sub i32 %173, 1637485743
  %176 = sub i32 %175, 1
  %177 = add i32 %176, 1637485743
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = xor i1 %181, true
  %184 = xor i1 %182, true
  %185 = xor i1 true, true
  %186 = and i1 %183, true
  %187 = and i1 %181, %185
  %188 = and i1 %184, true
  %189 = and i1 %182, %185
  %190 = or i1 %186, %187
  %191 = or i1 %188, %189
  %192 = xor i1 %190, %191
  %193 = or i1 %183, %184
  %194 = xor i1 %193, true
  %195 = or i1 true, %185
  %196 = and i1 %194, %195
  %197 = or i1 %192, %196
  %198 = or i1 %181, %182
  %199 = select i1 %197, i32 1998246417, i32 333311316
  store i32 %199, i32* %switchVar
  br label %loopEnd

originalBBpart22802:                              ; preds = %loopEntry
  store i32 411172575, i32* %switchVar
  br label %loopEnd

for.inc:                                          ; preds = %loopEntry
  %200 = load i32, i32* %a, align 4
  %201 = sub i32 %200, -661550431
  %202 = add i32 %201, 1
  %203 = add i32 %202, -661550431
  %inc = add nsw i32 %200, 1
  store i32 %203, i32* %a, align 4
  store i32 285286981, i32* %switchVar
  br label %loopEnd

for.end:                                          ; preds = %loopEntry
  store i32 1916792881, i32* %switchVar
  br label %loopEnd

if.else9:                                         ; preds = %loopEntry
  store i32 0, i32* %s, align 4
  store i32 1916792881, i32* %switchVar
  br label %loopEnd

if.end10:                                         ; preds = %loopEntry
  %204 = load i32, i32* %a, align 4
  %rem11 = srem i32 %204, 4
  %cmp12 = icmp eq i32 %rem11, 0
  %205 = select i1 %cmp12, i32 -761181637, i32 276918643
  store i32 %205, i32* %switchVar
  br label %loopEnd

land.lhs.true13:                                  ; preds = %loopEntry
  %206 = load i32, i32* %a, align 4
  %rem14 = srem i32 %206, 100
  %cmp15 = icmp ne i32 %rem14, 0
  %207 = select i1 %cmp15, i32 1237816551, i32 276918643
  store i32 %207, i32* %switchVar
  br label %loopEnd

lor.lhs.false16:                                  ; preds = %loopEntry
  %208 = load i32, i32* %a, align 4
  %rem17 = srem i32 %208, 400
  %cmp18 = icmp eq i32 %rem17, 0
  %209 = select i1 %cmp18, i32 1237816551, i32 -2015631116
  store i32 %209, i32* %switchVar
  br label %loopEnd

if.then19:                                        ; preds = %loopEntry
  %210 = load i32, i32* %b, align 4
  %211 = load i32, i32* %e, align 4
  %cmp20 = icmp eq i32 %210, %211
  %212 = select i1 %cmp20, i32 1260625367, i32 788545139
  store i32 %212, i32* %switchVar
  br label %loopEnd

if.then21:                                        ; preds = %loopEntry
  %213 = load i32, i32* %s, align 4
  %214 = load i32, i32* %f, align 4
  %215 = sub i32 0, %214
  %216 = sub i32 %213, %215
  %add22 = add nsw i32 %213, %214
  %217 = load i32, i32* %c, align 4
  %218 = sub i32 0, %217
  %219 = add i32 %216, %218
  %sub23 = sub nsw i32 %216, %217
  store i32 %219, i32* %s, align 4
  %220 = load i32, i32* %s, align 4
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %220)
  store i32 -1405411124, i32* %switchVar
  br label %loopEnd

if.else25:                                        ; preds = %loopEntry
  %221 = load i32, i32* %b, align 4
  store i32 %221, i32* %.reg2mem6896
  store i32 -829146233, i32* %switchVar
  br label %loopEnd

NodeBlock6861:                                    ; preds = %loopEntry
  %.reload6909 = load volatile i32, i32* %.reg2mem6896
  %Pivot6862 = icmp slt i32 %.reload6909, 7
  %222 = select i1 %Pivot6862, i32 1641396635, i32 1728830723
  store i32 %222, i32* %switchVar
  br label %loopEnd

NodeBlock6859:                                    ; preds = %loopEntry
  %.reload6902 = load volatile i32, i32* %.reg2mem6896
  %Pivot6860 = icmp slt i32 %.reload6902, 10
  %223 = select i1 %Pivot6860, i32 764253001, i32 1299420947
  store i32 %223, i32* %switchVar
  br label %loopEnd

NodeBlock6857:                                    ; preds = %loopEntry
  %.reload6899 = load volatile i32, i32* %.reg2mem6896
  %Pivot6858 = icmp slt i32 %.reload6899, 11
  %224 = select i1 %Pivot6858, i32 1902806182, i32 -485158610
  store i32 %224, i32* %switchVar
  br label %loopEnd

NodeBlock6855:                                    ; preds = %loopEntry
  %.reload6898 = load volatile i32, i32* %.reg2mem6896
  %Pivot6856 = icmp slt i32 %.reload6898, 12
  %225 = select i1 %Pivot6856, i32 806509563, i32 1414373964
  store i32 %225, i32* %switchVar
  br label %loopEnd

LeafBlock6853:                                    ; preds = %loopEntry
  %.reload6897 = load volatile i32, i32* %.reg2mem6896
  %SwitchLeaf6854 = icmp eq i32 %.reload6897, 12
  %226 = select i1 %SwitchLeaf6854, i32 1712451928, i32 1583273717
  store i32 %226, i32* %switchVar
  br label %loopEnd

NodeBlock6851:                                    ; preds = %loopEntry
  %.reload6901 = load volatile i32, i32* %.reg2mem6896
  %Pivot6852 = icmp slt i32 %.reload6901, 8
  %227 = select i1 %Pivot6852, i32 -1782648663, i32 -1224139382
  store i32 %227, i32* %switchVar
  br label %loopEnd

NodeBlock6849:                                    ; preds = %loopEntry
  %.reload6900 = load volatile i32, i32* %.reg2mem6896
  %Pivot6850 = icmp slt i32 %.reload6900, 9
  %228 = select i1 %Pivot6850, i32 1324344726, i32 61390667
  store i32 %228, i32* %switchVar
  br label %loopEnd

NodeBlock6847:                                    ; preds = %loopEntry
  %.reload6908 = load volatile i32, i32* %.reg2mem6896
  %Pivot6848 = icmp slt i32 %.reload6908, 4
  %229 = select i1 %Pivot6848, i32 -293444747, i32 -673067793
  store i32 %229, i32* %switchVar
  br label %loopEnd

NodeBlock6845:                                    ; preds = %loopEntry
  %.reload6904 = load volatile i32, i32* %.reg2mem6896
  %Pivot6846 = icmp slt i32 %.reload6904, 5
  %230 = select i1 %Pivot6846, i32 332635580, i32 -954768535
  store i32 %230, i32* %switchVar
  br label %loopEnd

NodeBlock6843:                                    ; preds = %loopEntry
  %.reload6903 = load volatile i32, i32* %.reg2mem6896
  %Pivot6844 = icmp slt i32 %.reload6903, 6
  %231 = select i1 %Pivot6844, i32 -1566423399, i32 1452140042
  store i32 %231, i32* %switchVar
  br label %loopEnd

NodeBlock6841:                                    ; preds = %loopEntry
  %.reload6907 = load volatile i32, i32* %.reg2mem6896
  %Pivot6842 = icmp slt i32 %.reload6907, 2
  %232 = select i1 %Pivot6842, i32 881172901, i32 -1289324165
  store i32 %232, i32* %switchVar
  br label %loopEnd

NodeBlock:                                        ; preds = %loopEntry
  %.reload6905 = load volatile i32, i32* %.reg2mem6896
  %Pivot = icmp slt i32 %.reload6905, 3
  %233 = select i1 %Pivot, i32 1530980620, i32 22701750
  store i32 %233, i32* %switchVar
  br label %loopEnd

LeafBlock:                                        ; preds = %loopEntry
  %.reload6906 = load volatile i32, i32* %.reg2mem6896
  %SwitchLeaf = icmp eq i32 %.reload6906, 1
  %234 = select i1 %SwitchLeaf, i32 -1417578039, i32 1583273717
  store i32 %234, i32* %switchVar
  br label %loopEnd

sw.bb:                                            ; preds = %loopEntry
  %235 = load i32, i32* %e, align 4
  %cmp26 = icmp eq i32 %235, 2
  %236 = select i1 %cmp26, i32 -1858433418, i32 608164620
  store i32 %236, i32* %switchVar
  br label %loopEnd

if.then27:                                        ; preds = %loopEntry
  %237 = load i32, i32* @x
  %238 = load i32, i32* @y
  %239 = sub i32 0, 1
  %240 = add i32 %237, %239
  %241 = sub i32 %237, 1
  %242 = mul i32 %237, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %238, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 false, true
  %249 = and i1 %246, false
  %250 = and i1 %244, %248
  %251 = and i1 %247, false
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 false, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  %262 = select i1 %260, i32 -880784375, i32 2056147121
  store i32 %262, i32* %switchVar
  br label %loopEnd

originalBB2804:                                   ; preds = %loopEntry
  %263 = load i32, i32* %s, align 4
  %264 = add i32 %263, -1323647520
  %265 = add i32 %264, 31
  %266 = sub i32 %265, -1323647520
  %add28 = add nsw i32 %263, 31
  %267 = load i32, i32* %f, align 4
  %268 = add i32 %266, -2027116380
  %269 = add i32 %268, %267
  %270 = sub i32 %269, -2027116380
  %add29 = add nsw i32 %266, %267
  %271 = load i32, i32* %c, align 4
  %272 = add i32 %270, -1233939293
  %273 = sub i32 %272, %271
  %274 = sub i32 %273, -1233939293
  %sub30 = sub nsw i32 %270, %271
  store i32 %274, i32* %s, align 4
  %275 = load i32, i32* %s, align 4
  %call31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %275)
  %276 = load i32, i32* @x
  %277 = load i32, i32* @y
  %278 = add i32 %276, 712585946
  %279 = sub i32 %278, 1
  %280 = sub i32 %279, 712585946
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = xor i1 %284, true
  %287 = xor i1 %285, true
  %288 = xor i1 false, true
  %289 = and i1 %286, false
  %290 = and i1 %284, %288
  %291 = and i1 %287, false
  %292 = and i1 %285, %288
  %293 = or i1 %289, %290
  %294 = or i1 %291, %292
  %295 = xor i1 %293, %294
  %296 = or i1 %286, %287
  %297 = xor i1 %296, true
  %298 = or i1 false, %288
  %299 = and i1 %297, %298
  %300 = or i1 %295, %299
  %301 = or i1 %284, %285
  %302 = select i1 %300, i32 -1474794880, i32 2056147121
  store i32 %302, i32* %switchVar
  br label %loopEnd

originalBBpart22833:                              ; preds = %loopEntry
  store i32 608164620, i32* %switchVar
  br label %loopEnd

if.end32:                                         ; preds = %loopEntry
  %303 = load i32, i32* %e, align 4
  %cmp33 = icmp eq i32 %303, 3
  %304 = select i1 %cmp33, i32 1487793971, i32 -1500686313
  store i32 %304, i32* %switchVar
  br label %loopEnd

if.then34:                                        ; preds = %loopEntry
  %305 = load i32, i32* %s, align 4
  %306 = add i32 %305, -1419294461
  %307 = add i32 %306, 31
  %308 = sub i32 %307, -1419294461
  %add35 = add nsw i32 %305, 31
  %309 = sub i32 0, 29
  %310 = sub i32 %308, %309
  %add36 = add nsw i32 %308, 29
  %311 = load i32, i32* %f, align 4
  %312 = sub i32 0, %311
  %313 = sub i32 %310, %312
  %add37 = add nsw i32 %310, %311
  %314 = load i32, i32* %c, align 4
  %315 = sub i32 %313, 1877899312
  %316 = sub i32 %315, %314
  %317 = add i32 %316, 1877899312
  %sub38 = sub nsw i32 %313, %314
  store i32 %317, i32* %s, align 4
  %318 = load i32, i32* %s, align 4
  %call39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %318)
  store i32 -1500686313, i32* %switchVar
  br label %loopEnd

if.end40:                                         ; preds = %loopEntry
  %319 = load i32, i32* @x
  %320 = load i32, i32* @y
  %321 = sub i32 0, 1
  %322 = add i32 %319, %321
  %323 = sub i32 %319, 1
  %324 = mul i32 %319, %322
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %320, 10
  %328 = and i1 %326, %327
  %329 = xor i1 %326, %327
  %330 = or i1 %328, %329
  %331 = or i1 %326, %327
  %332 = select i1 %330, i32 -1810214989, i32 974788845
  store i32 %332, i32* %switchVar
  br label %loopEnd

originalBB2835:                                   ; preds = %loopEntry
  %333 = load i32, i32* %e, align 4
  %cmp41 = icmp eq i32 %333, 4
  store i1 %cmp41, i1* %cmp41.reg2mem
  %334 = load i32, i32* @x
  %335 = load i32, i32* @y
  %336 = sub i32 %334, -1687302891
  %337 = sub i32 %336, 1
  %338 = add i32 %337, -1687302891
  %339 = sub i32 %334, 1
  %340 = mul i32 %334, %338
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %335, 10
  %344 = xor i1 %342, true
  %345 = xor i1 %343, true
  %346 = xor i1 false, true
  %347 = and i1 %344, false
  %348 = and i1 %342, %346
  %349 = and i1 %345, false
  %350 = and i1 %343, %346
  %351 = or i1 %347, %348
  %352 = or i1 %349, %350
  %353 = xor i1 %351, %352
  %354 = or i1 %344, %345
  %355 = xor i1 %354, true
  %356 = or i1 false, %346
  %357 = and i1 %355, %356
  %358 = or i1 %353, %357
  %359 = or i1 %342, %343
  %360 = select i1 %358, i32 -1050796611, i32 974788845
  store i32 %360, i32* %switchVar
  br label %loopEnd

originalBBpart22837:                              ; preds = %loopEntry
  %cmp41.reload = load volatile i1, i1* %cmp41.reg2mem
  %361 = select i1 %cmp41.reload, i32 -847440386, i32 -1058640212
  store i32 %361, i32* %switchVar
  br label %loopEnd

if.then42:                                        ; preds = %loopEntry
  %362 = load i32, i32* %s, align 4
  %363 = add i32 %362, 1504679849
  %364 = add i32 %363, 31
  %365 = sub i32 %364, 1504679849
  %add43 = add nsw i32 %362, 31
  %366 = sub i32 0, %365
  %367 = sub i32 0, 29
  %368 = add i32 %366, %367
  %369 = sub i32 0, %368
  %add44 = add nsw i32 %365, 29
  %370 = sub i32 0, 31
  %371 = sub i32 %369, %370
  %add45 = add nsw i32 %369, 31
  %372 = load i32, i32* %f, align 4
  %373 = sub i32 %371, -1278997689
  %374 = add i32 %373, %372
  %375 = add i32 %374, -1278997689
  %add46 = add nsw i32 %371, %372
  %376 = load i32, i32* %c, align 4
  %377 = sub i32 0, %376
  %378 = add i32 %375, %377
  %sub47 = sub nsw i32 %375, %376
  store i32 %378, i32* %s, align 4
  %379 = load i32, i32* %s, align 4
  %call48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %379)
  store i32 -1058640212, i32* %switchVar
  br label %loopEnd

if.end49:                                         ; preds = %loopEntry
  %380 = load i32, i32* %e, align 4
  %cmp50 = icmp eq i32 %380, 5
  %381 = select i1 %cmp50, i32 1387459827, i32 -943489832
  store i32 %381, i32* %switchVar
  br label %loopEnd

if.then51:                                        ; preds = %loopEntry
  %382 = load i32, i32* @x
  %383 = load i32, i32* @y
  %384 = sub i32 0, 1
  %385 = add i32 %382, %384
  %386 = sub i32 %382, 1
  %387 = mul i32 %382, %385
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %383, 10
  %391 = xor i1 %389, true
  %392 = xor i1 %390, true
  %393 = xor i1 true, true
  %394 = and i1 %391, true
  %395 = and i1 %389, %393
  %396 = and i1 %392, true
  %397 = and i1 %390, %393
  %398 = or i1 %394, %395
  %399 = or i1 %396, %397
  %400 = xor i1 %398, %399
  %401 = or i1 %391, %392
  %402 = xor i1 %401, true
  %403 = or i1 true, %393
  %404 = and i1 %402, %403
  %405 = or i1 %400, %404
  %406 = or i1 %389, %390
  %407 = select i1 %405, i32 218966396, i32 -625503400
  store i32 %407, i32* %switchVar
  br label %loopEnd

originalBB2839:                                   ; preds = %loopEntry
  %408 = load i32, i32* %s, align 4
  %409 = sub i32 0, 31
  %410 = sub i32 %408, %409
  %add52 = add nsw i32 %408, 31
  %411 = add i32 %410, 681119704
  %412 = add i32 %411, 29
  %413 = sub i32 %412, 681119704
  %add53 = add nsw i32 %410, 29
  %414 = sub i32 0, %413
  %415 = sub i32 0, 31
  %416 = add i32 %414, %415
  %417 = sub i32 0, %416
  %add54 = add nsw i32 %413, 31
  %418 = sub i32 0, %417
  %419 = sub i32 0, 30
  %420 = add i32 %418, %419
  %421 = sub i32 0, %420
  %add55 = add nsw i32 %417, 30
  %422 = load i32, i32* %f, align 4
  %423 = add i32 %421, -2018843482
  %424 = add i32 %423, %422
  %425 = sub i32 %424, -2018843482
  %add56 = add nsw i32 %421, %422
  %426 = load i32, i32* %c, align 4
  %427 = add i32 %425, 884735161
  %428 = sub i32 %427, %426
  %429 = sub i32 %428, 884735161
  %sub57 = sub nsw i32 %425, %426
  store i32 %429, i32* %s, align 4
  %430 = load i32, i32* %s, align 4
  %call58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %430)
  %431 = load i32, i32* @x
  %432 = load i32, i32* @y
  %433 = sub i32 %431, -1921832815
  %434 = sub i32 %433, 1
  %435 = add i32 %434, -1921832815
  %436 = sub i32 %431, 1
  %437 = mul i32 %431, %435
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %432, 10
  %441 = xor i1 %439, true
  %442 = xor i1 %440, true
  %443 = xor i1 true, true
  %444 = and i1 %441, true
  %445 = and i1 %439, %443
  %446 = and i1 %442, true
  %447 = and i1 %440, %443
  %448 = or i1 %444, %445
  %449 = or i1 %446, %447
  %450 = xor i1 %448, %449
  %451 = or i1 %441, %442
  %452 = xor i1 %451, true
  %453 = or i1 true, %443
  %454 = and i1 %452, %453
  %455 = or i1 %450, %454
  %456 = or i1 %439, %440
  %457 = select i1 %455, i32 -2145384124, i32 -625503400
  store i32 %457, i32* %switchVar
  br label %loopEnd

originalBBpart22874:                              ; preds = %loopEntry
  store i32 -943489832, i32* %switchVar
  br label %loopEnd

if.end59:                                         ; preds = %loopEntry
  %458 = load i32, i32* %e, align 4
  %cmp60 = icmp eq i32 %458, 6
  %459 = select i1 %cmp60, i32 1793607680, i32 -1256130856
  store i32 %459, i32* %switchVar
  br label %loopEnd

if.then61:                                        ; preds = %loopEntry
  %460 = load i32, i32* %s, align 4
  %461 = sub i32 %460, 2101140547
  %462 = add i32 %461, 31
  %463 = add i32 %462, 2101140547
  %add62 = add nsw i32 %460, 31
  %464 = sub i32 0, %463
  %465 = sub i32 0, 29
  %466 = add i32 %464, %465
  %467 = sub i32 0, %466
  %add63 = add nsw i32 %463, 29
  %468 = sub i32 0, %467
  %469 = sub i32 0, 31
  %470 = add i32 %468, %469
  %471 = sub i32 0, %470
  %add64 = add nsw i32 %467, 31
  %472 = sub i32 0, 30
  %473 = sub i32 %471, %472
  %add65 = add nsw i32 %471, 30
  %474 = sub i32 %473, 1125231926
  %475 = add i32 %474, 31
  %476 = add i32 %475, 1125231926
  %add66 = add nsw i32 %473, 31
  %477 = load i32, i32* %f, align 4
  %478 = sub i32 0, %476
  %479 = sub i32 0, %477
  %480 = add i32 %478, %479
  %481 = sub i32 0, %480
  %add67 = add nsw i32 %476, %477
  %482 = load i32, i32* %c, align 4
  %483 = sub i32 %481, 428191752
  %484 = sub i32 %483, %482
  %485 = add i32 %484, 428191752
  %sub68 = sub nsw i32 %481, %482
  store i32 %485, i32* %s, align 4
  %486 = load i32, i32* %s, align 4
  %call69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %486)
  store i32 -1256130856, i32* %switchVar
  br label %loopEnd

if.end70:                                         ; preds = %loopEntry
  %487 = load i32, i32* %e, align 4
  %cmp71 = icmp eq i32 %487, 7
  %488 = select i1 %cmp71, i32 1619610895, i32 519070542
  store i32 %488, i32* %switchVar
  br label %loopEnd

if.then72:                                        ; preds = %loopEntry
  %489 = load i32, i32* %s, align 4
  %490 = add i32 %489, 2075353900
  %491 = add i32 %490, 31
  %492 = sub i32 %491, 2075353900
  %add73 = add nsw i32 %489, 31
  %493 = sub i32 %492, -273900492
  %494 = add i32 %493, 29
  %495 = add i32 %494, -273900492
  %add74 = add nsw i32 %492, 29
  %496 = add i32 %495, 927646117
  %497 = add i32 %496, 31
  %498 = sub i32 %497, 927646117
  %add75 = add nsw i32 %495, 31
  %499 = sub i32 0, 30
  %500 = sub i32 %498, %499
  %add76 = add nsw i32 %498, 30
  %501 = sub i32 %500, 1269734363
  %502 = add i32 %501, 31
  %503 = add i32 %502, 1269734363
  %add77 = add nsw i32 %500, 31
  %504 = add i32 %503, -1376381351
  %505 = add i32 %504, 30
  %506 = sub i32 %505, -1376381351
  %add78 = add nsw i32 %503, 30
  %507 = load i32, i32* %f, align 4
  %508 = sub i32 %506, 131138070
  %509 = add i32 %508, %507
  %510 = add i32 %509, 131138070
  %add79 = add nsw i32 %506, %507
  %511 = load i32, i32* %c, align 4
  %512 = sub i32 %510, -1333155599
  %513 = sub i32 %512, %511
  %514 = add i32 %513, -1333155599
  %sub80 = sub nsw i32 %510, %511
  store i32 %514, i32* %s, align 4
  %515 = load i32, i32* %s, align 4
  %call81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %515)
  store i32 519070542, i32* %switchVar
  br label %loopEnd

if.end82:                                         ; preds = %loopEntry
  %516 = load i32, i32* %e, align 4
  %cmp83 = icmp eq i32 %516, 8
  %517 = select i1 %cmp83, i32 1931847168, i32 -1873849328
  store i32 %517, i32* %switchVar
  br label %loopEnd

if.then84:                                        ; preds = %loopEntry
  %518 = load i32, i32* @x
  %519 = load i32, i32* @y
  %520 = add i32 %518, 1352297517
  %521 = sub i32 %520, 1
  %522 = sub i32 %521, 1352297517
  %523 = sub i32 %518, 1
  %524 = mul i32 %518, %522
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %519, 10
  %528 = xor i1 %526, true
  %529 = xor i1 %527, true
  %530 = xor i1 true, true
  %531 = and i1 %528, true
  %532 = and i1 %526, %530
  %533 = and i1 %529, true
  %534 = and i1 %527, %530
  %535 = or i1 %531, %532
  %536 = or i1 %533, %534
  %537 = xor i1 %535, %536
  %538 = or i1 %528, %529
  %539 = xor i1 %538, true
  %540 = or i1 true, %530
  %541 = and i1 %539, %540
  %542 = or i1 %537, %541
  %543 = or i1 %526, %527
  %544 = select i1 %542, i32 -7108793, i32 165996935
  store i32 %544, i32* %switchVar
  br label %loopEnd

originalBB2876:                                   ; preds = %loopEntry
  %545 = load i32, i32* %s, align 4
  %546 = add i32 %545, -1432245060
  %547 = add i32 %546, 31
  %548 = sub i32 %547, -1432245060
  %add85 = add nsw i32 %545, 31
  %549 = sub i32 %548, -838261705
  %550 = add i32 %549, 29
  %551 = add i32 %550, -838261705
  %add86 = add nsw i32 %548, 29
  %552 = sub i32 %551, 476807903
  %553 = add i32 %552, 31
  %554 = add i32 %553, 476807903
  %add87 = add nsw i32 %551, 31
  %555 = sub i32 %554, 1624439122
  %556 = add i32 %555, 30
  %557 = add i32 %556, 1624439122
  %add88 = add nsw i32 %554, 30
  %558 = sub i32 0, %557
  %559 = sub i32 0, 31
  %560 = add i32 %558, %559
  %561 = sub i32 0, %560
  %add89 = add nsw i32 %557, 31
  %562 = sub i32 %561, 251661615
  %563 = add i32 %562, 30
  %564 = add i32 %563, 251661615
  %add90 = add nsw i32 %561, 30
  %565 = add i32 %564, -1103991490
  %566 = add i32 %565, 31
  %567 = sub i32 %566, -1103991490
  %add91 = add nsw i32 %564, 31
  %568 = load i32, i32* %f, align 4
  %569 = sub i32 0, %567
  %570 = sub i32 0, %568
  %571 = add i32 %569, %570
  %572 = sub i32 0, %571
  %add92 = add nsw i32 %567, %568
  %573 = load i32, i32* %c, align 4
  %574 = sub i32 %572, 1564186557
  %575 = sub i32 %574, %573
  %576 = add i32 %575, 1564186557
  %sub93 = sub nsw i32 %572, %573
  store i32 %576, i32* %s, align 4
  %577 = load i32, i32* %s, align 4
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %577)
  %578 = load i32, i32* @x
  %579 = load i32, i32* @y
  %580 = sub i32 %578, -2016615236
  %581 = sub i32 %580, 1
  %582 = add i32 %581, -2016615236
  %583 = sub i32 %578, 1
  %584 = mul i32 %578, %582
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %579, 10
  %588 = xor i1 %586, true
  %589 = xor i1 %587, true
  %590 = xor i1 true, true
  %591 = and i1 %588, true
  %592 = and i1 %586, %590
  %593 = and i1 %589, true
  %594 = and i1 %587, %590
  %595 = or i1 %591, %592
  %596 = or i1 %593, %594
  %597 = xor i1 %595, %596
  %598 = or i1 %588, %589
  %599 = xor i1 %598, true
  %600 = or i1 true, %590
  %601 = and i1 %599, %600
  %602 = or i1 %597, %601
  %603 = or i1 %586, %587
  %604 = select i1 %602, i32 1475226495, i32 165996935
  store i32 %604, i32* %switchVar
  br label %loopEnd

originalBBpart22939:                              ; preds = %loopEntry
  store i32 -1873849328, i32* %switchVar
  br label %loopEnd

if.end95:                                         ; preds = %loopEntry
  %605 = load i32, i32* %e, align 4
  %cmp96 = icmp eq i32 %605, 9
  %606 = select i1 %cmp96, i32 -1609094808, i32 378990316
  store i32 %606, i32* %switchVar
  br label %loopEnd

if.then97:                                        ; preds = %loopEntry
  %607 = load i32, i32* %s, align 4
  %608 = sub i32 0, 31
  %609 = sub i32 %607, %608
  %add98 = add nsw i32 %607, 31
  %610 = add i32 %609, -2043152658
  %611 = add i32 %610, 29
  %612 = sub i32 %611, -2043152658
  %add99 = add nsw i32 %609, 29
  %613 = sub i32 0, 31
  %614 = sub i32 %612, %613
  %add100 = add nsw i32 %612, 31
  %615 = add i32 %614, 2031639362
  %616 = add i32 %615, 30
  %617 = sub i32 %616, 2031639362
  %add101 = add nsw i32 %614, 30
  %618 = sub i32 0, %617
  %619 = sub i32 0, 31
  %620 = add i32 %618, %619
  %621 = sub i32 0, %620
  %add102 = add nsw i32 %617, 31
  %622 = add i32 %621, -1037181222
  %623 = add i32 %622, 30
  %624 = sub i32 %623, -1037181222
  %add103 = add nsw i32 %621, 30
  %625 = sub i32 %624, -1531751324
  %626 = add i32 %625, 31
  %627 = add i32 %626, -1531751324
  %add104 = add nsw i32 %624, 31
  %628 = add i32 %627, 1573057973
  %629 = add i32 %628, 31
  %630 = sub i32 %629, 1573057973
  %add105 = add nsw i32 %627, 31
  %631 = load i32, i32* %f, align 4
  %632 = sub i32 %630, -783729220
  %633 = add i32 %632, %631
  %634 = add i32 %633, -783729220
  %add106 = add nsw i32 %630, %631
  %635 = load i32, i32* %c, align 4
  %636 = add i32 %634, 743971787
  %637 = sub i32 %636, %635
  %638 = sub i32 %637, 743971787
  %sub107 = sub nsw i32 %634, %635
  store i32 %638, i32* %s, align 4
  %639 = load i32, i32* %s, align 4
  %call108 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %639)
  store i32 378990316, i32* %switchVar
  br label %loopEnd

if.end109:                                        ; preds = %loopEntry
  %640 = load i32, i32* @x
  %641 = load i32, i32* @y
  %642 = sub i32 0, 1
  %643 = add i32 %640, %642
  %644 = sub i32 %640, 1
  %645 = mul i32 %640, %643
  %646 = urem i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = icmp slt i32 %641, 10
  %649 = xor i1 %647, true
  %650 = xor i1 %648, true
  %651 = xor i1 true, true
  %652 = and i1 %649, true
  %653 = and i1 %647, %651
  %654 = and i1 %650, true
  %655 = and i1 %648, %651
  %656 = or i1 %652, %653
  %657 = or i1 %654, %655
  %658 = xor i1 %656, %657
  %659 = or i1 %649, %650
  %660 = xor i1 %659, true
  %661 = or i1 true, %651
  %662 = and i1 %660, %661
  %663 = or i1 %658, %662
  %664 = or i1 %647, %648
  %665 = select i1 %663, i32 351892026, i32 -1196437898
  store i32 %665, i32* %switchVar
  br label %loopEnd

originalBB2941:                                   ; preds = %loopEntry
  %666 = load i32, i32* %e, align 4
  %cmp110 = icmp eq i32 %666, 10
  store i1 %cmp110, i1* %cmp110.reg2mem
  %667 = load i32, i32* @x
  %668 = load i32, i32* @y
  %669 = sub i32 %667, -1604111755
  %670 = sub i32 %669, 1
  %671 = add i32 %670, -1604111755
  %672 = sub i32 %667, 1
  %673 = mul i32 %667, %671
  %674 = urem i32 %673, 2
  %675 = icmp eq i32 %674, 0
  %676 = icmp slt i32 %668, 10
  %677 = xor i1 %675, true
  %678 = xor i1 %676, true
  %679 = xor i1 true, true
  %680 = and i1 %677, true
  %681 = and i1 %675, %679
  %682 = and i1 %678, true
  %683 = and i1 %676, %679
  %684 = or i1 %680, %681
  %685 = or i1 %682, %683
  %686 = xor i1 %684, %685
  %687 = or i1 %677, %678
  %688 = xor i1 %687, true
  %689 = or i1 true, %679
  %690 = and i1 %688, %689
  %691 = or i1 %686, %690
  %692 = or i1 %675, %676
  %693 = select i1 %691, i32 -1919146256, i32 -1196437898
  store i32 %693, i32* %switchVar
  br label %loopEnd

originalBBpart22943:                              ; preds = %loopEntry
  %cmp110.reload = load volatile i1, i1* %cmp110.reg2mem
  %694 = select i1 %cmp110.reload, i32 -61268351, i32 -1678010904
  store i32 %694, i32* %switchVar
  br label %loopEnd

if.then111:                                       ; preds = %loopEntry
  %695 = load i32, i32* %s, align 4
  %696 = sub i32 0, 31
  %697 = sub i32 %695, %696
  %add112 = add nsw i32 %695, 31
  %698 = sub i32 %697, 1857429695
  %699 = add i32 %698, 29
  %700 = add i32 %699, 1857429695
  %add113 = add nsw i32 %697, 29
  %701 = sub i32 0, %700
  %702 = sub i32 0, 31
  %703 = add i32 %701, %702
  %704 = sub i32 0, %703
  %add114 = add nsw i32 %700, 31
  %705 = sub i32 0, 30
  %706 = sub i32 %704, %705
  %add115 = add nsw i32 %704, 30
  %707 = sub i32 0, %706
  %708 = sub i32 0, 31
  %709 = add i32 %707, %708
  %710 = sub i32 0, %709
  %add116 = add nsw i32 %706, 31
  %711 = sub i32 0, 30
  %712 = sub i32 %710, %711
  %add117 = add nsw i32 %710, 30
  %713 = sub i32 %712, -1258672817
  %714 = add i32 %713, 31
  %715 = add i32 %714, -1258672817
  %add118 = add nsw i32 %712, 31
  %716 = sub i32 0, %715
  %717 = sub i32 0, 31
  %718 = add i32 %716, %717
  %719 = sub i32 0, %718
  %add119 = add nsw i32 %715, 31
  %720 = sub i32 0, %719
  %721 = sub i32 0, 30
  %722 = add i32 %720, %721
  %723 = sub i32 0, %722
  %add120 = add nsw i32 %719, 30
  %724 = load i32, i32* %f, align 4
  %725 = sub i32 0, %723
  %726 = sub i32 0, %724
  %727 = add i32 %725, %726
  %728 = sub i32 0, %727
  %add121 = add nsw i32 %723, %724
  %729 = load i32, i32* %c, align 4
  %730 = sub i32 %728, -457233226
  %731 = sub i32 %730, %729
  %732 = add i32 %731, -457233226
  %sub122 = sub nsw i32 %728, %729
  store i32 %732, i32* %s, align 4
  %733 = load i32, i32* %s, align 4
  %call123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %733)
  store i32 -1678010904, i32* %switchVar
  br label %loopEnd

if.end124:                                        ; preds = %loopEntry
  %734 = load i32, i32* %e, align 4
  %cmp125 = icmp eq i32 %734, 11
  %735 = select i1 %cmp125, i32 98743904, i32 -1257243138
  store i32 %735, i32* %switchVar
  br label %loopEnd

if.then126:                                       ; preds = %loopEntry
  %736 = load i32, i32* %s, align 4
  %737 = sub i32 0, 31
  %738 = sub i32 %736, %737
  %add127 = add nsw i32 %736, 31
  %739 = sub i32 0, 29
  %740 = sub i32 %738, %739
  %add128 = add nsw i32 %738, 29
  %741 = sub i32 %740, 720178911
  %742 = add i32 %741, 31
  %743 = add i32 %742, 720178911
  %add129 = add nsw i32 %740, 31
  %744 = sub i32 0, 30
  %745 = sub i32 %743, %744
  %add130 = add nsw i32 %743, 30
  %746 = sub i32 0, 31
  %747 = sub i32 %745, %746
  %add131 = add nsw i32 %745, 31
  %748 = add i32 %747, -1373269512
  %749 = add i32 %748, 30
  %750 = sub i32 %749, -1373269512
  %add132 = add nsw i32 %747, 30
  %751 = sub i32 %750, -880065856
  %752 = add i32 %751, 31
  %753 = add i32 %752, -880065856
  %add133 = add nsw i32 %750, 31
  %754 = add i32 %753, -1232935224
  %755 = add i32 %754, 31
  %756 = sub i32 %755, -1232935224
  %add134 = add nsw i32 %753, 31
  %757 = sub i32 0, 30
  %758 = sub i32 %756, %757
  %add135 = add nsw i32 %756, 30
  %759 = sub i32 0, %758
  %760 = sub i32 0, 31
  %761 = add i32 %759, %760
  %762 = sub i32 0, %761
  %add136 = add nsw i32 %758, 31
  %763 = load i32, i32* %f, align 4
  %764 = add i32 %762, 2088297913
  %765 = add i32 %764, %763
  %766 = sub i32 %765, 2088297913
  %add137 = add nsw i32 %762, %763
  %767 = load i32, i32* %c, align 4
  %768 = sub i32 %766, 259616530
  %769 = sub i32 %768, %767
  %770 = add i32 %769, 259616530
  %sub138 = sub nsw i32 %766, %767
  store i32 %770, i32* %s, align 4
  %771 = load i32, i32* %s, align 4
  %call139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %771)
  store i32 -1257243138, i32* %switchVar
  br label %loopEnd

if.end140:                                        ; preds = %loopEntry
  %772 = load i32, i32* @x
  %773 = load i32, i32* @y
  %774 = sub i32 %772, -1014077603
  %775 = sub i32 %774, 1
  %776 = add i32 %775, -1014077603
  %777 = sub i32 %772, 1
  %778 = mul i32 %772, %776
  %779 = urem i32 %778, 2
  %780 = icmp eq i32 %779, 0
  %781 = icmp slt i32 %773, 10
  %782 = xor i1 %780, true
  %783 = xor i1 %781, true
  %784 = xor i1 false, true
  %785 = and i1 %782, false
  %786 = and i1 %780, %784
  %787 = and i1 %783, false
  %788 = and i1 %781, %784
  %789 = or i1 %785, %786
  %790 = or i1 %787, %788
  %791 = xor i1 %789, %790
  %792 = or i1 %782, %783
  %793 = xor i1 %792, true
  %794 = or i1 false, %784
  %795 = and i1 %793, %794
  %796 = or i1 %791, %795
  %797 = or i1 %780, %781
  %798 = select i1 %796, i32 972888253, i32 959932487
  store i32 %798, i32* %switchVar
  br label %loopEnd

originalBB2945:                                   ; preds = %loopEntry
  %799 = load i32, i32* %e, align 4
  %cmp141 = icmp eq i32 %799, 12
  store i1 %cmp141, i1* %cmp141.reg2mem
  %800 = load i32, i32* @x
  %801 = load i32, i32* @y
  %802 = sub i32 0, 1
  %803 = add i32 %800, %802
  %804 = sub i32 %800, 1
  %805 = mul i32 %800, %803
  %806 = urem i32 %805, 2
  %807 = icmp eq i32 %806, 0
  %808 = icmp slt i32 %801, 10
  %809 = and i1 %807, %808
  %810 = xor i1 %807, %808
  %811 = or i1 %809, %810
  %812 = or i1 %807, %808
  %813 = select i1 %811, i32 718651246, i32 959932487
  store i32 %813, i32* %switchVar
  br label %loopEnd

originalBBpart22947:                              ; preds = %loopEntry
  %cmp141.reload = load volatile i1, i1* %cmp141.reg2mem
  %814 = select i1 %cmp141.reload, i32 1002635162, i32 -1984756998
  store i32 %814, i32* %switchVar
  br label %loopEnd

if.then142:                                       ; preds = %loopEntry
  %815 = load i32, i32* @x
  %816 = load i32, i32* @y
  %817 = add i32 %815, 1441630287
  %818 = sub i32 %817, 1
  %819 = sub i32 %818, 1441630287
  %820 = sub i32 %815, 1
  %821 = mul i32 %815, %819
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %816, 10
  %825 = and i1 %823, %824
  %826 = xor i1 %823, %824
  %827 = or i1 %825, %826
  %828 = or i1 %823, %824
  %829 = select i1 %827, i32 -857779, i32 341909704
  store i32 %829, i32* %switchVar
  br label %loopEnd

originalBB2949:                                   ; preds = %loopEntry
  %830 = load i32, i32* %s, align 4
  %831 = sub i32 0, 31
  %832 = sub i32 %830, %831
  %add143 = add nsw i32 %830, 31
  %833 = sub i32 %832, 2100521265
  %834 = add i32 %833, 29
  %835 = add i32 %834, 2100521265
  %add144 = add nsw i32 %832, 29
  %836 = sub i32 0, %835
  %837 = sub i32 0, 31
  %838 = add i32 %836, %837
  %839 = sub i32 0, %838
  %add145 = add nsw i32 %835, 31
  %840 = sub i32 %839, -186353031
  %841 = add i32 %840, 30
  %842 = add i32 %841, -186353031
  %add146 = add nsw i32 %839, 30
  %843 = sub i32 0, 31
  %844 = sub i32 %842, %843
  %add147 = add nsw i32 %842, 31
  %845 = add i32 %844, 553070318
  %846 = add i32 %845, 30
  %847 = sub i32 %846, 553070318
  %add148 = add nsw i32 %844, 30
  %848 = sub i32 0, 31
  %849 = sub i32 %847, %848
  %add149 = add nsw i32 %847, 31
  %850 = sub i32 %849, 1699659082
  %851 = add i32 %850, 31
  %852 = add i32 %851, 1699659082
  %add150 = add nsw i32 %849, 31
  %853 = sub i32 0, %852
  %854 = sub i32 0, 30
  %855 = add i32 %853, %854
  %856 = sub i32 0, %855
  %add151 = add nsw i32 %852, 30
  %857 = sub i32 0, %856
  %858 = sub i32 0, 31
  %859 = add i32 %857, %858
  %860 = sub i32 0, %859
  %add152 = add nsw i32 %856, 31
  %861 = add i32 %860, 1186689926
  %862 = add i32 %861, 30
  %863 = sub i32 %862, 1186689926
  %add153 = add nsw i32 %860, 30
  %864 = load i32, i32* %f, align 4
  %865 = sub i32 0, %864
  %866 = sub i32 %863, %865
  %add154 = add nsw i32 %863, %864
  %867 = load i32, i32* %c, align 4
  %868 = sub i32 0, %867
  %869 = add i32 %866, %868
  %sub155 = sub nsw i32 %866, %867
  store i32 %869, i32* %s, align 4
  %870 = load i32, i32* %s, align 4
  %call156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %870)
  %871 = load i32, i32* @x
  %872 = load i32, i32* @y
  %873 = sub i32 %871, -130590025
  %874 = sub i32 %873, 1
  %875 = add i32 %874, -130590025
  %876 = sub i32 %871, 1
  %877 = mul i32 %871, %875
  %878 = urem i32 %877, 2
  %879 = icmp eq i32 %878, 0
  %880 = icmp slt i32 %872, 10
  %881 = and i1 %879, %880
  %882 = xor i1 %879, %880
  %883 = or i1 %881, %882
  %884 = or i1 %879, %880
  %885 = select i1 %883, i32 -825426869, i32 341909704
  store i32 %885, i32* %switchVar
  br label %loopEnd

originalBBpart23043:                              ; preds = %loopEntry
  store i32 -1984756998, i32* %switchVar
  br label %loopEnd

if.end157:                                        ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb158:                                         ; preds = %loopEntry
  %886 = load i32, i32* @x
  %887 = load i32, i32* @y
  %888 = add i32 %886, -1739536875
  %889 = sub i32 %888, 1
  %890 = sub i32 %889, -1739536875
  %891 = sub i32 %886, 1
  %892 = mul i32 %886, %890
  %893 = urem i32 %892, 2
  %894 = icmp eq i32 %893, 0
  %895 = icmp slt i32 %887, 10
  %896 = xor i1 %894, true
  %897 = xor i1 %895, true
  %898 = xor i1 true, true
  %899 = and i1 %896, true
  %900 = and i1 %894, %898
  %901 = and i1 %897, true
  %902 = and i1 %895, %898
  %903 = or i1 %899, %900
  %904 = or i1 %901, %902
  %905 = xor i1 %903, %904
  %906 = or i1 %896, %897
  %907 = xor i1 %906, true
  %908 = or i1 true, %898
  %909 = and i1 %907, %908
  %910 = or i1 %905, %909
  %911 = or i1 %894, %895
  %912 = select i1 %910, i32 -1093415071, i32 2049496999
  store i32 %912, i32* %switchVar
  br label %loopEnd

originalBB3045:                                   ; preds = %loopEntry
  %913 = load i32, i32* %e, align 4
  %cmp159 = icmp eq i32 %913, 1
  store i1 %cmp159, i1* %cmp159.reg2mem
  %914 = load i32, i32* @x
  %915 = load i32, i32* @y
  %916 = sub i32 %914, 349693700
  %917 = sub i32 %916, 1
  %918 = add i32 %917, 349693700
  %919 = sub i32 %914, 1
  %920 = mul i32 %914, %918
  %921 = urem i32 %920, 2
  %922 = icmp eq i32 %921, 0
  %923 = icmp slt i32 %915, 10
  %924 = xor i1 %922, true
  %925 = xor i1 %923, true
  %926 = xor i1 false, true
  %927 = and i1 %924, false
  %928 = and i1 %922, %926
  %929 = and i1 %925, false
  %930 = and i1 %923, %926
  %931 = or i1 %927, %928
  %932 = or i1 %929, %930
  %933 = xor i1 %931, %932
  %934 = or i1 %924, %925
  %935 = xor i1 %934, true
  %936 = or i1 false, %926
  %937 = and i1 %935, %936
  %938 = or i1 %933, %937
  %939 = or i1 %922, %923
  %940 = select i1 %938, i32 -1042189614, i32 2049496999
  store i32 %940, i32* %switchVar
  br label %loopEnd

originalBBpart23047:                              ; preds = %loopEntry
  %cmp159.reload = load volatile i1, i1* %cmp159.reg2mem
  %941 = select i1 %cmp159.reload, i32 -1668318822, i32 786672036
  store i32 %941, i32* %switchVar
  br label %loopEnd

if.then160:                                       ; preds = %loopEntry
  %942 = load i32, i32* %s, align 4
  %943 = sub i32 %942, 1801324818
  %944 = sub i32 %943, 31
  %945 = add i32 %944, 1801324818
  %sub161 = sub nsw i32 %942, 31
  %946 = load i32, i32* %f, align 4
  %947 = sub i32 %945, 397977570
  %948 = add i32 %947, %946
  %949 = add i32 %948, 397977570
  %add162 = add nsw i32 %945, %946
  %950 = load i32, i32* %c, align 4
  %951 = add i32 %949, 707663747
  %952 = sub i32 %951, %950
  %953 = sub i32 %952, 707663747
  %sub163 = sub nsw i32 %949, %950
  store i32 %953, i32* %s, align 4
  %954 = load i32, i32* %s, align 4
  %call164 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %954)
  store i32 786672036, i32* %switchVar
  br label %loopEnd

if.end165:                                        ; preds = %loopEntry
  %955 = load i32, i32* %e, align 4
  %cmp166 = icmp eq i32 %955, 3
  %956 = select i1 %cmp166, i32 1137645112, i32 2060642846
  store i32 %956, i32* %switchVar
  br label %loopEnd

if.then167:                                       ; preds = %loopEntry
  %957 = load i32, i32* %s, align 4
  %958 = sub i32 0, %957
  %959 = sub i32 0, 29
  %960 = add i32 %958, %959
  %961 = sub i32 0, %960
  %add168 = add nsw i32 %957, 29
  %962 = load i32, i32* %f, align 4
  %963 = sub i32 %961, 2079681575
  %964 = add i32 %963, %962
  %965 = add i32 %964, 2079681575
  %add169 = add nsw i32 %961, %962
  %966 = load i32, i32* %c, align 4
  %967 = sub i32 0, %966
  %968 = add i32 %965, %967
  %sub170 = sub nsw i32 %965, %966
  store i32 %968, i32* %s, align 4
  %969 = load i32, i32* %s, align 4
  %call171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %969)
  store i32 2060642846, i32* %switchVar
  br label %loopEnd

if.end172:                                        ; preds = %loopEntry
  %970 = load i32, i32* %e, align 4
  %cmp173 = icmp eq i32 %970, 4
  %971 = select i1 %cmp173, i32 -1956723757, i32 -1350914501
  store i32 %971, i32* %switchVar
  br label %loopEnd

if.then174:                                       ; preds = %loopEntry
  %972 = load i32, i32* @x
  %973 = load i32, i32* @y
  %974 = add i32 %972, 950092513
  %975 = sub i32 %974, 1
  %976 = sub i32 %975, 950092513
  %977 = sub i32 %972, 1
  %978 = mul i32 %972, %976
  %979 = urem i32 %978, 2
  %980 = icmp eq i32 %979, 0
  %981 = icmp slt i32 %973, 10
  %982 = and i1 %980, %981
  %983 = xor i1 %980, %981
  %984 = or i1 %982, %983
  %985 = or i1 %980, %981
  %986 = select i1 %984, i32 1617385855, i32 1530182454
  store i32 %986, i32* %switchVar
  br label %loopEnd

originalBB3049:                                   ; preds = %loopEntry
  %987 = load i32, i32* %s, align 4
  %988 = sub i32 %987, 188737284
  %989 = add i32 %988, 29
  %990 = add i32 %989, 188737284
  %add175 = add nsw i32 %987, 29
  %991 = sub i32 0, %990
  %992 = sub i32 0, 31
  %993 = add i32 %991, %992
  %994 = sub i32 0, %993
  %add176 = add nsw i32 %990, 31
  %995 = load i32, i32* %f, align 4
  %996 = sub i32 %994, -1771025605
  %997 = add i32 %996, %995
  %998 = add i32 %997, -1771025605
  %add177 = add nsw i32 %994, %995
  %999 = load i32, i32* %c, align 4
  %1000 = sub i32 %998, -1399323745
  %1001 = sub i32 %1000, %999
  %1002 = add i32 %1001, -1399323745
  %sub178 = sub nsw i32 %998, %999
  store i32 %1002, i32* %s, align 4
  %1003 = load i32, i32* %s, align 4
  %call179 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1003)
  %1004 = load i32, i32* @x
  %1005 = load i32, i32* @y
  %1006 = add i32 %1004, 2117349093
  %1007 = sub i32 %1006, 1
  %1008 = sub i32 %1007, 2117349093
  %1009 = sub i32 %1004, 1
  %1010 = mul i32 %1004, %1008
  %1011 = urem i32 %1010, 2
  %1012 = icmp eq i32 %1011, 0
  %1013 = icmp slt i32 %1005, 10
  %1014 = xor i1 %1012, true
  %1015 = xor i1 %1013, true
  %1016 = xor i1 true, true
  %1017 = and i1 %1014, true
  %1018 = and i1 %1012, %1016
  %1019 = and i1 %1015, true
  %1020 = and i1 %1013, %1016
  %1021 = or i1 %1017, %1018
  %1022 = or i1 %1019, %1020
  %1023 = xor i1 %1021, %1022
  %1024 = or i1 %1014, %1015
  %1025 = xor i1 %1024, true
  %1026 = or i1 true, %1016
  %1027 = and i1 %1025, %1026
  %1028 = or i1 %1023, %1027
  %1029 = or i1 %1012, %1013
  %1030 = select i1 %1028, i32 -19109670, i32 1530182454
  store i32 %1030, i32* %switchVar
  br label %loopEnd

originalBBpart23077:                              ; preds = %loopEntry
  store i32 -1350914501, i32* %switchVar
  br label %loopEnd

if.end180:                                        ; preds = %loopEntry
  %1031 = load i32, i32* %e, align 4
  %cmp181 = icmp eq i32 %1031, 5
  %1032 = select i1 %cmp181, i32 710614564, i32 -332200959
  store i32 %1032, i32* %switchVar
  br label %loopEnd

if.then182:                                       ; preds = %loopEntry
  %1033 = load i32, i32* @x
  %1034 = load i32, i32* @y
  %1035 = add i32 %1033, 460341360
  %1036 = sub i32 %1035, 1
  %1037 = sub i32 %1036, 460341360
  %1038 = sub i32 %1033, 1
  %1039 = mul i32 %1033, %1037
  %1040 = urem i32 %1039, 2
  %1041 = icmp eq i32 %1040, 0
  %1042 = icmp slt i32 %1034, 10
  %1043 = xor i1 %1041, true
  %1044 = xor i1 %1042, true
  %1045 = xor i1 true, true
  %1046 = and i1 %1043, true
  %1047 = and i1 %1041, %1045
  %1048 = and i1 %1044, true
  %1049 = and i1 %1042, %1045
  %1050 = or i1 %1046, %1047
  %1051 = or i1 %1048, %1049
  %1052 = xor i1 %1050, %1051
  %1053 = or i1 %1043, %1044
  %1054 = xor i1 %1053, true
  %1055 = or i1 true, %1045
  %1056 = and i1 %1054, %1055
  %1057 = or i1 %1052, %1056
  %1058 = or i1 %1041, %1042
  %1059 = select i1 %1057, i32 -194869309, i32 -1353158340
  store i32 %1059, i32* %switchVar
  br label %loopEnd

originalBB3079:                                   ; preds = %loopEntry
  %1060 = load i32, i32* %s, align 4
  %1061 = add i32 %1060, 1508084853
  %1062 = add i32 %1061, 29
  %1063 = sub i32 %1062, 1508084853
  %add183 = add nsw i32 %1060, 29
  %1064 = sub i32 0, %1063
  %1065 = sub i32 0, 31
  %1066 = add i32 %1064, %1065
  %1067 = sub i32 0, %1066
  %add184 = add nsw i32 %1063, 31
  %1068 = sub i32 0, %1067
  %1069 = sub i32 0, 30
  %1070 = add i32 %1068, %1069
  %1071 = sub i32 0, %1070
  %add185 = add nsw i32 %1067, 30
  %1072 = load i32, i32* %f, align 4
  %1073 = add i32 %1071, 2135584889
  %1074 = add i32 %1073, %1072
  %1075 = sub i32 %1074, 2135584889
  %add186 = add nsw i32 %1071, %1072
  %1076 = load i32, i32* %c, align 4
  %1077 = sub i32 0, %1076
  %1078 = add i32 %1075, %1077
  %sub187 = sub nsw i32 %1075, %1076
  store i32 %1078, i32* %s, align 4
  %1079 = load i32, i32* %s, align 4
  %call188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1079)
  %1080 = load i32, i32* @x
  %1081 = load i32, i32* @y
  %1082 = sub i32 0, 1
  %1083 = add i32 %1080, %1082
  %1084 = sub i32 %1080, 1
  %1085 = mul i32 %1080, %1083
  %1086 = urem i32 %1085, 2
  %1087 = icmp eq i32 %1086, 0
  %1088 = icmp slt i32 %1081, 10
  %1089 = and i1 %1087, %1088
  %1090 = xor i1 %1087, %1088
  %1091 = or i1 %1089, %1090
  %1092 = or i1 %1087, %1088
  %1093 = select i1 %1091, i32 -370547199, i32 -1353158340
  store i32 %1093, i32* %switchVar
  br label %loopEnd

originalBBpart23113:                              ; preds = %loopEntry
  store i32 -332200959, i32* %switchVar
  br label %loopEnd

if.end189:                                        ; preds = %loopEntry
  %1094 = load i32, i32* %e, align 4
  %cmp190 = icmp eq i32 %1094, 6
  %1095 = select i1 %cmp190, i32 -1525920213, i32 1366553482
  store i32 %1095, i32* %switchVar
  br label %loopEnd

if.then191:                                       ; preds = %loopEntry
  %1096 = load i32, i32* %s, align 4
  %1097 = sub i32 %1096, 864347300
  %1098 = add i32 %1097, 29
  %1099 = add i32 %1098, 864347300
  %add192 = add nsw i32 %1096, 29
  %1100 = sub i32 0, 31
  %1101 = sub i32 %1099, %1100
  %add193 = add nsw i32 %1099, 31
  %1102 = add i32 %1101, -1381099733
  %1103 = add i32 %1102, 30
  %1104 = sub i32 %1103, -1381099733
  %add194 = add nsw i32 %1101, 30
  %1105 = add i32 %1104, -989193692
  %1106 = add i32 %1105, 31
  %1107 = sub i32 %1106, -989193692
  %add195 = add nsw i32 %1104, 31
  %1108 = load i32, i32* %f, align 4
  %1109 = sub i32 0, %1107
  %1110 = sub i32 0, %1108
  %1111 = add i32 %1109, %1110
  %1112 = sub i32 0, %1111
  %add196 = add nsw i32 %1107, %1108
  %1113 = load i32, i32* %c, align 4
  %1114 = sub i32 0, %1113
  %1115 = add i32 %1112, %1114
  %sub197 = sub nsw i32 %1112, %1113
  store i32 %1115, i32* %s, align 4
  %1116 = load i32, i32* %s, align 4
  %call198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1116)
  store i32 1366553482, i32* %switchVar
  br label %loopEnd

if.end199:                                        ; preds = %loopEntry
  %1117 = load i32, i32* %e, align 4
  %cmp200 = icmp eq i32 %1117, 7
  %1118 = select i1 %cmp200, i32 -1497074340, i32 867364564
  store i32 %1118, i32* %switchVar
  br label %loopEnd

if.then201:                                       ; preds = %loopEntry
  %1119 = load i32, i32* %s, align 4
  %1120 = add i32 %1119, 1899525857
  %1121 = add i32 %1120, 29
  %1122 = sub i32 %1121, 1899525857
  %add202 = add nsw i32 %1119, 29
  %1123 = add i32 %1122, 356496321
  %1124 = add i32 %1123, 31
  %1125 = sub i32 %1124, 356496321
  %add203 = add nsw i32 %1122, 31
  %1126 = sub i32 0, %1125
  %1127 = sub i32 0, 30
  %1128 = add i32 %1126, %1127
  %1129 = sub i32 0, %1128
  %add204 = add nsw i32 %1125, 30
  %1130 = sub i32 0, %1129
  %1131 = sub i32 0, 31
  %1132 = add i32 %1130, %1131
  %1133 = sub i32 0, %1132
  %add205 = add nsw i32 %1129, 31
  %1134 = add i32 %1133, 845717344
  %1135 = add i32 %1134, 30
  %1136 = sub i32 %1135, 845717344
  %add206 = add nsw i32 %1133, 30
  %1137 = load i32, i32* %f, align 4
  %1138 = add i32 %1136, -1865774399
  %1139 = add i32 %1138, %1137
  %1140 = sub i32 %1139, -1865774399
  %add207 = add nsw i32 %1136, %1137
  %1141 = load i32, i32* %c, align 4
  %1142 = sub i32 0, %1141
  %1143 = add i32 %1140, %1142
  %sub208 = sub nsw i32 %1140, %1141
  store i32 %1143, i32* %s, align 4
  %1144 = load i32, i32* %s, align 4
  %call209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1144)
  store i32 867364564, i32* %switchVar
  br label %loopEnd

if.end210:                                        ; preds = %loopEntry
  %1145 = load i32, i32* @x
  %1146 = load i32, i32* @y
  %1147 = sub i32 %1145, -781299479
  %1148 = sub i32 %1147, 1
  %1149 = add i32 %1148, -781299479
  %1150 = sub i32 %1145, 1
  %1151 = mul i32 %1145, %1149
  %1152 = urem i32 %1151, 2
  %1153 = icmp eq i32 %1152, 0
  %1154 = icmp slt i32 %1146, 10
  %1155 = and i1 %1153, %1154
  %1156 = xor i1 %1153, %1154
  %1157 = or i1 %1155, %1156
  %1158 = or i1 %1153, %1154
  %1159 = select i1 %1157, i32 -1741146246, i32 -1187320961
  store i32 %1159, i32* %switchVar
  br label %loopEnd

originalBB3115:                                   ; preds = %loopEntry
  %1160 = load i32, i32* %e, align 4
  %cmp211 = icmp eq i32 %1160, 8
  store i1 %cmp211, i1* %cmp211.reg2mem
  %1161 = load i32, i32* @x
  %1162 = load i32, i32* @y
  %1163 = add i32 %1161, 1671472289
  %1164 = sub i32 %1163, 1
  %1165 = sub i32 %1164, 1671472289
  %1166 = sub i32 %1161, 1
  %1167 = mul i32 %1161, %1165
  %1168 = urem i32 %1167, 2
  %1169 = icmp eq i32 %1168, 0
  %1170 = icmp slt i32 %1162, 10
  %1171 = and i1 %1169, %1170
  %1172 = xor i1 %1169, %1170
  %1173 = or i1 %1171, %1172
  %1174 = or i1 %1169, %1170
  %1175 = select i1 %1173, i32 143196828, i32 -1187320961
  store i32 %1175, i32* %switchVar
  br label %loopEnd

originalBBpart23117:                              ; preds = %loopEntry
  %cmp211.reload = load volatile i1, i1* %cmp211.reg2mem
  %1176 = select i1 %cmp211.reload, i32 907239561, i32 -2021373524
  store i32 %1176, i32* %switchVar
  br label %loopEnd

if.then212:                                       ; preds = %loopEntry
  %1177 = load i32, i32* %s, align 4
  %1178 = sub i32 0, 29
  %1179 = sub i32 %1177, %1178
  %add213 = add nsw i32 %1177, 29
  %1180 = sub i32 0, %1179
  %1181 = sub i32 0, 31
  %1182 = add i32 %1180, %1181
  %1183 = sub i32 0, %1182
  %add214 = add nsw i32 %1179, 31
  %1184 = add i32 %1183, -1685566646
  %1185 = add i32 %1184, 30
  %1186 = sub i32 %1185, -1685566646
  %add215 = add nsw i32 %1183, 30
  %1187 = sub i32 0, %1186
  %1188 = sub i32 0, 31
  %1189 = add i32 %1187, %1188
  %1190 = sub i32 0, %1189
  %add216 = add nsw i32 %1186, 31
  %1191 = sub i32 0, 30
  %1192 = sub i32 %1190, %1191
  %add217 = add nsw i32 %1190, 30
  %1193 = add i32 %1192, -876976310
  %1194 = add i32 %1193, 31
  %1195 = sub i32 %1194, -876976310
  %add218 = add nsw i32 %1192, 31
  %1196 = load i32, i32* %f, align 4
  %1197 = sub i32 0, %1195
  %1198 = sub i32 0, %1196
  %1199 = add i32 %1197, %1198
  %1200 = sub i32 0, %1199
  %add219 = add nsw i32 %1195, %1196
  %1201 = load i32, i32* %c, align 4
  %1202 = sub i32 %1200, -2018058557
  %1203 = sub i32 %1202, %1201
  %1204 = add i32 %1203, -2018058557
  %sub220 = sub nsw i32 %1200, %1201
  store i32 %1204, i32* %s, align 4
  %1205 = load i32, i32* %s, align 4
  %call221 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1205)
  store i32 -2021373524, i32* %switchVar
  br label %loopEnd

if.end222:                                        ; preds = %loopEntry
  %1206 = load i32, i32* %e, align 4
  %cmp223 = icmp eq i32 %1206, 9
  %1207 = select i1 %cmp223, i32 -952723312, i32 -1147352040
  store i32 %1207, i32* %switchVar
  br label %loopEnd

if.then224:                                       ; preds = %loopEntry
  %1208 = load i32, i32* %s, align 4
  %1209 = sub i32 0, 29
  %1210 = sub i32 %1208, %1209
  %add225 = add nsw i32 %1208, 29
  %1211 = sub i32 0, 31
  %1212 = sub i32 %1210, %1211
  %add226 = add nsw i32 %1210, 31
  %1213 = sub i32 %1212, 2049363665
  %1214 = add i32 %1213, 30
  %1215 = add i32 %1214, 2049363665
  %add227 = add nsw i32 %1212, 30
  %1216 = sub i32 0, %1215
  %1217 = sub i32 0, 31
  %1218 = add i32 %1216, %1217
  %1219 = sub i32 0, %1218
  %add228 = add nsw i32 %1215, 31
  %1220 = sub i32 0, 30
  %1221 = sub i32 %1219, %1220
  %add229 = add nsw i32 %1219, 30
  %1222 = add i32 %1221, 285341894
  %1223 = add i32 %1222, 31
  %1224 = sub i32 %1223, 285341894
  %add230 = add nsw i32 %1221, 31
  %1225 = add i32 %1224, 1548765002
  %1226 = add i32 %1225, 31
  %1227 = sub i32 %1226, 1548765002
  %add231 = add nsw i32 %1224, 31
  %1228 = load i32, i32* %f, align 4
  %1229 = add i32 %1227, 1463866353
  %1230 = add i32 %1229, %1228
  %1231 = sub i32 %1230, 1463866353
  %add232 = add nsw i32 %1227, %1228
  %1232 = load i32, i32* %c, align 4
  %1233 = sub i32 0, %1232
  %1234 = add i32 %1231, %1233
  %sub233 = sub nsw i32 %1231, %1232
  store i32 %1234, i32* %s, align 4
  %1235 = load i32, i32* %s, align 4
  %call234 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1235)
  store i32 -1147352040, i32* %switchVar
  br label %loopEnd

if.end235:                                        ; preds = %loopEntry
  %1236 = load i32, i32* %e, align 4
  %cmp236 = icmp eq i32 %1236, 10
  %1237 = select i1 %cmp236, i32 47004207, i32 1485411678
  store i32 %1237, i32* %switchVar
  br label %loopEnd

if.then237:                                       ; preds = %loopEntry
  %1238 = load i32, i32* @x
  %1239 = load i32, i32* @y
  %1240 = sub i32 %1238, -1721584046
  %1241 = sub i32 %1240, 1
  %1242 = add i32 %1241, -1721584046
  %1243 = sub i32 %1238, 1
  %1244 = mul i32 %1238, %1242
  %1245 = urem i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  %1247 = icmp slt i32 %1239, 10
  %1248 = and i1 %1246, %1247
  %1249 = xor i1 %1246, %1247
  %1250 = or i1 %1248, %1249
  %1251 = or i1 %1246, %1247
  %1252 = select i1 %1250, i32 574473160, i32 1815897245
  store i32 %1252, i32* %switchVar
  br label %loopEnd

originalBB3119:                                   ; preds = %loopEntry
  %1253 = load i32, i32* %s, align 4
  %1254 = sub i32 0, %1253
  %1255 = sub i32 0, 29
  %1256 = add i32 %1254, %1255
  %1257 = sub i32 0, %1256
  %add238 = add nsw i32 %1253, 29
  %1258 = sub i32 0, %1257
  %1259 = sub i32 0, 31
  %1260 = add i32 %1258, %1259
  %1261 = sub i32 0, %1260
  %add239 = add nsw i32 %1257, 31
  %1262 = sub i32 0, 30
  %1263 = sub i32 %1261, %1262
  %add240 = add nsw i32 %1261, 30
  %1264 = sub i32 0, 31
  %1265 = sub i32 %1263, %1264
  %add241 = add nsw i32 %1263, 31
  %1266 = sub i32 %1265, 160106004
  %1267 = add i32 %1266, 30
  %1268 = add i32 %1267, 160106004
  %add242 = add nsw i32 %1265, 30
  %1269 = sub i32 0, %1268
  %1270 = sub i32 0, 31
  %1271 = add i32 %1269, %1270
  %1272 = sub i32 0, %1271
  %add243 = add nsw i32 %1268, 31
  %1273 = sub i32 %1272, -203475820
  %1274 = add i32 %1273, 31
  %1275 = add i32 %1274, -203475820
  %add244 = add nsw i32 %1272, 31
  %1276 = sub i32 0, 30
  %1277 = sub i32 %1275, %1276
  %add245 = add nsw i32 %1275, 30
  %1278 = load i32, i32* %f, align 4
  %1279 = add i32 %1277, 329492353
  %1280 = add i32 %1279, %1278
  %1281 = sub i32 %1280, 329492353
  %add246 = add nsw i32 %1277, %1278
  %1282 = load i32, i32* %c, align 4
  %1283 = add i32 %1281, -499124272
  %1284 = sub i32 %1283, %1282
  %1285 = sub i32 %1284, -499124272
  %sub247 = sub nsw i32 %1281, %1282
  store i32 %1285, i32* %s, align 4
  %1286 = load i32, i32* %s, align 4
  %call248 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1286)
  %1287 = load i32, i32* @x
  %1288 = load i32, i32* @y
  %1289 = sub i32 %1287, 1840952683
  %1290 = sub i32 %1289, 1
  %1291 = add i32 %1290, 1840952683
  %1292 = sub i32 %1287, 1
  %1293 = mul i32 %1287, %1291
  %1294 = urem i32 %1293, 2
  %1295 = icmp eq i32 %1294, 0
  %1296 = icmp slt i32 %1288, 10
  %1297 = and i1 %1295, %1296
  %1298 = xor i1 %1295, %1296
  %1299 = or i1 %1297, %1298
  %1300 = or i1 %1295, %1296
  %1301 = select i1 %1299, i32 -1757637276, i32 1815897245
  store i32 %1301, i32* %switchVar
  br label %loopEnd

originalBBpart23164:                              ; preds = %loopEntry
  store i32 1485411678, i32* %switchVar
  br label %loopEnd

if.end249:                                        ; preds = %loopEntry
  %1302 = load i32, i32* @x
  %1303 = load i32, i32* @y
  %1304 = sub i32 0, 1
  %1305 = add i32 %1302, %1304
  %1306 = sub i32 %1302, 1
  %1307 = mul i32 %1302, %1305
  %1308 = urem i32 %1307, 2
  %1309 = icmp eq i32 %1308, 0
  %1310 = icmp slt i32 %1303, 10
  %1311 = xor i1 %1309, true
  %1312 = xor i1 %1310, true
  %1313 = xor i1 true, true
  %1314 = and i1 %1311, true
  %1315 = and i1 %1309, %1313
  %1316 = and i1 %1312, true
  %1317 = and i1 %1310, %1313
  %1318 = or i1 %1314, %1315
  %1319 = or i1 %1316, %1317
  %1320 = xor i1 %1318, %1319
  %1321 = or i1 %1311, %1312
  %1322 = xor i1 %1321, true
  %1323 = or i1 true, %1313
  %1324 = and i1 %1322, %1323
  %1325 = or i1 %1320, %1324
  %1326 = or i1 %1309, %1310
  %1327 = select i1 %1325, i32 1276490516, i32 465290492
  store i32 %1327, i32* %switchVar
  br label %loopEnd

originalBB3166:                                   ; preds = %loopEntry
  %1328 = load i32, i32* %e, align 4
  %cmp250 = icmp eq i32 %1328, 11
  store i1 %cmp250, i1* %cmp250.reg2mem
  %1329 = load i32, i32* @x
  %1330 = load i32, i32* @y
  %1331 = add i32 %1329, -356318869
  %1332 = sub i32 %1331, 1
  %1333 = sub i32 %1332, -356318869
  %1334 = sub i32 %1329, 1
  %1335 = mul i32 %1329, %1333
  %1336 = urem i32 %1335, 2
  %1337 = icmp eq i32 %1336, 0
  %1338 = icmp slt i32 %1330, 10
  %1339 = xor i1 %1337, true
  %1340 = xor i1 %1338, true
  %1341 = xor i1 true, true
  %1342 = and i1 %1339, true
  %1343 = and i1 %1337, %1341
  %1344 = and i1 %1340, true
  %1345 = and i1 %1338, %1341
  %1346 = or i1 %1342, %1343
  %1347 = or i1 %1344, %1345
  %1348 = xor i1 %1346, %1347
  %1349 = or i1 %1339, %1340
  %1350 = xor i1 %1349, true
  %1351 = or i1 true, %1341
  %1352 = and i1 %1350, %1351
  %1353 = or i1 %1348, %1352
  %1354 = or i1 %1337, %1338
  %1355 = select i1 %1353, i32 1448341749, i32 465290492
  store i32 %1355, i32* %switchVar
  br label %loopEnd

originalBBpart23168:                              ; preds = %loopEntry
  %cmp250.reload = load volatile i1, i1* %cmp250.reg2mem
  %1356 = select i1 %cmp250.reload, i32 640912339, i32 -1630659476
  store i32 %1356, i32* %switchVar
  br label %loopEnd

if.then251:                                       ; preds = %loopEntry
  %1357 = load i32, i32* %s, align 4
  %1358 = add i32 %1357, -1772330056
  %1359 = add i32 %1358, 29
  %1360 = sub i32 %1359, -1772330056
  %add252 = add nsw i32 %1357, 29
  %1361 = sub i32 0, 31
  %1362 = sub i32 %1360, %1361
  %add253 = add nsw i32 %1360, 31
  %1363 = sub i32 %1362, -681882338
  %1364 = add i32 %1363, 30
  %1365 = add i32 %1364, -681882338
  %add254 = add nsw i32 %1362, 30
  %1366 = sub i32 0, %1365
  %1367 = sub i32 0, 31
  %1368 = add i32 %1366, %1367
  %1369 = sub i32 0, %1368
  %add255 = add nsw i32 %1365, 31
  %1370 = sub i32 0, 30
  %1371 = sub i32 %1369, %1370
  %add256 = add nsw i32 %1369, 30
  %1372 = add i32 %1371, -1626127001
  %1373 = add i32 %1372, 31
  %1374 = sub i32 %1373, -1626127001
  %add257 = add nsw i32 %1371, 31
  %1375 = sub i32 0, 31
  %1376 = sub i32 %1374, %1375
  %add258 = add nsw i32 %1374, 31
  %1377 = sub i32 0, %1376
  %1378 = sub i32 0, 30
  %1379 = add i32 %1377, %1378
  %1380 = sub i32 0, %1379
  %add259 = add nsw i32 %1376, 30
  %1381 = sub i32 %1380, 1020352905
  %1382 = add i32 %1381, 31
  %1383 = add i32 %1382, 1020352905
  %add260 = add nsw i32 %1380, 31
  %1384 = load i32, i32* %f, align 4
  %1385 = sub i32 0, %1384
  %1386 = sub i32 %1383, %1385
  %add261 = add nsw i32 %1383, %1384
  %1387 = load i32, i32* %c, align 4
  %1388 = sub i32 %1386, 520682231
  %1389 = sub i32 %1388, %1387
  %1390 = add i32 %1389, 520682231
  %sub262 = sub nsw i32 %1386, %1387
  store i32 %1390, i32* %s, align 4
  %1391 = load i32, i32* %s, align 4
  %call263 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1391)
  store i32 -1630659476, i32* %switchVar
  br label %loopEnd

if.end264:                                        ; preds = %loopEntry
  %1392 = load i32, i32* @x
  %1393 = load i32, i32* @y
  %1394 = sub i32 %1392, -1021299560
  %1395 = sub i32 %1394, 1
  %1396 = add i32 %1395, -1021299560
  %1397 = sub i32 %1392, 1
  %1398 = mul i32 %1392, %1396
  %1399 = urem i32 %1398, 2
  %1400 = icmp eq i32 %1399, 0
  %1401 = icmp slt i32 %1393, 10
  %1402 = and i1 %1400, %1401
  %1403 = xor i1 %1400, %1401
  %1404 = or i1 %1402, %1403
  %1405 = or i1 %1400, %1401
  %1406 = select i1 %1404, i32 -1658459582, i32 -1199746569
  store i32 %1406, i32* %switchVar
  br label %loopEnd

originalBB3170:                                   ; preds = %loopEntry
  %1407 = load i32, i32* %e, align 4
  %cmp265 = icmp eq i32 %1407, 12
  store i1 %cmp265, i1* %cmp265.reg2mem
  %1408 = load i32, i32* @x
  %1409 = load i32, i32* @y
  %1410 = sub i32 0, 1
  %1411 = add i32 %1408, %1410
  %1412 = sub i32 %1408, 1
  %1413 = mul i32 %1408, %1411
  %1414 = urem i32 %1413, 2
  %1415 = icmp eq i32 %1414, 0
  %1416 = icmp slt i32 %1409, 10
  %1417 = xor i1 %1415, true
  %1418 = xor i1 %1416, true
  %1419 = xor i1 false, true
  %1420 = and i1 %1417, false
  %1421 = and i1 %1415, %1419
  %1422 = and i1 %1418, false
  %1423 = and i1 %1416, %1419
  %1424 = or i1 %1420, %1421
  %1425 = or i1 %1422, %1423
  %1426 = xor i1 %1424, %1425
  %1427 = or i1 %1417, %1418
  %1428 = xor i1 %1427, true
  %1429 = or i1 false, %1419
  %1430 = and i1 %1428, %1429
  %1431 = or i1 %1426, %1430
  %1432 = or i1 %1415, %1416
  %1433 = select i1 %1431, i32 1422629385, i32 -1199746569
  store i32 %1433, i32* %switchVar
  br label %loopEnd

originalBBpart23172:                              ; preds = %loopEntry
  %cmp265.reload = load volatile i1, i1* %cmp265.reg2mem
  %1434 = select i1 %cmp265.reload, i32 -1992649065, i32 1924998353
  store i32 %1434, i32* %switchVar
  br label %loopEnd

if.then266:                                       ; preds = %loopEntry
  %1435 = load i32, i32* @x
  %1436 = load i32, i32* @y
  %1437 = add i32 %1435, -510870417
  %1438 = sub i32 %1437, 1
  %1439 = sub i32 %1438, -510870417
  %1440 = sub i32 %1435, 1
  %1441 = mul i32 %1435, %1439
  %1442 = urem i32 %1441, 2
  %1443 = icmp eq i32 %1442, 0
  %1444 = icmp slt i32 %1436, 10
  %1445 = xor i1 %1443, true
  %1446 = xor i1 %1444, true
  %1447 = xor i1 true, true
  %1448 = and i1 %1445, true
  %1449 = and i1 %1443, %1447
  %1450 = and i1 %1446, true
  %1451 = and i1 %1444, %1447
  %1452 = or i1 %1448, %1449
  %1453 = or i1 %1450, %1451
  %1454 = xor i1 %1452, %1453
  %1455 = or i1 %1445, %1446
  %1456 = xor i1 %1455, true
  %1457 = or i1 true, %1447
  %1458 = and i1 %1456, %1457
  %1459 = or i1 %1454, %1458
  %1460 = or i1 %1443, %1444
  %1461 = select i1 %1459, i32 152029212, i32 1337650707
  store i32 %1461, i32* %switchVar
  br label %loopEnd

originalBB3174:                                   ; preds = %loopEntry
  %1462 = load i32, i32* %s, align 4
  %1463 = sub i32 0, %1462
  %1464 = sub i32 0, 29
  %1465 = add i32 %1463, %1464
  %1466 = sub i32 0, %1465
  %add267 = add nsw i32 %1462, 29
  %1467 = sub i32 0, %1466
  %1468 = sub i32 0, 31
  %1469 = add i32 %1467, %1468
  %1470 = sub i32 0, %1469
  %add268 = add nsw i32 %1466, 31
  %1471 = sub i32 0, 30
  %1472 = sub i32 %1470, %1471
  %add269 = add nsw i32 %1470, 30
  %1473 = sub i32 0, 31
  %1474 = sub i32 %1472, %1473
  %add270 = add nsw i32 %1472, 31
  %1475 = add i32 %1474, 1851719918
  %1476 = add i32 %1475, 30
  %1477 = sub i32 %1476, 1851719918
  %add271 = add nsw i32 %1474, 30
  %1478 = sub i32 0, %1477
  %1479 = sub i32 0, 31
  %1480 = add i32 %1478, %1479
  %1481 = sub i32 0, %1480
  %add272 = add nsw i32 %1477, 31
  %1482 = sub i32 0, %1481
  %1483 = sub i32 0, 31
  %1484 = add i32 %1482, %1483
  %1485 = sub i32 0, %1484
  %add273 = add nsw i32 %1481, 31
  %1486 = sub i32 %1485, -28908052
  %1487 = add i32 %1486, 30
  %1488 = add i32 %1487, -28908052
  %add274 = add nsw i32 %1485, 30
  %1489 = add i32 %1488, 708678630
  %1490 = add i32 %1489, 31
  %1491 = sub i32 %1490, 708678630
  %add275 = add nsw i32 %1488, 31
  %1492 = sub i32 0, %1491
  %1493 = sub i32 0, 30
  %1494 = add i32 %1492, %1493
  %1495 = sub i32 0, %1494
  %add276 = add nsw i32 %1491, 30
  %1496 = load i32, i32* %f, align 4
  %1497 = sub i32 0, %1495
  %1498 = sub i32 0, %1496
  %1499 = add i32 %1497, %1498
  %1500 = sub i32 0, %1499
  %add277 = add nsw i32 %1495, %1496
  %1501 = load i32, i32* %c, align 4
  %1502 = sub i32 %1500, 693552007
  %1503 = sub i32 %1502, %1501
  %1504 = add i32 %1503, 693552007
  %sub278 = sub nsw i32 %1500, %1501
  store i32 %1504, i32* %s, align 4
  %1505 = load i32, i32* %s, align 4
  %call279 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1505)
  %1506 = load i32, i32* @x
  %1507 = load i32, i32* @y
  %1508 = sub i32 0, 1
  %1509 = add i32 %1506, %1508
  %1510 = sub i32 %1506, 1
  %1511 = mul i32 %1506, %1509
  %1512 = urem i32 %1511, 2
  %1513 = icmp eq i32 %1512, 0
  %1514 = icmp slt i32 %1507, 10
  %1515 = xor i1 %1513, true
  %1516 = xor i1 %1514, true
  %1517 = xor i1 true, true
  %1518 = and i1 %1515, true
  %1519 = and i1 %1513, %1517
  %1520 = and i1 %1516, true
  %1521 = and i1 %1514, %1517
  %1522 = or i1 %1518, %1519
  %1523 = or i1 %1520, %1521
  %1524 = xor i1 %1522, %1523
  %1525 = or i1 %1515, %1516
  %1526 = xor i1 %1525, true
  %1527 = or i1 true, %1517
  %1528 = and i1 %1526, %1527
  %1529 = or i1 %1524, %1528
  %1530 = or i1 %1513, %1514
  %1531 = select i1 %1529, i32 433913187, i32 1337650707
  store i32 %1531, i32* %switchVar
  br label %loopEnd

originalBBpart23258:                              ; preds = %loopEntry
  store i32 1924998353, i32* %switchVar
  br label %loopEnd

if.end280:                                        ; preds = %loopEntry
  %1532 = load i32, i32* @x
  %1533 = load i32, i32* @y
  %1534 = add i32 %1532, 1565116906
  %1535 = sub i32 %1534, 1
  %1536 = sub i32 %1535, 1565116906
  %1537 = sub i32 %1532, 1
  %1538 = mul i32 %1532, %1536
  %1539 = urem i32 %1538, 2
  %1540 = icmp eq i32 %1539, 0
  %1541 = icmp slt i32 %1533, 10
  %1542 = and i1 %1540, %1541
  %1543 = xor i1 %1540, %1541
  %1544 = or i1 %1542, %1543
  %1545 = or i1 %1540, %1541
  %1546 = select i1 %1544, i32 1498202359, i32 1082313531
  store i32 %1546, i32* %switchVar
  br label %loopEnd

originalBB3260:                                   ; preds = %loopEntry
  %1547 = load i32, i32* @x
  %1548 = load i32, i32* @y
  %1549 = add i32 %1547, -1087933461
  %1550 = sub i32 %1549, 1
  %1551 = sub i32 %1550, -1087933461
  %1552 = sub i32 %1547, 1
  %1553 = mul i32 %1547, %1551
  %1554 = urem i32 %1553, 2
  %1555 = icmp eq i32 %1554, 0
  %1556 = icmp slt i32 %1548, 10
  %1557 = xor i1 %1555, true
  %1558 = xor i1 %1556, true
  %1559 = xor i1 true, true
  %1560 = and i1 %1557, true
  %1561 = and i1 %1555, %1559
  %1562 = and i1 %1558, true
  %1563 = and i1 %1556, %1559
  %1564 = or i1 %1560, %1561
  %1565 = or i1 %1562, %1563
  %1566 = xor i1 %1564, %1565
  %1567 = or i1 %1557, %1558
  %1568 = xor i1 %1567, true
  %1569 = or i1 true, %1559
  %1570 = and i1 %1568, %1569
  %1571 = or i1 %1566, %1570
  %1572 = or i1 %1555, %1556
  %1573 = select i1 %1571, i32 1604871057, i32 1082313531
  store i32 %1573, i32* %switchVar
  br label %loopEnd

originalBBpart23262:                              ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb281:                                         ; preds = %loopEntry
  %1574 = load i32, i32* %e, align 4
  %cmp282 = icmp eq i32 %1574, 1
  %1575 = select i1 %cmp282, i32 959591069, i32 977005313
  store i32 %1575, i32* %switchVar
  br label %loopEnd

if.then283:                                       ; preds = %loopEntry
  %1576 = load i32, i32* @x
  %1577 = load i32, i32* @y
  %1578 = add i32 %1576, -1000789182
  %1579 = sub i32 %1578, 1
  %1580 = sub i32 %1579, -1000789182
  %1581 = sub i32 %1576, 1
  %1582 = mul i32 %1576, %1580
  %1583 = urem i32 %1582, 2
  %1584 = icmp eq i32 %1583, 0
  %1585 = icmp slt i32 %1577, 10
  %1586 = and i1 %1584, %1585
  %1587 = xor i1 %1584, %1585
  %1588 = or i1 %1586, %1587
  %1589 = or i1 %1584, %1585
  %1590 = select i1 %1588, i32 -651562586, i32 -1444114251
  store i32 %1590, i32* %switchVar
  br label %loopEnd

originalBB3264:                                   ; preds = %loopEntry
  %1591 = load i32, i32* %s, align 4
  %1592 = sub i32 %1591, -517287479
  %1593 = sub i32 %1592, 29
  %1594 = add i32 %1593, -517287479
  %sub284 = sub nsw i32 %1591, 29
  %1595 = sub i32 0, 31
  %1596 = add i32 %1594, %1595
  %sub285 = sub nsw i32 %1594, 31
  %1597 = load i32, i32* %f, align 4
  %1598 = add i32 %1596, -1091223224
  %1599 = add i32 %1598, %1597
  %1600 = sub i32 %1599, -1091223224
  %add286 = add nsw i32 %1596, %1597
  %1601 = load i32, i32* %c, align 4
  %1602 = add i32 %1600, -1150836481
  %1603 = sub i32 %1602, %1601
  %1604 = sub i32 %1603, -1150836481
  %sub287 = sub nsw i32 %1600, %1601
  store i32 %1604, i32* %s, align 4
  %1605 = load i32, i32* %s, align 4
  %call288 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1605)
  %1606 = load i32, i32* @x
  %1607 = load i32, i32* @y
  %1608 = sub i32 0, 1
  %1609 = add i32 %1606, %1608
  %1610 = sub i32 %1606, 1
  %1611 = mul i32 %1606, %1609
  %1612 = urem i32 %1611, 2
  %1613 = icmp eq i32 %1612, 0
  %1614 = icmp slt i32 %1607, 10
  %1615 = and i1 %1613, %1614
  %1616 = xor i1 %1613, %1614
  %1617 = or i1 %1615, %1616
  %1618 = or i1 %1613, %1614
  %1619 = select i1 %1617, i32 1320408938, i32 -1444114251
  store i32 %1619, i32* %switchVar
  br label %loopEnd

originalBBpart23291:                              ; preds = %loopEntry
  store i32 977005313, i32* %switchVar
  br label %loopEnd

if.end289:                                        ; preds = %loopEntry
  %1620 = load i32, i32* %e, align 4
  %cmp290 = icmp eq i32 %1620, 2
  %1621 = select i1 %cmp290, i32 -1502588719, i32 1264184839
  store i32 %1621, i32* %switchVar
  br label %loopEnd

if.then291:                                       ; preds = %loopEntry
  %1622 = load i32, i32* @x
  %1623 = load i32, i32* @y
  %1624 = add i32 %1622, 2062314566
  %1625 = sub i32 %1624, 1
  %1626 = sub i32 %1625, 2062314566
  %1627 = sub i32 %1622, 1
  %1628 = mul i32 %1622, %1626
  %1629 = urem i32 %1628, 2
  %1630 = icmp eq i32 %1629, 0
  %1631 = icmp slt i32 %1623, 10
  %1632 = and i1 %1630, %1631
  %1633 = xor i1 %1630, %1631
  %1634 = or i1 %1632, %1633
  %1635 = or i1 %1630, %1631
  %1636 = select i1 %1634, i32 1164339277, i32 1932949694
  store i32 %1636, i32* %switchVar
  br label %loopEnd

originalBB3293:                                   ; preds = %loopEntry
  %1637 = load i32, i32* %s, align 4
  %1638 = add i32 %1637, -1992546422
  %1639 = sub i32 %1638, 29
  %1640 = sub i32 %1639, -1992546422
  %sub292 = sub nsw i32 %1637, 29
  %1641 = load i32, i32* %f, align 4
  %1642 = sub i32 0, %1641
  %1643 = sub i32 %1640, %1642
  %add293 = add nsw i32 %1640, %1641
  %1644 = load i32, i32* %c, align 4
  %1645 = add i32 %1643, 1541752809
  %1646 = sub i32 %1645, %1644
  %1647 = sub i32 %1646, 1541752809
  %sub294 = sub nsw i32 %1643, %1644
  store i32 %1647, i32* %s, align 4
  %1648 = load i32, i32* %s, align 4
  %call295 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1648)
  %1649 = load i32, i32* @x
  %1650 = load i32, i32* @y
  %1651 = sub i32 %1649, -1827494059
  %1652 = sub i32 %1651, 1
  %1653 = add i32 %1652, -1827494059
  %1654 = sub i32 %1649, 1
  %1655 = mul i32 %1649, %1653
  %1656 = urem i32 %1655, 2
  %1657 = icmp eq i32 %1656, 0
  %1658 = icmp slt i32 %1650, 10
  %1659 = xor i1 %1657, true
  %1660 = xor i1 %1658, true
  %1661 = xor i1 true, true
  %1662 = and i1 %1659, true
  %1663 = and i1 %1657, %1661
  %1664 = and i1 %1660, true
  %1665 = and i1 %1658, %1661
  %1666 = or i1 %1662, %1663
  %1667 = or i1 %1664, %1665
  %1668 = xor i1 %1666, %1667
  %1669 = or i1 %1659, %1660
  %1670 = xor i1 %1669, true
  %1671 = or i1 true, %1661
  %1672 = and i1 %1670, %1671
  %1673 = or i1 %1668, %1672
  %1674 = or i1 %1657, %1658
  %1675 = select i1 %1673, i32 -1573168634, i32 1932949694
  store i32 %1675, i32* %switchVar
  br label %loopEnd

originalBBpart23312:                              ; preds = %loopEntry
  store i32 1264184839, i32* %switchVar
  br label %loopEnd

if.end296:                                        ; preds = %loopEntry
  %1676 = load i32, i32* %e, align 4
  %cmp297 = icmp eq i32 %1676, 4
  %1677 = select i1 %cmp297, i32 1095343226, i32 -90822462
  store i32 %1677, i32* %switchVar
  br label %loopEnd

if.then298:                                       ; preds = %loopEntry
  %1678 = load i32, i32* %s, align 4
  %1679 = add i32 %1678, -834421484
  %1680 = add i32 %1679, 31
  %1681 = sub i32 %1680, -834421484
  %add299 = add nsw i32 %1678, 31
  %1682 = load i32, i32* %f, align 4
  %1683 = add i32 %1681, 789144552
  %1684 = add i32 %1683, %1682
  %1685 = sub i32 %1684, 789144552
  %add300 = add nsw i32 %1681, %1682
  %1686 = load i32, i32* %c, align 4
  %1687 = add i32 %1685, -1616726564
  %1688 = sub i32 %1687, %1686
  %1689 = sub i32 %1688, -1616726564
  %sub301 = sub nsw i32 %1685, %1686
  store i32 %1689, i32* %s, align 4
  %1690 = load i32, i32* %s, align 4
  %call302 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1690)
  store i32 -90822462, i32* %switchVar
  br label %loopEnd

if.end303:                                        ; preds = %loopEntry
  %1691 = load i32, i32* %e, align 4
  %cmp304 = icmp eq i32 %1691, 5
  %1692 = select i1 %cmp304, i32 1682545356, i32 -1169010800
  store i32 %1692, i32* %switchVar
  br label %loopEnd

if.then305:                                       ; preds = %loopEntry
  %1693 = load i32, i32* %s, align 4
  %1694 = sub i32 0, %1693
  %1695 = sub i32 0, 31
  %1696 = add i32 %1694, %1695
  %1697 = sub i32 0, %1696
  %add306 = add nsw i32 %1693, 31
  %1698 = sub i32 %1697, -1895726551
  %1699 = add i32 %1698, 30
  %1700 = add i32 %1699, -1895726551
  %add307 = add nsw i32 %1697, 30
  %1701 = load i32, i32* %f, align 4
  %1702 = sub i32 0, %1701
  %1703 = sub i32 %1700, %1702
  %add308 = add nsw i32 %1700, %1701
  %1704 = load i32, i32* %c, align 4
  %1705 = sub i32 %1703, -1633133603
  %1706 = sub i32 %1705, %1704
  %1707 = add i32 %1706, -1633133603
  %sub309 = sub nsw i32 %1703, %1704
  store i32 %1707, i32* %s, align 4
  %1708 = load i32, i32* %s, align 4
  %call310 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1708)
  store i32 -1169010800, i32* %switchVar
  br label %loopEnd

if.end311:                                        ; preds = %loopEntry
  %1709 = load i32, i32* @x
  %1710 = load i32, i32* @y
  %1711 = sub i32 0, 1
  %1712 = add i32 %1709, %1711
  %1713 = sub i32 %1709, 1
  %1714 = mul i32 %1709, %1712
  %1715 = urem i32 %1714, 2
  %1716 = icmp eq i32 %1715, 0
  %1717 = icmp slt i32 %1710, 10
  %1718 = and i1 %1716, %1717
  %1719 = xor i1 %1716, %1717
  %1720 = or i1 %1718, %1719
  %1721 = or i1 %1716, %1717
  %1722 = select i1 %1720, i32 2136741556, i32 1247750002
  store i32 %1722, i32* %switchVar
  br label %loopEnd

originalBB3314:                                   ; preds = %loopEntry
  %1723 = load i32, i32* %e, align 4
  %cmp312 = icmp eq i32 %1723, 6
  store i1 %cmp312, i1* %cmp312.reg2mem
  %1724 = load i32, i32* @x
  %1725 = load i32, i32* @y
  %1726 = add i32 %1724, -2055595208
  %1727 = sub i32 %1726, 1
  %1728 = sub i32 %1727, -2055595208
  %1729 = sub i32 %1724, 1
  %1730 = mul i32 %1724, %1728
  %1731 = urem i32 %1730, 2
  %1732 = icmp eq i32 %1731, 0
  %1733 = icmp slt i32 %1725, 10
  %1734 = and i1 %1732, %1733
  %1735 = xor i1 %1732, %1733
  %1736 = or i1 %1734, %1735
  %1737 = or i1 %1732, %1733
  %1738 = select i1 %1736, i32 1353948588, i32 1247750002
  store i32 %1738, i32* %switchVar
  br label %loopEnd

originalBBpart23316:                              ; preds = %loopEntry
  %cmp312.reload = load volatile i1, i1* %cmp312.reg2mem
  %1739 = select i1 %cmp312.reload, i32 1374790435, i32 1466365369
  store i32 %1739, i32* %switchVar
  br label %loopEnd

if.then313:                                       ; preds = %loopEntry
  %1740 = load i32, i32* %s, align 4
  %1741 = sub i32 %1740, -171701622
  %1742 = add i32 %1741, 31
  %1743 = add i32 %1742, -171701622
  %add314 = add nsw i32 %1740, 31
  %1744 = sub i32 0, 30
  %1745 = sub i32 %1743, %1744
  %add315 = add nsw i32 %1743, 30
  %1746 = sub i32 0, %1745
  %1747 = sub i32 0, 31
  %1748 = add i32 %1746, %1747
  %1749 = sub i32 0, %1748
  %add316 = add nsw i32 %1745, 31
  %1750 = load i32, i32* %f, align 4
  %1751 = sub i32 0, %1750
  %1752 = sub i32 %1749, %1751
  %add317 = add nsw i32 %1749, %1750
  %1753 = load i32, i32* %c, align 4
  %1754 = sub i32 %1752, 2013493686
  %1755 = sub i32 %1754, %1753
  %1756 = add i32 %1755, 2013493686
  %sub318 = sub nsw i32 %1752, %1753
  store i32 %1756, i32* %s, align 4
  %1757 = load i32, i32* %s, align 4
  %call319 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1757)
  store i32 1466365369, i32* %switchVar
  br label %loopEnd

if.end320:                                        ; preds = %loopEntry
  %1758 = load i32, i32* @x
  %1759 = load i32, i32* @y
  %1760 = add i32 %1758, 812727787
  %1761 = sub i32 %1760, 1
  %1762 = sub i32 %1761, 812727787
  %1763 = sub i32 %1758, 1
  %1764 = mul i32 %1758, %1762
  %1765 = urem i32 %1764, 2
  %1766 = icmp eq i32 %1765, 0
  %1767 = icmp slt i32 %1759, 10
  %1768 = and i1 %1766, %1767
  %1769 = xor i1 %1766, %1767
  %1770 = or i1 %1768, %1769
  %1771 = or i1 %1766, %1767
  %1772 = select i1 %1770, i32 -1880223793, i32 2040866360
  store i32 %1772, i32* %switchVar
  br label %loopEnd

originalBB3318:                                   ; preds = %loopEntry
  %1773 = load i32, i32* %e, align 4
  %cmp321 = icmp eq i32 %1773, 7
  store i1 %cmp321, i1* %cmp321.reg2mem
  %1774 = load i32, i32* @x
  %1775 = load i32, i32* @y
  %1776 = sub i32 %1774, 594831537
  %1777 = sub i32 %1776, 1
  %1778 = add i32 %1777, 594831537
  %1779 = sub i32 %1774, 1
  %1780 = mul i32 %1774, %1778
  %1781 = urem i32 %1780, 2
  %1782 = icmp eq i32 %1781, 0
  %1783 = icmp slt i32 %1775, 10
  %1784 = xor i1 %1782, true
  %1785 = xor i1 %1783, true
  %1786 = xor i1 false, true
  %1787 = and i1 %1784, false
  %1788 = and i1 %1782, %1786
  %1789 = and i1 %1785, false
  %1790 = and i1 %1783, %1786
  %1791 = or i1 %1787, %1788
  %1792 = or i1 %1789, %1790
  %1793 = xor i1 %1791, %1792
  %1794 = or i1 %1784, %1785
  %1795 = xor i1 %1794, true
  %1796 = or i1 false, %1786
  %1797 = and i1 %1795, %1796
  %1798 = or i1 %1793, %1797
  %1799 = or i1 %1782, %1783
  %1800 = select i1 %1798, i32 1531607390, i32 2040866360
  store i32 %1800, i32* %switchVar
  br label %loopEnd

originalBBpart23320:                              ; preds = %loopEntry
  %cmp321.reload = load volatile i1, i1* %cmp321.reg2mem
  %1801 = select i1 %cmp321.reload, i32 -2054630802, i32 772631462
  store i32 %1801, i32* %switchVar
  br label %loopEnd

if.then322:                                       ; preds = %loopEntry
  %1802 = load i32, i32* %s, align 4
  %1803 = add i32 %1802, -818793766
  %1804 = add i32 %1803, 31
  %1805 = sub i32 %1804, -818793766
  %add323 = add nsw i32 %1802, 31
  %1806 = sub i32 0, %1805
  %1807 = sub i32 0, 30
  %1808 = add i32 %1806, %1807
  %1809 = sub i32 0, %1808
  %add324 = add nsw i32 %1805, 30
  %1810 = sub i32 %1809, 103797858
  %1811 = add i32 %1810, 31
  %1812 = add i32 %1811, 103797858
  %add325 = add nsw i32 %1809, 31
  %1813 = sub i32 %1812, -44376137
  %1814 = add i32 %1813, 30
  %1815 = add i32 %1814, -44376137
  %add326 = add nsw i32 %1812, 30
  %1816 = load i32, i32* %f, align 4
  %1817 = add i32 %1815, -995316957
  %1818 = add i32 %1817, %1816
  %1819 = sub i32 %1818, -995316957
  %add327 = add nsw i32 %1815, %1816
  %1820 = load i32, i32* %c, align 4
  %1821 = sub i32 %1819, 866643191
  %1822 = sub i32 %1821, %1820
  %1823 = add i32 %1822, 866643191
  %sub328 = sub nsw i32 %1819, %1820
  store i32 %1823, i32* %s, align 4
  %1824 = load i32, i32* %s, align 4
  %call329 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1824)
  store i32 772631462, i32* %switchVar
  br label %loopEnd

if.end330:                                        ; preds = %loopEntry
  %1825 = load i32, i32* %e, align 4
  %cmp331 = icmp eq i32 %1825, 8
  %1826 = select i1 %cmp331, i32 -521441175, i32 -779166883
  store i32 %1826, i32* %switchVar
  br label %loopEnd

if.then332:                                       ; preds = %loopEntry
  %1827 = load i32, i32* %s, align 4
  %1828 = sub i32 0, 31
  %1829 = sub i32 %1827, %1828
  %add333 = add nsw i32 %1827, 31
  %1830 = add i32 %1829, -2006870741
  %1831 = add i32 %1830, 30
  %1832 = sub i32 %1831, -2006870741
  %add334 = add nsw i32 %1829, 30
  %1833 = add i32 %1832, -2136051136
  %1834 = add i32 %1833, 31
  %1835 = sub i32 %1834, -2136051136
  %add335 = add nsw i32 %1832, 31
  %1836 = sub i32 0, 30
  %1837 = sub i32 %1835, %1836
  %add336 = add nsw i32 %1835, 30
  %1838 = sub i32 0, 31
  %1839 = sub i32 %1837, %1838
  %add337 = add nsw i32 %1837, 31
  %1840 = load i32, i32* %f, align 4
  %1841 = add i32 %1839, -1019188199
  %1842 = add i32 %1841, %1840
  %1843 = sub i32 %1842, -1019188199
  %add338 = add nsw i32 %1839, %1840
  %1844 = load i32, i32* %c, align 4
  %1845 = sub i32 0, %1844
  %1846 = add i32 %1843, %1845
  %sub339 = sub nsw i32 %1843, %1844
  store i32 %1846, i32* %s, align 4
  %1847 = load i32, i32* %s, align 4
  %call340 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1847)
  store i32 -779166883, i32* %switchVar
  br label %loopEnd

if.end341:                                        ; preds = %loopEntry
  %1848 = load i32, i32* %e, align 4
  %cmp342 = icmp eq i32 %1848, 9
  %1849 = select i1 %cmp342, i32 -1267062670, i32 -177762098
  store i32 %1849, i32* %switchVar
  br label %loopEnd

if.then343:                                       ; preds = %loopEntry
  %1850 = load i32, i32* %s, align 4
  %1851 = sub i32 0, 31
  %1852 = sub i32 %1850, %1851
  %add344 = add nsw i32 %1850, 31
  %1853 = sub i32 0, 30
  %1854 = sub i32 %1852, %1853
  %add345 = add nsw i32 %1852, 30
  %1855 = add i32 %1854, -1772868790
  %1856 = add i32 %1855, 31
  %1857 = sub i32 %1856, -1772868790
  %add346 = add nsw i32 %1854, 31
  %1858 = add i32 %1857, 1857617682
  %1859 = add i32 %1858, 30
  %1860 = sub i32 %1859, 1857617682
  %add347 = add nsw i32 %1857, 30
  %1861 = sub i32 0, %1860
  %1862 = sub i32 0, 31
  %1863 = add i32 %1861, %1862
  %1864 = sub i32 0, %1863
  %add348 = add nsw i32 %1860, 31
  %1865 = add i32 %1864, -1527268181
  %1866 = add i32 %1865, 31
  %1867 = sub i32 %1866, -1527268181
  %add349 = add nsw i32 %1864, 31
  %1868 = load i32, i32* %f, align 4
  %1869 = sub i32 0, %1868
  %1870 = sub i32 %1867, %1869
  %add350 = add nsw i32 %1867, %1868
  %1871 = load i32, i32* %c, align 4
  %1872 = sub i32 %1870, -1836466791
  %1873 = sub i32 %1872, %1871
  %1874 = add i32 %1873, -1836466791
  %sub351 = sub nsw i32 %1870, %1871
  store i32 %1874, i32* %s, align 4
  %1875 = load i32, i32* %s, align 4
  %call352 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1875)
  store i32 -177762098, i32* %switchVar
  br label %loopEnd

if.end353:                                        ; preds = %loopEntry
  %1876 = load i32, i32* %e, align 4
  %cmp354 = icmp eq i32 %1876, 10
  %1877 = select i1 %cmp354, i32 968465343, i32 -859919835
  store i32 %1877, i32* %switchVar
  br label %loopEnd

if.then355:                                       ; preds = %loopEntry
  %1878 = load i32, i32* %s, align 4
  %1879 = sub i32 0, %1878
  %1880 = sub i32 0, 31
  %1881 = add i32 %1879, %1880
  %1882 = sub i32 0, %1881
  %add356 = add nsw i32 %1878, 31
  %1883 = sub i32 0, 30
  %1884 = sub i32 %1882, %1883
  %add357 = add nsw i32 %1882, 30
  %1885 = sub i32 %1884, -752460674
  %1886 = add i32 %1885, 31
  %1887 = add i32 %1886, -752460674
  %add358 = add nsw i32 %1884, 31
  %1888 = add i32 %1887, -927683912
  %1889 = add i32 %1888, 30
  %1890 = sub i32 %1889, -927683912
  %add359 = add nsw i32 %1887, 30
  %1891 = sub i32 0, %1890
  %1892 = sub i32 0, 31
  %1893 = add i32 %1891, %1892
  %1894 = sub i32 0, %1893
  %add360 = add nsw i32 %1890, 31
  %1895 = sub i32 %1894, 1881643809
  %1896 = add i32 %1895, 31
  %1897 = add i32 %1896, 1881643809
  %add361 = add nsw i32 %1894, 31
  %1898 = sub i32 0, %1897
  %1899 = sub i32 0, 30
  %1900 = add i32 %1898, %1899
  %1901 = sub i32 0, %1900
  %add362 = add nsw i32 %1897, 30
  %1902 = load i32, i32* %f, align 4
  %1903 = sub i32 0, %1902
  %1904 = sub i32 %1901, %1903
  %add363 = add nsw i32 %1901, %1902
  %1905 = load i32, i32* %c, align 4
  %1906 = sub i32 0, %1905
  %1907 = add i32 %1904, %1906
  %sub364 = sub nsw i32 %1904, %1905
  store i32 %1907, i32* %s, align 4
  %1908 = load i32, i32* %s, align 4
  %call365 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1908)
  store i32 -859919835, i32* %switchVar
  br label %loopEnd

if.end366:                                        ; preds = %loopEntry
  %1909 = load i32, i32* @x
  %1910 = load i32, i32* @y
  %1911 = sub i32 %1909, 1103508714
  %1912 = sub i32 %1911, 1
  %1913 = add i32 %1912, 1103508714
  %1914 = sub i32 %1909, 1
  %1915 = mul i32 %1909, %1913
  %1916 = urem i32 %1915, 2
  %1917 = icmp eq i32 %1916, 0
  %1918 = icmp slt i32 %1910, 10
  %1919 = and i1 %1917, %1918
  %1920 = xor i1 %1917, %1918
  %1921 = or i1 %1919, %1920
  %1922 = or i1 %1917, %1918
  %1923 = select i1 %1921, i32 -112024796, i32 -1393018707
  store i32 %1923, i32* %switchVar
  br label %loopEnd

originalBB3322:                                   ; preds = %loopEntry
  %1924 = load i32, i32* %e, align 4
  %cmp367 = icmp eq i32 %1924, 11
  store i1 %cmp367, i1* %cmp367.reg2mem
  %1925 = load i32, i32* @x
  %1926 = load i32, i32* @y
  %1927 = sub i32 0, 1
  %1928 = add i32 %1925, %1927
  %1929 = sub i32 %1925, 1
  %1930 = mul i32 %1925, %1928
  %1931 = urem i32 %1930, 2
  %1932 = icmp eq i32 %1931, 0
  %1933 = icmp slt i32 %1926, 10
  %1934 = xor i1 %1932, true
  %1935 = xor i1 %1933, true
  %1936 = xor i1 true, true
  %1937 = and i1 %1934, true
  %1938 = and i1 %1932, %1936
  %1939 = and i1 %1935, true
  %1940 = and i1 %1933, %1936
  %1941 = or i1 %1937, %1938
  %1942 = or i1 %1939, %1940
  %1943 = xor i1 %1941, %1942
  %1944 = or i1 %1934, %1935
  %1945 = xor i1 %1944, true
  %1946 = or i1 true, %1936
  %1947 = and i1 %1945, %1946
  %1948 = or i1 %1943, %1947
  %1949 = or i1 %1932, %1933
  %1950 = select i1 %1948, i32 2133249099, i32 -1393018707
  store i32 %1950, i32* %switchVar
  br label %loopEnd

originalBBpart23324:                              ; preds = %loopEntry
  %cmp367.reload = load volatile i1, i1* %cmp367.reg2mem
  %1951 = select i1 %cmp367.reload, i32 1403501685, i32 -2072970079
  store i32 %1951, i32* %switchVar
  br label %loopEnd

if.then368:                                       ; preds = %loopEntry
  %1952 = load i32, i32* %s, align 4
  %1953 = sub i32 %1952, -1017701514
  %1954 = add i32 %1953, 31
  %1955 = add i32 %1954, -1017701514
  %add369 = add nsw i32 %1952, 31
  %1956 = sub i32 %1955, -1710866859
  %1957 = add i32 %1956, 30
  %1958 = add i32 %1957, -1710866859
  %add370 = add nsw i32 %1955, 30
  %1959 = sub i32 %1958, 2131507827
  %1960 = add i32 %1959, 31
  %1961 = add i32 %1960, 2131507827
  %add371 = add nsw i32 %1958, 31
  %1962 = add i32 %1961, 242621161
  %1963 = add i32 %1962, 30
  %1964 = sub i32 %1963, 242621161
  %add372 = add nsw i32 %1961, 30
  %1965 = add i32 %1964, -1929914587
  %1966 = add i32 %1965, 31
  %1967 = sub i32 %1966, -1929914587
  %add373 = add nsw i32 %1964, 31
  %1968 = sub i32 0, %1967
  %1969 = sub i32 0, 31
  %1970 = add i32 %1968, %1969
  %1971 = sub i32 0, %1970
  %add374 = add nsw i32 %1967, 31
  %1972 = sub i32 0, 30
  %1973 = sub i32 %1971, %1972
  %add375 = add nsw i32 %1971, 30
  %1974 = sub i32 0, 31
  %1975 = sub i32 %1973, %1974
  %add376 = add nsw i32 %1973, 31
  %1976 = load i32, i32* %f, align 4
  %1977 = sub i32 0, %1975
  %1978 = sub i32 0, %1976
  %1979 = add i32 %1977, %1978
  %1980 = sub i32 0, %1979
  %add377 = add nsw i32 %1975, %1976
  %1981 = load i32, i32* %c, align 4
  %1982 = add i32 %1980, 1856157465
  %1983 = sub i32 %1982, %1981
  %1984 = sub i32 %1983, 1856157465
  %sub378 = sub nsw i32 %1980, %1981
  store i32 %1984, i32* %s, align 4
  %1985 = load i32, i32* %s, align 4
  %call379 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %1985)
  store i32 -2072970079, i32* %switchVar
  br label %loopEnd

if.end380:                                        ; preds = %loopEntry
  %1986 = load i32, i32* %e, align 4
  %cmp381 = icmp eq i32 %1986, 12
  %1987 = select i1 %cmp381, i32 -1855556367, i32 -2026654503
  store i32 %1987, i32* %switchVar
  br label %loopEnd

if.then382:                                       ; preds = %loopEntry
  %1988 = load i32, i32* @x
  %1989 = load i32, i32* @y
  %1990 = add i32 %1988, -1428054027
  %1991 = sub i32 %1990, 1
  %1992 = sub i32 %1991, -1428054027
  %1993 = sub i32 %1988, 1
  %1994 = mul i32 %1988, %1992
  %1995 = urem i32 %1994, 2
  %1996 = icmp eq i32 %1995, 0
  %1997 = icmp slt i32 %1989, 10
  %1998 = xor i1 %1996, true
  %1999 = xor i1 %1997, true
  %2000 = xor i1 false, true
  %2001 = and i1 %1998, false
  %2002 = and i1 %1996, %2000
  %2003 = and i1 %1999, false
  %2004 = and i1 %1997, %2000
  %2005 = or i1 %2001, %2002
  %2006 = or i1 %2003, %2004
  %2007 = xor i1 %2005, %2006
  %2008 = or i1 %1998, %1999
  %2009 = xor i1 %2008, true
  %2010 = or i1 false, %2000
  %2011 = and i1 %2009, %2010
  %2012 = or i1 %2007, %2011
  %2013 = or i1 %1996, %1997
  %2014 = select i1 %2012, i32 -1276545128, i32 1973581449
  store i32 %2014, i32* %switchVar
  br label %loopEnd

originalBB3326:                                   ; preds = %loopEntry
  %2015 = load i32, i32* %s, align 4
  %2016 = sub i32 0, 31
  %2017 = sub i32 %2015, %2016
  %add383 = add nsw i32 %2015, 31
  %2018 = sub i32 0, %2017
  %2019 = sub i32 0, 30
  %2020 = add i32 %2018, %2019
  %2021 = sub i32 0, %2020
  %add384 = add nsw i32 %2017, 30
  %2022 = sub i32 %2021, -864888919
  %2023 = add i32 %2022, 31
  %2024 = add i32 %2023, -864888919
  %add385 = add nsw i32 %2021, 31
  %2025 = add i32 %2024, -1720185122
  %2026 = add i32 %2025, 30
  %2027 = sub i32 %2026, -1720185122
  %add386 = add nsw i32 %2024, 30
  %2028 = sub i32 %2027, -2017568525
  %2029 = add i32 %2028, 31
  %2030 = add i32 %2029, -2017568525
  %add387 = add nsw i32 %2027, 31
  %2031 = sub i32 0, %2030
  %2032 = sub i32 0, 31
  %2033 = add i32 %2031, %2032
  %2034 = sub i32 0, %2033
  %add388 = add nsw i32 %2030, 31
  %2035 = sub i32 0, %2034
  %2036 = sub i32 0, 30
  %2037 = add i32 %2035, %2036
  %2038 = sub i32 0, %2037
  %add389 = add nsw i32 %2034, 30
  %2039 = add i32 %2038, -249585653
  %2040 = add i32 %2039, 31
  %2041 = sub i32 %2040, -249585653
  %add390 = add nsw i32 %2038, 31
  %2042 = sub i32 %2041, 223184919
  %2043 = add i32 %2042, 30
  %2044 = add i32 %2043, 223184919
  %add391 = add nsw i32 %2041, 30
  %2045 = load i32, i32* %f, align 4
  %2046 = sub i32 %2044, -1436749196
  %2047 = add i32 %2046, %2045
  %2048 = add i32 %2047, -1436749196
  %add392 = add nsw i32 %2044, %2045
  %2049 = load i32, i32* %c, align 4
  %2050 = sub i32 %2048, -1677131224
  %2051 = sub i32 %2050, %2049
  %2052 = add i32 %2051, -1677131224
  %sub393 = sub nsw i32 %2048, %2049
  store i32 %2052, i32* %s, align 4
  %2053 = load i32, i32* %s, align 4
  %call394 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2053)
  %2054 = load i32, i32* @x
  %2055 = load i32, i32* @y
  %2056 = add i32 %2054, -1337171815
  %2057 = sub i32 %2056, 1
  %2058 = sub i32 %2057, -1337171815
  %2059 = sub i32 %2054, 1
  %2060 = mul i32 %2054, %2058
  %2061 = urem i32 %2060, 2
  %2062 = icmp eq i32 %2061, 0
  %2063 = icmp slt i32 %2055, 10
  %2064 = xor i1 %2062, true
  %2065 = xor i1 %2063, true
  %2066 = xor i1 false, true
  %2067 = and i1 %2064, false
  %2068 = and i1 %2062, %2066
  %2069 = and i1 %2065, false
  %2070 = and i1 %2063, %2066
  %2071 = or i1 %2067, %2068
  %2072 = or i1 %2069, %2070
  %2073 = xor i1 %2071, %2072
  %2074 = or i1 %2064, %2065
  %2075 = xor i1 %2074, true
  %2076 = or i1 false, %2066
  %2077 = and i1 %2075, %2076
  %2078 = or i1 %2073, %2077
  %2079 = or i1 %2062, %2063
  %2080 = select i1 %2078, i32 -818604217, i32 1973581449
  store i32 %2080, i32* %switchVar
  br label %loopEnd

originalBBpart23412:                              ; preds = %loopEntry
  store i32 -2026654503, i32* %switchVar
  br label %loopEnd

if.end395:                                        ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb396:                                         ; preds = %loopEntry
  %2081 = load i32, i32* %e, align 4
  %cmp397 = icmp eq i32 %2081, 1
  %2082 = select i1 %cmp397, i32 1636057078, i32 2137256912
  store i32 %2082, i32* %switchVar
  br label %loopEnd

if.then398:                                       ; preds = %loopEntry
  %2083 = load i32, i32* %s, align 4
  %2084 = add i32 %2083, -1816587962
  %2085 = sub i32 %2084, 31
  %2086 = sub i32 %2085, -1816587962
  %sub399 = sub nsw i32 %2083, 31
  %2087 = sub i32 %2086, 1374331884
  %2088 = sub i32 %2087, 29
  %2089 = add i32 %2088, 1374331884
  %sub400 = sub nsw i32 %2086, 29
  %2090 = sub i32 %2089, 403515037
  %2091 = sub i32 %2090, 31
  %2092 = add i32 %2091, 403515037
  %sub401 = sub nsw i32 %2089, 31
  %2093 = load i32, i32* %f, align 4
  %2094 = add i32 %2092, 1415394740
  %2095 = add i32 %2094, %2093
  %2096 = sub i32 %2095, 1415394740
  %add402 = add nsw i32 %2092, %2093
  %2097 = load i32, i32* %c, align 4
  %2098 = add i32 %2096, -1201239418
  %2099 = sub i32 %2098, %2097
  %2100 = sub i32 %2099, -1201239418
  %sub403 = sub nsw i32 %2096, %2097
  store i32 %2100, i32* %s, align 4
  %2101 = load i32, i32* %s, align 4
  %call404 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2101)
  store i32 2137256912, i32* %switchVar
  br label %loopEnd

if.end405:                                        ; preds = %loopEntry
  %2102 = load i32, i32* %e, align 4
  %cmp406 = icmp eq i32 %2102, 2
  %2103 = select i1 %cmp406, i32 1117650677, i32 1484583645
  store i32 %2103, i32* %switchVar
  br label %loopEnd

if.then407:                                       ; preds = %loopEntry
  %2104 = load i32, i32* %s, align 4
  %2105 = sub i32 %2104, 102130148
  %2106 = sub i32 %2105, 29
  %2107 = add i32 %2106, 102130148
  %sub408 = sub nsw i32 %2104, 29
  %2108 = add i32 %2107, -360147655
  %2109 = sub i32 %2108, 31
  %2110 = sub i32 %2109, -360147655
  %sub409 = sub nsw i32 %2107, 31
  %2111 = load i32, i32* %f, align 4
  %2112 = sub i32 0, %2110
  %2113 = sub i32 0, %2111
  %2114 = add i32 %2112, %2113
  %2115 = sub i32 0, %2114
  %add410 = add nsw i32 %2110, %2111
  %2116 = load i32, i32* %c, align 4
  %2117 = sub i32 %2115, 307310770
  %2118 = sub i32 %2117, %2116
  %2119 = add i32 %2118, 307310770
  %sub411 = sub nsw i32 %2115, %2116
  store i32 %2119, i32* %s, align 4
  %2120 = load i32, i32* %s, align 4
  %call412 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2120)
  store i32 1484583645, i32* %switchVar
  br label %loopEnd

if.end413:                                        ; preds = %loopEntry
  %2121 = load i32, i32* %e, align 4
  %cmp414 = icmp eq i32 %2121, 3
  %2122 = select i1 %cmp414, i32 1566150423, i32 -72129415
  store i32 %2122, i32* %switchVar
  br label %loopEnd

if.then415:                                       ; preds = %loopEntry
  %2123 = load i32, i32* %s, align 4
  %2124 = sub i32 0, 31
  %2125 = add i32 %2123, %2124
  %sub416 = sub nsw i32 %2123, 31
  %2126 = load i32, i32* %f, align 4
  %2127 = sub i32 0, %2126
  %2128 = sub i32 %2125, %2127
  %add417 = add nsw i32 %2125, %2126
  %2129 = load i32, i32* %c, align 4
  %2130 = add i32 %2128, 1753272341
  %2131 = sub i32 %2130, %2129
  %2132 = sub i32 %2131, 1753272341
  %sub418 = sub nsw i32 %2128, %2129
  store i32 %2132, i32* %s, align 4
  %2133 = load i32, i32* %s, align 4
  %call419 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2133)
  store i32 -72129415, i32* %switchVar
  br label %loopEnd

if.end420:                                        ; preds = %loopEntry
  %2134 = load i32, i32* %e, align 4
  %cmp421 = icmp eq i32 %2134, 5
  %2135 = select i1 %cmp421, i32 -1062605699, i32 -1238820231
  store i32 %2135, i32* %switchVar
  br label %loopEnd

if.then422:                                       ; preds = %loopEntry
  %2136 = load i32, i32* @x
  %2137 = load i32, i32* @y
  %2138 = sub i32 %2136, -1300680084
  %2139 = sub i32 %2138, 1
  %2140 = add i32 %2139, -1300680084
  %2141 = sub i32 %2136, 1
  %2142 = mul i32 %2136, %2140
  %2143 = urem i32 %2142, 2
  %2144 = icmp eq i32 %2143, 0
  %2145 = icmp slt i32 %2137, 10
  %2146 = and i1 %2144, %2145
  %2147 = xor i1 %2144, %2145
  %2148 = or i1 %2146, %2147
  %2149 = or i1 %2144, %2145
  %2150 = select i1 %2148, i32 2143913474, i32 97640792
  store i32 %2150, i32* %switchVar
  br label %loopEnd

originalBB3414:                                   ; preds = %loopEntry
  %2151 = load i32, i32* %s, align 4
  %2152 = sub i32 0, 30
  %2153 = sub i32 %2151, %2152
  %add423 = add nsw i32 %2151, 30
  %2154 = load i32, i32* %f, align 4
  %2155 = add i32 %2153, -217961660
  %2156 = add i32 %2155, %2154
  %2157 = sub i32 %2156, -217961660
  %add424 = add nsw i32 %2153, %2154
  %2158 = load i32, i32* %c, align 4
  %2159 = add i32 %2157, -686579608
  %2160 = sub i32 %2159, %2158
  %2161 = sub i32 %2160, -686579608
  %sub425 = sub nsw i32 %2157, %2158
  store i32 %2161, i32* %s, align 4
  %2162 = load i32, i32* %s, align 4
  %call426 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2162)
  %2163 = load i32, i32* @x
  %2164 = load i32, i32* @y
  %2165 = sub i32 0, 1
  %2166 = add i32 %2163, %2165
  %2167 = sub i32 %2163, 1
  %2168 = mul i32 %2163, %2166
  %2169 = urem i32 %2168, 2
  %2170 = icmp eq i32 %2169, 0
  %2171 = icmp slt i32 %2164, 10
  %2172 = and i1 %2170, %2171
  %2173 = xor i1 %2170, %2171
  %2174 = or i1 %2172, %2173
  %2175 = or i1 %2170, %2171
  %2176 = select i1 %2174, i32 1887472960, i32 97640792
  store i32 %2176, i32* %switchVar
  br label %loopEnd

originalBBpart23445:                              ; preds = %loopEntry
  store i32 -1238820231, i32* %switchVar
  br label %loopEnd

if.end427:                                        ; preds = %loopEntry
  %2177 = load i32, i32* %e, align 4
  %cmp428 = icmp eq i32 %2177, 6
  %2178 = select i1 %cmp428, i32 -513468109, i32 653663952
  store i32 %2178, i32* %switchVar
  br label %loopEnd

if.then429:                                       ; preds = %loopEntry
  %2179 = load i32, i32* @x
  %2180 = load i32, i32* @y
  %2181 = add i32 %2179, -608898850
  %2182 = sub i32 %2181, 1
  %2183 = sub i32 %2182, -608898850
  %2184 = sub i32 %2179, 1
  %2185 = mul i32 %2179, %2183
  %2186 = urem i32 %2185, 2
  %2187 = icmp eq i32 %2186, 0
  %2188 = icmp slt i32 %2180, 10
  %2189 = xor i1 %2187, true
  %2190 = xor i1 %2188, true
  %2191 = xor i1 false, true
  %2192 = and i1 %2189, false
  %2193 = and i1 %2187, %2191
  %2194 = and i1 %2190, false
  %2195 = and i1 %2188, %2191
  %2196 = or i1 %2192, %2193
  %2197 = or i1 %2194, %2195
  %2198 = xor i1 %2196, %2197
  %2199 = or i1 %2189, %2190
  %2200 = xor i1 %2199, true
  %2201 = or i1 false, %2191
  %2202 = and i1 %2200, %2201
  %2203 = or i1 %2198, %2202
  %2204 = or i1 %2187, %2188
  %2205 = select i1 %2203, i32 1363543197, i32 547503991
  store i32 %2205, i32* %switchVar
  br label %loopEnd

originalBB3447:                                   ; preds = %loopEntry
  %2206 = load i32, i32* %s, align 4
  %2207 = add i32 %2206, -2071942007
  %2208 = add i32 %2207, 30
  %2209 = sub i32 %2208, -2071942007
  %add430 = add nsw i32 %2206, 30
  %2210 = sub i32 %2209, -1356699497
  %2211 = add i32 %2210, 31
  %2212 = add i32 %2211, -1356699497
  %add431 = add nsw i32 %2209, 31
  %2213 = load i32, i32* %f, align 4
  %2214 = sub i32 %2212, 575837639
  %2215 = add i32 %2214, %2213
  %2216 = add i32 %2215, 575837639
  %add432 = add nsw i32 %2212, %2213
  %2217 = load i32, i32* %c, align 4
  %2218 = sub i32 0, %2217
  %2219 = add i32 %2216, %2218
  %sub433 = sub nsw i32 %2216, %2217
  store i32 %2219, i32* %s, align 4
  %2220 = load i32, i32* %s, align 4
  %call434 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2220)
  %2221 = load i32, i32* @x
  %2222 = load i32, i32* @y
  %2223 = sub i32 0, 1
  %2224 = add i32 %2221, %2223
  %2225 = sub i32 %2221, 1
  %2226 = mul i32 %2221, %2224
  %2227 = urem i32 %2226, 2
  %2228 = icmp eq i32 %2227, 0
  %2229 = icmp slt i32 %2222, 10
  %2230 = xor i1 %2228, true
  %2231 = xor i1 %2229, true
  %2232 = xor i1 false, true
  %2233 = and i1 %2230, false
  %2234 = and i1 %2228, %2232
  %2235 = and i1 %2231, false
  %2236 = and i1 %2229, %2232
  %2237 = or i1 %2233, %2234
  %2238 = or i1 %2235, %2236
  %2239 = xor i1 %2237, %2238
  %2240 = or i1 %2230, %2231
  %2241 = xor i1 %2240, true
  %2242 = or i1 false, %2232
  %2243 = and i1 %2241, %2242
  %2244 = or i1 %2239, %2243
  %2245 = or i1 %2228, %2229
  %2246 = select i1 %2244, i32 -1390985190, i32 547503991
  store i32 %2246, i32* %switchVar
  br label %loopEnd

originalBBpart23485:                              ; preds = %loopEntry
  store i32 653663952, i32* %switchVar
  br label %loopEnd

if.end435:                                        ; preds = %loopEntry
  %2247 = load i32, i32* %e, align 4
  %cmp436 = icmp eq i32 %2247, 7
  %2248 = select i1 %cmp436, i32 -795076932, i32 2109614246
  store i32 %2248, i32* %switchVar
  br label %loopEnd

if.then437:                                       ; preds = %loopEntry
  %2249 = load i32, i32* @x
  %2250 = load i32, i32* @y
  %2251 = sub i32 0, 1
  %2252 = add i32 %2249, %2251
  %2253 = sub i32 %2249, 1
  %2254 = mul i32 %2249, %2252
  %2255 = urem i32 %2254, 2
  %2256 = icmp eq i32 %2255, 0
  %2257 = icmp slt i32 %2250, 10
  %2258 = xor i1 %2256, true
  %2259 = xor i1 %2257, true
  %2260 = xor i1 false, true
  %2261 = and i1 %2258, false
  %2262 = and i1 %2256, %2260
  %2263 = and i1 %2259, false
  %2264 = and i1 %2257, %2260
  %2265 = or i1 %2261, %2262
  %2266 = or i1 %2263, %2264
  %2267 = xor i1 %2265, %2266
  %2268 = or i1 %2258, %2259
  %2269 = xor i1 %2268, true
  %2270 = or i1 false, %2260
  %2271 = and i1 %2269, %2270
  %2272 = or i1 %2267, %2271
  %2273 = or i1 %2256, %2257
  %2274 = select i1 %2272, i32 -2010769785, i32 -433852817
  store i32 %2274, i32* %switchVar
  br label %loopEnd

originalBB3487:                                   ; preds = %loopEntry
  %2275 = load i32, i32* %s, align 4
  %2276 = sub i32 %2275, 920780766
  %2277 = add i32 %2276, 30
  %2278 = add i32 %2277, 920780766
  %add438 = add nsw i32 %2275, 30
  %2279 = sub i32 0, 31
  %2280 = sub i32 %2278, %2279
  %add439 = add nsw i32 %2278, 31
  %2281 = sub i32 %2280, -169878662
  %2282 = add i32 %2281, 30
  %2283 = add i32 %2282, -169878662
  %add440 = add nsw i32 %2280, 30
  %2284 = load i32, i32* %f, align 4
  %2285 = sub i32 0, %2284
  %2286 = sub i32 %2283, %2285
  %add441 = add nsw i32 %2283, %2284
  %2287 = load i32, i32* %c, align 4
  %2288 = sub i32 0, %2287
  %2289 = add i32 %2286, %2288
  %sub442 = sub nsw i32 %2286, %2287
  store i32 %2289, i32* %s, align 4
  %2290 = load i32, i32* %s, align 4
  %call443 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2290)
  %2291 = load i32, i32* @x
  %2292 = load i32, i32* @y
  %2293 = add i32 %2291, -39830916
  %2294 = sub i32 %2293, 1
  %2295 = sub i32 %2294, -39830916
  %2296 = sub i32 %2291, 1
  %2297 = mul i32 %2291, %2295
  %2298 = urem i32 %2297, 2
  %2299 = icmp eq i32 %2298, 0
  %2300 = icmp slt i32 %2292, 10
  %2301 = and i1 %2299, %2300
  %2302 = xor i1 %2299, %2300
  %2303 = or i1 %2301, %2302
  %2304 = or i1 %2299, %2300
  %2305 = select i1 %2303, i32 699021632, i32 -433852817
  store i32 %2305, i32* %switchVar
  br label %loopEnd

originalBBpart23522:                              ; preds = %loopEntry
  store i32 2109614246, i32* %switchVar
  br label %loopEnd

if.end444:                                        ; preds = %loopEntry
  %2306 = load i32, i32* @x
  %2307 = load i32, i32* @y
  %2308 = sub i32 0, 1
  %2309 = add i32 %2306, %2308
  %2310 = sub i32 %2306, 1
  %2311 = mul i32 %2306, %2309
  %2312 = urem i32 %2311, 2
  %2313 = icmp eq i32 %2312, 0
  %2314 = icmp slt i32 %2307, 10
  %2315 = and i1 %2313, %2314
  %2316 = xor i1 %2313, %2314
  %2317 = or i1 %2315, %2316
  %2318 = or i1 %2313, %2314
  %2319 = select i1 %2317, i32 -1229429443, i32 1905137289
  store i32 %2319, i32* %switchVar
  br label %loopEnd

originalBB3524:                                   ; preds = %loopEntry
  %2320 = load i32, i32* %e, align 4
  %cmp445 = icmp eq i32 %2320, 8
  store i1 %cmp445, i1* %cmp445.reg2mem
  %2321 = load i32, i32* @x
  %2322 = load i32, i32* @y
  %2323 = sub i32 %2321, 1771177398
  %2324 = sub i32 %2323, 1
  %2325 = add i32 %2324, 1771177398
  %2326 = sub i32 %2321, 1
  %2327 = mul i32 %2321, %2325
  %2328 = urem i32 %2327, 2
  %2329 = icmp eq i32 %2328, 0
  %2330 = icmp slt i32 %2322, 10
  %2331 = and i1 %2329, %2330
  %2332 = xor i1 %2329, %2330
  %2333 = or i1 %2331, %2332
  %2334 = or i1 %2329, %2330
  %2335 = select i1 %2333, i32 -1990546308, i32 1905137289
  store i32 %2335, i32* %switchVar
  br label %loopEnd

originalBBpart23526:                              ; preds = %loopEntry
  %cmp445.reload = load volatile i1, i1* %cmp445.reg2mem
  %2336 = select i1 %cmp445.reload, i32 771241018, i32 725691792
  store i32 %2336, i32* %switchVar
  br label %loopEnd

if.then446:                                       ; preds = %loopEntry
  %2337 = load i32, i32* @x
  %2338 = load i32, i32* @y
  %2339 = add i32 %2337, -661432789
  %2340 = sub i32 %2339, 1
  %2341 = sub i32 %2340, -661432789
  %2342 = sub i32 %2337, 1
  %2343 = mul i32 %2337, %2341
  %2344 = urem i32 %2343, 2
  %2345 = icmp eq i32 %2344, 0
  %2346 = icmp slt i32 %2338, 10
  %2347 = xor i1 %2345, true
  %2348 = xor i1 %2346, true
  %2349 = xor i1 true, true
  %2350 = and i1 %2347, true
  %2351 = and i1 %2345, %2349
  %2352 = and i1 %2348, true
  %2353 = and i1 %2346, %2349
  %2354 = or i1 %2350, %2351
  %2355 = or i1 %2352, %2353
  %2356 = xor i1 %2354, %2355
  %2357 = or i1 %2347, %2348
  %2358 = xor i1 %2357, true
  %2359 = or i1 true, %2349
  %2360 = and i1 %2358, %2359
  %2361 = or i1 %2356, %2360
  %2362 = or i1 %2345, %2346
  %2363 = select i1 %2361, i32 1346979380, i32 1012333125
  store i32 %2363, i32* %switchVar
  br label %loopEnd

originalBB3528:                                   ; preds = %loopEntry
  %2364 = load i32, i32* %s, align 4
  %2365 = add i32 %2364, 1247161807
  %2366 = add i32 %2365, 30
  %2367 = sub i32 %2366, 1247161807
  %add447 = add nsw i32 %2364, 30
  %2368 = sub i32 0, 31
  %2369 = sub i32 %2367, %2368
  %add448 = add nsw i32 %2367, 31
  %2370 = sub i32 %2369, -850778358
  %2371 = add i32 %2370, 30
  %2372 = add i32 %2371, -850778358
  %add449 = add nsw i32 %2369, 30
  %2373 = sub i32 0, %2372
  %2374 = sub i32 0, 31
  %2375 = add i32 %2373, %2374
  %2376 = sub i32 0, %2375
  %add450 = add nsw i32 %2372, 31
  %2377 = load i32, i32* %f, align 4
  %2378 = sub i32 0, %2377
  %2379 = sub i32 %2376, %2378
  %add451 = add nsw i32 %2376, %2377
  %2380 = load i32, i32* %c, align 4
  %2381 = sub i32 %2379, -1914278780
  %2382 = sub i32 %2381, %2380
  %2383 = add i32 %2382, -1914278780
  %sub452 = sub nsw i32 %2379, %2380
  store i32 %2383, i32* %s, align 4
  %2384 = load i32, i32* %s, align 4
  %call453 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2384)
  %2385 = load i32, i32* @x
  %2386 = load i32, i32* @y
  %2387 = sub i32 %2385, -1784974407
  %2388 = sub i32 %2387, 1
  %2389 = add i32 %2388, -1784974407
  %2390 = sub i32 %2385, 1
  %2391 = mul i32 %2385, %2389
  %2392 = urem i32 %2391, 2
  %2393 = icmp eq i32 %2392, 0
  %2394 = icmp slt i32 %2386, 10
  %2395 = xor i1 %2393, true
  %2396 = xor i1 %2394, true
  %2397 = xor i1 false, true
  %2398 = and i1 %2395, false
  %2399 = and i1 %2393, %2397
  %2400 = and i1 %2396, false
  %2401 = and i1 %2394, %2397
  %2402 = or i1 %2398, %2399
  %2403 = or i1 %2400, %2401
  %2404 = xor i1 %2402, %2403
  %2405 = or i1 %2395, %2396
  %2406 = xor i1 %2405, true
  %2407 = or i1 false, %2397
  %2408 = and i1 %2406, %2407
  %2409 = or i1 %2404, %2408
  %2410 = or i1 %2393, %2394
  %2411 = select i1 %2409, i32 1886578541, i32 1012333125
  store i32 %2411, i32* %switchVar
  br label %loopEnd

originalBBpart23579:                              ; preds = %loopEntry
  store i32 725691792, i32* %switchVar
  br label %loopEnd

if.end454:                                        ; preds = %loopEntry
  %2412 = load i32, i32* %e, align 4
  %cmp455 = icmp eq i32 %2412, 9
  %2413 = select i1 %cmp455, i32 619247614, i32 -3159952
  store i32 %2413, i32* %switchVar
  br label %loopEnd

if.then456:                                       ; preds = %loopEntry
  %2414 = load i32, i32* %s, align 4
  %2415 = sub i32 %2414, 69777031
  %2416 = add i32 %2415, 30
  %2417 = add i32 %2416, 69777031
  %add457 = add nsw i32 %2414, 30
  %2418 = add i32 %2417, 2135608107
  %2419 = add i32 %2418, 31
  %2420 = sub i32 %2419, 2135608107
  %add458 = add nsw i32 %2417, 31
  %2421 = sub i32 %2420, 1101725598
  %2422 = add i32 %2421, 30
  %2423 = add i32 %2422, 1101725598
  %add459 = add nsw i32 %2420, 30
  %2424 = sub i32 0, %2423
  %2425 = sub i32 0, 31
  %2426 = add i32 %2424, %2425
  %2427 = sub i32 0, %2426
  %add460 = add nsw i32 %2423, 31
  %2428 = sub i32 %2427, 520462544
  %2429 = add i32 %2428, 31
  %2430 = add i32 %2429, 520462544
  %add461 = add nsw i32 %2427, 31
  %2431 = load i32, i32* %f, align 4
  %2432 = sub i32 %2430, 1263380708
  %2433 = add i32 %2432, %2431
  %2434 = add i32 %2433, 1263380708
  %add462 = add nsw i32 %2430, %2431
  %2435 = load i32, i32* %c, align 4
  %2436 = sub i32 0, %2435
  %2437 = add i32 %2434, %2436
  %sub463 = sub nsw i32 %2434, %2435
  store i32 %2437, i32* %s, align 4
  %2438 = load i32, i32* %s, align 4
  %call464 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2438)
  store i32 -3159952, i32* %switchVar
  br label %loopEnd

if.end465:                                        ; preds = %loopEntry
  %2439 = load i32, i32* %e, align 4
  %cmp466 = icmp eq i32 %2439, 10
  %2440 = select i1 %cmp466, i32 -1742181281, i32 -1482242848
  store i32 %2440, i32* %switchVar
  br label %loopEnd

if.then467:                                       ; preds = %loopEntry
  %2441 = load i32, i32* %s, align 4
  %2442 = sub i32 0, 30
  %2443 = sub i32 %2441, %2442
  %add468 = add nsw i32 %2441, 30
  %2444 = sub i32 0, 31
  %2445 = sub i32 %2443, %2444
  %add469 = add nsw i32 %2443, 31
  %2446 = add i32 %2445, -501094446
  %2447 = add i32 %2446, 30
  %2448 = sub i32 %2447, -501094446
  %add470 = add nsw i32 %2445, 30
  %2449 = sub i32 0, %2448
  %2450 = sub i32 0, 31
  %2451 = add i32 %2449, %2450
  %2452 = sub i32 0, %2451
  %add471 = add nsw i32 %2448, 31
  %2453 = sub i32 %2452, 2053221664
  %2454 = add i32 %2453, 31
  %2455 = add i32 %2454, 2053221664
  %add472 = add nsw i32 %2452, 31
  %2456 = sub i32 0, %2455
  %2457 = sub i32 0, 30
  %2458 = add i32 %2456, %2457
  %2459 = sub i32 0, %2458
  %add473 = add nsw i32 %2455, 30
  %2460 = load i32, i32* %f, align 4
  %2461 = sub i32 %2459, -285979063
  %2462 = add i32 %2461, %2460
  %2463 = add i32 %2462, -285979063
  %add474 = add nsw i32 %2459, %2460
  %2464 = load i32, i32* %c, align 4
  %2465 = add i32 %2463, -1011615860
  %2466 = sub i32 %2465, %2464
  %2467 = sub i32 %2466, -1011615860
  %sub475 = sub nsw i32 %2463, %2464
  store i32 %2467, i32* %s, align 4
  %2468 = load i32, i32* %s, align 4
  %call476 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2468)
  store i32 -1482242848, i32* %switchVar
  br label %loopEnd

if.end477:                                        ; preds = %loopEntry
  %2469 = load i32, i32* %e, align 4
  %cmp478 = icmp eq i32 %2469, 11
  %2470 = select i1 %cmp478, i32 835989535, i32 1206610636
  store i32 %2470, i32* %switchVar
  br label %loopEnd

if.then479:                                       ; preds = %loopEntry
  %2471 = load i32, i32* %s, align 4
  %2472 = sub i32 0, 30
  %2473 = sub i32 %2471, %2472
  %add480 = add nsw i32 %2471, 30
  %2474 = sub i32 0, 31
  %2475 = sub i32 %2473, %2474
  %add481 = add nsw i32 %2473, 31
  %2476 = add i32 %2475, 1194635564
  %2477 = add i32 %2476, 30
  %2478 = sub i32 %2477, 1194635564
  %add482 = add nsw i32 %2475, 30
  %2479 = sub i32 0, %2478
  %2480 = sub i32 0, 31
  %2481 = add i32 %2479, %2480
  %2482 = sub i32 0, %2481
  %add483 = add nsw i32 %2478, 31
  %2483 = sub i32 0, 31
  %2484 = sub i32 %2482, %2483
  %add484 = add nsw i32 %2482, 31
  %2485 = sub i32 0, %2484
  %2486 = sub i32 0, 30
  %2487 = add i32 %2485, %2486
  %2488 = sub i32 0, %2487
  %add485 = add nsw i32 %2484, 30
  %2489 = sub i32 0, %2488
  %2490 = sub i32 0, 31
  %2491 = add i32 %2489, %2490
  %2492 = sub i32 0, %2491
  %add486 = add nsw i32 %2488, 31
  %2493 = load i32, i32* %f, align 4
  %2494 = sub i32 0, %2493
  %2495 = sub i32 %2492, %2494
  %add487 = add nsw i32 %2492, %2493
  %2496 = load i32, i32* %c, align 4
  %2497 = sub i32 0, %2496
  %2498 = add i32 %2495, %2497
  %sub488 = sub nsw i32 %2495, %2496
  store i32 %2498, i32* %s, align 4
  %2499 = load i32, i32* %s, align 4
  %call489 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2499)
  store i32 1206610636, i32* %switchVar
  br label %loopEnd

if.end490:                                        ; preds = %loopEntry
  %2500 = load i32, i32* %e, align 4
  %cmp491 = icmp eq i32 %2500, 12
  %2501 = select i1 %cmp491, i32 -917180129, i32 1732090312
  store i32 %2501, i32* %switchVar
  br label %loopEnd

if.then492:                                       ; preds = %loopEntry
  %2502 = load i32, i32* %s, align 4
  %2503 = sub i32 0, %2502
  %2504 = sub i32 0, 30
  %2505 = add i32 %2503, %2504
  %2506 = sub i32 0, %2505
  %add493 = add nsw i32 %2502, 30
  %2507 = sub i32 0, %2506
  %2508 = sub i32 0, 31
  %2509 = add i32 %2507, %2508
  %2510 = sub i32 0, %2509
  %add494 = add nsw i32 %2506, 31
  %2511 = add i32 %2510, 469583731
  %2512 = add i32 %2511, 30
  %2513 = sub i32 %2512, 469583731
  %add495 = add nsw i32 %2510, 30
  %2514 = sub i32 0, %2513
  %2515 = sub i32 0, 31
  %2516 = add i32 %2514, %2515
  %2517 = sub i32 0, %2516
  %add496 = add nsw i32 %2513, 31
  %2518 = sub i32 0, %2517
  %2519 = sub i32 0, 31
  %2520 = add i32 %2518, %2519
  %2521 = sub i32 0, %2520
  %add497 = add nsw i32 %2517, 31
  %2522 = sub i32 0, 30
  %2523 = sub i32 %2521, %2522
  %add498 = add nsw i32 %2521, 30
  %2524 = add i32 %2523, 1498094064
  %2525 = add i32 %2524, 31
  %2526 = sub i32 %2525, 1498094064
  %add499 = add nsw i32 %2523, 31
  %2527 = sub i32 %2526, 1609742664
  %2528 = add i32 %2527, 30
  %2529 = add i32 %2528, 1609742664
  %add500 = add nsw i32 %2526, 30
  %2530 = load i32, i32* %f, align 4
  %2531 = sub i32 %2529, -2061454093
  %2532 = add i32 %2531, %2530
  %2533 = add i32 %2532, -2061454093
  %add501 = add nsw i32 %2529, %2530
  %2534 = load i32, i32* %c, align 4
  %2535 = add i32 %2533, -778688808
  %2536 = sub i32 %2535, %2534
  %2537 = sub i32 %2536, -778688808
  %sub502 = sub nsw i32 %2533, %2534
  store i32 %2537, i32* %s, align 4
  %2538 = load i32, i32* %s, align 4
  %call503 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2538)
  store i32 1732090312, i32* %switchVar
  br label %loopEnd

if.end504:                                        ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb505:                                         ; preds = %loopEntry
  %2539 = load i32, i32* @x
  %2540 = load i32, i32* @y
  %2541 = add i32 %2539, 493829136
  %2542 = sub i32 %2541, 1
  %2543 = sub i32 %2542, 493829136
  %2544 = sub i32 %2539, 1
  %2545 = mul i32 %2539, %2543
  %2546 = urem i32 %2545, 2
  %2547 = icmp eq i32 %2546, 0
  %2548 = icmp slt i32 %2540, 10
  %2549 = xor i1 %2547, true
  %2550 = xor i1 %2548, true
  %2551 = xor i1 false, true
  %2552 = and i1 %2549, false
  %2553 = and i1 %2547, %2551
  %2554 = and i1 %2550, false
  %2555 = and i1 %2548, %2551
  %2556 = or i1 %2552, %2553
  %2557 = or i1 %2554, %2555
  %2558 = xor i1 %2556, %2557
  %2559 = or i1 %2549, %2550
  %2560 = xor i1 %2559, true
  %2561 = or i1 false, %2551
  %2562 = and i1 %2560, %2561
  %2563 = or i1 %2558, %2562
  %2564 = or i1 %2547, %2548
  %2565 = select i1 %2563, i32 -906418732, i32 887602159
  store i32 %2565, i32* %switchVar
  br label %loopEnd

originalBB3581:                                   ; preds = %loopEntry
  %2566 = load i32, i32* %e, align 4
  %cmp506 = icmp eq i32 %2566, 1
  store i1 %cmp506, i1* %cmp506.reg2mem
  %2567 = load i32, i32* @x
  %2568 = load i32, i32* @y
  %2569 = sub i32 %2567, -864538599
  %2570 = sub i32 %2569, 1
  %2571 = add i32 %2570, -864538599
  %2572 = sub i32 %2567, 1
  %2573 = mul i32 %2567, %2571
  %2574 = urem i32 %2573, 2
  %2575 = icmp eq i32 %2574, 0
  %2576 = icmp slt i32 %2568, 10
  %2577 = xor i1 %2575, true
  %2578 = xor i1 %2576, true
  %2579 = xor i1 true, true
  %2580 = and i1 %2577, true
  %2581 = and i1 %2575, %2579
  %2582 = and i1 %2578, true
  %2583 = and i1 %2576, %2579
  %2584 = or i1 %2580, %2581
  %2585 = or i1 %2582, %2583
  %2586 = xor i1 %2584, %2585
  %2587 = or i1 %2577, %2578
  %2588 = xor i1 %2587, true
  %2589 = or i1 true, %2579
  %2590 = and i1 %2588, %2589
  %2591 = or i1 %2586, %2590
  %2592 = or i1 %2575, %2576
  %2593 = select i1 %2591, i32 1884882650, i32 887602159
  store i32 %2593, i32* %switchVar
  br label %loopEnd

originalBBpart23583:                              ; preds = %loopEntry
  %cmp506.reload = load volatile i1, i1* %cmp506.reg2mem
  %2594 = select i1 %cmp506.reload, i32 -1840395905, i32 2135090252
  store i32 %2594, i32* %switchVar
  br label %loopEnd

if.then507:                                       ; preds = %loopEntry
  %2595 = load i32, i32* @x
  %2596 = load i32, i32* @y
  %2597 = sub i32 %2595, 982189326
  %2598 = sub i32 %2597, 1
  %2599 = add i32 %2598, 982189326
  %2600 = sub i32 %2595, 1
  %2601 = mul i32 %2595, %2599
  %2602 = urem i32 %2601, 2
  %2603 = icmp eq i32 %2602, 0
  %2604 = icmp slt i32 %2596, 10
  %2605 = xor i1 %2603, true
  %2606 = xor i1 %2604, true
  %2607 = xor i1 true, true
  %2608 = and i1 %2605, true
  %2609 = and i1 %2603, %2607
  %2610 = and i1 %2606, true
  %2611 = and i1 %2604, %2607
  %2612 = or i1 %2608, %2609
  %2613 = or i1 %2610, %2611
  %2614 = xor i1 %2612, %2613
  %2615 = or i1 %2605, %2606
  %2616 = xor i1 %2615, true
  %2617 = or i1 true, %2607
  %2618 = and i1 %2616, %2617
  %2619 = or i1 %2614, %2618
  %2620 = or i1 %2603, %2604
  %2621 = select i1 %2619, i32 -1716534500, i32 434131926
  store i32 %2621, i32* %switchVar
  br label %loopEnd

originalBB3585:                                   ; preds = %loopEntry
  %2622 = load i32, i32* %s, align 4
  %2623 = add i32 %2622, -2037528037
  %2624 = sub i32 %2623, 30
  %2625 = sub i32 %2624, -2037528037
  %sub508 = sub nsw i32 %2622, 30
  %2626 = add i32 %2625, 69532054
  %2627 = sub i32 %2626, 31
  %2628 = sub i32 %2627, 69532054
  %sub509 = sub nsw i32 %2625, 31
  %2629 = sub i32 %2628, -554899723
  %2630 = sub i32 %2629, 29
  %2631 = add i32 %2630, -554899723
  %sub510 = sub nsw i32 %2628, 29
  %2632 = sub i32 %2631, 1024283445
  %2633 = sub i32 %2632, 31
  %2634 = add i32 %2633, 1024283445
  %sub511 = sub nsw i32 %2631, 31
  %2635 = load i32, i32* %f, align 4
  %2636 = sub i32 0, %2635
  %2637 = sub i32 %2634, %2636
  %add512 = add nsw i32 %2634, %2635
  %2638 = load i32, i32* %c, align 4
  %2639 = sub i32 %2637, -1453383165
  %2640 = sub i32 %2639, %2638
  %2641 = add i32 %2640, -1453383165
  %sub513 = sub nsw i32 %2637, %2638
  store i32 %2641, i32* %s, align 4
  %2642 = load i32, i32* %s, align 4
  %call514 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2642)
  %2643 = load i32, i32* @x
  %2644 = load i32, i32* @y
  %2645 = sub i32 %2643, -2017508115
  %2646 = sub i32 %2645, 1
  %2647 = add i32 %2646, -2017508115
  %2648 = sub i32 %2643, 1
  %2649 = mul i32 %2643, %2647
  %2650 = urem i32 %2649, 2
  %2651 = icmp eq i32 %2650, 0
  %2652 = icmp slt i32 %2644, 10
  %2653 = xor i1 %2651, true
  %2654 = xor i1 %2652, true
  %2655 = xor i1 false, true
  %2656 = and i1 %2653, false
  %2657 = and i1 %2651, %2655
  %2658 = and i1 %2654, false
  %2659 = and i1 %2652, %2655
  %2660 = or i1 %2656, %2657
  %2661 = or i1 %2658, %2659
  %2662 = xor i1 %2660, %2661
  %2663 = or i1 %2653, %2654
  %2664 = xor i1 %2663, true
  %2665 = or i1 false, %2655
  %2666 = and i1 %2664, %2665
  %2667 = or i1 %2662, %2666
  %2668 = or i1 %2651, %2652
  %2669 = select i1 %2667, i32 947042943, i32 434131926
  store i32 %2669, i32* %switchVar
  br label %loopEnd

originalBBpart23639:                              ; preds = %loopEntry
  store i32 2135090252, i32* %switchVar
  br label %loopEnd

if.end515:                                        ; preds = %loopEntry
  %2670 = load i32, i32* %e, align 4
  %cmp516 = icmp eq i32 %2670, 2
  %2671 = select i1 %cmp516, i32 404971317, i32 -1753551876
  store i32 %2671, i32* %switchVar
  br label %loopEnd

if.then517:                                       ; preds = %loopEntry
  %2672 = load i32, i32* %s, align 4
  %2673 = add i32 %2672, -1435548260
  %2674 = sub i32 %2673, 30
  %2675 = sub i32 %2674, -1435548260
  %sub518 = sub nsw i32 %2672, 30
  %2676 = sub i32 %2675, -1088316243
  %2677 = sub i32 %2676, 31
  %2678 = add i32 %2677, -1088316243
  %sub519 = sub nsw i32 %2675, 31
  %2679 = add i32 %2678, 418241571
  %2680 = sub i32 %2679, 29
  %2681 = sub i32 %2680, 418241571
  %sub520 = sub nsw i32 %2678, 29
  %2682 = load i32, i32* %f, align 4
  %2683 = sub i32 0, %2682
  %2684 = sub i32 %2681, %2683
  %add521 = add nsw i32 %2681, %2682
  %2685 = load i32, i32* %c, align 4
  %2686 = sub i32 %2684, 400811109
  %2687 = sub i32 %2686, %2685
  %2688 = add i32 %2687, 400811109
  %sub522 = sub nsw i32 %2684, %2685
  store i32 %2688, i32* %s, align 4
  %2689 = load i32, i32* %s, align 4
  %call523 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2689)
  store i32 -1753551876, i32* %switchVar
  br label %loopEnd

if.end524:                                        ; preds = %loopEntry
  %2690 = load i32, i32* @x
  %2691 = load i32, i32* @y
  %2692 = sub i32 %2690, 234639541
  %2693 = sub i32 %2692, 1
  %2694 = add i32 %2693, 234639541
  %2695 = sub i32 %2690, 1
  %2696 = mul i32 %2690, %2694
  %2697 = urem i32 %2696, 2
  %2698 = icmp eq i32 %2697, 0
  %2699 = icmp slt i32 %2691, 10
  %2700 = and i1 %2698, %2699
  %2701 = xor i1 %2698, %2699
  %2702 = or i1 %2700, %2701
  %2703 = or i1 %2698, %2699
  %2704 = select i1 %2702, i32 -1877324521, i32 1075951145
  store i32 %2704, i32* %switchVar
  br label %loopEnd

originalBB3641:                                   ; preds = %loopEntry
  %2705 = load i32, i32* %e, align 4
  %cmp525 = icmp eq i32 %2705, 3
  store i1 %cmp525, i1* %cmp525.reg2mem
  %2706 = load i32, i32* @x
  %2707 = load i32, i32* @y
  %2708 = sub i32 0, 1
  %2709 = add i32 %2706, %2708
  %2710 = sub i32 %2706, 1
  %2711 = mul i32 %2706, %2709
  %2712 = urem i32 %2711, 2
  %2713 = icmp eq i32 %2712, 0
  %2714 = icmp slt i32 %2707, 10
  %2715 = and i1 %2713, %2714
  %2716 = xor i1 %2713, %2714
  %2717 = or i1 %2715, %2716
  %2718 = or i1 %2713, %2714
  %2719 = select i1 %2717, i32 1978422533, i32 1075951145
  store i32 %2719, i32* %switchVar
  br label %loopEnd

originalBBpart23643:                              ; preds = %loopEntry
  %cmp525.reload = load volatile i1, i1* %cmp525.reg2mem
  %2720 = select i1 %cmp525.reload, i32 835180683, i32 481432727
  store i32 %2720, i32* %switchVar
  br label %loopEnd

if.then526:                                       ; preds = %loopEntry
  %2721 = load i32, i32* %s, align 4
  %2722 = sub i32 0, 30
  %2723 = add i32 %2721, %2722
  %sub527 = sub nsw i32 %2721, 30
  %2724 = sub i32 0, 31
  %2725 = add i32 %2723, %2724
  %sub528 = sub nsw i32 %2723, 31
  %2726 = load i32, i32* %f, align 4
  %2727 = sub i32 0, %2725
  %2728 = sub i32 0, %2726
  %2729 = add i32 %2727, %2728
  %2730 = sub i32 0, %2729
  %add529 = add nsw i32 %2725, %2726
  %2731 = load i32, i32* %c, align 4
  %2732 = sub i32 0, %2731
  %2733 = add i32 %2730, %2732
  %sub530 = sub nsw i32 %2730, %2731
  store i32 %2733, i32* %s, align 4
  %2734 = load i32, i32* %s, align 4
  %call531 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2734)
  store i32 481432727, i32* %switchVar
  br label %loopEnd

if.end532:                                        ; preds = %loopEntry
  %2735 = load i32, i32* %e, align 4
  %cmp533 = icmp eq i32 %2735, 4
  %2736 = select i1 %cmp533, i32 -1523028844, i32 -1488897477
  store i32 %2736, i32* %switchVar
  br label %loopEnd

if.then534:                                       ; preds = %loopEntry
  %2737 = load i32, i32* %s, align 4
  %2738 = add i32 %2737, 1563638219
  %2739 = sub i32 %2738, 30
  %2740 = sub i32 %2739, 1563638219
  %sub535 = sub nsw i32 %2737, 30
  %2741 = load i32, i32* %f, align 4
  %2742 = sub i32 0, %2740
  %2743 = sub i32 0, %2741
  %2744 = add i32 %2742, %2743
  %2745 = sub i32 0, %2744
  %add536 = add nsw i32 %2740, %2741
  %2746 = load i32, i32* %c, align 4
  %2747 = add i32 %2745, 662623625
  %2748 = sub i32 %2747, %2746
  %2749 = sub i32 %2748, 662623625
  %sub537 = sub nsw i32 %2745, %2746
  store i32 %2749, i32* %s, align 4
  %2750 = load i32, i32* %s, align 4
  %call538 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2750)
  store i32 -1488897477, i32* %switchVar
  br label %loopEnd

if.end539:                                        ; preds = %loopEntry
  %2751 = load i32, i32* %e, align 4
  %cmp540 = icmp eq i32 %2751, 6
  %2752 = select i1 %cmp540, i32 1550994287, i32 36262153
  store i32 %2752, i32* %switchVar
  br label %loopEnd

if.then541:                                       ; preds = %loopEntry
  %2753 = load i32, i32* @x
  %2754 = load i32, i32* @y
  %2755 = sub i32 0, 1
  %2756 = add i32 %2753, %2755
  %2757 = sub i32 %2753, 1
  %2758 = mul i32 %2753, %2756
  %2759 = urem i32 %2758, 2
  %2760 = icmp eq i32 %2759, 0
  %2761 = icmp slt i32 %2754, 10
  %2762 = xor i1 %2760, true
  %2763 = xor i1 %2761, true
  %2764 = xor i1 false, true
  %2765 = and i1 %2762, false
  %2766 = and i1 %2760, %2764
  %2767 = and i1 %2763, false
  %2768 = and i1 %2761, %2764
  %2769 = or i1 %2765, %2766
  %2770 = or i1 %2767, %2768
  %2771 = xor i1 %2769, %2770
  %2772 = or i1 %2762, %2763
  %2773 = xor i1 %2772, true
  %2774 = or i1 false, %2764
  %2775 = and i1 %2773, %2774
  %2776 = or i1 %2771, %2775
  %2777 = or i1 %2760, %2761
  %2778 = select i1 %2776, i32 1707756890, i32 -261645660
  store i32 %2778, i32* %switchVar
  br label %loopEnd

originalBB3645:                                   ; preds = %loopEntry
  %2779 = load i32, i32* %s, align 4
  %2780 = sub i32 0, 31
  %2781 = sub i32 %2779, %2780
  %add542 = add nsw i32 %2779, 31
  %2782 = load i32, i32* %f, align 4
  %2783 = sub i32 %2781, 1452151490
  %2784 = add i32 %2783, %2782
  %2785 = add i32 %2784, 1452151490
  %add543 = add nsw i32 %2781, %2782
  %2786 = load i32, i32* %c, align 4
  %2787 = add i32 %2785, 479957028
  %2788 = sub i32 %2787, %2786
  %2789 = sub i32 %2788, 479957028
  %sub544 = sub nsw i32 %2785, %2786
  store i32 %2789, i32* %s, align 4
  %2790 = load i32, i32* %s, align 4
  %call545 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2790)
  %2791 = load i32, i32* @x
  %2792 = load i32, i32* @y
  %2793 = sub i32 %2791, -322304619
  %2794 = sub i32 %2793, 1
  %2795 = add i32 %2794, -322304619
  %2796 = sub i32 %2791, 1
  %2797 = mul i32 %2791, %2795
  %2798 = urem i32 %2797, 2
  %2799 = icmp eq i32 %2798, 0
  %2800 = icmp slt i32 %2792, 10
  %2801 = and i1 %2799, %2800
  %2802 = xor i1 %2799, %2800
  %2803 = or i1 %2801, %2802
  %2804 = or i1 %2799, %2800
  %2805 = select i1 %2803, i32 658449549, i32 -261645660
  store i32 %2805, i32* %switchVar
  br label %loopEnd

originalBBpart23662:                              ; preds = %loopEntry
  store i32 36262153, i32* %switchVar
  br label %loopEnd

if.end546:                                        ; preds = %loopEntry
  %2806 = load i32, i32* @x
  %2807 = load i32, i32* @y
  %2808 = sub i32 0, 1
  %2809 = add i32 %2806, %2808
  %2810 = sub i32 %2806, 1
  %2811 = mul i32 %2806, %2809
  %2812 = urem i32 %2811, 2
  %2813 = icmp eq i32 %2812, 0
  %2814 = icmp slt i32 %2807, 10
  %2815 = xor i1 %2813, true
  %2816 = xor i1 %2814, true
  %2817 = xor i1 false, true
  %2818 = and i1 %2815, false
  %2819 = and i1 %2813, %2817
  %2820 = and i1 %2816, false
  %2821 = and i1 %2814, %2817
  %2822 = or i1 %2818, %2819
  %2823 = or i1 %2820, %2821
  %2824 = xor i1 %2822, %2823
  %2825 = or i1 %2815, %2816
  %2826 = xor i1 %2825, true
  %2827 = or i1 false, %2817
  %2828 = and i1 %2826, %2827
  %2829 = or i1 %2824, %2828
  %2830 = or i1 %2813, %2814
  %2831 = select i1 %2829, i32 691387355, i32 2085962866
  store i32 %2831, i32* %switchVar
  br label %loopEnd

originalBB3664:                                   ; preds = %loopEntry
  %2832 = load i32, i32* %e, align 4
  %cmp547 = icmp eq i32 %2832, 7
  store i1 %cmp547, i1* %cmp547.reg2mem
  %2833 = load i32, i32* @x
  %2834 = load i32, i32* @y
  %2835 = add i32 %2833, 12121035
  %2836 = sub i32 %2835, 1
  %2837 = sub i32 %2836, 12121035
  %2838 = sub i32 %2833, 1
  %2839 = mul i32 %2833, %2837
  %2840 = urem i32 %2839, 2
  %2841 = icmp eq i32 %2840, 0
  %2842 = icmp slt i32 %2834, 10
  %2843 = xor i1 %2841, true
  %2844 = xor i1 %2842, true
  %2845 = xor i1 false, true
  %2846 = and i1 %2843, false
  %2847 = and i1 %2841, %2845
  %2848 = and i1 %2844, false
  %2849 = and i1 %2842, %2845
  %2850 = or i1 %2846, %2847
  %2851 = or i1 %2848, %2849
  %2852 = xor i1 %2850, %2851
  %2853 = or i1 %2843, %2844
  %2854 = xor i1 %2853, true
  %2855 = or i1 false, %2845
  %2856 = and i1 %2854, %2855
  %2857 = or i1 %2852, %2856
  %2858 = or i1 %2841, %2842
  %2859 = select i1 %2857, i32 -1019202491, i32 2085962866
  store i32 %2859, i32* %switchVar
  br label %loopEnd

originalBBpart23666:                              ; preds = %loopEntry
  %cmp547.reload = load volatile i1, i1* %cmp547.reg2mem
  %2860 = select i1 %cmp547.reload, i32 -864004520, i32 -1285400959
  store i32 %2860, i32* %switchVar
  br label %loopEnd

if.then548:                                       ; preds = %loopEntry
  %2861 = load i32, i32* @x
  %2862 = load i32, i32* @y
  %2863 = sub i32 %2861, -216312527
  %2864 = sub i32 %2863, 1
  %2865 = add i32 %2864, -216312527
  %2866 = sub i32 %2861, 1
  %2867 = mul i32 %2861, %2865
  %2868 = urem i32 %2867, 2
  %2869 = icmp eq i32 %2868, 0
  %2870 = icmp slt i32 %2862, 10
  %2871 = and i1 %2869, %2870
  %2872 = xor i1 %2869, %2870
  %2873 = or i1 %2871, %2872
  %2874 = or i1 %2869, %2870
  %2875 = select i1 %2873, i32 1985659938, i32 -340085028
  store i32 %2875, i32* %switchVar
  br label %loopEnd

originalBB3668:                                   ; preds = %loopEntry
  %2876 = load i32, i32* %s, align 4
  %2877 = sub i32 %2876, -694280097
  %2878 = add i32 %2877, 31
  %2879 = add i32 %2878, -694280097
  %add549 = add nsw i32 %2876, 31
  %2880 = add i32 %2879, 1595463513
  %2881 = add i32 %2880, 30
  %2882 = sub i32 %2881, 1595463513
  %add550 = add nsw i32 %2879, 30
  %2883 = load i32, i32* %f, align 4
  %2884 = sub i32 0, %2883
  %2885 = sub i32 %2882, %2884
  %add551 = add nsw i32 %2882, %2883
  %2886 = load i32, i32* %c, align 4
  %2887 = sub i32 %2885, 1946669800
  %2888 = sub i32 %2887, %2886
  %2889 = add i32 %2888, 1946669800
  %sub552 = sub nsw i32 %2885, %2886
  store i32 %2889, i32* %s, align 4
  %2890 = load i32, i32* %s, align 4
  %call553 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2890)
  %2891 = load i32, i32* @x
  %2892 = load i32, i32* @y
  %2893 = sub i32 0, 1
  %2894 = add i32 %2891, %2893
  %2895 = sub i32 %2891, 1
  %2896 = mul i32 %2891, %2894
  %2897 = urem i32 %2896, 2
  %2898 = icmp eq i32 %2897, 0
  %2899 = icmp slt i32 %2892, 10
  %2900 = and i1 %2898, %2899
  %2901 = xor i1 %2898, %2899
  %2902 = or i1 %2900, %2901
  %2903 = or i1 %2898, %2899
  %2904 = select i1 %2902, i32 30901507, i32 -340085028
  store i32 %2904, i32* %switchVar
  br label %loopEnd

originalBBpart23692:                              ; preds = %loopEntry
  store i32 -1285400959, i32* %switchVar
  br label %loopEnd

if.end554:                                        ; preds = %loopEntry
  %2905 = load i32, i32* %e, align 4
  %cmp555 = icmp eq i32 %2905, 8
  %2906 = select i1 %cmp555, i32 1357368317, i32 -460843698
  store i32 %2906, i32* %switchVar
  br label %loopEnd

if.then556:                                       ; preds = %loopEntry
  %2907 = load i32, i32* @x
  %2908 = load i32, i32* @y
  %2909 = sub i32 0, 1
  %2910 = add i32 %2907, %2909
  %2911 = sub i32 %2907, 1
  %2912 = mul i32 %2907, %2910
  %2913 = urem i32 %2912, 2
  %2914 = icmp eq i32 %2913, 0
  %2915 = icmp slt i32 %2908, 10
  %2916 = xor i1 %2914, true
  %2917 = xor i1 %2915, true
  %2918 = xor i1 false, true
  %2919 = and i1 %2916, false
  %2920 = and i1 %2914, %2918
  %2921 = and i1 %2917, false
  %2922 = and i1 %2915, %2918
  %2923 = or i1 %2919, %2920
  %2924 = or i1 %2921, %2922
  %2925 = xor i1 %2923, %2924
  %2926 = or i1 %2916, %2917
  %2927 = xor i1 %2926, true
  %2928 = or i1 false, %2918
  %2929 = and i1 %2927, %2928
  %2930 = or i1 %2925, %2929
  %2931 = or i1 %2914, %2915
  %2932 = select i1 %2930, i32 -1574288010, i32 1343408433
  store i32 %2932, i32* %switchVar
  br label %loopEnd

originalBB3694:                                   ; preds = %loopEntry
  %2933 = load i32, i32* %s, align 4
  %2934 = add i32 %2933, 800206024
  %2935 = add i32 %2934, 31
  %2936 = sub i32 %2935, 800206024
  %add557 = add nsw i32 %2933, 31
  %2937 = sub i32 %2936, 2069738970
  %2938 = add i32 %2937, 30
  %2939 = add i32 %2938, 2069738970
  %add558 = add nsw i32 %2936, 30
  %2940 = sub i32 0, 31
  %2941 = sub i32 %2939, %2940
  %add559 = add nsw i32 %2939, 31
  %2942 = load i32, i32* %f, align 4
  %2943 = sub i32 0, %2942
  %2944 = sub i32 %2941, %2943
  %add560 = add nsw i32 %2941, %2942
  %2945 = load i32, i32* %c, align 4
  %2946 = sub i32 %2944, 1215148858
  %2947 = sub i32 %2946, %2945
  %2948 = add i32 %2947, 1215148858
  %sub561 = sub nsw i32 %2944, %2945
  store i32 %2948, i32* %s, align 4
  %2949 = load i32, i32* %s, align 4
  %call562 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2949)
  %2950 = load i32, i32* @x
  %2951 = load i32, i32* @y
  %2952 = sub i32 %2950, 1106680714
  %2953 = sub i32 %2952, 1
  %2954 = add i32 %2953, 1106680714
  %2955 = sub i32 %2950, 1
  %2956 = mul i32 %2950, %2954
  %2957 = urem i32 %2956, 2
  %2958 = icmp eq i32 %2957, 0
  %2959 = icmp slt i32 %2951, 10
  %2960 = xor i1 %2958, true
  %2961 = xor i1 %2959, true
  %2962 = xor i1 false, true
  %2963 = and i1 %2960, false
  %2964 = and i1 %2958, %2962
  %2965 = and i1 %2961, false
  %2966 = and i1 %2959, %2962
  %2967 = or i1 %2963, %2964
  %2968 = or i1 %2965, %2966
  %2969 = xor i1 %2967, %2968
  %2970 = or i1 %2960, %2961
  %2971 = xor i1 %2970, true
  %2972 = or i1 false, %2962
  %2973 = and i1 %2971, %2972
  %2974 = or i1 %2969, %2973
  %2975 = or i1 %2958, %2959
  %2976 = select i1 %2974, i32 -850567280, i32 1343408433
  store i32 %2976, i32* %switchVar
  br label %loopEnd

originalBBpart23722:                              ; preds = %loopEntry
  store i32 -460843698, i32* %switchVar
  br label %loopEnd

if.end563:                                        ; preds = %loopEntry
  %2977 = load i32, i32* %e, align 4
  %cmp564 = icmp eq i32 %2977, 9
  %2978 = select i1 %cmp564, i32 -1539941307, i32 1870506049
  store i32 %2978, i32* %switchVar
  br label %loopEnd

if.then565:                                       ; preds = %loopEntry
  %2979 = load i32, i32* %s, align 4
  %2980 = add i32 %2979, -2012953007
  %2981 = add i32 %2980, 31
  %2982 = sub i32 %2981, -2012953007
  %add566 = add nsw i32 %2979, 31
  %2983 = add i32 %2982, 2001963015
  %2984 = add i32 %2983, 30
  %2985 = sub i32 %2984, 2001963015
  %add567 = add nsw i32 %2982, 30
  %2986 = sub i32 %2985, -1849406233
  %2987 = add i32 %2986, 31
  %2988 = add i32 %2987, -1849406233
  %add568 = add nsw i32 %2985, 31
  %2989 = sub i32 0, 31
  %2990 = sub i32 %2988, %2989
  %add569 = add nsw i32 %2988, 31
  %2991 = load i32, i32* %f, align 4
  %2992 = sub i32 %2990, -308033862
  %2993 = add i32 %2992, %2991
  %2994 = add i32 %2993, -308033862
  %add570 = add nsw i32 %2990, %2991
  %2995 = load i32, i32* %c, align 4
  %2996 = sub i32 %2994, -269919118
  %2997 = sub i32 %2996, %2995
  %2998 = add i32 %2997, -269919118
  %sub571 = sub nsw i32 %2994, %2995
  store i32 %2998, i32* %s, align 4
  %2999 = load i32, i32* %s, align 4
  %call572 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %2999)
  store i32 1870506049, i32* %switchVar
  br label %loopEnd

if.end573:                                        ; preds = %loopEntry
  %3000 = load i32, i32* %e, align 4
  %cmp574 = icmp eq i32 %3000, 10
  %3001 = select i1 %cmp574, i32 573150750, i32 -808876832
  store i32 %3001, i32* %switchVar
  br label %loopEnd

if.then575:                                       ; preds = %loopEntry
  %3002 = load i32, i32* @x
  %3003 = load i32, i32* @y
  %3004 = sub i32 %3002, 1111582234
  %3005 = sub i32 %3004, 1
  %3006 = add i32 %3005, 1111582234
  %3007 = sub i32 %3002, 1
  %3008 = mul i32 %3002, %3006
  %3009 = urem i32 %3008, 2
  %3010 = icmp eq i32 %3009, 0
  %3011 = icmp slt i32 %3003, 10
  %3012 = and i1 %3010, %3011
  %3013 = xor i1 %3010, %3011
  %3014 = or i1 %3012, %3013
  %3015 = or i1 %3010, %3011
  %3016 = select i1 %3014, i32 184368386, i32 -926074727
  store i32 %3016, i32* %switchVar
  br label %loopEnd

originalBB3724:                                   ; preds = %loopEntry
  %3017 = load i32, i32* %s, align 4
  %3018 = sub i32 0, 31
  %3019 = sub i32 %3017, %3018
  %add576 = add nsw i32 %3017, 31
  %3020 = sub i32 %3019, 1590894918
  %3021 = add i32 %3020, 30
  %3022 = add i32 %3021, 1590894918
  %add577 = add nsw i32 %3019, 30
  %3023 = add i32 %3022, -2014360531
  %3024 = add i32 %3023, 31
  %3025 = sub i32 %3024, -2014360531
  %add578 = add nsw i32 %3022, 31
  %3026 = sub i32 %3025, 1100041848
  %3027 = add i32 %3026, 31
  %3028 = add i32 %3027, 1100041848
  %add579 = add nsw i32 %3025, 31
  %3029 = sub i32 %3028, -1785670111
  %3030 = add i32 %3029, 30
  %3031 = add i32 %3030, -1785670111
  %add580 = add nsw i32 %3028, 30
  %3032 = load i32, i32* %f, align 4
  %3033 = add i32 %3031, -505199828
  %3034 = add i32 %3033, %3032
  %3035 = sub i32 %3034, -505199828
  %add581 = add nsw i32 %3031, %3032
  %3036 = load i32, i32* %c, align 4
  %3037 = sub i32 %3035, -1464425470
  %3038 = sub i32 %3037, %3036
  %3039 = add i32 %3038, -1464425470
  %sub582 = sub nsw i32 %3035, %3036
  store i32 %3039, i32* %s, align 4
  %3040 = load i32, i32* %s, align 4
  %call583 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3040)
  %3041 = load i32, i32* @x
  %3042 = load i32, i32* @y
  %3043 = sub i32 0, 1
  %3044 = add i32 %3041, %3043
  %3045 = sub i32 %3041, 1
  %3046 = mul i32 %3041, %3044
  %3047 = urem i32 %3046, 2
  %3048 = icmp eq i32 %3047, 0
  %3049 = icmp slt i32 %3042, 10
  %3050 = and i1 %3048, %3049
  %3051 = xor i1 %3048, %3049
  %3052 = or i1 %3050, %3051
  %3053 = or i1 %3048, %3049
  %3054 = select i1 %3052, i32 1735736279, i32 -926074727
  store i32 %3054, i32* %switchVar
  br label %loopEnd

originalBBpart23782:                              ; preds = %loopEntry
  store i32 -808876832, i32* %switchVar
  br label %loopEnd

if.end584:                                        ; preds = %loopEntry
  %3055 = load i32, i32* %e, align 4
  %cmp585 = icmp eq i32 %3055, 11
  %3056 = select i1 %cmp585, i32 2036326583, i32 -1858427631
  store i32 %3056, i32* %switchVar
  br label %loopEnd

if.then586:                                       ; preds = %loopEntry
  %3057 = load i32, i32* %s, align 4
  %3058 = sub i32 0, %3057
  %3059 = sub i32 0, 31
  %3060 = add i32 %3058, %3059
  %3061 = sub i32 0, %3060
  %add587 = add nsw i32 %3057, 31
  %3062 = sub i32 0, %3061
  %3063 = sub i32 0, 30
  %3064 = add i32 %3062, %3063
  %3065 = sub i32 0, %3064
  %add588 = add nsw i32 %3061, 30
  %3066 = sub i32 0, 31
  %3067 = sub i32 %3065, %3066
  %add589 = add nsw i32 %3065, 31
  %3068 = sub i32 0, %3067
  %3069 = sub i32 0, 31
  %3070 = add i32 %3068, %3069
  %3071 = sub i32 0, %3070
  %add590 = add nsw i32 %3067, 31
  %3072 = sub i32 0, 30
  %3073 = sub i32 %3071, %3072
  %add591 = add nsw i32 %3071, 30
  %3074 = sub i32 %3073, 633840325
  %3075 = add i32 %3074, 31
  %3076 = add i32 %3075, 633840325
  %add592 = add nsw i32 %3073, 31
  %3077 = load i32, i32* %f, align 4
  %3078 = add i32 %3076, 277288156
  %3079 = add i32 %3078, %3077
  %3080 = sub i32 %3079, 277288156
  %add593 = add nsw i32 %3076, %3077
  %3081 = load i32, i32* %c, align 4
  %3082 = add i32 %3080, 1155121702
  %3083 = sub i32 %3082, %3081
  %3084 = sub i32 %3083, 1155121702
  %sub594 = sub nsw i32 %3080, %3081
  store i32 %3084, i32* %s, align 4
  %3085 = load i32, i32* %s, align 4
  %call595 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3085)
  store i32 -1858427631, i32* %switchVar
  br label %loopEnd

if.end596:                                        ; preds = %loopEntry
  %3086 = load i32, i32* @x
  %3087 = load i32, i32* @y
  %3088 = sub i32 0, 1
  %3089 = add i32 %3086, %3088
  %3090 = sub i32 %3086, 1
  %3091 = mul i32 %3086, %3089
  %3092 = urem i32 %3091, 2
  %3093 = icmp eq i32 %3092, 0
  %3094 = icmp slt i32 %3087, 10
  %3095 = and i1 %3093, %3094
  %3096 = xor i1 %3093, %3094
  %3097 = or i1 %3095, %3096
  %3098 = or i1 %3093, %3094
  %3099 = select i1 %3097, i32 1234533991, i32 -199409575
  store i32 %3099, i32* %switchVar
  br label %loopEnd

originalBB3784:                                   ; preds = %loopEntry
  %3100 = load i32, i32* %e, align 4
  %cmp597 = icmp eq i32 %3100, 12
  store i1 %cmp597, i1* %cmp597.reg2mem
  %3101 = load i32, i32* @x
  %3102 = load i32, i32* @y
  %3103 = sub i32 0, 1
  %3104 = add i32 %3101, %3103
  %3105 = sub i32 %3101, 1
  %3106 = mul i32 %3101, %3104
  %3107 = urem i32 %3106, 2
  %3108 = icmp eq i32 %3107, 0
  %3109 = icmp slt i32 %3102, 10
  %3110 = xor i1 %3108, true
  %3111 = xor i1 %3109, true
  %3112 = xor i1 false, true
  %3113 = and i1 %3110, false
  %3114 = and i1 %3108, %3112
  %3115 = and i1 %3111, false
  %3116 = and i1 %3109, %3112
  %3117 = or i1 %3113, %3114
  %3118 = or i1 %3115, %3116
  %3119 = xor i1 %3117, %3118
  %3120 = or i1 %3110, %3111
  %3121 = xor i1 %3120, true
  %3122 = or i1 false, %3112
  %3123 = and i1 %3121, %3122
  %3124 = or i1 %3119, %3123
  %3125 = or i1 %3108, %3109
  %3126 = select i1 %3124, i32 2145837875, i32 -199409575
  store i32 %3126, i32* %switchVar
  br label %loopEnd

originalBBpart23786:                              ; preds = %loopEntry
  %cmp597.reload = load volatile i1, i1* %cmp597.reg2mem
  %3127 = select i1 %cmp597.reload, i32 -139043621, i32 -1739788930
  store i32 %3127, i32* %switchVar
  br label %loopEnd

if.then598:                                       ; preds = %loopEntry
  %3128 = load i32, i32* %s, align 4
  %3129 = add i32 %3128, 468652672
  %3130 = add i32 %3129, 31
  %3131 = sub i32 %3130, 468652672
  %add599 = add nsw i32 %3128, 31
  %3132 = sub i32 0, %3131
  %3133 = sub i32 0, 30
  %3134 = add i32 %3132, %3133
  %3135 = sub i32 0, %3134
  %add600 = add nsw i32 %3131, 30
  %3136 = sub i32 %3135, -2078377113
  %3137 = add i32 %3136, 31
  %3138 = add i32 %3137, -2078377113
  %add601 = add nsw i32 %3135, 31
  %3139 = sub i32 0, %3138
  %3140 = sub i32 0, 31
  %3141 = add i32 %3139, %3140
  %3142 = sub i32 0, %3141
  %add602 = add nsw i32 %3138, 31
  %3143 = sub i32 0, 30
  %3144 = sub i32 %3142, %3143
  %add603 = add nsw i32 %3142, 30
  %3145 = add i32 %3144, 1026715288
  %3146 = add i32 %3145, 31
  %3147 = sub i32 %3146, 1026715288
  %add604 = add nsw i32 %3144, 31
  %3148 = sub i32 0, 30
  %3149 = sub i32 %3147, %3148
  %add605 = add nsw i32 %3147, 30
  %3150 = load i32, i32* %f, align 4
  %3151 = sub i32 0, %3149
  %3152 = sub i32 0, %3150
  %3153 = add i32 %3151, %3152
  %3154 = sub i32 0, %3153
  %add606 = add nsw i32 %3149, %3150
  %3155 = load i32, i32* %c, align 4
  %3156 = add i32 %3154, 1497805788
  %3157 = sub i32 %3156, %3155
  %3158 = sub i32 %3157, 1497805788
  %sub607 = sub nsw i32 %3154, %3155
  store i32 %3158, i32* %s, align 4
  %3159 = load i32, i32* %s, align 4
  %call608 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3159)
  store i32 -1739788930, i32* %switchVar
  br label %loopEnd

if.end609:                                        ; preds = %loopEntry
  %3160 = load i32, i32* @x
  %3161 = load i32, i32* @y
  %3162 = add i32 %3160, 2039273888
  %3163 = sub i32 %3162, 1
  %3164 = sub i32 %3163, 2039273888
  %3165 = sub i32 %3160, 1
  %3166 = mul i32 %3160, %3164
  %3167 = urem i32 %3166, 2
  %3168 = icmp eq i32 %3167, 0
  %3169 = icmp slt i32 %3161, 10
  %3170 = and i1 %3168, %3169
  %3171 = xor i1 %3168, %3169
  %3172 = or i1 %3170, %3171
  %3173 = or i1 %3168, %3169
  %3174 = select i1 %3172, i32 852231519, i32 800444727
  store i32 %3174, i32* %switchVar
  br label %loopEnd

originalBB3788:                                   ; preds = %loopEntry
  %3175 = load i32, i32* @x
  %3176 = load i32, i32* @y
  %3177 = sub i32 %3175, 1016204343
  %3178 = sub i32 %3177, 1
  %3179 = add i32 %3178, 1016204343
  %3180 = sub i32 %3175, 1
  %3181 = mul i32 %3175, %3179
  %3182 = urem i32 %3181, 2
  %3183 = icmp eq i32 %3182, 0
  %3184 = icmp slt i32 %3176, 10
  %3185 = and i1 %3183, %3184
  %3186 = xor i1 %3183, %3184
  %3187 = or i1 %3185, %3186
  %3188 = or i1 %3183, %3184
  %3189 = select i1 %3187, i32 -1022362626, i32 800444727
  store i32 %3189, i32* %switchVar
  br label %loopEnd

originalBBpart23790:                              ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb610:                                         ; preds = %loopEntry
  %3190 = load i32, i32* %e, align 4
  %cmp611 = icmp eq i32 %3190, 1
  %3191 = select i1 %cmp611, i32 -24718576, i32 -737028363
  store i32 %3191, i32* %switchVar
  br label %loopEnd

if.then612:                                       ; preds = %loopEntry
  %3192 = load i32, i32* %s, align 4
  %3193 = add i32 %3192, -163175150
  %3194 = sub i32 %3193, 31
  %3195 = sub i32 %3194, -163175150
  %sub613 = sub nsw i32 %3192, 31
  %3196 = sub i32 %3195, -1302189174
  %3197 = sub i32 %3196, 30
  %3198 = add i32 %3197, -1302189174
  %sub614 = sub nsw i32 %3195, 30
  %3199 = sub i32 0, 31
  %3200 = add i32 %3198, %3199
  %sub615 = sub nsw i32 %3198, 31
  %3201 = add i32 %3200, 1480642902
  %3202 = sub i32 %3201, 29
  %3203 = sub i32 %3202, 1480642902
  %sub616 = sub nsw i32 %3200, 29
  %3204 = sub i32 %3203, -2083541180
  %3205 = sub i32 %3204, 31
  %3206 = add i32 %3205, -2083541180
  %sub617 = sub nsw i32 %3203, 31
  %3207 = load i32, i32* %f, align 4
  %3208 = sub i32 0, %3206
  %3209 = sub i32 0, %3207
  %3210 = add i32 %3208, %3209
  %3211 = sub i32 0, %3210
  %add618 = add nsw i32 %3206, %3207
  %3212 = load i32, i32* %c, align 4
  %3213 = sub i32 %3211, -963667248
  %3214 = sub i32 %3213, %3212
  %3215 = add i32 %3214, -963667248
  %sub619 = sub nsw i32 %3211, %3212
  store i32 %3215, i32* %s, align 4
  %3216 = load i32, i32* %s, align 4
  %call620 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3216)
  store i32 -737028363, i32* %switchVar
  br label %loopEnd

if.end621:                                        ; preds = %loopEntry
  %3217 = load i32, i32* @x
  %3218 = load i32, i32* @y
  %3219 = add i32 %3217, -101776175
  %3220 = sub i32 %3219, 1
  %3221 = sub i32 %3220, -101776175
  %3222 = sub i32 %3217, 1
  %3223 = mul i32 %3217, %3221
  %3224 = urem i32 %3223, 2
  %3225 = icmp eq i32 %3224, 0
  %3226 = icmp slt i32 %3218, 10
  %3227 = and i1 %3225, %3226
  %3228 = xor i1 %3225, %3226
  %3229 = or i1 %3227, %3228
  %3230 = or i1 %3225, %3226
  %3231 = select i1 %3229, i32 29790145, i32 146952519
  store i32 %3231, i32* %switchVar
  br label %loopEnd

originalBB3792:                                   ; preds = %loopEntry
  %3232 = load i32, i32* %e, align 4
  %cmp622 = icmp eq i32 %3232, 2
  store i1 %cmp622, i1* %cmp622.reg2mem
  %3233 = load i32, i32* @x
  %3234 = load i32, i32* @y
  %3235 = sub i32 0, 1
  %3236 = add i32 %3233, %3235
  %3237 = sub i32 %3233, 1
  %3238 = mul i32 %3233, %3236
  %3239 = urem i32 %3238, 2
  %3240 = icmp eq i32 %3239, 0
  %3241 = icmp slt i32 %3234, 10
  %3242 = and i1 %3240, %3241
  %3243 = xor i1 %3240, %3241
  %3244 = or i1 %3242, %3243
  %3245 = or i1 %3240, %3241
  %3246 = select i1 %3244, i32 967610818, i32 146952519
  store i32 %3246, i32* %switchVar
  br label %loopEnd

originalBBpart23794:                              ; preds = %loopEntry
  %cmp622.reload = load volatile i1, i1* %cmp622.reg2mem
  %3247 = select i1 %cmp622.reload, i32 -1185174502, i32 562142704
  store i32 %3247, i32* %switchVar
  br label %loopEnd

if.then623:                                       ; preds = %loopEntry
  %3248 = load i32, i32* %s, align 4
  %3249 = add i32 %3248, -18763241
  %3250 = sub i32 %3249, 31
  %3251 = sub i32 %3250, -18763241
  %sub624 = sub nsw i32 %3248, 31
  %3252 = sub i32 %3251, -586850492
  %3253 = sub i32 %3252, 30
  %3254 = add i32 %3253, -586850492
  %sub625 = sub nsw i32 %3251, 30
  %3255 = sub i32 0, 31
  %3256 = add i32 %3254, %3255
  %sub626 = sub nsw i32 %3254, 31
  %3257 = sub i32 %3256, -1564918761
  %3258 = sub i32 %3257, 29
  %3259 = add i32 %3258, -1564918761
  %sub627 = sub nsw i32 %3256, 29
  %3260 = load i32, i32* %f, align 4
  %3261 = sub i32 0, %3259
  %3262 = sub i32 0, %3260
  %3263 = add i32 %3261, %3262
  %3264 = sub i32 0, %3263
  %add628 = add nsw i32 %3259, %3260
  %3265 = load i32, i32* %c, align 4
  %3266 = sub i32 %3264, 1810730686
  %3267 = sub i32 %3266, %3265
  %3268 = add i32 %3267, 1810730686
  %sub629 = sub nsw i32 %3264, %3265
  store i32 %3268, i32* %s, align 4
  %3269 = load i32, i32* %s, align 4
  %call630 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3269)
  store i32 562142704, i32* %switchVar
  br label %loopEnd

if.end631:                                        ; preds = %loopEntry
  %3270 = load i32, i32* @x
  %3271 = load i32, i32* @y
  %3272 = sub i32 0, 1
  %3273 = add i32 %3270, %3272
  %3274 = sub i32 %3270, 1
  %3275 = mul i32 %3270, %3273
  %3276 = urem i32 %3275, 2
  %3277 = icmp eq i32 %3276, 0
  %3278 = icmp slt i32 %3271, 10
  %3279 = xor i1 %3277, true
  %3280 = xor i1 %3278, true
  %3281 = xor i1 false, true
  %3282 = and i1 %3279, false
  %3283 = and i1 %3277, %3281
  %3284 = and i1 %3280, false
  %3285 = and i1 %3278, %3281
  %3286 = or i1 %3282, %3283
  %3287 = or i1 %3284, %3285
  %3288 = xor i1 %3286, %3287
  %3289 = or i1 %3279, %3280
  %3290 = xor i1 %3289, true
  %3291 = or i1 false, %3281
  %3292 = and i1 %3290, %3291
  %3293 = or i1 %3288, %3292
  %3294 = or i1 %3277, %3278
  %3295 = select i1 %3293, i32 202303184, i32 -1877496877
  store i32 %3295, i32* %switchVar
  br label %loopEnd

originalBB3796:                                   ; preds = %loopEntry
  %3296 = load i32, i32* %e, align 4
  %cmp632 = icmp eq i32 %3296, 3
  store i1 %cmp632, i1* %cmp632.reg2mem
  %3297 = load i32, i32* @x
  %3298 = load i32, i32* @y
  %3299 = add i32 %3297, 1623351652
  %3300 = sub i32 %3299, 1
  %3301 = sub i32 %3300, 1623351652
  %3302 = sub i32 %3297, 1
  %3303 = mul i32 %3297, %3301
  %3304 = urem i32 %3303, 2
  %3305 = icmp eq i32 %3304, 0
  %3306 = icmp slt i32 %3298, 10
  %3307 = and i1 %3305, %3306
  %3308 = xor i1 %3305, %3306
  %3309 = or i1 %3307, %3308
  %3310 = or i1 %3305, %3306
  %3311 = select i1 %3309, i32 50212332, i32 -1877496877
  store i32 %3311, i32* %switchVar
  br label %loopEnd

originalBBpart23798:                              ; preds = %loopEntry
  %cmp632.reload = load volatile i1, i1* %cmp632.reg2mem
  %3312 = select i1 %cmp632.reload, i32 -517893045, i32 382329853
  store i32 %3312, i32* %switchVar
  br label %loopEnd

if.then633:                                       ; preds = %loopEntry
  %3313 = load i32, i32* @x
  %3314 = load i32, i32* @y
  %3315 = add i32 %3313, 513480881
  %3316 = sub i32 %3315, 1
  %3317 = sub i32 %3316, 513480881
  %3318 = sub i32 %3313, 1
  %3319 = mul i32 %3313, %3317
  %3320 = urem i32 %3319, 2
  %3321 = icmp eq i32 %3320, 0
  %3322 = icmp slt i32 %3314, 10
  %3323 = and i1 %3321, %3322
  %3324 = xor i1 %3321, %3322
  %3325 = or i1 %3323, %3324
  %3326 = or i1 %3321, %3322
  %3327 = select i1 %3325, i32 -2065013622, i32 100338018
  store i32 %3327, i32* %switchVar
  br label %loopEnd

originalBB3800:                                   ; preds = %loopEntry
  %3328 = load i32, i32* %s, align 4
  %3329 = add i32 %3328, -1114552979
  %3330 = sub i32 %3329, 31
  %3331 = sub i32 %3330, -1114552979
  %sub634 = sub nsw i32 %3328, 31
  %3332 = sub i32 %3331, 334868885
  %3333 = sub i32 %3332, 30
  %3334 = add i32 %3333, 334868885
  %sub635 = sub nsw i32 %3331, 30
  %3335 = sub i32 0, 31
  %3336 = add i32 %3334, %3335
  %sub636 = sub nsw i32 %3334, 31
  %3337 = load i32, i32* %f, align 4
  %3338 = sub i32 %3336, -1736089395
  %3339 = add i32 %3338, %3337
  %3340 = add i32 %3339, -1736089395
  %add637 = add nsw i32 %3336, %3337
  %3341 = load i32, i32* %c, align 4
  %3342 = add i32 %3340, 1862748926
  %3343 = sub i32 %3342, %3341
  %3344 = sub i32 %3343, 1862748926
  %sub638 = sub nsw i32 %3340, %3341
  store i32 %3344, i32* %s, align 4
  %3345 = load i32, i32* %s, align 4
  %call639 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3345)
  %3346 = load i32, i32* @x
  %3347 = load i32, i32* @y
  %3348 = add i32 %3346, 890341927
  %3349 = sub i32 %3348, 1
  %3350 = sub i32 %3349, 890341927
  %3351 = sub i32 %3346, 1
  %3352 = mul i32 %3346, %3350
  %3353 = urem i32 %3352, 2
  %3354 = icmp eq i32 %3353, 0
  %3355 = icmp slt i32 %3347, 10
  %3356 = and i1 %3354, %3355
  %3357 = xor i1 %3354, %3355
  %3358 = or i1 %3356, %3357
  %3359 = or i1 %3354, %3355
  %3360 = select i1 %3358, i32 1955795530, i32 100338018
  store i32 %3360, i32* %switchVar
  br label %loopEnd

originalBBpart23831:                              ; preds = %loopEntry
  store i32 382329853, i32* %switchVar
  br label %loopEnd

if.end640:                                        ; preds = %loopEntry
  %3361 = load i32, i32* @x
  %3362 = load i32, i32* @y
  %3363 = add i32 %3361, 463094622
  %3364 = sub i32 %3363, 1
  %3365 = sub i32 %3364, 463094622
  %3366 = sub i32 %3361, 1
  %3367 = mul i32 %3361, %3365
  %3368 = urem i32 %3367, 2
  %3369 = icmp eq i32 %3368, 0
  %3370 = icmp slt i32 %3362, 10
  %3371 = and i1 %3369, %3370
  %3372 = xor i1 %3369, %3370
  %3373 = or i1 %3371, %3372
  %3374 = or i1 %3369, %3370
  %3375 = select i1 %3373, i32 -118794139, i32 1976932066
  store i32 %3375, i32* %switchVar
  br label %loopEnd

originalBB3833:                                   ; preds = %loopEntry
  %3376 = load i32, i32* %e, align 4
  %cmp641 = icmp eq i32 %3376, 4
  store i1 %cmp641, i1* %cmp641.reg2mem
  %3377 = load i32, i32* @x
  %3378 = load i32, i32* @y
  %3379 = sub i32 0, 1
  %3380 = add i32 %3377, %3379
  %3381 = sub i32 %3377, 1
  %3382 = mul i32 %3377, %3380
  %3383 = urem i32 %3382, 2
  %3384 = icmp eq i32 %3383, 0
  %3385 = icmp slt i32 %3378, 10
  %3386 = xor i1 %3384, true
  %3387 = xor i1 %3385, true
  %3388 = xor i1 false, true
  %3389 = and i1 %3386, false
  %3390 = and i1 %3384, %3388
  %3391 = and i1 %3387, false
  %3392 = and i1 %3385, %3388
  %3393 = or i1 %3389, %3390
  %3394 = or i1 %3391, %3392
  %3395 = xor i1 %3393, %3394
  %3396 = or i1 %3386, %3387
  %3397 = xor i1 %3396, true
  %3398 = or i1 false, %3388
  %3399 = and i1 %3397, %3398
  %3400 = or i1 %3395, %3399
  %3401 = or i1 %3384, %3385
  %3402 = select i1 %3400, i32 1706390611, i32 1976932066
  store i32 %3402, i32* %switchVar
  br label %loopEnd

originalBBpart23835:                              ; preds = %loopEntry
  %cmp641.reload = load volatile i1, i1* %cmp641.reg2mem
  %3403 = select i1 %cmp641.reload, i32 102158839, i32 253747920
  store i32 %3403, i32* %switchVar
  br label %loopEnd

if.then642:                                       ; preds = %loopEntry
  %3404 = load i32, i32* @x
  %3405 = load i32, i32* @y
  %3406 = sub i32 0, 1
  %3407 = add i32 %3404, %3406
  %3408 = sub i32 %3404, 1
  %3409 = mul i32 %3404, %3407
  %3410 = urem i32 %3409, 2
  %3411 = icmp eq i32 %3410, 0
  %3412 = icmp slt i32 %3405, 10
  %3413 = xor i1 %3411, true
  %3414 = xor i1 %3412, true
  %3415 = xor i1 true, true
  %3416 = and i1 %3413, true
  %3417 = and i1 %3411, %3415
  %3418 = and i1 %3414, true
  %3419 = and i1 %3412, %3415
  %3420 = or i1 %3416, %3417
  %3421 = or i1 %3418, %3419
  %3422 = xor i1 %3420, %3421
  %3423 = or i1 %3413, %3414
  %3424 = xor i1 %3423, true
  %3425 = or i1 true, %3415
  %3426 = and i1 %3424, %3425
  %3427 = or i1 %3422, %3426
  %3428 = or i1 %3411, %3412
  %3429 = select i1 %3427, i32 -1048379284, i32 640492829
  store i32 %3429, i32* %switchVar
  br label %loopEnd

originalBB3837:                                   ; preds = %loopEntry
  %3430 = load i32, i32* %s, align 4
  %3431 = sub i32 0, 31
  %3432 = add i32 %3430, %3431
  %sub643 = sub nsw i32 %3430, 31
  %3433 = add i32 %3432, -2002664698
  %3434 = sub i32 %3433, 30
  %3435 = sub i32 %3434, -2002664698
  %sub644 = sub nsw i32 %3432, 30
  %3436 = load i32, i32* %f, align 4
  %3437 = add i32 %3435, 1223791775
  %3438 = add i32 %3437, %3436
  %3439 = sub i32 %3438, 1223791775
  %add645 = add nsw i32 %3435, %3436
  %3440 = load i32, i32* %c, align 4
  %3441 = sub i32 %3439, -698915481
  %3442 = sub i32 %3441, %3440
  %3443 = add i32 %3442, -698915481
  %sub646 = sub nsw i32 %3439, %3440
  store i32 %3443, i32* %s, align 4
  %3444 = load i32, i32* %s, align 4
  %call647 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3444)
  %3445 = load i32, i32* @x
  %3446 = load i32, i32* @y
  %3447 = sub i32 %3445, -1312136374
  %3448 = sub i32 %3447, 1
  %3449 = add i32 %3448, -1312136374
  %3450 = sub i32 %3445, 1
  %3451 = mul i32 %3445, %3449
  %3452 = urem i32 %3451, 2
  %3453 = icmp eq i32 %3452, 0
  %3454 = icmp slt i32 %3446, 10
  %3455 = and i1 %3453, %3454
  %3456 = xor i1 %3453, %3454
  %3457 = or i1 %3455, %3456
  %3458 = or i1 %3453, %3454
  %3459 = select i1 %3457, i32 1439729283, i32 640492829
  store i32 %3459, i32* %switchVar
  br label %loopEnd

originalBBpart23864:                              ; preds = %loopEntry
  store i32 253747920, i32* %switchVar
  br label %loopEnd

if.end648:                                        ; preds = %loopEntry
  %3460 = load i32, i32* %e, align 4
  %cmp649 = icmp eq i32 %3460, 5
  %3461 = select i1 %cmp649, i32 -1567136976, i32 -787743339
  store i32 %3461, i32* %switchVar
  br label %loopEnd

if.then650:                                       ; preds = %loopEntry
  %3462 = load i32, i32* %s, align 4
  %3463 = sub i32 %3462, -1045018672
  %3464 = sub i32 %3463, 31
  %3465 = add i32 %3464, -1045018672
  %sub651 = sub nsw i32 %3462, 31
  %3466 = load i32, i32* %f, align 4
  %3467 = sub i32 %3465, -1453568186
  %3468 = add i32 %3467, %3466
  %3469 = add i32 %3468, -1453568186
  %add652 = add nsw i32 %3465, %3466
  %3470 = load i32, i32* %c, align 4
  %3471 = sub i32 %3469, 1028335902
  %3472 = sub i32 %3471, %3470
  %3473 = add i32 %3472, 1028335902
  %sub653 = sub nsw i32 %3469, %3470
  store i32 %3473, i32* %s, align 4
  %3474 = load i32, i32* %s, align 4
  %call654 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3474)
  store i32 -787743339, i32* %switchVar
  br label %loopEnd

if.end655:                                        ; preds = %loopEntry
  %3475 = load i32, i32* %e, align 4
  %cmp656 = icmp eq i32 %3475, 7
  %3476 = select i1 %cmp656, i32 1420048409, i32 -1384581137
  store i32 %3476, i32* %switchVar
  br label %loopEnd

if.then657:                                       ; preds = %loopEntry
  %3477 = load i32, i32* %s, align 4
  %3478 = sub i32 0, %3477
  %3479 = sub i32 0, 30
  %3480 = add i32 %3478, %3479
  %3481 = sub i32 0, %3480
  %add658 = add nsw i32 %3477, 30
  %3482 = load i32, i32* %f, align 4
  %3483 = sub i32 0, %3481
  %3484 = sub i32 0, %3482
  %3485 = add i32 %3483, %3484
  %3486 = sub i32 0, %3485
  %add659 = add nsw i32 %3481, %3482
  %3487 = load i32, i32* %c, align 4
  %3488 = add i32 %3486, 1373291357
  %3489 = sub i32 %3488, %3487
  %3490 = sub i32 %3489, 1373291357
  %sub660 = sub nsw i32 %3486, %3487
  store i32 %3490, i32* %s, align 4
  %3491 = load i32, i32* %s, align 4
  %call661 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3491)
  store i32 -1384581137, i32* %switchVar
  br label %loopEnd

if.end662:                                        ; preds = %loopEntry
  %3492 = load i32, i32* %e, align 4
  %cmp663 = icmp eq i32 %3492, 8
  %3493 = select i1 %cmp663, i32 339533759, i32 373682855
  store i32 %3493, i32* %switchVar
  br label %loopEnd

if.then664:                                       ; preds = %loopEntry
  %3494 = load i32, i32* %s, align 4
  %3495 = add i32 %3494, 2123956801
  %3496 = add i32 %3495, 30
  %3497 = sub i32 %3496, 2123956801
  %add665 = add nsw i32 %3494, 30
  %3498 = add i32 %3497, -1838767859
  %3499 = add i32 %3498, 31
  %3500 = sub i32 %3499, -1838767859
  %add666 = add nsw i32 %3497, 31
  %3501 = load i32, i32* %f, align 4
  %3502 = sub i32 %3500, -844754922
  %3503 = add i32 %3502, %3501
  %3504 = add i32 %3503, -844754922
  %add667 = add nsw i32 %3500, %3501
  %3505 = load i32, i32* %c, align 4
  %3506 = sub i32 %3504, -193297987
  %3507 = sub i32 %3506, %3505
  %3508 = add i32 %3507, -193297987
  %sub668 = sub nsw i32 %3504, %3505
  store i32 %3508, i32* %s, align 4
  %3509 = load i32, i32* %s, align 4
  %call669 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3509)
  store i32 373682855, i32* %switchVar
  br label %loopEnd

if.end670:                                        ; preds = %loopEntry
  %3510 = load i32, i32* %e, align 4
  %cmp671 = icmp eq i32 %3510, 9
  %3511 = select i1 %cmp671, i32 -930943, i32 247902714
  store i32 %3511, i32* %switchVar
  br label %loopEnd

if.then672:                                       ; preds = %loopEntry
  %3512 = load i32, i32* @x
  %3513 = load i32, i32* @y
  %3514 = sub i32 %3512, 542214782
  %3515 = sub i32 %3514, 1
  %3516 = add i32 %3515, 542214782
  %3517 = sub i32 %3512, 1
  %3518 = mul i32 %3512, %3516
  %3519 = urem i32 %3518, 2
  %3520 = icmp eq i32 %3519, 0
  %3521 = icmp slt i32 %3513, 10
  %3522 = xor i1 %3520, true
  %3523 = xor i1 %3521, true
  %3524 = xor i1 true, true
  %3525 = and i1 %3522, true
  %3526 = and i1 %3520, %3524
  %3527 = and i1 %3523, true
  %3528 = and i1 %3521, %3524
  %3529 = or i1 %3525, %3526
  %3530 = or i1 %3527, %3528
  %3531 = xor i1 %3529, %3530
  %3532 = or i1 %3522, %3523
  %3533 = xor i1 %3532, true
  %3534 = or i1 true, %3524
  %3535 = and i1 %3533, %3534
  %3536 = or i1 %3531, %3535
  %3537 = or i1 %3520, %3521
  %3538 = select i1 %3536, i32 -1291526328, i32 -125769651
  store i32 %3538, i32* %switchVar
  br label %loopEnd

originalBB3866:                                   ; preds = %loopEntry
  %3539 = load i32, i32* %s, align 4
  %3540 = add i32 %3539, 608347118
  %3541 = add i32 %3540, 30
  %3542 = sub i32 %3541, 608347118
  %add673 = add nsw i32 %3539, 30
  %3543 = sub i32 0, 31
  %3544 = sub i32 %3542, %3543
  %add674 = add nsw i32 %3542, 31
  %3545 = sub i32 %3544, 153119111
  %3546 = add i32 %3545, 31
  %3547 = add i32 %3546, 153119111
  %add675 = add nsw i32 %3544, 31
  %3548 = load i32, i32* %f, align 4
  %3549 = add i32 %3547, -844961063
  %3550 = add i32 %3549, %3548
  %3551 = sub i32 %3550, -844961063
  %add676 = add nsw i32 %3547, %3548
  %3552 = load i32, i32* %c, align 4
  %3553 = sub i32 0, %3552
  %3554 = add i32 %3551, %3553
  %sub677 = sub nsw i32 %3551, %3552
  store i32 %3554, i32* %s, align 4
  %3555 = load i32, i32* %s, align 4
  %call678 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3555)
  %3556 = load i32, i32* @x
  %3557 = load i32, i32* @y
  %3558 = sub i32 0, 1
  %3559 = add i32 %3556, %3558
  %3560 = sub i32 %3556, 1
  %3561 = mul i32 %3556, %3559
  %3562 = urem i32 %3561, 2
  %3563 = icmp eq i32 %3562, 0
  %3564 = icmp slt i32 %3557, 10
  %3565 = xor i1 %3563, true
  %3566 = xor i1 %3564, true
  %3567 = xor i1 false, true
  %3568 = and i1 %3565, false
  %3569 = and i1 %3563, %3567
  %3570 = and i1 %3566, false
  %3571 = and i1 %3564, %3567
  %3572 = or i1 %3568, %3569
  %3573 = or i1 %3570, %3571
  %3574 = xor i1 %3572, %3573
  %3575 = or i1 %3565, %3566
  %3576 = xor i1 %3575, true
  %3577 = or i1 false, %3567
  %3578 = and i1 %3576, %3577
  %3579 = or i1 %3574, %3578
  %3580 = or i1 %3563, %3564
  %3581 = select i1 %3579, i32 -1628684105, i32 -125769651
  store i32 %3581, i32* %switchVar
  br label %loopEnd

originalBBpart23894:                              ; preds = %loopEntry
  store i32 247902714, i32* %switchVar
  br label %loopEnd

if.end679:                                        ; preds = %loopEntry
  %3582 = load i32, i32* %e, align 4
  %cmp680 = icmp eq i32 %3582, 10
  %3583 = select i1 %cmp680, i32 593589393, i32 -323851057
  store i32 %3583, i32* %switchVar
  br label %loopEnd

if.then681:                                       ; preds = %loopEntry
  %3584 = load i32, i32* %s, align 4
  %3585 = sub i32 %3584, -111242155
  %3586 = add i32 %3585, 30
  %3587 = add i32 %3586, -111242155
  %add682 = add nsw i32 %3584, 30
  %3588 = sub i32 0, %3587
  %3589 = sub i32 0, 31
  %3590 = add i32 %3588, %3589
  %3591 = sub i32 0, %3590
  %add683 = add nsw i32 %3587, 31
  %3592 = sub i32 0, %3591
  %3593 = sub i32 0, 31
  %3594 = add i32 %3592, %3593
  %3595 = sub i32 0, %3594
  %add684 = add nsw i32 %3591, 31
  %3596 = add i32 %3595, -554762479
  %3597 = add i32 %3596, 30
  %3598 = sub i32 %3597, -554762479
  %add685 = add nsw i32 %3595, 30
  %3599 = load i32, i32* %f, align 4
  %3600 = sub i32 0, %3599
  %3601 = sub i32 %3598, %3600
  %add686 = add nsw i32 %3598, %3599
  %3602 = load i32, i32* %c, align 4
  %3603 = sub i32 0, %3602
  %3604 = add i32 %3601, %3603
  %sub687 = sub nsw i32 %3601, %3602
  store i32 %3604, i32* %s, align 4
  %3605 = load i32, i32* %s, align 4
  %call688 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3605)
  store i32 -323851057, i32* %switchVar
  br label %loopEnd

if.end689:                                        ; preds = %loopEntry
  %3606 = load i32, i32* %e, align 4
  %cmp690 = icmp eq i32 %3606, 11
  %3607 = select i1 %cmp690, i32 161071224, i32 807544879
  store i32 %3607, i32* %switchVar
  br label %loopEnd

if.then691:                                       ; preds = %loopEntry
  %3608 = load i32, i32* %s, align 4
  %3609 = sub i32 0, %3608
  %3610 = sub i32 0, 30
  %3611 = add i32 %3609, %3610
  %3612 = sub i32 0, %3611
  %add692 = add nsw i32 %3608, 30
  %3613 = sub i32 0, %3612
  %3614 = sub i32 0, 31
  %3615 = add i32 %3613, %3614
  %3616 = sub i32 0, %3615
  %add693 = add nsw i32 %3612, 31
  %3617 = sub i32 0, %3616
  %3618 = sub i32 0, 31
  %3619 = add i32 %3617, %3618
  %3620 = sub i32 0, %3619
  %add694 = add nsw i32 %3616, 31
  %3621 = sub i32 0, %3620
  %3622 = sub i32 0, 30
  %3623 = add i32 %3621, %3622
  %3624 = sub i32 0, %3623
  %add695 = add nsw i32 %3620, 30
  %3625 = sub i32 %3624, -873405793
  %3626 = add i32 %3625, 31
  %3627 = add i32 %3626, -873405793
  %add696 = add nsw i32 %3624, 31
  %3628 = load i32, i32* %f, align 4
  %3629 = sub i32 %3627, 195760405
  %3630 = add i32 %3629, %3628
  %3631 = add i32 %3630, 195760405
  %add697 = add nsw i32 %3627, %3628
  %3632 = load i32, i32* %c, align 4
  %3633 = sub i32 %3631, -102522098
  %3634 = sub i32 %3633, %3632
  %3635 = add i32 %3634, -102522098
  %sub698 = sub nsw i32 %3631, %3632
  store i32 %3635, i32* %s, align 4
  %3636 = load i32, i32* %s, align 4
  %call699 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3636)
  store i32 807544879, i32* %switchVar
  br label %loopEnd

if.end700:                                        ; preds = %loopEntry
  %3637 = load i32, i32* %e, align 4
  %cmp701 = icmp eq i32 %3637, 12
  %3638 = select i1 %cmp701, i32 1839415644, i32 958719031
  store i32 %3638, i32* %switchVar
  br label %loopEnd

if.then702:                                       ; preds = %loopEntry
  %3639 = load i32, i32* %s, align 4
  %3640 = sub i32 %3639, 1539220153
  %3641 = add i32 %3640, 30
  %3642 = add i32 %3641, 1539220153
  %add703 = add nsw i32 %3639, 30
  %3643 = sub i32 0, 31
  %3644 = sub i32 %3642, %3643
  %add704 = add nsw i32 %3642, 31
  %3645 = sub i32 %3644, 946557962
  %3646 = add i32 %3645, 31
  %3647 = add i32 %3646, 946557962
  %add705 = add nsw i32 %3644, 31
  %3648 = sub i32 %3647, 1381704446
  %3649 = add i32 %3648, 30
  %3650 = add i32 %3649, 1381704446
  %add706 = add nsw i32 %3647, 30
  %3651 = add i32 %3650, -501116198
  %3652 = add i32 %3651, 31
  %3653 = sub i32 %3652, -501116198
  %add707 = add nsw i32 %3650, 31
  %3654 = sub i32 0, 30
  %3655 = sub i32 %3653, %3654
  %add708 = add nsw i32 %3653, 30
  %3656 = load i32, i32* %f, align 4
  %3657 = sub i32 0, %3655
  %3658 = sub i32 0, %3656
  %3659 = add i32 %3657, %3658
  %3660 = sub i32 0, %3659
  %add709 = add nsw i32 %3655, %3656
  %3661 = load i32, i32* %c, align 4
  %3662 = sub i32 %3660, -1921982444
  %3663 = sub i32 %3662, %3661
  %3664 = add i32 %3663, -1921982444
  %sub710 = sub nsw i32 %3660, %3661
  store i32 %3664, i32* %s, align 4
  %3665 = load i32, i32* %s, align 4
  %call711 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3665)
  store i32 958719031, i32* %switchVar
  br label %loopEnd

if.end712:                                        ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb713:                                         ; preds = %loopEntry
  %3666 = load i32, i32* %e, align 4
  %cmp714 = icmp eq i32 %3666, 1
  %3667 = select i1 %cmp714, i32 1056162511, i32 -1101515354
  store i32 %3667, i32* %switchVar
  br label %loopEnd

if.then715:                                       ; preds = %loopEntry
  %3668 = load i32, i32* %s, align 4
  %3669 = sub i32 0, 30
  %3670 = add i32 %3668, %3669
  %sub716 = sub nsw i32 %3668, 30
  %3671 = sub i32 0, 31
  %3672 = add i32 %3670, %3671
  %sub717 = sub nsw i32 %3670, 31
  %3673 = sub i32 0, 30
  %3674 = add i32 %3672, %3673
  %sub718 = sub nsw i32 %3672, 30
  %3675 = sub i32 0, 31
  %3676 = add i32 %3674, %3675
  %sub719 = sub nsw i32 %3674, 31
  %3677 = add i32 %3676, 308097793
  %3678 = sub i32 %3677, 29
  %3679 = sub i32 %3678, 308097793
  %sub720 = sub nsw i32 %3676, 29
  %3680 = add i32 %3679, -1997319225
  %3681 = sub i32 %3680, 31
  %3682 = sub i32 %3681, -1997319225
  %sub721 = sub nsw i32 %3679, 31
  %3683 = load i32, i32* %f, align 4
  %3684 = sub i32 0, %3683
  %3685 = sub i32 %3682, %3684
  %add722 = add nsw i32 %3682, %3683
  %3686 = load i32, i32* %c, align 4
  %3687 = sub i32 0, %3686
  %3688 = add i32 %3685, %3687
  %sub723 = sub nsw i32 %3685, %3686
  store i32 %3688, i32* %s, align 4
  %3689 = load i32, i32* %s, align 4
  %call724 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3689)
  store i32 -1101515354, i32* %switchVar
  br label %loopEnd

if.end725:                                        ; preds = %loopEntry
  %3690 = load i32, i32* @x
  %3691 = load i32, i32* @y
  %3692 = add i32 %3690, 662333754
  %3693 = sub i32 %3692, 1
  %3694 = sub i32 %3693, 662333754
  %3695 = sub i32 %3690, 1
  %3696 = mul i32 %3690, %3694
  %3697 = urem i32 %3696, 2
  %3698 = icmp eq i32 %3697, 0
  %3699 = icmp slt i32 %3691, 10
  %3700 = and i1 %3698, %3699
  %3701 = xor i1 %3698, %3699
  %3702 = or i1 %3700, %3701
  %3703 = or i1 %3698, %3699
  %3704 = select i1 %3702, i32 -373167167, i32 -658361646
  store i32 %3704, i32* %switchVar
  br label %loopEnd

originalBB3896:                                   ; preds = %loopEntry
  %3705 = load i32, i32* %e, align 4
  %cmp726 = icmp eq i32 %3705, 2
  store i1 %cmp726, i1* %cmp726.reg2mem
  %3706 = load i32, i32* @x
  %3707 = load i32, i32* @y
  %3708 = sub i32 %3706, 624674922
  %3709 = sub i32 %3708, 1
  %3710 = add i32 %3709, 624674922
  %3711 = sub i32 %3706, 1
  %3712 = mul i32 %3706, %3710
  %3713 = urem i32 %3712, 2
  %3714 = icmp eq i32 %3713, 0
  %3715 = icmp slt i32 %3707, 10
  %3716 = and i1 %3714, %3715
  %3717 = xor i1 %3714, %3715
  %3718 = or i1 %3716, %3717
  %3719 = or i1 %3714, %3715
  %3720 = select i1 %3718, i32 -770124642, i32 -658361646
  store i32 %3720, i32* %switchVar
  br label %loopEnd

originalBBpart23898:                              ; preds = %loopEntry
  %cmp726.reload = load volatile i1, i1* %cmp726.reg2mem
  %3721 = select i1 %cmp726.reload, i32 -83622834, i32 -645541258
  store i32 %3721, i32* %switchVar
  br label %loopEnd

if.then727:                                       ; preds = %loopEntry
  %3722 = load i32, i32* %s, align 4
  %3723 = sub i32 %3722, -1887083966
  %3724 = sub i32 %3723, 30
  %3725 = add i32 %3724, -1887083966
  %sub728 = sub nsw i32 %3722, 30
  %3726 = sub i32 0, 31
  %3727 = add i32 %3725, %3726
  %sub729 = sub nsw i32 %3725, 31
  %3728 = add i32 %3727, -642113986
  %3729 = sub i32 %3728, 30
  %3730 = sub i32 %3729, -642113986
  %sub730 = sub nsw i32 %3727, 30
  %3731 = add i32 %3730, -917053719
  %3732 = sub i32 %3731, 31
  %3733 = sub i32 %3732, -917053719
  %sub731 = sub nsw i32 %3730, 31
  %3734 = add i32 %3733, -899057935
  %3735 = sub i32 %3734, 29
  %3736 = sub i32 %3735, -899057935
  %sub732 = sub nsw i32 %3733, 29
  %3737 = load i32, i32* %f, align 4
  %3738 = add i32 %3736, 1903056868
  %3739 = add i32 %3738, %3737
  %3740 = sub i32 %3739, 1903056868
  %add733 = add nsw i32 %3736, %3737
  %3741 = load i32, i32* %c, align 4
  %3742 = add i32 %3740, 1482897575
  %3743 = sub i32 %3742, %3741
  %3744 = sub i32 %3743, 1482897575
  %sub734 = sub nsw i32 %3740, %3741
  store i32 %3744, i32* %s, align 4
  %3745 = load i32, i32* %s, align 4
  %call735 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3745)
  store i32 -645541258, i32* %switchVar
  br label %loopEnd

if.end736:                                        ; preds = %loopEntry
  %3746 = load i32, i32* %e, align 4
  %cmp737 = icmp eq i32 %3746, 3
  %3747 = select i1 %cmp737, i32 489475044, i32 -1100191477
  store i32 %3747, i32* %switchVar
  br label %loopEnd

if.then738:                                       ; preds = %loopEntry
  %3748 = load i32, i32* %s, align 4
  %3749 = add i32 %3748, -1958783584
  %3750 = sub i32 %3749, 30
  %3751 = sub i32 %3750, -1958783584
  %sub739 = sub nsw i32 %3748, 30
  %3752 = add i32 %3751, -1035240861
  %3753 = sub i32 %3752, 31
  %3754 = sub i32 %3753, -1035240861
  %sub740 = sub nsw i32 %3751, 31
  %3755 = sub i32 0, 30
  %3756 = add i32 %3754, %3755
  %sub741 = sub nsw i32 %3754, 30
  %3757 = sub i32 %3756, 1554501326
  %3758 = sub i32 %3757, 31
  %3759 = add i32 %3758, 1554501326
  %sub742 = sub nsw i32 %3756, 31
  %3760 = load i32, i32* %f, align 4
  %3761 = sub i32 %3759, 127893829
  %3762 = add i32 %3761, %3760
  %3763 = add i32 %3762, 127893829
  %add743 = add nsw i32 %3759, %3760
  %3764 = load i32, i32* %c, align 4
  %3765 = sub i32 0, %3764
  %3766 = add i32 %3763, %3765
  %sub744 = sub nsw i32 %3763, %3764
  store i32 %3766, i32* %s, align 4
  %3767 = load i32, i32* %s, align 4
  %call745 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3767)
  store i32 -1100191477, i32* %switchVar
  br label %loopEnd

if.end746:                                        ; preds = %loopEntry
  %3768 = load i32, i32* %e, align 4
  %cmp747 = icmp eq i32 %3768, 4
  %3769 = select i1 %cmp747, i32 -1416472490, i32 -2022872968
  store i32 %3769, i32* %switchVar
  br label %loopEnd

if.then748:                                       ; preds = %loopEntry
  %3770 = load i32, i32* %s, align 4
  %3771 = sub i32 0, 30
  %3772 = add i32 %3770, %3771
  %sub749 = sub nsw i32 %3770, 30
  %3773 = add i32 %3772, -1759608290
  %3774 = sub i32 %3773, 31
  %3775 = sub i32 %3774, -1759608290
  %sub750 = sub nsw i32 %3772, 31
  %3776 = sub i32 0, 30
  %3777 = add i32 %3775, %3776
  %sub751 = sub nsw i32 %3775, 30
  %3778 = load i32, i32* %f, align 4
  %3779 = sub i32 0, %3777
  %3780 = sub i32 0, %3778
  %3781 = add i32 %3779, %3780
  %3782 = sub i32 0, %3781
  %add752 = add nsw i32 %3777, %3778
  %3783 = load i32, i32* %c, align 4
  %3784 = sub i32 0, %3783
  %3785 = add i32 %3782, %3784
  %sub753 = sub nsw i32 %3782, %3783
  store i32 %3785, i32* %s, align 4
  %3786 = load i32, i32* %s, align 4
  %call754 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3786)
  store i32 -2022872968, i32* %switchVar
  br label %loopEnd

if.end755:                                        ; preds = %loopEntry
  %3787 = load i32, i32* %e, align 4
  %cmp756 = icmp eq i32 %3787, 5
  %3788 = select i1 %cmp756, i32 1492637184, i32 -1947372146
  store i32 %3788, i32* %switchVar
  br label %loopEnd

if.then757:                                       ; preds = %loopEntry
  %3789 = load i32, i32* @x
  %3790 = load i32, i32* @y
  %3791 = add i32 %3789, -247259119
  %3792 = sub i32 %3791, 1
  %3793 = sub i32 %3792, -247259119
  %3794 = sub i32 %3789, 1
  %3795 = mul i32 %3789, %3793
  %3796 = urem i32 %3795, 2
  %3797 = icmp eq i32 %3796, 0
  %3798 = icmp slt i32 %3790, 10
  %3799 = xor i1 %3797, true
  %3800 = xor i1 %3798, true
  %3801 = xor i1 false, true
  %3802 = and i1 %3799, false
  %3803 = and i1 %3797, %3801
  %3804 = and i1 %3800, false
  %3805 = and i1 %3798, %3801
  %3806 = or i1 %3802, %3803
  %3807 = or i1 %3804, %3805
  %3808 = xor i1 %3806, %3807
  %3809 = or i1 %3799, %3800
  %3810 = xor i1 %3809, true
  %3811 = or i1 false, %3801
  %3812 = and i1 %3810, %3811
  %3813 = or i1 %3808, %3812
  %3814 = or i1 %3797, %3798
  %3815 = select i1 %3813, i32 852812909, i32 -202220326
  store i32 %3815, i32* %switchVar
  br label %loopEnd

originalBB3900:                                   ; preds = %loopEntry
  %3816 = load i32, i32* %s, align 4
  %3817 = sub i32 %3816, 1504570604
  %3818 = sub i32 %3817, 30
  %3819 = add i32 %3818, 1504570604
  %sub758 = sub nsw i32 %3816, 30
  %3820 = add i32 %3819, 5544542
  %3821 = sub i32 %3820, 31
  %3822 = sub i32 %3821, 5544542
  %sub759 = sub nsw i32 %3819, 31
  %3823 = load i32, i32* %f, align 4
  %3824 = sub i32 %3822, -103299572
  %3825 = add i32 %3824, %3823
  %3826 = add i32 %3825, -103299572
  %add760 = add nsw i32 %3822, %3823
  %3827 = load i32, i32* %c, align 4
  %3828 = sub i32 %3826, -1359142497
  %3829 = sub i32 %3828, %3827
  %3830 = add i32 %3829, -1359142497
  %sub761 = sub nsw i32 %3826, %3827
  store i32 %3830, i32* %s, align 4
  %3831 = load i32, i32* %s, align 4
  %call762 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3831)
  %3832 = load i32, i32* @x
  %3833 = load i32, i32* @y
  %3834 = sub i32 %3832, -1290016547
  %3835 = sub i32 %3834, 1
  %3836 = add i32 %3835, -1290016547
  %3837 = sub i32 %3832, 1
  %3838 = mul i32 %3832, %3836
  %3839 = urem i32 %3838, 2
  %3840 = icmp eq i32 %3839, 0
  %3841 = icmp slt i32 %3833, 10
  %3842 = xor i1 %3840, true
  %3843 = xor i1 %3841, true
  %3844 = xor i1 true, true
  %3845 = and i1 %3842, true
  %3846 = and i1 %3840, %3844
  %3847 = and i1 %3843, true
  %3848 = and i1 %3841, %3844
  %3849 = or i1 %3845, %3846
  %3850 = or i1 %3847, %3848
  %3851 = xor i1 %3849, %3850
  %3852 = or i1 %3842, %3843
  %3853 = xor i1 %3852, true
  %3854 = or i1 true, %3844
  %3855 = and i1 %3853, %3854
  %3856 = or i1 %3851, %3855
  %3857 = or i1 %3840, %3841
  %3858 = select i1 %3856, i32 -613780429, i32 -202220326
  store i32 %3858, i32* %switchVar
  br label %loopEnd

originalBBpart23928:                              ; preds = %loopEntry
  store i32 -1947372146, i32* %switchVar
  br label %loopEnd

if.end763:                                        ; preds = %loopEntry
  %3859 = load i32, i32* %e, align 4
  %cmp764 = icmp eq i32 %3859, 6
  %3860 = select i1 %cmp764, i32 1206938351, i32 592583478
  store i32 %3860, i32* %switchVar
  br label %loopEnd

if.then765:                                       ; preds = %loopEntry
  %3861 = load i32, i32* %s, align 4
  %3862 = sub i32 0, 30
  %3863 = add i32 %3861, %3862
  %sub766 = sub nsw i32 %3861, 30
  %3864 = load i32, i32* %f, align 4
  %3865 = add i32 %3863, -996069922
  %3866 = add i32 %3865, %3864
  %3867 = sub i32 %3866, -996069922
  %add767 = add nsw i32 %3863, %3864
  %3868 = load i32, i32* %c, align 4
  %3869 = add i32 %3867, 1017918115
  %3870 = sub i32 %3869, %3868
  %3871 = sub i32 %3870, 1017918115
  %sub768 = sub nsw i32 %3867, %3868
  store i32 %3871, i32* %s, align 4
  %3872 = load i32, i32* %s, align 4
  %call769 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3872)
  store i32 592583478, i32* %switchVar
  br label %loopEnd

if.end770:                                        ; preds = %loopEntry
  %3873 = load i32, i32* %e, align 4
  %cmp771 = icmp eq i32 %3873, 8
  %3874 = select i1 %cmp771, i32 75597041, i32 1610557737
  store i32 %3874, i32* %switchVar
  br label %loopEnd

if.then772:                                       ; preds = %loopEntry
  %3875 = load i32, i32* @x
  %3876 = load i32, i32* @y
  %3877 = add i32 %3875, -1199460451
  %3878 = sub i32 %3877, 1
  %3879 = sub i32 %3878, -1199460451
  %3880 = sub i32 %3875, 1
  %3881 = mul i32 %3875, %3879
  %3882 = urem i32 %3881, 2
  %3883 = icmp eq i32 %3882, 0
  %3884 = icmp slt i32 %3876, 10
  %3885 = and i1 %3883, %3884
  %3886 = xor i1 %3883, %3884
  %3887 = or i1 %3885, %3886
  %3888 = or i1 %3883, %3884
  %3889 = select i1 %3887, i32 1253426922, i32 -302591151
  store i32 %3889, i32* %switchVar
  br label %loopEnd

originalBB3930:                                   ; preds = %loopEntry
  %3890 = load i32, i32* %s, align 4
  %3891 = sub i32 0, %3890
  %3892 = sub i32 0, 31
  %3893 = add i32 %3891, %3892
  %3894 = sub i32 0, %3893
  %add773 = add nsw i32 %3890, 31
  %3895 = load i32, i32* %f, align 4
  %3896 = sub i32 %3894, -1968001223
  %3897 = add i32 %3896, %3895
  %3898 = add i32 %3897, -1968001223
  %add774 = add nsw i32 %3894, %3895
  %3899 = load i32, i32* %c, align 4
  %3900 = sub i32 0, %3899
  %3901 = add i32 %3898, %3900
  %sub775 = sub nsw i32 %3898, %3899
  store i32 %3901, i32* %s, align 4
  %3902 = load i32, i32* %s, align 4
  %call776 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3902)
  %3903 = load i32, i32* @x
  %3904 = load i32, i32* @y
  %3905 = sub i32 0, 1
  %3906 = add i32 %3903, %3905
  %3907 = sub i32 %3903, 1
  %3908 = mul i32 %3903, %3906
  %3909 = urem i32 %3908, 2
  %3910 = icmp eq i32 %3909, 0
  %3911 = icmp slt i32 %3904, 10
  %3912 = and i1 %3910, %3911
  %3913 = xor i1 %3910, %3911
  %3914 = or i1 %3912, %3913
  %3915 = or i1 %3910, %3911
  %3916 = select i1 %3914, i32 1971012511, i32 -302591151
  store i32 %3916, i32* %switchVar
  br label %loopEnd

originalBBpart23956:                              ; preds = %loopEntry
  store i32 1610557737, i32* %switchVar
  br label %loopEnd

if.end777:                                        ; preds = %loopEntry
  %3917 = load i32, i32* @x
  %3918 = load i32, i32* @y
  %3919 = sub i32 0, 1
  %3920 = add i32 %3917, %3919
  %3921 = sub i32 %3917, 1
  %3922 = mul i32 %3917, %3920
  %3923 = urem i32 %3922, 2
  %3924 = icmp eq i32 %3923, 0
  %3925 = icmp slt i32 %3918, 10
  %3926 = xor i1 %3924, true
  %3927 = xor i1 %3925, true
  %3928 = xor i1 false, true
  %3929 = and i1 %3926, false
  %3930 = and i1 %3924, %3928
  %3931 = and i1 %3927, false
  %3932 = and i1 %3925, %3928
  %3933 = or i1 %3929, %3930
  %3934 = or i1 %3931, %3932
  %3935 = xor i1 %3933, %3934
  %3936 = or i1 %3926, %3927
  %3937 = xor i1 %3936, true
  %3938 = or i1 false, %3928
  %3939 = and i1 %3937, %3938
  %3940 = or i1 %3935, %3939
  %3941 = or i1 %3924, %3925
  %3942 = select i1 %3940, i32 1895290671, i32 1955409408
  store i32 %3942, i32* %switchVar
  br label %loopEnd

originalBB3958:                                   ; preds = %loopEntry
  %3943 = load i32, i32* %e, align 4
  %cmp778 = icmp eq i32 %3943, 9
  store i1 %cmp778, i1* %cmp778.reg2mem
  %3944 = load i32, i32* @x
  %3945 = load i32, i32* @y
  %3946 = sub i32 0, 1
  %3947 = add i32 %3944, %3946
  %3948 = sub i32 %3944, 1
  %3949 = mul i32 %3944, %3947
  %3950 = urem i32 %3949, 2
  %3951 = icmp eq i32 %3950, 0
  %3952 = icmp slt i32 %3945, 10
  %3953 = xor i1 %3951, true
  %3954 = xor i1 %3952, true
  %3955 = xor i1 false, true
  %3956 = and i1 %3953, false
  %3957 = and i1 %3951, %3955
  %3958 = and i1 %3954, false
  %3959 = and i1 %3952, %3955
  %3960 = or i1 %3956, %3957
  %3961 = or i1 %3958, %3959
  %3962 = xor i1 %3960, %3961
  %3963 = or i1 %3953, %3954
  %3964 = xor i1 %3963, true
  %3965 = or i1 false, %3955
  %3966 = and i1 %3964, %3965
  %3967 = or i1 %3962, %3966
  %3968 = or i1 %3951, %3952
  %3969 = select i1 %3967, i32 1087667194, i32 1955409408
  store i32 %3969, i32* %switchVar
  br label %loopEnd

originalBBpart23960:                              ; preds = %loopEntry
  %cmp778.reload = load volatile i1, i1* %cmp778.reg2mem
  %3970 = select i1 %cmp778.reload, i32 712594245, i32 1753098685
  store i32 %3970, i32* %switchVar
  br label %loopEnd

if.then779:                                       ; preds = %loopEntry
  %3971 = load i32, i32* @x
  %3972 = load i32, i32* @y
  %3973 = add i32 %3971, -1606860859
  %3974 = sub i32 %3973, 1
  %3975 = sub i32 %3974, -1606860859
  %3976 = sub i32 %3971, 1
  %3977 = mul i32 %3971, %3975
  %3978 = urem i32 %3977, 2
  %3979 = icmp eq i32 %3978, 0
  %3980 = icmp slt i32 %3972, 10
  %3981 = xor i1 %3979, true
  %3982 = xor i1 %3980, true
  %3983 = xor i1 false, true
  %3984 = and i1 %3981, false
  %3985 = and i1 %3979, %3983
  %3986 = and i1 %3982, false
  %3987 = and i1 %3980, %3983
  %3988 = or i1 %3984, %3985
  %3989 = or i1 %3986, %3987
  %3990 = xor i1 %3988, %3989
  %3991 = or i1 %3981, %3982
  %3992 = xor i1 %3991, true
  %3993 = or i1 false, %3983
  %3994 = and i1 %3992, %3993
  %3995 = or i1 %3990, %3994
  %3996 = or i1 %3979, %3980
  %3997 = select i1 %3995, i32 543617598, i32 872162588
  store i32 %3997, i32* %switchVar
  br label %loopEnd

originalBB3962:                                   ; preds = %loopEntry
  %3998 = load i32, i32* %s, align 4
  %3999 = sub i32 0, 31
  %4000 = sub i32 %3998, %3999
  %add780 = add nsw i32 %3998, 31
  %4001 = sub i32 0, 31
  %4002 = sub i32 %4000, %4001
  %add781 = add nsw i32 %4000, 31
  %4003 = load i32, i32* %f, align 4
  %4004 = add i32 %4002, 585032709
  %4005 = add i32 %4004, %4003
  %4006 = sub i32 %4005, 585032709
  %add782 = add nsw i32 %4002, %4003
  %4007 = load i32, i32* %c, align 4
  %4008 = add i32 %4006, -1954931770
  %4009 = sub i32 %4008, %4007
  %4010 = sub i32 %4009, -1954931770
  %sub783 = sub nsw i32 %4006, %4007
  store i32 %4010, i32* %s, align 4
  %4011 = load i32, i32* %s, align 4
  %call784 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4011)
  %4012 = load i32, i32* @x
  %4013 = load i32, i32* @y
  %4014 = sub i32 0, 1
  %4015 = add i32 %4012, %4014
  %4016 = sub i32 %4012, 1
  %4017 = mul i32 %4012, %4015
  %4018 = urem i32 %4017, 2
  %4019 = icmp eq i32 %4018, 0
  %4020 = icmp slt i32 %4013, 10
  %4021 = xor i1 %4019, true
  %4022 = xor i1 %4020, true
  %4023 = xor i1 false, true
  %4024 = and i1 %4021, false
  %4025 = and i1 %4019, %4023
  %4026 = and i1 %4022, false
  %4027 = and i1 %4020, %4023
  %4028 = or i1 %4024, %4025
  %4029 = or i1 %4026, %4027
  %4030 = xor i1 %4028, %4029
  %4031 = or i1 %4021, %4022
  %4032 = xor i1 %4031, true
  %4033 = or i1 false, %4023
  %4034 = and i1 %4032, %4033
  %4035 = or i1 %4030, %4034
  %4036 = or i1 %4019, %4020
  %4037 = select i1 %4035, i32 -1327778727, i32 872162588
  store i32 %4037, i32* %switchVar
  br label %loopEnd

originalBBpart23987:                              ; preds = %loopEntry
  store i32 1753098685, i32* %switchVar
  br label %loopEnd

if.end785:                                        ; preds = %loopEntry
  %4038 = load i32, i32* %e, align 4
  %cmp786 = icmp eq i32 %4038, 10
  %4039 = select i1 %cmp786, i32 -1534420451, i32 1055920915
  store i32 %4039, i32* %switchVar
  br label %loopEnd

if.then787:                                       ; preds = %loopEntry
  %4040 = load i32, i32* @x
  %4041 = load i32, i32* @y
  %4042 = add i32 %4040, 429948041
  %4043 = sub i32 %4042, 1
  %4044 = sub i32 %4043, 429948041
  %4045 = sub i32 %4040, 1
  %4046 = mul i32 %4040, %4044
  %4047 = urem i32 %4046, 2
  %4048 = icmp eq i32 %4047, 0
  %4049 = icmp slt i32 %4041, 10
  %4050 = xor i1 %4048, true
  %4051 = xor i1 %4049, true
  %4052 = xor i1 false, true
  %4053 = and i1 %4050, false
  %4054 = and i1 %4048, %4052
  %4055 = and i1 %4051, false
  %4056 = and i1 %4049, %4052
  %4057 = or i1 %4053, %4054
  %4058 = or i1 %4055, %4056
  %4059 = xor i1 %4057, %4058
  %4060 = or i1 %4050, %4051
  %4061 = xor i1 %4060, true
  %4062 = or i1 false, %4052
  %4063 = and i1 %4061, %4062
  %4064 = or i1 %4059, %4063
  %4065 = or i1 %4048, %4049
  %4066 = select i1 %4064, i32 1114887190, i32 1950501327
  store i32 %4066, i32* %switchVar
  br label %loopEnd

originalBB3989:                                   ; preds = %loopEntry
  %4067 = load i32, i32* %s, align 4
  %4068 = add i32 %4067, 2095069349
  %4069 = add i32 %4068, 31
  %4070 = sub i32 %4069, 2095069349
  %add788 = add nsw i32 %4067, 31
  %4071 = sub i32 0, 31
  %4072 = sub i32 %4070, %4071
  %add789 = add nsw i32 %4070, 31
  %4073 = sub i32 0, 30
  %4074 = sub i32 %4072, %4073
  %add790 = add nsw i32 %4072, 30
  %4075 = load i32, i32* %f, align 4
  %4076 = sub i32 0, %4074
  %4077 = sub i32 0, %4075
  %4078 = add i32 %4076, %4077
  %4079 = sub i32 0, %4078
  %add791 = add nsw i32 %4074, %4075
  %4080 = load i32, i32* %c, align 4
  %4081 = sub i32 0, %4080
  %4082 = add i32 %4079, %4081
  %sub792 = sub nsw i32 %4079, %4080
  store i32 %4082, i32* %s, align 4
  %4083 = load i32, i32* %s, align 4
  %call793 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4083)
  %4084 = load i32, i32* @x
  %4085 = load i32, i32* @y
  %4086 = sub i32 %4084, 57145619
  %4087 = sub i32 %4086, 1
  %4088 = add i32 %4087, 57145619
  %4089 = sub i32 %4084, 1
  %4090 = mul i32 %4084, %4088
  %4091 = urem i32 %4090, 2
  %4092 = icmp eq i32 %4091, 0
  %4093 = icmp slt i32 %4085, 10
  %4094 = xor i1 %4092, true
  %4095 = xor i1 %4093, true
  %4096 = xor i1 false, true
  %4097 = and i1 %4094, false
  %4098 = and i1 %4092, %4096
  %4099 = and i1 %4095, false
  %4100 = and i1 %4093, %4096
  %4101 = or i1 %4097, %4098
  %4102 = or i1 %4099, %4100
  %4103 = xor i1 %4101, %4102
  %4104 = or i1 %4094, %4095
  %4105 = xor i1 %4104, true
  %4106 = or i1 false, %4096
  %4107 = and i1 %4105, %4106
  %4108 = or i1 %4103, %4107
  %4109 = or i1 %4092, %4093
  %4110 = select i1 %4108, i32 1332639686, i32 1950501327
  store i32 %4110, i32* %switchVar
  br label %loopEnd

originalBBpart24010:                              ; preds = %loopEntry
  store i32 1055920915, i32* %switchVar
  br label %loopEnd

if.end794:                                        ; preds = %loopEntry
  %4111 = load i32, i32* %e, align 4
  %cmp795 = icmp eq i32 %4111, 11
  %4112 = select i1 %cmp795, i32 -1526295037, i32 -798082785
  store i32 %4112, i32* %switchVar
  br label %loopEnd

if.then796:                                       ; preds = %loopEntry
  %4113 = load i32, i32* @x
  %4114 = load i32, i32* @y
  %4115 = sub i32 0, 1
  %4116 = add i32 %4113, %4115
  %4117 = sub i32 %4113, 1
  %4118 = mul i32 %4113, %4116
  %4119 = urem i32 %4118, 2
  %4120 = icmp eq i32 %4119, 0
  %4121 = icmp slt i32 %4114, 10
  %4122 = xor i1 %4120, true
  %4123 = xor i1 %4121, true
  %4124 = xor i1 true, true
  %4125 = and i1 %4122, true
  %4126 = and i1 %4120, %4124
  %4127 = and i1 %4123, true
  %4128 = and i1 %4121, %4124
  %4129 = or i1 %4125, %4126
  %4130 = or i1 %4127, %4128
  %4131 = xor i1 %4129, %4130
  %4132 = or i1 %4122, %4123
  %4133 = xor i1 %4132, true
  %4134 = or i1 true, %4124
  %4135 = and i1 %4133, %4134
  %4136 = or i1 %4131, %4135
  %4137 = or i1 %4120, %4121
  %4138 = select i1 %4136, i32 941618472, i32 -1846841175
  store i32 %4138, i32* %switchVar
  br label %loopEnd

originalBB4012:                                   ; preds = %loopEntry
  %4139 = load i32, i32* %s, align 4
  %4140 = sub i32 0, %4139
  %4141 = sub i32 0, 31
  %4142 = add i32 %4140, %4141
  %4143 = sub i32 0, %4142
  %add797 = add nsw i32 %4139, 31
  %4144 = sub i32 0, 31
  %4145 = sub i32 %4143, %4144
  %add798 = add nsw i32 %4143, 31
  %4146 = sub i32 0, %4145
  %4147 = sub i32 0, 30
  %4148 = add i32 %4146, %4147
  %4149 = sub i32 0, %4148
  %add799 = add nsw i32 %4145, 30
  %4150 = sub i32 0, %4149
  %4151 = sub i32 0, 31
  %4152 = add i32 %4150, %4151
  %4153 = sub i32 0, %4152
  %add800 = add nsw i32 %4149, 31
  %4154 = load i32, i32* %f, align 4
  %4155 = sub i32 0, %4153
  %4156 = sub i32 0, %4154
  %4157 = add i32 %4155, %4156
  %4158 = sub i32 0, %4157
  %add801 = add nsw i32 %4153, %4154
  %4159 = load i32, i32* %c, align 4
  %4160 = sub i32 %4158, -1416214212
  %4161 = sub i32 %4160, %4159
  %4162 = add i32 %4161, -1416214212
  %sub802 = sub nsw i32 %4158, %4159
  store i32 %4162, i32* %s, align 4
  %4163 = load i32, i32* %s, align 4
  %call803 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4163)
  %4164 = load i32, i32* @x
  %4165 = load i32, i32* @y
  %4166 = sub i32 0, 1
  %4167 = add i32 %4164, %4166
  %4168 = sub i32 %4164, 1
  %4169 = mul i32 %4164, %4167
  %4170 = urem i32 %4169, 2
  %4171 = icmp eq i32 %4170, 0
  %4172 = icmp slt i32 %4165, 10
  %4173 = and i1 %4171, %4172
  %4174 = xor i1 %4171, %4172
  %4175 = or i1 %4173, %4174
  %4176 = or i1 %4171, %4172
  %4177 = select i1 %4175, i32 1278777382, i32 -1846841175
  store i32 %4177, i32* %switchVar
  br label %loopEnd

originalBBpart24053:                              ; preds = %loopEntry
  store i32 -798082785, i32* %switchVar
  br label %loopEnd

if.end804:                                        ; preds = %loopEntry
  %4178 = load i32, i32* @x
  %4179 = load i32, i32* @y
  %4180 = add i32 %4178, -235893421
  %4181 = sub i32 %4180, 1
  %4182 = sub i32 %4181, -235893421
  %4183 = sub i32 %4178, 1
  %4184 = mul i32 %4178, %4182
  %4185 = urem i32 %4184, 2
  %4186 = icmp eq i32 %4185, 0
  %4187 = icmp slt i32 %4179, 10
  %4188 = and i1 %4186, %4187
  %4189 = xor i1 %4186, %4187
  %4190 = or i1 %4188, %4189
  %4191 = or i1 %4186, %4187
  %4192 = select i1 %4190, i32 -323754390, i32 665402074
  store i32 %4192, i32* %switchVar
  br label %loopEnd

originalBB4055:                                   ; preds = %loopEntry
  %4193 = load i32, i32* %e, align 4
  %cmp805 = icmp eq i32 %4193, 12
  store i1 %cmp805, i1* %cmp805.reg2mem
  %4194 = load i32, i32* @x
  %4195 = load i32, i32* @y
  %4196 = add i32 %4194, 1200275576
  %4197 = sub i32 %4196, 1
  %4198 = sub i32 %4197, 1200275576
  %4199 = sub i32 %4194, 1
  %4200 = mul i32 %4194, %4198
  %4201 = urem i32 %4200, 2
  %4202 = icmp eq i32 %4201, 0
  %4203 = icmp slt i32 %4195, 10
  %4204 = and i1 %4202, %4203
  %4205 = xor i1 %4202, %4203
  %4206 = or i1 %4204, %4205
  %4207 = or i1 %4202, %4203
  %4208 = select i1 %4206, i32 -1459693914, i32 665402074
  store i32 %4208, i32* %switchVar
  br label %loopEnd

originalBBpart24057:                              ; preds = %loopEntry
  %cmp805.reload = load volatile i1, i1* %cmp805.reg2mem
  %4209 = select i1 %cmp805.reload, i32 85698763, i32 -1663608441
  store i32 %4209, i32* %switchVar
  br label %loopEnd

if.then806:                                       ; preds = %loopEntry
  %4210 = load i32, i32* @x
  %4211 = load i32, i32* @y
  %4212 = add i32 %4210, -1071630408
  %4213 = sub i32 %4212, 1
  %4214 = sub i32 %4213, -1071630408
  %4215 = sub i32 %4210, 1
  %4216 = mul i32 %4210, %4214
  %4217 = urem i32 %4216, 2
  %4218 = icmp eq i32 %4217, 0
  %4219 = icmp slt i32 %4211, 10
  %4220 = and i1 %4218, %4219
  %4221 = xor i1 %4218, %4219
  %4222 = or i1 %4220, %4221
  %4223 = or i1 %4218, %4219
  %4224 = select i1 %4222, i32 1840193528, i32 -1040129541
  store i32 %4224, i32* %switchVar
  br label %loopEnd

originalBB4059:                                   ; preds = %loopEntry
  %4225 = load i32, i32* %s, align 4
  %4226 = sub i32 %4225, -2045927939
  %4227 = add i32 %4226, 31
  %4228 = add i32 %4227, -2045927939
  %add807 = add nsw i32 %4225, 31
  %4229 = sub i32 0, %4228
  %4230 = sub i32 0, 31
  %4231 = add i32 %4229, %4230
  %4232 = sub i32 0, %4231
  %add808 = add nsw i32 %4228, 31
  %4233 = add i32 %4232, -1453179246
  %4234 = add i32 %4233, 30
  %4235 = sub i32 %4234, -1453179246
  %add809 = add nsw i32 %4232, 30
  %4236 = sub i32 %4235, 1030144779
  %4237 = add i32 %4236, 31
  %4238 = add i32 %4237, 1030144779
  %add810 = add nsw i32 %4235, 31
  %4239 = sub i32 0, 30
  %4240 = sub i32 %4238, %4239
  %add811 = add nsw i32 %4238, 30
  %4241 = load i32, i32* %f, align 4
  %4242 = sub i32 0, %4240
  %4243 = sub i32 0, %4241
  %4244 = add i32 %4242, %4243
  %4245 = sub i32 0, %4244
  %add812 = add nsw i32 %4240, %4241
  %4246 = load i32, i32* %c, align 4
  %4247 = sub i32 %4245, -950666798
  %4248 = sub i32 %4247, %4246
  %4249 = add i32 %4248, -950666798
  %sub813 = sub nsw i32 %4245, %4246
  store i32 %4249, i32* %s, align 4
  %4250 = load i32, i32* %s, align 4
  %call814 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4250)
  %4251 = load i32, i32* @x
  %4252 = load i32, i32* @y
  %4253 = add i32 %4251, -1317063926
  %4254 = sub i32 %4253, 1
  %4255 = sub i32 %4254, -1317063926
  %4256 = sub i32 %4251, 1
  %4257 = mul i32 %4251, %4255
  %4258 = urem i32 %4257, 2
  %4259 = icmp eq i32 %4258, 0
  %4260 = icmp slt i32 %4252, 10
  %4261 = xor i1 %4259, true
  %4262 = xor i1 %4260, true
  %4263 = xor i1 false, true
  %4264 = and i1 %4261, false
  %4265 = and i1 %4259, %4263
  %4266 = and i1 %4262, false
  %4267 = and i1 %4260, %4263
  %4268 = or i1 %4264, %4265
  %4269 = or i1 %4266, %4267
  %4270 = xor i1 %4268, %4269
  %4271 = or i1 %4261, %4262
  %4272 = xor i1 %4271, true
  %4273 = or i1 false, %4263
  %4274 = and i1 %4272, %4273
  %4275 = or i1 %4270, %4274
  %4276 = or i1 %4259, %4260
  %4277 = select i1 %4275, i32 -356468165, i32 -1040129541
  store i32 %4277, i32* %switchVar
  br label %loopEnd

originalBBpart24105:                              ; preds = %loopEntry
  store i32 -1663608441, i32* %switchVar
  br label %loopEnd

if.end815:                                        ; preds = %loopEntry
  %4278 = load i32, i32* @x
  %4279 = load i32, i32* @y
  %4280 = add i32 %4278, -689597480
  %4281 = sub i32 %4280, 1
  %4282 = sub i32 %4281, -689597480
  %4283 = sub i32 %4278, 1
  %4284 = mul i32 %4278, %4282
  %4285 = urem i32 %4284, 2
  %4286 = icmp eq i32 %4285, 0
  %4287 = icmp slt i32 %4279, 10
  %4288 = and i1 %4286, %4287
  %4289 = xor i1 %4286, %4287
  %4290 = or i1 %4288, %4289
  %4291 = or i1 %4286, %4287
  %4292 = select i1 %4290, i32 -750691086, i32 -769301968
  store i32 %4292, i32* %switchVar
  br label %loopEnd

originalBB4107:                                   ; preds = %loopEntry
  %4293 = load i32, i32* @x
  %4294 = load i32, i32* @y
  %4295 = sub i32 0, 1
  %4296 = add i32 %4293, %4295
  %4297 = sub i32 %4293, 1
  %4298 = mul i32 %4293, %4296
  %4299 = urem i32 %4298, 2
  %4300 = icmp eq i32 %4299, 0
  %4301 = icmp slt i32 %4294, 10
  %4302 = and i1 %4300, %4301
  %4303 = xor i1 %4300, %4301
  %4304 = or i1 %4302, %4303
  %4305 = or i1 %4300, %4301
  %4306 = select i1 %4304, i32 -1263621802, i32 -769301968
  store i32 %4306, i32* %switchVar
  br label %loopEnd

originalBBpart24109:                              ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb816:                                         ; preds = %loopEntry
  %4307 = load i32, i32* @x
  %4308 = load i32, i32* @y
  %4309 = sub i32 0, 1
  %4310 = add i32 %4307, %4309
  %4311 = sub i32 %4307, 1
  %4312 = mul i32 %4307, %4310
  %4313 = urem i32 %4312, 2
  %4314 = icmp eq i32 %4313, 0
  %4315 = icmp slt i32 %4308, 10
  %4316 = xor i1 %4314, true
  %4317 = xor i1 %4315, true
  %4318 = xor i1 true, true
  %4319 = and i1 %4316, true
  %4320 = and i1 %4314, %4318
  %4321 = and i1 %4317, true
  %4322 = and i1 %4315, %4318
  %4323 = or i1 %4319, %4320
  %4324 = or i1 %4321, %4322
  %4325 = xor i1 %4323, %4324
  %4326 = or i1 %4316, %4317
  %4327 = xor i1 %4326, true
  %4328 = or i1 true, %4318
  %4329 = and i1 %4327, %4328
  %4330 = or i1 %4325, %4329
  %4331 = or i1 %4314, %4315
  %4332 = select i1 %4330, i32 69609552, i32 336335102
  store i32 %4332, i32* %switchVar
  br label %loopEnd

originalBB4111:                                   ; preds = %loopEntry
  %4333 = load i32, i32* %e, align 4
  %cmp817 = icmp eq i32 %4333, 1
  store i1 %cmp817, i1* %cmp817.reg2mem
  %4334 = load i32, i32* @x
  %4335 = load i32, i32* @y
  %4336 = add i32 %4334, 1792671335
  %4337 = sub i32 %4336, 1
  %4338 = sub i32 %4337, 1792671335
  %4339 = sub i32 %4334, 1
  %4340 = mul i32 %4334, %4338
  %4341 = urem i32 %4340, 2
  %4342 = icmp eq i32 %4341, 0
  %4343 = icmp slt i32 %4335, 10
  %4344 = xor i1 %4342, true
  %4345 = xor i1 %4343, true
  %4346 = xor i1 true, true
  %4347 = and i1 %4344, true
  %4348 = and i1 %4342, %4346
  %4349 = and i1 %4345, true
  %4350 = and i1 %4343, %4346
  %4351 = or i1 %4347, %4348
  %4352 = or i1 %4349, %4350
  %4353 = xor i1 %4351, %4352
  %4354 = or i1 %4344, %4345
  %4355 = xor i1 %4354, true
  %4356 = or i1 true, %4346
  %4357 = and i1 %4355, %4356
  %4358 = or i1 %4353, %4357
  %4359 = or i1 %4342, %4343
  %4360 = select i1 %4358, i32 -1992611226, i32 336335102
  store i32 %4360, i32* %switchVar
  br label %loopEnd

originalBBpart24113:                              ; preds = %loopEntry
  %cmp817.reload = load volatile i1, i1* %cmp817.reg2mem
  %4361 = select i1 %cmp817.reload, i32 -2069367072, i32 -1951494637
  store i32 %4361, i32* %switchVar
  br label %loopEnd

if.then818:                                       ; preds = %loopEntry
  %4362 = load i32, i32* %s, align 4
  %4363 = add i32 %4362, -1975697007
  %4364 = sub i32 %4363, 31
  %4365 = sub i32 %4364, -1975697007
  %sub819 = sub nsw i32 %4362, 31
  %4366 = add i32 %4365, 48689855
  %4367 = sub i32 %4366, 30
  %4368 = sub i32 %4367, 48689855
  %sub820 = sub nsw i32 %4365, 30
  %4369 = sub i32 0, 31
  %4370 = add i32 %4368, %4369
  %sub821 = sub nsw i32 %4368, 31
  %4371 = add i32 %4370, 2138010969
  %4372 = sub i32 %4371, 30
  %4373 = sub i32 %4372, 2138010969
  %sub822 = sub nsw i32 %4370, 30
  %4374 = add i32 %4373, 1455520299
  %4375 = sub i32 %4374, 31
  %4376 = sub i32 %4375, 1455520299
  %sub823 = sub nsw i32 %4373, 31
  %4377 = sub i32 %4376, -694956852
  %4378 = sub i32 %4377, 29
  %4379 = add i32 %4378, -694956852
  %sub824 = sub nsw i32 %4376, 29
  %4380 = sub i32 %4379, 522190959
  %4381 = sub i32 %4380, 31
  %4382 = add i32 %4381, 522190959
  %sub825 = sub nsw i32 %4379, 31
  %4383 = load i32, i32* %f, align 4
  %4384 = add i32 %4382, -718782069
  %4385 = add i32 %4384, %4383
  %4386 = sub i32 %4385, -718782069
  %add826 = add nsw i32 %4382, %4383
  %4387 = load i32, i32* %c, align 4
  %4388 = sub i32 0, %4387
  %4389 = add i32 %4386, %4388
  %sub827 = sub nsw i32 %4386, %4387
  store i32 %4389, i32* %s, align 4
  %4390 = load i32, i32* %s, align 4
  %call828 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4390)
  store i32 -1951494637, i32* %switchVar
  br label %loopEnd

if.end829:                                        ; preds = %loopEntry
  %4391 = load i32, i32* %e, align 4
  %cmp830 = icmp eq i32 %4391, 2
  %4392 = select i1 %cmp830, i32 -1138869943, i32 -1937944285
  store i32 %4392, i32* %switchVar
  br label %loopEnd

if.then831:                                       ; preds = %loopEntry
  %4393 = load i32, i32* @x
  %4394 = load i32, i32* @y
  %4395 = add i32 %4393, 261723824
  %4396 = sub i32 %4395, 1
  %4397 = sub i32 %4396, 261723824
  %4398 = sub i32 %4393, 1
  %4399 = mul i32 %4393, %4397
  %4400 = urem i32 %4399, 2
  %4401 = icmp eq i32 %4400, 0
  %4402 = icmp slt i32 %4394, 10
  %4403 = and i1 %4401, %4402
  %4404 = xor i1 %4401, %4402
  %4405 = or i1 %4403, %4404
  %4406 = or i1 %4401, %4402
  %4407 = select i1 %4405, i32 2118293245, i32 1158814341
  store i32 %4407, i32* %switchVar
  br label %loopEnd

originalBB4115:                                   ; preds = %loopEntry
  %4408 = load i32, i32* %s, align 4
  %4409 = sub i32 %4408, 72800365
  %4410 = sub i32 %4409, 31
  %4411 = add i32 %4410, 72800365
  %sub832 = sub nsw i32 %4408, 31
  %4412 = add i32 %4411, -1087413536
  %4413 = sub i32 %4412, 30
  %4414 = sub i32 %4413, -1087413536
  %sub833 = sub nsw i32 %4411, 30
  %4415 = sub i32 %4414, -628813106
  %4416 = sub i32 %4415, 31
  %4417 = add i32 %4416, -628813106
  %sub834 = sub nsw i32 %4414, 31
  %4418 = add i32 %4417, -1115088094
  %4419 = sub i32 %4418, 30
  %4420 = sub i32 %4419, -1115088094
  %sub835 = sub nsw i32 %4417, 30
  %4421 = add i32 %4420, 400390355
  %4422 = sub i32 %4421, 31
  %4423 = sub i32 %4422, 400390355
  %sub836 = sub nsw i32 %4420, 31
  %4424 = add i32 %4423, 135452133
  %4425 = sub i32 %4424, 29
  %4426 = sub i32 %4425, 135452133
  %sub837 = sub nsw i32 %4423, 29
  %4427 = load i32, i32* %f, align 4
  %4428 = sub i32 0, %4426
  %4429 = sub i32 0, %4427
  %4430 = add i32 %4428, %4429
  %4431 = sub i32 0, %4430
  %add838 = add nsw i32 %4426, %4427
  %4432 = load i32, i32* %c, align 4
  %4433 = add i32 %4431, 638950339
  %4434 = sub i32 %4433, %4432
  %4435 = sub i32 %4434, 638950339
  %sub839 = sub nsw i32 %4431, %4432
  store i32 %4435, i32* %s, align 4
  %4436 = load i32, i32* %s, align 4
  %call840 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4436)
  %4437 = load i32, i32* @x
  %4438 = load i32, i32* @y
  %4439 = sub i32 0, 1
  %4440 = add i32 %4437, %4439
  %4441 = sub i32 %4437, 1
  %4442 = mul i32 %4437, %4440
  %4443 = urem i32 %4442, 2
  %4444 = icmp eq i32 %4443, 0
  %4445 = icmp slt i32 %4438, 10
  %4446 = xor i1 %4444, true
  %4447 = xor i1 %4445, true
  %4448 = xor i1 true, true
  %4449 = and i1 %4446, true
  %4450 = and i1 %4444, %4448
  %4451 = and i1 %4447, true
  %4452 = and i1 %4445, %4448
  %4453 = or i1 %4449, %4450
  %4454 = or i1 %4451, %4452
  %4455 = xor i1 %4453, %4454
  %4456 = or i1 %4446, %4447
  %4457 = xor i1 %4456, true
  %4458 = or i1 true, %4448
  %4459 = and i1 %4457, %4458
  %4460 = or i1 %4455, %4459
  %4461 = or i1 %4444, %4445
  %4462 = select i1 %4460, i32 -266249869, i32 1158814341
  store i32 %4462, i32* %switchVar
  br label %loopEnd

originalBBpart24170:                              ; preds = %loopEntry
  store i32 -1937944285, i32* %switchVar
  br label %loopEnd

if.end841:                                        ; preds = %loopEntry
  %4463 = load i32, i32* %e, align 4
  %cmp842 = icmp eq i32 %4463, 3
  %4464 = select i1 %cmp842, i32 -786063490, i32 -1232154977
  store i32 %4464, i32* %switchVar
  br label %loopEnd

if.then843:                                       ; preds = %loopEntry
  %4465 = load i32, i32* %s, align 4
  %4466 = add i32 %4465, -1455897201
  %4467 = sub i32 %4466, 31
  %4468 = sub i32 %4467, -1455897201
  %sub844 = sub nsw i32 %4465, 31
  %4469 = add i32 %4468, 626237590
  %4470 = sub i32 %4469, 30
  %4471 = sub i32 %4470, 626237590
  %sub845 = sub nsw i32 %4468, 30
  %4472 = add i32 %4471, 1850754322
  %4473 = sub i32 %4472, 31
  %4474 = sub i32 %4473, 1850754322
  %sub846 = sub nsw i32 %4471, 31
  %4475 = sub i32 %4474, 1892051100
  %4476 = sub i32 %4475, 30
  %4477 = add i32 %4476, 1892051100
  %sub847 = sub nsw i32 %4474, 30
  %4478 = add i32 %4477, 1637213242
  %4479 = sub i32 %4478, 31
  %4480 = sub i32 %4479, 1637213242
  %sub848 = sub nsw i32 %4477, 31
  %4481 = load i32, i32* %f, align 4
  %4482 = sub i32 %4480, 1563498587
  %4483 = add i32 %4482, %4481
  %4484 = add i32 %4483, 1563498587
  %add849 = add nsw i32 %4480, %4481
  %4485 = load i32, i32* %c, align 4
  %4486 = sub i32 %4484, -1264560994
  %4487 = sub i32 %4486, %4485
  %4488 = add i32 %4487, -1264560994
  %sub850 = sub nsw i32 %4484, %4485
  store i32 %4488, i32* %s, align 4
  %4489 = load i32, i32* %s, align 4
  %call851 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4489)
  store i32 -1232154977, i32* %switchVar
  br label %loopEnd

if.end852:                                        ; preds = %loopEntry
  %4490 = load i32, i32* %e, align 4
  %cmp853 = icmp eq i32 %4490, 4
  %4491 = select i1 %cmp853, i32 1165548492, i32 -1625295113
  store i32 %4491, i32* %switchVar
  br label %loopEnd

if.then854:                                       ; preds = %loopEntry
  %4492 = load i32, i32* %s, align 4
  %4493 = sub i32 %4492, 628814436
  %4494 = sub i32 %4493, 31
  %4495 = add i32 %4494, 628814436
  %sub855 = sub nsw i32 %4492, 31
  %4496 = add i32 %4495, -1832424913
  %4497 = sub i32 %4496, 30
  %4498 = sub i32 %4497, -1832424913
  %sub856 = sub nsw i32 %4495, 30
  %4499 = sub i32 0, 31
  %4500 = add i32 %4498, %4499
  %sub857 = sub nsw i32 %4498, 31
  %4501 = sub i32 0, 30
  %4502 = add i32 %4500, %4501
  %sub858 = sub nsw i32 %4500, 30
  %4503 = load i32, i32* %f, align 4
  %4504 = add i32 %4502, -248725949
  %4505 = add i32 %4504, %4503
  %4506 = sub i32 %4505, -248725949
  %add859 = add nsw i32 %4502, %4503
  %4507 = load i32, i32* %c, align 4
  %4508 = sub i32 %4506, -517518074
  %4509 = sub i32 %4508, %4507
  %4510 = add i32 %4509, -517518074
  %sub860 = sub nsw i32 %4506, %4507
  store i32 %4510, i32* %s, align 4
  %4511 = load i32, i32* %s, align 4
  %call861 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4511)
  store i32 -1625295113, i32* %switchVar
  br label %loopEnd

if.end862:                                        ; preds = %loopEntry
  %4512 = load i32, i32* %e, align 4
  %cmp863 = icmp eq i32 %4512, 5
  %4513 = select i1 %cmp863, i32 -990968315, i32 -176728860
  store i32 %4513, i32* %switchVar
  br label %loopEnd

if.then864:                                       ; preds = %loopEntry
  %4514 = load i32, i32* %s, align 4
  %4515 = sub i32 0, 31
  %4516 = add i32 %4514, %4515
  %sub865 = sub nsw i32 %4514, 31
  %4517 = sub i32 0, 30
  %4518 = add i32 %4516, %4517
  %sub866 = sub nsw i32 %4516, 30
  %4519 = sub i32 0, 31
  %4520 = add i32 %4518, %4519
  %sub867 = sub nsw i32 %4518, 31
  %4521 = load i32, i32* %f, align 4
  %4522 = sub i32 0, %4520
  %4523 = sub i32 0, %4521
  %4524 = add i32 %4522, %4523
  %4525 = sub i32 0, %4524
  %add868 = add nsw i32 %4520, %4521
  %4526 = load i32, i32* %c, align 4
  %4527 = sub i32 0, %4526
  %4528 = add i32 %4525, %4527
  %sub869 = sub nsw i32 %4525, %4526
  store i32 %4528, i32* %s, align 4
  %4529 = load i32, i32* %s, align 4
  %call870 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4529)
  store i32 -176728860, i32* %switchVar
  br label %loopEnd

if.end871:                                        ; preds = %loopEntry
  %4530 = load i32, i32* %e, align 4
  %cmp872 = icmp eq i32 %4530, 6
  %4531 = select i1 %cmp872, i32 1494373214, i32 55117593
  store i32 %4531, i32* %switchVar
  br label %loopEnd

if.then873:                                       ; preds = %loopEntry
  %4532 = load i32, i32* @x
  %4533 = load i32, i32* @y
  %4534 = sub i32 0, 1
  %4535 = add i32 %4532, %4534
  %4536 = sub i32 %4532, 1
  %4537 = mul i32 %4532, %4535
  %4538 = urem i32 %4537, 2
  %4539 = icmp eq i32 %4538, 0
  %4540 = icmp slt i32 %4533, 10
  %4541 = xor i1 %4539, true
  %4542 = xor i1 %4540, true
  %4543 = xor i1 false, true
  %4544 = and i1 %4541, false
  %4545 = and i1 %4539, %4543
  %4546 = and i1 %4542, false
  %4547 = and i1 %4540, %4543
  %4548 = or i1 %4544, %4545
  %4549 = or i1 %4546, %4547
  %4550 = xor i1 %4548, %4549
  %4551 = or i1 %4541, %4542
  %4552 = xor i1 %4551, true
  %4553 = or i1 false, %4543
  %4554 = and i1 %4552, %4553
  %4555 = or i1 %4550, %4554
  %4556 = or i1 %4539, %4540
  %4557 = select i1 %4555, i32 -1727184455, i32 -694038485
  store i32 %4557, i32* %switchVar
  br label %loopEnd

originalBB4172:                                   ; preds = %loopEntry
  %4558 = load i32, i32* %s, align 4
  %4559 = sub i32 0, 31
  %4560 = add i32 %4558, %4559
  %sub874 = sub nsw i32 %4558, 31
  %4561 = sub i32 0, 30
  %4562 = add i32 %4560, %4561
  %sub875 = sub nsw i32 %4560, 30
  %4563 = load i32, i32* %f, align 4
  %4564 = sub i32 0, %4563
  %4565 = sub i32 %4562, %4564
  %add876 = add nsw i32 %4562, %4563
  %4566 = load i32, i32* %c, align 4
  %4567 = sub i32 %4565, -1211214895
  %4568 = sub i32 %4567, %4566
  %4569 = add i32 %4568, -1211214895
  %sub877 = sub nsw i32 %4565, %4566
  store i32 %4569, i32* %s, align 4
  %4570 = load i32, i32* %s, align 4
  %call878 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4570)
  %4571 = load i32, i32* @x
  %4572 = load i32, i32* @y
  %4573 = sub i32 0, 1
  %4574 = add i32 %4571, %4573
  %4575 = sub i32 %4571, 1
  %4576 = mul i32 %4571, %4574
  %4577 = urem i32 %4576, 2
  %4578 = icmp eq i32 %4577, 0
  %4579 = icmp slt i32 %4572, 10
  %4580 = and i1 %4578, %4579
  %4581 = xor i1 %4578, %4579
  %4582 = or i1 %4580, %4581
  %4583 = or i1 %4578, %4579
  %4584 = select i1 %4582, i32 2001437131, i32 -694038485
  store i32 %4584, i32* %switchVar
  br label %loopEnd

originalBBpart24199:                              ; preds = %loopEntry
  store i32 55117593, i32* %switchVar
  br label %loopEnd

if.end879:                                        ; preds = %loopEntry
  %4585 = load i32, i32* %e, align 4
  %cmp880 = icmp eq i32 %4585, 7
  %4586 = select i1 %cmp880, i32 1104931507, i32 650364974
  store i32 %4586, i32* %switchVar
  br label %loopEnd

if.then881:                                       ; preds = %loopEntry
  %4587 = load i32, i32* @x
  %4588 = load i32, i32* @y
  %4589 = add i32 %4587, 1697105758
  %4590 = sub i32 %4589, 1
  %4591 = sub i32 %4590, 1697105758
  %4592 = sub i32 %4587, 1
  %4593 = mul i32 %4587, %4591
  %4594 = urem i32 %4593, 2
  %4595 = icmp eq i32 %4594, 0
  %4596 = icmp slt i32 %4588, 10
  %4597 = and i1 %4595, %4596
  %4598 = xor i1 %4595, %4596
  %4599 = or i1 %4597, %4598
  %4600 = or i1 %4595, %4596
  %4601 = select i1 %4599, i32 -1731019515, i32 830037999
  store i32 %4601, i32* %switchVar
  br label %loopEnd

originalBB4201:                                   ; preds = %loopEntry
  %4602 = load i32, i32* %s, align 4
  %4603 = add i32 %4602, 1632648273
  %4604 = sub i32 %4603, 31
  %4605 = sub i32 %4604, 1632648273
  %sub882 = sub nsw i32 %4602, 31
  %4606 = load i32, i32* %f, align 4
  %4607 = sub i32 0, %4606
  %4608 = sub i32 %4605, %4607
  %add883 = add nsw i32 %4605, %4606
  %4609 = load i32, i32* %c, align 4
  %4610 = sub i32 %4608, -2060551812
  %4611 = sub i32 %4610, %4609
  %4612 = add i32 %4611, -2060551812
  %sub884 = sub nsw i32 %4608, %4609
  store i32 %4612, i32* %s, align 4
  %4613 = load i32, i32* %s, align 4
  %call885 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4613)
  %4614 = load i32, i32* @x
  %4615 = load i32, i32* @y
  %4616 = add i32 %4614, -1334532418
  %4617 = sub i32 %4616, 1
  %4618 = sub i32 %4617, -1334532418
  %4619 = sub i32 %4614, 1
  %4620 = mul i32 %4614, %4618
  %4621 = urem i32 %4620, 2
  %4622 = icmp eq i32 %4621, 0
  %4623 = icmp slt i32 %4615, 10
  %4624 = xor i1 %4622, true
  %4625 = xor i1 %4623, true
  %4626 = xor i1 false, true
  %4627 = and i1 %4624, false
  %4628 = and i1 %4622, %4626
  %4629 = and i1 %4625, false
  %4630 = and i1 %4623, %4626
  %4631 = or i1 %4627, %4628
  %4632 = or i1 %4629, %4630
  %4633 = xor i1 %4631, %4632
  %4634 = or i1 %4624, %4625
  %4635 = xor i1 %4634, true
  %4636 = or i1 false, %4626
  %4637 = and i1 %4635, %4636
  %4638 = or i1 %4633, %4637
  %4639 = or i1 %4622, %4623
  %4640 = select i1 %4638, i32 1351783538, i32 830037999
  store i32 %4640, i32* %switchVar
  br label %loopEnd

originalBBpart24225:                              ; preds = %loopEntry
  store i32 650364974, i32* %switchVar
  br label %loopEnd

if.end886:                                        ; preds = %loopEntry
  %4641 = load i32, i32* %e, align 4
  %cmp887 = icmp eq i32 %4641, 9
  %4642 = select i1 %cmp887, i32 -1274684882, i32 1872030230
  store i32 %4642, i32* %switchVar
  br label %loopEnd

if.then888:                                       ; preds = %loopEntry
  %4643 = load i32, i32* @x
  %4644 = load i32, i32* @y
  %4645 = sub i32 0, 1
  %4646 = add i32 %4643, %4645
  %4647 = sub i32 %4643, 1
  %4648 = mul i32 %4643, %4646
  %4649 = urem i32 %4648, 2
  %4650 = icmp eq i32 %4649, 0
  %4651 = icmp slt i32 %4644, 10
  %4652 = and i1 %4650, %4651
  %4653 = xor i1 %4650, %4651
  %4654 = or i1 %4652, %4653
  %4655 = or i1 %4650, %4651
  %4656 = select i1 %4654, i32 -699030034, i32 101230571
  store i32 %4656, i32* %switchVar
  br label %loopEnd

originalBB4227:                                   ; preds = %loopEntry
  %4657 = load i32, i32* %s, align 4
  %4658 = sub i32 %4657, 1999318572
  %4659 = add i32 %4658, 31
  %4660 = add i32 %4659, 1999318572
  %add889 = add nsw i32 %4657, 31
  %4661 = load i32, i32* %f, align 4
  %4662 = sub i32 0, %4660
  %4663 = sub i32 0, %4661
  %4664 = add i32 %4662, %4663
  %4665 = sub i32 0, %4664
  %add890 = add nsw i32 %4660, %4661
  %4666 = load i32, i32* %c, align 4
  %4667 = add i32 %4665, -1539647586
  %4668 = sub i32 %4667, %4666
  %4669 = sub i32 %4668, -1539647586
  %sub891 = sub nsw i32 %4665, %4666
  store i32 %4669, i32* %s, align 4
  %4670 = load i32, i32* %s, align 4
  %call892 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4670)
  %4671 = load i32, i32* @x
  %4672 = load i32, i32* @y
  %4673 = add i32 %4671, 509738257
  %4674 = sub i32 %4673, 1
  %4675 = sub i32 %4674, 509738257
  %4676 = sub i32 %4671, 1
  %4677 = mul i32 %4671, %4675
  %4678 = urem i32 %4677, 2
  %4679 = icmp eq i32 %4678, 0
  %4680 = icmp slt i32 %4672, 10
  %4681 = xor i1 %4679, true
  %4682 = xor i1 %4680, true
  %4683 = xor i1 false, true
  %4684 = and i1 %4681, false
  %4685 = and i1 %4679, %4683
  %4686 = and i1 %4682, false
  %4687 = and i1 %4680, %4683
  %4688 = or i1 %4684, %4685
  %4689 = or i1 %4686, %4687
  %4690 = xor i1 %4688, %4689
  %4691 = or i1 %4681, %4682
  %4692 = xor i1 %4691, true
  %4693 = or i1 false, %4683
  %4694 = and i1 %4692, %4693
  %4695 = or i1 %4690, %4694
  %4696 = or i1 %4679, %4680
  %4697 = select i1 %4695, i32 1715621628, i32 101230571
  store i32 %4697, i32* %switchVar
  br label %loopEnd

originalBBpart24250:                              ; preds = %loopEntry
  store i32 1872030230, i32* %switchVar
  br label %loopEnd

if.end893:                                        ; preds = %loopEntry
  %4698 = load i32, i32* %e, align 4
  %cmp894 = icmp eq i32 %4698, 10
  %4699 = select i1 %cmp894, i32 379676678, i32 -2124458388
  store i32 %4699, i32* %switchVar
  br label %loopEnd

if.then895:                                       ; preds = %loopEntry
  %4700 = load i32, i32* @x
  %4701 = load i32, i32* @y
  %4702 = sub i32 0, 1
  %4703 = add i32 %4700, %4702
  %4704 = sub i32 %4700, 1
  %4705 = mul i32 %4700, %4703
  %4706 = urem i32 %4705, 2
  %4707 = icmp eq i32 %4706, 0
  %4708 = icmp slt i32 %4701, 10
  %4709 = and i1 %4707, %4708
  %4710 = xor i1 %4707, %4708
  %4711 = or i1 %4709, %4710
  %4712 = or i1 %4707, %4708
  %4713 = select i1 %4711, i32 -474413486, i32 432950287
  store i32 %4713, i32* %switchVar
  br label %loopEnd

originalBB4252:                                   ; preds = %loopEntry
  %4714 = load i32, i32* %s, align 4
  %4715 = sub i32 %4714, -1986646185
  %4716 = add i32 %4715, 31
  %4717 = add i32 %4716, -1986646185
  %add896 = add nsw i32 %4714, 31
  %4718 = sub i32 0, 30
  %4719 = sub i32 %4717, %4718
  %add897 = add nsw i32 %4717, 30
  %4720 = load i32, i32* %f, align 4
  %4721 = sub i32 %4719, 1307634353
  %4722 = add i32 %4721, %4720
  %4723 = add i32 %4722, 1307634353
  %add898 = add nsw i32 %4719, %4720
  %4724 = load i32, i32* %c, align 4
  %4725 = sub i32 0, %4724
  %4726 = add i32 %4723, %4725
  %sub899 = sub nsw i32 %4723, %4724
  store i32 %4726, i32* %s, align 4
  %4727 = load i32, i32* %s, align 4
  %call900 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4727)
  %4728 = load i32, i32* @x
  %4729 = load i32, i32* @y
  %4730 = sub i32 %4728, 636092472
  %4731 = sub i32 %4730, 1
  %4732 = add i32 %4731, 636092472
  %4733 = sub i32 %4728, 1
  %4734 = mul i32 %4728, %4732
  %4735 = urem i32 %4734, 2
  %4736 = icmp eq i32 %4735, 0
  %4737 = icmp slt i32 %4729, 10
  %4738 = xor i1 %4736, true
  %4739 = xor i1 %4737, true
  %4740 = xor i1 true, true
  %4741 = and i1 %4738, true
  %4742 = and i1 %4736, %4740
  %4743 = and i1 %4739, true
  %4744 = and i1 %4737, %4740
  %4745 = or i1 %4741, %4742
  %4746 = or i1 %4743, %4744
  %4747 = xor i1 %4745, %4746
  %4748 = or i1 %4738, %4739
  %4749 = xor i1 %4748, true
  %4750 = or i1 true, %4740
  %4751 = and i1 %4749, %4750
  %4752 = or i1 %4747, %4751
  %4753 = or i1 %4736, %4737
  %4754 = select i1 %4752, i32 -305949566, i32 432950287
  store i32 %4754, i32* %switchVar
  br label %loopEnd

originalBBpart24283:                              ; preds = %loopEntry
  store i32 -2124458388, i32* %switchVar
  br label %loopEnd

if.end901:                                        ; preds = %loopEntry
  %4755 = load i32, i32* %e, align 4
  %cmp902 = icmp eq i32 %4755, 11
  %4756 = select i1 %cmp902, i32 -981056913, i32 1837493573
  store i32 %4756, i32* %switchVar
  br label %loopEnd

if.then903:                                       ; preds = %loopEntry
  %4757 = load i32, i32* %s, align 4
  %4758 = sub i32 %4757, 1744153878
  %4759 = add i32 %4758, 31
  %4760 = add i32 %4759, 1744153878
  %add904 = add nsw i32 %4757, 31
  %4761 = sub i32 %4760, -619111893
  %4762 = add i32 %4761, 30
  %4763 = add i32 %4762, -619111893
  %add905 = add nsw i32 %4760, 30
  %4764 = sub i32 %4763, 1355168636
  %4765 = add i32 %4764, 31
  %4766 = add i32 %4765, 1355168636
  %add906 = add nsw i32 %4763, 31
  %4767 = load i32, i32* %f, align 4
  %4768 = sub i32 %4766, 665344735
  %4769 = add i32 %4768, %4767
  %4770 = add i32 %4769, 665344735
  %add907 = add nsw i32 %4766, %4767
  %4771 = load i32, i32* %c, align 4
  %4772 = sub i32 %4770, -560663335
  %4773 = sub i32 %4772, %4771
  %4774 = add i32 %4773, -560663335
  %sub908 = sub nsw i32 %4770, %4771
  store i32 %4774, i32* %s, align 4
  %4775 = load i32, i32* %s, align 4
  %call909 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4775)
  store i32 1837493573, i32* %switchVar
  br label %loopEnd

if.end910:                                        ; preds = %loopEntry
  %4776 = load i32, i32* %e, align 4
  %cmp911 = icmp eq i32 %4776, 12
  %4777 = select i1 %cmp911, i32 1521976341, i32 956564447
  store i32 %4777, i32* %switchVar
  br label %loopEnd

if.then912:                                       ; preds = %loopEntry
  %4778 = load i32, i32* %s, align 4
  %4779 = sub i32 %4778, -523573465
  %4780 = add i32 %4779, 31
  %4781 = add i32 %4780, -523573465
  %add913 = add nsw i32 %4778, 31
  %4782 = sub i32 0, 30
  %4783 = sub i32 %4781, %4782
  %add914 = add nsw i32 %4781, 30
  %4784 = sub i32 %4783, -1181883439
  %4785 = add i32 %4784, 31
  %4786 = add i32 %4785, -1181883439
  %add915 = add nsw i32 %4783, 31
  %4787 = sub i32 0, 30
  %4788 = sub i32 %4786, %4787
  %add916 = add nsw i32 %4786, 30
  %4789 = load i32, i32* %f, align 4
  %4790 = add i32 %4788, 540575635
  %4791 = add i32 %4790, %4789
  %4792 = sub i32 %4791, 540575635
  %add917 = add nsw i32 %4788, %4789
  %4793 = load i32, i32* %c, align 4
  %4794 = sub i32 %4792, -103018869
  %4795 = sub i32 %4794, %4793
  %4796 = add i32 %4795, -103018869
  %sub918 = sub nsw i32 %4792, %4793
  store i32 %4796, i32* %s, align 4
  %4797 = load i32, i32* %s, align 4
  %call919 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4797)
  store i32 956564447, i32* %switchVar
  br label %loopEnd

if.end920:                                        ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb921:                                         ; preds = %loopEntry
  %4798 = load i32, i32* %e, align 4
  %cmp922 = icmp eq i32 %4798, 1
  %4799 = select i1 %cmp922, i32 -273081274, i32 1041809614
  store i32 %4799, i32* %switchVar
  br label %loopEnd

if.then923:                                       ; preds = %loopEntry
  %4800 = load i32, i32* %s, align 4
  %4801 = sub i32 %4800, -2096235746
  %4802 = sub i32 %4801, 31
  %4803 = add i32 %4802, -2096235746
  %sub924 = sub nsw i32 %4800, 31
  %4804 = sub i32 0, 31
  %4805 = add i32 %4803, %4804
  %sub925 = sub nsw i32 %4803, 31
  %4806 = sub i32 0, 30
  %4807 = add i32 %4805, %4806
  %sub926 = sub nsw i32 %4805, 30
  %4808 = add i32 %4807, -2113646156
  %4809 = sub i32 %4808, 31
  %4810 = sub i32 %4809, -2113646156
  %sub927 = sub nsw i32 %4807, 31
  %4811 = add i32 %4810, 424673437
  %4812 = sub i32 %4811, 30
  %4813 = sub i32 %4812, 424673437
  %sub928 = sub nsw i32 %4810, 30
  %4814 = sub i32 %4813, -1986786828
  %4815 = sub i32 %4814, 31
  %4816 = add i32 %4815, -1986786828
  %sub929 = sub nsw i32 %4813, 31
  %4817 = sub i32 %4816, 2141328370
  %4818 = sub i32 %4817, 29
  %4819 = add i32 %4818, 2141328370
  %sub930 = sub nsw i32 %4816, 29
  %4820 = sub i32 0, 31
  %4821 = add i32 %4819, %4820
  %sub931 = sub nsw i32 %4819, 31
  %4822 = load i32, i32* %f, align 4
  %4823 = add i32 %4821, 1436784182
  %4824 = add i32 %4823, %4822
  %4825 = sub i32 %4824, 1436784182
  %add932 = add nsw i32 %4821, %4822
  %4826 = load i32, i32* %c, align 4
  %4827 = sub i32 0, %4826
  %4828 = add i32 %4825, %4827
  %sub933 = sub nsw i32 %4825, %4826
  store i32 %4828, i32* %s, align 4
  %4829 = load i32, i32* %s, align 4
  %call934 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4829)
  store i32 1041809614, i32* %switchVar
  br label %loopEnd

if.end935:                                        ; preds = %loopEntry
  %4830 = load i32, i32* @x
  %4831 = load i32, i32* @y
  %4832 = sub i32 %4830, -669533959
  %4833 = sub i32 %4832, 1
  %4834 = add i32 %4833, -669533959
  %4835 = sub i32 %4830, 1
  %4836 = mul i32 %4830, %4834
  %4837 = urem i32 %4836, 2
  %4838 = icmp eq i32 %4837, 0
  %4839 = icmp slt i32 %4831, 10
  %4840 = and i1 %4838, %4839
  %4841 = xor i1 %4838, %4839
  %4842 = or i1 %4840, %4841
  %4843 = or i1 %4838, %4839
  %4844 = select i1 %4842, i32 -785674141, i32 -1587670273
  store i32 %4844, i32* %switchVar
  br label %loopEnd

originalBB4285:                                   ; preds = %loopEntry
  %4845 = load i32, i32* %e, align 4
  %cmp936 = icmp eq i32 %4845, 2
  store i1 %cmp936, i1* %cmp936.reg2mem
  %4846 = load i32, i32* @x
  %4847 = load i32, i32* @y
  %4848 = add i32 %4846, 1279200021
  %4849 = sub i32 %4848, 1
  %4850 = sub i32 %4849, 1279200021
  %4851 = sub i32 %4846, 1
  %4852 = mul i32 %4846, %4850
  %4853 = urem i32 %4852, 2
  %4854 = icmp eq i32 %4853, 0
  %4855 = icmp slt i32 %4847, 10
  %4856 = and i1 %4854, %4855
  %4857 = xor i1 %4854, %4855
  %4858 = or i1 %4856, %4857
  %4859 = or i1 %4854, %4855
  %4860 = select i1 %4858, i32 1381383977, i32 -1587670273
  store i32 %4860, i32* %switchVar
  br label %loopEnd

originalBBpart24287:                              ; preds = %loopEntry
  %cmp936.reload = load volatile i1, i1* %cmp936.reg2mem
  %4861 = select i1 %cmp936.reload, i32 -1201356534, i32 -1905633544
  store i32 %4861, i32* %switchVar
  br label %loopEnd

if.then937:                                       ; preds = %loopEntry
  %4862 = load i32, i32* %s, align 4
  %4863 = sub i32 %4862, -1700025017
  %4864 = sub i32 %4863, 31
  %4865 = add i32 %4864, -1700025017
  %sub938 = sub nsw i32 %4862, 31
  %4866 = add i32 %4865, -1474456544
  %4867 = sub i32 %4866, 31
  %4868 = sub i32 %4867, -1474456544
  %sub939 = sub nsw i32 %4865, 31
  %4869 = sub i32 %4868, 383307012
  %4870 = sub i32 %4869, 30
  %4871 = add i32 %4870, 383307012
  %sub940 = sub nsw i32 %4868, 30
  %4872 = sub i32 %4871, 1598351358
  %4873 = sub i32 %4872, 31
  %4874 = add i32 %4873, 1598351358
  %sub941 = sub nsw i32 %4871, 31
  %4875 = add i32 %4874, -1359718603
  %4876 = sub i32 %4875, 30
  %4877 = sub i32 %4876, -1359718603
  %sub942 = sub nsw i32 %4874, 30
  %4878 = sub i32 %4877, 1057377241
  %4879 = sub i32 %4878, 31
  %4880 = add i32 %4879, 1057377241
  %sub943 = sub nsw i32 %4877, 31
  %4881 = sub i32 0, 29
  %4882 = add i32 %4880, %4881
  %sub944 = sub nsw i32 %4880, 29
  %4883 = load i32, i32* %f, align 4
  %4884 = sub i32 0, %4883
  %4885 = sub i32 %4882, %4884
  %add945 = add nsw i32 %4882, %4883
  %4886 = load i32, i32* %c, align 4
  %4887 = sub i32 0, %4886
  %4888 = add i32 %4885, %4887
  %sub946 = sub nsw i32 %4885, %4886
  store i32 %4888, i32* %s, align 4
  %4889 = load i32, i32* %s, align 4
  %call947 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4889)
  store i32 -1905633544, i32* %switchVar
  br label %loopEnd

if.end948:                                        ; preds = %loopEntry
  %4890 = load i32, i32* @x
  %4891 = load i32, i32* @y
  %4892 = add i32 %4890, -1497184784
  %4893 = sub i32 %4892, 1
  %4894 = sub i32 %4893, -1497184784
  %4895 = sub i32 %4890, 1
  %4896 = mul i32 %4890, %4894
  %4897 = urem i32 %4896, 2
  %4898 = icmp eq i32 %4897, 0
  %4899 = icmp slt i32 %4891, 10
  %4900 = xor i1 %4898, true
  %4901 = xor i1 %4899, true
  %4902 = xor i1 true, true
  %4903 = and i1 %4900, true
  %4904 = and i1 %4898, %4902
  %4905 = and i1 %4901, true
  %4906 = and i1 %4899, %4902
  %4907 = or i1 %4903, %4904
  %4908 = or i1 %4905, %4906
  %4909 = xor i1 %4907, %4908
  %4910 = or i1 %4900, %4901
  %4911 = xor i1 %4910, true
  %4912 = or i1 true, %4902
  %4913 = and i1 %4911, %4912
  %4914 = or i1 %4909, %4913
  %4915 = or i1 %4898, %4899
  %4916 = select i1 %4914, i32 1372445417, i32 866786068
  store i32 %4916, i32* %switchVar
  br label %loopEnd

originalBB4289:                                   ; preds = %loopEntry
  %4917 = load i32, i32* %e, align 4
  %cmp949 = icmp eq i32 %4917, 3
  store i1 %cmp949, i1* %cmp949.reg2mem
  %4918 = load i32, i32* @x
  %4919 = load i32, i32* @y
  %4920 = sub i32 0, 1
  %4921 = add i32 %4918, %4920
  %4922 = sub i32 %4918, 1
  %4923 = mul i32 %4918, %4921
  %4924 = urem i32 %4923, 2
  %4925 = icmp eq i32 %4924, 0
  %4926 = icmp slt i32 %4919, 10
  %4927 = xor i1 %4925, true
  %4928 = xor i1 %4926, true
  %4929 = xor i1 true, true
  %4930 = and i1 %4927, true
  %4931 = and i1 %4925, %4929
  %4932 = and i1 %4928, true
  %4933 = and i1 %4926, %4929
  %4934 = or i1 %4930, %4931
  %4935 = or i1 %4932, %4933
  %4936 = xor i1 %4934, %4935
  %4937 = or i1 %4927, %4928
  %4938 = xor i1 %4937, true
  %4939 = or i1 true, %4929
  %4940 = and i1 %4938, %4939
  %4941 = or i1 %4936, %4940
  %4942 = or i1 %4925, %4926
  %4943 = select i1 %4941, i32 181374990, i32 866786068
  store i32 %4943, i32* %switchVar
  br label %loopEnd

originalBBpart24291:                              ; preds = %loopEntry
  %cmp949.reload = load volatile i1, i1* %cmp949.reg2mem
  %4944 = select i1 %cmp949.reload, i32 1517683573, i32 -879922751
  store i32 %4944, i32* %switchVar
  br label %loopEnd

if.then950:                                       ; preds = %loopEntry
  %4945 = load i32, i32* %s, align 4
  %4946 = add i32 %4945, -407352536
  %4947 = sub i32 %4946, 31
  %4948 = sub i32 %4947, -407352536
  %sub951 = sub nsw i32 %4945, 31
  %4949 = add i32 %4948, 1072387652
  %4950 = sub i32 %4949, 31
  %4951 = sub i32 %4950, 1072387652
  %sub952 = sub nsw i32 %4948, 31
  %4952 = sub i32 %4951, 542810026
  %4953 = sub i32 %4952, 30
  %4954 = add i32 %4953, 542810026
  %sub953 = sub nsw i32 %4951, 30
  %4955 = add i32 %4954, 1046154011
  %4956 = sub i32 %4955, 31
  %4957 = sub i32 %4956, 1046154011
  %sub954 = sub nsw i32 %4954, 31
  %4958 = sub i32 %4957, -2128242446
  %4959 = sub i32 %4958, 30
  %4960 = add i32 %4959, -2128242446
  %sub955 = sub nsw i32 %4957, 30
  %4961 = sub i32 0, 31
  %4962 = add i32 %4960, %4961
  %sub956 = sub nsw i32 %4960, 31
  %4963 = load i32, i32* %f, align 4
  %4964 = sub i32 %4962, 87579572
  %4965 = add i32 %4964, %4963
  %4966 = add i32 %4965, 87579572
  %add957 = add nsw i32 %4962, %4963
  %4967 = load i32, i32* %c, align 4
  %4968 = sub i32 %4966, 1410289903
  %4969 = sub i32 %4968, %4967
  %4970 = add i32 %4969, 1410289903
  %sub958 = sub nsw i32 %4966, %4967
  store i32 %4970, i32* %s, align 4
  %4971 = load i32, i32* %s, align 4
  %call959 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %4971)
  store i32 -879922751, i32* %switchVar
  br label %loopEnd

if.end960:                                        ; preds = %loopEntry
  %4972 = load i32, i32* @x
  %4973 = load i32, i32* @y
  %4974 = sub i32 %4972, 2067463602
  %4975 = sub i32 %4974, 1
  %4976 = add i32 %4975, 2067463602
  %4977 = sub i32 %4972, 1
  %4978 = mul i32 %4972, %4976
  %4979 = urem i32 %4978, 2
  %4980 = icmp eq i32 %4979, 0
  %4981 = icmp slt i32 %4973, 10
  %4982 = xor i1 %4980, true
  %4983 = xor i1 %4981, true
  %4984 = xor i1 false, true
  %4985 = and i1 %4982, false
  %4986 = and i1 %4980, %4984
  %4987 = and i1 %4983, false
  %4988 = and i1 %4981, %4984
  %4989 = or i1 %4985, %4986
  %4990 = or i1 %4987, %4988
  %4991 = xor i1 %4989, %4990
  %4992 = or i1 %4982, %4983
  %4993 = xor i1 %4992, true
  %4994 = or i1 false, %4984
  %4995 = and i1 %4993, %4994
  %4996 = or i1 %4991, %4995
  %4997 = or i1 %4980, %4981
  %4998 = select i1 %4996, i32 971372955, i32 779816971
  store i32 %4998, i32* %switchVar
  br label %loopEnd

originalBB4293:                                   ; preds = %loopEntry
  %4999 = load i32, i32* %e, align 4
  %cmp961 = icmp eq i32 %4999, 4
  store i1 %cmp961, i1* %cmp961.reg2mem
  %5000 = load i32, i32* @x
  %5001 = load i32, i32* @y
  %5002 = sub i32 %5000, 547399115
  %5003 = sub i32 %5002, 1
  %5004 = add i32 %5003, 547399115
  %5005 = sub i32 %5000, 1
  %5006 = mul i32 %5000, %5004
  %5007 = urem i32 %5006, 2
  %5008 = icmp eq i32 %5007, 0
  %5009 = icmp slt i32 %5001, 10
  %5010 = xor i1 %5008, true
  %5011 = xor i1 %5009, true
  %5012 = xor i1 true, true
  %5013 = and i1 %5010, true
  %5014 = and i1 %5008, %5012
  %5015 = and i1 %5011, true
  %5016 = and i1 %5009, %5012
  %5017 = or i1 %5013, %5014
  %5018 = or i1 %5015, %5016
  %5019 = xor i1 %5017, %5018
  %5020 = or i1 %5010, %5011
  %5021 = xor i1 %5020, true
  %5022 = or i1 true, %5012
  %5023 = and i1 %5021, %5022
  %5024 = or i1 %5019, %5023
  %5025 = or i1 %5008, %5009
  %5026 = select i1 %5024, i32 -1973961536, i32 779816971
  store i32 %5026, i32* %switchVar
  br label %loopEnd

originalBBpart24295:                              ; preds = %loopEntry
  %cmp961.reload = load volatile i1, i1* %cmp961.reg2mem
  %5027 = select i1 %cmp961.reload, i32 2007437626, i32 651365966
  store i32 %5027, i32* %switchVar
  br label %loopEnd

if.then962:                                       ; preds = %loopEntry
  %5028 = load i32, i32* %s, align 4
  %5029 = sub i32 0, 31
  %5030 = add i32 %5028, %5029
  %sub963 = sub nsw i32 %5028, 31
  %5031 = sub i32 0, 31
  %5032 = add i32 %5030, %5031
  %sub964 = sub nsw i32 %5030, 31
  %5033 = sub i32 %5032, 672064049
  %5034 = sub i32 %5033, 30
  %5035 = add i32 %5034, 672064049
  %sub965 = sub nsw i32 %5032, 30
  %5036 = add i32 %5035, -1571599100
  %5037 = sub i32 %5036, 31
  %5038 = sub i32 %5037, -1571599100
  %sub966 = sub nsw i32 %5035, 31
  %5039 = add i32 %5038, 351946293
  %5040 = sub i32 %5039, 30
  %5041 = sub i32 %5040, 351946293
  %sub967 = sub nsw i32 %5038, 30
  %5042 = load i32, i32* %f, align 4
  %5043 = sub i32 0, %5042
  %5044 = sub i32 %5041, %5043
  %add968 = add nsw i32 %5041, %5042
  %5045 = load i32, i32* %c, align 4
  %5046 = sub i32 %5044, -847174927
  %5047 = sub i32 %5046, %5045
  %5048 = add i32 %5047, -847174927
  %sub969 = sub nsw i32 %5044, %5045
  store i32 %5048, i32* %s, align 4
  %5049 = load i32, i32* %s, align 4
  %call970 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5049)
  store i32 651365966, i32* %switchVar
  br label %loopEnd

if.end971:                                        ; preds = %loopEntry
  %5050 = load i32, i32* %e, align 4
  %cmp972 = icmp eq i32 %5050, 5
  %5051 = select i1 %cmp972, i32 152109436, i32 -502610160
  store i32 %5051, i32* %switchVar
  br label %loopEnd

if.then973:                                       ; preds = %loopEntry
  %5052 = load i32, i32* %s, align 4
  %5053 = sub i32 0, 31
  %5054 = add i32 %5052, %5053
  %sub974 = sub nsw i32 %5052, 31
  %5055 = sub i32 %5054, -1840679164
  %5056 = sub i32 %5055, 31
  %5057 = add i32 %5056, -1840679164
  %sub975 = sub nsw i32 %5054, 31
  %5058 = sub i32 0, 30
  %5059 = add i32 %5057, %5058
  %sub976 = sub nsw i32 %5057, 30
  %5060 = add i32 %5059, -523800301
  %5061 = sub i32 %5060, 31
  %5062 = sub i32 %5061, -523800301
  %sub977 = sub nsw i32 %5059, 31
  %5063 = load i32, i32* %f, align 4
  %5064 = sub i32 %5062, 549821046
  %5065 = add i32 %5064, %5063
  %5066 = add i32 %5065, 549821046
  %add978 = add nsw i32 %5062, %5063
  %5067 = load i32, i32* %c, align 4
  %5068 = sub i32 %5066, 851555889
  %5069 = sub i32 %5068, %5067
  %5070 = add i32 %5069, 851555889
  %sub979 = sub nsw i32 %5066, %5067
  store i32 %5070, i32* %s, align 4
  %5071 = load i32, i32* %s, align 4
  %call980 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5071)
  store i32 -502610160, i32* %switchVar
  br label %loopEnd

if.end981:                                        ; preds = %loopEntry
  %5072 = load i32, i32* %e, align 4
  %cmp982 = icmp eq i32 %5072, 6
  %5073 = select i1 %cmp982, i32 590395787, i32 -1685802684
  store i32 %5073, i32* %switchVar
  br label %loopEnd

if.then983:                                       ; preds = %loopEntry
  %5074 = load i32, i32* @x
  %5075 = load i32, i32* @y
  %5076 = sub i32 0, 1
  %5077 = add i32 %5074, %5076
  %5078 = sub i32 %5074, 1
  %5079 = mul i32 %5074, %5077
  %5080 = urem i32 %5079, 2
  %5081 = icmp eq i32 %5080, 0
  %5082 = icmp slt i32 %5075, 10
  %5083 = and i1 %5081, %5082
  %5084 = xor i1 %5081, %5082
  %5085 = or i1 %5083, %5084
  %5086 = or i1 %5081, %5082
  %5087 = select i1 %5085, i32 1929450195, i32 74005912
  store i32 %5087, i32* %switchVar
  br label %loopEnd

originalBB4297:                                   ; preds = %loopEntry
  %5088 = load i32, i32* %s, align 4
  %5089 = add i32 %5088, 1433534662
  %5090 = sub i32 %5089, 31
  %5091 = sub i32 %5090, 1433534662
  %sub984 = sub nsw i32 %5088, 31
  %5092 = add i32 %5091, 343371275
  %5093 = sub i32 %5092, 31
  %5094 = sub i32 %5093, 343371275
  %sub985 = sub nsw i32 %5091, 31
  %5095 = sub i32 0, 30
  %5096 = add i32 %5094, %5095
  %sub986 = sub nsw i32 %5094, 30
  %5097 = load i32, i32* %f, align 4
  %5098 = sub i32 %5096, 360009074
  %5099 = add i32 %5098, %5097
  %5100 = add i32 %5099, 360009074
  %add987 = add nsw i32 %5096, %5097
  %5101 = load i32, i32* %c, align 4
  %5102 = sub i32 %5100, -775337724
  %5103 = sub i32 %5102, %5101
  %5104 = add i32 %5103, -775337724
  %sub988 = sub nsw i32 %5100, %5101
  store i32 %5104, i32* %s, align 4
  %5105 = load i32, i32* %s, align 4
  %call989 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5105)
  %5106 = load i32, i32* @x
  %5107 = load i32, i32* @y
  %5108 = add i32 %5106, -1306086779
  %5109 = sub i32 %5108, 1
  %5110 = sub i32 %5109, -1306086779
  %5111 = sub i32 %5106, 1
  %5112 = mul i32 %5106, %5110
  %5113 = urem i32 %5112, 2
  %5114 = icmp eq i32 %5113, 0
  %5115 = icmp slt i32 %5107, 10
  %5116 = xor i1 %5114, true
  %5117 = xor i1 %5115, true
  %5118 = xor i1 true, true
  %5119 = and i1 %5116, true
  %5120 = and i1 %5114, %5118
  %5121 = and i1 %5117, true
  %5122 = and i1 %5115, %5118
  %5123 = or i1 %5119, %5120
  %5124 = or i1 %5121, %5122
  %5125 = xor i1 %5123, %5124
  %5126 = or i1 %5116, %5117
  %5127 = xor i1 %5126, true
  %5128 = or i1 true, %5118
  %5129 = and i1 %5127, %5128
  %5130 = or i1 %5125, %5129
  %5131 = or i1 %5114, %5115
  %5132 = select i1 %5130, i32 -368250559, i32 74005912
  store i32 %5132, i32* %switchVar
  br label %loopEnd

originalBBpart24342:                              ; preds = %loopEntry
  store i32 -1685802684, i32* %switchVar
  br label %loopEnd

if.end990:                                        ; preds = %loopEntry
  %5133 = load i32, i32* %e, align 4
  %cmp991 = icmp eq i32 %5133, 7
  %5134 = select i1 %cmp991, i32 1156030919, i32 -483729218
  store i32 %5134, i32* %switchVar
  br label %loopEnd

if.then992:                                       ; preds = %loopEntry
  %5135 = load i32, i32* %s, align 4
  %5136 = sub i32 0, 31
  %5137 = add i32 %5135, %5136
  %sub993 = sub nsw i32 %5135, 31
  %5138 = add i32 %5137, -1369294755
  %5139 = sub i32 %5138, 31
  %5140 = sub i32 %5139, -1369294755
  %sub994 = sub nsw i32 %5137, 31
  %5141 = load i32, i32* %f, align 4
  %5142 = add i32 %5140, 512946471
  %5143 = add i32 %5142, %5141
  %5144 = sub i32 %5143, 512946471
  %add995 = add nsw i32 %5140, %5141
  %5145 = load i32, i32* %c, align 4
  %5146 = sub i32 %5144, -1260652839
  %5147 = sub i32 %5146, %5145
  %5148 = add i32 %5147, -1260652839
  %sub996 = sub nsw i32 %5144, %5145
  store i32 %5148, i32* %s, align 4
  %5149 = load i32, i32* %s, align 4
  %call997 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5149)
  store i32 -483729218, i32* %switchVar
  br label %loopEnd

if.end998:                                        ; preds = %loopEntry
  %5150 = load i32, i32* %e, align 4
  %cmp999 = icmp eq i32 %5150, 8
  %5151 = select i1 %cmp999, i32 914857664, i32 -1589988128
  store i32 %5151, i32* %switchVar
  br label %loopEnd

if.then1000:                                      ; preds = %loopEntry
  %5152 = load i32, i32* @x
  %5153 = load i32, i32* @y
  %5154 = add i32 %5152, -886433788
  %5155 = sub i32 %5154, 1
  %5156 = sub i32 %5155, -886433788
  %5157 = sub i32 %5152, 1
  %5158 = mul i32 %5152, %5156
  %5159 = urem i32 %5158, 2
  %5160 = icmp eq i32 %5159, 0
  %5161 = icmp slt i32 %5153, 10
  %5162 = xor i1 %5160, true
  %5163 = xor i1 %5161, true
  %5164 = xor i1 false, true
  %5165 = and i1 %5162, false
  %5166 = and i1 %5160, %5164
  %5167 = and i1 %5163, false
  %5168 = and i1 %5161, %5164
  %5169 = or i1 %5165, %5166
  %5170 = or i1 %5167, %5168
  %5171 = xor i1 %5169, %5170
  %5172 = or i1 %5162, %5163
  %5173 = xor i1 %5172, true
  %5174 = or i1 false, %5164
  %5175 = and i1 %5173, %5174
  %5176 = or i1 %5171, %5175
  %5177 = or i1 %5160, %5161
  %5178 = select i1 %5176, i32 1045852028, i32 1230792233
  store i32 %5178, i32* %switchVar
  br label %loopEnd

originalBB4344:                                   ; preds = %loopEntry
  %5179 = load i32, i32* %s, align 4
  %5180 = add i32 %5179, -160353346
  %5181 = sub i32 %5180, 31
  %5182 = sub i32 %5181, -160353346
  %sub1001 = sub nsw i32 %5179, 31
  %5183 = load i32, i32* %f, align 4
  %5184 = sub i32 0, %5182
  %5185 = sub i32 0, %5183
  %5186 = add i32 %5184, %5185
  %5187 = sub i32 0, %5186
  %add1002 = add nsw i32 %5182, %5183
  %5188 = load i32, i32* %c, align 4
  %5189 = sub i32 0, %5188
  %5190 = add i32 %5187, %5189
  %sub1003 = sub nsw i32 %5187, %5188
  store i32 %5190, i32* %s, align 4
  %5191 = load i32, i32* %s, align 4
  %call1004 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5191)
  %5192 = load i32, i32* @x
  %5193 = load i32, i32* @y
  %5194 = sub i32 0, 1
  %5195 = add i32 %5192, %5194
  %5196 = sub i32 %5192, 1
  %5197 = mul i32 %5192, %5195
  %5198 = urem i32 %5197, 2
  %5199 = icmp eq i32 %5198, 0
  %5200 = icmp slt i32 %5193, 10
  %5201 = and i1 %5199, %5200
  %5202 = xor i1 %5199, %5200
  %5203 = or i1 %5201, %5202
  %5204 = or i1 %5199, %5200
  %5205 = select i1 %5203, i32 -54015433, i32 1230792233
  store i32 %5205, i32* %switchVar
  br label %loopEnd

originalBBpart24357:                              ; preds = %loopEntry
  store i32 -1589988128, i32* %switchVar
  br label %loopEnd

if.end1005:                                       ; preds = %loopEntry
  %5206 = load i32, i32* %e, align 4
  %cmp1006 = icmp eq i32 %5206, 10
  %5207 = select i1 %cmp1006, i32 1336064363, i32 685067489
  store i32 %5207, i32* %switchVar
  br label %loopEnd

if.then1007:                                      ; preds = %loopEntry
  %5208 = load i32, i32* %s, align 4
  %5209 = sub i32 %5208, 1555624689
  %5210 = add i32 %5209, 30
  %5211 = add i32 %5210, 1555624689
  %add1008 = add nsw i32 %5208, 30
  %5212 = load i32, i32* %f, align 4
  %5213 = sub i32 0, %5211
  %5214 = sub i32 0, %5212
  %5215 = add i32 %5213, %5214
  %5216 = sub i32 0, %5215
  %add1009 = add nsw i32 %5211, %5212
  %5217 = load i32, i32* %c, align 4
  %5218 = sub i32 0, %5217
  %5219 = add i32 %5216, %5218
  %sub1010 = sub nsw i32 %5216, %5217
  store i32 %5219, i32* %s, align 4
  %5220 = load i32, i32* %s, align 4
  %call1011 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5220)
  store i32 685067489, i32* %switchVar
  br label %loopEnd

if.end1012:                                       ; preds = %loopEntry
  %5221 = load i32, i32* @x
  %5222 = load i32, i32* @y
  %5223 = sub i32 %5221, 890087496
  %5224 = sub i32 %5223, 1
  %5225 = add i32 %5224, 890087496
  %5226 = sub i32 %5221, 1
  %5227 = mul i32 %5221, %5225
  %5228 = urem i32 %5227, 2
  %5229 = icmp eq i32 %5228, 0
  %5230 = icmp slt i32 %5222, 10
  %5231 = xor i1 %5229, true
  %5232 = xor i1 %5230, true
  %5233 = xor i1 false, true
  %5234 = and i1 %5231, false
  %5235 = and i1 %5229, %5233
  %5236 = and i1 %5232, false
  %5237 = and i1 %5230, %5233
  %5238 = or i1 %5234, %5235
  %5239 = or i1 %5236, %5237
  %5240 = xor i1 %5238, %5239
  %5241 = or i1 %5231, %5232
  %5242 = xor i1 %5241, true
  %5243 = or i1 false, %5233
  %5244 = and i1 %5242, %5243
  %5245 = or i1 %5240, %5244
  %5246 = or i1 %5229, %5230
  %5247 = select i1 %5245, i32 1120408221, i32 1804857
  store i32 %5247, i32* %switchVar
  br label %loopEnd

originalBB4359:                                   ; preds = %loopEntry
  %5248 = load i32, i32* %e, align 4
  %cmp1013 = icmp eq i32 %5248, 11
  store i1 %cmp1013, i1* %cmp1013.reg2mem
  %5249 = load i32, i32* @x
  %5250 = load i32, i32* @y
  %5251 = sub i32 %5249, 1356859592
  %5252 = sub i32 %5251, 1
  %5253 = add i32 %5252, 1356859592
  %5254 = sub i32 %5249, 1
  %5255 = mul i32 %5249, %5253
  %5256 = urem i32 %5255, 2
  %5257 = icmp eq i32 %5256, 0
  %5258 = icmp slt i32 %5250, 10
  %5259 = and i1 %5257, %5258
  %5260 = xor i1 %5257, %5258
  %5261 = or i1 %5259, %5260
  %5262 = or i1 %5257, %5258
  %5263 = select i1 %5261, i32 -560215487, i32 1804857
  store i32 %5263, i32* %switchVar
  br label %loopEnd

originalBBpart24361:                              ; preds = %loopEntry
  %cmp1013.reload = load volatile i1, i1* %cmp1013.reg2mem
  %5264 = select i1 %cmp1013.reload, i32 -901296656, i32 -1223045550
  store i32 %5264, i32* %switchVar
  br label %loopEnd

if.then1014:                                      ; preds = %loopEntry
  %5265 = load i32, i32* %s, align 4
  %5266 = sub i32 %5265, 374543967
  %5267 = add i32 %5266, 30
  %5268 = add i32 %5267, 374543967
  %add1015 = add nsw i32 %5265, 30
  %5269 = add i32 %5268, -1039330093
  %5270 = add i32 %5269, 31
  %5271 = sub i32 %5270, -1039330093
  %add1016 = add nsw i32 %5268, 31
  %5272 = load i32, i32* %f, align 4
  %5273 = sub i32 0, %5272
  %5274 = sub i32 %5271, %5273
  %add1017 = add nsw i32 %5271, %5272
  %5275 = load i32, i32* %c, align 4
  %5276 = add i32 %5274, -510979171
  %5277 = sub i32 %5276, %5275
  %5278 = sub i32 %5277, -510979171
  %sub1018 = sub nsw i32 %5274, %5275
  store i32 %5278, i32* %s, align 4
  %5279 = load i32, i32* %s, align 4
  %call1019 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5279)
  store i32 -1223045550, i32* %switchVar
  br label %loopEnd

if.end1020:                                       ; preds = %loopEntry
  %5280 = load i32, i32* %e, align 4
  %cmp1021 = icmp eq i32 %5280, 12
  %5281 = select i1 %cmp1021, i32 132388769, i32 418895697
  store i32 %5281, i32* %switchVar
  br label %loopEnd

if.then1022:                                      ; preds = %loopEntry
  %5282 = load i32, i32* %s, align 4
  %5283 = sub i32 0, %5282
  %5284 = sub i32 0, 30
  %5285 = add i32 %5283, %5284
  %5286 = sub i32 0, %5285
  %add1023 = add nsw i32 %5282, 30
  %5287 = sub i32 0, %5286
  %5288 = sub i32 0, 31
  %5289 = add i32 %5287, %5288
  %5290 = sub i32 0, %5289
  %add1024 = add nsw i32 %5286, 31
  %5291 = sub i32 0, 30
  %5292 = sub i32 %5290, %5291
  %add1025 = add nsw i32 %5290, 30
  %5293 = load i32, i32* %f, align 4
  %5294 = sub i32 %5292, 911878132
  %5295 = add i32 %5294, %5293
  %5296 = add i32 %5295, 911878132
  %add1026 = add nsw i32 %5292, %5293
  %5297 = load i32, i32* %c, align 4
  %5298 = sub i32 0, %5297
  %5299 = add i32 %5296, %5298
  %sub1027 = sub nsw i32 %5296, %5297
  store i32 %5299, i32* %s, align 4
  %5300 = load i32, i32* %s, align 4
  %call1028 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5300)
  store i32 418895697, i32* %switchVar
  br label %loopEnd

if.end1029:                                       ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb1030:                                        ; preds = %loopEntry
  %5301 = load i32, i32* @x
  %5302 = load i32, i32* @y
  %5303 = sub i32 0, 1
  %5304 = add i32 %5301, %5303
  %5305 = sub i32 %5301, 1
  %5306 = mul i32 %5301, %5304
  %5307 = urem i32 %5306, 2
  %5308 = icmp eq i32 %5307, 0
  %5309 = icmp slt i32 %5302, 10
  %5310 = xor i1 %5308, true
  %5311 = xor i1 %5309, true
  %5312 = xor i1 false, true
  %5313 = and i1 %5310, false
  %5314 = and i1 %5308, %5312
  %5315 = and i1 %5311, false
  %5316 = and i1 %5309, %5312
  %5317 = or i1 %5313, %5314
  %5318 = or i1 %5315, %5316
  %5319 = xor i1 %5317, %5318
  %5320 = or i1 %5310, %5311
  %5321 = xor i1 %5320, true
  %5322 = or i1 false, %5312
  %5323 = and i1 %5321, %5322
  %5324 = or i1 %5319, %5323
  %5325 = or i1 %5308, %5309
  %5326 = select i1 %5324, i32 335749813, i32 705016799
  store i32 %5326, i32* %switchVar
  br label %loopEnd

originalBB4363:                                   ; preds = %loopEntry
  %5327 = load i32, i32* %e, align 4
  %cmp1031 = icmp eq i32 %5327, 1
  store i1 %cmp1031, i1* %cmp1031.reg2mem
  %5328 = load i32, i32* @x
  %5329 = load i32, i32* @y
  %5330 = sub i32 %5328, -1367381117
  %5331 = sub i32 %5330, 1
  %5332 = add i32 %5331, -1367381117
  %5333 = sub i32 %5328, 1
  %5334 = mul i32 %5328, %5332
  %5335 = urem i32 %5334, 2
  %5336 = icmp eq i32 %5335, 0
  %5337 = icmp slt i32 %5329, 10
  %5338 = and i1 %5336, %5337
  %5339 = xor i1 %5336, %5337
  %5340 = or i1 %5338, %5339
  %5341 = or i1 %5336, %5337
  %5342 = select i1 %5340, i32 213127445, i32 705016799
  store i32 %5342, i32* %switchVar
  br label %loopEnd

originalBBpart24365:                              ; preds = %loopEntry
  %cmp1031.reload = load volatile i1, i1* %cmp1031.reg2mem
  %5343 = select i1 %cmp1031.reload, i32 -742237687, i32 877115691
  store i32 %5343, i32* %switchVar
  br label %loopEnd

if.then1032:                                      ; preds = %loopEntry
  %5344 = load i32, i32* %s, align 4
  %5345 = add i32 %5344, 611579752
  %5346 = sub i32 %5345, 30
  %5347 = sub i32 %5346, 611579752
  %sub1033 = sub nsw i32 %5344, 30
  %5348 = add i32 %5347, 1038832976
  %5349 = sub i32 %5348, 31
  %5350 = sub i32 %5349, 1038832976
  %sub1034 = sub nsw i32 %5347, 31
  %5351 = sub i32 %5350, 192065210
  %5352 = sub i32 %5351, 31
  %5353 = add i32 %5352, 192065210
  %sub1035 = sub nsw i32 %5350, 31
  %5354 = sub i32 0, 30
  %5355 = add i32 %5353, %5354
  %sub1036 = sub nsw i32 %5353, 30
  %5356 = sub i32 %5355, -2114779139
  %5357 = sub i32 %5356, 31
  %5358 = add i32 %5357, -2114779139
  %sub1037 = sub nsw i32 %5355, 31
  %5359 = sub i32 %5358, -910429463
  %5360 = sub i32 %5359, 30
  %5361 = add i32 %5360, -910429463
  %sub1038 = sub nsw i32 %5358, 30
  %5362 = sub i32 %5361, -31057551
  %5363 = sub i32 %5362, 31
  %5364 = add i32 %5363, -31057551
  %sub1039 = sub nsw i32 %5361, 31
  %5365 = add i32 %5364, -931715182
  %5366 = sub i32 %5365, 29
  %5367 = sub i32 %5366, -931715182
  %sub1040 = sub nsw i32 %5364, 29
  %5368 = sub i32 %5367, -459237053
  %5369 = sub i32 %5368, 31
  %5370 = add i32 %5369, -459237053
  %sub1041 = sub nsw i32 %5367, 31
  %5371 = load i32, i32* %f, align 4
  %5372 = sub i32 %5370, -401149719
  %5373 = add i32 %5372, %5371
  %5374 = add i32 %5373, -401149719
  %add1042 = add nsw i32 %5370, %5371
  %5375 = load i32, i32* %c, align 4
  %5376 = sub i32 0, %5375
  %5377 = add i32 %5374, %5376
  %sub1043 = sub nsw i32 %5374, %5375
  store i32 %5377, i32* %s, align 4
  %5378 = load i32, i32* %s, align 4
  %call1044 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5378)
  store i32 877115691, i32* %switchVar
  br label %loopEnd

if.end1045:                                       ; preds = %loopEntry
  %5379 = load i32, i32* %e, align 4
  %cmp1046 = icmp eq i32 %5379, 2
  %5380 = select i1 %cmp1046, i32 1916912482, i32 -1713466349
  store i32 %5380, i32* %switchVar
  br label %loopEnd

if.then1047:                                      ; preds = %loopEntry
  %5381 = load i32, i32* %s, align 4
  %5382 = sub i32 %5381, 2147323104
  %5383 = sub i32 %5382, 30
  %5384 = add i32 %5383, 2147323104
  %sub1048 = sub nsw i32 %5381, 30
  %5385 = sub i32 0, 31
  %5386 = add i32 %5384, %5385
  %sub1049 = sub nsw i32 %5384, 31
  %5387 = sub i32 0, 31
  %5388 = add i32 %5386, %5387
  %sub1050 = sub nsw i32 %5386, 31
  %5389 = sub i32 0, 30
  %5390 = add i32 %5388, %5389
  %sub1051 = sub nsw i32 %5388, 30
  %5391 = sub i32 0, 31
  %5392 = add i32 %5390, %5391
  %sub1052 = sub nsw i32 %5390, 31
  %5393 = add i32 %5392, -168526032
  %5394 = sub i32 %5393, 30
  %5395 = sub i32 %5394, -168526032
  %sub1053 = sub nsw i32 %5392, 30
  %5396 = sub i32 0, 31
  %5397 = add i32 %5395, %5396
  %sub1054 = sub nsw i32 %5395, 31
  %5398 = sub i32 %5397, 1688918498
  %5399 = sub i32 %5398, 29
  %5400 = add i32 %5399, 1688918498
  %sub1055 = sub nsw i32 %5397, 29
  %5401 = load i32, i32* %f, align 4
  %5402 = add i32 %5400, 836314031
  %5403 = add i32 %5402, %5401
  %5404 = sub i32 %5403, 836314031
  %add1056 = add nsw i32 %5400, %5401
  %5405 = load i32, i32* %c, align 4
  %5406 = add i32 %5404, -673845088
  %5407 = sub i32 %5406, %5405
  %5408 = sub i32 %5407, -673845088
  %sub1057 = sub nsw i32 %5404, %5405
  store i32 %5408, i32* %s, align 4
  %5409 = load i32, i32* %s, align 4
  %call1058 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5409)
  store i32 -1713466349, i32* %switchVar
  br label %loopEnd

if.end1059:                                       ; preds = %loopEntry
  %5410 = load i32, i32* %e, align 4
  %cmp1060 = icmp eq i32 %5410, 3
  %5411 = select i1 %cmp1060, i32 608346197, i32 1424277960
  store i32 %5411, i32* %switchVar
  br label %loopEnd

if.then1061:                                      ; preds = %loopEntry
  %5412 = load i32, i32* %s, align 4
  %5413 = add i32 %5412, -565312975
  %5414 = sub i32 %5413, 30
  %5415 = sub i32 %5414, -565312975
  %sub1062 = sub nsw i32 %5412, 30
  %5416 = sub i32 0, 31
  %5417 = add i32 %5415, %5416
  %sub1063 = sub nsw i32 %5415, 31
  %5418 = sub i32 0, 31
  %5419 = add i32 %5417, %5418
  %sub1064 = sub nsw i32 %5417, 31
  %5420 = sub i32 %5419, -141147016
  %5421 = sub i32 %5420, 30
  %5422 = add i32 %5421, -141147016
  %sub1065 = sub nsw i32 %5419, 30
  %5423 = add i32 %5422, 963597075
  %5424 = sub i32 %5423, 31
  %5425 = sub i32 %5424, 963597075
  %sub1066 = sub nsw i32 %5422, 31
  %5426 = add i32 %5425, 1771746331
  %5427 = sub i32 %5426, 30
  %5428 = sub i32 %5427, 1771746331
  %sub1067 = sub nsw i32 %5425, 30
  %5429 = sub i32 %5428, 684291079
  %5430 = sub i32 %5429, 31
  %5431 = add i32 %5430, 684291079
  %sub1068 = sub nsw i32 %5428, 31
  %5432 = load i32, i32* %f, align 4
  %5433 = sub i32 0, %5431
  %5434 = sub i32 0, %5432
  %5435 = add i32 %5433, %5434
  %5436 = sub i32 0, %5435
  %add1069 = add nsw i32 %5431, %5432
  %5437 = load i32, i32* %c, align 4
  %5438 = add i32 %5436, 607185700
  %5439 = sub i32 %5438, %5437
  %5440 = sub i32 %5439, 607185700
  %sub1070 = sub nsw i32 %5436, %5437
  store i32 %5440, i32* %s, align 4
  %5441 = load i32, i32* %s, align 4
  %call1071 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5441)
  store i32 1424277960, i32* %switchVar
  br label %loopEnd

if.end1072:                                       ; preds = %loopEntry
  %5442 = load i32, i32* %e, align 4
  %cmp1073 = icmp eq i32 %5442, 4
  %5443 = select i1 %cmp1073, i32 1283957890, i32 646055962
  store i32 %5443, i32* %switchVar
  br label %loopEnd

if.then1074:                                      ; preds = %loopEntry
  %5444 = load i32, i32* %s, align 4
  %5445 = sub i32 0, 30
  %5446 = add i32 %5444, %5445
  %sub1075 = sub nsw i32 %5444, 30
  %5447 = sub i32 0, 31
  %5448 = add i32 %5446, %5447
  %sub1076 = sub nsw i32 %5446, 31
  %5449 = sub i32 0, 31
  %5450 = add i32 %5448, %5449
  %sub1077 = sub nsw i32 %5448, 31
  %5451 = sub i32 %5450, -621969280
  %5452 = sub i32 %5451, 30
  %5453 = add i32 %5452, -621969280
  %sub1078 = sub nsw i32 %5450, 30
  %5454 = sub i32 0, 31
  %5455 = add i32 %5453, %5454
  %sub1079 = sub nsw i32 %5453, 31
  %5456 = sub i32 0, 30
  %5457 = add i32 %5455, %5456
  %sub1080 = sub nsw i32 %5455, 30
  %5458 = load i32, i32* %f, align 4
  %5459 = sub i32 %5457, -1613172653
  %5460 = add i32 %5459, %5458
  %5461 = add i32 %5460, -1613172653
  %add1081 = add nsw i32 %5457, %5458
  %5462 = load i32, i32* %c, align 4
  %5463 = add i32 %5461, -646544391
  %5464 = sub i32 %5463, %5462
  %5465 = sub i32 %5464, -646544391
  %sub1082 = sub nsw i32 %5461, %5462
  store i32 %5465, i32* %s, align 4
  %5466 = load i32, i32* %s, align 4
  %call1083 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5466)
  store i32 646055962, i32* %switchVar
  br label %loopEnd

if.end1084:                                       ; preds = %loopEntry
  %5467 = load i32, i32* @x
  %5468 = load i32, i32* @y
  %5469 = sub i32 %5467, -417278250
  %5470 = sub i32 %5469, 1
  %5471 = add i32 %5470, -417278250
  %5472 = sub i32 %5467, 1
  %5473 = mul i32 %5467, %5471
  %5474 = urem i32 %5473, 2
  %5475 = icmp eq i32 %5474, 0
  %5476 = icmp slt i32 %5468, 10
  %5477 = and i1 %5475, %5476
  %5478 = xor i1 %5475, %5476
  %5479 = or i1 %5477, %5478
  %5480 = or i1 %5475, %5476
  %5481 = select i1 %5479, i32 100221896, i32 -2126545518
  store i32 %5481, i32* %switchVar
  br label %loopEnd

originalBB4367:                                   ; preds = %loopEntry
  %5482 = load i32, i32* %e, align 4
  %cmp1085 = icmp eq i32 %5482, 5
  store i1 %cmp1085, i1* %cmp1085.reg2mem
  %5483 = load i32, i32* @x
  %5484 = load i32, i32* @y
  %5485 = sub i32 0, 1
  %5486 = add i32 %5483, %5485
  %5487 = sub i32 %5483, 1
  %5488 = mul i32 %5483, %5486
  %5489 = urem i32 %5488, 2
  %5490 = icmp eq i32 %5489, 0
  %5491 = icmp slt i32 %5484, 10
  %5492 = and i1 %5490, %5491
  %5493 = xor i1 %5490, %5491
  %5494 = or i1 %5492, %5493
  %5495 = or i1 %5490, %5491
  %5496 = select i1 %5494, i32 -1143431946, i32 -2126545518
  store i32 %5496, i32* %switchVar
  br label %loopEnd

originalBBpart24369:                              ; preds = %loopEntry
  %cmp1085.reload = load volatile i1, i1* %cmp1085.reg2mem
  %5497 = select i1 %cmp1085.reload, i32 846596771, i32 -899956219
  store i32 %5497, i32* %switchVar
  br label %loopEnd

if.then1086:                                      ; preds = %loopEntry
  %5498 = load i32, i32* @x
  %5499 = load i32, i32* @y
  %5500 = sub i32 %5498, -633464090
  %5501 = sub i32 %5500, 1
  %5502 = add i32 %5501, -633464090
  %5503 = sub i32 %5498, 1
  %5504 = mul i32 %5498, %5502
  %5505 = urem i32 %5504, 2
  %5506 = icmp eq i32 %5505, 0
  %5507 = icmp slt i32 %5499, 10
  %5508 = and i1 %5506, %5507
  %5509 = xor i1 %5506, %5507
  %5510 = or i1 %5508, %5509
  %5511 = or i1 %5506, %5507
  %5512 = select i1 %5510, i32 63331586, i32 1818834604
  store i32 %5512, i32* %switchVar
  br label %loopEnd

originalBB4371:                                   ; preds = %loopEntry
  %5513 = load i32, i32* %s, align 4
  %5514 = add i32 %5513, -1975078045
  %5515 = sub i32 %5514, 30
  %5516 = sub i32 %5515, -1975078045
  %sub1087 = sub nsw i32 %5513, 30
  %5517 = add i32 %5516, -224131697
  %5518 = sub i32 %5517, 31
  %5519 = sub i32 %5518, -224131697
  %sub1088 = sub nsw i32 %5516, 31
  %5520 = add i32 %5519, 772346036
  %5521 = sub i32 %5520, 31
  %5522 = sub i32 %5521, 772346036
  %sub1089 = sub nsw i32 %5519, 31
  %5523 = sub i32 0, 30
  %5524 = add i32 %5522, %5523
  %sub1090 = sub nsw i32 %5522, 30
  %5525 = sub i32 %5524, 494695867
  %5526 = sub i32 %5525, 31
  %5527 = add i32 %5526, 494695867
  %sub1091 = sub nsw i32 %5524, 31
  %5528 = load i32, i32* %f, align 4
  %5529 = add i32 %5527, 1704224852
  %5530 = add i32 %5529, %5528
  %5531 = sub i32 %5530, 1704224852
  %add1092 = add nsw i32 %5527, %5528
  %5532 = load i32, i32* %c, align 4
  %5533 = sub i32 %5531, -972359390
  %5534 = sub i32 %5533, %5532
  %5535 = add i32 %5534, -972359390
  %sub1093 = sub nsw i32 %5531, %5532
  store i32 %5535, i32* %s, align 4
  %5536 = load i32, i32* %s, align 4
  %call1094 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5536)
  %5537 = load i32, i32* @x
  %5538 = load i32, i32* @y
  %5539 = sub i32 0, 1
  %5540 = add i32 %5537, %5539
  %5541 = sub i32 %5537, 1
  %5542 = mul i32 %5537, %5540
  %5543 = urem i32 %5542, 2
  %5544 = icmp eq i32 %5543, 0
  %5545 = icmp slt i32 %5538, 10
  %5546 = xor i1 %5544, true
  %5547 = xor i1 %5545, true
  %5548 = xor i1 true, true
  %5549 = and i1 %5546, true
  %5550 = and i1 %5544, %5548
  %5551 = and i1 %5547, true
  %5552 = and i1 %5545, %5548
  %5553 = or i1 %5549, %5550
  %5554 = or i1 %5551, %5552
  %5555 = xor i1 %5553, %5554
  %5556 = or i1 %5546, %5547
  %5557 = xor i1 %5556, true
  %5558 = or i1 true, %5548
  %5559 = and i1 %5557, %5558
  %5560 = or i1 %5555, %5559
  %5561 = or i1 %5544, %5545
  %5562 = select i1 %5560, i32 40616819, i32 1818834604
  store i32 %5562, i32* %switchVar
  br label %loopEnd

originalBBpart24427:                              ; preds = %loopEntry
  store i32 -899956219, i32* %switchVar
  br label %loopEnd

if.end1095:                                       ; preds = %loopEntry
  %5563 = load i32, i32* @x
  %5564 = load i32, i32* @y
  %5565 = sub i32 %5563, -1271544560
  %5566 = sub i32 %5565, 1
  %5567 = add i32 %5566, -1271544560
  %5568 = sub i32 %5563, 1
  %5569 = mul i32 %5563, %5567
  %5570 = urem i32 %5569, 2
  %5571 = icmp eq i32 %5570, 0
  %5572 = icmp slt i32 %5564, 10
  %5573 = xor i1 %5571, true
  %5574 = xor i1 %5572, true
  %5575 = xor i1 false, true
  %5576 = and i1 %5573, false
  %5577 = and i1 %5571, %5575
  %5578 = and i1 %5574, false
  %5579 = and i1 %5572, %5575
  %5580 = or i1 %5576, %5577
  %5581 = or i1 %5578, %5579
  %5582 = xor i1 %5580, %5581
  %5583 = or i1 %5573, %5574
  %5584 = xor i1 %5583, true
  %5585 = or i1 false, %5575
  %5586 = and i1 %5584, %5585
  %5587 = or i1 %5582, %5586
  %5588 = or i1 %5571, %5572
  %5589 = select i1 %5587, i32 -1840347845, i32 -1995338979
  store i32 %5589, i32* %switchVar
  br label %loopEnd

originalBB4429:                                   ; preds = %loopEntry
  %5590 = load i32, i32* %e, align 4
  %cmp1096 = icmp eq i32 %5590, 6
  store i1 %cmp1096, i1* %cmp1096.reg2mem
  %5591 = load i32, i32* @x
  %5592 = load i32, i32* @y
  %5593 = add i32 %5591, 1547258930
  %5594 = sub i32 %5593, 1
  %5595 = sub i32 %5594, 1547258930
  %5596 = sub i32 %5591, 1
  %5597 = mul i32 %5591, %5595
  %5598 = urem i32 %5597, 2
  %5599 = icmp eq i32 %5598, 0
  %5600 = icmp slt i32 %5592, 10
  %5601 = xor i1 %5599, true
  %5602 = xor i1 %5600, true
  %5603 = xor i1 false, true
  %5604 = and i1 %5601, false
  %5605 = and i1 %5599, %5603
  %5606 = and i1 %5602, false
  %5607 = and i1 %5600, %5603
  %5608 = or i1 %5604, %5605
  %5609 = or i1 %5606, %5607
  %5610 = xor i1 %5608, %5609
  %5611 = or i1 %5601, %5602
  %5612 = xor i1 %5611, true
  %5613 = or i1 false, %5603
  %5614 = and i1 %5612, %5613
  %5615 = or i1 %5610, %5614
  %5616 = or i1 %5599, %5600
  %5617 = select i1 %5615, i32 -1946416205, i32 -1995338979
  store i32 %5617, i32* %switchVar
  br label %loopEnd

originalBBpart24431:                              ; preds = %loopEntry
  %cmp1096.reload = load volatile i1, i1* %cmp1096.reg2mem
  %5618 = select i1 %cmp1096.reload, i32 -744487518, i32 -1499076787
  store i32 %5618, i32* %switchVar
  br label %loopEnd

if.then1097:                                      ; preds = %loopEntry
  %5619 = load i32, i32* %s, align 4
  %5620 = sub i32 0, 30
  %5621 = add i32 %5619, %5620
  %sub1098 = sub nsw i32 %5619, 30
  %5622 = sub i32 0, 31
  %5623 = add i32 %5621, %5622
  %sub1099 = sub nsw i32 %5621, 31
  %5624 = add i32 %5623, -1465575335
  %5625 = sub i32 %5624, 31
  %5626 = sub i32 %5625, -1465575335
  %sub1100 = sub nsw i32 %5623, 31
  %5627 = sub i32 0, 30
  %5628 = add i32 %5626, %5627
  %sub1101 = sub nsw i32 %5626, 30
  %5629 = load i32, i32* %f, align 4
  %5630 = sub i32 0, %5629
  %5631 = sub i32 %5628, %5630
  %add1102 = add nsw i32 %5628, %5629
  %5632 = load i32, i32* %c, align 4
  %5633 = add i32 %5631, -164466692
  %5634 = sub i32 %5633, %5632
  %5635 = sub i32 %5634, -164466692
  %sub1103 = sub nsw i32 %5631, %5632
  store i32 %5635, i32* %s, align 4
  %5636 = load i32, i32* %s, align 4
  %call1104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5636)
  store i32 -1499076787, i32* %switchVar
  br label %loopEnd

if.end1105:                                       ; preds = %loopEntry
  %5637 = load i32, i32* %e, align 4
  %cmp1106 = icmp eq i32 %5637, 7
  %5638 = select i1 %cmp1106, i32 689631353, i32 1301328479
  store i32 %5638, i32* %switchVar
  br label %loopEnd

if.then1107:                                      ; preds = %loopEntry
  %5639 = load i32, i32* %s, align 4
  %5640 = add i32 %5639, 1953681550
  %5641 = sub i32 %5640, 30
  %5642 = sub i32 %5641, 1953681550
  %sub1108 = sub nsw i32 %5639, 30
  %5643 = sub i32 %5642, -924607688
  %5644 = sub i32 %5643, 31
  %5645 = add i32 %5644, -924607688
  %sub1109 = sub nsw i32 %5642, 31
  %5646 = sub i32 0, 31
  %5647 = add i32 %5645, %5646
  %sub1110 = sub nsw i32 %5645, 31
  %5648 = load i32, i32* %f, align 4
  %5649 = sub i32 %5647, -1352442425
  %5650 = add i32 %5649, %5648
  %5651 = add i32 %5650, -1352442425
  %add1111 = add nsw i32 %5647, %5648
  %5652 = load i32, i32* %c, align 4
  %5653 = add i32 %5651, -1619398004
  %5654 = sub i32 %5653, %5652
  %5655 = sub i32 %5654, -1619398004
  %sub1112 = sub nsw i32 %5651, %5652
  store i32 %5655, i32* %s, align 4
  %5656 = load i32, i32* %s, align 4
  %call1113 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5656)
  store i32 1301328479, i32* %switchVar
  br label %loopEnd

if.end1114:                                       ; preds = %loopEntry
  %5657 = load i32, i32* %e, align 4
  %cmp1115 = icmp eq i32 %5657, 8
  %5658 = select i1 %cmp1115, i32 -1467520537, i32 689481453
  store i32 %5658, i32* %switchVar
  br label %loopEnd

if.then1116:                                      ; preds = %loopEntry
  %5659 = load i32, i32* @x
  %5660 = load i32, i32* @y
  %5661 = add i32 %5659, 1022101718
  %5662 = sub i32 %5661, 1
  %5663 = sub i32 %5662, 1022101718
  %5664 = sub i32 %5659, 1
  %5665 = mul i32 %5659, %5663
  %5666 = urem i32 %5665, 2
  %5667 = icmp eq i32 %5666, 0
  %5668 = icmp slt i32 %5660, 10
  %5669 = xor i1 %5667, true
  %5670 = xor i1 %5668, true
  %5671 = xor i1 false, true
  %5672 = and i1 %5669, false
  %5673 = and i1 %5667, %5671
  %5674 = and i1 %5670, false
  %5675 = and i1 %5668, %5671
  %5676 = or i1 %5672, %5673
  %5677 = or i1 %5674, %5675
  %5678 = xor i1 %5676, %5677
  %5679 = or i1 %5669, %5670
  %5680 = xor i1 %5679, true
  %5681 = or i1 false, %5671
  %5682 = and i1 %5680, %5681
  %5683 = or i1 %5678, %5682
  %5684 = or i1 %5667, %5668
  %5685 = select i1 %5683, i32 -1979794549, i32 1526882932
  store i32 %5685, i32* %switchVar
  br label %loopEnd

originalBB4433:                                   ; preds = %loopEntry
  %5686 = load i32, i32* %s, align 4
  %5687 = add i32 %5686, 1566581457
  %5688 = sub i32 %5687, 30
  %5689 = sub i32 %5688, 1566581457
  %sub1117 = sub nsw i32 %5686, 30
  %5690 = sub i32 %5689, -1273004553
  %5691 = sub i32 %5690, 31
  %5692 = add i32 %5691, -1273004553
  %sub1118 = sub nsw i32 %5689, 31
  %5693 = load i32, i32* %f, align 4
  %5694 = sub i32 0, %5692
  %5695 = sub i32 0, %5693
  %5696 = add i32 %5694, %5695
  %5697 = sub i32 0, %5696
  %add1119 = add nsw i32 %5692, %5693
  %5698 = load i32, i32* %c, align 4
  %5699 = sub i32 0, %5698
  %5700 = add i32 %5697, %5699
  %sub1120 = sub nsw i32 %5697, %5698
  store i32 %5700, i32* %s, align 4
  %5701 = load i32, i32* %s, align 4
  %call1121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5701)
  %5702 = load i32, i32* @x
  %5703 = load i32, i32* @y
  %5704 = add i32 %5702, -1950501283
  %5705 = sub i32 %5704, 1
  %5706 = sub i32 %5705, -1950501283
  %5707 = sub i32 %5702, 1
  %5708 = mul i32 %5702, %5706
  %5709 = urem i32 %5708, 2
  %5710 = icmp eq i32 %5709, 0
  %5711 = icmp slt i32 %5703, 10
  %5712 = xor i1 %5710, true
  %5713 = xor i1 %5711, true
  %5714 = xor i1 false, true
  %5715 = and i1 %5712, false
  %5716 = and i1 %5710, %5714
  %5717 = and i1 %5713, false
  %5718 = and i1 %5711, %5714
  %5719 = or i1 %5715, %5716
  %5720 = or i1 %5717, %5718
  %5721 = xor i1 %5719, %5720
  %5722 = or i1 %5712, %5713
  %5723 = xor i1 %5722, true
  %5724 = or i1 false, %5714
  %5725 = and i1 %5723, %5724
  %5726 = or i1 %5721, %5725
  %5727 = or i1 %5710, %5711
  %5728 = select i1 %5726, i32 -1880772704, i32 1526882932
  store i32 %5728, i32* %switchVar
  br label %loopEnd

originalBBpart24474:                              ; preds = %loopEntry
  store i32 689481453, i32* %switchVar
  br label %loopEnd

if.end1122:                                       ; preds = %loopEntry
  %5729 = load i32, i32* %e, align 4
  %cmp1123 = icmp eq i32 %5729, 9
  %5730 = select i1 %cmp1123, i32 -158835285, i32 -1124477033
  store i32 %5730, i32* %switchVar
  br label %loopEnd

if.then1124:                                      ; preds = %loopEntry
  %5731 = load i32, i32* @x
  %5732 = load i32, i32* @y
  %5733 = sub i32 %5731, -1934745882
  %5734 = sub i32 %5733, 1
  %5735 = add i32 %5734, -1934745882
  %5736 = sub i32 %5731, 1
  %5737 = mul i32 %5731, %5735
  %5738 = urem i32 %5737, 2
  %5739 = icmp eq i32 %5738, 0
  %5740 = icmp slt i32 %5732, 10
  %5741 = and i1 %5739, %5740
  %5742 = xor i1 %5739, %5740
  %5743 = or i1 %5741, %5742
  %5744 = or i1 %5739, %5740
  %5745 = select i1 %5743, i32 -1447745402, i32 -360400044
  store i32 %5745, i32* %switchVar
  br label %loopEnd

originalBB4476:                                   ; preds = %loopEntry
  %5746 = load i32, i32* %s, align 4
  %5747 = sub i32 0, 30
  %5748 = add i32 %5746, %5747
  %sub1125 = sub nsw i32 %5746, 30
  %5749 = load i32, i32* %f, align 4
  %5750 = sub i32 %5748, 317924729
  %5751 = add i32 %5750, %5749
  %5752 = add i32 %5751, 317924729
  %add1126 = add nsw i32 %5748, %5749
  %5753 = load i32, i32* %c, align 4
  %5754 = sub i32 0, %5753
  %5755 = add i32 %5752, %5754
  %sub1127 = sub nsw i32 %5752, %5753
  store i32 %5755, i32* %s, align 4
  %5756 = load i32, i32* %s, align 4
  %call1128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5756)
  %5757 = load i32, i32* @x
  %5758 = load i32, i32* @y
  %5759 = sub i32 0, 1
  %5760 = add i32 %5757, %5759
  %5761 = sub i32 %5757, 1
  %5762 = mul i32 %5757, %5760
  %5763 = urem i32 %5762, 2
  %5764 = icmp eq i32 %5763, 0
  %5765 = icmp slt i32 %5758, 10
  %5766 = xor i1 %5764, true
  %5767 = xor i1 %5765, true
  %5768 = xor i1 true, true
  %5769 = and i1 %5766, true
  %5770 = and i1 %5764, %5768
  %5771 = and i1 %5767, true
  %5772 = and i1 %5765, %5768
  %5773 = or i1 %5769, %5770
  %5774 = or i1 %5771, %5772
  %5775 = xor i1 %5773, %5774
  %5776 = or i1 %5766, %5767
  %5777 = xor i1 %5776, true
  %5778 = or i1 true, %5768
  %5779 = and i1 %5777, %5778
  %5780 = or i1 %5775, %5779
  %5781 = or i1 %5764, %5765
  %5782 = select i1 %5780, i32 -1534248211, i32 -360400044
  store i32 %5782, i32* %switchVar
  br label %loopEnd

originalBBpart24498:                              ; preds = %loopEntry
  store i32 -1124477033, i32* %switchVar
  br label %loopEnd

if.end1129:                                       ; preds = %loopEntry
  %5783 = load i32, i32* %e, align 4
  %cmp1130 = icmp eq i32 %5783, 11
  %5784 = select i1 %cmp1130, i32 -1907985965, i32 -208746010
  store i32 %5784, i32* %switchVar
  br label %loopEnd

if.then1131:                                      ; preds = %loopEntry
  %5785 = load i32, i32* %s, align 4
  %5786 = sub i32 0, %5785
  %5787 = sub i32 0, 31
  %5788 = add i32 %5786, %5787
  %5789 = sub i32 0, %5788
  %add1132 = add nsw i32 %5785, 31
  %5790 = load i32, i32* %f, align 4
  %5791 = sub i32 %5789, 115457647
  %5792 = add i32 %5791, %5790
  %5793 = add i32 %5792, 115457647
  %add1133 = add nsw i32 %5789, %5790
  %5794 = load i32, i32* %c, align 4
  %5795 = sub i32 0, %5794
  %5796 = add i32 %5793, %5795
  %sub1134 = sub nsw i32 %5793, %5794
  store i32 %5796, i32* %s, align 4
  %5797 = load i32, i32* %s, align 4
  %call1135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5797)
  store i32 -208746010, i32* %switchVar
  br label %loopEnd

if.end1136:                                       ; preds = %loopEntry
  %5798 = load i32, i32* %e, align 4
  %cmp1137 = icmp eq i32 %5798, 12
  %5799 = select i1 %cmp1137, i32 -1988594481, i32 -1410127414
  store i32 %5799, i32* %switchVar
  br label %loopEnd

if.then1138:                                      ; preds = %loopEntry
  %5800 = load i32, i32* %s, align 4
  %5801 = add i32 %5800, 2103281078
  %5802 = add i32 %5801, 31
  %5803 = sub i32 %5802, 2103281078
  %add1139 = add nsw i32 %5800, 31
  %5804 = sub i32 0, %5803
  %5805 = sub i32 0, 30
  %5806 = add i32 %5804, %5805
  %5807 = sub i32 0, %5806
  %add1140 = add nsw i32 %5803, 30
  %5808 = load i32, i32* %f, align 4
  %5809 = add i32 %5807, -744769065
  %5810 = add i32 %5809, %5808
  %5811 = sub i32 %5810, -744769065
  %add1141 = add nsw i32 %5807, %5808
  %5812 = load i32, i32* %c, align 4
  %5813 = add i32 %5811, 1426004095
  %5814 = sub i32 %5813, %5812
  %5815 = sub i32 %5814, 1426004095
  %sub1142 = sub nsw i32 %5811, %5812
  store i32 %5815, i32* %s, align 4
  %5816 = load i32, i32* %s, align 4
  %call1143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5816)
  store i32 -1410127414, i32* %switchVar
  br label %loopEnd

if.end1144:                                       ; preds = %loopEntry
  %5817 = load i32, i32* @x
  %5818 = load i32, i32* @y
  %5819 = sub i32 %5817, -852999738
  %5820 = sub i32 %5819, 1
  %5821 = add i32 %5820, -852999738
  %5822 = sub i32 %5817, 1
  %5823 = mul i32 %5817, %5821
  %5824 = urem i32 %5823, 2
  %5825 = icmp eq i32 %5824, 0
  %5826 = icmp slt i32 %5818, 10
  %5827 = and i1 %5825, %5826
  %5828 = xor i1 %5825, %5826
  %5829 = or i1 %5827, %5828
  %5830 = or i1 %5825, %5826
  %5831 = select i1 %5829, i32 2139689484, i32 -1551403667
  store i32 %5831, i32* %switchVar
  br label %loopEnd

originalBB4500:                                   ; preds = %loopEntry
  %5832 = load i32, i32* @x
  %5833 = load i32, i32* @y
  %5834 = add i32 %5832, 1015837651
  %5835 = sub i32 %5834, 1
  %5836 = sub i32 %5835, 1015837651
  %5837 = sub i32 %5832, 1
  %5838 = mul i32 %5832, %5836
  %5839 = urem i32 %5838, 2
  %5840 = icmp eq i32 %5839, 0
  %5841 = icmp slt i32 %5833, 10
  %5842 = and i1 %5840, %5841
  %5843 = xor i1 %5840, %5841
  %5844 = or i1 %5842, %5843
  %5845 = or i1 %5840, %5841
  %5846 = select i1 %5844, i32 1799127503, i32 -1551403667
  store i32 %5846, i32* %switchVar
  br label %loopEnd

originalBBpart24502:                              ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb1145:                                        ; preds = %loopEntry
  %5847 = load i32, i32* %e, align 4
  %cmp1146 = icmp eq i32 %5847, 1
  %5848 = select i1 %cmp1146, i32 -520639396, i32 -181030996
  store i32 %5848, i32* %switchVar
  br label %loopEnd

if.then1147:                                      ; preds = %loopEntry
  %5849 = load i32, i32* %s, align 4
  %5850 = add i32 %5849, -855733634
  %5851 = sub i32 %5850, 31
  %5852 = sub i32 %5851, -855733634
  %sub1148 = sub nsw i32 %5849, 31
  %5853 = sub i32 %5852, 206468505
  %5854 = sub i32 %5853, 30
  %5855 = add i32 %5854, 206468505
  %sub1149 = sub nsw i32 %5852, 30
  %5856 = sub i32 %5855, 2146270024
  %5857 = sub i32 %5856, 31
  %5858 = add i32 %5857, 2146270024
  %sub1150 = sub nsw i32 %5855, 31
  %5859 = sub i32 %5858, -137656033
  %5860 = sub i32 %5859, 31
  %5861 = add i32 %5860, -137656033
  %sub1151 = sub nsw i32 %5858, 31
  %5862 = sub i32 %5861, -1401418105
  %5863 = sub i32 %5862, 30
  %5864 = add i32 %5863, -1401418105
  %sub1152 = sub nsw i32 %5861, 30
  %5865 = add i32 %5864, 2025799773
  %5866 = sub i32 %5865, 31
  %5867 = sub i32 %5866, 2025799773
  %sub1153 = sub nsw i32 %5864, 31
  %5868 = add i32 %5867, 711059219
  %5869 = sub i32 %5868, 30
  %5870 = sub i32 %5869, 711059219
  %sub1154 = sub nsw i32 %5867, 30
  %5871 = sub i32 0, 31
  %5872 = add i32 %5870, %5871
  %sub1155 = sub nsw i32 %5870, 31
  %5873 = sub i32 %5872, 644264861
  %5874 = sub i32 %5873, 29
  %5875 = add i32 %5874, 644264861
  %sub1156 = sub nsw i32 %5872, 29
  %5876 = sub i32 %5875, -422372849
  %5877 = sub i32 %5876, 31
  %5878 = add i32 %5877, -422372849
  %sub1157 = sub nsw i32 %5875, 31
  %5879 = load i32, i32* %f, align 4
  %5880 = sub i32 0, %5878
  %5881 = sub i32 0, %5879
  %5882 = add i32 %5880, %5881
  %5883 = sub i32 0, %5882
  %add1158 = add nsw i32 %5878, %5879
  %5884 = load i32, i32* %c, align 4
  %5885 = sub i32 %5883, -1250064699
  %5886 = sub i32 %5885, %5884
  %5887 = add i32 %5886, -1250064699
  %sub1159 = sub nsw i32 %5883, %5884
  store i32 %5887, i32* %s, align 4
  %5888 = load i32, i32* %s, align 4
  %call1160 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5888)
  store i32 -181030996, i32* %switchVar
  br label %loopEnd

if.end1161:                                       ; preds = %loopEntry
  %5889 = load i32, i32* @x
  %5890 = load i32, i32* @y
  %5891 = add i32 %5889, -1196171280
  %5892 = sub i32 %5891, 1
  %5893 = sub i32 %5892, -1196171280
  %5894 = sub i32 %5889, 1
  %5895 = mul i32 %5889, %5893
  %5896 = urem i32 %5895, 2
  %5897 = icmp eq i32 %5896, 0
  %5898 = icmp slt i32 %5890, 10
  %5899 = and i1 %5897, %5898
  %5900 = xor i1 %5897, %5898
  %5901 = or i1 %5899, %5900
  %5902 = or i1 %5897, %5898
  %5903 = select i1 %5901, i32 1427037174, i32 851526482
  store i32 %5903, i32* %switchVar
  br label %loopEnd

originalBB4504:                                   ; preds = %loopEntry
  %5904 = load i32, i32* %e, align 4
  %cmp1162 = icmp eq i32 %5904, 2
  store i1 %cmp1162, i1* %cmp1162.reg2mem
  %5905 = load i32, i32* @x
  %5906 = load i32, i32* @y
  %5907 = sub i32 %5905, 1758253618
  %5908 = sub i32 %5907, 1
  %5909 = add i32 %5908, 1758253618
  %5910 = sub i32 %5905, 1
  %5911 = mul i32 %5905, %5909
  %5912 = urem i32 %5911, 2
  %5913 = icmp eq i32 %5912, 0
  %5914 = icmp slt i32 %5906, 10
  %5915 = and i1 %5913, %5914
  %5916 = xor i1 %5913, %5914
  %5917 = or i1 %5915, %5916
  %5918 = or i1 %5913, %5914
  %5919 = select i1 %5917, i32 776960909, i32 851526482
  store i32 %5919, i32* %switchVar
  br label %loopEnd

originalBBpart24506:                              ; preds = %loopEntry
  %cmp1162.reload = load volatile i1, i1* %cmp1162.reg2mem
  %5920 = select i1 %cmp1162.reload, i32 -155863520, i32 180630612
  store i32 %5920, i32* %switchVar
  br label %loopEnd

if.then1163:                                      ; preds = %loopEntry
  %5921 = load i32, i32* %s, align 4
  %5922 = sub i32 0, 31
  %5923 = add i32 %5921, %5922
  %sub1164 = sub nsw i32 %5921, 31
  %5924 = sub i32 %5923, 505490630
  %5925 = sub i32 %5924, 30
  %5926 = add i32 %5925, 505490630
  %sub1165 = sub nsw i32 %5923, 30
  %5927 = add i32 %5926, 627898149
  %5928 = sub i32 %5927, 31
  %5929 = sub i32 %5928, 627898149
  %sub1166 = sub nsw i32 %5926, 31
  %5930 = add i32 %5929, -286020949
  %5931 = sub i32 %5930, 31
  %5932 = sub i32 %5931, -286020949
  %sub1167 = sub nsw i32 %5929, 31
  %5933 = add i32 %5932, -346721642
  %5934 = sub i32 %5933, 30
  %5935 = sub i32 %5934, -346721642
  %sub1168 = sub nsw i32 %5932, 30
  %5936 = add i32 %5935, -1729328322
  %5937 = sub i32 %5936, 31
  %5938 = sub i32 %5937, -1729328322
  %sub1169 = sub nsw i32 %5935, 31
  %5939 = add i32 %5938, 1202018938
  %5940 = sub i32 %5939, 30
  %5941 = sub i32 %5940, 1202018938
  %sub1170 = sub nsw i32 %5938, 30
  %5942 = sub i32 %5941, -1456165596
  %5943 = sub i32 %5942, 31
  %5944 = add i32 %5943, -1456165596
  %sub1171 = sub nsw i32 %5941, 31
  %5945 = sub i32 0, 29
  %5946 = add i32 %5944, %5945
  %sub1172 = sub nsw i32 %5944, 29
  %5947 = load i32, i32* %f, align 4
  %5948 = sub i32 0, %5947
  %5949 = sub i32 %5946, %5948
  %add1173 = add nsw i32 %5946, %5947
  %5950 = load i32, i32* %c, align 4
  %5951 = add i32 %5949, -1019970107
  %5952 = sub i32 %5951, %5950
  %5953 = sub i32 %5952, -1019970107
  %sub1174 = sub nsw i32 %5949, %5950
  store i32 %5953, i32* %s, align 4
  %5954 = load i32, i32* %s, align 4
  %call1175 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5954)
  store i32 180630612, i32* %switchVar
  br label %loopEnd

if.end1176:                                       ; preds = %loopEntry
  %5955 = load i32, i32* %e, align 4
  %cmp1177 = icmp eq i32 %5955, 3
  %5956 = select i1 %cmp1177, i32 -2137227400, i32 -1674484978
  store i32 %5956, i32* %switchVar
  br label %loopEnd

if.then1178:                                      ; preds = %loopEntry
  %5957 = load i32, i32* %s, align 4
  %5958 = sub i32 %5957, 2113950090
  %5959 = sub i32 %5958, 31
  %5960 = add i32 %5959, 2113950090
  %sub1179 = sub nsw i32 %5957, 31
  %5961 = add i32 %5960, 281066022
  %5962 = sub i32 %5961, 30
  %5963 = sub i32 %5962, 281066022
  %sub1180 = sub nsw i32 %5960, 30
  %5964 = add i32 %5963, 1830920299
  %5965 = sub i32 %5964, 31
  %5966 = sub i32 %5965, 1830920299
  %sub1181 = sub nsw i32 %5963, 31
  %5967 = add i32 %5966, 914442865
  %5968 = sub i32 %5967, 31
  %5969 = sub i32 %5968, 914442865
  %sub1182 = sub nsw i32 %5966, 31
  %5970 = sub i32 0, 30
  %5971 = add i32 %5969, %5970
  %sub1183 = sub nsw i32 %5969, 30
  %5972 = sub i32 %5971, -713569194
  %5973 = sub i32 %5972, 31
  %5974 = add i32 %5973, -713569194
  %sub1184 = sub nsw i32 %5971, 31
  %5975 = sub i32 0, 30
  %5976 = add i32 %5974, %5975
  %sub1185 = sub nsw i32 %5974, 30
  %5977 = sub i32 0, 31
  %5978 = add i32 %5976, %5977
  %sub1186 = sub nsw i32 %5976, 31
  %5979 = load i32, i32* %f, align 4
  %5980 = add i32 %5978, -1350383613
  %5981 = add i32 %5980, %5979
  %5982 = sub i32 %5981, -1350383613
  %add1187 = add nsw i32 %5978, %5979
  %5983 = load i32, i32* %c, align 4
  %5984 = sub i32 %5982, 1661945582
  %5985 = sub i32 %5984, %5983
  %5986 = add i32 %5985, 1661945582
  %sub1188 = sub nsw i32 %5982, %5983
  store i32 %5986, i32* %s, align 4
  %5987 = load i32, i32* %s, align 4
  %call1189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %5987)
  store i32 -1674484978, i32* %switchVar
  br label %loopEnd

if.end1190:                                       ; preds = %loopEntry
  %5988 = load i32, i32* %e, align 4
  %cmp1191 = icmp eq i32 %5988, 4
  %5989 = select i1 %cmp1191, i32 -903091941, i32 -1988307371
  store i32 %5989, i32* %switchVar
  br label %loopEnd

if.then1192:                                      ; preds = %loopEntry
  %5990 = load i32, i32* %s, align 4
  %5991 = add i32 %5990, 2122994801
  %5992 = sub i32 %5991, 31
  %5993 = sub i32 %5992, 2122994801
  %sub1193 = sub nsw i32 %5990, 31
  %5994 = add i32 %5993, -331033898
  %5995 = sub i32 %5994, 30
  %5996 = sub i32 %5995, -331033898
  %sub1194 = sub nsw i32 %5993, 30
  %5997 = sub i32 0, 31
  %5998 = add i32 %5996, %5997
  %sub1195 = sub nsw i32 %5996, 31
  %5999 = add i32 %5998, -2118888824
  %6000 = sub i32 %5999, 31
  %6001 = sub i32 %6000, -2118888824
  %sub1196 = sub nsw i32 %5998, 31
  %6002 = add i32 %6001, 1412441811
  %6003 = sub i32 %6002, 30
  %6004 = sub i32 %6003, 1412441811
  %sub1197 = sub nsw i32 %6001, 30
  %6005 = sub i32 0, 31
  %6006 = add i32 %6004, %6005
  %sub1198 = sub nsw i32 %6004, 31
  %6007 = add i32 %6006, 1754603885
  %6008 = sub i32 %6007, 30
  %6009 = sub i32 %6008, 1754603885
  %sub1199 = sub nsw i32 %6006, 30
  %6010 = load i32, i32* %f, align 4
  %6011 = sub i32 0, %6009
  %6012 = sub i32 0, %6010
  %6013 = add i32 %6011, %6012
  %6014 = sub i32 0, %6013
  %add1200 = add nsw i32 %6009, %6010
  %6015 = load i32, i32* %c, align 4
  %6016 = sub i32 %6014, -1612945218
  %6017 = sub i32 %6016, %6015
  %6018 = add i32 %6017, -1612945218
  %sub1201 = sub nsw i32 %6014, %6015
  store i32 %6018, i32* %s, align 4
  %6019 = load i32, i32* %s, align 4
  %call1202 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6019)
  store i32 -1988307371, i32* %switchVar
  br label %loopEnd

if.end1203:                                       ; preds = %loopEntry
  %6020 = load i32, i32* @x
  %6021 = load i32, i32* @y
  %6022 = sub i32 %6020, 64205891
  %6023 = sub i32 %6022, 1
  %6024 = add i32 %6023, 64205891
  %6025 = sub i32 %6020, 1
  %6026 = mul i32 %6020, %6024
  %6027 = urem i32 %6026, 2
  %6028 = icmp eq i32 %6027, 0
  %6029 = icmp slt i32 %6021, 10
  %6030 = xor i1 %6028, true
  %6031 = xor i1 %6029, true
  %6032 = xor i1 true, true
  %6033 = and i1 %6030, true
  %6034 = and i1 %6028, %6032
  %6035 = and i1 %6031, true
  %6036 = and i1 %6029, %6032
  %6037 = or i1 %6033, %6034
  %6038 = or i1 %6035, %6036
  %6039 = xor i1 %6037, %6038
  %6040 = or i1 %6030, %6031
  %6041 = xor i1 %6040, true
  %6042 = or i1 true, %6032
  %6043 = and i1 %6041, %6042
  %6044 = or i1 %6039, %6043
  %6045 = or i1 %6028, %6029
  %6046 = select i1 %6044, i32 -816128580, i32 277361419
  store i32 %6046, i32* %switchVar
  br label %loopEnd

originalBB4508:                                   ; preds = %loopEntry
  %6047 = load i32, i32* %e, align 4
  %cmp1204 = icmp eq i32 %6047, 5
  store i1 %cmp1204, i1* %cmp1204.reg2mem
  %6048 = load i32, i32* @x
  %6049 = load i32, i32* @y
  %6050 = sub i32 %6048, -1064407153
  %6051 = sub i32 %6050, 1
  %6052 = add i32 %6051, -1064407153
  %6053 = sub i32 %6048, 1
  %6054 = mul i32 %6048, %6052
  %6055 = urem i32 %6054, 2
  %6056 = icmp eq i32 %6055, 0
  %6057 = icmp slt i32 %6049, 10
  %6058 = and i1 %6056, %6057
  %6059 = xor i1 %6056, %6057
  %6060 = or i1 %6058, %6059
  %6061 = or i1 %6056, %6057
  %6062 = select i1 %6060, i32 -2017285612, i32 277361419
  store i32 %6062, i32* %switchVar
  br label %loopEnd

originalBBpart24510:                              ; preds = %loopEntry
  %cmp1204.reload = load volatile i1, i1* %cmp1204.reg2mem
  %6063 = select i1 %cmp1204.reload, i32 1597634273, i32 -2139882355
  store i32 %6063, i32* %switchVar
  br label %loopEnd

if.then1205:                                      ; preds = %loopEntry
  %6064 = load i32, i32* %s, align 4
  %6065 = sub i32 %6064, 2133813840
  %6066 = sub i32 %6065, 31
  %6067 = add i32 %6066, 2133813840
  %sub1206 = sub nsw i32 %6064, 31
  %6068 = add i32 %6067, -1430355169
  %6069 = sub i32 %6068, 30
  %6070 = sub i32 %6069, -1430355169
  %sub1207 = sub nsw i32 %6067, 30
  %6071 = add i32 %6070, -1354659417
  %6072 = sub i32 %6071, 31
  %6073 = sub i32 %6072, -1354659417
  %sub1208 = sub nsw i32 %6070, 31
  %6074 = sub i32 0, 31
  %6075 = add i32 %6073, %6074
  %sub1209 = sub nsw i32 %6073, 31
  %6076 = sub i32 %6075, 674951234
  %6077 = sub i32 %6076, 30
  %6078 = add i32 %6077, 674951234
  %sub1210 = sub nsw i32 %6075, 30
  %6079 = add i32 %6078, -917201706
  %6080 = sub i32 %6079, 31
  %6081 = sub i32 %6080, -917201706
  %sub1211 = sub nsw i32 %6078, 31
  %6082 = load i32, i32* %f, align 4
  %6083 = add i32 %6081, -391834495
  %6084 = add i32 %6083, %6082
  %6085 = sub i32 %6084, -391834495
  %add1212 = add nsw i32 %6081, %6082
  %6086 = load i32, i32* %c, align 4
  %6087 = add i32 %6085, -828403367
  %6088 = sub i32 %6087, %6086
  %6089 = sub i32 %6088, -828403367
  %sub1213 = sub nsw i32 %6085, %6086
  store i32 %6089, i32* %s, align 4
  %6090 = load i32, i32* %s, align 4
  %call1214 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6090)
  store i32 -2139882355, i32* %switchVar
  br label %loopEnd

if.end1215:                                       ; preds = %loopEntry
  %6091 = load i32, i32* %e, align 4
  %cmp1216 = icmp eq i32 %6091, 6
  %6092 = select i1 %cmp1216, i32 -976316645, i32 -128420658
  store i32 %6092, i32* %switchVar
  br label %loopEnd

if.then1217:                                      ; preds = %loopEntry
  %6093 = load i32, i32* %s, align 4
  %6094 = add i32 %6093, 284964022
  %6095 = sub i32 %6094, 31
  %6096 = sub i32 %6095, 284964022
  %sub1218 = sub nsw i32 %6093, 31
  %6097 = add i32 %6096, 44161876
  %6098 = sub i32 %6097, 30
  %6099 = sub i32 %6098, 44161876
  %sub1219 = sub nsw i32 %6096, 30
  %6100 = add i32 %6099, -1275378470
  %6101 = sub i32 %6100, 31
  %6102 = sub i32 %6101, -1275378470
  %sub1220 = sub nsw i32 %6099, 31
  %6103 = sub i32 0, 31
  %6104 = add i32 %6102, %6103
  %sub1221 = sub nsw i32 %6102, 31
  %6105 = sub i32 %6104, -1498092674
  %6106 = sub i32 %6105, 30
  %6107 = add i32 %6106, -1498092674
  %sub1222 = sub nsw i32 %6104, 30
  %6108 = load i32, i32* %f, align 4
  %6109 = sub i32 0, %6108
  %6110 = sub i32 %6107, %6109
  %add1223 = add nsw i32 %6107, %6108
  %6111 = load i32, i32* %c, align 4
  %6112 = add i32 %6110, -2053339093
  %6113 = sub i32 %6112, %6111
  %6114 = sub i32 %6113, -2053339093
  %sub1224 = sub nsw i32 %6110, %6111
  store i32 %6114, i32* %s, align 4
  %6115 = load i32, i32* %s, align 4
  %call1225 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6115)
  store i32 -128420658, i32* %switchVar
  br label %loopEnd

if.end1226:                                       ; preds = %loopEntry
  %6116 = load i32, i32* @x
  %6117 = load i32, i32* @y
  %6118 = add i32 %6116, -278042617
  %6119 = sub i32 %6118, 1
  %6120 = sub i32 %6119, -278042617
  %6121 = sub i32 %6116, 1
  %6122 = mul i32 %6116, %6120
  %6123 = urem i32 %6122, 2
  %6124 = icmp eq i32 %6123, 0
  %6125 = icmp slt i32 %6117, 10
  %6126 = and i1 %6124, %6125
  %6127 = xor i1 %6124, %6125
  %6128 = or i1 %6126, %6127
  %6129 = or i1 %6124, %6125
  %6130 = select i1 %6128, i32 -1359728611, i32 -329561592
  store i32 %6130, i32* %switchVar
  br label %loopEnd

originalBB4512:                                   ; preds = %loopEntry
  %6131 = load i32, i32* %e, align 4
  %cmp1227 = icmp eq i32 %6131, 7
  store i1 %cmp1227, i1* %cmp1227.reg2mem
  %6132 = load i32, i32* @x
  %6133 = load i32, i32* @y
  %6134 = sub i32 0, 1
  %6135 = add i32 %6132, %6134
  %6136 = sub i32 %6132, 1
  %6137 = mul i32 %6132, %6135
  %6138 = urem i32 %6137, 2
  %6139 = icmp eq i32 %6138, 0
  %6140 = icmp slt i32 %6133, 10
  %6141 = and i1 %6139, %6140
  %6142 = xor i1 %6139, %6140
  %6143 = or i1 %6141, %6142
  %6144 = or i1 %6139, %6140
  %6145 = select i1 %6143, i32 -109923217, i32 -329561592
  store i32 %6145, i32* %switchVar
  br label %loopEnd

originalBBpart24514:                              ; preds = %loopEntry
  %cmp1227.reload = load volatile i1, i1* %cmp1227.reg2mem
  %6146 = select i1 %cmp1227.reload, i32 -562288633, i32 1370841615
  store i32 %6146, i32* %switchVar
  br label %loopEnd

if.then1228:                                      ; preds = %loopEntry
  %6147 = load i32, i32* %s, align 4
  %6148 = sub i32 %6147, 76162037
  %6149 = sub i32 %6148, 31
  %6150 = add i32 %6149, 76162037
  %sub1229 = sub nsw i32 %6147, 31
  %6151 = sub i32 0, 30
  %6152 = add i32 %6150, %6151
  %sub1230 = sub nsw i32 %6150, 30
  %6153 = add i32 %6152, -1820759255
  %6154 = sub i32 %6153, 31
  %6155 = sub i32 %6154, -1820759255
  %sub1231 = sub nsw i32 %6152, 31
  %6156 = add i32 %6155, 481933577
  %6157 = sub i32 %6156, 31
  %6158 = sub i32 %6157, 481933577
  %sub1232 = sub nsw i32 %6155, 31
  %6159 = load i32, i32* %f, align 4
  %6160 = sub i32 0, %6158
  %6161 = sub i32 0, %6159
  %6162 = add i32 %6160, %6161
  %6163 = sub i32 0, %6162
  %add1233 = add nsw i32 %6158, %6159
  %6164 = load i32, i32* %c, align 4
  %6165 = sub i32 %6163, -1156161047
  %6166 = sub i32 %6165, %6164
  %6167 = add i32 %6166, -1156161047
  %sub1234 = sub nsw i32 %6163, %6164
  store i32 %6167, i32* %s, align 4
  %6168 = load i32, i32* %s, align 4
  %call1235 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6168)
  store i32 1370841615, i32* %switchVar
  br label %loopEnd

if.end1236:                                       ; preds = %loopEntry
  %6169 = load i32, i32* %e, align 4
  %cmp1237 = icmp eq i32 %6169, 8
  %6170 = select i1 %cmp1237, i32 -709497430, i32 71398222
  store i32 %6170, i32* %switchVar
  br label %loopEnd

if.then1238:                                      ; preds = %loopEntry
  %6171 = load i32, i32* @x
  %6172 = load i32, i32* @y
  %6173 = sub i32 0, 1
  %6174 = add i32 %6171, %6173
  %6175 = sub i32 %6171, 1
  %6176 = mul i32 %6171, %6174
  %6177 = urem i32 %6176, 2
  %6178 = icmp eq i32 %6177, 0
  %6179 = icmp slt i32 %6172, 10
  %6180 = and i1 %6178, %6179
  %6181 = xor i1 %6178, %6179
  %6182 = or i1 %6180, %6181
  %6183 = or i1 %6178, %6179
  %6184 = select i1 %6182, i32 -66059447, i32 331842433
  store i32 %6184, i32* %switchVar
  br label %loopEnd

originalBB4516:                                   ; preds = %loopEntry
  %6185 = load i32, i32* %s, align 4
  %6186 = sub i32 %6185, 960112295
  %6187 = sub i32 %6186, 31
  %6188 = add i32 %6187, 960112295
  %sub1239 = sub nsw i32 %6185, 31
  %6189 = sub i32 %6188, -452125239
  %6190 = sub i32 %6189, 30
  %6191 = add i32 %6190, -452125239
  %sub1240 = sub nsw i32 %6188, 30
  %6192 = add i32 %6191, 1499516620
  %6193 = sub i32 %6192, 31
  %6194 = sub i32 %6193, 1499516620
  %sub1241 = sub nsw i32 %6191, 31
  %6195 = load i32, i32* %f, align 4
  %6196 = add i32 %6194, 727100600
  %6197 = add i32 %6196, %6195
  %6198 = sub i32 %6197, 727100600
  %add1242 = add nsw i32 %6194, %6195
  %6199 = load i32, i32* %c, align 4
  %6200 = add i32 %6198, 1369924351
  %6201 = sub i32 %6200, %6199
  %6202 = sub i32 %6201, 1369924351
  %sub1243 = sub nsw i32 %6198, %6199
  store i32 %6202, i32* %s, align 4
  %6203 = load i32, i32* %s, align 4
  %call1244 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6203)
  %6204 = load i32, i32* @x
  %6205 = load i32, i32* @y
  %6206 = add i32 %6204, -199844899
  %6207 = sub i32 %6206, 1
  %6208 = sub i32 %6207, -199844899
  %6209 = sub i32 %6204, 1
  %6210 = mul i32 %6204, %6208
  %6211 = urem i32 %6210, 2
  %6212 = icmp eq i32 %6211, 0
  %6213 = icmp slt i32 %6205, 10
  %6214 = and i1 %6212, %6213
  %6215 = xor i1 %6212, %6213
  %6216 = or i1 %6214, %6215
  %6217 = or i1 %6212, %6213
  %6218 = select i1 %6216, i32 1854881013, i32 331842433
  store i32 %6218, i32* %switchVar
  br label %loopEnd

originalBBpart24539:                              ; preds = %loopEntry
  store i32 71398222, i32* %switchVar
  br label %loopEnd

if.end1245:                                       ; preds = %loopEntry
  %6219 = load i32, i32* %e, align 4
  %cmp1246 = icmp eq i32 %6219, 9
  %6220 = select i1 %cmp1246, i32 2039633933, i32 71353727
  store i32 %6220, i32* %switchVar
  br label %loopEnd

if.then1247:                                      ; preds = %loopEntry
  %6221 = load i32, i32* %s, align 4
  %6222 = add i32 %6221, 1867508311
  %6223 = sub i32 %6222, 31
  %6224 = sub i32 %6223, 1867508311
  %sub1248 = sub nsw i32 %6221, 31
  %6225 = sub i32 %6224, 2070980436
  %6226 = sub i32 %6225, 30
  %6227 = add i32 %6226, 2070980436
  %sub1249 = sub nsw i32 %6224, 30
  %6228 = load i32, i32* %f, align 4
  %6229 = add i32 %6227, -1821377166
  %6230 = add i32 %6229, %6228
  %6231 = sub i32 %6230, -1821377166
  %add1250 = add nsw i32 %6227, %6228
  %6232 = load i32, i32* %c, align 4
  %6233 = add i32 %6231, 759715447
  %6234 = sub i32 %6233, %6232
  %6235 = sub i32 %6234, 759715447
  %sub1251 = sub nsw i32 %6231, %6232
  store i32 %6235, i32* %s, align 4
  %6236 = load i32, i32* %s, align 4
  %call1252 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6236)
  store i32 71353727, i32* %switchVar
  br label %loopEnd

if.end1253:                                       ; preds = %loopEntry
  %6237 = load i32, i32* %e, align 4
  %cmp1254 = icmp eq i32 %6237, 10
  %6238 = select i1 %cmp1254, i32 399058878, i32 -290410503
  store i32 %6238, i32* %switchVar
  br label %loopEnd

if.then1255:                                      ; preds = %loopEntry
  %6239 = load i32, i32* %s, align 4
  %6240 = add i32 %6239, -1567925062
  %6241 = sub i32 %6240, 31
  %6242 = sub i32 %6241, -1567925062
  %sub1256 = sub nsw i32 %6239, 31
  %6243 = load i32, i32* %f, align 4
  %6244 = sub i32 0, %6242
  %6245 = sub i32 0, %6243
  %6246 = add i32 %6244, %6245
  %6247 = sub i32 0, %6246
  %add1257 = add nsw i32 %6242, %6243
  %6248 = load i32, i32* %c, align 4
  %6249 = sub i32 %6247, 740504062
  %6250 = sub i32 %6249, %6248
  %6251 = add i32 %6250, 740504062
  %sub1258 = sub nsw i32 %6247, %6248
  store i32 %6251, i32* %s, align 4
  %6252 = load i32, i32* %s, align 4
  %call1259 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6252)
  store i32 -290410503, i32* %switchVar
  br label %loopEnd

if.end1260:                                       ; preds = %loopEntry
  %6253 = load i32, i32* %e, align 4
  %cmp1261 = icmp eq i32 %6253, 12
  %6254 = select i1 %cmp1261, i32 -1960180750, i32 -1220936343
  store i32 %6254, i32* %switchVar
  br label %loopEnd

if.then1262:                                      ; preds = %loopEntry
  %6255 = load i32, i32* @x
  %6256 = load i32, i32* @y
  %6257 = sub i32 %6255, -646546074
  %6258 = sub i32 %6257, 1
  %6259 = add i32 %6258, -646546074
  %6260 = sub i32 %6255, 1
  %6261 = mul i32 %6255, %6259
  %6262 = urem i32 %6261, 2
  %6263 = icmp eq i32 %6262, 0
  %6264 = icmp slt i32 %6256, 10
  %6265 = xor i1 %6263, true
  %6266 = xor i1 %6264, true
  %6267 = xor i1 true, true
  %6268 = and i1 %6265, true
  %6269 = and i1 %6263, %6267
  %6270 = and i1 %6266, true
  %6271 = and i1 %6264, %6267
  %6272 = or i1 %6268, %6269
  %6273 = or i1 %6270, %6271
  %6274 = xor i1 %6272, %6273
  %6275 = or i1 %6265, %6266
  %6276 = xor i1 %6275, true
  %6277 = or i1 true, %6267
  %6278 = and i1 %6276, %6277
  %6279 = or i1 %6274, %6278
  %6280 = or i1 %6263, %6264
  %6281 = select i1 %6279, i32 708385301, i32 561079042
  store i32 %6281, i32* %switchVar
  br label %loopEnd

originalBB4541:                                   ; preds = %loopEntry
  %6282 = load i32, i32* %s, align 4
  %6283 = sub i32 0, %6282
  %6284 = sub i32 0, 30
  %6285 = add i32 %6283, %6284
  %6286 = sub i32 0, %6285
  %add1263 = add nsw i32 %6282, 30
  %6287 = load i32, i32* %f, align 4
  %6288 = sub i32 0, %6287
  %6289 = sub i32 %6286, %6288
  %add1264 = add nsw i32 %6286, %6287
  %6290 = load i32, i32* %c, align 4
  %6291 = sub i32 0, %6290
  %6292 = add i32 %6289, %6291
  %sub1265 = sub nsw i32 %6289, %6290
  store i32 %6292, i32* %s, align 4
  %6293 = load i32, i32* %s, align 4
  %call1266 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6293)
  %6294 = load i32, i32* @x
  %6295 = load i32, i32* @y
  %6296 = sub i32 %6294, 926551148
  %6297 = sub i32 %6296, 1
  %6298 = add i32 %6297, 926551148
  %6299 = sub i32 %6294, 1
  %6300 = mul i32 %6294, %6298
  %6301 = urem i32 %6300, 2
  %6302 = icmp eq i32 %6301, 0
  %6303 = icmp slt i32 %6295, 10
  %6304 = xor i1 %6302, true
  %6305 = xor i1 %6303, true
  %6306 = xor i1 false, true
  %6307 = and i1 %6304, false
  %6308 = and i1 %6302, %6306
  %6309 = and i1 %6305, false
  %6310 = and i1 %6303, %6306
  %6311 = or i1 %6307, %6308
  %6312 = or i1 %6309, %6310
  %6313 = xor i1 %6311, %6312
  %6314 = or i1 %6304, %6305
  %6315 = xor i1 %6314, true
  %6316 = or i1 false, %6306
  %6317 = and i1 %6315, %6316
  %6318 = or i1 %6313, %6317
  %6319 = or i1 %6302, %6303
  %6320 = select i1 %6318, i32 818974379, i32 561079042
  store i32 %6320, i32* %switchVar
  br label %loopEnd

originalBBpart24560:                              ; preds = %loopEntry
  store i32 -1220936343, i32* %switchVar
  br label %loopEnd

if.end1267:                                       ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.bb1268:                                        ; preds = %loopEntry
  %6321 = load i32, i32* %e, align 4
  %cmp1269 = icmp eq i32 %6321, 1
  %6322 = select i1 %cmp1269, i32 -1486755139, i32 1269814477
  store i32 %6322, i32* %switchVar
  br label %loopEnd

if.then1270:                                      ; preds = %loopEntry
  %6323 = load i32, i32* %s, align 4
  %6324 = sub i32 %6323, -534311590
  %6325 = sub i32 %6324, 30
  %6326 = add i32 %6325, -534311590
  %sub1271 = sub nsw i32 %6323, 30
  %6327 = sub i32 0, 31
  %6328 = add i32 %6326, %6327
  %sub1272 = sub nsw i32 %6326, 31
  %6329 = sub i32 %6328, -785566335
  %6330 = sub i32 %6329, 30
  %6331 = add i32 %6330, -785566335
  %sub1273 = sub nsw i32 %6328, 30
  %6332 = sub i32 0, 31
  %6333 = add i32 %6331, %6332
  %sub1274 = sub nsw i32 %6331, 31
  %6334 = sub i32 0, 31
  %6335 = add i32 %6333, %6334
  %sub1275 = sub nsw i32 %6333, 31
  %6336 = add i32 %6335, 589294617
  %6337 = sub i32 %6336, 30
  %6338 = sub i32 %6337, 589294617
  %sub1276 = sub nsw i32 %6335, 30
  %6339 = add i32 %6338, -1670974613
  %6340 = sub i32 %6339, 31
  %6341 = sub i32 %6340, -1670974613
  %sub1277 = sub nsw i32 %6338, 31
  %6342 = sub i32 0, 30
  %6343 = add i32 %6341, %6342
  %sub1278 = sub nsw i32 %6341, 30
  %6344 = add i32 %6343, -1078018543
  %6345 = sub i32 %6344, 31
  %6346 = sub i32 %6345, -1078018543
  %sub1279 = sub nsw i32 %6343, 31
  %6347 = sub i32 0, 29
  %6348 = add i32 %6346, %6347
  %sub1280 = sub nsw i32 %6346, 29
  %6349 = sub i32 0, 31
  %6350 = add i32 %6348, %6349
  %sub1281 = sub nsw i32 %6348, 31
  %6351 = load i32, i32* %f, align 4
  %6352 = sub i32 %6350, -1247629564
  %6353 = add i32 %6352, %6351
  %6354 = add i32 %6353, -1247629564
  %add1282 = add nsw i32 %6350, %6351
  %6355 = load i32, i32* %c, align 4
  %6356 = add i32 %6354, 636162738
  %6357 = sub i32 %6356, %6355
  %6358 = sub i32 %6357, 636162738
  %sub1283 = sub nsw i32 %6354, %6355
  store i32 %6358, i32* %s, align 4
  %6359 = load i32, i32* %s, align 4
  %call1284 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6359)
  store i32 1269814477, i32* %switchVar
  br label %loopEnd

if.end1285:                                       ; preds = %loopEntry
  %6360 = load i32, i32* %e, align 4
  %cmp1286 = icmp eq i32 %6360, 2
  %6361 = select i1 %cmp1286, i32 -1708278416, i32 1817065755
  store i32 %6361, i32* %switchVar
  br label %loopEnd

if.then1287:                                      ; preds = %loopEntry
  %6362 = load i32, i32* %s, align 4
  %6363 = add i32 %6362, -35740467
  %6364 = sub i32 %6363, 30
  %6365 = sub i32 %6364, -35740467
  %sub1288 = sub nsw i32 %6362, 30
  %6366 = sub i32 0, 31
  %6367 = add i32 %6365, %6366
  %sub1289 = sub nsw i32 %6365, 31
  %6368 = sub i32 %6367, 294529938
  %6369 = sub i32 %6368, 30
  %6370 = add i32 %6369, 294529938
  %sub1290 = sub nsw i32 %6367, 30
  %6371 = sub i32 0, 31
  %6372 = add i32 %6370, %6371
  %sub1291 = sub nsw i32 %6370, 31
  %6373 = sub i32 %6372, -492112206
  %6374 = sub i32 %6373, 31
  %6375 = add i32 %6374, -492112206
  %sub1292 = sub nsw i32 %6372, 31
  %6376 = add i32 %6375, -533071713
  %6377 = sub i32 %6376, 30
  %6378 = sub i32 %6377, -533071713
  %sub1293 = sub nsw i32 %6375, 30
  %6379 = add i32 %6378, -367286307
  %6380 = sub i32 %6379, 31
  %6381 = sub i32 %6380, -367286307
  %sub1294 = sub nsw i32 %6378, 31
  %6382 = add i32 %6381, -1741395603
  %6383 = sub i32 %6382, 30
  %6384 = sub i32 %6383, -1741395603
  %sub1295 = sub nsw i32 %6381, 30
  %6385 = sub i32 %6384, 446852699
  %6386 = sub i32 %6385, 31
  %6387 = add i32 %6386, 446852699
  %sub1296 = sub nsw i32 %6384, 31
  %6388 = sub i32 0, 29
  %6389 = add i32 %6387, %6388
  %sub1297 = sub nsw i32 %6387, 29
  %6390 = load i32, i32* %f, align 4
  %6391 = add i32 %6389, 3769648
  %6392 = add i32 %6391, %6390
  %6393 = sub i32 %6392, 3769648
  %add1298 = add nsw i32 %6389, %6390
  %6394 = load i32, i32* %c, align 4
  %6395 = sub i32 %6393, -144915408
  %6396 = sub i32 %6395, %6394
  %6397 = add i32 %6396, -144915408
  %sub1299 = sub nsw i32 %6393, %6394
  store i32 %6397, i32* %s, align 4
  %6398 = load i32, i32* %s, align 4
  %call1300 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6398)
  store i32 1817065755, i32* %switchVar
  br label %loopEnd

if.end1301:                                       ; preds = %loopEntry
  %6399 = load i32, i32* %e, align 4
  %cmp1302 = icmp eq i32 %6399, 3
  %6400 = select i1 %cmp1302, i32 1161525947, i32 1449193042
  store i32 %6400, i32* %switchVar
  br label %loopEnd

if.then1303:                                      ; preds = %loopEntry
  %6401 = load i32, i32* %s, align 4
  %6402 = add i32 %6401, -1367690698
  %6403 = sub i32 %6402, 30
  %6404 = sub i32 %6403, -1367690698
  %sub1304 = sub nsw i32 %6401, 30
  %6405 = add i32 %6404, -423916486
  %6406 = sub i32 %6405, 31
  %6407 = sub i32 %6406, -423916486
  %sub1305 = sub nsw i32 %6404, 31
  %6408 = sub i32 0, 30
  %6409 = add i32 %6407, %6408
  %sub1306 = sub nsw i32 %6407, 30
  %6410 = sub i32 0, 31
  %6411 = add i32 %6409, %6410
  %sub1307 = sub nsw i32 %6409, 31
  %6412 = sub i32 %6411, -1414746391
  %6413 = sub i32 %6412, 31
  %6414 = add i32 %6413, -1414746391
  %sub1308 = sub nsw i32 %6411, 31
  %6415 = add i32 %6414, -491466542
  %6416 = sub i32 %6415, 30
  %6417 = sub i32 %6416, -491466542
  %sub1309 = sub nsw i32 %6414, 30
  %6418 = sub i32 0, 31
  %6419 = add i32 %6417, %6418
  %sub1310 = sub nsw i32 %6417, 31
  %6420 = add i32 %6419, -555173901
  %6421 = sub i32 %6420, 30
  %6422 = sub i32 %6421, -555173901
  %sub1311 = sub nsw i32 %6419, 30
  %6423 = sub i32 %6422, 1840080660
  %6424 = sub i32 %6423, 31
  %6425 = add i32 %6424, 1840080660
  %sub1312 = sub nsw i32 %6422, 31
  %6426 = load i32, i32* %f, align 4
  %6427 = sub i32 %6425, -339765566
  %6428 = add i32 %6427, %6426
  %6429 = add i32 %6428, -339765566
  %add1313 = add nsw i32 %6425, %6426
  %6430 = load i32, i32* %c, align 4
  %6431 = sub i32 %6429, 113729427
  %6432 = sub i32 %6431, %6430
  %6433 = add i32 %6432, 113729427
  %sub1314 = sub nsw i32 %6429, %6430
  store i32 %6433, i32* %s, align 4
  %6434 = load i32, i32* %s, align 4
  %call1315 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6434)
  store i32 1449193042, i32* %switchVar
  br label %loopEnd

if.end1316:                                       ; preds = %loopEntry
  %6435 = load i32, i32* %e, align 4
  %cmp1317 = icmp eq i32 %6435, 4
  %6436 = select i1 %cmp1317, i32 -1486097728, i32 1026361724
  store i32 %6436, i32* %switchVar
  br label %loopEnd

if.then1318:                                      ; preds = %loopEntry
  %6437 = load i32, i32* @x
  %6438 = load i32, i32* @y
  %6439 = sub i32 0, 1
  %6440 = add i32 %6437, %6439
  %6441 = sub i32 %6437, 1
  %6442 = mul i32 %6437, %6440
  %6443 = urem i32 %6442, 2
  %6444 = icmp eq i32 %6443, 0
  %6445 = icmp slt i32 %6438, 10
  %6446 = and i1 %6444, %6445
  %6447 = xor i1 %6444, %6445
  %6448 = or i1 %6446, %6447
  %6449 = or i1 %6444, %6445
  %6450 = select i1 %6448, i32 941546688, i32 -1434286399
  store i32 %6450, i32* %switchVar
  br label %loopEnd

originalBB4562:                                   ; preds = %loopEntry
  %6451 = load i32, i32* %s, align 4
  %6452 = add i32 %6451, -1152370102
  %6453 = sub i32 %6452, 30
  %6454 = sub i32 %6453, -1152370102
  %sub1319 = sub nsw i32 %6451, 30
  %6455 = add i32 %6454, 2025848606
  %6456 = sub i32 %6455, 31
  %6457 = sub i32 %6456, 2025848606
  %sub1320 = sub nsw i32 %6454, 31
  %6458 = sub i32 0, 30
  %6459 = add i32 %6457, %6458
  %sub1321 = sub nsw i32 %6457, 30
  %6460 = sub i32 %6459, -380014052
  %6461 = sub i32 %6460, 31
  %6462 = add i32 %6461, -380014052
  %sub1322 = sub nsw i32 %6459, 31
  %6463 = sub i32 %6462, 1382501302
  %6464 = sub i32 %6463, 31
  %6465 = add i32 %6464, 1382501302
  %sub1323 = sub nsw i32 %6462, 31
  %6466 = sub i32 0, 30
  %6467 = add i32 %6465, %6466
  %sub1324 = sub nsw i32 %6465, 30
  %6468 = sub i32 %6467, -1383434278
  %6469 = sub i32 %6468, 31
  %6470 = add i32 %6469, -1383434278
  %sub1325 = sub nsw i32 %6467, 31
  %6471 = sub i32 %6470, -339304551
  %6472 = sub i32 %6471, 30
  %6473 = add i32 %6472, -339304551
  %sub1326 = sub nsw i32 %6470, 30
  %6474 = load i32, i32* %f, align 4
  %6475 = sub i32 0, %6473
  %6476 = sub i32 0, %6474
  %6477 = add i32 %6475, %6476
  %6478 = sub i32 0, %6477
  %add1327 = add nsw i32 %6473, %6474
  %6479 = load i32, i32* %c, align 4
  %6480 = sub i32 0, %6479
  %6481 = add i32 %6478, %6480
  %sub1328 = sub nsw i32 %6478, %6479
  store i32 %6481, i32* %s, align 4
  %6482 = load i32, i32* %s, align 4
  %call1329 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6482)
  %6483 = load i32, i32* @x
  %6484 = load i32, i32* @y
  %6485 = sub i32 %6483, 229097590
  %6486 = sub i32 %6485, 1
  %6487 = add i32 %6486, 229097590
  %6488 = sub i32 %6483, 1
  %6489 = mul i32 %6483, %6487
  %6490 = urem i32 %6489, 2
  %6491 = icmp eq i32 %6490, 0
  %6492 = icmp slt i32 %6484, 10
  %6493 = xor i1 %6491, true
  %6494 = xor i1 %6492, true
  %6495 = xor i1 false, true
  %6496 = and i1 %6493, false
  %6497 = and i1 %6491, %6495
  %6498 = and i1 %6494, false
  %6499 = and i1 %6492, %6495
  %6500 = or i1 %6496, %6497
  %6501 = or i1 %6498, %6499
  %6502 = xor i1 %6500, %6501
  %6503 = or i1 %6493, %6494
  %6504 = xor i1 %6503, true
  %6505 = or i1 false, %6495
  %6506 = and i1 %6504, %6505
  %6507 = or i1 %6502, %6506
  %6508 = or i1 %6491, %6492
  %6509 = select i1 %6507, i32 1593358251, i32 -1434286399
  store i32 %6509, i32* %switchVar
  br label %loopEnd

originalBBpart24622:                              ; preds = %loopEntry
  store i32 1026361724, i32* %switchVar
  br label %loopEnd

if.end1330:                                       ; preds = %loopEntry
  %6510 = load i32, i32* @x
  %6511 = load i32, i32* @y
  %6512 = add i32 %6510, 401825800
  %6513 = sub i32 %6512, 1
  %6514 = sub i32 %6513, 401825800
  %6515 = sub i32 %6510, 1
  %6516 = mul i32 %6510, %6514
  %6517 = urem i32 %6516, 2
  %6518 = icmp eq i32 %6517, 0
  %6519 = icmp slt i32 %6511, 10
  %6520 = xor i1 %6518, true
  %6521 = xor i1 %6519, true
  %6522 = xor i1 true, true
  %6523 = and i1 %6520, true
  %6524 = and i1 %6518, %6522
  %6525 = and i1 %6521, true
  %6526 = and i1 %6519, %6522
  %6527 = or i1 %6523, %6524
  %6528 = or i1 %6525, %6526
  %6529 = xor i1 %6527, %6528
  %6530 = or i1 %6520, %6521
  %6531 = xor i1 %6530, true
  %6532 = or i1 true, %6522
  %6533 = and i1 %6531, %6532
  %6534 = or i1 %6529, %6533
  %6535 = or i1 %6518, %6519
  %6536 = select i1 %6534, i32 -474843946, i32 722109195
  store i32 %6536, i32* %switchVar
  br label %loopEnd

originalBB4624:                                   ; preds = %loopEntry
  %6537 = load i32, i32* %e, align 4
  %cmp1331 = icmp eq i32 %6537, 5
  store i1 %cmp1331, i1* %cmp1331.reg2mem
  %6538 = load i32, i32* @x
  %6539 = load i32, i32* @y
  %6540 = add i32 %6538, -759091772
  %6541 = sub i32 %6540, 1
  %6542 = sub i32 %6541, -759091772
  %6543 = sub i32 %6538, 1
  %6544 = mul i32 %6538, %6542
  %6545 = urem i32 %6544, 2
  %6546 = icmp eq i32 %6545, 0
  %6547 = icmp slt i32 %6539, 10
  %6548 = xor i1 %6546, true
  %6549 = xor i1 %6547, true
  %6550 = xor i1 false, true
  %6551 = and i1 %6548, false
  %6552 = and i1 %6546, %6550
  %6553 = and i1 %6549, false
  %6554 = and i1 %6547, %6550
  %6555 = or i1 %6551, %6552
  %6556 = or i1 %6553, %6554
  %6557 = xor i1 %6555, %6556
  %6558 = or i1 %6548, %6549
  %6559 = xor i1 %6558, true
  %6560 = or i1 false, %6550
  %6561 = and i1 %6559, %6560
  %6562 = or i1 %6557, %6561
  %6563 = or i1 %6546, %6547
  %6564 = select i1 %6562, i32 413330505, i32 722109195
  store i32 %6564, i32* %switchVar
  br label %loopEnd

originalBBpart24626:                              ; preds = %loopEntry
  %cmp1331.reload = load volatile i1, i1* %cmp1331.reg2mem
  %6565 = select i1 %cmp1331.reload, i32 755660295, i32 -418858071
  store i32 %6565, i32* %switchVar
  br label %loopEnd

if.then1332:                                      ; preds = %loopEntry
  %6566 = load i32, i32* @x
  %6567 = load i32, i32* @y
  %6568 = add i32 %6566, 983752828
  %6569 = sub i32 %6568, 1
  %6570 = sub i32 %6569, 983752828
  %6571 = sub i32 %6566, 1
  %6572 = mul i32 %6566, %6570
  %6573 = urem i32 %6572, 2
  %6574 = icmp eq i32 %6573, 0
  %6575 = icmp slt i32 %6567, 10
  %6576 = and i1 %6574, %6575
  %6577 = xor i1 %6574, %6575
  %6578 = or i1 %6576, %6577
  %6579 = or i1 %6574, %6575
  %6580 = select i1 %6578, i32 1374359433, i32 2138579688
  store i32 %6580, i32* %switchVar
  br label %loopEnd

originalBB4628:                                   ; preds = %loopEntry
  %6581 = load i32, i32* %s, align 4
  %6582 = sub i32 %6581, -698988126
  %6583 = sub i32 %6582, 30
  %6584 = add i32 %6583, -698988126
  %sub1333 = sub nsw i32 %6581, 30
  %6585 = sub i32 0, 31
  %6586 = add i32 %6584, %6585
  %sub1334 = sub nsw i32 %6584, 31
  %6587 = add i32 %6586, 183364492
  %6588 = sub i32 %6587, 30
  %6589 = sub i32 %6588, 183364492
  %sub1335 = sub nsw i32 %6586, 30
  %6590 = sub i32 0, 31
  %6591 = add i32 %6589, %6590
  %sub1336 = sub nsw i32 %6589, 31
  %6592 = sub i32 %6591, -550619835
  %6593 = sub i32 %6592, 31
  %6594 = add i32 %6593, -550619835
  %sub1337 = sub nsw i32 %6591, 31
  %6595 = sub i32 %6594, 242187076
  %6596 = sub i32 %6595, 30
  %6597 = add i32 %6596, 242187076
  %sub1338 = sub nsw i32 %6594, 30
  %6598 = sub i32 0, 31
  %6599 = add i32 %6597, %6598
  %sub1339 = sub nsw i32 %6597, 31
  %6600 = load i32, i32* %f, align 4
  %6601 = sub i32 %6599, 495434739
  %6602 = add i32 %6601, %6600
  %6603 = add i32 %6602, 495434739
  %add1340 = add nsw i32 %6599, %6600
  %6604 = load i32, i32* %c, align 4
  %6605 = sub i32 %6603, -2100144630
  %6606 = sub i32 %6605, %6604
  %6607 = add i32 %6606, -2100144630
  %sub1341 = sub nsw i32 %6603, %6604
  store i32 %6607, i32* %s, align 4
  %6608 = load i32, i32* %s, align 4
  %call1342 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6608)
  %6609 = load i32, i32* @x
  %6610 = load i32, i32* @y
  %6611 = sub i32 0, 1
  %6612 = add i32 %6609, %6611
  %6613 = sub i32 %6609, 1
  %6614 = mul i32 %6609, %6612
  %6615 = urem i32 %6614, 2
  %6616 = icmp eq i32 %6615, 0
  %6617 = icmp slt i32 %6610, 10
  %6618 = and i1 %6616, %6617
  %6619 = xor i1 %6616, %6617
  %6620 = or i1 %6618, %6619
  %6621 = or i1 %6616, %6617
  %6622 = select i1 %6620, i32 -1615516962, i32 2138579688
  store i32 %6622, i32* %switchVar
  br label %loopEnd

originalBBpart24678:                              ; preds = %loopEntry
  store i32 -418858071, i32* %switchVar
  br label %loopEnd

if.end1343:                                       ; preds = %loopEntry
  %6623 = load i32, i32* %e, align 4
  %cmp1344 = icmp eq i32 %6623, 6
  %6624 = select i1 %cmp1344, i32 976125186, i32 -2126104655
  store i32 %6624, i32* %switchVar
  br label %loopEnd

if.then1345:                                      ; preds = %loopEntry
  %6625 = load i32, i32* %s, align 4
  %6626 = sub i32 %6625, 1059453043
  %6627 = sub i32 %6626, 30
  %6628 = add i32 %6627, 1059453043
  %sub1346 = sub nsw i32 %6625, 30
  %6629 = sub i32 %6628, 672120868
  %6630 = sub i32 %6629, 31
  %6631 = add i32 %6630, 672120868
  %sub1347 = sub nsw i32 %6628, 31
  %6632 = sub i32 %6631, 1630949326
  %6633 = sub i32 %6632, 30
  %6634 = add i32 %6633, 1630949326
  %sub1348 = sub nsw i32 %6631, 30
  %6635 = sub i32 %6634, -19850447
  %6636 = sub i32 %6635, 31
  %6637 = add i32 %6636, -19850447
  %sub1349 = sub nsw i32 %6634, 31
  %6638 = add i32 %6637, 1788987585
  %6639 = sub i32 %6638, 31
  %6640 = sub i32 %6639, 1788987585
  %sub1350 = sub nsw i32 %6637, 31
  %6641 = add i32 %6640, 589969364
  %6642 = sub i32 %6641, 30
  %6643 = sub i32 %6642, 589969364
  %sub1351 = sub nsw i32 %6640, 30
  %6644 = load i32, i32* %f, align 4
  %6645 = sub i32 0, %6644
  %6646 = sub i32 %6643, %6645
  %add1352 = add nsw i32 %6643, %6644
  %6647 = load i32, i32* %c, align 4
  %6648 = sub i32 0, %6647
  %6649 = add i32 %6646, %6648
  %sub1353 = sub nsw i32 %6646, %6647
  store i32 %6649, i32* %s, align 4
  %6650 = load i32, i32* %s, align 4
  %call1354 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6650)
  store i32 -2126104655, i32* %switchVar
  br label %loopEnd

if.end1355:                                       ; preds = %loopEntry
  %6651 = load i32, i32* %e, align 4
  %cmp1356 = icmp eq i32 %6651, 7
  %6652 = select i1 %cmp1356, i32 554845953, i32 2060503141
  store i32 %6652, i32* %switchVar
  br label %loopEnd

if.then1357:                                      ; preds = %loopEntry
  %6653 = load i32, i32* %s, align 4
  %6654 = sub i32 %6653, -1698430129
  %6655 = sub i32 %6654, 30
  %6656 = add i32 %6655, -1698430129
  %sub1358 = sub nsw i32 %6653, 30
  %6657 = sub i32 0, 31
  %6658 = add i32 %6656, %6657
  %sub1359 = sub nsw i32 %6656, 31
  %6659 = sub i32 %6658, 1886524809
  %6660 = sub i32 %6659, 30
  %6661 = add i32 %6660, 1886524809
  %sub1360 = sub nsw i32 %6658, 30
  %6662 = add i32 %6661, -614534126
  %6663 = sub i32 %6662, 31
  %6664 = sub i32 %6663, -614534126
  %sub1361 = sub nsw i32 %6661, 31
  %6665 = sub i32 0, 31
  %6666 = add i32 %6664, %6665
  %sub1362 = sub nsw i32 %6664, 31
  %6667 = load i32, i32* %f, align 4
  %6668 = sub i32 0, %6667
  %6669 = sub i32 %6666, %6668
  %add1363 = add nsw i32 %6666, %6667
  %6670 = load i32, i32* %c, align 4
  %6671 = add i32 %6669, -1310739666
  %6672 = sub i32 %6671, %6670
  %6673 = sub i32 %6672, -1310739666
  %sub1364 = sub nsw i32 %6669, %6670
  store i32 %6673, i32* %s, align 4
  %6674 = load i32, i32* %s, align 4
  %call1365 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6674)
  store i32 2060503141, i32* %switchVar
  br label %loopEnd

if.end1366:                                       ; preds = %loopEntry
  %6675 = load i32, i32* @x
  %6676 = load i32, i32* @y
  %6677 = sub i32 %6675, -107234980
  %6678 = sub i32 %6677, 1
  %6679 = add i32 %6678, -107234980
  %6680 = sub i32 %6675, 1
  %6681 = mul i32 %6675, %6679
  %6682 = urem i32 %6681, 2
  %6683 = icmp eq i32 %6682, 0
  %6684 = icmp slt i32 %6676, 10
  %6685 = and i1 %6683, %6684
  %6686 = xor i1 %6683, %6684
  %6687 = or i1 %6685, %6686
  %6688 = or i1 %6683, %6684
  %6689 = select i1 %6687, i32 1987914497, i32 927045883
  store i32 %6689, i32* %switchVar
  br label %loopEnd

originalBB4680:                                   ; preds = %loopEntry
  %6690 = load i32, i32* %e, align 4
  %cmp1367 = icmp eq i32 %6690, 8
  store i1 %cmp1367, i1* %cmp1367.reg2mem
  %6691 = load i32, i32* @x
  %6692 = load i32, i32* @y
  %6693 = add i32 %6691, 1492386876
  %6694 = sub i32 %6693, 1
  %6695 = sub i32 %6694, 1492386876
  %6696 = sub i32 %6691, 1
  %6697 = mul i32 %6691, %6695
  %6698 = urem i32 %6697, 2
  %6699 = icmp eq i32 %6698, 0
  %6700 = icmp slt i32 %6692, 10
  %6701 = and i1 %6699, %6700
  %6702 = xor i1 %6699, %6700
  %6703 = or i1 %6701, %6702
  %6704 = or i1 %6699, %6700
  %6705 = select i1 %6703, i32 1157029432, i32 927045883
  store i32 %6705, i32* %switchVar
  br label %loopEnd

originalBBpart24682:                              ; preds = %loopEntry
  %cmp1367.reload = load volatile i1, i1* %cmp1367.reg2mem
  %6706 = select i1 %cmp1367.reload, i32 888621392, i32 -1467405618
  store i32 %6706, i32* %switchVar
  br label %loopEnd

if.then1368:                                      ; preds = %loopEntry
  %6707 = load i32, i32* %s, align 4
  %6708 = sub i32 0, 30
  %6709 = add i32 %6707, %6708
  %sub1369 = sub nsw i32 %6707, 30
  %6710 = sub i32 0, 31
  %6711 = add i32 %6709, %6710
  %sub1370 = sub nsw i32 %6709, 31
  %6712 = sub i32 %6711, -322762684
  %6713 = sub i32 %6712, 30
  %6714 = add i32 %6713, -322762684
  %sub1371 = sub nsw i32 %6711, 30
  %6715 = sub i32 0, 31
  %6716 = add i32 %6714, %6715
  %sub1372 = sub nsw i32 %6714, 31
  %6717 = load i32, i32* %f, align 4
  %6718 = sub i32 %6716, 59125551
  %6719 = add i32 %6718, %6717
  %6720 = add i32 %6719, 59125551
  %add1373 = add nsw i32 %6716, %6717
  %6721 = load i32, i32* %c, align 4
  %6722 = add i32 %6720, -297190462
  %6723 = sub i32 %6722, %6721
  %6724 = sub i32 %6723, -297190462
  %sub1374 = sub nsw i32 %6720, %6721
  store i32 %6724, i32* %s, align 4
  %6725 = load i32, i32* %s, align 4
  %call1375 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6725)
  store i32 -1467405618, i32* %switchVar
  br label %loopEnd

if.end1376:                                       ; preds = %loopEntry
  %6726 = load i32, i32* %e, align 4
  %cmp1377 = icmp eq i32 %6726, 9
  %6727 = select i1 %cmp1377, i32 2015750411, i32 -1717157477
  store i32 %6727, i32* %switchVar
  br label %loopEnd

if.then1378:                                      ; preds = %loopEntry
  %6728 = load i32, i32* @x
  %6729 = load i32, i32* @y
  %6730 = sub i32 0, 1
  %6731 = add i32 %6728, %6730
  %6732 = sub i32 %6728, 1
  %6733 = mul i32 %6728, %6731
  %6734 = urem i32 %6733, 2
  %6735 = icmp eq i32 %6734, 0
  %6736 = icmp slt i32 %6729, 10
  %6737 = and i1 %6735, %6736
  %6738 = xor i1 %6735, %6736
  %6739 = or i1 %6737, %6738
  %6740 = or i1 %6735, %6736
  %6741 = select i1 %6739, i32 385575181, i32 -1316084725
  store i32 %6741, i32* %switchVar
  br label %loopEnd

originalBB4684:                                   ; preds = %loopEntry
  %6742 = load i32, i32* %s, align 4
  %6743 = sub i32 0, 30
  %6744 = add i32 %6742, %6743
  %sub1379 = sub nsw i32 %6742, 30
  %6745 = add i32 %6744, 1040992524
  %6746 = sub i32 %6745, 31
  %6747 = sub i32 %6746, 1040992524
  %sub1380 = sub nsw i32 %6744, 31
  %6748 = add i32 %6747, -441333559
  %6749 = sub i32 %6748, 30
  %6750 = sub i32 %6749, -441333559
  %sub1381 = sub nsw i32 %6747, 30
  %6751 = load i32, i32* %f, align 4
  %6752 = sub i32 0, %6751
  %6753 = sub i32 %6750, %6752
  %add1382 = add nsw i32 %6750, %6751
  %6754 = load i32, i32* %c, align 4
  %6755 = sub i32 %6753, 1575860752
  %6756 = sub i32 %6755, %6754
  %6757 = add i32 %6756, 1575860752
  %sub1383 = sub nsw i32 %6753, %6754
  store i32 %6757, i32* %s, align 4
  %6758 = load i32, i32* %s, align 4
  %call1384 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6758)
  %6759 = load i32, i32* @x
  %6760 = load i32, i32* @y
  %6761 = add i32 %6759, 1910294236
  %6762 = sub i32 %6761, 1
  %6763 = sub i32 %6762, 1910294236
  %6764 = sub i32 %6759, 1
  %6765 = mul i32 %6759, %6763
  %6766 = urem i32 %6765, 2
  %6767 = icmp eq i32 %6766, 0
  %6768 = icmp slt i32 %6760, 10
  %6769 = xor i1 %6767, true
  %6770 = xor i1 %6768, true
  %6771 = xor i1 false, true
  %6772 = and i1 %6769, false
  %6773 = and i1 %6767, %6771
  %6774 = and i1 %6770, false
  %6775 = and i1 %6768, %6771
  %6776 = or i1 %6772, %6773
  %6777 = or i1 %6774, %6775
  %6778 = xor i1 %6776, %6777
  %6779 = or i1 %6769, %6770
  %6780 = xor i1 %6779, true
  %6781 = or i1 false, %6771
  %6782 = and i1 %6780, %6781
  %6783 = or i1 %6778, %6782
  %6784 = or i1 %6767, %6768
  %6785 = select i1 %6783, i32 -1478290082, i32 -1316084725
  store i32 %6785, i32* %switchVar
  br label %loopEnd

originalBBpart24710:                              ; preds = %loopEntry
  store i32 -1717157477, i32* %switchVar
  br label %loopEnd

if.end1385:                                       ; preds = %loopEntry
  %6786 = load i32, i32* %e, align 4
  %cmp1386 = icmp eq i32 %6786, 10
  %6787 = select i1 %cmp1386, i32 705420315, i32 -1409223167
  store i32 %6787, i32* %switchVar
  br label %loopEnd

if.then1387:                                      ; preds = %loopEntry
  %6788 = load i32, i32* %s, align 4
  %6789 = sub i32 0, 30
  %6790 = add i32 %6788, %6789
  %sub1388 = sub nsw i32 %6788, 30
  %6791 = sub i32 %6790, 984285350
  %6792 = sub i32 %6791, 31
  %6793 = add i32 %6792, 984285350
  %sub1389 = sub nsw i32 %6790, 31
  %6794 = load i32, i32* %f, align 4
  %6795 = sub i32 %6793, -784032475
  %6796 = add i32 %6795, %6794
  %6797 = add i32 %6796, -784032475
  %add1390 = add nsw i32 %6793, %6794
  %6798 = load i32, i32* %c, align 4
  %6799 = sub i32 %6797, -1162160135
  %6800 = sub i32 %6799, %6798
  %6801 = add i32 %6800, -1162160135
  %sub1391 = sub nsw i32 %6797, %6798
  store i32 %6801, i32* %s, align 4
  %6802 = load i32, i32* %s, align 4
  %call1392 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6802)
  store i32 -1409223167, i32* %switchVar
  br label %loopEnd

if.end1393:                                       ; preds = %loopEntry
  %6803 = load i32, i32* @x
  %6804 = load i32, i32* @y
  %6805 = sub i32 0, 1
  %6806 = add i32 %6803, %6805
  %6807 = sub i32 %6803, 1
  %6808 = mul i32 %6803, %6806
  %6809 = urem i32 %6808, 2
  %6810 = icmp eq i32 %6809, 0
  %6811 = icmp slt i32 %6804, 10
  %6812 = xor i1 %6810, true
  %6813 = xor i1 %6811, true
  %6814 = xor i1 true, true
  %6815 = and i1 %6812, true
  %6816 = and i1 %6810, %6814
  %6817 = and i1 %6813, true
  %6818 = and i1 %6811, %6814
  %6819 = or i1 %6815, %6816
  %6820 = or i1 %6817, %6818
  %6821 = xor i1 %6819, %6820
  %6822 = or i1 %6812, %6813
  %6823 = xor i1 %6822, true
  %6824 = or i1 true, %6814
  %6825 = and i1 %6823, %6824
  %6826 = or i1 %6821, %6825
  %6827 = or i1 %6810, %6811
  %6828 = select i1 %6826, i32 -636514357, i32 545666038
  store i32 %6828, i32* %switchVar
  br label %loopEnd

originalBB4712:                                   ; preds = %loopEntry
  %6829 = load i32, i32* %e, align 4
  %cmp1394 = icmp eq i32 %6829, 11
  store i1 %cmp1394, i1* %cmp1394.reg2mem
  %6830 = load i32, i32* @x
  %6831 = load i32, i32* @y
  %6832 = add i32 %6830, -1526839946
  %6833 = sub i32 %6832, 1
  %6834 = sub i32 %6833, -1526839946
  %6835 = sub i32 %6830, 1
  %6836 = mul i32 %6830, %6834
  %6837 = urem i32 %6836, 2
  %6838 = icmp eq i32 %6837, 0
  %6839 = icmp slt i32 %6831, 10
  %6840 = and i1 %6838, %6839
  %6841 = xor i1 %6838, %6839
  %6842 = or i1 %6840, %6841
  %6843 = or i1 %6838, %6839
  %6844 = select i1 %6842, i32 1187852314, i32 545666038
  store i32 %6844, i32* %switchVar
  br label %loopEnd

originalBBpart24714:                              ; preds = %loopEntry
  %cmp1394.reload = load volatile i1, i1* %cmp1394.reg2mem
  %6845 = select i1 %cmp1394.reload, i32 -812286201, i32 721023479
  store i32 %6845, i32* %switchVar
  br label %loopEnd

if.then1395:                                      ; preds = %loopEntry
  %6846 = load i32, i32* %s, align 4
  %6847 = sub i32 %6846, 1437372349
  %6848 = sub i32 %6847, 30
  %6849 = add i32 %6848, 1437372349
  %sub1396 = sub nsw i32 %6846, 30
  %6850 = load i32, i32* %f, align 4
  %6851 = sub i32 0, %6849
  %6852 = sub i32 0, %6850
  %6853 = add i32 %6851, %6852
  %6854 = sub i32 0, %6853
  %add1397 = add nsw i32 %6849, %6850
  %6855 = load i32, i32* %c, align 4
  %6856 = sub i32 %6854, 1037661687
  %6857 = sub i32 %6856, %6855
  %6858 = add i32 %6857, 1037661687
  %sub1398 = sub nsw i32 %6854, %6855
  store i32 %6858, i32* %s, align 4
  %6859 = load i32, i32* %s, align 4
  %call1399 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6859)
  store i32 721023479, i32* %switchVar
  br label %loopEnd

if.end1400:                                       ; preds = %loopEntry
  %6860 = load i32, i32* @x
  %6861 = load i32, i32* @y
  %6862 = add i32 %6860, -1068509750
  %6863 = sub i32 %6862, 1
  %6864 = sub i32 %6863, -1068509750
  %6865 = sub i32 %6860, 1
  %6866 = mul i32 %6860, %6864
  %6867 = urem i32 %6866, 2
  %6868 = icmp eq i32 %6867, 0
  %6869 = icmp slt i32 %6861, 10
  %6870 = and i1 %6868, %6869
  %6871 = xor i1 %6868, %6869
  %6872 = or i1 %6870, %6871
  %6873 = or i1 %6868, %6869
  %6874 = select i1 %6872, i32 1394101347, i32 -599330334
  store i32 %6874, i32* %switchVar
  br label %loopEnd

originalBB4716:                                   ; preds = %loopEntry
  %6875 = load i32, i32* @x
  %6876 = load i32, i32* @y
  %6877 = sub i32 %6875, 1005288753
  %6878 = sub i32 %6877, 1
  %6879 = add i32 %6878, 1005288753
  %6880 = sub i32 %6875, 1
  %6881 = mul i32 %6875, %6879
  %6882 = urem i32 %6881, 2
  %6883 = icmp eq i32 %6882, 0
  %6884 = icmp slt i32 %6876, 10
  %6885 = and i1 %6883, %6884
  %6886 = xor i1 %6883, %6884
  %6887 = or i1 %6885, %6886
  %6888 = or i1 %6883, %6884
  %6889 = select i1 %6887, i32 347994632, i32 -599330334
  store i32 %6889, i32* %switchVar
  br label %loopEnd

originalBBpart24718:                              ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

NewDefault:                                       ; preds = %loopEntry
  store i32 -785424163, i32* %switchVar
  br label %loopEnd

sw.epilog:                                        ; preds = %loopEntry
  store i32 -1405411124, i32* %switchVar
  br label %loopEnd

if.end1401:                                       ; preds = %loopEntry
  store i32 -688521829, i32* %switchVar
  br label %loopEnd

if.else1402:                                      ; preds = %loopEntry
  %6890 = load i32, i32* @x
  %6891 = load i32, i32* @y
  %6892 = sub i32 0, 1
  %6893 = add i32 %6890, %6892
  %6894 = sub i32 %6890, 1
  %6895 = mul i32 %6890, %6893
  %6896 = urem i32 %6895, 2
  %6897 = icmp eq i32 %6896, 0
  %6898 = icmp slt i32 %6891, 10
  %6899 = xor i1 %6897, true
  %6900 = xor i1 %6898, true
  %6901 = xor i1 false, true
  %6902 = and i1 %6899, false
  %6903 = and i1 %6897, %6901
  %6904 = and i1 %6900, false
  %6905 = and i1 %6898, %6901
  %6906 = or i1 %6902, %6903
  %6907 = or i1 %6904, %6905
  %6908 = xor i1 %6906, %6907
  %6909 = or i1 %6899, %6900
  %6910 = xor i1 %6909, true
  %6911 = or i1 false, %6901
  %6912 = and i1 %6910, %6911
  %6913 = or i1 %6908, %6912
  %6914 = or i1 %6897, %6898
  %6915 = select i1 %6913, i32 819842834, i32 1604265803
  store i32 %6915, i32* %switchVar
  br label %loopEnd

originalBB4720:                                   ; preds = %loopEntry
  %6916 = load i32, i32* %b, align 4
  %6917 = load i32, i32* %e, align 4
  %cmp1403 = icmp eq i32 %6916, %6917
  store i1 %cmp1403, i1* %cmp1403.reg2mem
  %6918 = load i32, i32* @x
  %6919 = load i32, i32* @y
  %6920 = add i32 %6918, -1251411767
  %6921 = sub i32 %6920, 1
  %6922 = sub i32 %6921, -1251411767
  %6923 = sub i32 %6918, 1
  %6924 = mul i32 %6918, %6922
  %6925 = urem i32 %6924, 2
  %6926 = icmp eq i32 %6925, 0
  %6927 = icmp slt i32 %6919, 10
  %6928 = xor i1 %6926, true
  %6929 = xor i1 %6927, true
  %6930 = xor i1 true, true
  %6931 = and i1 %6928, true
  %6932 = and i1 %6926, %6930
  %6933 = and i1 %6929, true
  %6934 = and i1 %6927, %6930
  %6935 = or i1 %6931, %6932
  %6936 = or i1 %6933, %6934
  %6937 = xor i1 %6935, %6936
  %6938 = or i1 %6928, %6929
  %6939 = xor i1 %6938, true
  %6940 = or i1 true, %6930
  %6941 = and i1 %6939, %6940
  %6942 = or i1 %6937, %6941
  %6943 = or i1 %6926, %6927
  %6944 = select i1 %6942, i32 -342738932, i32 1604265803
  store i32 %6944, i32* %switchVar
  br label %loopEnd

originalBBpart24722:                              ; preds = %loopEntry
  %cmp1403.reload = load volatile i1, i1* %cmp1403.reg2mem
  %6945 = select i1 %cmp1403.reload, i32 57212631, i32 654507149
  store i32 %6945, i32* %switchVar
  br label %loopEnd

if.then1404:                                      ; preds = %loopEntry
  %6946 = load i32, i32* @x
  %6947 = load i32, i32* @y
  %6948 = sub i32 %6946, 764361008
  %6949 = sub i32 %6948, 1
  %6950 = add i32 %6949, 764361008
  %6951 = sub i32 %6946, 1
  %6952 = mul i32 %6946, %6950
  %6953 = urem i32 %6952, 2
  %6954 = icmp eq i32 %6953, 0
  %6955 = icmp slt i32 %6947, 10
  %6956 = and i1 %6954, %6955
  %6957 = xor i1 %6954, %6955
  %6958 = or i1 %6956, %6957
  %6959 = or i1 %6954, %6955
  %6960 = select i1 %6958, i32 1763763121, i32 -2070727879
  store i32 %6960, i32* %switchVar
  br label %loopEnd

originalBB4724:                                   ; preds = %loopEntry
  %6961 = load i32, i32* %s, align 4
  %6962 = load i32, i32* %f, align 4
  %6963 = sub i32 0, %6962
  %6964 = sub i32 %6961, %6963
  %add1405 = add nsw i32 %6961, %6962
  %6965 = load i32, i32* %c, align 4
  %6966 = add i32 %6964, 2048888393
  %6967 = sub i32 %6966, %6965
  %6968 = sub i32 %6967, 2048888393
  %sub1406 = sub nsw i32 %6964, %6965
  store i32 %6968, i32* %s, align 4
  %6969 = load i32, i32* %s, align 4
  %call1407 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %6969)
  %6970 = load i32, i32* @x
  %6971 = load i32, i32* @y
  %6972 = add i32 %6970, 2086029829
  %6973 = sub i32 %6972, 1
  %6974 = sub i32 %6973, 2086029829
  %6975 = sub i32 %6970, 1
  %6976 = mul i32 %6970, %6974
  %6977 = urem i32 %6976, 2
  %6978 = icmp eq i32 %6977, 0
  %6979 = icmp slt i32 %6971, 10
  %6980 = and i1 %6978, %6979
  %6981 = xor i1 %6978, %6979
  %6982 = or i1 %6980, %6981
  %6983 = or i1 %6978, %6979
  %6984 = select i1 %6982, i32 405465085, i32 -2070727879
  store i32 %6984, i32* %switchVar
  br label %loopEnd

originalBBpart24730:                              ; preds = %loopEntry
  store i32 444623474, i32* %switchVar
  br label %loopEnd

if.else1408:                                      ; preds = %loopEntry
  %6985 = load i32, i32* @x
  %6986 = load i32, i32* @y
  %6987 = sub i32 %6985, -111421346
  %6988 = sub i32 %6987, 1
  %6989 = add i32 %6988, -111421346
  %6990 = sub i32 %6985, 1
  %6991 = mul i32 %6985, %6989
  %6992 = urem i32 %6991, 2
  %6993 = icmp eq i32 %6992, 0
  %6994 = icmp slt i32 %6986, 10
  %6995 = and i1 %6993, %6994
  %6996 = xor i1 %6993, %6994
  %6997 = or i1 %6995, %6996
  %6998 = or i1 %6993, %6994
  %6999 = select i1 %6997, i32 -1766639698, i32 -1140215933
  store i32 %6999, i32* %switchVar
  br label %loopEnd

originalBB4732:                                   ; preds = %loopEntry
  %7000 = load i32, i32* %b, align 4
  store i32 %7000, i32* %.reg2mem6910
  %7001 = load i32, i32* @x
  %7002 = load i32, i32* @y
  %7003 = sub i32 %7001, 2131788194
  %7004 = sub i32 %7003, 1
  %7005 = add i32 %7004, 2131788194
  %7006 = sub i32 %7001, 1
  %7007 = mul i32 %7001, %7005
  %7008 = urem i32 %7007, 2
  %7009 = icmp eq i32 %7008, 0
  %7010 = icmp slt i32 %7002, 10
  %7011 = and i1 %7009, %7010
  %7012 = xor i1 %7009, %7010
  %7013 = or i1 %7011, %7012
  %7014 = or i1 %7009, %7010
  %7015 = select i1 %7013, i32 -1839057728, i32 -1140215933
  store i32 %7015, i32* %switchVar
  br label %loopEnd

originalBBpart24734:                              ; preds = %loopEntry
  store i32 1707545394, i32* %switchVar
  br label %loopEnd

NodeBlock6868:                                    ; preds = %loopEntry
  %.reload6913 = load volatile i32, i32* %.reg2mem6910
  %Pivot6869 = icmp slt i32 %.reload6913, 2
  %7016 = select i1 %Pivot6869, i32 -1303285259, i32 -780776963
  store i32 %7016, i32* %switchVar
  br label %loopEnd

LeafBlock6866:                                    ; preds = %loopEntry
  %.reload6911 = load volatile i32, i32* %.reg2mem6910
  %SwitchLeaf6867 = icmp eq i32 %.reload6911, 2
  %7017 = select i1 %SwitchLeaf6867, i32 1911510721, i32 -123525773
  store i32 %7017, i32* %switchVar
  br label %loopEnd

LeafBlock6864:                                    ; preds = %loopEntry
  %.reload6912 = load volatile i32, i32* %.reg2mem6910
  %SwitchLeaf6865 = icmp eq i32 %.reload6912, 1
  %7018 = select i1 %SwitchLeaf6865, i32 1296018018, i32 -123525773
  store i32 %7018, i32* %switchVar
  br label %loopEnd

sw.bb1409:                                        ; preds = %loopEntry
  %7019 = load i32, i32* @x
  %7020 = load i32, i32* @y
  %7021 = sub i32 %7019, 884860523
  %7022 = sub i32 %7021, 1
  %7023 = add i32 %7022, 884860523
  %7024 = sub i32 %7019, 1
  %7025 = mul i32 %7019, %7023
  %7026 = urem i32 %7025, 2
  %7027 = icmp eq i32 %7026, 0
  %7028 = icmp slt i32 %7020, 10
  %7029 = xor i1 %7027, true
  %7030 = xor i1 %7028, true
  %7031 = xor i1 true, true
  %7032 = and i1 %7029, true
  %7033 = and i1 %7027, %7031
  %7034 = and i1 %7030, true
  %7035 = and i1 %7028, %7031
  %7036 = or i1 %7032, %7033
  %7037 = or i1 %7034, %7035
  %7038 = xor i1 %7036, %7037
  %7039 = or i1 %7029, %7030
  %7040 = xor i1 %7039, true
  %7041 = or i1 true, %7031
  %7042 = and i1 %7040, %7041
  %7043 = or i1 %7038, %7042
  %7044 = or i1 %7027, %7028
  %7045 = select i1 %7043, i32 -944567892, i32 -426330939
  store i32 %7045, i32* %switchVar
  br label %loopEnd

originalBB4736:                                   ; preds = %loopEntry
  %7046 = load i32, i32* %e, align 4
  %cmp1410 = icmp eq i32 %7046, 2
  store i1 %cmp1410, i1* %cmp1410.reg2mem
  %7047 = load i32, i32* @x
  %7048 = load i32, i32* @y
  %7049 = sub i32 0, 1
  %7050 = add i32 %7047, %7049
  %7051 = sub i32 %7047, 1
  %7052 = mul i32 %7047, %7050
  %7053 = urem i32 %7052, 2
  %7054 = icmp eq i32 %7053, 0
  %7055 = icmp slt i32 %7048, 10
  %7056 = xor i1 %7054, true
  %7057 = xor i1 %7055, true
  %7058 = xor i1 false, true
  %7059 = and i1 %7056, false
  %7060 = and i1 %7054, %7058
  %7061 = and i1 %7057, false
  %7062 = and i1 %7055, %7058
  %7063 = or i1 %7059, %7060
  %7064 = or i1 %7061, %7062
  %7065 = xor i1 %7063, %7064
  %7066 = or i1 %7056, %7057
  %7067 = xor i1 %7066, true
  %7068 = or i1 false, %7058
  %7069 = and i1 %7067, %7068
  %7070 = or i1 %7065, %7069
  %7071 = or i1 %7054, %7055
  %7072 = select i1 %7070, i32 -542112038, i32 -426330939
  store i32 %7072, i32* %switchVar
  br label %loopEnd

originalBBpart24738:                              ; preds = %loopEntry
  %cmp1410.reload = load volatile i1, i1* %cmp1410.reg2mem
  %7073 = select i1 %cmp1410.reload, i32 440863436, i32 -1873474434
  store i32 %7073, i32* %switchVar
  br label %loopEnd

if.then1411:                                      ; preds = %loopEntry
  %7074 = load i32, i32* %s, align 4
  %7075 = sub i32 0, %7074
  %7076 = sub i32 0, 31
  %7077 = add i32 %7075, %7076
  %7078 = sub i32 0, %7077
  %add1412 = add nsw i32 %7074, 31
  %7079 = load i32, i32* %f, align 4
  %7080 = sub i32 0, %7079
  %7081 = sub i32 %7078, %7080
  %add1413 = add nsw i32 %7078, %7079
  %7082 = load i32, i32* %c, align 4
  %7083 = sub i32 %7081, -504729230
  %7084 = sub i32 %7083, %7082
  %7085 = add i32 %7084, -504729230
  %sub1414 = sub nsw i32 %7081, %7082
  store i32 %7085, i32* %s, align 4
  %7086 = load i32, i32* %s, align 4
  %call1415 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7086)
  store i32 -1873474434, i32* %switchVar
  br label %loopEnd

if.end1416:                                       ; preds = %loopEntry
  %7087 = load i32, i32* %e, align 4
  %cmp1417 = icmp eq i32 %7087, 3
  %7088 = select i1 %cmp1417, i32 -1398274930, i32 -1172380964
  store i32 %7088, i32* %switchVar
  br label %loopEnd

if.then1418:                                      ; preds = %loopEntry
  %7089 = load i32, i32* %s, align 4
  %7090 = sub i32 %7089, 1018556053
  %7091 = add i32 %7090, 31
  %7092 = add i32 %7091, 1018556053
  %add1419 = add nsw i32 %7089, 31
  %7093 = sub i32 0, %7092
  %7094 = sub i32 0, 28
  %7095 = add i32 %7093, %7094
  %7096 = sub i32 0, %7095
  %add1420 = add nsw i32 %7092, 28
  %7097 = load i32, i32* %f, align 4
  %7098 = sub i32 0, %7096
  %7099 = sub i32 0, %7097
  %7100 = add i32 %7098, %7099
  %7101 = sub i32 0, %7100
  %add1421 = add nsw i32 %7096, %7097
  %7102 = load i32, i32* %c, align 4
  %7103 = sub i32 %7101, -2118919924
  %7104 = sub i32 %7103, %7102
  %7105 = add i32 %7104, -2118919924
  %sub1422 = sub nsw i32 %7101, %7102
  store i32 %7105, i32* %s, align 4
  %7106 = load i32, i32* %s, align 4
  %call1423 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7106)
  store i32 -1172380964, i32* %switchVar
  br label %loopEnd

if.end1424:                                       ; preds = %loopEntry
  %7107 = load i32, i32* @x
  %7108 = load i32, i32* @y
  %7109 = sub i32 0, 1
  %7110 = add i32 %7107, %7109
  %7111 = sub i32 %7107, 1
  %7112 = mul i32 %7107, %7110
  %7113 = urem i32 %7112, 2
  %7114 = icmp eq i32 %7113, 0
  %7115 = icmp slt i32 %7108, 10
  %7116 = xor i1 %7114, true
  %7117 = xor i1 %7115, true
  %7118 = xor i1 true, true
  %7119 = and i1 %7116, true
  %7120 = and i1 %7114, %7118
  %7121 = and i1 %7117, true
  %7122 = and i1 %7115, %7118
  %7123 = or i1 %7119, %7120
  %7124 = or i1 %7121, %7122
  %7125 = xor i1 %7123, %7124
  %7126 = or i1 %7116, %7117
  %7127 = xor i1 %7126, true
  %7128 = or i1 true, %7118
  %7129 = and i1 %7127, %7128
  %7130 = or i1 %7125, %7129
  %7131 = or i1 %7114, %7115
  %7132 = select i1 %7130, i32 -1007036407, i32 912965101
  store i32 %7132, i32* %switchVar
  br label %loopEnd

originalBB4740:                                   ; preds = %loopEntry
  %7133 = load i32, i32* %e, align 4
  %cmp1425 = icmp eq i32 %7133, 4
  store i1 %cmp1425, i1* %cmp1425.reg2mem
  %7134 = load i32, i32* @x
  %7135 = load i32, i32* @y
  %7136 = sub i32 %7134, -245899924
  %7137 = sub i32 %7136, 1
  %7138 = add i32 %7137, -245899924
  %7139 = sub i32 %7134, 1
  %7140 = mul i32 %7134, %7138
  %7141 = urem i32 %7140, 2
  %7142 = icmp eq i32 %7141, 0
  %7143 = icmp slt i32 %7135, 10
  %7144 = xor i1 %7142, true
  %7145 = xor i1 %7143, true
  %7146 = xor i1 true, true
  %7147 = and i1 %7144, true
  %7148 = and i1 %7142, %7146
  %7149 = and i1 %7145, true
  %7150 = and i1 %7143, %7146
  %7151 = or i1 %7147, %7148
  %7152 = or i1 %7149, %7150
  %7153 = xor i1 %7151, %7152
  %7154 = or i1 %7144, %7145
  %7155 = xor i1 %7154, true
  %7156 = or i1 true, %7146
  %7157 = and i1 %7155, %7156
  %7158 = or i1 %7153, %7157
  %7159 = or i1 %7142, %7143
  %7160 = select i1 %7158, i32 2110837480, i32 912965101
  store i32 %7160, i32* %switchVar
  br label %loopEnd

originalBBpart24742:                              ; preds = %loopEntry
  %cmp1425.reload = load volatile i1, i1* %cmp1425.reg2mem
  %7161 = select i1 %cmp1425.reload, i32 -2128672270, i32 -901942765
  store i32 %7161, i32* %switchVar
  br label %loopEnd

if.then1426:                                      ; preds = %loopEntry
  %7162 = load i32, i32* %s, align 4
  %7163 = sub i32 0, 31
  %7164 = sub i32 %7162, %7163
  %add1427 = add nsw i32 %7162, 31
  %7165 = add i32 %7164, 1778654843
  %7166 = add i32 %7165, 28
  %7167 = sub i32 %7166, 1778654843
  %add1428 = add nsw i32 %7164, 28
  %7168 = sub i32 0, %7167
  %7169 = sub i32 0, 31
  %7170 = add i32 %7168, %7169
  %7171 = sub i32 0, %7170
  %add1429 = add nsw i32 %7167, 31
  %7172 = load i32, i32* %f, align 4
  %7173 = sub i32 0, %7172
  %7174 = sub i32 %7171, %7173
  %add1430 = add nsw i32 %7171, %7172
  %7175 = load i32, i32* %c, align 4
  %7176 = sub i32 %7174, -345914696
  %7177 = sub i32 %7176, %7175
  %7178 = add i32 %7177, -345914696
  %sub1431 = sub nsw i32 %7174, %7175
  store i32 %7178, i32* %s, align 4
  %7179 = load i32, i32* %s, align 4
  %call1432 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7179)
  store i32 -901942765, i32* %switchVar
  br label %loopEnd

if.end1433:                                       ; preds = %loopEntry
  %7180 = load i32, i32* @x
  %7181 = load i32, i32* @y
  %7182 = sub i32 %7180, 1500306907
  %7183 = sub i32 %7182, 1
  %7184 = add i32 %7183, 1500306907
  %7185 = sub i32 %7180, 1
  %7186 = mul i32 %7180, %7184
  %7187 = urem i32 %7186, 2
  %7188 = icmp eq i32 %7187, 0
  %7189 = icmp slt i32 %7181, 10
  %7190 = xor i1 %7188, true
  %7191 = xor i1 %7189, true
  %7192 = xor i1 false, true
  %7193 = and i1 %7190, false
  %7194 = and i1 %7188, %7192
  %7195 = and i1 %7191, false
  %7196 = and i1 %7189, %7192
  %7197 = or i1 %7193, %7194
  %7198 = or i1 %7195, %7196
  %7199 = xor i1 %7197, %7198
  %7200 = or i1 %7190, %7191
  %7201 = xor i1 %7200, true
  %7202 = or i1 false, %7192
  %7203 = and i1 %7201, %7202
  %7204 = or i1 %7199, %7203
  %7205 = or i1 %7188, %7189
  %7206 = select i1 %7204, i32 -305474100, i32 1297444975
  store i32 %7206, i32* %switchVar
  br label %loopEnd

originalBB4744:                                   ; preds = %loopEntry
  %7207 = load i32, i32* %e, align 4
  %cmp1434 = icmp eq i32 %7207, 5
  store i1 %cmp1434, i1* %cmp1434.reg2mem
  %7208 = load i32, i32* @x
  %7209 = load i32, i32* @y
  %7210 = add i32 %7208, 454571515
  %7211 = sub i32 %7210, 1
  %7212 = sub i32 %7211, 454571515
  %7213 = sub i32 %7208, 1
  %7214 = mul i32 %7208, %7212
  %7215 = urem i32 %7214, 2
  %7216 = icmp eq i32 %7215, 0
  %7217 = icmp slt i32 %7209, 10
  %7218 = xor i1 %7216, true
  %7219 = xor i1 %7217, true
  %7220 = xor i1 false, true
  %7221 = and i1 %7218, false
  %7222 = and i1 %7216, %7220
  %7223 = and i1 %7219, false
  %7224 = and i1 %7217, %7220
  %7225 = or i1 %7221, %7222
  %7226 = or i1 %7223, %7224
  %7227 = xor i1 %7225, %7226
  %7228 = or i1 %7218, %7219
  %7229 = xor i1 %7228, true
  %7230 = or i1 false, %7220
  %7231 = and i1 %7229, %7230
  %7232 = or i1 %7227, %7231
  %7233 = or i1 %7216, %7217
  %7234 = select i1 %7232, i32 -1886960965, i32 1297444975
  store i32 %7234, i32* %switchVar
  br label %loopEnd

originalBBpart24746:                              ; preds = %loopEntry
  %cmp1434.reload = load volatile i1, i1* %cmp1434.reg2mem
  %7235 = select i1 %cmp1434.reload, i32 -1107402612, i32 760283244
  store i32 %7235, i32* %switchVar
  br label %loopEnd

if.then1435:                                      ; preds = %loopEntry
  %7236 = load i32, i32* @x
  %7237 = load i32, i32* @y
  %7238 = sub i32 %7236, -1377981990
  %7239 = sub i32 %7238, 1
  %7240 = add i32 %7239, -1377981990
  %7241 = sub i32 %7236, 1
  %7242 = mul i32 %7236, %7240
  %7243 = urem i32 %7242, 2
  %7244 = icmp eq i32 %7243, 0
  %7245 = icmp slt i32 %7237, 10
  %7246 = xor i1 %7244, true
  %7247 = xor i1 %7245, true
  %7248 = xor i1 false, true
  %7249 = and i1 %7246, false
  %7250 = and i1 %7244, %7248
  %7251 = and i1 %7247, false
  %7252 = and i1 %7245, %7248
  %7253 = or i1 %7249, %7250
  %7254 = or i1 %7251, %7252
  %7255 = xor i1 %7253, %7254
  %7256 = or i1 %7246, %7247
  %7257 = xor i1 %7256, true
  %7258 = or i1 false, %7248
  %7259 = and i1 %7257, %7258
  %7260 = or i1 %7255, %7259
  %7261 = or i1 %7244, %7245
  %7262 = select i1 %7260, i32 -1428856379, i32 -1088009119
  store i32 %7262, i32* %switchVar
  br label %loopEnd

originalBB4748:                                   ; preds = %loopEntry
  %7263 = load i32, i32* %s, align 4
  %7264 = sub i32 %7263, 2048491969
  %7265 = add i32 %7264, 31
  %7266 = add i32 %7265, 2048491969
  %add1436 = add nsw i32 %7263, 31
  %7267 = add i32 %7266, -1490027222
  %7268 = add i32 %7267, 28
  %7269 = sub i32 %7268, -1490027222
  %add1437 = add nsw i32 %7266, 28
  %7270 = sub i32 0, 31
  %7271 = sub i32 %7269, %7270
  %add1438 = add nsw i32 %7269, 31
  %7272 = sub i32 0, %7271
  %7273 = sub i32 0, 30
  %7274 = add i32 %7272, %7273
  %7275 = sub i32 0, %7274
  %add1439 = add nsw i32 %7271, 30
  %7276 = load i32, i32* %f, align 4
  %7277 = sub i32 0, %7276
  %7278 = sub i32 %7275, %7277
  %add1440 = add nsw i32 %7275, %7276
  %7279 = load i32, i32* %c, align 4
  %7280 = sub i32 0, %7279
  %7281 = add i32 %7278, %7280
  %sub1441 = sub nsw i32 %7278, %7279
  store i32 %7281, i32* %s, align 4
  %7282 = load i32, i32* %s, align 4
  %call1442 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7282)
  %7283 = load i32, i32* @x
  %7284 = load i32, i32* @y
  %7285 = add i32 %7283, 458276789
  %7286 = sub i32 %7285, 1
  %7287 = sub i32 %7286, 458276789
  %7288 = sub i32 %7283, 1
  %7289 = mul i32 %7283, %7287
  %7290 = urem i32 %7289, 2
  %7291 = icmp eq i32 %7290, 0
  %7292 = icmp slt i32 %7284, 10
  %7293 = xor i1 %7291, true
  %7294 = xor i1 %7292, true
  %7295 = xor i1 false, true
  %7296 = and i1 %7293, false
  %7297 = and i1 %7291, %7295
  %7298 = and i1 %7294, false
  %7299 = and i1 %7292, %7295
  %7300 = or i1 %7296, %7297
  %7301 = or i1 %7298, %7299
  %7302 = xor i1 %7300, %7301
  %7303 = or i1 %7293, %7294
  %7304 = xor i1 %7303, true
  %7305 = or i1 false, %7295
  %7306 = and i1 %7304, %7305
  %7307 = or i1 %7302, %7306
  %7308 = or i1 %7291, %7292
  %7309 = select i1 %7307, i32 445888031, i32 -1088009119
  store i32 %7309, i32* %switchVar
  br label %loopEnd

originalBBpart24797:                              ; preds = %loopEntry
  store i32 760283244, i32* %switchVar
  br label %loopEnd

if.end1443:                                       ; preds = %loopEntry
  %7310 = load i32, i32* %e, align 4
  %cmp1444 = icmp eq i32 %7310, 6
  %7311 = select i1 %cmp1444, i32 -1192683997, i32 419540654
  store i32 %7311, i32* %switchVar
  br label %loopEnd

if.then1445:                                      ; preds = %loopEntry
  %7312 = load i32, i32* %s, align 4
  %7313 = add i32 %7312, -2119256359
  %7314 = add i32 %7313, 31
  %7315 = sub i32 %7314, -2119256359
  %add1446 = add nsw i32 %7312, 31
  %7316 = add i32 %7315, 1482129657
  %7317 = add i32 %7316, 28
  %7318 = sub i32 %7317, 1482129657
  %add1447 = add nsw i32 %7315, 28
  %7319 = sub i32 %7318, -149319889
  %7320 = add i32 %7319, 31
  %7321 = add i32 %7320, -149319889
  %add1448 = add nsw i32 %7318, 31
  %7322 = sub i32 %7321, 318195599
  %7323 = add i32 %7322, 30
  %7324 = add i32 %7323, 318195599
  %add1449 = add nsw i32 %7321, 30
  %7325 = sub i32 %7324, -1987571507
  %7326 = add i32 %7325, 31
  %7327 = add i32 %7326, -1987571507
  %add1450 = add nsw i32 %7324, 31
  %7328 = load i32, i32* %f, align 4
  %7329 = sub i32 0, %7328
  %7330 = sub i32 %7327, %7329
  %add1451 = add nsw i32 %7327, %7328
  %7331 = load i32, i32* %c, align 4
  %7332 = sub i32 0, %7331
  %7333 = add i32 %7330, %7332
  %sub1452 = sub nsw i32 %7330, %7331
  store i32 %7333, i32* %s, align 4
  %7334 = load i32, i32* %s, align 4
  %call1453 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7334)
  store i32 419540654, i32* %switchVar
  br label %loopEnd

if.end1454:                                       ; preds = %loopEntry
  %7335 = load i32, i32* %e, align 4
  %cmp1455 = icmp eq i32 %7335, 7
  %7336 = select i1 %cmp1455, i32 -962068092, i32 442402346
  store i32 %7336, i32* %switchVar
  br label %loopEnd

if.then1456:                                      ; preds = %loopEntry
  %7337 = load i32, i32* @x
  %7338 = load i32, i32* @y
  %7339 = add i32 %7337, 983577250
  %7340 = sub i32 %7339, 1
  %7341 = sub i32 %7340, 983577250
  %7342 = sub i32 %7337, 1
  %7343 = mul i32 %7337, %7341
  %7344 = urem i32 %7343, 2
  %7345 = icmp eq i32 %7344, 0
  %7346 = icmp slt i32 %7338, 10
  %7347 = and i1 %7345, %7346
  %7348 = xor i1 %7345, %7346
  %7349 = or i1 %7347, %7348
  %7350 = or i1 %7345, %7346
  %7351 = select i1 %7349, i32 1435978151, i32 1751089366
  store i32 %7351, i32* %switchVar
  br label %loopEnd

originalBB4799:                                   ; preds = %loopEntry
  %7352 = load i32, i32* %s, align 4
  %7353 = add i32 %7352, 1503264045
  %7354 = add i32 %7353, 31
  %7355 = sub i32 %7354, 1503264045
  %add1457 = add nsw i32 %7352, 31
  %7356 = add i32 %7355, 714002060
  %7357 = add i32 %7356, 28
  %7358 = sub i32 %7357, 714002060
  %add1458 = add nsw i32 %7355, 28
  %7359 = sub i32 %7358, -864446717
  %7360 = add i32 %7359, 31
  %7361 = add i32 %7360, -864446717
  %add1459 = add nsw i32 %7358, 31
  %7362 = sub i32 0, %7361
  %7363 = sub i32 0, 30
  %7364 = add i32 %7362, %7363
  %7365 = sub i32 0, %7364
  %add1460 = add nsw i32 %7361, 30
  %7366 = add i32 %7365, -1827058503
  %7367 = add i32 %7366, 31
  %7368 = sub i32 %7367, -1827058503
  %add1461 = add nsw i32 %7365, 31
  %7369 = sub i32 %7368, -377680205
  %7370 = add i32 %7369, 30
  %7371 = add i32 %7370, -377680205
  %add1462 = add nsw i32 %7368, 30
  %7372 = load i32, i32* %f, align 4
  %7373 = sub i32 0, %7372
  %7374 = sub i32 %7371, %7373
  %add1463 = add nsw i32 %7371, %7372
  %7375 = load i32, i32* %c, align 4
  %7376 = add i32 %7374, -1232630759
  %7377 = sub i32 %7376, %7375
  %7378 = sub i32 %7377, -1232630759
  %sub1464 = sub nsw i32 %7374, %7375
  store i32 %7378, i32* %s, align 4
  %7379 = load i32, i32* %s, align 4
  %call1465 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7379)
  %7380 = load i32, i32* @x
  %7381 = load i32, i32* @y
  %7382 = sub i32 0, 1
  %7383 = add i32 %7380, %7382
  %7384 = sub i32 %7380, 1
  %7385 = mul i32 %7380, %7383
  %7386 = urem i32 %7385, 2
  %7387 = icmp eq i32 %7386, 0
  %7388 = icmp slt i32 %7381, 10
  %7389 = xor i1 %7387, true
  %7390 = xor i1 %7388, true
  %7391 = xor i1 true, true
  %7392 = and i1 %7389, true
  %7393 = and i1 %7387, %7391
  %7394 = and i1 %7390, true
  %7395 = and i1 %7388, %7391
  %7396 = or i1 %7392, %7393
  %7397 = or i1 %7394, %7395
  %7398 = xor i1 %7396, %7397
  %7399 = or i1 %7389, %7390
  %7400 = xor i1 %7399, true
  %7401 = or i1 true, %7391
  %7402 = and i1 %7400, %7401
  %7403 = or i1 %7398, %7402
  %7404 = or i1 %7387, %7388
  %7405 = select i1 %7403, i32 -1593560158, i32 1751089366
  store i32 %7405, i32* %switchVar
  br label %loopEnd

originalBBpart24838:                              ; preds = %loopEntry
  store i32 442402346, i32* %switchVar
  br label %loopEnd

if.end1466:                                       ; preds = %loopEntry
  %7406 = load i32, i32* %e, align 4
  %cmp1467 = icmp eq i32 %7406, 8
  %7407 = select i1 %cmp1467, i32 2132074, i32 -1960814655
  store i32 %7407, i32* %switchVar
  br label %loopEnd

if.then1468:                                      ; preds = %loopEntry
  %7408 = load i32, i32* %s, align 4
  %7409 = sub i32 %7408, 1769973596
  %7410 = add i32 %7409, 31
  %7411 = add i32 %7410, 1769973596
  %add1469 = add nsw i32 %7408, 31
  %7412 = sub i32 0, 28
  %7413 = sub i32 %7411, %7412
  %add1470 = add nsw i32 %7411, 28
  %7414 = sub i32 0, 31
  %7415 = sub i32 %7413, %7414
  %add1471 = add nsw i32 %7413, 31
  %7416 = sub i32 %7415, -137081532
  %7417 = add i32 %7416, 30
  %7418 = add i32 %7417, -137081532
  %add1472 = add nsw i32 %7415, 30
  %7419 = sub i32 0, %7418
  %7420 = sub i32 0, 31
  %7421 = add i32 %7419, %7420
  %7422 = sub i32 0, %7421
  %add1473 = add nsw i32 %7418, 31
  %7423 = sub i32 0, %7422
  %7424 = sub i32 0, 30
  %7425 = add i32 %7423, %7424
  %7426 = sub i32 0, %7425
  %add1474 = add nsw i32 %7422, 30
  %7427 = add i32 %7426, -424642612
  %7428 = add i32 %7427, 31
  %7429 = sub i32 %7428, -424642612
  %add1475 = add nsw i32 %7426, 31
  %7430 = load i32, i32* %f, align 4
  %7431 = sub i32 0, %7429
  %7432 = sub i32 0, %7430
  %7433 = add i32 %7431, %7432
  %7434 = sub i32 0, %7433
  %add1476 = add nsw i32 %7429, %7430
  %7435 = load i32, i32* %c, align 4
  %7436 = sub i32 %7434, 1734185024
  %7437 = sub i32 %7436, %7435
  %7438 = add i32 %7437, 1734185024
  %sub1477 = sub nsw i32 %7434, %7435
  store i32 %7438, i32* %s, align 4
  %7439 = load i32, i32* %s, align 4
  %call1478 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7439)
  store i32 -1960814655, i32* %switchVar
  br label %loopEnd

if.end1479:                                       ; preds = %loopEntry
  %7440 = load i32, i32* @x
  %7441 = load i32, i32* @y
  %7442 = sub i32 0, 1
  %7443 = add i32 %7440, %7442
  %7444 = sub i32 %7440, 1
  %7445 = mul i32 %7440, %7443
  %7446 = urem i32 %7445, 2
  %7447 = icmp eq i32 %7446, 0
  %7448 = icmp slt i32 %7441, 10
  %7449 = xor i1 %7447, true
  %7450 = xor i1 %7448, true
  %7451 = xor i1 false, true
  %7452 = and i1 %7449, false
  %7453 = and i1 %7447, %7451
  %7454 = and i1 %7450, false
  %7455 = and i1 %7448, %7451
  %7456 = or i1 %7452, %7453
  %7457 = or i1 %7454, %7455
  %7458 = xor i1 %7456, %7457
  %7459 = or i1 %7449, %7450
  %7460 = xor i1 %7459, true
  %7461 = or i1 false, %7451
  %7462 = and i1 %7460, %7461
  %7463 = or i1 %7458, %7462
  %7464 = or i1 %7447, %7448
  %7465 = select i1 %7463, i32 854729756, i32 -1110387914
  store i32 %7465, i32* %switchVar
  br label %loopEnd

originalBB4840:                                   ; preds = %loopEntry
  %7466 = load i32, i32* %e, align 4
  %cmp1480 = icmp eq i32 %7466, 9
  store i1 %cmp1480, i1* %cmp1480.reg2mem
  %7467 = load i32, i32* @x
  %7468 = load i32, i32* @y
  %7469 = sub i32 0, 1
  %7470 = add i32 %7467, %7469
  %7471 = sub i32 %7467, 1
  %7472 = mul i32 %7467, %7470
  %7473 = urem i32 %7472, 2
  %7474 = icmp eq i32 %7473, 0
  %7475 = icmp slt i32 %7468, 10
  %7476 = and i1 %7474, %7475
  %7477 = xor i1 %7474, %7475
  %7478 = or i1 %7476, %7477
  %7479 = or i1 %7474, %7475
  %7480 = select i1 %7478, i32 1476561836, i32 -1110387914
  store i32 %7480, i32* %switchVar
  br label %loopEnd

originalBBpart24842:                              ; preds = %loopEntry
  %cmp1480.reload = load volatile i1, i1* %cmp1480.reg2mem
  %7481 = select i1 %cmp1480.reload, i32 71958313, i32 -768428719
  store i32 %7481, i32* %switchVar
  br label %loopEnd

if.then1481:                                      ; preds = %loopEntry
  %7482 = load i32, i32* %s, align 4
  %7483 = sub i32 0, %7482
  %7484 = sub i32 0, 31
  %7485 = add i32 %7483, %7484
  %7486 = sub i32 0, %7485
  %add1482 = add nsw i32 %7482, 31
  %7487 = sub i32 %7486, -1383886789
  %7488 = add i32 %7487, 28
  %7489 = add i32 %7488, -1383886789
  %add1483 = add nsw i32 %7486, 28
  %7490 = sub i32 0, %7489
  %7491 = sub i32 0, 31
  %7492 = add i32 %7490, %7491
  %7493 = sub i32 0, %7492
  %add1484 = add nsw i32 %7489, 31
  %7494 = sub i32 0, 30
  %7495 = sub i32 %7493, %7494
  %add1485 = add nsw i32 %7493, 30
  %7496 = sub i32 0, %7495
  %7497 = sub i32 0, 31
  %7498 = add i32 %7496, %7497
  %7499 = sub i32 0, %7498
  %add1486 = add nsw i32 %7495, 31
  %7500 = sub i32 %7499, -1203896404
  %7501 = add i32 %7500, 30
  %7502 = add i32 %7501, -1203896404
  %add1487 = add nsw i32 %7499, 30
  %7503 = sub i32 %7502, -1423689716
  %7504 = add i32 %7503, 31
  %7505 = add i32 %7504, -1423689716
  %add1488 = add nsw i32 %7502, 31
  %7506 = sub i32 %7505, -877773119
  %7507 = add i32 %7506, 31
  %7508 = add i32 %7507, -877773119
  %add1489 = add nsw i32 %7505, 31
  %7509 = load i32, i32* %f, align 4
  %7510 = sub i32 %7508, -1576597758
  %7511 = add i32 %7510, %7509
  %7512 = add i32 %7511, -1576597758
  %add1490 = add nsw i32 %7508, %7509
  %7513 = load i32, i32* %c, align 4
  %7514 = add i32 %7512, -592337937
  %7515 = sub i32 %7514, %7513
  %7516 = sub i32 %7515, -592337937
  %sub1491 = sub nsw i32 %7512, %7513
  store i32 %7516, i32* %s, align 4
  %7517 = load i32, i32* %s, align 4
  %call1492 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7517)
  store i32 -768428719, i32* %switchVar
  br label %loopEnd

if.end1493:                                       ; preds = %loopEntry
  %7518 = load i32, i32* @x
  %7519 = load i32, i32* @y
  %7520 = sub i32 %7518, -1587225134
  %7521 = sub i32 %7520, 1
  %7522 = add i32 %7521, -1587225134
  %7523 = sub i32 %7518, 1
  %7524 = mul i32 %7518, %7522
  %7525 = urem i32 %7524, 2
  %7526 = icmp eq i32 %7525, 0
  %7527 = icmp slt i32 %7519, 10
  %7528 = and i1 %7526, %7527
  %7529 = xor i1 %7526, %7527
  %7530 = or i1 %7528, %7529
  %7531 = or i1 %7526, %7527
  %7532 = select i1 %7530, i32 10232142, i32 469593917
  store i32 %7532, i32* %switchVar
  br label %loopEnd

originalBB4844:                                   ; preds = %loopEntry
  %7533 = load i32, i32* %e, align 4
  %cmp1494 = icmp eq i32 %7533, 10
  store i1 %cmp1494, i1* %cmp1494.reg2mem
  %7534 = load i32, i32* @x
  %7535 = load i32, i32* @y
  %7536 = sub i32 %7534, 2077868881
  %7537 = sub i32 %7536, 1
  %7538 = add i32 %7537, 2077868881
  %7539 = sub i32 %7534, 1
  %7540 = mul i32 %7534, %7538
  %7541 = urem i32 %7540, 2
  %7542 = icmp eq i32 %7541, 0
  %7543 = icmp slt i32 %7535, 10
  %7544 = and i1 %7542, %7543
  %7545 = xor i1 %7542, %7543
  %7546 = or i1 %7544, %7545
  %7547 = or i1 %7542, %7543
  %7548 = select i1 %7546, i32 -1956200600, i32 469593917
  store i32 %7548, i32* %switchVar
  br label %loopEnd

originalBBpart24846:                              ; preds = %loopEntry
  %cmp1494.reload = load volatile i1, i1* %cmp1494.reg2mem
  %7549 = select i1 %cmp1494.reload, i32 -1194518303, i32 2098988144
  store i32 %7549, i32* %switchVar
  br label %loopEnd

if.then1495:                                      ; preds = %loopEntry
  %7550 = load i32, i32* @x
  %7551 = load i32, i32* @y
  %7552 = add i32 %7550, 1763338126
  %7553 = sub i32 %7552, 1
  %7554 = sub i32 %7553, 1763338126
  %7555 = sub i32 %7550, 1
  %7556 = mul i32 %7550, %7554
  %7557 = urem i32 %7556, 2
  %7558 = icmp eq i32 %7557, 0
  %7559 = icmp slt i32 %7551, 10
  %7560 = and i1 %7558, %7559
  %7561 = xor i1 %7558, %7559
  %7562 = or i1 %7560, %7561
  %7563 = or i1 %7558, %7559
  %7564 = select i1 %7562, i32 -1196559913, i32 1402428289
  store i32 %7564, i32* %switchVar
  br label %loopEnd

originalBB4848:                                   ; preds = %loopEntry
  %7565 = load i32, i32* %s, align 4
  %7566 = sub i32 0, 31
  %7567 = sub i32 %7565, %7566
  %add1496 = add nsw i32 %7565, 31
  %7568 = sub i32 0, %7567
  %7569 = sub i32 0, 28
  %7570 = add i32 %7568, %7569
  %7571 = sub i32 0, %7570
  %add1497 = add nsw i32 %7567, 28
  %7572 = sub i32 0, %7571
  %7573 = sub i32 0, 31
  %7574 = add i32 %7572, %7573
  %7575 = sub i32 0, %7574
  %add1498 = add nsw i32 %7571, 31
  %7576 = add i32 %7575, 2059327812
  %7577 = add i32 %7576, 30
  %7578 = sub i32 %7577, 2059327812
  %add1499 = add nsw i32 %7575, 30
  %7579 = sub i32 %7578, -1760804924
  %7580 = add i32 %7579, 31
  %7581 = add i32 %7580, -1760804924
  %add1500 = add nsw i32 %7578, 31
  %7582 = sub i32 0, 30
  %7583 = sub i32 %7581, %7582
  %add1501 = add nsw i32 %7581, 30
  %7584 = sub i32 0, %7583
  %7585 = sub i32 0, 31
  %7586 = add i32 %7584, %7585
  %7587 = sub i32 0, %7586
  %add1502 = add nsw i32 %7583, 31
  %7588 = sub i32 0, %7587
  %7589 = sub i32 0, 31
  %7590 = add i32 %7588, %7589
  %7591 = sub i32 0, %7590
  %add1503 = add nsw i32 %7587, 31
  %7592 = sub i32 0, %7591
  %7593 = sub i32 0, 30
  %7594 = add i32 %7592, %7593
  %7595 = sub i32 0, %7594
  %add1504 = add nsw i32 %7591, 30
  %7596 = load i32, i32* %f, align 4
  %7597 = sub i32 0, %7596
  %7598 = sub i32 %7595, %7597
  %add1505 = add nsw i32 %7595, %7596
  %7599 = load i32, i32* %c, align 4
  %7600 = sub i32 %7598, -1401575438
  %7601 = sub i32 %7600, %7599
  %7602 = add i32 %7601, -1401575438
  %sub1506 = sub nsw i32 %7598, %7599
  store i32 %7602, i32* %s, align 4
  %7603 = load i32, i32* %s, align 4
  %call1507 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7603)
  %7604 = load i32, i32* @x
  %7605 = load i32, i32* @y
  %7606 = add i32 %7604, 1727462517
  %7607 = sub i32 %7606, 1
  %7608 = sub i32 %7607, 1727462517
  %7609 = sub i32 %7604, 1
  %7610 = mul i32 %7604, %7608
  %7611 = urem i32 %7610, 2
  %7612 = icmp eq i32 %7611, 0
  %7613 = icmp slt i32 %7605, 10
  %7614 = xor i1 %7612, true
  %7615 = xor i1 %7613, true
  %7616 = xor i1 true, true
  %7617 = and i1 %7614, true
  %7618 = and i1 %7612, %7616
  %7619 = and i1 %7615, true
  %7620 = and i1 %7613, %7616
  %7621 = or i1 %7617, %7618
  %7622 = or i1 %7619, %7620
  %7623 = xor i1 %7621, %7622
  %7624 = or i1 %7614, %7615
  %7625 = xor i1 %7624, true
  %7626 = or i1 true, %7616
  %7627 = and i1 %7625, %7626
  %7628 = or i1 %7623, %7627
  %7629 = or i1 %7612, %7613
  %7630 = select i1 %7628, i32 -1606015573, i32 1402428289
  store i32 %7630, i32* %switchVar
  br label %loopEnd

originalBBpart24940:                              ; preds = %loopEntry
  store i32 2098988144, i32* %switchVar
  br label %loopEnd

if.end1508:                                       ; preds = %loopEntry
  %7631 = load i32, i32* %e, align 4
  %cmp1509 = icmp eq i32 %7631, 11
  %7632 = select i1 %cmp1509, i32 79189920, i32 13428551
  store i32 %7632, i32* %switchVar
  br label %loopEnd

if.then1510:                                      ; preds = %loopEntry
  %7633 = load i32, i32* %s, align 4
  %7634 = sub i32 0, %7633
  %7635 = sub i32 0, 31
  %7636 = add i32 %7634, %7635
  %7637 = sub i32 0, %7636
  %add1511 = add nsw i32 %7633, 31
  %7638 = sub i32 0, %7637
  %7639 = sub i32 0, 28
  %7640 = add i32 %7638, %7639
  %7641 = sub i32 0, %7640
  %add1512 = add nsw i32 %7637, 28
  %7642 = sub i32 0, 31
  %7643 = sub i32 %7641, %7642
  %add1513 = add nsw i32 %7641, 31
  %7644 = add i32 %7643, -307728495
  %7645 = add i32 %7644, 30
  %7646 = sub i32 %7645, -307728495
  %add1514 = add nsw i32 %7643, 30
  %7647 = add i32 %7646, -755957152
  %7648 = add i32 %7647, 31
  %7649 = sub i32 %7648, -755957152
  %add1515 = add nsw i32 %7646, 31
  %7650 = add i32 %7649, -1501749946
  %7651 = add i32 %7650, 30
  %7652 = sub i32 %7651, -1501749946
  %add1516 = add nsw i32 %7649, 30
  %7653 = sub i32 0, 31
  %7654 = sub i32 %7652, %7653
  %add1517 = add nsw i32 %7652, 31
  %7655 = sub i32 %7654, 938781840
  %7656 = add i32 %7655, 31
  %7657 = add i32 %7656, 938781840
  %add1518 = add nsw i32 %7654, 31
  %7658 = sub i32 0, 30
  %7659 = sub i32 %7657, %7658
  %add1519 = add nsw i32 %7657, 30
  %7660 = sub i32 0, %7659
  %7661 = sub i32 0, 31
  %7662 = add i32 %7660, %7661
  %7663 = sub i32 0, %7662
  %add1520 = add nsw i32 %7659, 31
  %7664 = load i32, i32* %f, align 4
  %7665 = sub i32 0, %7664
  %7666 = sub i32 %7663, %7665
  %add1521 = add nsw i32 %7663, %7664
  %7667 = load i32, i32* %c, align 4
  %7668 = sub i32 0, %7667
  %7669 = add i32 %7666, %7668
  %sub1522 = sub nsw i32 %7666, %7667
  store i32 %7669, i32* %s, align 4
  %7670 = load i32, i32* %s, align 4
  %call1523 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7670)
  store i32 13428551, i32* %switchVar
  br label %loopEnd

if.end1524:                                       ; preds = %loopEntry
  %7671 = load i32, i32* %e, align 4
  %cmp1525 = icmp eq i32 %7671, 12
  %7672 = select i1 %cmp1525, i32 -546271062, i32 -751032583
  store i32 %7672, i32* %switchVar
  br label %loopEnd

if.then1526:                                      ; preds = %loopEntry
  %7673 = load i32, i32* %s, align 4
  %7674 = sub i32 %7673, -633355517
  %7675 = add i32 %7674, 31
  %7676 = add i32 %7675, -633355517
  %add1527 = add nsw i32 %7673, 31
  %7677 = sub i32 %7676, -108572205
  %7678 = add i32 %7677, 28
  %7679 = add i32 %7678, -108572205
  %add1528 = add nsw i32 %7676, 28
  %7680 = sub i32 0, %7679
  %7681 = sub i32 0, 31
  %7682 = add i32 %7680, %7681
  %7683 = sub i32 0, %7682
  %add1529 = add nsw i32 %7679, 31
  %7684 = sub i32 %7683, -1293708155
  %7685 = add i32 %7684, 30
  %7686 = add i32 %7685, -1293708155
  %add1530 = add nsw i32 %7683, 30
  %7687 = add i32 %7686, 1292946560
  %7688 = add i32 %7687, 31
  %7689 = sub i32 %7688, 1292946560
  %add1531 = add nsw i32 %7686, 31
  %7690 = sub i32 0, 30
  %7691 = sub i32 %7689, %7690
  %add1532 = add nsw i32 %7689, 30
  %7692 = sub i32 %7691, 1211392961
  %7693 = add i32 %7692, 31
  %7694 = add i32 %7693, 1211392961
  %add1533 = add nsw i32 %7691, 31
  %7695 = sub i32 0, 31
  %7696 = sub i32 %7694, %7695
  %add1534 = add nsw i32 %7694, 31
  %7697 = sub i32 0, 30
  %7698 = sub i32 %7696, %7697
  %add1535 = add nsw i32 %7696, 30
  %7699 = sub i32 0, %7698
  %7700 = sub i32 0, 31
  %7701 = add i32 %7699, %7700
  %7702 = sub i32 0, %7701
  %add1536 = add nsw i32 %7698, 31
  %7703 = add i32 %7702, 2110358221
  %7704 = add i32 %7703, 30
  %7705 = sub i32 %7704, 2110358221
  %add1537 = add nsw i32 %7702, 30
  %7706 = load i32, i32* %f, align 4
  %7707 = sub i32 %7705, 1185494553
  %7708 = add i32 %7707, %7706
  %7709 = add i32 %7708, 1185494553
  %add1538 = add nsw i32 %7705, %7706
  %7710 = load i32, i32* %c, align 4
  %7711 = sub i32 %7709, -1204374138
  %7712 = sub i32 %7711, %7710
  %7713 = add i32 %7712, -1204374138
  %sub1539 = sub nsw i32 %7709, %7710
  store i32 %7713, i32* %s, align 4
  %7714 = load i32, i32* %s, align 4
  %call1540 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7714)
  store i32 -751032583, i32* %switchVar
  br label %loopEnd

if.end1541:                                       ; preds = %loopEntry
  store i32 -876928443, i32* %switchVar
  br label %loopEnd

sw.bb1542:                                        ; preds = %loopEntry
  %7715 = load i32, i32* %e, align 4
  %cmp1543 = icmp eq i32 %7715, 1
  %7716 = select i1 %cmp1543, i32 2119475869, i32 1303749854
  store i32 %7716, i32* %switchVar
  br label %loopEnd

if.then1544:                                      ; preds = %loopEntry
  %7717 = load i32, i32* %s, align 4
  %7718 = add i32 %7717, 582697736
  %7719 = sub i32 %7718, 31
  %7720 = sub i32 %7719, 582697736
  %sub1545 = sub nsw i32 %7717, 31
  %7721 = load i32, i32* %f, align 4
  %7722 = sub i32 0, %7721
  %7723 = sub i32 %7720, %7722
  %add1546 = add nsw i32 %7720, %7721
  %7724 = load i32, i32* %c, align 4
  %7725 = sub i32 %7723, -2068181448
  %7726 = sub i32 %7725, %7724
  %7727 = add i32 %7726, -2068181448
  %sub1547 = sub nsw i32 %7723, %7724
  store i32 %7727, i32* %s, align 4
  %7728 = load i32, i32* %s, align 4
  %call1548 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7728)
  store i32 1303749854, i32* %switchVar
  br label %loopEnd

if.end1549:                                       ; preds = %loopEntry
  %7729 = load i32, i32* @x
  %7730 = load i32, i32* @y
  %7731 = add i32 %7729, -1403944238
  %7732 = sub i32 %7731, 1
  %7733 = sub i32 %7732, -1403944238
  %7734 = sub i32 %7729, 1
  %7735 = mul i32 %7729, %7733
  %7736 = urem i32 %7735, 2
  %7737 = icmp eq i32 %7736, 0
  %7738 = icmp slt i32 %7730, 10
  %7739 = and i1 %7737, %7738
  %7740 = xor i1 %7737, %7738
  %7741 = or i1 %7739, %7740
  %7742 = or i1 %7737, %7738
  %7743 = select i1 %7741, i32 404273808, i32 -476778337
  store i32 %7743, i32* %switchVar
  br label %loopEnd

originalBB4942:                                   ; preds = %loopEntry
  %7744 = load i32, i32* %e, align 4
  %cmp1550 = icmp eq i32 %7744, 3
  store i1 %cmp1550, i1* %cmp1550.reg2mem
  %7745 = load i32, i32* @x
  %7746 = load i32, i32* @y
  %7747 = sub i32 0, 1
  %7748 = add i32 %7745, %7747
  %7749 = sub i32 %7745, 1
  %7750 = mul i32 %7745, %7748
  %7751 = urem i32 %7750, 2
  %7752 = icmp eq i32 %7751, 0
  %7753 = icmp slt i32 %7746, 10
  %7754 = xor i1 %7752, true
  %7755 = xor i1 %7753, true
  %7756 = xor i1 false, true
  %7757 = and i1 %7754, false
  %7758 = and i1 %7752, %7756
  %7759 = and i1 %7755, false
  %7760 = and i1 %7753, %7756
  %7761 = or i1 %7757, %7758
  %7762 = or i1 %7759, %7760
  %7763 = xor i1 %7761, %7762
  %7764 = or i1 %7754, %7755
  %7765 = xor i1 %7764, true
  %7766 = or i1 false, %7756
  %7767 = and i1 %7765, %7766
  %7768 = or i1 %7763, %7767
  %7769 = or i1 %7752, %7753
  %7770 = select i1 %7768, i32 -1655808879, i32 -476778337
  store i32 %7770, i32* %switchVar
  br label %loopEnd

originalBBpart24944:                              ; preds = %loopEntry
  %cmp1550.reload = load volatile i1, i1* %cmp1550.reg2mem
  %7771 = select i1 %cmp1550.reload, i32 440011884, i32 -563751696
  store i32 %7771, i32* %switchVar
  br label %loopEnd

if.then1551:                                      ; preds = %loopEntry
  %7772 = load i32, i32* %s, align 4
  %7773 = add i32 %7772, 1321829413
  %7774 = add i32 %7773, 28
  %7775 = sub i32 %7774, 1321829413
  %add1552 = add nsw i32 %7772, 28
  %7776 = load i32, i32* %f, align 4
  %7777 = sub i32 %7775, -7760180
  %7778 = add i32 %7777, %7776
  %7779 = add i32 %7778, -7760180
  %add1553 = add nsw i32 %7775, %7776
  %7780 = load i32, i32* %c, align 4
  %7781 = add i32 %7779, 452135736
  %7782 = sub i32 %7781, %7780
  %7783 = sub i32 %7782, 452135736
  %sub1554 = sub nsw i32 %7779, %7780
  store i32 %7783, i32* %s, align 4
  %7784 = load i32, i32* %s, align 4
  %call1555 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7784)
  store i32 -563751696, i32* %switchVar
  br label %loopEnd

if.end1556:                                       ; preds = %loopEntry
  %7785 = load i32, i32* %e, align 4
  %cmp1557 = icmp eq i32 %7785, 4
  %7786 = select i1 %cmp1557, i32 -754310239, i32 -57547955
  store i32 %7786, i32* %switchVar
  br label %loopEnd

if.then1558:                                      ; preds = %loopEntry
  %7787 = load i32, i32* %s, align 4
  %7788 = add i32 %7787, -892287001
  %7789 = add i32 %7788, 28
  %7790 = sub i32 %7789, -892287001
  %add1559 = add nsw i32 %7787, 28
  %7791 = add i32 %7790, -624539544
  %7792 = add i32 %7791, 31
  %7793 = sub i32 %7792, -624539544
  %add1560 = add nsw i32 %7790, 31
  %7794 = load i32, i32* %f, align 4
  %7795 = sub i32 0, %7794
  %7796 = sub i32 %7793, %7795
  %add1561 = add nsw i32 %7793, %7794
  %7797 = load i32, i32* %c, align 4
  %7798 = sub i32 0, %7797
  %7799 = add i32 %7796, %7798
  %sub1562 = sub nsw i32 %7796, %7797
  store i32 %7799, i32* %s, align 4
  %7800 = load i32, i32* %s, align 4
  %call1563 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7800)
  store i32 -57547955, i32* %switchVar
  br label %loopEnd

if.end1564:                                       ; preds = %loopEntry
  %7801 = load i32, i32* %e, align 4
  %cmp1565 = icmp eq i32 %7801, 5
  %7802 = select i1 %cmp1565, i32 -271037360, i32 -1046034477
  store i32 %7802, i32* %switchVar
  br label %loopEnd

if.then1566:                                      ; preds = %loopEntry
  %7803 = load i32, i32* %s, align 4
  %7804 = sub i32 0, %7803
  %7805 = sub i32 0, 28
  %7806 = add i32 %7804, %7805
  %7807 = sub i32 0, %7806
  %add1567 = add nsw i32 %7803, 28
  %7808 = sub i32 0, 31
  %7809 = sub i32 %7807, %7808
  %add1568 = add nsw i32 %7807, 31
  %7810 = sub i32 %7809, -155065371
  %7811 = add i32 %7810, 30
  %7812 = add i32 %7811, -155065371
  %add1569 = add nsw i32 %7809, 30
  %7813 = load i32, i32* %f, align 4
  %7814 = add i32 %7812, -1557264974
  %7815 = add i32 %7814, %7813
  %7816 = sub i32 %7815, -1557264974
  %add1570 = add nsw i32 %7812, %7813
  %7817 = load i32, i32* %c, align 4
  %7818 = sub i32 %7816, -1624350887
  %7819 = sub i32 %7818, %7817
  %7820 = add i32 %7819, -1624350887
  %sub1571 = sub nsw i32 %7816, %7817
  store i32 %7820, i32* %s, align 4
  %7821 = load i32, i32* %s, align 4
  %call1572 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7821)
  store i32 -1046034477, i32* %switchVar
  br label %loopEnd

if.end1573:                                       ; preds = %loopEntry
  %7822 = load i32, i32* %e, align 4
  %cmp1574 = icmp eq i32 %7822, 6
  %7823 = select i1 %cmp1574, i32 1145358166, i32 -1449290983
  store i32 %7823, i32* %switchVar
  br label %loopEnd

if.then1575:                                      ; preds = %loopEntry
  %7824 = load i32, i32* %s, align 4
  %7825 = sub i32 0, 28
  %7826 = sub i32 %7824, %7825
  %add1576 = add nsw i32 %7824, 28
  %7827 = sub i32 0, 31
  %7828 = sub i32 %7826, %7827
  %add1577 = add nsw i32 %7826, 31
  %7829 = add i32 %7828, 2064432709
  %7830 = add i32 %7829, 30
  %7831 = sub i32 %7830, 2064432709
  %add1578 = add nsw i32 %7828, 30
  %7832 = sub i32 %7831, -953117481
  %7833 = add i32 %7832, 31
  %7834 = add i32 %7833, -953117481
  %add1579 = add nsw i32 %7831, 31
  %7835 = load i32, i32* %f, align 4
  %7836 = add i32 %7834, -1392241282
  %7837 = add i32 %7836, %7835
  %7838 = sub i32 %7837, -1392241282
  %add1580 = add nsw i32 %7834, %7835
  %7839 = load i32, i32* %c, align 4
  %7840 = add i32 %7838, 1970189055
  %7841 = sub i32 %7840, %7839
  %7842 = sub i32 %7841, 1970189055
  %sub1581 = sub nsw i32 %7838, %7839
  store i32 %7842, i32* %s, align 4
  %7843 = load i32, i32* %s, align 4
  %call1582 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7843)
  store i32 -1449290983, i32* %switchVar
  br label %loopEnd

if.end1583:                                       ; preds = %loopEntry
  %7844 = load i32, i32* %e, align 4
  %cmp1584 = icmp eq i32 %7844, 7
  %7845 = select i1 %cmp1584, i32 -2003701935, i32 1410305280
  store i32 %7845, i32* %switchVar
  br label %loopEnd

if.then1585:                                      ; preds = %loopEntry
  %7846 = load i32, i32* %s, align 4
  %7847 = sub i32 0, %7846
  %7848 = sub i32 0, 28
  %7849 = add i32 %7847, %7848
  %7850 = sub i32 0, %7849
  %add1586 = add nsw i32 %7846, 28
  %7851 = sub i32 0, 31
  %7852 = sub i32 %7850, %7851
  %add1587 = add nsw i32 %7850, 31
  %7853 = sub i32 %7852, -1415363723
  %7854 = add i32 %7853, 30
  %7855 = add i32 %7854, -1415363723
  %add1588 = add nsw i32 %7852, 30
  %7856 = add i32 %7855, -61326983
  %7857 = add i32 %7856, 31
  %7858 = sub i32 %7857, -61326983
  %add1589 = add nsw i32 %7855, 31
  %7859 = add i32 %7858, 1795794686
  %7860 = add i32 %7859, 30
  %7861 = sub i32 %7860, 1795794686
  %add1590 = add nsw i32 %7858, 30
  %7862 = load i32, i32* %f, align 4
  %7863 = sub i32 0, %7861
  %7864 = sub i32 0, %7862
  %7865 = add i32 %7863, %7864
  %7866 = sub i32 0, %7865
  %add1591 = add nsw i32 %7861, %7862
  %7867 = load i32, i32* %c, align 4
  %7868 = add i32 %7866, 475068761
  %7869 = sub i32 %7868, %7867
  %7870 = sub i32 %7869, 475068761
  %sub1592 = sub nsw i32 %7866, %7867
  store i32 %7870, i32* %s, align 4
  %7871 = load i32, i32* %s, align 4
  %call1593 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7871)
  store i32 1410305280, i32* %switchVar
  br label %loopEnd

if.end1594:                                       ; preds = %loopEntry
  %7872 = load i32, i32* %e, align 4
  %cmp1595 = icmp eq i32 %7872, 8
  %7873 = select i1 %cmp1595, i32 1116376230, i32 -1303002025
  store i32 %7873, i32* %switchVar
  br label %loopEnd

if.then1596:                                      ; preds = %loopEntry
  %7874 = load i32, i32* %s, align 4
  %7875 = sub i32 0, %7874
  %7876 = sub i32 0, 28
  %7877 = add i32 %7875, %7876
  %7878 = sub i32 0, %7877
  %add1597 = add nsw i32 %7874, 28
  %7879 = sub i32 %7878, -574861364
  %7880 = add i32 %7879, 31
  %7881 = add i32 %7880, -574861364
  %add1598 = add nsw i32 %7878, 31
  %7882 = sub i32 %7881, -796347362
  %7883 = add i32 %7882, 30
  %7884 = add i32 %7883, -796347362
  %add1599 = add nsw i32 %7881, 30
  %7885 = add i32 %7884, -1570222536
  %7886 = add i32 %7885, 31
  %7887 = sub i32 %7886, -1570222536
  %add1600 = add nsw i32 %7884, 31
  %7888 = add i32 %7887, 2007847704
  %7889 = add i32 %7888, 30
  %7890 = sub i32 %7889, 2007847704
  %add1601 = add nsw i32 %7887, 30
  %7891 = sub i32 0, 31
  %7892 = sub i32 %7890, %7891
  %add1602 = add nsw i32 %7890, 31
  %7893 = load i32, i32* %f, align 4
  %7894 = sub i32 0, %7892
  %7895 = sub i32 0, %7893
  %7896 = add i32 %7894, %7895
  %7897 = sub i32 0, %7896
  %add1603 = add nsw i32 %7892, %7893
  %7898 = load i32, i32* %c, align 4
  %7899 = add i32 %7897, 1291119003
  %7900 = sub i32 %7899, %7898
  %7901 = sub i32 %7900, 1291119003
  %sub1604 = sub nsw i32 %7897, %7898
  store i32 %7901, i32* %s, align 4
  %7902 = load i32, i32* %s, align 4
  %call1605 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7902)
  store i32 -1303002025, i32* %switchVar
  br label %loopEnd

if.end1606:                                       ; preds = %loopEntry
  %7903 = load i32, i32* @x
  %7904 = load i32, i32* @y
  %7905 = sub i32 0, 1
  %7906 = add i32 %7903, %7905
  %7907 = sub i32 %7903, 1
  %7908 = mul i32 %7903, %7906
  %7909 = urem i32 %7908, 2
  %7910 = icmp eq i32 %7909, 0
  %7911 = icmp slt i32 %7904, 10
  %7912 = and i1 %7910, %7911
  %7913 = xor i1 %7910, %7911
  %7914 = or i1 %7912, %7913
  %7915 = or i1 %7910, %7911
  %7916 = select i1 %7914, i32 1482865559, i32 -83411089
  store i32 %7916, i32* %switchVar
  br label %loopEnd

originalBB4946:                                   ; preds = %loopEntry
  %7917 = load i32, i32* %e, align 4
  %cmp1607 = icmp eq i32 %7917, 9
  store i1 %cmp1607, i1* %cmp1607.reg2mem
  %7918 = load i32, i32* @x
  %7919 = load i32, i32* @y
  %7920 = add i32 %7918, 910579877
  %7921 = sub i32 %7920, 1
  %7922 = sub i32 %7921, 910579877
  %7923 = sub i32 %7918, 1
  %7924 = mul i32 %7918, %7922
  %7925 = urem i32 %7924, 2
  %7926 = icmp eq i32 %7925, 0
  %7927 = icmp slt i32 %7919, 10
  %7928 = xor i1 %7926, true
  %7929 = xor i1 %7927, true
  %7930 = xor i1 true, true
  %7931 = and i1 %7928, true
  %7932 = and i1 %7926, %7930
  %7933 = and i1 %7929, true
  %7934 = and i1 %7927, %7930
  %7935 = or i1 %7931, %7932
  %7936 = or i1 %7933, %7934
  %7937 = xor i1 %7935, %7936
  %7938 = or i1 %7928, %7929
  %7939 = xor i1 %7938, true
  %7940 = or i1 true, %7930
  %7941 = and i1 %7939, %7940
  %7942 = or i1 %7937, %7941
  %7943 = or i1 %7926, %7927
  %7944 = select i1 %7942, i32 -509140694, i32 -83411089
  store i32 %7944, i32* %switchVar
  br label %loopEnd

originalBBpart24948:                              ; preds = %loopEntry
  %cmp1607.reload = load volatile i1, i1* %cmp1607.reg2mem
  %7945 = select i1 %cmp1607.reload, i32 -1486768833, i32 -1945158198
  store i32 %7945, i32* %switchVar
  br label %loopEnd

if.then1608:                                      ; preds = %loopEntry
  %7946 = load i32, i32* %s, align 4
  %7947 = sub i32 0, 28
  %7948 = sub i32 %7946, %7947
  %add1609 = add nsw i32 %7946, 28
  %7949 = sub i32 %7948, 539918502
  %7950 = add i32 %7949, 31
  %7951 = add i32 %7950, 539918502
  %add1610 = add nsw i32 %7948, 31
  %7952 = sub i32 %7951, -1986355571
  %7953 = add i32 %7952, 30
  %7954 = add i32 %7953, -1986355571
  %add1611 = add nsw i32 %7951, 30
  %7955 = sub i32 %7954, 1010687909
  %7956 = add i32 %7955, 31
  %7957 = add i32 %7956, 1010687909
  %add1612 = add nsw i32 %7954, 31
  %7958 = sub i32 0, %7957
  %7959 = sub i32 0, 30
  %7960 = add i32 %7958, %7959
  %7961 = sub i32 0, %7960
  %add1613 = add nsw i32 %7957, 30
  %7962 = add i32 %7961, -1495327324
  %7963 = add i32 %7962, 31
  %7964 = sub i32 %7963, -1495327324
  %add1614 = add nsw i32 %7961, 31
  %7965 = add i32 %7964, 231558921
  %7966 = add i32 %7965, 31
  %7967 = sub i32 %7966, 231558921
  %add1615 = add nsw i32 %7964, 31
  %7968 = load i32, i32* %f, align 4
  %7969 = add i32 %7967, 2091094599
  %7970 = add i32 %7969, %7968
  %7971 = sub i32 %7970, 2091094599
  %add1616 = add nsw i32 %7967, %7968
  %7972 = load i32, i32* %c, align 4
  %7973 = sub i32 %7971, 506745789
  %7974 = sub i32 %7973, %7972
  %7975 = add i32 %7974, 506745789
  %sub1617 = sub nsw i32 %7971, %7972
  store i32 %7975, i32* %s, align 4
  %7976 = load i32, i32* %s, align 4
  %call1618 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %7976)
  store i32 -1945158198, i32* %switchVar
  br label %loopEnd

if.end1619:                                       ; preds = %loopEntry
  %7977 = load i32, i32* %e, align 4
  %cmp1620 = icmp eq i32 %7977, 10
  %7978 = select i1 %cmp1620, i32 1040504170, i32 -981671880
  store i32 %7978, i32* %switchVar
  br label %loopEnd

if.then1621:                                      ; preds = %loopEntry
  %7979 = load i32, i32* %s, align 4
  %7980 = sub i32 0, 28
  %7981 = sub i32 %7979, %7980
  %add1622 = add nsw i32 %7979, 28
  %7982 = sub i32 %7981, 328640202
  %7983 = add i32 %7982, 31
  %7984 = add i32 %7983, 328640202
  %add1623 = add nsw i32 %7981, 31
  %7985 = sub i32 0, %7984
  %7986 = sub i32 0, 30
  %7987 = add i32 %7985, %7986
  %7988 = sub i32 0, %7987
  %add1624 = add nsw i32 %7984, 30
  %7989 = sub i32 0, %7988
  %7990 = sub i32 0, 31
  %7991 = add i32 %7989, %7990
  %7992 = sub i32 0, %7991
  %add1625 = add nsw i32 %7988, 31
  %7993 = sub i32 0, 30
  %7994 = sub i32 %7992, %7993
  %add1626 = add nsw i32 %7992, 30
  %7995 = sub i32 %7994, -1516985701
  %7996 = add i32 %7995, 31
  %7997 = add i32 %7996, -1516985701
  %add1627 = add nsw i32 %7994, 31
  %7998 = sub i32 0, %7997
  %7999 = sub i32 0, 31
  %8000 = add i32 %7998, %7999
  %8001 = sub i32 0, %8000
  %add1628 = add nsw i32 %7997, 31
  %8002 = add i32 %8001, 747063026
  %8003 = add i32 %8002, 30
  %8004 = sub i32 %8003, 747063026
  %add1629 = add nsw i32 %8001, 30
  %8005 = load i32, i32* %f, align 4
  %8006 = sub i32 0, %8004
  %8007 = sub i32 0, %8005
  %8008 = add i32 %8006, %8007
  %8009 = sub i32 0, %8008
  %add1630 = add nsw i32 %8004, %8005
  %8010 = load i32, i32* %c, align 4
  %8011 = sub i32 0, %8010
  %8012 = add i32 %8009, %8011
  %sub1631 = sub nsw i32 %8009, %8010
  store i32 %8012, i32* %s, align 4
  %8013 = load i32, i32* %s, align 4
  %call1632 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8013)
  store i32 -981671880, i32* %switchVar
  br label %loopEnd

if.end1633:                                       ; preds = %loopEntry
  %8014 = load i32, i32* %e, align 4
  %cmp1634 = icmp eq i32 %8014, 11
  %8015 = select i1 %cmp1634, i32 -138684447, i32 -678986069
  store i32 %8015, i32* %switchVar
  br label %loopEnd

if.then1635:                                      ; preds = %loopEntry
  %8016 = load i32, i32* @x
  %8017 = load i32, i32* @y
  %8018 = add i32 %8016, 1014545266
  %8019 = sub i32 %8018, 1
  %8020 = sub i32 %8019, 1014545266
  %8021 = sub i32 %8016, 1
  %8022 = mul i32 %8016, %8020
  %8023 = urem i32 %8022, 2
  %8024 = icmp eq i32 %8023, 0
  %8025 = icmp slt i32 %8017, 10
  %8026 = xor i1 %8024, true
  %8027 = xor i1 %8025, true
  %8028 = xor i1 false, true
  %8029 = and i1 %8026, false
  %8030 = and i1 %8024, %8028
  %8031 = and i1 %8027, false
  %8032 = and i1 %8025, %8028
  %8033 = or i1 %8029, %8030
  %8034 = or i1 %8031, %8032
  %8035 = xor i1 %8033, %8034
  %8036 = or i1 %8026, %8027
  %8037 = xor i1 %8036, true
  %8038 = or i1 false, %8028
  %8039 = and i1 %8037, %8038
  %8040 = or i1 %8035, %8039
  %8041 = or i1 %8024, %8025
  %8042 = select i1 %8040, i32 -779254767, i32 52245038
  store i32 %8042, i32* %switchVar
  br label %loopEnd

originalBB4950:                                   ; preds = %loopEntry
  %8043 = load i32, i32* %s, align 4
  %8044 = sub i32 %8043, 2036754827
  %8045 = add i32 %8044, 28
  %8046 = add i32 %8045, 2036754827
  %add1636 = add nsw i32 %8043, 28
  %8047 = sub i32 0, %8046
  %8048 = sub i32 0, 31
  %8049 = add i32 %8047, %8048
  %8050 = sub i32 0, %8049
  %add1637 = add nsw i32 %8046, 31
  %8051 = sub i32 0, %8050
  %8052 = sub i32 0, 30
  %8053 = add i32 %8051, %8052
  %8054 = sub i32 0, %8053
  %add1638 = add nsw i32 %8050, 30
  %8055 = add i32 %8054, -73082144
  %8056 = add i32 %8055, 31
  %8057 = sub i32 %8056, -73082144
  %add1639 = add nsw i32 %8054, 31
  %8058 = sub i32 0, %8057
  %8059 = sub i32 0, 30
  %8060 = add i32 %8058, %8059
  %8061 = sub i32 0, %8060
  %add1640 = add nsw i32 %8057, 30
  %8062 = sub i32 0, %8061
  %8063 = sub i32 0, 31
  %8064 = add i32 %8062, %8063
  %8065 = sub i32 0, %8064
  %add1641 = add nsw i32 %8061, 31
  %8066 = sub i32 %8065, -2092153610
  %8067 = add i32 %8066, 31
  %8068 = add i32 %8067, -2092153610
  %add1642 = add nsw i32 %8065, 31
  %8069 = sub i32 %8068, 1276106754
  %8070 = add i32 %8069, 30
  %8071 = add i32 %8070, 1276106754
  %add1643 = add nsw i32 %8068, 30
  %8072 = add i32 %8071, 565945105
  %8073 = add i32 %8072, 31
  %8074 = sub i32 %8073, 565945105
  %add1644 = add nsw i32 %8071, 31
  %8075 = load i32, i32* %f, align 4
  %8076 = sub i32 0, %8075
  %8077 = sub i32 %8074, %8076
  %add1645 = add nsw i32 %8074, %8075
  %8078 = load i32, i32* %c, align 4
  %8079 = add i32 %8077, -1451051511
  %8080 = sub i32 %8079, %8078
  %8081 = sub i32 %8080, -1451051511
  %sub1646 = sub nsw i32 %8077, %8078
  store i32 %8081, i32* %s, align 4
  %8082 = load i32, i32* %s, align 4
  %call1647 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8082)
  %8083 = load i32, i32* @x
  %8084 = load i32, i32* @y
  %8085 = sub i32 %8083, -1710123120
  %8086 = sub i32 %8085, 1
  %8087 = add i32 %8086, -1710123120
  %8088 = sub i32 %8083, 1
  %8089 = mul i32 %8083, %8087
  %8090 = urem i32 %8089, 2
  %8091 = icmp eq i32 %8090, 0
  %8092 = icmp slt i32 %8084, 10
  %8093 = and i1 %8091, %8092
  %8094 = xor i1 %8091, %8092
  %8095 = or i1 %8093, %8094
  %8096 = or i1 %8091, %8092
  %8097 = select i1 %8095, i32 1310276695, i32 52245038
  store i32 %8097, i32* %switchVar
  br label %loopEnd

originalBBpart25014:                              ; preds = %loopEntry
  store i32 -678986069, i32* %switchVar
  br label %loopEnd

if.end1648:                                       ; preds = %loopEntry
  %8098 = load i32, i32* %e, align 4
  %cmp1649 = icmp eq i32 %8098, 12
  %8099 = select i1 %cmp1649, i32 -1408664534, i32 272048524
  store i32 %8099, i32* %switchVar
  br label %loopEnd

if.then1650:                                      ; preds = %loopEntry
  %8100 = load i32, i32* @x
  %8101 = load i32, i32* @y
  %8102 = add i32 %8100, 1905992289
  %8103 = sub i32 %8102, 1
  %8104 = sub i32 %8103, 1905992289
  %8105 = sub i32 %8100, 1
  %8106 = mul i32 %8100, %8104
  %8107 = urem i32 %8106, 2
  %8108 = icmp eq i32 %8107, 0
  %8109 = icmp slt i32 %8101, 10
  %8110 = xor i1 %8108, true
  %8111 = xor i1 %8109, true
  %8112 = xor i1 true, true
  %8113 = and i1 %8110, true
  %8114 = and i1 %8108, %8112
  %8115 = and i1 %8111, true
  %8116 = and i1 %8109, %8112
  %8117 = or i1 %8113, %8114
  %8118 = or i1 %8115, %8116
  %8119 = xor i1 %8117, %8118
  %8120 = or i1 %8110, %8111
  %8121 = xor i1 %8120, true
  %8122 = or i1 true, %8112
  %8123 = and i1 %8121, %8122
  %8124 = or i1 %8119, %8123
  %8125 = or i1 %8108, %8109
  %8126 = select i1 %8124, i32 1249300639, i32 1997273185
  store i32 %8126, i32* %switchVar
  br label %loopEnd

originalBB5016:                                   ; preds = %loopEntry
  %8127 = load i32, i32* %s, align 4
  %8128 = sub i32 0, %8127
  %8129 = sub i32 0, 28
  %8130 = add i32 %8128, %8129
  %8131 = sub i32 0, %8130
  %add1651 = add nsw i32 %8127, 28
  %8132 = add i32 %8131, 165362058
  %8133 = add i32 %8132, 31
  %8134 = sub i32 %8133, 165362058
  %add1652 = add nsw i32 %8131, 31
  %8135 = add i32 %8134, 735537609
  %8136 = add i32 %8135, 30
  %8137 = sub i32 %8136, 735537609
  %add1653 = add nsw i32 %8134, 30
  %8138 = sub i32 %8137, -851000419
  %8139 = add i32 %8138, 31
  %8140 = add i32 %8139, -851000419
  %add1654 = add nsw i32 %8137, 31
  %8141 = sub i32 0, %8140
  %8142 = sub i32 0, 30
  %8143 = add i32 %8141, %8142
  %8144 = sub i32 0, %8143
  %add1655 = add nsw i32 %8140, 30
  %8145 = sub i32 0, 31
  %8146 = sub i32 %8144, %8145
  %add1656 = add nsw i32 %8144, 31
  %8147 = sub i32 0, %8146
  %8148 = sub i32 0, 31
  %8149 = add i32 %8147, %8148
  %8150 = sub i32 0, %8149
  %add1657 = add nsw i32 %8146, 31
  %8151 = sub i32 %8150, 116133009
  %8152 = add i32 %8151, 30
  %8153 = add i32 %8152, 116133009
  %add1658 = add nsw i32 %8150, 30
  %8154 = sub i32 %8153, 412894590
  %8155 = add i32 %8154, 31
  %8156 = add i32 %8155, 412894590
  %add1659 = add nsw i32 %8153, 31
  %8157 = sub i32 0, %8156
  %8158 = sub i32 0, 30
  %8159 = add i32 %8157, %8158
  %8160 = sub i32 0, %8159
  %add1660 = add nsw i32 %8156, 30
  %8161 = load i32, i32* %f, align 4
  %8162 = sub i32 0, %8161
  %8163 = sub i32 %8160, %8162
  %add1661 = add nsw i32 %8160, %8161
  %8164 = load i32, i32* %c, align 4
  %8165 = sub i32 0, %8164
  %8166 = add i32 %8163, %8165
  %sub1662 = sub nsw i32 %8163, %8164
  store i32 %8166, i32* %s, align 4
  %8167 = load i32, i32* %s, align 4
  %call1663 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8167)
  %8168 = load i32, i32* @x
  %8169 = load i32, i32* @y
  %8170 = add i32 %8168, -1846738409
  %8171 = sub i32 %8170, 1
  %8172 = sub i32 %8171, -1846738409
  %8173 = sub i32 %8168, 1
  %8174 = mul i32 %8168, %8172
  %8175 = urem i32 %8174, 2
  %8176 = icmp eq i32 %8175, 0
  %8177 = icmp slt i32 %8169, 10
  %8178 = and i1 %8176, %8177
  %8179 = xor i1 %8176, %8177
  %8180 = or i1 %8178, %8179
  %8181 = or i1 %8176, %8177
  %8182 = select i1 %8180, i32 -1120628285, i32 1997273185
  store i32 %8182, i32* %switchVar
  br label %loopEnd

originalBBpart25110:                              ; preds = %loopEntry
  store i32 272048524, i32* %switchVar
  br label %loopEnd

if.end1664:                                       ; preds = %loopEntry
  store i32 -876928443, i32* %switchVar
  br label %loopEnd

NewDefault6863:                                   ; preds = %loopEntry
  store i32 -876928443, i32* %switchVar
  br label %loopEnd

sw.epilog1665:                                    ; preds = %loopEntry
  %8183 = load i32, i32* @x
  %8184 = load i32, i32* @y
  %8185 = sub i32 0, 1
  %8186 = add i32 %8183, %8185
  %8187 = sub i32 %8183, 1
  %8188 = mul i32 %8183, %8186
  %8189 = urem i32 %8188, 2
  %8190 = icmp eq i32 %8189, 0
  %8191 = icmp slt i32 %8184, 10
  %8192 = xor i1 %8190, true
  %8193 = xor i1 %8191, true
  %8194 = xor i1 false, true
  %8195 = and i1 %8192, false
  %8196 = and i1 %8190, %8194
  %8197 = and i1 %8193, false
  %8198 = and i1 %8191, %8194
  %8199 = or i1 %8195, %8196
  %8200 = or i1 %8197, %8198
  %8201 = xor i1 %8199, %8200
  %8202 = or i1 %8192, %8193
  %8203 = xor i1 %8202, true
  %8204 = or i1 false, %8194
  %8205 = and i1 %8203, %8204
  %8206 = or i1 %8201, %8205
  %8207 = or i1 %8190, %8191
  %8208 = select i1 %8206, i32 -993345526, i32 298926136
  store i32 %8208, i32* %switchVar
  br label %loopEnd

originalBB5112:                                   ; preds = %loopEntry
  %8209 = load i32, i32* @x
  %8210 = load i32, i32* @y
  %8211 = sub i32 %8209, -720153326
  %8212 = sub i32 %8211, 1
  %8213 = add i32 %8212, -720153326
  %8214 = sub i32 %8209, 1
  %8215 = mul i32 %8209, %8213
  %8216 = urem i32 %8215, 2
  %8217 = icmp eq i32 %8216, 0
  %8218 = icmp slt i32 %8210, 10
  %8219 = xor i1 %8217, true
  %8220 = xor i1 %8218, true
  %8221 = xor i1 true, true
  %8222 = and i1 %8219, true
  %8223 = and i1 %8217, %8221
  %8224 = and i1 %8220, true
  %8225 = and i1 %8218, %8221
  %8226 = or i1 %8222, %8223
  %8227 = or i1 %8224, %8225
  %8228 = xor i1 %8226, %8227
  %8229 = or i1 %8219, %8220
  %8230 = xor i1 %8229, true
  %8231 = or i1 true, %8221
  %8232 = and i1 %8230, %8231
  %8233 = or i1 %8228, %8232
  %8234 = or i1 %8217, %8218
  %8235 = select i1 %8233, i32 -1494107497, i32 298926136
  store i32 %8235, i32* %switchVar
  br label %loopEnd

originalBBpart25114:                              ; preds = %loopEntry
  store i32 444623474, i32* %switchVar
  br label %loopEnd

if.end1666:                                       ; preds = %loopEntry
  store i32 -688521829, i32* %switchVar
  br label %loopEnd

if.end1667:                                       ; preds = %loopEntry
  %8236 = load i32, i32* %b, align 4
  store i32 %8236, i32* %.reg2mem6914
  store i32 -2069827530, i32* %switchVar
  br label %loopEnd

NodeBlock6891:                                    ; preds = %loopEntry
  %.reload6925 = load volatile i32, i32* %.reg2mem6914
  %Pivot6892 = icmp slt i32 %.reload6925, 8
  %8237 = select i1 %Pivot6892, i32 -1161454552, i32 1324787062
  store i32 %8237, i32* %switchVar
  br label %loopEnd

NodeBlock6889:                                    ; preds = %loopEntry
  %.reload6919 = load volatile i32, i32* %.reg2mem6914
  %Pivot6890 = icmp slt i32 %.reload6919, 10
  %8238 = select i1 %Pivot6890, i32 2086112542, i32 -1931138645
  store i32 %8238, i32* %switchVar
  br label %loopEnd

NodeBlock6887:                                    ; preds = %loopEntry
  %.reload6917 = load volatile i32, i32* %.reg2mem6914
  %Pivot6888 = icmp slt i32 %.reload6917, 11
  %8239 = select i1 %Pivot6888, i32 18473160, i32 1535109594
  store i32 %8239, i32* %switchVar
  br label %loopEnd

NodeBlock6885:                                    ; preds = %loopEntry
  %.reload6916 = load volatile i32, i32* %.reg2mem6914
  %Pivot6886 = icmp slt i32 %.reload6916, 12
  %8240 = select i1 %Pivot6886, i32 1639123074, i32 1666475180
  store i32 %8240, i32* %switchVar
  br label %loopEnd

LeafBlock6883:                                    ; preds = %loopEntry
  %.reload6915 = load volatile i32, i32* %.reg2mem6914
  %SwitchLeaf6884 = icmp eq i32 %.reload6915, 12
  %8241 = select i1 %SwitchLeaf6884, i32 -315141309, i32 -381034073
  store i32 %8241, i32* %switchVar
  br label %loopEnd

NodeBlock6881:                                    ; preds = %loopEntry
  %.reload6918 = load volatile i32, i32* %.reg2mem6914
  %Pivot6882 = icmp slt i32 %.reload6918, 9
  %8242 = select i1 %Pivot6882, i32 -1901243995, i32 905976988
  store i32 %8242, i32* %switchVar
  br label %loopEnd

NodeBlock6879:                                    ; preds = %loopEntry
  %.reload6924 = load volatile i32, i32* %.reg2mem6914
  %Pivot6880 = icmp slt i32 %.reload6924, 5
  %8243 = select i1 %Pivot6880, i32 -989639032, i32 -1591171013
  store i32 %8243, i32* %switchVar
  br label %loopEnd

NodeBlock6877:                                    ; preds = %loopEntry
  %.reload6921 = load volatile i32, i32* %.reg2mem6914
  %Pivot6878 = icmp slt i32 %.reload6921, 6
  %8244 = select i1 %Pivot6878, i32 156029240, i32 1571630213
  store i32 %8244, i32* %switchVar
  br label %loopEnd

NodeBlock6875:                                    ; preds = %loopEntry
  %.reload6920 = load volatile i32, i32* %.reg2mem6914
  %Pivot6876 = icmp slt i32 %.reload6920, 7
  %8245 = select i1 %Pivot6876, i32 -1435247104, i32 391815493
  store i32 %8245, i32* %switchVar
  br label %loopEnd

NodeBlock6873:                                    ; preds = %loopEntry
  %.reload6923 = load volatile i32, i32* %.reg2mem6914
  %Pivot6874 = icmp slt i32 %.reload6923, 4
  %8246 = select i1 %Pivot6874, i32 -1190838530, i32 -1462078161
  store i32 %8246, i32* %switchVar
  br label %loopEnd

LeafBlock6871:                                    ; preds = %loopEntry
  %.reload6922 = load volatile i32, i32* %.reg2mem6914
  %SwitchLeaf6872 = icmp eq i32 %.reload6922, 3
  %8247 = select i1 %SwitchLeaf6872, i32 -728596079, i32 -381034073
  store i32 %8247, i32* %switchVar
  br label %loopEnd

sw.bb1668:                                        ; preds = %loopEntry
  %8248 = load i32, i32* @x
  %8249 = load i32, i32* @y
  %8250 = add i32 %8248, -592345189
  %8251 = sub i32 %8250, 1
  %8252 = sub i32 %8251, -592345189
  %8253 = sub i32 %8248, 1
  %8254 = mul i32 %8248, %8252
  %8255 = urem i32 %8254, 2
  %8256 = icmp eq i32 %8255, 0
  %8257 = icmp slt i32 %8249, 10
  %8258 = and i1 %8256, %8257
  %8259 = xor i1 %8256, %8257
  %8260 = or i1 %8258, %8259
  %8261 = or i1 %8256, %8257
  %8262 = select i1 %8260, i32 -1446182639, i32 108750737
  store i32 %8262, i32* %switchVar
  br label %loopEnd

originalBB5116:                                   ; preds = %loopEntry
  %8263 = load i32, i32* %e, align 4
  %cmp1669 = icmp eq i32 %8263, 1
  store i1 %cmp1669, i1* %cmp1669.reg2mem
  %8264 = load i32, i32* @x
  %8265 = load i32, i32* @y
  %8266 = add i32 %8264, 1551677213
  %8267 = sub i32 %8266, 1
  %8268 = sub i32 %8267, 1551677213
  %8269 = sub i32 %8264, 1
  %8270 = mul i32 %8264, %8268
  %8271 = urem i32 %8270, 2
  %8272 = icmp eq i32 %8271, 0
  %8273 = icmp slt i32 %8265, 10
  %8274 = xor i1 %8272, true
  %8275 = xor i1 %8273, true
  %8276 = xor i1 false, true
  %8277 = and i1 %8274, false
  %8278 = and i1 %8272, %8276
  %8279 = and i1 %8275, false
  %8280 = and i1 %8273, %8276
  %8281 = or i1 %8277, %8278
  %8282 = or i1 %8279, %8280
  %8283 = xor i1 %8281, %8282
  %8284 = or i1 %8274, %8275
  %8285 = xor i1 %8284, true
  %8286 = or i1 false, %8276
  %8287 = and i1 %8285, %8286
  %8288 = or i1 %8283, %8287
  %8289 = or i1 %8272, %8273
  %8290 = select i1 %8288, i32 2122188930, i32 108750737
  store i32 %8290, i32* %switchVar
  br label %loopEnd

originalBBpart25118:                              ; preds = %loopEntry
  %cmp1669.reload = load volatile i1, i1* %cmp1669.reg2mem
  %8291 = select i1 %cmp1669.reload, i32 1729288895, i32 -1588963597
  store i32 %8291, i32* %switchVar
  br label %loopEnd

if.then1670:                                      ; preds = %loopEntry
  %8292 = load i32, i32* @x
  %8293 = load i32, i32* @y
  %8294 = sub i32 0, 1
  %8295 = add i32 %8292, %8294
  %8296 = sub i32 %8292, 1
  %8297 = mul i32 %8292, %8295
  %8298 = urem i32 %8297, 2
  %8299 = icmp eq i32 %8298, 0
  %8300 = icmp slt i32 %8293, 10
  %8301 = xor i1 %8299, true
  %8302 = xor i1 %8300, true
  %8303 = xor i1 true, true
  %8304 = and i1 %8301, true
  %8305 = and i1 %8299, %8303
  %8306 = and i1 %8302, true
  %8307 = and i1 %8300, %8303
  %8308 = or i1 %8304, %8305
  %8309 = or i1 %8306, %8307
  %8310 = xor i1 %8308, %8309
  %8311 = or i1 %8301, %8302
  %8312 = xor i1 %8311, true
  %8313 = or i1 true, %8303
  %8314 = and i1 %8312, %8313
  %8315 = or i1 %8310, %8314
  %8316 = or i1 %8299, %8300
  %8317 = select i1 %8315, i32 316428276, i32 861322175
  store i32 %8317, i32* %switchVar
  br label %loopEnd

originalBB5120:                                   ; preds = %loopEntry
  %8318 = load i32, i32* %s, align 4
  %8319 = sub i32 %8318, -1597636004
  %8320 = sub i32 %8319, 28
  %8321 = add i32 %8320, -1597636004
  %sub1671 = sub nsw i32 %8318, 28
  %8322 = add i32 %8321, 624727129
  %8323 = sub i32 %8322, 31
  %8324 = sub i32 %8323, 624727129
  %sub1672 = sub nsw i32 %8321, 31
  %8325 = load i32, i32* %f, align 4
  %8326 = sub i32 0, %8325
  %8327 = sub i32 %8324, %8326
  %add1673 = add nsw i32 %8324, %8325
  %8328 = load i32, i32* %c, align 4
  %8329 = sub i32 0, %8328
  %8330 = add i32 %8327, %8329
  %sub1674 = sub nsw i32 %8327, %8328
  store i32 %8330, i32* %s, align 4
  %8331 = load i32, i32* %s, align 4
  %call1675 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8331)
  %8332 = load i32, i32* @x
  %8333 = load i32, i32* @y
  %8334 = sub i32 0, 1
  %8335 = add i32 %8332, %8334
  %8336 = sub i32 %8332, 1
  %8337 = mul i32 %8332, %8335
  %8338 = urem i32 %8337, 2
  %8339 = icmp eq i32 %8338, 0
  %8340 = icmp slt i32 %8333, 10
  %8341 = and i1 %8339, %8340
  %8342 = xor i1 %8339, %8340
  %8343 = or i1 %8341, %8342
  %8344 = or i1 %8339, %8340
  %8345 = select i1 %8343, i32 -531897450, i32 861322175
  store i32 %8345, i32* %switchVar
  br label %loopEnd

originalBBpart25136:                              ; preds = %loopEntry
  store i32 -1588963597, i32* %switchVar
  br label %loopEnd

if.end1676:                                       ; preds = %loopEntry
  %8346 = load i32, i32* %e, align 4
  %cmp1677 = icmp eq i32 %8346, 2
  %8347 = select i1 %cmp1677, i32 1706609643, i32 946862043
  store i32 %8347, i32* %switchVar
  br label %loopEnd

if.then1678:                                      ; preds = %loopEntry
  %8348 = load i32, i32* %s, align 4
  %8349 = sub i32 %8348, -1592949522
  %8350 = sub i32 %8349, 28
  %8351 = add i32 %8350, -1592949522
  %sub1679 = sub nsw i32 %8348, 28
  %8352 = load i32, i32* %f, align 4
  %8353 = sub i32 0, %8352
  %8354 = sub i32 %8351, %8353
  %add1680 = add nsw i32 %8351, %8352
  %8355 = load i32, i32* %c, align 4
  %8356 = add i32 %8354, -863964642
  %8357 = sub i32 %8356, %8355
  %8358 = sub i32 %8357, -863964642
  %sub1681 = sub nsw i32 %8354, %8355
  store i32 %8358, i32* %s, align 4
  %8359 = load i32, i32* %s, align 4
  %call1682 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8359)
  store i32 946862043, i32* %switchVar
  br label %loopEnd

if.end1683:                                       ; preds = %loopEntry
  %8360 = load i32, i32* %e, align 4
  %cmp1684 = icmp eq i32 %8360, 4
  %8361 = select i1 %cmp1684, i32 546000699, i32 -98947147
  store i32 %8361, i32* %switchVar
  br label %loopEnd

if.then1685:                                      ; preds = %loopEntry
  %8362 = load i32, i32* @x
  %8363 = load i32, i32* @y
  %8364 = sub i32 %8362, -286264651
  %8365 = sub i32 %8364, 1
  %8366 = add i32 %8365, -286264651
  %8367 = sub i32 %8362, 1
  %8368 = mul i32 %8362, %8366
  %8369 = urem i32 %8368, 2
  %8370 = icmp eq i32 %8369, 0
  %8371 = icmp slt i32 %8363, 10
  %8372 = xor i1 %8370, true
  %8373 = xor i1 %8371, true
  %8374 = xor i1 false, true
  %8375 = and i1 %8372, false
  %8376 = and i1 %8370, %8374
  %8377 = and i1 %8373, false
  %8378 = and i1 %8371, %8374
  %8379 = or i1 %8375, %8376
  %8380 = or i1 %8377, %8378
  %8381 = xor i1 %8379, %8380
  %8382 = or i1 %8372, %8373
  %8383 = xor i1 %8382, true
  %8384 = or i1 false, %8374
  %8385 = and i1 %8383, %8384
  %8386 = or i1 %8381, %8385
  %8387 = or i1 %8370, %8371
  %8388 = select i1 %8386, i32 2031738390, i32 1361048970
  store i32 %8388, i32* %switchVar
  br label %loopEnd

originalBB5138:                                   ; preds = %loopEntry
  %8389 = load i32, i32* %s, align 4
  %8390 = add i32 %8389, -1696810069
  %8391 = add i32 %8390, 31
  %8392 = sub i32 %8391, -1696810069
  %add1686 = add nsw i32 %8389, 31
  %8393 = load i32, i32* %f, align 4
  %8394 = sub i32 %8392, 1511936237
  %8395 = add i32 %8394, %8393
  %8396 = add i32 %8395, 1511936237
  %add1687 = add nsw i32 %8392, %8393
  %8397 = load i32, i32* %c, align 4
  %8398 = sub i32 %8396, -183754909
  %8399 = sub i32 %8398, %8397
  %8400 = add i32 %8399, -183754909
  %sub1688 = sub nsw i32 %8396, %8397
  store i32 %8400, i32* %s, align 4
  %8401 = load i32, i32* %s, align 4
  %call1689 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8401)
  %8402 = load i32, i32* @x
  %8403 = load i32, i32* @y
  %8404 = add i32 %8402, -1749550985
  %8405 = sub i32 %8404, 1
  %8406 = sub i32 %8405, -1749550985
  %8407 = sub i32 %8402, 1
  %8408 = mul i32 %8402, %8406
  %8409 = urem i32 %8408, 2
  %8410 = icmp eq i32 %8409, 0
  %8411 = icmp slt i32 %8403, 10
  %8412 = xor i1 %8410, true
  %8413 = xor i1 %8411, true
  %8414 = xor i1 true, true
  %8415 = and i1 %8412, true
  %8416 = and i1 %8410, %8414
  %8417 = and i1 %8413, true
  %8418 = and i1 %8411, %8414
  %8419 = or i1 %8415, %8416
  %8420 = or i1 %8417, %8418
  %8421 = xor i1 %8419, %8420
  %8422 = or i1 %8412, %8413
  %8423 = xor i1 %8422, true
  %8424 = or i1 true, %8414
  %8425 = and i1 %8423, %8424
  %8426 = or i1 %8421, %8425
  %8427 = or i1 %8410, %8411
  %8428 = select i1 %8426, i32 1226684220, i32 1361048970
  store i32 %8428, i32* %switchVar
  br label %loopEnd

originalBBpart25167:                              ; preds = %loopEntry
  store i32 -98947147, i32* %switchVar
  br label %loopEnd

if.end1690:                                       ; preds = %loopEntry
  %8429 = load i32, i32* @x
  %8430 = load i32, i32* @y
  %8431 = sub i32 0, 1
  %8432 = add i32 %8429, %8431
  %8433 = sub i32 %8429, 1
  %8434 = mul i32 %8429, %8432
  %8435 = urem i32 %8434, 2
  %8436 = icmp eq i32 %8435, 0
  %8437 = icmp slt i32 %8430, 10
  %8438 = and i1 %8436, %8437
  %8439 = xor i1 %8436, %8437
  %8440 = or i1 %8438, %8439
  %8441 = or i1 %8436, %8437
  %8442 = select i1 %8440, i32 1345232318, i32 -1426066150
  store i32 %8442, i32* %switchVar
  br label %loopEnd

originalBB5169:                                   ; preds = %loopEntry
  %8443 = load i32, i32* %e, align 4
  %cmp1691 = icmp eq i32 %8443, 5
  store i1 %cmp1691, i1* %cmp1691.reg2mem
  %8444 = load i32, i32* @x
  %8445 = load i32, i32* @y
  %8446 = add i32 %8444, -475049398
  %8447 = sub i32 %8446, 1
  %8448 = sub i32 %8447, -475049398
  %8449 = sub i32 %8444, 1
  %8450 = mul i32 %8444, %8448
  %8451 = urem i32 %8450, 2
  %8452 = icmp eq i32 %8451, 0
  %8453 = icmp slt i32 %8445, 10
  %8454 = xor i1 %8452, true
  %8455 = xor i1 %8453, true
  %8456 = xor i1 false, true
  %8457 = and i1 %8454, false
  %8458 = and i1 %8452, %8456
  %8459 = and i1 %8455, false
  %8460 = and i1 %8453, %8456
  %8461 = or i1 %8457, %8458
  %8462 = or i1 %8459, %8460
  %8463 = xor i1 %8461, %8462
  %8464 = or i1 %8454, %8455
  %8465 = xor i1 %8464, true
  %8466 = or i1 false, %8456
  %8467 = and i1 %8465, %8466
  %8468 = or i1 %8463, %8467
  %8469 = or i1 %8452, %8453
  %8470 = select i1 %8468, i32 853275113, i32 -1426066150
  store i32 %8470, i32* %switchVar
  br label %loopEnd

originalBBpart25171:                              ; preds = %loopEntry
  %cmp1691.reload = load volatile i1, i1* %cmp1691.reg2mem
  %8471 = select i1 %cmp1691.reload, i32 -1601012499, i32 -1636721687
  store i32 %8471, i32* %switchVar
  br label %loopEnd

if.then1692:                                      ; preds = %loopEntry
  %8472 = load i32, i32* @x
  %8473 = load i32, i32* @y
  %8474 = sub i32 %8472, -233920333
  %8475 = sub i32 %8474, 1
  %8476 = add i32 %8475, -233920333
  %8477 = sub i32 %8472, 1
  %8478 = mul i32 %8472, %8476
  %8479 = urem i32 %8478, 2
  %8480 = icmp eq i32 %8479, 0
  %8481 = icmp slt i32 %8473, 10
  %8482 = and i1 %8480, %8481
  %8483 = xor i1 %8480, %8481
  %8484 = or i1 %8482, %8483
  %8485 = or i1 %8480, %8481
  %8486 = select i1 %8484, i32 -1154659405, i32 -272096250
  store i32 %8486, i32* %switchVar
  br label %loopEnd

originalBB5173:                                   ; preds = %loopEntry
  %8487 = load i32, i32* %s, align 4
  %8488 = sub i32 0, 31
  %8489 = sub i32 %8487, %8488
  %add1693 = add nsw i32 %8487, 31
  %8490 = sub i32 0, %8489
  %8491 = sub i32 0, 30
  %8492 = add i32 %8490, %8491
  %8493 = sub i32 0, %8492
  %add1694 = add nsw i32 %8489, 30
  %8494 = load i32, i32* %f, align 4
  %8495 = sub i32 0, %8493
  %8496 = sub i32 0, %8494
  %8497 = add i32 %8495, %8496
  %8498 = sub i32 0, %8497
  %add1695 = add nsw i32 %8493, %8494
  %8499 = load i32, i32* %c, align 4
  %8500 = sub i32 %8498, -573328602
  %8501 = sub i32 %8500, %8499
  %8502 = add i32 %8501, -573328602
  %sub1696 = sub nsw i32 %8498, %8499
  store i32 %8502, i32* %s, align 4
  %8503 = load i32, i32* %s, align 4
  %call1697 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8503)
  %8504 = load i32, i32* @x
  %8505 = load i32, i32* @y
  %8506 = add i32 %8504, 66649890
  %8507 = sub i32 %8506, 1
  %8508 = sub i32 %8507, 66649890
  %8509 = sub i32 %8504, 1
  %8510 = mul i32 %8504, %8508
  %8511 = urem i32 %8510, 2
  %8512 = icmp eq i32 %8511, 0
  %8513 = icmp slt i32 %8505, 10
  %8514 = and i1 %8512, %8513
  %8515 = xor i1 %8512, %8513
  %8516 = or i1 %8514, %8515
  %8517 = or i1 %8512, %8513
  %8518 = select i1 %8516, i32 1983397786, i32 -272096250
  store i32 %8518, i32* %switchVar
  br label %loopEnd

originalBBpart25199:                              ; preds = %loopEntry
  store i32 -1636721687, i32* %switchVar
  br label %loopEnd

if.end1698:                                       ; preds = %loopEntry
  %8519 = load i32, i32* @x
  %8520 = load i32, i32* @y
  %8521 = sub i32 %8519, -1513468432
  %8522 = sub i32 %8521, 1
  %8523 = add i32 %8522, -1513468432
  %8524 = sub i32 %8519, 1
  %8525 = mul i32 %8519, %8523
  %8526 = urem i32 %8525, 2
  %8527 = icmp eq i32 %8526, 0
  %8528 = icmp slt i32 %8520, 10
  %8529 = xor i1 %8527, true
  %8530 = xor i1 %8528, true
  %8531 = xor i1 true, true
  %8532 = and i1 %8529, true
  %8533 = and i1 %8527, %8531
  %8534 = and i1 %8530, true
  %8535 = and i1 %8528, %8531
  %8536 = or i1 %8532, %8533
  %8537 = or i1 %8534, %8535
  %8538 = xor i1 %8536, %8537
  %8539 = or i1 %8529, %8530
  %8540 = xor i1 %8539, true
  %8541 = or i1 true, %8531
  %8542 = and i1 %8540, %8541
  %8543 = or i1 %8538, %8542
  %8544 = or i1 %8527, %8528
  %8545 = select i1 %8543, i32 166915825, i32 -1450532508
  store i32 %8545, i32* %switchVar
  br label %loopEnd

originalBB5201:                                   ; preds = %loopEntry
  %8546 = load i32, i32* %e, align 4
  %cmp1699 = icmp eq i32 %8546, 6
  store i1 %cmp1699, i1* %cmp1699.reg2mem
  %8547 = load i32, i32* @x
  %8548 = load i32, i32* @y
  %8549 = sub i32 0, 1
  %8550 = add i32 %8547, %8549
  %8551 = sub i32 %8547, 1
  %8552 = mul i32 %8547, %8550
  %8553 = urem i32 %8552, 2
  %8554 = icmp eq i32 %8553, 0
  %8555 = icmp slt i32 %8548, 10
  %8556 = xor i1 %8554, true
  %8557 = xor i1 %8555, true
  %8558 = xor i1 true, true
  %8559 = and i1 %8556, true
  %8560 = and i1 %8554, %8558
  %8561 = and i1 %8557, true
  %8562 = and i1 %8555, %8558
  %8563 = or i1 %8559, %8560
  %8564 = or i1 %8561, %8562
  %8565 = xor i1 %8563, %8564
  %8566 = or i1 %8556, %8557
  %8567 = xor i1 %8566, true
  %8568 = or i1 true, %8558
  %8569 = and i1 %8567, %8568
  %8570 = or i1 %8565, %8569
  %8571 = or i1 %8554, %8555
  %8572 = select i1 %8570, i32 109002459, i32 -1450532508
  store i32 %8572, i32* %switchVar
  br label %loopEnd

originalBBpart25203:                              ; preds = %loopEntry
  %cmp1699.reload = load volatile i1, i1* %cmp1699.reg2mem
  %8573 = select i1 %cmp1699.reload, i32 254000277, i32 1893590690
  store i32 %8573, i32* %switchVar
  br label %loopEnd

if.then1700:                                      ; preds = %loopEntry
  %8574 = load i32, i32* %s, align 4
  %8575 = sub i32 0, %8574
  %8576 = sub i32 0, 31
  %8577 = add i32 %8575, %8576
  %8578 = sub i32 0, %8577
  %add1701 = add nsw i32 %8574, 31
  %8579 = sub i32 0, 30
  %8580 = sub i32 %8578, %8579
  %add1702 = add nsw i32 %8578, 30
  %8581 = sub i32 0, %8580
  %8582 = sub i32 0, 31
  %8583 = add i32 %8581, %8582
  %8584 = sub i32 0, %8583
  %add1703 = add nsw i32 %8580, 31
  %8585 = load i32, i32* %f, align 4
  %8586 = sub i32 0, %8585
  %8587 = sub i32 %8584, %8586
  %add1704 = add nsw i32 %8584, %8585
  %8588 = load i32, i32* %c, align 4
  %8589 = sub i32 0, %8588
  %8590 = add i32 %8587, %8589
  %sub1705 = sub nsw i32 %8587, %8588
  store i32 %8590, i32* %s, align 4
  %8591 = load i32, i32* %s, align 4
  %call1706 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8591)
  store i32 1893590690, i32* %switchVar
  br label %loopEnd

if.end1707:                                       ; preds = %loopEntry
  %8592 = load i32, i32* %e, align 4
  %cmp1708 = icmp eq i32 %8592, 7
  %8593 = select i1 %cmp1708, i32 -602691488, i32 -1132598256
  store i32 %8593, i32* %switchVar
  br label %loopEnd

if.then1709:                                      ; preds = %loopEntry
  %8594 = load i32, i32* @x
  %8595 = load i32, i32* @y
  %8596 = sub i32 0, 1
  %8597 = add i32 %8594, %8596
  %8598 = sub i32 %8594, 1
  %8599 = mul i32 %8594, %8597
  %8600 = urem i32 %8599, 2
  %8601 = icmp eq i32 %8600, 0
  %8602 = icmp slt i32 %8595, 10
  %8603 = and i1 %8601, %8602
  %8604 = xor i1 %8601, %8602
  %8605 = or i1 %8603, %8604
  %8606 = or i1 %8601, %8602
  %8607 = select i1 %8605, i32 1818302017, i32 -1619779320
  store i32 %8607, i32* %switchVar
  br label %loopEnd

originalBB5205:                                   ; preds = %loopEntry
  %8608 = load i32, i32* %s, align 4
  %8609 = add i32 %8608, 1912337255
  %8610 = add i32 %8609, 31
  %8611 = sub i32 %8610, 1912337255
  %add1710 = add nsw i32 %8608, 31
  %8612 = sub i32 %8611, 687788474
  %8613 = add i32 %8612, 30
  %8614 = add i32 %8613, 687788474
  %add1711 = add nsw i32 %8611, 30
  %8615 = sub i32 0, %8614
  %8616 = sub i32 0, 31
  %8617 = add i32 %8615, %8616
  %8618 = sub i32 0, %8617
  %add1712 = add nsw i32 %8614, 31
  %8619 = sub i32 0, 30
  %8620 = sub i32 %8618, %8619
  %add1713 = add nsw i32 %8618, 30
  %8621 = load i32, i32* %f, align 4
  %8622 = sub i32 %8620, -2139881440
  %8623 = add i32 %8622, %8621
  %8624 = add i32 %8623, -2139881440
  %add1714 = add nsw i32 %8620, %8621
  %8625 = load i32, i32* %c, align 4
  %8626 = sub i32 %8624, 2125546021
  %8627 = sub i32 %8626, %8625
  %8628 = add i32 %8627, 2125546021
  %sub1715 = sub nsw i32 %8624, %8625
  store i32 %8628, i32* %s, align 4
  %8629 = load i32, i32* %s, align 4
  %call1716 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8629)
  %8630 = load i32, i32* @x
  %8631 = load i32, i32* @y
  %8632 = sub i32 0, 1
  %8633 = add i32 %8630, %8632
  %8634 = sub i32 %8630, 1
  %8635 = mul i32 %8630, %8633
  %8636 = urem i32 %8635, 2
  %8637 = icmp eq i32 %8636, 0
  %8638 = icmp slt i32 %8631, 10
  %8639 = and i1 %8637, %8638
  %8640 = xor i1 %8637, %8638
  %8641 = or i1 %8639, %8640
  %8642 = or i1 %8637, %8638
  %8643 = select i1 %8641, i32 937226816, i32 -1619779320
  store i32 %8643, i32* %switchVar
  br label %loopEnd

originalBBpart25267:                              ; preds = %loopEntry
  store i32 -1132598256, i32* %switchVar
  br label %loopEnd

if.end1717:                                       ; preds = %loopEntry
  %8644 = load i32, i32* @x
  %8645 = load i32, i32* @y
  %8646 = sub i32 0, 1
  %8647 = add i32 %8644, %8646
  %8648 = sub i32 %8644, 1
  %8649 = mul i32 %8644, %8647
  %8650 = urem i32 %8649, 2
  %8651 = icmp eq i32 %8650, 0
  %8652 = icmp slt i32 %8645, 10
  %8653 = xor i1 %8651, true
  %8654 = xor i1 %8652, true
  %8655 = xor i1 true, true
  %8656 = and i1 %8653, true
  %8657 = and i1 %8651, %8655
  %8658 = and i1 %8654, true
  %8659 = and i1 %8652, %8655
  %8660 = or i1 %8656, %8657
  %8661 = or i1 %8658, %8659
  %8662 = xor i1 %8660, %8661
  %8663 = or i1 %8653, %8654
  %8664 = xor i1 %8663, true
  %8665 = or i1 true, %8655
  %8666 = and i1 %8664, %8665
  %8667 = or i1 %8662, %8666
  %8668 = or i1 %8651, %8652
  %8669 = select i1 %8667, i32 347591410, i32 -737541195
  store i32 %8669, i32* %switchVar
  br label %loopEnd

originalBB5269:                                   ; preds = %loopEntry
  %8670 = load i32, i32* %e, align 4
  %cmp1718 = icmp eq i32 %8670, 8
  store i1 %cmp1718, i1* %cmp1718.reg2mem
  %8671 = load i32, i32* @x
  %8672 = load i32, i32* @y
  %8673 = sub i32 0, 1
  %8674 = add i32 %8671, %8673
  %8675 = sub i32 %8671, 1
  %8676 = mul i32 %8671, %8674
  %8677 = urem i32 %8676, 2
  %8678 = icmp eq i32 %8677, 0
  %8679 = icmp slt i32 %8672, 10
  %8680 = and i1 %8678, %8679
  %8681 = xor i1 %8678, %8679
  %8682 = or i1 %8680, %8681
  %8683 = or i1 %8678, %8679
  %8684 = select i1 %8682, i32 -312918642, i32 -737541195
  store i32 %8684, i32* %switchVar
  br label %loopEnd

originalBBpart25271:                              ; preds = %loopEntry
  %cmp1718.reload = load volatile i1, i1* %cmp1718.reg2mem
  %8685 = select i1 %cmp1718.reload, i32 1953711049, i32 -142270214
  store i32 %8685, i32* %switchVar
  br label %loopEnd

if.then1719:                                      ; preds = %loopEntry
  %8686 = load i32, i32* %s, align 4
  %8687 = sub i32 0, 31
  %8688 = sub i32 %8686, %8687
  %add1720 = add nsw i32 %8686, 31
  %8689 = sub i32 %8688, -599720822
  %8690 = add i32 %8689, 30
  %8691 = add i32 %8690, -599720822
  %add1721 = add nsw i32 %8688, 30
  %8692 = add i32 %8691, 845664637
  %8693 = add i32 %8692, 31
  %8694 = sub i32 %8693, 845664637
  %add1722 = add nsw i32 %8691, 31
  %8695 = sub i32 %8694, 572537061
  %8696 = add i32 %8695, 30
  %8697 = add i32 %8696, 572537061
  %add1723 = add nsw i32 %8694, 30
  %8698 = sub i32 0, %8697
  %8699 = sub i32 0, 31
  %8700 = add i32 %8698, %8699
  %8701 = sub i32 0, %8700
  %add1724 = add nsw i32 %8697, 31
  %8702 = load i32, i32* %f, align 4
  %8703 = sub i32 0, %8702
  %8704 = sub i32 %8701, %8703
  %add1725 = add nsw i32 %8701, %8702
  %8705 = load i32, i32* %c, align 4
  %8706 = sub i32 %8704, -687033178
  %8707 = sub i32 %8706, %8705
  %8708 = add i32 %8707, -687033178
  %sub1726 = sub nsw i32 %8704, %8705
  store i32 %8708, i32* %s, align 4
  %8709 = load i32, i32* %s, align 4
  %call1727 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8709)
  store i32 -142270214, i32* %switchVar
  br label %loopEnd

if.end1728:                                       ; preds = %loopEntry
  %8710 = load i32, i32* %e, align 4
  %cmp1729 = icmp eq i32 %8710, 9
  %8711 = select i1 %cmp1729, i32 -812038003, i32 1561779591
  store i32 %8711, i32* %switchVar
  br label %loopEnd

if.then1730:                                      ; preds = %loopEntry
  %8712 = load i32, i32* %s, align 4
  %8713 = sub i32 0, 31
  %8714 = sub i32 %8712, %8713
  %add1731 = add nsw i32 %8712, 31
  %8715 = sub i32 0, %8714
  %8716 = sub i32 0, 30
  %8717 = add i32 %8715, %8716
  %8718 = sub i32 0, %8717
  %add1732 = add nsw i32 %8714, 30
  %8719 = sub i32 0, %8718
  %8720 = sub i32 0, 31
  %8721 = add i32 %8719, %8720
  %8722 = sub i32 0, %8721
  %add1733 = add nsw i32 %8718, 31
  %8723 = add i32 %8722, -1769323228
  %8724 = add i32 %8723, 30
  %8725 = sub i32 %8724, -1769323228
  %add1734 = add nsw i32 %8722, 30
  %8726 = sub i32 0, 31
  %8727 = sub i32 %8725, %8726
  %add1735 = add nsw i32 %8725, 31
  %8728 = sub i32 0, 31
  %8729 = sub i32 %8727, %8728
  %add1736 = add nsw i32 %8727, 31
  %8730 = load i32, i32* %f, align 4
  %8731 = sub i32 %8729, -96211518
  %8732 = add i32 %8731, %8730
  %8733 = add i32 %8732, -96211518
  %add1737 = add nsw i32 %8729, %8730
  %8734 = load i32, i32* %c, align 4
  %8735 = sub i32 0, %8734
  %8736 = add i32 %8733, %8735
  %sub1738 = sub nsw i32 %8733, %8734
  store i32 %8736, i32* %s, align 4
  %8737 = load i32, i32* %s, align 4
  %call1739 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8737)
  store i32 1561779591, i32* %switchVar
  br label %loopEnd

if.end1740:                                       ; preds = %loopEntry
  %8738 = load i32, i32* %e, align 4
  %cmp1741 = icmp eq i32 %8738, 10
  %8739 = select i1 %cmp1741, i32 65253300, i32 178605730
  store i32 %8739, i32* %switchVar
  br label %loopEnd

if.then1742:                                      ; preds = %loopEntry
  %8740 = load i32, i32* %s, align 4
  %8741 = add i32 %8740, 1561937300
  %8742 = add i32 %8741, 31
  %8743 = sub i32 %8742, 1561937300
  %add1743 = add nsw i32 %8740, 31
  %8744 = sub i32 %8743, -139833596
  %8745 = add i32 %8744, 30
  %8746 = add i32 %8745, -139833596
  %add1744 = add nsw i32 %8743, 30
  %8747 = sub i32 %8746, -892043808
  %8748 = add i32 %8747, 31
  %8749 = add i32 %8748, -892043808
  %add1745 = add nsw i32 %8746, 31
  %8750 = add i32 %8749, -715314929
  %8751 = add i32 %8750, 30
  %8752 = sub i32 %8751, -715314929
  %add1746 = add nsw i32 %8749, 30
  %8753 = sub i32 %8752, 108089516
  %8754 = add i32 %8753, 31
  %8755 = add i32 %8754, 108089516
  %add1747 = add nsw i32 %8752, 31
  %8756 = sub i32 %8755, 1713620466
  %8757 = add i32 %8756, 31
  %8758 = add i32 %8757, 1713620466
  %add1748 = add nsw i32 %8755, 31
  %8759 = sub i32 0, 30
  %8760 = sub i32 %8758, %8759
  %add1749 = add nsw i32 %8758, 30
  %8761 = load i32, i32* %f, align 4
  %8762 = sub i32 0, %8760
  %8763 = sub i32 0, %8761
  %8764 = add i32 %8762, %8763
  %8765 = sub i32 0, %8764
  %add1750 = add nsw i32 %8760, %8761
  %8766 = load i32, i32* %c, align 4
  %8767 = sub i32 %8765, 174247656
  %8768 = sub i32 %8767, %8766
  %8769 = add i32 %8768, 174247656
  %sub1751 = sub nsw i32 %8765, %8766
  store i32 %8769, i32* %s, align 4
  %8770 = load i32, i32* %s, align 4
  %call1752 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8770)
  store i32 178605730, i32* %switchVar
  br label %loopEnd

if.end1753:                                       ; preds = %loopEntry
  %8771 = load i32, i32* %e, align 4
  %cmp1754 = icmp eq i32 %8771, 11
  %8772 = select i1 %cmp1754, i32 46466604, i32 -1784160701
  store i32 %8772, i32* %switchVar
  br label %loopEnd

if.then1755:                                      ; preds = %loopEntry
  %8773 = load i32, i32* @x
  %8774 = load i32, i32* @y
  %8775 = add i32 %8773, -922642229
  %8776 = sub i32 %8775, 1
  %8777 = sub i32 %8776, -922642229
  %8778 = sub i32 %8773, 1
  %8779 = mul i32 %8773, %8777
  %8780 = urem i32 %8779, 2
  %8781 = icmp eq i32 %8780, 0
  %8782 = icmp slt i32 %8774, 10
  %8783 = xor i1 %8781, true
  %8784 = xor i1 %8782, true
  %8785 = xor i1 false, true
  %8786 = and i1 %8783, false
  %8787 = and i1 %8781, %8785
  %8788 = and i1 %8784, false
  %8789 = and i1 %8782, %8785
  %8790 = or i1 %8786, %8787
  %8791 = or i1 %8788, %8789
  %8792 = xor i1 %8790, %8791
  %8793 = or i1 %8783, %8784
  %8794 = xor i1 %8793, true
  %8795 = or i1 false, %8785
  %8796 = and i1 %8794, %8795
  %8797 = or i1 %8792, %8796
  %8798 = or i1 %8781, %8782
  %8799 = select i1 %8797, i32 1550970550, i32 -1991884068
  store i32 %8799, i32* %switchVar
  br label %loopEnd

originalBB5273:                                   ; preds = %loopEntry
  %8800 = load i32, i32* %s, align 4
  %8801 = sub i32 0, %8800
  %8802 = sub i32 0, 31
  %8803 = add i32 %8801, %8802
  %8804 = sub i32 0, %8803
  %add1756 = add nsw i32 %8800, 31
  %8805 = sub i32 0, %8804
  %8806 = sub i32 0, 30
  %8807 = add i32 %8805, %8806
  %8808 = sub i32 0, %8807
  %add1757 = add nsw i32 %8804, 30
  %8809 = sub i32 0, %8808
  %8810 = sub i32 0, 31
  %8811 = add i32 %8809, %8810
  %8812 = sub i32 0, %8811
  %add1758 = add nsw i32 %8808, 31
  %8813 = add i32 %8812, 2036610564
  %8814 = add i32 %8813, 30
  %8815 = sub i32 %8814, 2036610564
  %add1759 = add nsw i32 %8812, 30
  %8816 = sub i32 0, 31
  %8817 = sub i32 %8815, %8816
  %add1760 = add nsw i32 %8815, 31
  %8818 = add i32 %8817, -2005040146
  %8819 = add i32 %8818, 31
  %8820 = sub i32 %8819, -2005040146
  %add1761 = add nsw i32 %8817, 31
  %8821 = add i32 %8820, 1358996717
  %8822 = add i32 %8821, 30
  %8823 = sub i32 %8822, 1358996717
  %add1762 = add nsw i32 %8820, 30
  %8824 = add i32 %8823, -1334245120
  %8825 = add i32 %8824, 31
  %8826 = sub i32 %8825, -1334245120
  %add1763 = add nsw i32 %8823, 31
  %8827 = load i32, i32* %f, align 4
  %8828 = sub i32 %8826, 1364799933
  %8829 = add i32 %8828, %8827
  %8830 = add i32 %8829, 1364799933
  %add1764 = add nsw i32 %8826, %8827
  %8831 = load i32, i32* %c, align 4
  %8832 = add i32 %8830, 1443104454
  %8833 = sub i32 %8832, %8831
  %8834 = sub i32 %8833, 1443104454
  %sub1765 = sub nsw i32 %8830, %8831
  store i32 %8834, i32* %s, align 4
  %8835 = load i32, i32* %s, align 4
  %call1766 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8835)
  %8836 = load i32, i32* @x
  %8837 = load i32, i32* @y
  %8838 = sub i32 %8836, -1585365691
  %8839 = sub i32 %8838, 1
  %8840 = add i32 %8839, -1585365691
  %8841 = sub i32 %8836, 1
  %8842 = mul i32 %8836, %8840
  %8843 = urem i32 %8842, 2
  %8844 = icmp eq i32 %8843, 0
  %8845 = icmp slt i32 %8837, 10
  %8846 = xor i1 %8844, true
  %8847 = xor i1 %8845, true
  %8848 = xor i1 false, true
  %8849 = and i1 %8846, false
  %8850 = and i1 %8844, %8848
  %8851 = and i1 %8847, false
  %8852 = and i1 %8845, %8848
  %8853 = or i1 %8849, %8850
  %8854 = or i1 %8851, %8852
  %8855 = xor i1 %8853, %8854
  %8856 = or i1 %8846, %8847
  %8857 = xor i1 %8856, true
  %8858 = or i1 false, %8848
  %8859 = and i1 %8857, %8858
  %8860 = or i1 %8855, %8859
  %8861 = or i1 %8844, %8845
  %8862 = select i1 %8860, i32 1099206876, i32 -1991884068
  store i32 %8862, i32* %switchVar
  br label %loopEnd

originalBBpart25338:                              ; preds = %loopEntry
  store i32 -1784160701, i32* %switchVar
  br label %loopEnd

if.end1767:                                       ; preds = %loopEntry
  %8863 = load i32, i32* %e, align 4
  %cmp1768 = icmp eq i32 %8863, 12
  %8864 = select i1 %cmp1768, i32 -817751821, i32 744122684
  store i32 %8864, i32* %switchVar
  br label %loopEnd

if.then1769:                                      ; preds = %loopEntry
  %8865 = load i32, i32* %s, align 4
  %8866 = sub i32 0, %8865
  %8867 = sub i32 0, 31
  %8868 = add i32 %8866, %8867
  %8869 = sub i32 0, %8868
  %add1770 = add nsw i32 %8865, 31
  %8870 = sub i32 %8869, -1180881893
  %8871 = add i32 %8870, 30
  %8872 = add i32 %8871, -1180881893
  %add1771 = add nsw i32 %8869, 30
  %8873 = sub i32 0, 31
  %8874 = sub i32 %8872, %8873
  %add1772 = add nsw i32 %8872, 31
  %8875 = sub i32 0, %8874
  %8876 = sub i32 0, 30
  %8877 = add i32 %8875, %8876
  %8878 = sub i32 0, %8877
  %add1773 = add nsw i32 %8874, 30
  %8879 = add i32 %8878, -1310411165
  %8880 = add i32 %8879, 31
  %8881 = sub i32 %8880, -1310411165
  %add1774 = add nsw i32 %8878, 31
  %8882 = sub i32 0, %8881
  %8883 = sub i32 0, 31
  %8884 = add i32 %8882, %8883
  %8885 = sub i32 0, %8884
  %add1775 = add nsw i32 %8881, 31
  %8886 = sub i32 0, 30
  %8887 = sub i32 %8885, %8886
  %add1776 = add nsw i32 %8885, 30
  %8888 = sub i32 0, %8887
  %8889 = sub i32 0, 31
  %8890 = add i32 %8888, %8889
  %8891 = sub i32 0, %8890
  %add1777 = add nsw i32 %8887, 31
  %8892 = sub i32 %8891, 1242926237
  %8893 = add i32 %8892, 30
  %8894 = add i32 %8893, 1242926237
  %add1778 = add nsw i32 %8891, 30
  %8895 = load i32, i32* %f, align 4
  %8896 = sub i32 0, %8894
  %8897 = sub i32 0, %8895
  %8898 = add i32 %8896, %8897
  %8899 = sub i32 0, %8898
  %add1779 = add nsw i32 %8894, %8895
  %8900 = load i32, i32* %c, align 4
  %8901 = sub i32 0, %8900
  %8902 = add i32 %8899, %8901
  %sub1780 = sub nsw i32 %8899, %8900
  store i32 %8902, i32* %s, align 4
  %8903 = load i32, i32* %s, align 4
  %call1781 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8903)
  store i32 744122684, i32* %switchVar
  br label %loopEnd

if.end1782:                                       ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.bb1783:                                        ; preds = %loopEntry
  %8904 = load i32, i32* @x
  %8905 = load i32, i32* @y
  %8906 = sub i32 %8904, -230406442
  %8907 = sub i32 %8906, 1
  %8908 = add i32 %8907, -230406442
  %8909 = sub i32 %8904, 1
  %8910 = mul i32 %8904, %8908
  %8911 = urem i32 %8910, 2
  %8912 = icmp eq i32 %8911, 0
  %8913 = icmp slt i32 %8905, 10
  %8914 = xor i1 %8912, true
  %8915 = xor i1 %8913, true
  %8916 = xor i1 false, true
  %8917 = and i1 %8914, false
  %8918 = and i1 %8912, %8916
  %8919 = and i1 %8915, false
  %8920 = and i1 %8913, %8916
  %8921 = or i1 %8917, %8918
  %8922 = or i1 %8919, %8920
  %8923 = xor i1 %8921, %8922
  %8924 = or i1 %8914, %8915
  %8925 = xor i1 %8924, true
  %8926 = or i1 false, %8916
  %8927 = and i1 %8925, %8926
  %8928 = or i1 %8923, %8927
  %8929 = or i1 %8912, %8913
  %8930 = select i1 %8928, i32 162786023, i32 1458620988
  store i32 %8930, i32* %switchVar
  br label %loopEnd

originalBB5340:                                   ; preds = %loopEntry
  %8931 = load i32, i32* %e, align 4
  %cmp1784 = icmp eq i32 %8931, 1
  store i1 %cmp1784, i1* %cmp1784.reg2mem
  %8932 = load i32, i32* @x
  %8933 = load i32, i32* @y
  %8934 = add i32 %8932, -408772230
  %8935 = sub i32 %8934, 1
  %8936 = sub i32 %8935, -408772230
  %8937 = sub i32 %8932, 1
  %8938 = mul i32 %8932, %8936
  %8939 = urem i32 %8938, 2
  %8940 = icmp eq i32 %8939, 0
  %8941 = icmp slt i32 %8933, 10
  %8942 = and i1 %8940, %8941
  %8943 = xor i1 %8940, %8941
  %8944 = or i1 %8942, %8943
  %8945 = or i1 %8940, %8941
  %8946 = select i1 %8944, i32 1997847592, i32 1458620988
  store i32 %8946, i32* %switchVar
  br label %loopEnd

originalBBpart25342:                              ; preds = %loopEntry
  %cmp1784.reload = load volatile i1, i1* %cmp1784.reg2mem
  %8947 = select i1 %cmp1784.reload, i32 1825851786, i32 1910395940
  store i32 %8947, i32* %switchVar
  br label %loopEnd

if.then1785:                                      ; preds = %loopEntry
  %8948 = load i32, i32* @x
  %8949 = load i32, i32* @y
  %8950 = sub i32 0, 1
  %8951 = add i32 %8948, %8950
  %8952 = sub i32 %8948, 1
  %8953 = mul i32 %8948, %8951
  %8954 = urem i32 %8953, 2
  %8955 = icmp eq i32 %8954, 0
  %8956 = icmp slt i32 %8949, 10
  %8957 = and i1 %8955, %8956
  %8958 = xor i1 %8955, %8956
  %8959 = or i1 %8957, %8958
  %8960 = or i1 %8955, %8956
  %8961 = select i1 %8959, i32 969817886, i32 968306894
  store i32 %8961, i32* %switchVar
  br label %loopEnd

originalBB5344:                                   ; preds = %loopEntry
  %8962 = load i32, i32* %s, align 4
  %8963 = sub i32 %8962, 1153476628
  %8964 = sub i32 %8963, 31
  %8965 = add i32 %8964, 1153476628
  %sub1786 = sub nsw i32 %8962, 31
  %8966 = sub i32 0, 28
  %8967 = add i32 %8965, %8966
  %sub1787 = sub nsw i32 %8965, 28
  %8968 = sub i32 %8967, -1815887711
  %8969 = sub i32 %8968, 31
  %8970 = add i32 %8969, -1815887711
  %sub1788 = sub nsw i32 %8967, 31
  %8971 = load i32, i32* %f, align 4
  %8972 = add i32 %8970, 1711859772
  %8973 = add i32 %8972, %8971
  %8974 = sub i32 %8973, 1711859772
  %add1789 = add nsw i32 %8970, %8971
  %8975 = load i32, i32* %c, align 4
  %8976 = add i32 %8974, 1939294224
  %8977 = sub i32 %8976, %8975
  %8978 = sub i32 %8977, 1939294224
  %sub1790 = sub nsw i32 %8974, %8975
  store i32 %8978, i32* %s, align 4
  %8979 = load i32, i32* %s, align 4
  %call1791 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %8979)
  %8980 = load i32, i32* @x
  %8981 = load i32, i32* @y
  %8982 = sub i32 0, 1
  %8983 = add i32 %8980, %8982
  %8984 = sub i32 %8980, 1
  %8985 = mul i32 %8980, %8983
  %8986 = urem i32 %8985, 2
  %8987 = icmp eq i32 %8986, 0
  %8988 = icmp slt i32 %8981, 10
  %8989 = xor i1 %8987, true
  %8990 = xor i1 %8988, true
  %8991 = xor i1 false, true
  %8992 = and i1 %8989, false
  %8993 = and i1 %8987, %8991
  %8994 = and i1 %8990, false
  %8995 = and i1 %8988, %8991
  %8996 = or i1 %8992, %8993
  %8997 = or i1 %8994, %8995
  %8998 = xor i1 %8996, %8997
  %8999 = or i1 %8989, %8990
  %9000 = xor i1 %8999, true
  %9001 = or i1 false, %8991
  %9002 = and i1 %9000, %9001
  %9003 = or i1 %8998, %9002
  %9004 = or i1 %8987, %8988
  %9005 = select i1 %9003, i32 1582712654, i32 968306894
  store i32 %9005, i32* %switchVar
  br label %loopEnd

originalBBpart25380:                              ; preds = %loopEntry
  store i32 1910395940, i32* %switchVar
  br label %loopEnd

if.end1792:                                       ; preds = %loopEntry
  %9006 = load i32, i32* %e, align 4
  %cmp1793 = icmp eq i32 %9006, 2
  %9007 = select i1 %cmp1793, i32 -2012022756, i32 1708541113
  store i32 %9007, i32* %switchVar
  br label %loopEnd

if.then1794:                                      ; preds = %loopEntry
  %9008 = load i32, i32* %s, align 4
  %9009 = sub i32 0, 28
  %9010 = add i32 %9008, %9009
  %sub1795 = sub nsw i32 %9008, 28
  %9011 = sub i32 %9010, 1191251319
  %9012 = sub i32 %9011, 31
  %9013 = add i32 %9012, 1191251319
  %sub1796 = sub nsw i32 %9010, 31
  %9014 = load i32, i32* %f, align 4
  %9015 = sub i32 %9013, -295913752
  %9016 = add i32 %9015, %9014
  %9017 = add i32 %9016, -295913752
  %add1797 = add nsw i32 %9013, %9014
  %9018 = load i32, i32* %c, align 4
  %9019 = add i32 %9017, 1211424836
  %9020 = sub i32 %9019, %9018
  %9021 = sub i32 %9020, 1211424836
  %sub1798 = sub nsw i32 %9017, %9018
  store i32 %9021, i32* %s, align 4
  %9022 = load i32, i32* %s, align 4
  %call1799 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9022)
  store i32 1708541113, i32* %switchVar
  br label %loopEnd

if.end1800:                                       ; preds = %loopEntry
  %9023 = load i32, i32* %e, align 4
  %cmp1801 = icmp eq i32 %9023, 3
  %9024 = select i1 %cmp1801, i32 -1004668968, i32 -585680668
  store i32 %9024, i32* %switchVar
  br label %loopEnd

if.then1802:                                      ; preds = %loopEntry
  %9025 = load i32, i32* @x
  %9026 = load i32, i32* @y
  %9027 = sub i32 0, 1
  %9028 = add i32 %9025, %9027
  %9029 = sub i32 %9025, 1
  %9030 = mul i32 %9025, %9028
  %9031 = urem i32 %9030, 2
  %9032 = icmp eq i32 %9031, 0
  %9033 = icmp slt i32 %9026, 10
  %9034 = xor i1 %9032, true
  %9035 = xor i1 %9033, true
  %9036 = xor i1 true, true
  %9037 = and i1 %9034, true
  %9038 = and i1 %9032, %9036
  %9039 = and i1 %9035, true
  %9040 = and i1 %9033, %9036
  %9041 = or i1 %9037, %9038
  %9042 = or i1 %9039, %9040
  %9043 = xor i1 %9041, %9042
  %9044 = or i1 %9034, %9035
  %9045 = xor i1 %9044, true
  %9046 = or i1 true, %9036
  %9047 = and i1 %9045, %9046
  %9048 = or i1 %9043, %9047
  %9049 = or i1 %9032, %9033
  %9050 = select i1 %9048, i32 -1079375611, i32 758179464
  store i32 %9050, i32* %switchVar
  br label %loopEnd

originalBB5382:                                   ; preds = %loopEntry
  %9051 = load i32, i32* %s, align 4
  %9052 = sub i32 0, 31
  %9053 = add i32 %9051, %9052
  %sub1803 = sub nsw i32 %9051, 31
  %9054 = load i32, i32* %f, align 4
  %9055 = sub i32 0, %9054
  %9056 = sub i32 %9053, %9055
  %add1804 = add nsw i32 %9053, %9054
  %9057 = load i32, i32* %c, align 4
  %9058 = sub i32 0, %9057
  %9059 = add i32 %9056, %9058
  %sub1805 = sub nsw i32 %9056, %9057
  store i32 %9059, i32* %s, align 4
  %9060 = load i32, i32* %s, align 4
  %call1806 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9060)
  %9061 = load i32, i32* @x
  %9062 = load i32, i32* @y
  %9063 = sub i32 0, 1
  %9064 = add i32 %9061, %9063
  %9065 = sub i32 %9061, 1
  %9066 = mul i32 %9061, %9064
  %9067 = urem i32 %9066, 2
  %9068 = icmp eq i32 %9067, 0
  %9069 = icmp slt i32 %9062, 10
  %9070 = xor i1 %9068, true
  %9071 = xor i1 %9069, true
  %9072 = xor i1 false, true
  %9073 = and i1 %9070, false
  %9074 = and i1 %9068, %9072
  %9075 = and i1 %9071, false
  %9076 = and i1 %9069, %9072
  %9077 = or i1 %9073, %9074
  %9078 = or i1 %9075, %9076
  %9079 = xor i1 %9077, %9078
  %9080 = or i1 %9070, %9071
  %9081 = xor i1 %9080, true
  %9082 = or i1 false, %9072
  %9083 = and i1 %9081, %9082
  %9084 = or i1 %9079, %9083
  %9085 = or i1 %9068, %9069
  %9086 = select i1 %9084, i32 -1639839683, i32 758179464
  store i32 %9086, i32* %switchVar
  br label %loopEnd

originalBBpart25417:                              ; preds = %loopEntry
  store i32 -585680668, i32* %switchVar
  br label %loopEnd

if.end1807:                                       ; preds = %loopEntry
  %9087 = load i32, i32* %e, align 4
  %cmp1808 = icmp eq i32 %9087, 5
  %9088 = select i1 %cmp1808, i32 -1744254290, i32 1382144736
  store i32 %9088, i32* %switchVar
  br label %loopEnd

if.then1809:                                      ; preds = %loopEntry
  %9089 = load i32, i32* %s, align 4
  %9090 = sub i32 0, 30
  %9091 = sub i32 %9089, %9090
  %add1810 = add nsw i32 %9089, 30
  %9092 = load i32, i32* %f, align 4
  %9093 = sub i32 0, %9091
  %9094 = sub i32 0, %9092
  %9095 = add i32 %9093, %9094
  %9096 = sub i32 0, %9095
  %add1811 = add nsw i32 %9091, %9092
  %9097 = load i32, i32* %c, align 4
  %9098 = add i32 %9096, -512231368
  %9099 = sub i32 %9098, %9097
  %9100 = sub i32 %9099, -512231368
  %sub1812 = sub nsw i32 %9096, %9097
  store i32 %9100, i32* %s, align 4
  %9101 = load i32, i32* %s, align 4
  %call1813 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9101)
  store i32 1382144736, i32* %switchVar
  br label %loopEnd

if.end1814:                                       ; preds = %loopEntry
  %9102 = load i32, i32* %e, align 4
  %cmp1815 = icmp eq i32 %9102, 6
  %9103 = select i1 %cmp1815, i32 760733225, i32 1956443335
  store i32 %9103, i32* %switchVar
  br label %loopEnd

if.then1816:                                      ; preds = %loopEntry
  %9104 = load i32, i32* @x
  %9105 = load i32, i32* @y
  %9106 = sub i32 0, 1
  %9107 = add i32 %9104, %9106
  %9108 = sub i32 %9104, 1
  %9109 = mul i32 %9104, %9107
  %9110 = urem i32 %9109, 2
  %9111 = icmp eq i32 %9110, 0
  %9112 = icmp slt i32 %9105, 10
  %9113 = and i1 %9111, %9112
  %9114 = xor i1 %9111, %9112
  %9115 = or i1 %9113, %9114
  %9116 = or i1 %9111, %9112
  %9117 = select i1 %9115, i32 207489504, i32 -640632059
  store i32 %9117, i32* %switchVar
  br label %loopEnd

originalBB5419:                                   ; preds = %loopEntry
  %9118 = load i32, i32* %s, align 4
  %9119 = sub i32 0, %9118
  %9120 = sub i32 0, 30
  %9121 = add i32 %9119, %9120
  %9122 = sub i32 0, %9121
  %add1817 = add nsw i32 %9118, 30
  %9123 = sub i32 %9122, 1705280916
  %9124 = add i32 %9123, 31
  %9125 = add i32 %9124, 1705280916
  %add1818 = add nsw i32 %9122, 31
  %9126 = load i32, i32* %f, align 4
  %9127 = sub i32 0, %9125
  %9128 = sub i32 0, %9126
  %9129 = add i32 %9127, %9128
  %9130 = sub i32 0, %9129
  %add1819 = add nsw i32 %9125, %9126
  %9131 = load i32, i32* %c, align 4
  %9132 = add i32 %9130, -1546210835
  %9133 = sub i32 %9132, %9131
  %9134 = sub i32 %9133, -1546210835
  %sub1820 = sub nsw i32 %9130, %9131
  store i32 %9134, i32* %s, align 4
  %9135 = load i32, i32* %s, align 4
  %call1821 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9135)
  %9136 = load i32, i32* @x
  %9137 = load i32, i32* @y
  %9138 = add i32 %9136, -1330306378
  %9139 = sub i32 %9138, 1
  %9140 = sub i32 %9139, -1330306378
  %9141 = sub i32 %9136, 1
  %9142 = mul i32 %9136, %9140
  %9143 = urem i32 %9142, 2
  %9144 = icmp eq i32 %9143, 0
  %9145 = icmp slt i32 %9137, 10
  %9146 = xor i1 %9144, true
  %9147 = xor i1 %9145, true
  %9148 = xor i1 false, true
  %9149 = and i1 %9146, false
  %9150 = and i1 %9144, %9148
  %9151 = and i1 %9147, false
  %9152 = and i1 %9145, %9148
  %9153 = or i1 %9149, %9150
  %9154 = or i1 %9151, %9152
  %9155 = xor i1 %9153, %9154
  %9156 = or i1 %9146, %9147
  %9157 = xor i1 %9156, true
  %9158 = or i1 false, %9148
  %9159 = and i1 %9157, %9158
  %9160 = or i1 %9155, %9159
  %9161 = or i1 %9144, %9145
  %9162 = select i1 %9160, i32 -1343366322, i32 -640632059
  store i32 %9162, i32* %switchVar
  br label %loopEnd

originalBBpart25444:                              ; preds = %loopEntry
  store i32 1956443335, i32* %switchVar
  br label %loopEnd

if.end1822:                                       ; preds = %loopEntry
  %9163 = load i32, i32* %e, align 4
  %cmp1823 = icmp eq i32 %9163, 7
  %9164 = select i1 %cmp1823, i32 389608655, i32 -750255157
  store i32 %9164, i32* %switchVar
  br label %loopEnd

if.then1824:                                      ; preds = %loopEntry
  %9165 = load i32, i32* @x
  %9166 = load i32, i32* @y
  %9167 = add i32 %9165, -1238320578
  %9168 = sub i32 %9167, 1
  %9169 = sub i32 %9168, -1238320578
  %9170 = sub i32 %9165, 1
  %9171 = mul i32 %9165, %9169
  %9172 = urem i32 %9171, 2
  %9173 = icmp eq i32 %9172, 0
  %9174 = icmp slt i32 %9166, 10
  %9175 = xor i1 %9173, true
  %9176 = xor i1 %9174, true
  %9177 = xor i1 true, true
  %9178 = and i1 %9175, true
  %9179 = and i1 %9173, %9177
  %9180 = and i1 %9176, true
  %9181 = and i1 %9174, %9177
  %9182 = or i1 %9178, %9179
  %9183 = or i1 %9180, %9181
  %9184 = xor i1 %9182, %9183
  %9185 = or i1 %9175, %9176
  %9186 = xor i1 %9185, true
  %9187 = or i1 true, %9177
  %9188 = and i1 %9186, %9187
  %9189 = or i1 %9184, %9188
  %9190 = or i1 %9173, %9174
  %9191 = select i1 %9189, i32 -725902932, i32 867903188
  store i32 %9191, i32* %switchVar
  br label %loopEnd

originalBB5446:                                   ; preds = %loopEntry
  %9192 = load i32, i32* %s, align 4
  %9193 = add i32 %9192, 582527173
  %9194 = add i32 %9193, 30
  %9195 = sub i32 %9194, 582527173
  %add1825 = add nsw i32 %9192, 30
  %9196 = sub i32 0, 31
  %9197 = sub i32 %9195, %9196
  %add1826 = add nsw i32 %9195, 31
  %9198 = add i32 %9197, -1991781589
  %9199 = add i32 %9198, 30
  %9200 = sub i32 %9199, -1991781589
  %add1827 = add nsw i32 %9197, 30
  %9201 = load i32, i32* %f, align 4
  %9202 = add i32 %9200, 289824443
  %9203 = add i32 %9202, %9201
  %9204 = sub i32 %9203, 289824443
  %add1828 = add nsw i32 %9200, %9201
  %9205 = load i32, i32* %c, align 4
  %9206 = sub i32 %9204, 398968898
  %9207 = sub i32 %9206, %9205
  %9208 = add i32 %9207, 398968898
  %sub1829 = sub nsw i32 %9204, %9205
  store i32 %9208, i32* %s, align 4
  %9209 = load i32, i32* %s, align 4
  %call1830 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9209)
  %9210 = load i32, i32* @x
  %9211 = load i32, i32* @y
  %9212 = add i32 %9210, -1423445709
  %9213 = sub i32 %9212, 1
  %9214 = sub i32 %9213, -1423445709
  %9215 = sub i32 %9210, 1
  %9216 = mul i32 %9210, %9214
  %9217 = urem i32 %9216, 2
  %9218 = icmp eq i32 %9217, 0
  %9219 = icmp slt i32 %9211, 10
  %9220 = xor i1 %9218, true
  %9221 = xor i1 %9219, true
  %9222 = xor i1 true, true
  %9223 = and i1 %9220, true
  %9224 = and i1 %9218, %9222
  %9225 = and i1 %9221, true
  %9226 = and i1 %9219, %9222
  %9227 = or i1 %9223, %9224
  %9228 = or i1 %9225, %9226
  %9229 = xor i1 %9227, %9228
  %9230 = or i1 %9220, %9221
  %9231 = xor i1 %9230, true
  %9232 = or i1 true, %9222
  %9233 = and i1 %9231, %9232
  %9234 = or i1 %9229, %9233
  %9235 = or i1 %9218, %9219
  %9236 = select i1 %9234, i32 -314969373, i32 867903188
  store i32 %9236, i32* %switchVar
  br label %loopEnd

originalBBpart25478:                              ; preds = %loopEntry
  store i32 -750255157, i32* %switchVar
  br label %loopEnd

if.end1831:                                       ; preds = %loopEntry
  %9237 = load i32, i32* @x
  %9238 = load i32, i32* @y
  %9239 = add i32 %9237, 838354735
  %9240 = sub i32 %9239, 1
  %9241 = sub i32 %9240, 838354735
  %9242 = sub i32 %9237, 1
  %9243 = mul i32 %9237, %9241
  %9244 = urem i32 %9243, 2
  %9245 = icmp eq i32 %9244, 0
  %9246 = icmp slt i32 %9238, 10
  %9247 = and i1 %9245, %9246
  %9248 = xor i1 %9245, %9246
  %9249 = or i1 %9247, %9248
  %9250 = or i1 %9245, %9246
  %9251 = select i1 %9249, i32 -1618559572, i32 -2120530509
  store i32 %9251, i32* %switchVar
  br label %loopEnd

originalBB5480:                                   ; preds = %loopEntry
  %9252 = load i32, i32* %e, align 4
  %cmp1832 = icmp eq i32 %9252, 8
  store i1 %cmp1832, i1* %cmp1832.reg2mem
  %9253 = load i32, i32* @x
  %9254 = load i32, i32* @y
  %9255 = add i32 %9253, -910791708
  %9256 = sub i32 %9255, 1
  %9257 = sub i32 %9256, -910791708
  %9258 = sub i32 %9253, 1
  %9259 = mul i32 %9253, %9257
  %9260 = urem i32 %9259, 2
  %9261 = icmp eq i32 %9260, 0
  %9262 = icmp slt i32 %9254, 10
  %9263 = and i1 %9261, %9262
  %9264 = xor i1 %9261, %9262
  %9265 = or i1 %9263, %9264
  %9266 = or i1 %9261, %9262
  %9267 = select i1 %9265, i32 375226331, i32 -2120530509
  store i32 %9267, i32* %switchVar
  br label %loopEnd

originalBBpart25482:                              ; preds = %loopEntry
  %cmp1832.reload = load volatile i1, i1* %cmp1832.reg2mem
  %9268 = select i1 %cmp1832.reload, i32 -1410174687, i32 795036839
  store i32 %9268, i32* %switchVar
  br label %loopEnd

if.then1833:                                      ; preds = %loopEntry
  %9269 = load i32, i32* @x
  %9270 = load i32, i32* @y
  %9271 = sub i32 %9269, 1438268195
  %9272 = sub i32 %9271, 1
  %9273 = add i32 %9272, 1438268195
  %9274 = sub i32 %9269, 1
  %9275 = mul i32 %9269, %9273
  %9276 = urem i32 %9275, 2
  %9277 = icmp eq i32 %9276, 0
  %9278 = icmp slt i32 %9270, 10
  %9279 = and i1 %9277, %9278
  %9280 = xor i1 %9277, %9278
  %9281 = or i1 %9279, %9280
  %9282 = or i1 %9277, %9278
  %9283 = select i1 %9281, i32 1893835353, i32 69715758
  store i32 %9283, i32* %switchVar
  br label %loopEnd

originalBB5484:                                   ; preds = %loopEntry
  %9284 = load i32, i32* %s, align 4
  %9285 = sub i32 0, %9284
  %9286 = sub i32 0, 30
  %9287 = add i32 %9285, %9286
  %9288 = sub i32 0, %9287
  %add1834 = add nsw i32 %9284, 30
  %9289 = add i32 %9288, 1039836413
  %9290 = add i32 %9289, 31
  %9291 = sub i32 %9290, 1039836413
  %add1835 = add nsw i32 %9288, 31
  %9292 = add i32 %9291, -824598387
  %9293 = add i32 %9292, 30
  %9294 = sub i32 %9293, -824598387
  %add1836 = add nsw i32 %9291, 30
  %9295 = add i32 %9294, -1128837127
  %9296 = add i32 %9295, 31
  %9297 = sub i32 %9296, -1128837127
  %add1837 = add nsw i32 %9294, 31
  %9298 = load i32, i32* %f, align 4
  %9299 = add i32 %9297, 1666510008
  %9300 = add i32 %9299, %9298
  %9301 = sub i32 %9300, 1666510008
  %add1838 = add nsw i32 %9297, %9298
  %9302 = load i32, i32* %c, align 4
  %9303 = sub i32 %9301, -798905569
  %9304 = sub i32 %9303, %9302
  %9305 = add i32 %9304, -798905569
  %sub1839 = sub nsw i32 %9301, %9302
  store i32 %9305, i32* %s, align 4
  %9306 = load i32, i32* %s, align 4
  %call1840 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9306)
  %9307 = load i32, i32* @x
  %9308 = load i32, i32* @y
  %9309 = sub i32 %9307, 1520393537
  %9310 = sub i32 %9309, 1
  %9311 = add i32 %9310, 1520393537
  %9312 = sub i32 %9307, 1
  %9313 = mul i32 %9307, %9311
  %9314 = urem i32 %9313, 2
  %9315 = icmp eq i32 %9314, 0
  %9316 = icmp slt i32 %9308, 10
  %9317 = and i1 %9315, %9316
  %9318 = xor i1 %9315, %9316
  %9319 = or i1 %9317, %9318
  %9320 = or i1 %9315, %9316
  %9321 = select i1 %9319, i32 -2125679400, i32 69715758
  store i32 %9321, i32* %switchVar
  br label %loopEnd

originalBBpart25524:                              ; preds = %loopEntry
  store i32 795036839, i32* %switchVar
  br label %loopEnd

if.end1841:                                       ; preds = %loopEntry
  %9322 = load i32, i32* @x
  %9323 = load i32, i32* @y
  %9324 = sub i32 0, 1
  %9325 = add i32 %9322, %9324
  %9326 = sub i32 %9322, 1
  %9327 = mul i32 %9322, %9325
  %9328 = urem i32 %9327, 2
  %9329 = icmp eq i32 %9328, 0
  %9330 = icmp slt i32 %9323, 10
  %9331 = and i1 %9329, %9330
  %9332 = xor i1 %9329, %9330
  %9333 = or i1 %9331, %9332
  %9334 = or i1 %9329, %9330
  %9335 = select i1 %9333, i32 653057325, i32 -1262945385
  store i32 %9335, i32* %switchVar
  br label %loopEnd

originalBB5526:                                   ; preds = %loopEntry
  %9336 = load i32, i32* %e, align 4
  %cmp1842 = icmp eq i32 %9336, 9
  store i1 %cmp1842, i1* %cmp1842.reg2mem
  %9337 = load i32, i32* @x
  %9338 = load i32, i32* @y
  %9339 = sub i32 %9337, 1161937575
  %9340 = sub i32 %9339, 1
  %9341 = add i32 %9340, 1161937575
  %9342 = sub i32 %9337, 1
  %9343 = mul i32 %9337, %9341
  %9344 = urem i32 %9343, 2
  %9345 = icmp eq i32 %9344, 0
  %9346 = icmp slt i32 %9338, 10
  %9347 = and i1 %9345, %9346
  %9348 = xor i1 %9345, %9346
  %9349 = or i1 %9347, %9348
  %9350 = or i1 %9345, %9346
  %9351 = select i1 %9349, i32 427480686, i32 -1262945385
  store i32 %9351, i32* %switchVar
  br label %loopEnd

originalBBpart25528:                              ; preds = %loopEntry
  %cmp1842.reload = load volatile i1, i1* %cmp1842.reg2mem
  %9352 = select i1 %cmp1842.reload, i32 -1209057024, i32 -939581750
  store i32 %9352, i32* %switchVar
  br label %loopEnd

if.then1843:                                      ; preds = %loopEntry
  %9353 = load i32, i32* @x
  %9354 = load i32, i32* @y
  %9355 = add i32 %9353, -1663893573
  %9356 = sub i32 %9355, 1
  %9357 = sub i32 %9356, -1663893573
  %9358 = sub i32 %9353, 1
  %9359 = mul i32 %9353, %9357
  %9360 = urem i32 %9359, 2
  %9361 = icmp eq i32 %9360, 0
  %9362 = icmp slt i32 %9354, 10
  %9363 = and i1 %9361, %9362
  %9364 = xor i1 %9361, %9362
  %9365 = or i1 %9363, %9364
  %9366 = or i1 %9361, %9362
  %9367 = select i1 %9365, i32 767216833, i32 -882901538
  store i32 %9367, i32* %switchVar
  br label %loopEnd

originalBB5530:                                   ; preds = %loopEntry
  %9368 = load i32, i32* %s, align 4
  %9369 = add i32 %9368, -1888539411
  %9370 = add i32 %9369, 30
  %9371 = sub i32 %9370, -1888539411
  %add1844 = add nsw i32 %9368, 30
  %9372 = sub i32 0, %9371
  %9373 = sub i32 0, 31
  %9374 = add i32 %9372, %9373
  %9375 = sub i32 0, %9374
  %add1845 = add nsw i32 %9371, 31
  %9376 = sub i32 %9375, 1597760961
  %9377 = add i32 %9376, 30
  %9378 = add i32 %9377, 1597760961
  %add1846 = add nsw i32 %9375, 30
  %9379 = add i32 %9378, -1551518129
  %9380 = add i32 %9379, 31
  %9381 = sub i32 %9380, -1551518129
  %add1847 = add nsw i32 %9378, 31
  %9382 = sub i32 0, %9381
  %9383 = sub i32 0, 31
  %9384 = add i32 %9382, %9383
  %9385 = sub i32 0, %9384
  %add1848 = add nsw i32 %9381, 31
  %9386 = load i32, i32* %f, align 4
  %9387 = sub i32 0, %9386
  %9388 = sub i32 %9385, %9387
  %add1849 = add nsw i32 %9385, %9386
  %9389 = load i32, i32* %c, align 4
  %9390 = sub i32 %9388, -1294007425
  %9391 = sub i32 %9390, %9389
  %9392 = add i32 %9391, -1294007425
  %sub1850 = sub nsw i32 %9388, %9389
  store i32 %9392, i32* %s, align 4
  %9393 = load i32, i32* %s, align 4
  %call1851 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9393)
  %9394 = load i32, i32* @x
  %9395 = load i32, i32* @y
  %9396 = sub i32 %9394, -1673655281
  %9397 = sub i32 %9396, 1
  %9398 = add i32 %9397, -1673655281
  %9399 = sub i32 %9394, 1
  %9400 = mul i32 %9394, %9398
  %9401 = urem i32 %9400, 2
  %9402 = icmp eq i32 %9401, 0
  %9403 = icmp slt i32 %9395, 10
  %9404 = and i1 %9402, %9403
  %9405 = xor i1 %9402, %9403
  %9406 = or i1 %9404, %9405
  %9407 = or i1 %9402, %9403
  %9408 = select i1 %9406, i32 -2130966473, i32 -882901538
  store i32 %9408, i32* %switchVar
  br label %loopEnd

originalBBpart25582:                              ; preds = %loopEntry
  store i32 -939581750, i32* %switchVar
  br label %loopEnd

if.end1852:                                       ; preds = %loopEntry
  %9409 = load i32, i32* @x
  %9410 = load i32, i32* @y
  %9411 = sub i32 %9409, 1042810271
  %9412 = sub i32 %9411, 1
  %9413 = add i32 %9412, 1042810271
  %9414 = sub i32 %9409, 1
  %9415 = mul i32 %9409, %9413
  %9416 = urem i32 %9415, 2
  %9417 = icmp eq i32 %9416, 0
  %9418 = icmp slt i32 %9410, 10
  %9419 = xor i1 %9417, true
  %9420 = xor i1 %9418, true
  %9421 = xor i1 false, true
  %9422 = and i1 %9419, false
  %9423 = and i1 %9417, %9421
  %9424 = and i1 %9420, false
  %9425 = and i1 %9418, %9421
  %9426 = or i1 %9422, %9423
  %9427 = or i1 %9424, %9425
  %9428 = xor i1 %9426, %9427
  %9429 = or i1 %9419, %9420
  %9430 = xor i1 %9429, true
  %9431 = or i1 false, %9421
  %9432 = and i1 %9430, %9431
  %9433 = or i1 %9428, %9432
  %9434 = or i1 %9417, %9418
  %9435 = select i1 %9433, i32 288498387, i32 -480544698
  store i32 %9435, i32* %switchVar
  br label %loopEnd

originalBB5584:                                   ; preds = %loopEntry
  %9436 = load i32, i32* %e, align 4
  %cmp1853 = icmp eq i32 %9436, 10
  store i1 %cmp1853, i1* %cmp1853.reg2mem
  %9437 = load i32, i32* @x
  %9438 = load i32, i32* @y
  %9439 = add i32 %9437, 1124111426
  %9440 = sub i32 %9439, 1
  %9441 = sub i32 %9440, 1124111426
  %9442 = sub i32 %9437, 1
  %9443 = mul i32 %9437, %9441
  %9444 = urem i32 %9443, 2
  %9445 = icmp eq i32 %9444, 0
  %9446 = icmp slt i32 %9438, 10
  %9447 = and i1 %9445, %9446
  %9448 = xor i1 %9445, %9446
  %9449 = or i1 %9447, %9448
  %9450 = or i1 %9445, %9446
  %9451 = select i1 %9449, i32 -1654974375, i32 -480544698
  store i32 %9451, i32* %switchVar
  br label %loopEnd

originalBBpart25586:                              ; preds = %loopEntry
  %cmp1853.reload = load volatile i1, i1* %cmp1853.reg2mem
  %9452 = select i1 %cmp1853.reload, i32 -976616, i32 1851067610
  store i32 %9452, i32* %switchVar
  br label %loopEnd

if.then1854:                                      ; preds = %loopEntry
  %9453 = load i32, i32* %s, align 4
  %9454 = sub i32 0, %9453
  %9455 = sub i32 0, 30
  %9456 = add i32 %9454, %9455
  %9457 = sub i32 0, %9456
  %add1855 = add nsw i32 %9453, 30
  %9458 = sub i32 %9457, -397259508
  %9459 = add i32 %9458, 31
  %9460 = add i32 %9459, -397259508
  %add1856 = add nsw i32 %9457, 31
  %9461 = sub i32 0, 30
  %9462 = sub i32 %9460, %9461
  %add1857 = add nsw i32 %9460, 30
  %9463 = sub i32 %9462, 1008301752
  %9464 = add i32 %9463, 31
  %9465 = add i32 %9464, 1008301752
  %add1858 = add nsw i32 %9462, 31
  %9466 = sub i32 0, %9465
  %9467 = sub i32 0, 31
  %9468 = add i32 %9466, %9467
  %9469 = sub i32 0, %9468
  %add1859 = add nsw i32 %9465, 31
  %9470 = sub i32 0, 30
  %9471 = sub i32 %9469, %9470
  %add1860 = add nsw i32 %9469, 30
  %9472 = load i32, i32* %f, align 4
  %9473 = add i32 %9471, -313020244
  %9474 = add i32 %9473, %9472
  %9475 = sub i32 %9474, -313020244
  %add1861 = add nsw i32 %9471, %9472
  %9476 = load i32, i32* %c, align 4
  %9477 = sub i32 %9475, -1404978538
  %9478 = sub i32 %9477, %9476
  %9479 = add i32 %9478, -1404978538
  %sub1862 = sub nsw i32 %9475, %9476
  store i32 %9479, i32* %s, align 4
  %9480 = load i32, i32* %s, align 4
  %call1863 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9480)
  store i32 1851067610, i32* %switchVar
  br label %loopEnd

if.end1864:                                       ; preds = %loopEntry
  %9481 = load i32, i32* %e, align 4
  %cmp1865 = icmp eq i32 %9481, 11
  %9482 = select i1 %cmp1865, i32 2061773633, i32 -984199703
  store i32 %9482, i32* %switchVar
  br label %loopEnd

if.then1866:                                      ; preds = %loopEntry
  %9483 = load i32, i32* %s, align 4
  %9484 = sub i32 %9483, -1162721361
  %9485 = add i32 %9484, 30
  %9486 = add i32 %9485, -1162721361
  %add1867 = add nsw i32 %9483, 30
  %9487 = sub i32 0, %9486
  %9488 = sub i32 0, 31
  %9489 = add i32 %9487, %9488
  %9490 = sub i32 0, %9489
  %add1868 = add nsw i32 %9486, 31
  %9491 = sub i32 0, %9490
  %9492 = sub i32 0, 30
  %9493 = add i32 %9491, %9492
  %9494 = sub i32 0, %9493
  %add1869 = add nsw i32 %9490, 30
  %9495 = sub i32 0, %9494
  %9496 = sub i32 0, 31
  %9497 = add i32 %9495, %9496
  %9498 = sub i32 0, %9497
  %add1870 = add nsw i32 %9494, 31
  %9499 = sub i32 0, %9498
  %9500 = sub i32 0, 31
  %9501 = add i32 %9499, %9500
  %9502 = sub i32 0, %9501
  %add1871 = add nsw i32 %9498, 31
  %9503 = sub i32 0, %9502
  %9504 = sub i32 0, 30
  %9505 = add i32 %9503, %9504
  %9506 = sub i32 0, %9505
  %add1872 = add nsw i32 %9502, 30
  %9507 = sub i32 %9506, -905276911
  %9508 = add i32 %9507, 31
  %9509 = add i32 %9508, -905276911
  %add1873 = add nsw i32 %9506, 31
  %9510 = load i32, i32* %f, align 4
  %9511 = sub i32 %9509, -578576451
  %9512 = add i32 %9511, %9510
  %9513 = add i32 %9512, -578576451
  %add1874 = add nsw i32 %9509, %9510
  %9514 = load i32, i32* %c, align 4
  %9515 = sub i32 0, %9514
  %9516 = add i32 %9513, %9515
  %sub1875 = sub nsw i32 %9513, %9514
  store i32 %9516, i32* %s, align 4
  %9517 = load i32, i32* %s, align 4
  %call1876 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9517)
  store i32 -984199703, i32* %switchVar
  br label %loopEnd

if.end1877:                                       ; preds = %loopEntry
  %9518 = load i32, i32* @x
  %9519 = load i32, i32* @y
  %9520 = sub i32 %9518, 80818178
  %9521 = sub i32 %9520, 1
  %9522 = add i32 %9521, 80818178
  %9523 = sub i32 %9518, 1
  %9524 = mul i32 %9518, %9522
  %9525 = urem i32 %9524, 2
  %9526 = icmp eq i32 %9525, 0
  %9527 = icmp slt i32 %9519, 10
  %9528 = xor i1 %9526, true
  %9529 = xor i1 %9527, true
  %9530 = xor i1 false, true
  %9531 = and i1 %9528, false
  %9532 = and i1 %9526, %9530
  %9533 = and i1 %9529, false
  %9534 = and i1 %9527, %9530
  %9535 = or i1 %9531, %9532
  %9536 = or i1 %9533, %9534
  %9537 = xor i1 %9535, %9536
  %9538 = or i1 %9528, %9529
  %9539 = xor i1 %9538, true
  %9540 = or i1 false, %9530
  %9541 = and i1 %9539, %9540
  %9542 = or i1 %9537, %9541
  %9543 = or i1 %9526, %9527
  %9544 = select i1 %9542, i32 -632235344, i32 1765964532
  store i32 %9544, i32* %switchVar
  br label %loopEnd

originalBB5588:                                   ; preds = %loopEntry
  %9545 = load i32, i32* %e, align 4
  %cmp1878 = icmp eq i32 %9545, 12
  store i1 %cmp1878, i1* %cmp1878.reg2mem
  %9546 = load i32, i32* @x
  %9547 = load i32, i32* @y
  %9548 = sub i32 %9546, 1585839648
  %9549 = sub i32 %9548, 1
  %9550 = add i32 %9549, 1585839648
  %9551 = sub i32 %9546, 1
  %9552 = mul i32 %9546, %9550
  %9553 = urem i32 %9552, 2
  %9554 = icmp eq i32 %9553, 0
  %9555 = icmp slt i32 %9547, 10
  %9556 = and i1 %9554, %9555
  %9557 = xor i1 %9554, %9555
  %9558 = or i1 %9556, %9557
  %9559 = or i1 %9554, %9555
  %9560 = select i1 %9558, i32 1461720723, i32 1765964532
  store i32 %9560, i32* %switchVar
  br label %loopEnd

originalBBpart25590:                              ; preds = %loopEntry
  %cmp1878.reload = load volatile i1, i1* %cmp1878.reg2mem
  %9561 = select i1 %cmp1878.reload, i32 -869977988, i32 2109037055
  store i32 %9561, i32* %switchVar
  br label %loopEnd

if.then1879:                                      ; preds = %loopEntry
  %9562 = load i32, i32* %s, align 4
  %9563 = sub i32 0, %9562
  %9564 = sub i32 0, 30
  %9565 = add i32 %9563, %9564
  %9566 = sub i32 0, %9565
  %add1880 = add nsw i32 %9562, 30
  %9567 = sub i32 0, 31
  %9568 = sub i32 %9566, %9567
  %add1881 = add nsw i32 %9566, 31
  %9569 = add i32 %9568, 654196322
  %9570 = add i32 %9569, 30
  %9571 = sub i32 %9570, 654196322
  %add1882 = add nsw i32 %9568, 30
  %9572 = sub i32 0, %9571
  %9573 = sub i32 0, 31
  %9574 = add i32 %9572, %9573
  %9575 = sub i32 0, %9574
  %add1883 = add nsw i32 %9571, 31
  %9576 = add i32 %9575, 606856407
  %9577 = add i32 %9576, 31
  %9578 = sub i32 %9577, 606856407
  %add1884 = add nsw i32 %9575, 31
  %9579 = add i32 %9578, -1756045711
  %9580 = add i32 %9579, 30
  %9581 = sub i32 %9580, -1756045711
  %add1885 = add nsw i32 %9578, 30
  %9582 = sub i32 %9581, -48177693
  %9583 = add i32 %9582, 31
  %9584 = add i32 %9583, -48177693
  %add1886 = add nsw i32 %9581, 31
  %9585 = sub i32 0, 30
  %9586 = sub i32 %9584, %9585
  %add1887 = add nsw i32 %9584, 30
  %9587 = load i32, i32* %f, align 4
  %9588 = sub i32 0, %9586
  %9589 = sub i32 0, %9587
  %9590 = add i32 %9588, %9589
  %9591 = sub i32 0, %9590
  %add1888 = add nsw i32 %9586, %9587
  %9592 = load i32, i32* %c, align 4
  %9593 = sub i32 0, %9592
  %9594 = add i32 %9591, %9593
  %sub1889 = sub nsw i32 %9591, %9592
  store i32 %9594, i32* %s, align 4
  %9595 = load i32, i32* %s, align 4
  %call1890 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9595)
  store i32 2109037055, i32* %switchVar
  br label %loopEnd

if.end1891:                                       ; preds = %loopEntry
  %9596 = load i32, i32* @x
  %9597 = load i32, i32* @y
  %9598 = sub i32 %9596, 187367821
  %9599 = sub i32 %9598, 1
  %9600 = add i32 %9599, 187367821
  %9601 = sub i32 %9596, 1
  %9602 = mul i32 %9596, %9600
  %9603 = urem i32 %9602, 2
  %9604 = icmp eq i32 %9603, 0
  %9605 = icmp slt i32 %9597, 10
  %9606 = and i1 %9604, %9605
  %9607 = xor i1 %9604, %9605
  %9608 = or i1 %9606, %9607
  %9609 = or i1 %9604, %9605
  %9610 = select i1 %9608, i32 -1389971942, i32 -1633884581
  store i32 %9610, i32* %switchVar
  br label %loopEnd

originalBB5592:                                   ; preds = %loopEntry
  %9611 = load i32, i32* @x
  %9612 = load i32, i32* @y
  %9613 = sub i32 0, 1
  %9614 = add i32 %9611, %9613
  %9615 = sub i32 %9611, 1
  %9616 = mul i32 %9611, %9614
  %9617 = urem i32 %9616, 2
  %9618 = icmp eq i32 %9617, 0
  %9619 = icmp slt i32 %9612, 10
  %9620 = and i1 %9618, %9619
  %9621 = xor i1 %9618, %9619
  %9622 = or i1 %9620, %9621
  %9623 = or i1 %9618, %9619
  %9624 = select i1 %9622, i32 -1444623147, i32 -1633884581
  store i32 %9624, i32* %switchVar
  br label %loopEnd

originalBBpart25594:                              ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.bb1892:                                        ; preds = %loopEntry
  %9625 = load i32, i32* @x
  %9626 = load i32, i32* @y
  %9627 = add i32 %9625, 1976731260
  %9628 = sub i32 %9627, 1
  %9629 = sub i32 %9628, 1976731260
  %9630 = sub i32 %9625, 1
  %9631 = mul i32 %9625, %9629
  %9632 = urem i32 %9631, 2
  %9633 = icmp eq i32 %9632, 0
  %9634 = icmp slt i32 %9626, 10
  %9635 = xor i1 %9633, true
  %9636 = xor i1 %9634, true
  %9637 = xor i1 false, true
  %9638 = and i1 %9635, false
  %9639 = and i1 %9633, %9637
  %9640 = and i1 %9636, false
  %9641 = and i1 %9634, %9637
  %9642 = or i1 %9638, %9639
  %9643 = or i1 %9640, %9641
  %9644 = xor i1 %9642, %9643
  %9645 = or i1 %9635, %9636
  %9646 = xor i1 %9645, true
  %9647 = or i1 false, %9637
  %9648 = and i1 %9646, %9647
  %9649 = or i1 %9644, %9648
  %9650 = or i1 %9633, %9634
  %9651 = select i1 %9649, i32 411833382, i32 413144997
  store i32 %9651, i32* %switchVar
  br label %loopEnd

originalBB5596:                                   ; preds = %loopEntry
  %9652 = load i32, i32* %e, align 4
  %cmp1893 = icmp eq i32 %9652, 1
  store i1 %cmp1893, i1* %cmp1893.reg2mem
  %9653 = load i32, i32* @x
  %9654 = load i32, i32* @y
  %9655 = sub i32 0, 1
  %9656 = add i32 %9653, %9655
  %9657 = sub i32 %9653, 1
  %9658 = mul i32 %9653, %9656
  %9659 = urem i32 %9658, 2
  %9660 = icmp eq i32 %9659, 0
  %9661 = icmp slt i32 %9654, 10
  %9662 = xor i1 %9660, true
  %9663 = xor i1 %9661, true
  %9664 = xor i1 false, true
  %9665 = and i1 %9662, false
  %9666 = and i1 %9660, %9664
  %9667 = and i1 %9663, false
  %9668 = and i1 %9661, %9664
  %9669 = or i1 %9665, %9666
  %9670 = or i1 %9667, %9668
  %9671 = xor i1 %9669, %9670
  %9672 = or i1 %9662, %9663
  %9673 = xor i1 %9672, true
  %9674 = or i1 false, %9664
  %9675 = and i1 %9673, %9674
  %9676 = or i1 %9671, %9675
  %9677 = or i1 %9660, %9661
  %9678 = select i1 %9676, i32 52255234, i32 413144997
  store i32 %9678, i32* %switchVar
  br label %loopEnd

originalBBpart25598:                              ; preds = %loopEntry
  %cmp1893.reload = load volatile i1, i1* %cmp1893.reg2mem
  %9679 = select i1 %cmp1893.reload, i32 -1596971186, i32 171615066
  store i32 %9679, i32* %switchVar
  br label %loopEnd

if.then1894:                                      ; preds = %loopEntry
  %9680 = load i32, i32* %s, align 4
  %9681 = sub i32 %9680, -1458517845
  %9682 = sub i32 %9681, 30
  %9683 = add i32 %9682, -1458517845
  %sub1895 = sub nsw i32 %9680, 30
  %9684 = sub i32 %9683, 1931716625
  %9685 = sub i32 %9684, 31
  %9686 = add i32 %9685, 1931716625
  %sub1896 = sub nsw i32 %9683, 31
  %9687 = add i32 %9686, -1576862252
  %9688 = sub i32 %9687, 28
  %9689 = sub i32 %9688, -1576862252
  %sub1897 = sub nsw i32 %9686, 28
  %9690 = add i32 %9689, -1237072618
  %9691 = sub i32 %9690, 31
  %9692 = sub i32 %9691, -1237072618
  %sub1898 = sub nsw i32 %9689, 31
  %9693 = load i32, i32* %f, align 4
  %9694 = sub i32 0, %9692
  %9695 = sub i32 0, %9693
  %9696 = add i32 %9694, %9695
  %9697 = sub i32 0, %9696
  %add1899 = add nsw i32 %9692, %9693
  %9698 = load i32, i32* %c, align 4
  %9699 = add i32 %9697, 341204156
  %9700 = sub i32 %9699, %9698
  %9701 = sub i32 %9700, 341204156
  %sub1900 = sub nsw i32 %9697, %9698
  store i32 %9701, i32* %s, align 4
  %9702 = load i32, i32* %s, align 4
  %call1901 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9702)
  store i32 171615066, i32* %switchVar
  br label %loopEnd

if.end1902:                                       ; preds = %loopEntry
  %9703 = load i32, i32* %e, align 4
  %cmp1903 = icmp eq i32 %9703, 2
  %9704 = select i1 %cmp1903, i32 -988009939, i32 -253566946
  store i32 %9704, i32* %switchVar
  br label %loopEnd

if.then1904:                                      ; preds = %loopEntry
  %9705 = load i32, i32* %s, align 4
  %9706 = add i32 %9705, 2117005608
  %9707 = sub i32 %9706, 30
  %9708 = sub i32 %9707, 2117005608
  %sub1905 = sub nsw i32 %9705, 30
  %9709 = sub i32 0, 31
  %9710 = add i32 %9708, %9709
  %sub1906 = sub nsw i32 %9708, 31
  %9711 = sub i32 0, 28
  %9712 = add i32 %9710, %9711
  %sub1907 = sub nsw i32 %9710, 28
  %9713 = load i32, i32* %f, align 4
  %9714 = sub i32 0, %9713
  %9715 = sub i32 %9712, %9714
  %add1908 = add nsw i32 %9712, %9713
  %9716 = load i32, i32* %c, align 4
  %9717 = sub i32 0, %9716
  %9718 = add i32 %9715, %9717
  %sub1909 = sub nsw i32 %9715, %9716
  store i32 %9718, i32* %s, align 4
  %9719 = load i32, i32* %s, align 4
  %call1910 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9719)
  store i32 -253566946, i32* %switchVar
  br label %loopEnd

if.end1911:                                       ; preds = %loopEntry
  %9720 = load i32, i32* %e, align 4
  %cmp1912 = icmp eq i32 %9720, 3
  %9721 = select i1 %cmp1912, i32 1396744339, i32 -1912170630
  store i32 %9721, i32* %switchVar
  br label %loopEnd

if.then1913:                                      ; preds = %loopEntry
  %9722 = load i32, i32* @x
  %9723 = load i32, i32* @y
  %9724 = add i32 %9722, -717405296
  %9725 = sub i32 %9724, 1
  %9726 = sub i32 %9725, -717405296
  %9727 = sub i32 %9722, 1
  %9728 = mul i32 %9722, %9726
  %9729 = urem i32 %9728, 2
  %9730 = icmp eq i32 %9729, 0
  %9731 = icmp slt i32 %9723, 10
  %9732 = and i1 %9730, %9731
  %9733 = xor i1 %9730, %9731
  %9734 = or i1 %9732, %9733
  %9735 = or i1 %9730, %9731
  %9736 = select i1 %9734, i32 1921999730, i32 -1296954311
  store i32 %9736, i32* %switchVar
  br label %loopEnd

originalBB5600:                                   ; preds = %loopEntry
  %9737 = load i32, i32* %s, align 4
  %9738 = sub i32 %9737, 1811784571
  %9739 = sub i32 %9738, 30
  %9740 = add i32 %9739, 1811784571
  %sub1914 = sub nsw i32 %9737, 30
  %9741 = sub i32 %9740, 117569162
  %9742 = sub i32 %9741, 31
  %9743 = add i32 %9742, 117569162
  %sub1915 = sub nsw i32 %9740, 31
  %9744 = load i32, i32* %f, align 4
  %9745 = sub i32 %9743, 1674277457
  %9746 = add i32 %9745, %9744
  %9747 = add i32 %9746, 1674277457
  %add1916 = add nsw i32 %9743, %9744
  %9748 = load i32, i32* %c, align 4
  %9749 = add i32 %9747, 2003234381
  %9750 = sub i32 %9749, %9748
  %9751 = sub i32 %9750, 2003234381
  %sub1917 = sub nsw i32 %9747, %9748
  store i32 %9751, i32* %s, align 4
  %9752 = load i32, i32* %s, align 4
  %call1918 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9752)
  %9753 = load i32, i32* @x
  %9754 = load i32, i32* @y
  %9755 = add i32 %9753, 721739289
  %9756 = sub i32 %9755, 1
  %9757 = sub i32 %9756, 721739289
  %9758 = sub i32 %9753, 1
  %9759 = mul i32 %9753, %9757
  %9760 = urem i32 %9759, 2
  %9761 = icmp eq i32 %9760, 0
  %9762 = icmp slt i32 %9754, 10
  %9763 = xor i1 %9761, true
  %9764 = xor i1 %9762, true
  %9765 = xor i1 false, true
  %9766 = and i1 %9763, false
  %9767 = and i1 %9761, %9765
  %9768 = and i1 %9764, false
  %9769 = and i1 %9762, %9765
  %9770 = or i1 %9766, %9767
  %9771 = or i1 %9768, %9769
  %9772 = xor i1 %9770, %9771
  %9773 = or i1 %9763, %9764
  %9774 = xor i1 %9773, true
  %9775 = or i1 false, %9765
  %9776 = and i1 %9774, %9775
  %9777 = or i1 %9772, %9776
  %9778 = or i1 %9761, %9762
  %9779 = select i1 %9777, i32 -1934734454, i32 -1296954311
  store i32 %9779, i32* %switchVar
  br label %loopEnd

originalBBpart25632:                              ; preds = %loopEntry
  store i32 -1912170630, i32* %switchVar
  br label %loopEnd

if.end1919:                                       ; preds = %loopEntry
  %9780 = load i32, i32* @x
  %9781 = load i32, i32* @y
  %9782 = sub i32 %9780, 412129058
  %9783 = sub i32 %9782, 1
  %9784 = add i32 %9783, 412129058
  %9785 = sub i32 %9780, 1
  %9786 = mul i32 %9780, %9784
  %9787 = urem i32 %9786, 2
  %9788 = icmp eq i32 %9787, 0
  %9789 = icmp slt i32 %9781, 10
  %9790 = and i1 %9788, %9789
  %9791 = xor i1 %9788, %9789
  %9792 = or i1 %9790, %9791
  %9793 = or i1 %9788, %9789
  %9794 = select i1 %9792, i32 -1432799176, i32 -1331915677
  store i32 %9794, i32* %switchVar
  br label %loopEnd

originalBB5634:                                   ; preds = %loopEntry
  %9795 = load i32, i32* %e, align 4
  %cmp1920 = icmp eq i32 %9795, 4
  store i1 %cmp1920, i1* %cmp1920.reg2mem
  %9796 = load i32, i32* @x
  %9797 = load i32, i32* @y
  %9798 = add i32 %9796, 1476254563
  %9799 = sub i32 %9798, 1
  %9800 = sub i32 %9799, 1476254563
  %9801 = sub i32 %9796, 1
  %9802 = mul i32 %9796, %9800
  %9803 = urem i32 %9802, 2
  %9804 = icmp eq i32 %9803, 0
  %9805 = icmp slt i32 %9797, 10
  %9806 = and i1 %9804, %9805
  %9807 = xor i1 %9804, %9805
  %9808 = or i1 %9806, %9807
  %9809 = or i1 %9804, %9805
  %9810 = select i1 %9808, i32 1566029743, i32 -1331915677
  store i32 %9810, i32* %switchVar
  br label %loopEnd

originalBBpart25636:                              ; preds = %loopEntry
  %cmp1920.reload = load volatile i1, i1* %cmp1920.reg2mem
  %9811 = select i1 %cmp1920.reload, i32 2122553265, i32 1332338475
  store i32 %9811, i32* %switchVar
  br label %loopEnd

if.then1921:                                      ; preds = %loopEntry
  %9812 = load i32, i32* %s, align 4
  %9813 = sub i32 0, 30
  %9814 = add i32 %9812, %9813
  %sub1922 = sub nsw i32 %9812, 30
  %9815 = load i32, i32* %f, align 4
  %9816 = sub i32 0, %9815
  %9817 = sub i32 %9814, %9816
  %add1923 = add nsw i32 %9814, %9815
  %9818 = load i32, i32* %c, align 4
  %9819 = sub i32 %9817, -345967869
  %9820 = sub i32 %9819, %9818
  %9821 = add i32 %9820, -345967869
  %sub1924 = sub nsw i32 %9817, %9818
  store i32 %9821, i32* %s, align 4
  %9822 = load i32, i32* %s, align 4
  %call1925 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9822)
  store i32 1332338475, i32* %switchVar
  br label %loopEnd

if.end1926:                                       ; preds = %loopEntry
  %9823 = load i32, i32* %e, align 4
  %cmp1927 = icmp eq i32 %9823, 6
  %9824 = select i1 %cmp1927, i32 1117710171, i32 967543038
  store i32 %9824, i32* %switchVar
  br label %loopEnd

if.then1928:                                      ; preds = %loopEntry
  %9825 = load i32, i32* %s, align 4
  %9826 = add i32 %9825, -1816583835
  %9827 = add i32 %9826, 31
  %9828 = sub i32 %9827, -1816583835
  %add1929 = add nsw i32 %9825, 31
  %9829 = load i32, i32* %f, align 4
  %9830 = add i32 %9828, -866687458
  %9831 = add i32 %9830, %9829
  %9832 = sub i32 %9831, -866687458
  %add1930 = add nsw i32 %9828, %9829
  %9833 = load i32, i32* %c, align 4
  %9834 = sub i32 %9832, 2025212830
  %9835 = sub i32 %9834, %9833
  %9836 = add i32 %9835, 2025212830
  %sub1931 = sub nsw i32 %9832, %9833
  store i32 %9836, i32* %s, align 4
  %9837 = load i32, i32* %s, align 4
  %call1932 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9837)
  store i32 967543038, i32* %switchVar
  br label %loopEnd

if.end1933:                                       ; preds = %loopEntry
  %9838 = load i32, i32* %e, align 4
  %cmp1934 = icmp eq i32 %9838, 7
  %9839 = select i1 %cmp1934, i32 1355298301, i32 -1784243399
  store i32 %9839, i32* %switchVar
  br label %loopEnd

if.then1935:                                      ; preds = %loopEntry
  %9840 = load i32, i32* %s, align 4
  %9841 = add i32 %9840, 458187562
  %9842 = add i32 %9841, 31
  %9843 = sub i32 %9842, 458187562
  %add1936 = add nsw i32 %9840, 31
  %9844 = sub i32 0, 30
  %9845 = sub i32 %9843, %9844
  %add1937 = add nsw i32 %9843, 30
  %9846 = load i32, i32* %f, align 4
  %9847 = add i32 %9845, 533568530
  %9848 = add i32 %9847, %9846
  %9849 = sub i32 %9848, 533568530
  %add1938 = add nsw i32 %9845, %9846
  %9850 = load i32, i32* %c, align 4
  %9851 = sub i32 0, %9850
  %9852 = add i32 %9849, %9851
  %sub1939 = sub nsw i32 %9849, %9850
  store i32 %9852, i32* %s, align 4
  %9853 = load i32, i32* %s, align 4
  %call1940 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9853)
  store i32 -1784243399, i32* %switchVar
  br label %loopEnd

if.end1941:                                       ; preds = %loopEntry
  %9854 = load i32, i32* %e, align 4
  %cmp1942 = icmp eq i32 %9854, 8
  %9855 = select i1 %cmp1942, i32 -6283393, i32 -911836140
  store i32 %9855, i32* %switchVar
  br label %loopEnd

if.then1943:                                      ; preds = %loopEntry
  %9856 = load i32, i32* %s, align 4
  %9857 = sub i32 0, %9856
  %9858 = sub i32 0, 31
  %9859 = add i32 %9857, %9858
  %9860 = sub i32 0, %9859
  %add1944 = add nsw i32 %9856, 31
  %9861 = sub i32 %9860, 1022385574
  %9862 = add i32 %9861, 30
  %9863 = add i32 %9862, 1022385574
  %add1945 = add nsw i32 %9860, 30
  %9864 = sub i32 0, %9863
  %9865 = sub i32 0, 31
  %9866 = add i32 %9864, %9865
  %9867 = sub i32 0, %9866
  %add1946 = add nsw i32 %9863, 31
  %9868 = load i32, i32* %f, align 4
  %9869 = add i32 %9867, -2097203188
  %9870 = add i32 %9869, %9868
  %9871 = sub i32 %9870, -2097203188
  %add1947 = add nsw i32 %9867, %9868
  %9872 = load i32, i32* %c, align 4
  %9873 = add i32 %9871, -136064518
  %9874 = sub i32 %9873, %9872
  %9875 = sub i32 %9874, -136064518
  %sub1948 = sub nsw i32 %9871, %9872
  store i32 %9875, i32* %s, align 4
  %9876 = load i32, i32* %s, align 4
  %call1949 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9876)
  store i32 -911836140, i32* %switchVar
  br label %loopEnd

if.end1950:                                       ; preds = %loopEntry
  %9877 = load i32, i32* %e, align 4
  %cmp1951 = icmp eq i32 %9877, 9
  %9878 = select i1 %cmp1951, i32 1255466096, i32 -1217224891
  store i32 %9878, i32* %switchVar
  br label %loopEnd

if.then1952:                                      ; preds = %loopEntry
  %9879 = load i32, i32* %s, align 4
  %9880 = sub i32 0, %9879
  %9881 = sub i32 0, 31
  %9882 = add i32 %9880, %9881
  %9883 = sub i32 0, %9882
  %add1953 = add nsw i32 %9879, 31
  %9884 = sub i32 %9883, -656352256
  %9885 = add i32 %9884, 30
  %9886 = add i32 %9885, -656352256
  %add1954 = add nsw i32 %9883, 30
  %9887 = add i32 %9886, -285062294
  %9888 = add i32 %9887, 31
  %9889 = sub i32 %9888, -285062294
  %add1955 = add nsw i32 %9886, 31
  %9890 = sub i32 0, %9889
  %9891 = sub i32 0, 31
  %9892 = add i32 %9890, %9891
  %9893 = sub i32 0, %9892
  %add1956 = add nsw i32 %9889, 31
  %9894 = load i32, i32* %f, align 4
  %9895 = sub i32 0, %9893
  %9896 = sub i32 0, %9894
  %9897 = add i32 %9895, %9896
  %9898 = sub i32 0, %9897
  %add1957 = add nsw i32 %9893, %9894
  %9899 = load i32, i32* %c, align 4
  %9900 = sub i32 %9898, 1278590523
  %9901 = sub i32 %9900, %9899
  %9902 = add i32 %9901, 1278590523
  %sub1958 = sub nsw i32 %9898, %9899
  store i32 %9902, i32* %s, align 4
  %9903 = load i32, i32* %s, align 4
  %call1959 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9903)
  store i32 -1217224891, i32* %switchVar
  br label %loopEnd

if.end1960:                                       ; preds = %loopEntry
  %9904 = load i32, i32* @x
  %9905 = load i32, i32* @y
  %9906 = add i32 %9904, -1149642047
  %9907 = sub i32 %9906, 1
  %9908 = sub i32 %9907, -1149642047
  %9909 = sub i32 %9904, 1
  %9910 = mul i32 %9904, %9908
  %9911 = urem i32 %9910, 2
  %9912 = icmp eq i32 %9911, 0
  %9913 = icmp slt i32 %9905, 10
  %9914 = and i1 %9912, %9913
  %9915 = xor i1 %9912, %9913
  %9916 = or i1 %9914, %9915
  %9917 = or i1 %9912, %9913
  %9918 = select i1 %9916, i32 -239076622, i32 1859753828
  store i32 %9918, i32* %switchVar
  br label %loopEnd

originalBB5638:                                   ; preds = %loopEntry
  %9919 = load i32, i32* %e, align 4
  %cmp1961 = icmp eq i32 %9919, 10
  store i1 %cmp1961, i1* %cmp1961.reg2mem
  %9920 = load i32, i32* @x
  %9921 = load i32, i32* @y
  %9922 = add i32 %9920, -1694305735
  %9923 = sub i32 %9922, 1
  %9924 = sub i32 %9923, -1694305735
  %9925 = sub i32 %9920, 1
  %9926 = mul i32 %9920, %9924
  %9927 = urem i32 %9926, 2
  %9928 = icmp eq i32 %9927, 0
  %9929 = icmp slt i32 %9921, 10
  %9930 = and i1 %9928, %9929
  %9931 = xor i1 %9928, %9929
  %9932 = or i1 %9930, %9931
  %9933 = or i1 %9928, %9929
  %9934 = select i1 %9932, i32 1102782, i32 1859753828
  store i32 %9934, i32* %switchVar
  br label %loopEnd

originalBBpart25640:                              ; preds = %loopEntry
  %cmp1961.reload = load volatile i1, i1* %cmp1961.reg2mem
  %9935 = select i1 %cmp1961.reload, i32 1350997646, i32 1702950263
  store i32 %9935, i32* %switchVar
  br label %loopEnd

if.then1962:                                      ; preds = %loopEntry
  %9936 = load i32, i32* @x
  %9937 = load i32, i32* @y
  %9938 = sub i32 0, 1
  %9939 = add i32 %9936, %9938
  %9940 = sub i32 %9936, 1
  %9941 = mul i32 %9936, %9939
  %9942 = urem i32 %9941, 2
  %9943 = icmp eq i32 %9942, 0
  %9944 = icmp slt i32 %9937, 10
  %9945 = and i1 %9943, %9944
  %9946 = xor i1 %9943, %9944
  %9947 = or i1 %9945, %9946
  %9948 = or i1 %9943, %9944
  %9949 = select i1 %9947, i32 907775263, i32 -1215675492
  store i32 %9949, i32* %switchVar
  br label %loopEnd

originalBB5642:                                   ; preds = %loopEntry
  %9950 = load i32, i32* %s, align 4
  %9951 = sub i32 %9950, 524891503
  %9952 = add i32 %9951, 31
  %9953 = add i32 %9952, 524891503
  %add1963 = add nsw i32 %9950, 31
  %9954 = sub i32 0, 30
  %9955 = sub i32 %9953, %9954
  %add1964 = add nsw i32 %9953, 30
  %9956 = sub i32 %9955, 1736875050
  %9957 = add i32 %9956, 31
  %9958 = add i32 %9957, 1736875050
  %add1965 = add nsw i32 %9955, 31
  %9959 = add i32 %9958, -1935555604
  %9960 = add i32 %9959, 31
  %9961 = sub i32 %9960, -1935555604
  %add1966 = add nsw i32 %9958, 31
  %9962 = sub i32 0, 30
  %9963 = sub i32 %9961, %9962
  %add1967 = add nsw i32 %9961, 30
  %9964 = load i32, i32* %f, align 4
  %9965 = sub i32 %9963, -1781584306
  %9966 = add i32 %9965, %9964
  %9967 = add i32 %9966, -1781584306
  %add1968 = add nsw i32 %9963, %9964
  %9968 = load i32, i32* %c, align 4
  %9969 = sub i32 %9967, -1428051525
  %9970 = sub i32 %9969, %9968
  %9971 = add i32 %9970, -1428051525
  %sub1969 = sub nsw i32 %9967, %9968
  store i32 %9971, i32* %s, align 4
  %9972 = load i32, i32* %s, align 4
  %call1970 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %9972)
  %9973 = load i32, i32* @x
  %9974 = load i32, i32* @y
  %9975 = sub i32 0, 1
  %9976 = add i32 %9973, %9975
  %9977 = sub i32 %9973, 1
  %9978 = mul i32 %9973, %9976
  %9979 = urem i32 %9978, 2
  %9980 = icmp eq i32 %9979, 0
  %9981 = icmp slt i32 %9974, 10
  %9982 = and i1 %9980, %9981
  %9983 = xor i1 %9980, %9981
  %9984 = or i1 %9982, %9983
  %9985 = or i1 %9980, %9981
  %9986 = select i1 %9984, i32 1157445846, i32 -1215675492
  store i32 %9986, i32* %switchVar
  br label %loopEnd

originalBBpart25706:                              ; preds = %loopEntry
  store i32 1702950263, i32* %switchVar
  br label %loopEnd

if.end1971:                                       ; preds = %loopEntry
  %9987 = load i32, i32* %e, align 4
  %cmp1972 = icmp eq i32 %9987, 11
  %9988 = select i1 %cmp1972, i32 -729441587, i32 -1113920637
  store i32 %9988, i32* %switchVar
  br label %loopEnd

if.then1973:                                      ; preds = %loopEntry
  %9989 = load i32, i32* %s, align 4
  %9990 = sub i32 %9989, 1474616794
  %9991 = add i32 %9990, 31
  %9992 = add i32 %9991, 1474616794
  %add1974 = add nsw i32 %9989, 31
  %9993 = add i32 %9992, 1226417523
  %9994 = add i32 %9993, 30
  %9995 = sub i32 %9994, 1226417523
  %add1975 = add nsw i32 %9992, 30
  %9996 = sub i32 0, %9995
  %9997 = sub i32 0, 31
  %9998 = add i32 %9996, %9997
  %9999 = sub i32 0, %9998
  %add1976 = add nsw i32 %9995, 31
  %10000 = add i32 %9999, -1591315963
  %10001 = add i32 %10000, 31
  %10002 = sub i32 %10001, -1591315963
  %add1977 = add nsw i32 %9999, 31
  %10003 = sub i32 0, 30
  %10004 = sub i32 %10002, %10003
  %add1978 = add nsw i32 %10002, 30
  %10005 = sub i32 0, 31
  %10006 = sub i32 %10004, %10005
  %add1979 = add nsw i32 %10004, 31
  %10007 = load i32, i32* %f, align 4
  %10008 = sub i32 0, %10007
  %10009 = sub i32 %10006, %10008
  %add1980 = add nsw i32 %10006, %10007
  %10010 = load i32, i32* %c, align 4
  %10011 = sub i32 0, %10010
  %10012 = add i32 %10009, %10011
  %sub1981 = sub nsw i32 %10009, %10010
  store i32 %10012, i32* %s, align 4
  %10013 = load i32, i32* %s, align 4
  %call1982 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10013)
  store i32 -1113920637, i32* %switchVar
  br label %loopEnd

if.end1983:                                       ; preds = %loopEntry
  %10014 = load i32, i32* %e, align 4
  %cmp1984 = icmp eq i32 %10014, 12
  %10015 = select i1 %cmp1984, i32 -544012550, i32 1218521763
  store i32 %10015, i32* %switchVar
  br label %loopEnd

if.then1985:                                      ; preds = %loopEntry
  %10016 = load i32, i32* %s, align 4
  %10017 = add i32 %10016, -612754849
  %10018 = add i32 %10017, 31
  %10019 = sub i32 %10018, -612754849
  %add1986 = add nsw i32 %10016, 31
  %10020 = add i32 %10019, 948500441
  %10021 = add i32 %10020, 30
  %10022 = sub i32 %10021, 948500441
  %add1987 = add nsw i32 %10019, 30
  %10023 = add i32 %10022, 1453428020
  %10024 = add i32 %10023, 31
  %10025 = sub i32 %10024, 1453428020
  %add1988 = add nsw i32 %10022, 31
  %10026 = sub i32 0, 31
  %10027 = sub i32 %10025, %10026
  %add1989 = add nsw i32 %10025, 31
  %10028 = sub i32 %10027, -173667684
  %10029 = add i32 %10028, 30
  %10030 = add i32 %10029, -173667684
  %add1990 = add nsw i32 %10027, 30
  %10031 = sub i32 %10030, -708572498
  %10032 = add i32 %10031, 31
  %10033 = add i32 %10032, -708572498
  %add1991 = add nsw i32 %10030, 31
  %10034 = sub i32 %10033, -1770567436
  %10035 = add i32 %10034, 30
  %10036 = add i32 %10035, -1770567436
  %add1992 = add nsw i32 %10033, 30
  %10037 = load i32, i32* %f, align 4
  %10038 = add i32 %10036, 439021141
  %10039 = add i32 %10038, %10037
  %10040 = sub i32 %10039, 439021141
  %add1993 = add nsw i32 %10036, %10037
  %10041 = load i32, i32* %c, align 4
  %10042 = sub i32 0, %10041
  %10043 = add i32 %10040, %10042
  %sub1994 = sub nsw i32 %10040, %10041
  store i32 %10043, i32* %s, align 4
  %10044 = load i32, i32* %s, align 4
  %call1995 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10044)
  store i32 1218521763, i32* %switchVar
  br label %loopEnd

if.end1996:                                       ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.bb1997:                                        ; preds = %loopEntry
  %10045 = load i32, i32* %e, align 4
  %cmp1998 = icmp eq i32 %10045, 1
  %10046 = select i1 %cmp1998, i32 -1779626978, i32 -1433400858
  store i32 %10046, i32* %switchVar
  br label %loopEnd

if.then1999:                                      ; preds = %loopEntry
  %10047 = load i32, i32* %s, align 4
  %10048 = sub i32 0, 31
  %10049 = add i32 %10047, %10048
  %sub2000 = sub nsw i32 %10047, 31
  %10050 = add i32 %10049, -848030544
  %10051 = sub i32 %10050, 30
  %10052 = sub i32 %10051, -848030544
  %sub2001 = sub nsw i32 %10049, 30
  %10053 = add i32 %10052, -1224943767
  %10054 = sub i32 %10053, 31
  %10055 = sub i32 %10054, -1224943767
  %sub2002 = sub nsw i32 %10052, 31
  %10056 = sub i32 %10055, 703895972
  %10057 = sub i32 %10056, 28
  %10058 = add i32 %10057, 703895972
  %sub2003 = sub nsw i32 %10055, 28
  %10059 = sub i32 %10058, -1247995989
  %10060 = sub i32 %10059, 31
  %10061 = add i32 %10060, -1247995989
  %sub2004 = sub nsw i32 %10058, 31
  %10062 = load i32, i32* %f, align 4
  %10063 = add i32 %10061, -627416044
  %10064 = add i32 %10063, %10062
  %10065 = sub i32 %10064, -627416044
  %add2005 = add nsw i32 %10061, %10062
  %10066 = load i32, i32* %c, align 4
  %10067 = sub i32 0, %10066
  %10068 = add i32 %10065, %10067
  %sub2006 = sub nsw i32 %10065, %10066
  store i32 %10068, i32* %s, align 4
  %10069 = load i32, i32* %s, align 4
  %call2007 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10069)
  store i32 -1433400858, i32* %switchVar
  br label %loopEnd

if.end2008:                                       ; preds = %loopEntry
  %10070 = load i32, i32* @x
  %10071 = load i32, i32* @y
  %10072 = add i32 %10070, 1638289382
  %10073 = sub i32 %10072, 1
  %10074 = sub i32 %10073, 1638289382
  %10075 = sub i32 %10070, 1
  %10076 = mul i32 %10070, %10074
  %10077 = urem i32 %10076, 2
  %10078 = icmp eq i32 %10077, 0
  %10079 = icmp slt i32 %10071, 10
  %10080 = xor i1 %10078, true
  %10081 = xor i1 %10079, true
  %10082 = xor i1 true, true
  %10083 = and i1 %10080, true
  %10084 = and i1 %10078, %10082
  %10085 = and i1 %10081, true
  %10086 = and i1 %10079, %10082
  %10087 = or i1 %10083, %10084
  %10088 = or i1 %10085, %10086
  %10089 = xor i1 %10087, %10088
  %10090 = or i1 %10080, %10081
  %10091 = xor i1 %10090, true
  %10092 = or i1 true, %10082
  %10093 = and i1 %10091, %10092
  %10094 = or i1 %10089, %10093
  %10095 = or i1 %10078, %10079
  %10096 = select i1 %10094, i32 797902299, i32 -1994352963
  store i32 %10096, i32* %switchVar
  br label %loopEnd

originalBB5708:                                   ; preds = %loopEntry
  %10097 = load i32, i32* %e, align 4
  %cmp2009 = icmp eq i32 %10097, 2
  store i1 %cmp2009, i1* %cmp2009.reg2mem
  %10098 = load i32, i32* @x
  %10099 = load i32, i32* @y
  %10100 = add i32 %10098, 1917652386
  %10101 = sub i32 %10100, 1
  %10102 = sub i32 %10101, 1917652386
  %10103 = sub i32 %10098, 1
  %10104 = mul i32 %10098, %10102
  %10105 = urem i32 %10104, 2
  %10106 = icmp eq i32 %10105, 0
  %10107 = icmp slt i32 %10099, 10
  %10108 = and i1 %10106, %10107
  %10109 = xor i1 %10106, %10107
  %10110 = or i1 %10108, %10109
  %10111 = or i1 %10106, %10107
  %10112 = select i1 %10110, i32 -505294135, i32 -1994352963
  store i32 %10112, i32* %switchVar
  br label %loopEnd

originalBBpart25710:                              ; preds = %loopEntry
  %cmp2009.reload = load volatile i1, i1* %cmp2009.reg2mem
  %10113 = select i1 %cmp2009.reload, i32 844588262, i32 436574504
  store i32 %10113, i32* %switchVar
  br label %loopEnd

if.then2010:                                      ; preds = %loopEntry
  %10114 = load i32, i32* %s, align 4
  %10115 = sub i32 0, 31
  %10116 = add i32 %10114, %10115
  %sub2011 = sub nsw i32 %10114, 31
  %10117 = sub i32 %10116, -885080988
  %10118 = sub i32 %10117, 30
  %10119 = add i32 %10118, -885080988
  %sub2012 = sub nsw i32 %10116, 30
  %10120 = sub i32 %10119, 106880246
  %10121 = sub i32 %10120, 31
  %10122 = add i32 %10121, 106880246
  %sub2013 = sub nsw i32 %10119, 31
  %10123 = sub i32 %10122, 1211912308
  %10124 = sub i32 %10123, 28
  %10125 = add i32 %10124, 1211912308
  %sub2014 = sub nsw i32 %10122, 28
  %10126 = load i32, i32* %f, align 4
  %10127 = sub i32 %10125, 1503274140
  %10128 = add i32 %10127, %10126
  %10129 = add i32 %10128, 1503274140
  %add2015 = add nsw i32 %10125, %10126
  %10130 = load i32, i32* %c, align 4
  %10131 = sub i32 0, %10130
  %10132 = add i32 %10129, %10131
  %sub2016 = sub nsw i32 %10129, %10130
  store i32 %10132, i32* %s, align 4
  %10133 = load i32, i32* %s, align 4
  %call2017 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10133)
  store i32 436574504, i32* %switchVar
  br label %loopEnd

if.end2018:                                       ; preds = %loopEntry
  %10134 = load i32, i32* %e, align 4
  %cmp2019 = icmp eq i32 %10134, 3
  %10135 = select i1 %cmp2019, i32 -1811133707, i32 -855898633
  store i32 %10135, i32* %switchVar
  br label %loopEnd

if.then2020:                                      ; preds = %loopEntry
  %10136 = load i32, i32* %s, align 4
  %10137 = sub i32 %10136, -1285039811
  %10138 = sub i32 %10137, 31
  %10139 = add i32 %10138, -1285039811
  %sub2021 = sub nsw i32 %10136, 31
  %10140 = sub i32 %10139, -432507944
  %10141 = sub i32 %10140, 30
  %10142 = add i32 %10141, -432507944
  %sub2022 = sub nsw i32 %10139, 30
  %10143 = sub i32 0, 31
  %10144 = add i32 %10142, %10143
  %sub2023 = sub nsw i32 %10142, 31
  %10145 = load i32, i32* %f, align 4
  %10146 = add i32 %10144, -831875593
  %10147 = add i32 %10146, %10145
  %10148 = sub i32 %10147, -831875593
  %add2024 = add nsw i32 %10144, %10145
  %10149 = load i32, i32* %c, align 4
  %10150 = sub i32 0, %10149
  %10151 = add i32 %10148, %10150
  %sub2025 = sub nsw i32 %10148, %10149
  store i32 %10151, i32* %s, align 4
  %10152 = load i32, i32* %s, align 4
  %call2026 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10152)
  store i32 -855898633, i32* %switchVar
  br label %loopEnd

if.end2027:                                       ; preds = %loopEntry
  %10153 = load i32, i32* %e, align 4
  %cmp2028 = icmp eq i32 %10153, 4
  %10154 = select i1 %cmp2028, i32 -1788668448, i32 1740050033
  store i32 %10154, i32* %switchVar
  br label %loopEnd

if.then2029:                                      ; preds = %loopEntry
  %10155 = load i32, i32* %s, align 4
  %10156 = sub i32 %10155, 755278572
  %10157 = sub i32 %10156, 31
  %10158 = add i32 %10157, 755278572
  %sub2030 = sub nsw i32 %10155, 31
  %10159 = sub i32 0, 30
  %10160 = add i32 %10158, %10159
  %sub2031 = sub nsw i32 %10158, 30
  %10161 = load i32, i32* %f, align 4
  %10162 = sub i32 0, %10160
  %10163 = sub i32 0, %10161
  %10164 = add i32 %10162, %10163
  %10165 = sub i32 0, %10164
  %add2032 = add nsw i32 %10160, %10161
  %10166 = load i32, i32* %c, align 4
  %10167 = sub i32 0, %10166
  %10168 = add i32 %10165, %10167
  %sub2033 = sub nsw i32 %10165, %10166
  store i32 %10168, i32* %s, align 4
  %10169 = load i32, i32* %s, align 4
  %call2034 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10169)
  store i32 1740050033, i32* %switchVar
  br label %loopEnd

if.end2035:                                       ; preds = %loopEntry
  %10170 = load i32, i32* %e, align 4
  %cmp2036 = icmp eq i32 %10170, 5
  %10171 = select i1 %cmp2036, i32 315545875, i32 -1359286686
  store i32 %10171, i32* %switchVar
  br label %loopEnd

if.then2037:                                      ; preds = %loopEntry
  %10172 = load i32, i32* @x
  %10173 = load i32, i32* @y
  %10174 = sub i32 0, 1
  %10175 = add i32 %10172, %10174
  %10176 = sub i32 %10172, 1
  %10177 = mul i32 %10172, %10175
  %10178 = urem i32 %10177, 2
  %10179 = icmp eq i32 %10178, 0
  %10180 = icmp slt i32 %10173, 10
  %10181 = xor i1 %10179, true
  %10182 = xor i1 %10180, true
  %10183 = xor i1 false, true
  %10184 = and i1 %10181, false
  %10185 = and i1 %10179, %10183
  %10186 = and i1 %10182, false
  %10187 = and i1 %10180, %10183
  %10188 = or i1 %10184, %10185
  %10189 = or i1 %10186, %10187
  %10190 = xor i1 %10188, %10189
  %10191 = or i1 %10181, %10182
  %10192 = xor i1 %10191, true
  %10193 = or i1 false, %10183
  %10194 = and i1 %10192, %10193
  %10195 = or i1 %10190, %10194
  %10196 = or i1 %10179, %10180
  %10197 = select i1 %10195, i32 -440054357, i32 -186986560
  store i32 %10197, i32* %switchVar
  br label %loopEnd

originalBB5712:                                   ; preds = %loopEntry
  %10198 = load i32, i32* %s, align 4
  %10199 = sub i32 %10198, -1793592357
  %10200 = sub i32 %10199, 31
  %10201 = add i32 %10200, -1793592357
  %sub2038 = sub nsw i32 %10198, 31
  %10202 = load i32, i32* %f, align 4
  %10203 = sub i32 0, %10201
  %10204 = sub i32 0, %10202
  %10205 = add i32 %10203, %10204
  %10206 = sub i32 0, %10205
  %add2039 = add nsw i32 %10201, %10202
  %10207 = load i32, i32* %c, align 4
  %10208 = sub i32 %10206, 429429841
  %10209 = sub i32 %10208, %10207
  %10210 = add i32 %10209, 429429841
  %sub2040 = sub nsw i32 %10206, %10207
  store i32 %10210, i32* %s, align 4
  %10211 = load i32, i32* %s, align 4
  %call2041 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10211)
  %10212 = load i32, i32* @x
  %10213 = load i32, i32* @y
  %10214 = sub i32 %10212, 134416614
  %10215 = sub i32 %10214, 1
  %10216 = add i32 %10215, 134416614
  %10217 = sub i32 %10212, 1
  %10218 = mul i32 %10212, %10216
  %10219 = urem i32 %10218, 2
  %10220 = icmp eq i32 %10219, 0
  %10221 = icmp slt i32 %10213, 10
  %10222 = xor i1 %10220, true
  %10223 = xor i1 %10221, true
  %10224 = xor i1 true, true
  %10225 = and i1 %10222, true
  %10226 = and i1 %10220, %10224
  %10227 = and i1 %10223, true
  %10228 = and i1 %10221, %10224
  %10229 = or i1 %10225, %10226
  %10230 = or i1 %10227, %10228
  %10231 = xor i1 %10229, %10230
  %10232 = or i1 %10222, %10223
  %10233 = xor i1 %10232, true
  %10234 = or i1 true, %10224
  %10235 = and i1 %10233, %10234
  %10236 = or i1 %10231, %10235
  %10237 = or i1 %10220, %10221
  %10238 = select i1 %10236, i32 -1379990939, i32 -186986560
  store i32 %10238, i32* %switchVar
  br label %loopEnd

originalBBpart25720:                              ; preds = %loopEntry
  store i32 -1359286686, i32* %switchVar
  br label %loopEnd

if.end2042:                                       ; preds = %loopEntry
  %10239 = load i32, i32* @x
  %10240 = load i32, i32* @y
  %10241 = add i32 %10239, 1495665602
  %10242 = sub i32 %10241, 1
  %10243 = sub i32 %10242, 1495665602
  %10244 = sub i32 %10239, 1
  %10245 = mul i32 %10239, %10243
  %10246 = urem i32 %10245, 2
  %10247 = icmp eq i32 %10246, 0
  %10248 = icmp slt i32 %10240, 10
  %10249 = and i1 %10247, %10248
  %10250 = xor i1 %10247, %10248
  %10251 = or i1 %10249, %10250
  %10252 = or i1 %10247, %10248
  %10253 = select i1 %10251, i32 -1595913419, i32 -188451877
  store i32 %10253, i32* %switchVar
  br label %loopEnd

originalBB5722:                                   ; preds = %loopEntry
  %10254 = load i32, i32* %e, align 4
  %cmp2043 = icmp eq i32 %10254, 7
  store i1 %cmp2043, i1* %cmp2043.reg2mem
  %10255 = load i32, i32* @x
  %10256 = load i32, i32* @y
  %10257 = add i32 %10255, -575812242
  %10258 = sub i32 %10257, 1
  %10259 = sub i32 %10258, -575812242
  %10260 = sub i32 %10255, 1
  %10261 = mul i32 %10255, %10259
  %10262 = urem i32 %10261, 2
  %10263 = icmp eq i32 %10262, 0
  %10264 = icmp slt i32 %10256, 10
  %10265 = and i1 %10263, %10264
  %10266 = xor i1 %10263, %10264
  %10267 = or i1 %10265, %10266
  %10268 = or i1 %10263, %10264
  %10269 = select i1 %10267, i32 1892738481, i32 -188451877
  store i32 %10269, i32* %switchVar
  br label %loopEnd

originalBBpart25724:                              ; preds = %loopEntry
  %cmp2043.reload = load volatile i1, i1* %cmp2043.reg2mem
  %10270 = select i1 %cmp2043.reload, i32 -1703887359, i32 355931655
  store i32 %10270, i32* %switchVar
  br label %loopEnd

if.then2044:                                      ; preds = %loopEntry
  %10271 = load i32, i32* %s, align 4
  %10272 = add i32 %10271, -1856962791
  %10273 = add i32 %10272, 30
  %10274 = sub i32 %10273, -1856962791
  %add2045 = add nsw i32 %10271, 30
  %10275 = load i32, i32* %f, align 4
  %10276 = add i32 %10274, -197245653
  %10277 = add i32 %10276, %10275
  %10278 = sub i32 %10277, -197245653
  %add2046 = add nsw i32 %10274, %10275
  %10279 = load i32, i32* %c, align 4
  %10280 = sub i32 %10278, 1048528791
  %10281 = sub i32 %10280, %10279
  %10282 = add i32 %10281, 1048528791
  %sub2047 = sub nsw i32 %10278, %10279
  store i32 %10282, i32* %s, align 4
  %10283 = load i32, i32* %s, align 4
  %call2048 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10283)
  store i32 355931655, i32* %switchVar
  br label %loopEnd

if.end2049:                                       ; preds = %loopEntry
  %10284 = load i32, i32* %e, align 4
  %cmp2050 = icmp eq i32 %10284, 8
  %10285 = select i1 %cmp2050, i32 451856692, i32 -665403818
  store i32 %10285, i32* %switchVar
  br label %loopEnd

if.then2051:                                      ; preds = %loopEntry
  %10286 = load i32, i32* @x
  %10287 = load i32, i32* @y
  %10288 = add i32 %10286, 817415027
  %10289 = sub i32 %10288, 1
  %10290 = sub i32 %10289, 817415027
  %10291 = sub i32 %10286, 1
  %10292 = mul i32 %10286, %10290
  %10293 = urem i32 %10292, 2
  %10294 = icmp eq i32 %10293, 0
  %10295 = icmp slt i32 %10287, 10
  %10296 = and i1 %10294, %10295
  %10297 = xor i1 %10294, %10295
  %10298 = or i1 %10296, %10297
  %10299 = or i1 %10294, %10295
  %10300 = select i1 %10298, i32 1953581287, i32 -1851991474
  store i32 %10300, i32* %switchVar
  br label %loopEnd

originalBB5726:                                   ; preds = %loopEntry
  %10301 = load i32, i32* %s, align 4
  %10302 = sub i32 0, %10301
  %10303 = sub i32 0, 30
  %10304 = add i32 %10302, %10303
  %10305 = sub i32 0, %10304
  %add2052 = add nsw i32 %10301, 30
  %10306 = sub i32 %10305, -954356060
  %10307 = add i32 %10306, 31
  %10308 = add i32 %10307, -954356060
  %add2053 = add nsw i32 %10305, 31
  %10309 = load i32, i32* %f, align 4
  %10310 = add i32 %10308, -1234458467
  %10311 = add i32 %10310, %10309
  %10312 = sub i32 %10311, -1234458467
  %add2054 = add nsw i32 %10308, %10309
  %10313 = load i32, i32* %c, align 4
  %10314 = sub i32 %10312, 1982330522
  %10315 = sub i32 %10314, %10313
  %10316 = add i32 %10315, 1982330522
  %sub2055 = sub nsw i32 %10312, %10313
  store i32 %10316, i32* %s, align 4
  %10317 = load i32, i32* %s, align 4
  %call2056 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10317)
  %10318 = load i32, i32* @x
  %10319 = load i32, i32* @y
  %10320 = sub i32 %10318, -559709680
  %10321 = sub i32 %10320, 1
  %10322 = add i32 %10321, -559709680
  %10323 = sub i32 %10318, 1
  %10324 = mul i32 %10318, %10322
  %10325 = urem i32 %10324, 2
  %10326 = icmp eq i32 %10325, 0
  %10327 = icmp slt i32 %10319, 10
  %10328 = and i1 %10326, %10327
  %10329 = xor i1 %10326, %10327
  %10330 = or i1 %10328, %10329
  %10331 = or i1 %10326, %10327
  %10332 = select i1 %10330, i32 1218420443, i32 -1851991474
  store i32 %10332, i32* %switchVar
  br label %loopEnd

originalBBpart25759:                              ; preds = %loopEntry
  store i32 -665403818, i32* %switchVar
  br label %loopEnd

if.end2057:                                       ; preds = %loopEntry
  %10333 = load i32, i32* %e, align 4
  %cmp2058 = icmp eq i32 %10333, 9
  %10334 = select i1 %cmp2058, i32 -948082335, i32 1942298622
  store i32 %10334, i32* %switchVar
  br label %loopEnd

if.then2059:                                      ; preds = %loopEntry
  %10335 = load i32, i32* %s, align 4
  %10336 = sub i32 0, 30
  %10337 = sub i32 %10335, %10336
  %add2060 = add nsw i32 %10335, 30
  %10338 = sub i32 %10337, 471947642
  %10339 = add i32 %10338, 31
  %10340 = add i32 %10339, 471947642
  %add2061 = add nsw i32 %10337, 31
  %10341 = sub i32 %10340, 1126817645
  %10342 = add i32 %10341, 31
  %10343 = add i32 %10342, 1126817645
  %add2062 = add nsw i32 %10340, 31
  %10344 = load i32, i32* %f, align 4
  %10345 = sub i32 %10343, 331617496
  %10346 = add i32 %10345, %10344
  %10347 = add i32 %10346, 331617496
  %add2063 = add nsw i32 %10343, %10344
  %10348 = load i32, i32* %c, align 4
  %10349 = sub i32 %10347, 1473735214
  %10350 = sub i32 %10349, %10348
  %10351 = add i32 %10350, 1473735214
  %sub2064 = sub nsw i32 %10347, %10348
  store i32 %10351, i32* %s, align 4
  %10352 = load i32, i32* %s, align 4
  %call2065 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10352)
  store i32 1942298622, i32* %switchVar
  br label %loopEnd

if.end2066:                                       ; preds = %loopEntry
  %10353 = load i32, i32* @x
  %10354 = load i32, i32* @y
  %10355 = add i32 %10353, 628831213
  %10356 = sub i32 %10355, 1
  %10357 = sub i32 %10356, 628831213
  %10358 = sub i32 %10353, 1
  %10359 = mul i32 %10353, %10357
  %10360 = urem i32 %10359, 2
  %10361 = icmp eq i32 %10360, 0
  %10362 = icmp slt i32 %10354, 10
  %10363 = xor i1 %10361, true
  %10364 = xor i1 %10362, true
  %10365 = xor i1 true, true
  %10366 = and i1 %10363, true
  %10367 = and i1 %10361, %10365
  %10368 = and i1 %10364, true
  %10369 = and i1 %10362, %10365
  %10370 = or i1 %10366, %10367
  %10371 = or i1 %10368, %10369
  %10372 = xor i1 %10370, %10371
  %10373 = or i1 %10363, %10364
  %10374 = xor i1 %10373, true
  %10375 = or i1 true, %10365
  %10376 = and i1 %10374, %10375
  %10377 = or i1 %10372, %10376
  %10378 = or i1 %10361, %10362
  %10379 = select i1 %10377, i32 387921657, i32 1459525808
  store i32 %10379, i32* %switchVar
  br label %loopEnd

originalBB5761:                                   ; preds = %loopEntry
  %10380 = load i32, i32* %e, align 4
  %cmp2067 = icmp eq i32 %10380, 10
  store i1 %cmp2067, i1* %cmp2067.reg2mem
  %10381 = load i32, i32* @x
  %10382 = load i32, i32* @y
  %10383 = add i32 %10381, 1056165745
  %10384 = sub i32 %10383, 1
  %10385 = sub i32 %10384, 1056165745
  %10386 = sub i32 %10381, 1
  %10387 = mul i32 %10381, %10385
  %10388 = urem i32 %10387, 2
  %10389 = icmp eq i32 %10388, 0
  %10390 = icmp slt i32 %10382, 10
  %10391 = and i1 %10389, %10390
  %10392 = xor i1 %10389, %10390
  %10393 = or i1 %10391, %10392
  %10394 = or i1 %10389, %10390
  %10395 = select i1 %10393, i32 -1657200862, i32 1459525808
  store i32 %10395, i32* %switchVar
  br label %loopEnd

originalBBpart25763:                              ; preds = %loopEntry
  %cmp2067.reload = load volatile i1, i1* %cmp2067.reg2mem
  %10396 = select i1 %cmp2067.reload, i32 1207670955, i32 2041352260
  store i32 %10396, i32* %switchVar
  br label %loopEnd

if.then2068:                                      ; preds = %loopEntry
  %10397 = load i32, i32* %s, align 4
  %10398 = add i32 %10397, -1730275814
  %10399 = add i32 %10398, 30
  %10400 = sub i32 %10399, -1730275814
  %add2069 = add nsw i32 %10397, 30
  %10401 = sub i32 0, %10400
  %10402 = sub i32 0, 31
  %10403 = add i32 %10401, %10402
  %10404 = sub i32 0, %10403
  %add2070 = add nsw i32 %10400, 31
  %10405 = sub i32 0, %10404
  %10406 = sub i32 0, 31
  %10407 = add i32 %10405, %10406
  %10408 = sub i32 0, %10407
  %add2071 = add nsw i32 %10404, 31
  %10409 = sub i32 0, %10408
  %10410 = sub i32 0, 30
  %10411 = add i32 %10409, %10410
  %10412 = sub i32 0, %10411
  %add2072 = add nsw i32 %10408, 30
  %10413 = load i32, i32* %f, align 4
  %10414 = add i32 %10412, -1972194982
  %10415 = add i32 %10414, %10413
  %10416 = sub i32 %10415, -1972194982
  %add2073 = add nsw i32 %10412, %10413
  %10417 = load i32, i32* %c, align 4
  %10418 = sub i32 0, %10417
  %10419 = add i32 %10416, %10418
  %sub2074 = sub nsw i32 %10416, %10417
  store i32 %10419, i32* %s, align 4
  %10420 = load i32, i32* %s, align 4
  %call2075 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10420)
  store i32 2041352260, i32* %switchVar
  br label %loopEnd

if.end2076:                                       ; preds = %loopEntry
  %10421 = load i32, i32* @x
  %10422 = load i32, i32* @y
  %10423 = sub i32 %10421, 1177274161
  %10424 = sub i32 %10423, 1
  %10425 = add i32 %10424, 1177274161
  %10426 = sub i32 %10421, 1
  %10427 = mul i32 %10421, %10425
  %10428 = urem i32 %10427, 2
  %10429 = icmp eq i32 %10428, 0
  %10430 = icmp slt i32 %10422, 10
  %10431 = and i1 %10429, %10430
  %10432 = xor i1 %10429, %10430
  %10433 = or i1 %10431, %10432
  %10434 = or i1 %10429, %10430
  %10435 = select i1 %10433, i32 609328423, i32 -953034572
  store i32 %10435, i32* %switchVar
  br label %loopEnd

originalBB5765:                                   ; preds = %loopEntry
  %10436 = load i32, i32* %e, align 4
  %cmp2077 = icmp eq i32 %10436, 11
  store i1 %cmp2077, i1* %cmp2077.reg2mem
  %10437 = load i32, i32* @x
  %10438 = load i32, i32* @y
  %10439 = sub i32 %10437, 1380386421
  %10440 = sub i32 %10439, 1
  %10441 = add i32 %10440, 1380386421
  %10442 = sub i32 %10437, 1
  %10443 = mul i32 %10437, %10441
  %10444 = urem i32 %10443, 2
  %10445 = icmp eq i32 %10444, 0
  %10446 = icmp slt i32 %10438, 10
  %10447 = xor i1 %10445, true
  %10448 = xor i1 %10446, true
  %10449 = xor i1 false, true
  %10450 = and i1 %10447, false
  %10451 = and i1 %10445, %10449
  %10452 = and i1 %10448, false
  %10453 = and i1 %10446, %10449
  %10454 = or i1 %10450, %10451
  %10455 = or i1 %10452, %10453
  %10456 = xor i1 %10454, %10455
  %10457 = or i1 %10447, %10448
  %10458 = xor i1 %10457, true
  %10459 = or i1 false, %10449
  %10460 = and i1 %10458, %10459
  %10461 = or i1 %10456, %10460
  %10462 = or i1 %10445, %10446
  %10463 = select i1 %10461, i32 -785628950, i32 -953034572
  store i32 %10463, i32* %switchVar
  br label %loopEnd

originalBBpart25767:                              ; preds = %loopEntry
  %cmp2077.reload = load volatile i1, i1* %cmp2077.reg2mem
  %10464 = select i1 %cmp2077.reload, i32 -1247282483, i32 32654993
  store i32 %10464, i32* %switchVar
  br label %loopEnd

if.then2078:                                      ; preds = %loopEntry
  %10465 = load i32, i32* @x
  %10466 = load i32, i32* @y
  %10467 = sub i32 %10465, -2135497034
  %10468 = sub i32 %10467, 1
  %10469 = add i32 %10468, -2135497034
  %10470 = sub i32 %10465, 1
  %10471 = mul i32 %10465, %10469
  %10472 = urem i32 %10471, 2
  %10473 = icmp eq i32 %10472, 0
  %10474 = icmp slt i32 %10466, 10
  %10475 = xor i1 %10473, true
  %10476 = xor i1 %10474, true
  %10477 = xor i1 true, true
  %10478 = and i1 %10475, true
  %10479 = and i1 %10473, %10477
  %10480 = and i1 %10476, true
  %10481 = and i1 %10474, %10477
  %10482 = or i1 %10478, %10479
  %10483 = or i1 %10480, %10481
  %10484 = xor i1 %10482, %10483
  %10485 = or i1 %10475, %10476
  %10486 = xor i1 %10485, true
  %10487 = or i1 true, %10477
  %10488 = and i1 %10486, %10487
  %10489 = or i1 %10484, %10488
  %10490 = or i1 %10473, %10474
  %10491 = select i1 %10489, i32 1325271283, i32 1322541535
  store i32 %10491, i32* %switchVar
  br label %loopEnd

originalBB5769:                                   ; preds = %loopEntry
  %10492 = load i32, i32* %s, align 4
  %10493 = sub i32 %10492, 2006475231
  %10494 = add i32 %10493, 30
  %10495 = add i32 %10494, 2006475231
  %add2079 = add nsw i32 %10492, 30
  %10496 = sub i32 0, %10495
  %10497 = sub i32 0, 31
  %10498 = add i32 %10496, %10497
  %10499 = sub i32 0, %10498
  %add2080 = add nsw i32 %10495, 31
  %10500 = sub i32 0, 31
  %10501 = sub i32 %10499, %10500
  %add2081 = add nsw i32 %10499, 31
  %10502 = sub i32 0, 30
  %10503 = sub i32 %10501, %10502
  %add2082 = add nsw i32 %10501, 30
  %10504 = sub i32 0, %10503
  %10505 = sub i32 0, 31
  %10506 = add i32 %10504, %10505
  %10507 = sub i32 0, %10506
  %add2083 = add nsw i32 %10503, 31
  %10508 = load i32, i32* %f, align 4
  %10509 = sub i32 %10507, -2061462618
  %10510 = add i32 %10509, %10508
  %10511 = add i32 %10510, -2061462618
  %add2084 = add nsw i32 %10507, %10508
  %10512 = load i32, i32* %c, align 4
  %10513 = sub i32 0, %10512
  %10514 = add i32 %10511, %10513
  %sub2085 = sub nsw i32 %10511, %10512
  store i32 %10514, i32* %s, align 4
  %10515 = load i32, i32* %s, align 4
  %call2086 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10515)
  %10516 = load i32, i32* @x
  %10517 = load i32, i32* @y
  %10518 = add i32 %10516, -578232616
  %10519 = sub i32 %10518, 1
  %10520 = sub i32 %10519, -578232616
  %10521 = sub i32 %10516, 1
  %10522 = mul i32 %10516, %10520
  %10523 = urem i32 %10522, 2
  %10524 = icmp eq i32 %10523, 0
  %10525 = icmp slt i32 %10517, 10
  %10526 = xor i1 %10524, true
  %10527 = xor i1 %10525, true
  %10528 = xor i1 false, true
  %10529 = and i1 %10526, false
  %10530 = and i1 %10524, %10528
  %10531 = and i1 %10527, false
  %10532 = and i1 %10525, %10528
  %10533 = or i1 %10529, %10530
  %10534 = or i1 %10531, %10532
  %10535 = xor i1 %10533, %10534
  %10536 = or i1 %10526, %10527
  %10537 = xor i1 %10536, true
  %10538 = or i1 false, %10528
  %10539 = and i1 %10537, %10538
  %10540 = or i1 %10535, %10539
  %10541 = or i1 %10524, %10525
  %10542 = select i1 %10540, i32 -448351182, i32 1322541535
  store i32 %10542, i32* %switchVar
  br label %loopEnd

originalBBpart25807:                              ; preds = %loopEntry
  store i32 32654993, i32* %switchVar
  br label %loopEnd

if.end2087:                                       ; preds = %loopEntry
  %10543 = load i32, i32* @x
  %10544 = load i32, i32* @y
  %10545 = sub i32 %10543, 1920643570
  %10546 = sub i32 %10545, 1
  %10547 = add i32 %10546, 1920643570
  %10548 = sub i32 %10543, 1
  %10549 = mul i32 %10543, %10547
  %10550 = urem i32 %10549, 2
  %10551 = icmp eq i32 %10550, 0
  %10552 = icmp slt i32 %10544, 10
  %10553 = and i1 %10551, %10552
  %10554 = xor i1 %10551, %10552
  %10555 = or i1 %10553, %10554
  %10556 = or i1 %10551, %10552
  %10557 = select i1 %10555, i32 -1833791035, i32 199468500
  store i32 %10557, i32* %switchVar
  br label %loopEnd

originalBB5809:                                   ; preds = %loopEntry
  %10558 = load i32, i32* %e, align 4
  %cmp2088 = icmp eq i32 %10558, 12
  store i1 %cmp2088, i1* %cmp2088.reg2mem
  %10559 = load i32, i32* @x
  %10560 = load i32, i32* @y
  %10561 = add i32 %10559, -568444343
  %10562 = sub i32 %10561, 1
  %10563 = sub i32 %10562, -568444343
  %10564 = sub i32 %10559, 1
  %10565 = mul i32 %10559, %10563
  %10566 = urem i32 %10565, 2
  %10567 = icmp eq i32 %10566, 0
  %10568 = icmp slt i32 %10560, 10
  %10569 = xor i1 %10567, true
  %10570 = xor i1 %10568, true
  %10571 = xor i1 false, true
  %10572 = and i1 %10569, false
  %10573 = and i1 %10567, %10571
  %10574 = and i1 %10570, false
  %10575 = and i1 %10568, %10571
  %10576 = or i1 %10572, %10573
  %10577 = or i1 %10574, %10575
  %10578 = xor i1 %10576, %10577
  %10579 = or i1 %10569, %10570
  %10580 = xor i1 %10579, true
  %10581 = or i1 false, %10571
  %10582 = and i1 %10580, %10581
  %10583 = or i1 %10578, %10582
  %10584 = or i1 %10567, %10568
  %10585 = select i1 %10583, i32 2109618678, i32 199468500
  store i32 %10585, i32* %switchVar
  br label %loopEnd

originalBBpart25811:                              ; preds = %loopEntry
  %cmp2088.reload = load volatile i1, i1* %cmp2088.reg2mem
  %10586 = select i1 %cmp2088.reload, i32 2106055629, i32 -2017440696
  store i32 %10586, i32* %switchVar
  br label %loopEnd

if.then2089:                                      ; preds = %loopEntry
  %10587 = load i32, i32* @x
  %10588 = load i32, i32* @y
  %10589 = sub i32 0, 1
  %10590 = add i32 %10587, %10589
  %10591 = sub i32 %10587, 1
  %10592 = mul i32 %10587, %10590
  %10593 = urem i32 %10592, 2
  %10594 = icmp eq i32 %10593, 0
  %10595 = icmp slt i32 %10588, 10
  %10596 = and i1 %10594, %10595
  %10597 = xor i1 %10594, %10595
  %10598 = or i1 %10596, %10597
  %10599 = or i1 %10594, %10595
  %10600 = select i1 %10598, i32 -1041769420, i32 1400680407
  store i32 %10600, i32* %switchVar
  br label %loopEnd

originalBB5813:                                   ; preds = %loopEntry
  %10601 = load i32, i32* %s, align 4
  %10602 = add i32 %10601, 1813581896
  %10603 = add i32 %10602, 30
  %10604 = sub i32 %10603, 1813581896
  %add2090 = add nsw i32 %10601, 30
  %10605 = sub i32 0, %10604
  %10606 = sub i32 0, 31
  %10607 = add i32 %10605, %10606
  %10608 = sub i32 0, %10607
  %add2091 = add nsw i32 %10604, 31
  %10609 = sub i32 0, 31
  %10610 = sub i32 %10608, %10609
  %add2092 = add nsw i32 %10608, 31
  %10611 = sub i32 0, 30
  %10612 = sub i32 %10610, %10611
  %add2093 = add nsw i32 %10610, 30
  %10613 = sub i32 0, 31
  %10614 = sub i32 %10612, %10613
  %add2094 = add nsw i32 %10612, 31
  %10615 = sub i32 0, %10614
  %10616 = sub i32 0, 30
  %10617 = add i32 %10615, %10616
  %10618 = sub i32 0, %10617
  %add2095 = add nsw i32 %10614, 30
  %10619 = load i32, i32* %f, align 4
  %10620 = sub i32 0, %10619
  %10621 = sub i32 %10618, %10620
  %add2096 = add nsw i32 %10618, %10619
  %10622 = load i32, i32* %c, align 4
  %10623 = sub i32 %10621, 1388073486
  %10624 = sub i32 %10623, %10622
  %10625 = add i32 %10624, 1388073486
  %sub2097 = sub nsw i32 %10621, %10622
  store i32 %10625, i32* %s, align 4
  %10626 = load i32, i32* %s, align 4
  %call2098 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10626)
  %10627 = load i32, i32* @x
  %10628 = load i32, i32* @y
  %10629 = add i32 %10627, 1697564328
  %10630 = sub i32 %10629, 1
  %10631 = sub i32 %10630, 1697564328
  %10632 = sub i32 %10627, 1
  %10633 = mul i32 %10627, %10631
  %10634 = urem i32 %10633, 2
  %10635 = icmp eq i32 %10634, 0
  %10636 = icmp slt i32 %10628, 10
  %10637 = and i1 %10635, %10636
  %10638 = xor i1 %10635, %10636
  %10639 = or i1 %10637, %10638
  %10640 = or i1 %10635, %10636
  %10641 = select i1 %10639, i32 846328805, i32 1400680407
  store i32 %10641, i32* %switchVar
  br label %loopEnd

originalBBpart25881:                              ; preds = %loopEntry
  store i32 -2017440696, i32* %switchVar
  br label %loopEnd

if.end2099:                                       ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.bb2100:                                        ; preds = %loopEntry
  %10642 = load i32, i32* %e, align 4
  %cmp2101 = icmp eq i32 %10642, 1
  %10643 = select i1 %cmp2101, i32 -462561746, i32 -315041583
  store i32 %10643, i32* %switchVar
  br label %loopEnd

if.then2102:                                      ; preds = %loopEntry
  %10644 = load i32, i32* @x
  %10645 = load i32, i32* @y
  %10646 = add i32 %10644, -594271803
  %10647 = sub i32 %10646, 1
  %10648 = sub i32 %10647, -594271803
  %10649 = sub i32 %10644, 1
  %10650 = mul i32 %10644, %10648
  %10651 = urem i32 %10650, 2
  %10652 = icmp eq i32 %10651, 0
  %10653 = icmp slt i32 %10645, 10
  %10654 = and i1 %10652, %10653
  %10655 = xor i1 %10652, %10653
  %10656 = or i1 %10654, %10655
  %10657 = or i1 %10652, %10653
  %10658 = select i1 %10656, i32 -1027535221, i32 -394362075
  store i32 %10658, i32* %switchVar
  br label %loopEnd

originalBB5883:                                   ; preds = %loopEntry
  %10659 = load i32, i32* %s, align 4
  %10660 = sub i32 0, 30
  %10661 = add i32 %10659, %10660
  %sub2103 = sub nsw i32 %10659, 30
  %10662 = add i32 %10661, 204747347
  %10663 = sub i32 %10662, 31
  %10664 = sub i32 %10663, 204747347
  %sub2104 = sub nsw i32 %10661, 31
  %10665 = sub i32 %10664, 1874379229
  %10666 = sub i32 %10665, 30
  %10667 = add i32 %10666, 1874379229
  %sub2105 = sub nsw i32 %10664, 30
  %10668 = sub i32 0, 31
  %10669 = add i32 %10667, %10668
  %sub2106 = sub nsw i32 %10667, 31
  %10670 = sub i32 0, 28
  %10671 = add i32 %10669, %10670
  %sub2107 = sub nsw i32 %10669, 28
  %10672 = add i32 %10671, -2029428009
  %10673 = sub i32 %10672, 31
  %10674 = sub i32 %10673, -2029428009
  %sub2108 = sub nsw i32 %10671, 31
  %10675 = load i32, i32* %f, align 4
  %10676 = sub i32 0, %10675
  %10677 = sub i32 %10674, %10676
  %add2109 = add nsw i32 %10674, %10675
  %10678 = load i32, i32* %c, align 4
  %10679 = sub i32 0, %10678
  %10680 = add i32 %10677, %10679
  %sub2110 = sub nsw i32 %10677, %10678
  store i32 %10680, i32* %s, align 4
  %10681 = load i32, i32* %s, align 4
  %call2111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10681)
  %10682 = load i32, i32* @x
  %10683 = load i32, i32* @y
  %10684 = sub i32 %10682, -652633346
  %10685 = sub i32 %10684, 1
  %10686 = add i32 %10685, -652633346
  %10687 = sub i32 %10682, 1
  %10688 = mul i32 %10682, %10686
  %10689 = urem i32 %10688, 2
  %10690 = icmp eq i32 %10689, 0
  %10691 = icmp slt i32 %10683, 10
  %10692 = xor i1 %10690, true
  %10693 = xor i1 %10691, true
  %10694 = xor i1 true, true
  %10695 = and i1 %10692, true
  %10696 = and i1 %10690, %10694
  %10697 = and i1 %10693, true
  %10698 = and i1 %10691, %10694
  %10699 = or i1 %10695, %10696
  %10700 = or i1 %10697, %10698
  %10701 = xor i1 %10699, %10700
  %10702 = or i1 %10692, %10693
  %10703 = xor i1 %10702, true
  %10704 = or i1 true, %10694
  %10705 = and i1 %10703, %10704
  %10706 = or i1 %10701, %10705
  %10707 = or i1 %10690, %10691
  %10708 = select i1 %10706, i32 245987728, i32 -394362075
  store i32 %10708, i32* %switchVar
  br label %loopEnd

originalBBpart25926:                              ; preds = %loopEntry
  store i32 -315041583, i32* %switchVar
  br label %loopEnd

if.end2112:                                       ; preds = %loopEntry
  %10709 = load i32, i32* @x
  %10710 = load i32, i32* @y
  %10711 = sub i32 %10709, 372322439
  %10712 = sub i32 %10711, 1
  %10713 = add i32 %10712, 372322439
  %10714 = sub i32 %10709, 1
  %10715 = mul i32 %10709, %10713
  %10716 = urem i32 %10715, 2
  %10717 = icmp eq i32 %10716, 0
  %10718 = icmp slt i32 %10710, 10
  %10719 = xor i1 %10717, true
  %10720 = xor i1 %10718, true
  %10721 = xor i1 true, true
  %10722 = and i1 %10719, true
  %10723 = and i1 %10717, %10721
  %10724 = and i1 %10720, true
  %10725 = and i1 %10718, %10721
  %10726 = or i1 %10722, %10723
  %10727 = or i1 %10724, %10725
  %10728 = xor i1 %10726, %10727
  %10729 = or i1 %10719, %10720
  %10730 = xor i1 %10729, true
  %10731 = or i1 true, %10721
  %10732 = and i1 %10730, %10731
  %10733 = or i1 %10728, %10732
  %10734 = or i1 %10717, %10718
  %10735 = select i1 %10733, i32 1060332048, i32 -1162984651
  store i32 %10735, i32* %switchVar
  br label %loopEnd

originalBB5928:                                   ; preds = %loopEntry
  %10736 = load i32, i32* %e, align 4
  %cmp2113 = icmp eq i32 %10736, 2
  store i1 %cmp2113, i1* %cmp2113.reg2mem
  %10737 = load i32, i32* @x
  %10738 = load i32, i32* @y
  %10739 = sub i32 %10737, -1910726415
  %10740 = sub i32 %10739, 1
  %10741 = add i32 %10740, -1910726415
  %10742 = sub i32 %10737, 1
  %10743 = mul i32 %10737, %10741
  %10744 = urem i32 %10743, 2
  %10745 = icmp eq i32 %10744, 0
  %10746 = icmp slt i32 %10738, 10
  %10747 = and i1 %10745, %10746
  %10748 = xor i1 %10745, %10746
  %10749 = or i1 %10747, %10748
  %10750 = or i1 %10745, %10746
  %10751 = select i1 %10749, i32 -167601875, i32 -1162984651
  store i32 %10751, i32* %switchVar
  br label %loopEnd

originalBBpart25930:                              ; preds = %loopEntry
  %cmp2113.reload = load volatile i1, i1* %cmp2113.reg2mem
  %10752 = select i1 %cmp2113.reload, i32 -618684229, i32 -766874844
  store i32 %10752, i32* %switchVar
  br label %loopEnd

if.then2114:                                      ; preds = %loopEntry
  %10753 = load i32, i32* %s, align 4
  %10754 = sub i32 %10753, 1150911917
  %10755 = sub i32 %10754, 30
  %10756 = add i32 %10755, 1150911917
  %sub2115 = sub nsw i32 %10753, 30
  %10757 = sub i32 0, 31
  %10758 = add i32 %10756, %10757
  %sub2116 = sub nsw i32 %10756, 31
  %10759 = add i32 %10758, -1754795158
  %10760 = sub i32 %10759, 30
  %10761 = sub i32 %10760, -1754795158
  %sub2117 = sub nsw i32 %10758, 30
  %10762 = add i32 %10761, -553601289
  %10763 = sub i32 %10762, 31
  %10764 = sub i32 %10763, -553601289
  %sub2118 = sub nsw i32 %10761, 31
  %10765 = sub i32 0, 28
  %10766 = add i32 %10764, %10765
  %sub2119 = sub nsw i32 %10764, 28
  %10767 = load i32, i32* %f, align 4
  %10768 = add i32 %10766, -677939178
  %10769 = add i32 %10768, %10767
  %10770 = sub i32 %10769, -677939178
  %add2120 = add nsw i32 %10766, %10767
  %10771 = load i32, i32* %c, align 4
  %10772 = sub i32 %10770, 834739716
  %10773 = sub i32 %10772, %10771
  %10774 = add i32 %10773, 834739716
  %sub2121 = sub nsw i32 %10770, %10771
  store i32 %10774, i32* %s, align 4
  %10775 = load i32, i32* %s, align 4
  %call2122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10775)
  store i32 -766874844, i32* %switchVar
  br label %loopEnd

if.end2123:                                       ; preds = %loopEntry
  %10776 = load i32, i32* %e, align 4
  %cmp2124 = icmp eq i32 %10776, 3
  %10777 = select i1 %cmp2124, i32 1481835629, i32 462254865
  store i32 %10777, i32* %switchVar
  br label %loopEnd

if.then2125:                                      ; preds = %loopEntry
  %10778 = load i32, i32* %s, align 4
  %10779 = add i32 %10778, -2085398750
  %10780 = sub i32 %10779, 30
  %10781 = sub i32 %10780, -2085398750
  %sub2126 = sub nsw i32 %10778, 30
  %10782 = sub i32 0, 31
  %10783 = add i32 %10781, %10782
  %sub2127 = sub nsw i32 %10781, 31
  %10784 = add i32 %10783, 1973303366
  %10785 = sub i32 %10784, 30
  %10786 = sub i32 %10785, 1973303366
  %sub2128 = sub nsw i32 %10783, 30
  %10787 = sub i32 0, 31
  %10788 = add i32 %10786, %10787
  %sub2129 = sub nsw i32 %10786, 31
  %10789 = load i32, i32* %f, align 4
  %10790 = sub i32 0, %10788
  %10791 = sub i32 0, %10789
  %10792 = add i32 %10790, %10791
  %10793 = sub i32 0, %10792
  %add2130 = add nsw i32 %10788, %10789
  %10794 = load i32, i32* %c, align 4
  %10795 = sub i32 %10793, 55132487
  %10796 = sub i32 %10795, %10794
  %10797 = add i32 %10796, 55132487
  %sub2131 = sub nsw i32 %10793, %10794
  store i32 %10797, i32* %s, align 4
  %10798 = load i32, i32* %s, align 4
  %call2132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10798)
  store i32 462254865, i32* %switchVar
  br label %loopEnd

if.end2133:                                       ; preds = %loopEntry
  %10799 = load i32, i32* %e, align 4
  %cmp2134 = icmp eq i32 %10799, 4
  %10800 = select i1 %cmp2134, i32 -1066502706, i32 1361431507
  store i32 %10800, i32* %switchVar
  br label %loopEnd

if.then2135:                                      ; preds = %loopEntry
  %10801 = load i32, i32* @x
  %10802 = load i32, i32* @y
  %10803 = sub i32 0, 1
  %10804 = add i32 %10801, %10803
  %10805 = sub i32 %10801, 1
  %10806 = mul i32 %10801, %10804
  %10807 = urem i32 %10806, 2
  %10808 = icmp eq i32 %10807, 0
  %10809 = icmp slt i32 %10802, 10
  %10810 = xor i1 %10808, true
  %10811 = xor i1 %10809, true
  %10812 = xor i1 true, true
  %10813 = and i1 %10810, true
  %10814 = and i1 %10808, %10812
  %10815 = and i1 %10811, true
  %10816 = and i1 %10809, %10812
  %10817 = or i1 %10813, %10814
  %10818 = or i1 %10815, %10816
  %10819 = xor i1 %10817, %10818
  %10820 = or i1 %10810, %10811
  %10821 = xor i1 %10820, true
  %10822 = or i1 true, %10812
  %10823 = and i1 %10821, %10822
  %10824 = or i1 %10819, %10823
  %10825 = or i1 %10808, %10809
  %10826 = select i1 %10824, i32 1434164456, i32 -1958125617
  store i32 %10826, i32* %switchVar
  br label %loopEnd

originalBB5932:                                   ; preds = %loopEntry
  %10827 = load i32, i32* %s, align 4
  %10828 = sub i32 %10827, -893300100
  %10829 = sub i32 %10828, 30
  %10830 = add i32 %10829, -893300100
  %sub2136 = sub nsw i32 %10827, 30
  %10831 = sub i32 0, 31
  %10832 = add i32 %10830, %10831
  %sub2137 = sub nsw i32 %10830, 31
  %10833 = sub i32 %10832, 1344595269
  %10834 = sub i32 %10833, 30
  %10835 = add i32 %10834, 1344595269
  %sub2138 = sub nsw i32 %10832, 30
  %10836 = load i32, i32* %f, align 4
  %10837 = sub i32 0, %10836
  %10838 = sub i32 %10835, %10837
  %add2139 = add nsw i32 %10835, %10836
  %10839 = load i32, i32* %c, align 4
  %10840 = sub i32 %10838, 1322804617
  %10841 = sub i32 %10840, %10839
  %10842 = add i32 %10841, 1322804617
  %sub2140 = sub nsw i32 %10838, %10839
  store i32 %10842, i32* %s, align 4
  %10843 = load i32, i32* %s, align 4
  %call2141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10843)
  %10844 = load i32, i32* @x
  %10845 = load i32, i32* @y
  %10846 = sub i32 %10844, 1998319705
  %10847 = sub i32 %10846, 1
  %10848 = add i32 %10847, 1998319705
  %10849 = sub i32 %10844, 1
  %10850 = mul i32 %10844, %10848
  %10851 = urem i32 %10850, 2
  %10852 = icmp eq i32 %10851, 0
  %10853 = icmp slt i32 %10845, 10
  %10854 = xor i1 %10852, true
  %10855 = xor i1 %10853, true
  %10856 = xor i1 false, true
  %10857 = and i1 %10854, false
  %10858 = and i1 %10852, %10856
  %10859 = and i1 %10855, false
  %10860 = and i1 %10853, %10856
  %10861 = or i1 %10857, %10858
  %10862 = or i1 %10859, %10860
  %10863 = xor i1 %10861, %10862
  %10864 = or i1 %10854, %10855
  %10865 = xor i1 %10864, true
  %10866 = or i1 false, %10856
  %10867 = and i1 %10865, %10866
  %10868 = or i1 %10863, %10867
  %10869 = or i1 %10852, %10853
  %10870 = select i1 %10868, i32 -536152326, i32 -1958125617
  store i32 %10870, i32* %switchVar
  br label %loopEnd

originalBBpart25974:                              ; preds = %loopEntry
  store i32 1361431507, i32* %switchVar
  br label %loopEnd

if.end2142:                                       ; preds = %loopEntry
  %10871 = load i32, i32* %e, align 4
  %cmp2143 = icmp eq i32 %10871, 5
  %10872 = select i1 %cmp2143, i32 -388403566, i32 438167056
  store i32 %10872, i32* %switchVar
  br label %loopEnd

if.then2144:                                      ; preds = %loopEntry
  %10873 = load i32, i32* @x
  %10874 = load i32, i32* @y
  %10875 = add i32 %10873, 308837348
  %10876 = sub i32 %10875, 1
  %10877 = sub i32 %10876, 308837348
  %10878 = sub i32 %10873, 1
  %10879 = mul i32 %10873, %10877
  %10880 = urem i32 %10879, 2
  %10881 = icmp eq i32 %10880, 0
  %10882 = icmp slt i32 %10874, 10
  %10883 = xor i1 %10881, true
  %10884 = xor i1 %10882, true
  %10885 = xor i1 false, true
  %10886 = and i1 %10883, false
  %10887 = and i1 %10881, %10885
  %10888 = and i1 %10884, false
  %10889 = and i1 %10882, %10885
  %10890 = or i1 %10886, %10887
  %10891 = or i1 %10888, %10889
  %10892 = xor i1 %10890, %10891
  %10893 = or i1 %10883, %10884
  %10894 = xor i1 %10893, true
  %10895 = or i1 false, %10885
  %10896 = and i1 %10894, %10895
  %10897 = or i1 %10892, %10896
  %10898 = or i1 %10881, %10882
  %10899 = select i1 %10897, i32 -544681885, i32 -404797119
  store i32 %10899, i32* %switchVar
  br label %loopEnd

originalBB5976:                                   ; preds = %loopEntry
  %10900 = load i32, i32* %s, align 4
  %10901 = add i32 %10900, 12817230
  %10902 = sub i32 %10901, 30
  %10903 = sub i32 %10902, 12817230
  %sub2145 = sub nsw i32 %10900, 30
  %10904 = sub i32 0, 31
  %10905 = add i32 %10903, %10904
  %sub2146 = sub nsw i32 %10903, 31
  %10906 = load i32, i32* %f, align 4
  %10907 = add i32 %10905, 875826785
  %10908 = add i32 %10907, %10906
  %10909 = sub i32 %10908, 875826785
  %add2147 = add nsw i32 %10905, %10906
  %10910 = load i32, i32* %c, align 4
  %10911 = add i32 %10909, 909079665
  %10912 = sub i32 %10911, %10910
  %10913 = sub i32 %10912, 909079665
  %sub2148 = sub nsw i32 %10909, %10910
  store i32 %10913, i32* %s, align 4
  %10914 = load i32, i32* %s, align 4
  %call2149 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10914)
  %10915 = load i32, i32* @x
  %10916 = load i32, i32* @y
  %10917 = sub i32 0, 1
  %10918 = add i32 %10915, %10917
  %10919 = sub i32 %10915, 1
  %10920 = mul i32 %10915, %10918
  %10921 = urem i32 %10920, 2
  %10922 = icmp eq i32 %10921, 0
  %10923 = icmp slt i32 %10916, 10
  %10924 = and i1 %10922, %10923
  %10925 = xor i1 %10922, %10923
  %10926 = or i1 %10924, %10925
  %10927 = or i1 %10922, %10923
  %10928 = select i1 %10926, i32 116258029, i32 -404797119
  store i32 %10928, i32* %switchVar
  br label %loopEnd

originalBBpart26002:                              ; preds = %loopEntry
  store i32 438167056, i32* %switchVar
  br label %loopEnd

if.end2150:                                       ; preds = %loopEntry
  %10929 = load i32, i32* %e, align 4
  %cmp2151 = icmp eq i32 %10929, 6
  %10930 = select i1 %cmp2151, i32 787375962, i32 -1251000150
  store i32 %10930, i32* %switchVar
  br label %loopEnd

if.then2152:                                      ; preds = %loopEntry
  %10931 = load i32, i32* @x
  %10932 = load i32, i32* @y
  %10933 = add i32 %10931, -1830525882
  %10934 = sub i32 %10933, 1
  %10935 = sub i32 %10934, -1830525882
  %10936 = sub i32 %10931, 1
  %10937 = mul i32 %10931, %10935
  %10938 = urem i32 %10937, 2
  %10939 = icmp eq i32 %10938, 0
  %10940 = icmp slt i32 %10932, 10
  %10941 = and i1 %10939, %10940
  %10942 = xor i1 %10939, %10940
  %10943 = or i1 %10941, %10942
  %10944 = or i1 %10939, %10940
  %10945 = select i1 %10943, i32 -1107273224, i32 862151527
  store i32 %10945, i32* %switchVar
  br label %loopEnd

originalBB6004:                                   ; preds = %loopEntry
  %10946 = load i32, i32* %s, align 4
  %10947 = add i32 %10946, 1752872193
  %10948 = sub i32 %10947, 30
  %10949 = sub i32 %10948, 1752872193
  %sub2153 = sub nsw i32 %10946, 30
  %10950 = load i32, i32* %f, align 4
  %10951 = add i32 %10949, -1267221495
  %10952 = add i32 %10951, %10950
  %10953 = sub i32 %10952, -1267221495
  %add2154 = add nsw i32 %10949, %10950
  %10954 = load i32, i32* %c, align 4
  %10955 = add i32 %10953, -1800113697
  %10956 = sub i32 %10955, %10954
  %10957 = sub i32 %10956, -1800113697
  %sub2155 = sub nsw i32 %10953, %10954
  store i32 %10957, i32* %s, align 4
  %10958 = load i32, i32* %s, align 4
  %call2156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %10958)
  %10959 = load i32, i32* @x
  %10960 = load i32, i32* @y
  %10961 = add i32 %10959, -906122875
  %10962 = sub i32 %10961, 1
  %10963 = sub i32 %10962, -906122875
  %10964 = sub i32 %10959, 1
  %10965 = mul i32 %10959, %10963
  %10966 = urem i32 %10965, 2
  %10967 = icmp eq i32 %10966, 0
  %10968 = icmp slt i32 %10960, 10
  %10969 = xor i1 %10967, true
  %10970 = xor i1 %10968, true
  %10971 = xor i1 true, true
  %10972 = and i1 %10969, true
  %10973 = and i1 %10967, %10971
  %10974 = and i1 %10970, true
  %10975 = and i1 %10968, %10971
  %10976 = or i1 %10972, %10973
  %10977 = or i1 %10974, %10975
  %10978 = xor i1 %10976, %10977
  %10979 = or i1 %10969, %10970
  %10980 = xor i1 %10979, true
  %10981 = or i1 true, %10971
  %10982 = and i1 %10980, %10981
  %10983 = or i1 %10978, %10982
  %10984 = or i1 %10967, %10968
  %10985 = select i1 %10983, i32 -1932090256, i32 862151527
  store i32 %10985, i32* %switchVar
  br label %loopEnd

originalBBpart26035:                              ; preds = %loopEntry
  store i32 -1251000150, i32* %switchVar
  br label %loopEnd

if.end2157:                                       ; preds = %loopEntry
  %10986 = load i32, i32* %e, align 4
  %cmp2158 = icmp eq i32 %10986, 8
  %10987 = select i1 %cmp2158, i32 1346244296, i32 -2082997454
  store i32 %10987, i32* %switchVar
  br label %loopEnd

if.then2159:                                      ; preds = %loopEntry
  %10988 = load i32, i32* @x
  %10989 = load i32, i32* @y
  %10990 = sub i32 %10988, 559709721
  %10991 = sub i32 %10990, 1
  %10992 = add i32 %10991, 559709721
  %10993 = sub i32 %10988, 1
  %10994 = mul i32 %10988, %10992
  %10995 = urem i32 %10994, 2
  %10996 = icmp eq i32 %10995, 0
  %10997 = icmp slt i32 %10989, 10
  %10998 = xor i1 %10996, true
  %10999 = xor i1 %10997, true
  %11000 = xor i1 false, true
  %11001 = and i1 %10998, false
  %11002 = and i1 %10996, %11000
  %11003 = and i1 %10999, false
  %11004 = and i1 %10997, %11000
  %11005 = or i1 %11001, %11002
  %11006 = or i1 %11003, %11004
  %11007 = xor i1 %11005, %11006
  %11008 = or i1 %10998, %10999
  %11009 = xor i1 %11008, true
  %11010 = or i1 false, %11000
  %11011 = and i1 %11009, %11010
  %11012 = or i1 %11007, %11011
  %11013 = or i1 %10996, %10997
  %11014 = select i1 %11012, i32 1529332866, i32 364986581
  store i32 %11014, i32* %switchVar
  br label %loopEnd

originalBB6037:                                   ; preds = %loopEntry
  %11015 = load i32, i32* %s, align 4
  %11016 = sub i32 %11015, -2015283416
  %11017 = add i32 %11016, 31
  %11018 = add i32 %11017, -2015283416
  %add2160 = add nsw i32 %11015, 31
  %11019 = load i32, i32* %f, align 4
  %11020 = sub i32 0, %11018
  %11021 = sub i32 0, %11019
  %11022 = add i32 %11020, %11021
  %11023 = sub i32 0, %11022
  %add2161 = add nsw i32 %11018, %11019
  %11024 = load i32, i32* %c, align 4
  %11025 = sub i32 0, %11024
  %11026 = add i32 %11023, %11025
  %sub2162 = sub nsw i32 %11023, %11024
  store i32 %11026, i32* %s, align 4
  %11027 = load i32, i32* %s, align 4
  %call2163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11027)
  %11028 = load i32, i32* @x
  %11029 = load i32, i32* @y
  %11030 = sub i32 0, 1
  %11031 = add i32 %11028, %11030
  %11032 = sub i32 %11028, 1
  %11033 = mul i32 %11028, %11031
  %11034 = urem i32 %11033, 2
  %11035 = icmp eq i32 %11034, 0
  %11036 = icmp slt i32 %11029, 10
  %11037 = and i1 %11035, %11036
  %11038 = xor i1 %11035, %11036
  %11039 = or i1 %11037, %11038
  %11040 = or i1 %11035, %11036
  %11041 = select i1 %11039, i32 -593650087, i32 364986581
  store i32 %11041, i32* %switchVar
  br label %loopEnd

originalBBpart26066:                              ; preds = %loopEntry
  store i32 -2082997454, i32* %switchVar
  br label %loopEnd

if.end2164:                                       ; preds = %loopEntry
  %11042 = load i32, i32* @x
  %11043 = load i32, i32* @y
  %11044 = sub i32 %11042, -1210923305
  %11045 = sub i32 %11044, 1
  %11046 = add i32 %11045, -1210923305
  %11047 = sub i32 %11042, 1
  %11048 = mul i32 %11042, %11046
  %11049 = urem i32 %11048, 2
  %11050 = icmp eq i32 %11049, 0
  %11051 = icmp slt i32 %11043, 10
  %11052 = xor i1 %11050, true
  %11053 = xor i1 %11051, true
  %11054 = xor i1 false, true
  %11055 = and i1 %11052, false
  %11056 = and i1 %11050, %11054
  %11057 = and i1 %11053, false
  %11058 = and i1 %11051, %11054
  %11059 = or i1 %11055, %11056
  %11060 = or i1 %11057, %11058
  %11061 = xor i1 %11059, %11060
  %11062 = or i1 %11052, %11053
  %11063 = xor i1 %11062, true
  %11064 = or i1 false, %11054
  %11065 = and i1 %11063, %11064
  %11066 = or i1 %11061, %11065
  %11067 = or i1 %11050, %11051
  %11068 = select i1 %11066, i32 840263231, i32 722310558
  store i32 %11068, i32* %switchVar
  br label %loopEnd

originalBB6068:                                   ; preds = %loopEntry
  %11069 = load i32, i32* %e, align 4
  %cmp2165 = icmp eq i32 %11069, 9
  store i1 %cmp2165, i1* %cmp2165.reg2mem
  %11070 = load i32, i32* @x
  %11071 = load i32, i32* @y
  %11072 = sub i32 %11070, 558355696
  %11073 = sub i32 %11072, 1
  %11074 = add i32 %11073, 558355696
  %11075 = sub i32 %11070, 1
  %11076 = mul i32 %11070, %11074
  %11077 = urem i32 %11076, 2
  %11078 = icmp eq i32 %11077, 0
  %11079 = icmp slt i32 %11071, 10
  %11080 = and i1 %11078, %11079
  %11081 = xor i1 %11078, %11079
  %11082 = or i1 %11080, %11081
  %11083 = or i1 %11078, %11079
  %11084 = select i1 %11082, i32 75588563, i32 722310558
  store i32 %11084, i32* %switchVar
  br label %loopEnd

originalBBpart26070:                              ; preds = %loopEntry
  %cmp2165.reload = load volatile i1, i1* %cmp2165.reg2mem
  %11085 = select i1 %cmp2165.reload, i32 587655488, i32 369552733
  store i32 %11085, i32* %switchVar
  br label %loopEnd

if.then2166:                                      ; preds = %loopEntry
  %11086 = load i32, i32* @x
  %11087 = load i32, i32* @y
  %11088 = sub i32 %11086, 197680246
  %11089 = sub i32 %11088, 1
  %11090 = add i32 %11089, 197680246
  %11091 = sub i32 %11086, 1
  %11092 = mul i32 %11086, %11090
  %11093 = urem i32 %11092, 2
  %11094 = icmp eq i32 %11093, 0
  %11095 = icmp slt i32 %11087, 10
  %11096 = xor i1 %11094, true
  %11097 = xor i1 %11095, true
  %11098 = xor i1 false, true
  %11099 = and i1 %11096, false
  %11100 = and i1 %11094, %11098
  %11101 = and i1 %11097, false
  %11102 = and i1 %11095, %11098
  %11103 = or i1 %11099, %11100
  %11104 = or i1 %11101, %11102
  %11105 = xor i1 %11103, %11104
  %11106 = or i1 %11096, %11097
  %11107 = xor i1 %11106, true
  %11108 = or i1 false, %11098
  %11109 = and i1 %11107, %11108
  %11110 = or i1 %11105, %11109
  %11111 = or i1 %11094, %11095
  %11112 = select i1 %11110, i32 1350273157, i32 -172121246
  store i32 %11112, i32* %switchVar
  br label %loopEnd

originalBB6072:                                   ; preds = %loopEntry
  %11113 = load i32, i32* %s, align 4
  %11114 = add i32 %11113, -788117081
  %11115 = add i32 %11114, 31
  %11116 = sub i32 %11115, -788117081
  %add2167 = add nsw i32 %11113, 31
  %11117 = sub i32 %11116, 2068458448
  %11118 = add i32 %11117, 31
  %11119 = add i32 %11118, 2068458448
  %add2168 = add nsw i32 %11116, 31
  %11120 = load i32, i32* %f, align 4
  %11121 = add i32 %11119, 1456124929
  %11122 = add i32 %11121, %11120
  %11123 = sub i32 %11122, 1456124929
  %add2169 = add nsw i32 %11119, %11120
  %11124 = load i32, i32* %c, align 4
  %11125 = add i32 %11123, -1562166863
  %11126 = sub i32 %11125, %11124
  %11127 = sub i32 %11126, -1562166863
  %sub2170 = sub nsw i32 %11123, %11124
  store i32 %11127, i32* %s, align 4
  %11128 = load i32, i32* %s, align 4
  %call2171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11128)
  %11129 = load i32, i32* @x
  %11130 = load i32, i32* @y
  %11131 = add i32 %11129, -268842103
  %11132 = sub i32 %11131, 1
  %11133 = sub i32 %11132, -268842103
  %11134 = sub i32 %11129, 1
  %11135 = mul i32 %11129, %11133
  %11136 = urem i32 %11135, 2
  %11137 = icmp eq i32 %11136, 0
  %11138 = icmp slt i32 %11130, 10
  %11139 = and i1 %11137, %11138
  %11140 = xor i1 %11137, %11138
  %11141 = or i1 %11139, %11140
  %11142 = or i1 %11137, %11138
  %11143 = select i1 %11141, i32 -1709551141, i32 -172121246
  store i32 %11143, i32* %switchVar
  br label %loopEnd

originalBBpart26105:                              ; preds = %loopEntry
  store i32 369552733, i32* %switchVar
  br label %loopEnd

if.end2172:                                       ; preds = %loopEntry
  %11144 = load i32, i32* @x
  %11145 = load i32, i32* @y
  %11146 = sub i32 0, 1
  %11147 = add i32 %11144, %11146
  %11148 = sub i32 %11144, 1
  %11149 = mul i32 %11144, %11147
  %11150 = urem i32 %11149, 2
  %11151 = icmp eq i32 %11150, 0
  %11152 = icmp slt i32 %11145, 10
  %11153 = xor i1 %11151, true
  %11154 = xor i1 %11152, true
  %11155 = xor i1 false, true
  %11156 = and i1 %11153, false
  %11157 = and i1 %11151, %11155
  %11158 = and i1 %11154, false
  %11159 = and i1 %11152, %11155
  %11160 = or i1 %11156, %11157
  %11161 = or i1 %11158, %11159
  %11162 = xor i1 %11160, %11161
  %11163 = or i1 %11153, %11154
  %11164 = xor i1 %11163, true
  %11165 = or i1 false, %11155
  %11166 = and i1 %11164, %11165
  %11167 = or i1 %11162, %11166
  %11168 = or i1 %11151, %11152
  %11169 = select i1 %11167, i32 455619043, i32 1798764166
  store i32 %11169, i32* %switchVar
  br label %loopEnd

originalBB6107:                                   ; preds = %loopEntry
  %11170 = load i32, i32* %e, align 4
  %cmp2173 = icmp eq i32 %11170, 10
  store i1 %cmp2173, i1* %cmp2173.reg2mem
  %11171 = load i32, i32* @x
  %11172 = load i32, i32* @y
  %11173 = sub i32 0, 1
  %11174 = add i32 %11171, %11173
  %11175 = sub i32 %11171, 1
  %11176 = mul i32 %11171, %11174
  %11177 = urem i32 %11176, 2
  %11178 = icmp eq i32 %11177, 0
  %11179 = icmp slt i32 %11172, 10
  %11180 = and i1 %11178, %11179
  %11181 = xor i1 %11178, %11179
  %11182 = or i1 %11180, %11181
  %11183 = or i1 %11178, %11179
  %11184 = select i1 %11182, i32 501835835, i32 1798764166
  store i32 %11184, i32* %switchVar
  br label %loopEnd

originalBBpart26109:                              ; preds = %loopEntry
  %cmp2173.reload = load volatile i1, i1* %cmp2173.reg2mem
  %11185 = select i1 %cmp2173.reload, i32 -1090295075, i32 1364631198
  store i32 %11185, i32* %switchVar
  br label %loopEnd

if.then2174:                                      ; preds = %loopEntry
  %11186 = load i32, i32* %s, align 4
  %11187 = sub i32 0, %11186
  %11188 = sub i32 0, 31
  %11189 = add i32 %11187, %11188
  %11190 = sub i32 0, %11189
  %add2175 = add nsw i32 %11186, 31
  %11191 = sub i32 0, %11190
  %11192 = sub i32 0, 31
  %11193 = add i32 %11191, %11192
  %11194 = sub i32 0, %11193
  %add2176 = add nsw i32 %11190, 31
  %11195 = sub i32 %11194, 734766914
  %11196 = add i32 %11195, 30
  %11197 = add i32 %11196, 734766914
  %add2177 = add nsw i32 %11194, 30
  %11198 = load i32, i32* %f, align 4
  %11199 = sub i32 0, %11198
  %11200 = sub i32 %11197, %11199
  %add2178 = add nsw i32 %11197, %11198
  %11201 = load i32, i32* %c, align 4
  %11202 = sub i32 %11200, -1051130592
  %11203 = sub i32 %11202, %11201
  %11204 = add i32 %11203, -1051130592
  %sub2179 = sub nsw i32 %11200, %11201
  store i32 %11204, i32* %s, align 4
  %11205 = load i32, i32* %s, align 4
  %call2180 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11205)
  store i32 1364631198, i32* %switchVar
  br label %loopEnd

if.end2181:                                       ; preds = %loopEntry
  %11206 = load i32, i32* %e, align 4
  %cmp2182 = icmp eq i32 %11206, 11
  %11207 = select i1 %cmp2182, i32 -1772493621, i32 36232525
  store i32 %11207, i32* %switchVar
  br label %loopEnd

if.then2183:                                      ; preds = %loopEntry
  %11208 = load i32, i32* @x
  %11209 = load i32, i32* @y
  %11210 = sub i32 %11208, -662546830
  %11211 = sub i32 %11210, 1
  %11212 = add i32 %11211, -662546830
  %11213 = sub i32 %11208, 1
  %11214 = mul i32 %11208, %11212
  %11215 = urem i32 %11214, 2
  %11216 = icmp eq i32 %11215, 0
  %11217 = icmp slt i32 %11209, 10
  %11218 = and i1 %11216, %11217
  %11219 = xor i1 %11216, %11217
  %11220 = or i1 %11218, %11219
  %11221 = or i1 %11216, %11217
  %11222 = select i1 %11220, i32 2085181241, i32 520177601
  store i32 %11222, i32* %switchVar
  br label %loopEnd

originalBB6111:                                   ; preds = %loopEntry
  %11223 = load i32, i32* %s, align 4
  %11224 = sub i32 0, 31
  %11225 = sub i32 %11223, %11224
  %add2184 = add nsw i32 %11223, 31
  %11226 = sub i32 0, %11225
  %11227 = sub i32 0, 31
  %11228 = add i32 %11226, %11227
  %11229 = sub i32 0, %11228
  %add2185 = add nsw i32 %11225, 31
  %11230 = add i32 %11229, -1531961849
  %11231 = add i32 %11230, 30
  %11232 = sub i32 %11231, -1531961849
  %add2186 = add nsw i32 %11229, 30
  %11233 = sub i32 0, 31
  %11234 = sub i32 %11232, %11233
  %add2187 = add nsw i32 %11232, 31
  %11235 = load i32, i32* %f, align 4
  %11236 = sub i32 0, %11235
  %11237 = sub i32 %11234, %11236
  %add2188 = add nsw i32 %11234, %11235
  %11238 = load i32, i32* %c, align 4
  %11239 = sub i32 %11237, 1665010404
  %11240 = sub i32 %11239, %11238
  %11241 = add i32 %11240, 1665010404
  %sub2189 = sub nsw i32 %11237, %11238
  store i32 %11241, i32* %s, align 4
  %11242 = load i32, i32* %s, align 4
  %call2190 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11242)
  %11243 = load i32, i32* @x
  %11244 = load i32, i32* @y
  %11245 = sub i32 0, 1
  %11246 = add i32 %11243, %11245
  %11247 = sub i32 %11243, 1
  %11248 = mul i32 %11243, %11246
  %11249 = urem i32 %11248, 2
  %11250 = icmp eq i32 %11249, 0
  %11251 = icmp slt i32 %11244, 10
  %11252 = and i1 %11250, %11251
  %11253 = xor i1 %11250, %11251
  %11254 = or i1 %11252, %11253
  %11255 = or i1 %11250, %11251
  %11256 = select i1 %11254, i32 51155560, i32 520177601
  store i32 %11256, i32* %switchVar
  br label %loopEnd

originalBBpart26179:                              ; preds = %loopEntry
  store i32 36232525, i32* %switchVar
  br label %loopEnd

if.end2191:                                       ; preds = %loopEntry
  %11257 = load i32, i32* %e, align 4
  %cmp2192 = icmp eq i32 %11257, 12
  %11258 = select i1 %cmp2192, i32 -956545321, i32 -973402796
  store i32 %11258, i32* %switchVar
  br label %loopEnd

if.then2193:                                      ; preds = %loopEntry
  %11259 = load i32, i32* %s, align 4
  %11260 = sub i32 0, 31
  %11261 = sub i32 %11259, %11260
  %add2194 = add nsw i32 %11259, 31
  %11262 = add i32 %11261, -1584519679
  %11263 = add i32 %11262, 31
  %11264 = sub i32 %11263, -1584519679
  %add2195 = add nsw i32 %11261, 31
  %11265 = sub i32 %11264, -932357466
  %11266 = add i32 %11265, 30
  %11267 = add i32 %11266, -932357466
  %add2196 = add nsw i32 %11264, 30
  %11268 = sub i32 0, 31
  %11269 = sub i32 %11267, %11268
  %add2197 = add nsw i32 %11267, 31
  %11270 = sub i32 0, 30
  %11271 = sub i32 %11269, %11270
  %add2198 = add nsw i32 %11269, 30
  %11272 = load i32, i32* %f, align 4
  %11273 = add i32 %11271, 2069796478
  %11274 = add i32 %11273, %11272
  %11275 = sub i32 %11274, 2069796478
  %add2199 = add nsw i32 %11271, %11272
  %11276 = load i32, i32* %c, align 4
  %11277 = sub i32 %11275, 1742980275
  %11278 = sub i32 %11277, %11276
  %11279 = add i32 %11278, 1742980275
  %sub2200 = sub nsw i32 %11275, %11276
  store i32 %11279, i32* %s, align 4
  %11280 = load i32, i32* %s, align 4
  %call2201 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11280)
  store i32 -973402796, i32* %switchVar
  br label %loopEnd

if.end2202:                                       ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.bb2203:                                        ; preds = %loopEntry
  %11281 = load i32, i32* %e, align 4
  %cmp2204 = icmp eq i32 %11281, 1
  %11282 = select i1 %cmp2204, i32 -446167404, i32 1735125875
  store i32 %11282, i32* %switchVar
  br label %loopEnd

if.then2205:                                      ; preds = %loopEntry
  %11283 = load i32, i32* @x
  %11284 = load i32, i32* @y
  %11285 = sub i32 0, 1
  %11286 = add i32 %11283, %11285
  %11287 = sub i32 %11283, 1
  %11288 = mul i32 %11283, %11286
  %11289 = urem i32 %11288, 2
  %11290 = icmp eq i32 %11289, 0
  %11291 = icmp slt i32 %11284, 10
  %11292 = xor i1 %11290, true
  %11293 = xor i1 %11291, true
  %11294 = xor i1 true, true
  %11295 = and i1 %11292, true
  %11296 = and i1 %11290, %11294
  %11297 = and i1 %11293, true
  %11298 = and i1 %11291, %11294
  %11299 = or i1 %11295, %11296
  %11300 = or i1 %11297, %11298
  %11301 = xor i1 %11299, %11300
  %11302 = or i1 %11292, %11293
  %11303 = xor i1 %11302, true
  %11304 = or i1 true, %11294
  %11305 = and i1 %11303, %11304
  %11306 = or i1 %11301, %11305
  %11307 = or i1 %11290, %11291
  %11308 = select i1 %11306, i32 -305275816, i32 952151903
  store i32 %11308, i32* %switchVar
  br label %loopEnd

originalBB6181:                                   ; preds = %loopEntry
  %11309 = load i32, i32* %s, align 4
  %11310 = add i32 %11309, 1595428203
  %11311 = sub i32 %11310, 31
  %11312 = sub i32 %11311, 1595428203
  %sub2206 = sub nsw i32 %11309, 31
  %11313 = sub i32 %11312, -856445087
  %11314 = sub i32 %11313, 30
  %11315 = add i32 %11314, -856445087
  %sub2207 = sub nsw i32 %11312, 30
  %11316 = sub i32 0, 31
  %11317 = add i32 %11315, %11316
  %sub2208 = sub nsw i32 %11315, 31
  %11318 = sub i32 %11317, 1518340079
  %11319 = sub i32 %11318, 30
  %11320 = add i32 %11319, 1518340079
  %sub2209 = sub nsw i32 %11317, 30
  %11321 = sub i32 %11320, -1421472530
  %11322 = sub i32 %11321, 31
  %11323 = add i32 %11322, -1421472530
  %sub2210 = sub nsw i32 %11320, 31
  %11324 = sub i32 %11323, 1796007183
  %11325 = sub i32 %11324, 28
  %11326 = add i32 %11325, 1796007183
  %sub2211 = sub nsw i32 %11323, 28
  %11327 = sub i32 0, 31
  %11328 = add i32 %11326, %11327
  %sub2212 = sub nsw i32 %11326, 31
  %11329 = load i32, i32* %f, align 4
  %11330 = add i32 %11328, -1210855414
  %11331 = add i32 %11330, %11329
  %11332 = sub i32 %11331, -1210855414
  %add2213 = add nsw i32 %11328, %11329
  %11333 = load i32, i32* %c, align 4
  %11334 = sub i32 %11332, 284733904
  %11335 = sub i32 %11334, %11333
  %11336 = add i32 %11335, 284733904
  %sub2214 = sub nsw i32 %11332, %11333
  store i32 %11336, i32* %s, align 4
  %11337 = load i32, i32* %s, align 4
  %call2215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11337)
  %11338 = load i32, i32* @x
  %11339 = load i32, i32* @y
  %11340 = sub i32 %11338, -1212164709
  %11341 = sub i32 %11340, 1
  %11342 = add i32 %11341, -1212164709
  %11343 = sub i32 %11338, 1
  %11344 = mul i32 %11338, %11342
  %11345 = urem i32 %11344, 2
  %11346 = icmp eq i32 %11345, 0
  %11347 = icmp slt i32 %11339, 10
  %11348 = and i1 %11346, %11347
  %11349 = xor i1 %11346, %11347
  %11350 = or i1 %11348, %11349
  %11351 = or i1 %11346, %11347
  %11352 = select i1 %11350, i32 -145825925, i32 952151903
  store i32 %11352, i32* %switchVar
  br label %loopEnd

originalBBpart26233:                              ; preds = %loopEntry
  store i32 1735125875, i32* %switchVar
  br label %loopEnd

if.end2216:                                       ; preds = %loopEntry
  %11353 = load i32, i32* %e, align 4
  %cmp2217 = icmp eq i32 %11353, 2
  %11354 = select i1 %cmp2217, i32 1686471428, i32 586540446
  store i32 %11354, i32* %switchVar
  br label %loopEnd

if.then2218:                                      ; preds = %loopEntry
  %11355 = load i32, i32* %s, align 4
  %11356 = sub i32 0, 31
  %11357 = add i32 %11355, %11356
  %sub2219 = sub nsw i32 %11355, 31
  %11358 = sub i32 0, 30
  %11359 = add i32 %11357, %11358
  %sub2220 = sub nsw i32 %11357, 30
  %11360 = sub i32 %11359, 1282028101
  %11361 = sub i32 %11360, 31
  %11362 = add i32 %11361, 1282028101
  %sub2221 = sub nsw i32 %11359, 31
  %11363 = sub i32 %11362, 1906173721
  %11364 = sub i32 %11363, 30
  %11365 = add i32 %11364, 1906173721
  %sub2222 = sub nsw i32 %11362, 30
  %11366 = sub i32 0, 31
  %11367 = add i32 %11365, %11366
  %sub2223 = sub nsw i32 %11365, 31
  %11368 = sub i32 0, 28
  %11369 = add i32 %11367, %11368
  %sub2224 = sub nsw i32 %11367, 28
  %11370 = load i32, i32* %f, align 4
  %11371 = sub i32 %11369, 396470486
  %11372 = add i32 %11371, %11370
  %11373 = add i32 %11372, 396470486
  %add2225 = add nsw i32 %11369, %11370
  %11374 = load i32, i32* %c, align 4
  %11375 = add i32 %11373, 1872044574
  %11376 = sub i32 %11375, %11374
  %11377 = sub i32 %11376, 1872044574
  %sub2226 = sub nsw i32 %11373, %11374
  store i32 %11377, i32* %s, align 4
  %11378 = load i32, i32* %s, align 4
  %call2227 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11378)
  store i32 586540446, i32* %switchVar
  br label %loopEnd

if.end2228:                                       ; preds = %loopEntry
  %11379 = load i32, i32* @x
  %11380 = load i32, i32* @y
  %11381 = sub i32 0, 1
  %11382 = add i32 %11379, %11381
  %11383 = sub i32 %11379, 1
  %11384 = mul i32 %11379, %11382
  %11385 = urem i32 %11384, 2
  %11386 = icmp eq i32 %11385, 0
  %11387 = icmp slt i32 %11380, 10
  %11388 = and i1 %11386, %11387
  %11389 = xor i1 %11386, %11387
  %11390 = or i1 %11388, %11389
  %11391 = or i1 %11386, %11387
  %11392 = select i1 %11390, i32 2095728487, i32 -508712304
  store i32 %11392, i32* %switchVar
  br label %loopEnd

originalBB6235:                                   ; preds = %loopEntry
  %11393 = load i32, i32* %e, align 4
  %cmp2229 = icmp eq i32 %11393, 3
  store i1 %cmp2229, i1* %cmp2229.reg2mem
  %11394 = load i32, i32* @x
  %11395 = load i32, i32* @y
  %11396 = add i32 %11394, 1792880738
  %11397 = sub i32 %11396, 1
  %11398 = sub i32 %11397, 1792880738
  %11399 = sub i32 %11394, 1
  %11400 = mul i32 %11394, %11398
  %11401 = urem i32 %11400, 2
  %11402 = icmp eq i32 %11401, 0
  %11403 = icmp slt i32 %11395, 10
  %11404 = xor i1 %11402, true
  %11405 = xor i1 %11403, true
  %11406 = xor i1 false, true
  %11407 = and i1 %11404, false
  %11408 = and i1 %11402, %11406
  %11409 = and i1 %11405, false
  %11410 = and i1 %11403, %11406
  %11411 = or i1 %11407, %11408
  %11412 = or i1 %11409, %11410
  %11413 = xor i1 %11411, %11412
  %11414 = or i1 %11404, %11405
  %11415 = xor i1 %11414, true
  %11416 = or i1 false, %11406
  %11417 = and i1 %11415, %11416
  %11418 = or i1 %11413, %11417
  %11419 = or i1 %11402, %11403
  %11420 = select i1 %11418, i32 904531211, i32 -508712304
  store i32 %11420, i32* %switchVar
  br label %loopEnd

originalBBpart26237:                              ; preds = %loopEntry
  %cmp2229.reload = load volatile i1, i1* %cmp2229.reg2mem
  %11421 = select i1 %cmp2229.reload, i32 273067509, i32 -378535378
  store i32 %11421, i32* %switchVar
  br label %loopEnd

if.then2230:                                      ; preds = %loopEntry
  %11422 = load i32, i32* %s, align 4
  %11423 = sub i32 %11422, -881409661
  %11424 = sub i32 %11423, 31
  %11425 = add i32 %11424, -881409661
  %sub2231 = sub nsw i32 %11422, 31
  %11426 = sub i32 0, 30
  %11427 = add i32 %11425, %11426
  %sub2232 = sub nsw i32 %11425, 30
  %11428 = add i32 %11427, -1797819431
  %11429 = sub i32 %11428, 31
  %11430 = sub i32 %11429, -1797819431
  %sub2233 = sub nsw i32 %11427, 31
  %11431 = sub i32 0, 30
  %11432 = add i32 %11430, %11431
  %sub2234 = sub nsw i32 %11430, 30
  %11433 = sub i32 0, 31
  %11434 = add i32 %11432, %11433
  %sub2235 = sub nsw i32 %11432, 31
  %11435 = load i32, i32* %f, align 4
  %11436 = sub i32 0, %11434
  %11437 = sub i32 0, %11435
  %11438 = add i32 %11436, %11437
  %11439 = sub i32 0, %11438
  %add2236 = add nsw i32 %11434, %11435
  %11440 = load i32, i32* %c, align 4
  %11441 = add i32 %11439, 1114817947
  %11442 = sub i32 %11441, %11440
  %11443 = sub i32 %11442, 1114817947
  %sub2237 = sub nsw i32 %11439, %11440
  store i32 %11443, i32* %s, align 4
  %11444 = load i32, i32* %s, align 4
  %call2238 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11444)
  store i32 -378535378, i32* %switchVar
  br label %loopEnd

if.end2239:                                       ; preds = %loopEntry
  %11445 = load i32, i32* %e, align 4
  %cmp2240 = icmp eq i32 %11445, 4
  %11446 = select i1 %cmp2240, i32 649971785, i32 690549741
  store i32 %11446, i32* %switchVar
  br label %loopEnd

if.then2241:                                      ; preds = %loopEntry
  %11447 = load i32, i32* @x
  %11448 = load i32, i32* @y
  %11449 = sub i32 %11447, 569315440
  %11450 = sub i32 %11449, 1
  %11451 = add i32 %11450, 569315440
  %11452 = sub i32 %11447, 1
  %11453 = mul i32 %11447, %11451
  %11454 = urem i32 %11453, 2
  %11455 = icmp eq i32 %11454, 0
  %11456 = icmp slt i32 %11448, 10
  %11457 = and i1 %11455, %11456
  %11458 = xor i1 %11455, %11456
  %11459 = or i1 %11457, %11458
  %11460 = or i1 %11455, %11456
  %11461 = select i1 %11459, i32 -677270201, i32 1488481663
  store i32 %11461, i32* %switchVar
  br label %loopEnd

originalBB6239:                                   ; preds = %loopEntry
  %11462 = load i32, i32* %s, align 4
  %11463 = sub i32 %11462, 1887794997
  %11464 = sub i32 %11463, 31
  %11465 = add i32 %11464, 1887794997
  %sub2242 = sub nsw i32 %11462, 31
  %11466 = add i32 %11465, 1036605945
  %11467 = sub i32 %11466, 30
  %11468 = sub i32 %11467, 1036605945
  %sub2243 = sub nsw i32 %11465, 30
  %11469 = sub i32 0, 31
  %11470 = add i32 %11468, %11469
  %sub2244 = sub nsw i32 %11468, 31
  %11471 = sub i32 %11470, -709774858
  %11472 = sub i32 %11471, 30
  %11473 = add i32 %11472, -709774858
  %sub2245 = sub nsw i32 %11470, 30
  %11474 = load i32, i32* %f, align 4
  %11475 = add i32 %11473, -2076761602
  %11476 = add i32 %11475, %11474
  %11477 = sub i32 %11476, -2076761602
  %add2246 = add nsw i32 %11473, %11474
  %11478 = load i32, i32* %c, align 4
  %11479 = add i32 %11477, 135122847
  %11480 = sub i32 %11479, %11478
  %11481 = sub i32 %11480, 135122847
  %sub2247 = sub nsw i32 %11477, %11478
  store i32 %11481, i32* %s, align 4
  %11482 = load i32, i32* %s, align 4
  %call2248 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11482)
  %11483 = load i32, i32* @x
  %11484 = load i32, i32* @y
  %11485 = sub i32 0, 1
  %11486 = add i32 %11483, %11485
  %11487 = sub i32 %11483, 1
  %11488 = mul i32 %11483, %11486
  %11489 = urem i32 %11488, 2
  %11490 = icmp eq i32 %11489, 0
  %11491 = icmp slt i32 %11484, 10
  %11492 = xor i1 %11490, true
  %11493 = xor i1 %11491, true
  %11494 = xor i1 false, true
  %11495 = and i1 %11492, false
  %11496 = and i1 %11490, %11494
  %11497 = and i1 %11493, false
  %11498 = and i1 %11491, %11494
  %11499 = or i1 %11495, %11496
  %11500 = or i1 %11497, %11498
  %11501 = xor i1 %11499, %11500
  %11502 = or i1 %11492, %11493
  %11503 = xor i1 %11502, true
  %11504 = or i1 false, %11494
  %11505 = and i1 %11503, %11504
  %11506 = or i1 %11501, %11505
  %11507 = or i1 %11490, %11491
  %11508 = select i1 %11506, i32 -1604694975, i32 1488481663
  store i32 %11508, i32* %switchVar
  br label %loopEnd

originalBBpart26288:                              ; preds = %loopEntry
  store i32 690549741, i32* %switchVar
  br label %loopEnd

if.end2249:                                       ; preds = %loopEntry
  %11509 = load i32, i32* %e, align 4
  %cmp2250 = icmp eq i32 %11509, 5
  %11510 = select i1 %cmp2250, i32 1504378126, i32 2043092796
  store i32 %11510, i32* %switchVar
  br label %loopEnd

if.then2251:                                      ; preds = %loopEntry
  %11511 = load i32, i32* %s, align 4
  %11512 = add i32 %11511, -961939885
  %11513 = sub i32 %11512, 31
  %11514 = sub i32 %11513, -961939885
  %sub2252 = sub nsw i32 %11511, 31
  %11515 = add i32 %11514, -1344685135
  %11516 = sub i32 %11515, 30
  %11517 = sub i32 %11516, -1344685135
  %sub2253 = sub nsw i32 %11514, 30
  %11518 = sub i32 %11517, 102353986
  %11519 = sub i32 %11518, 31
  %11520 = add i32 %11519, 102353986
  %sub2254 = sub nsw i32 %11517, 31
  %11521 = load i32, i32* %f, align 4
  %11522 = sub i32 0, %11520
  %11523 = sub i32 0, %11521
  %11524 = add i32 %11522, %11523
  %11525 = sub i32 0, %11524
  %add2255 = add nsw i32 %11520, %11521
  %11526 = load i32, i32* %c, align 4
  %11527 = add i32 %11525, 150598012
  %11528 = sub i32 %11527, %11526
  %11529 = sub i32 %11528, 150598012
  %sub2256 = sub nsw i32 %11525, %11526
  store i32 %11529, i32* %s, align 4
  %11530 = load i32, i32* %s, align 4
  %call2257 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11530)
  store i32 2043092796, i32* %switchVar
  br label %loopEnd

if.end2258:                                       ; preds = %loopEntry
  %11531 = load i32, i32* @x
  %11532 = load i32, i32* @y
  %11533 = sub i32 0, 1
  %11534 = add i32 %11531, %11533
  %11535 = sub i32 %11531, 1
  %11536 = mul i32 %11531, %11534
  %11537 = urem i32 %11536, 2
  %11538 = icmp eq i32 %11537, 0
  %11539 = icmp slt i32 %11532, 10
  %11540 = xor i1 %11538, true
  %11541 = xor i1 %11539, true
  %11542 = xor i1 false, true
  %11543 = and i1 %11540, false
  %11544 = and i1 %11538, %11542
  %11545 = and i1 %11541, false
  %11546 = and i1 %11539, %11542
  %11547 = or i1 %11543, %11544
  %11548 = or i1 %11545, %11546
  %11549 = xor i1 %11547, %11548
  %11550 = or i1 %11540, %11541
  %11551 = xor i1 %11550, true
  %11552 = or i1 false, %11542
  %11553 = and i1 %11551, %11552
  %11554 = or i1 %11549, %11553
  %11555 = or i1 %11538, %11539
  %11556 = select i1 %11554, i32 2061015294, i32 1267679392
  store i32 %11556, i32* %switchVar
  br label %loopEnd

originalBB6290:                                   ; preds = %loopEntry
  %11557 = load i32, i32* %e, align 4
  %cmp2259 = icmp eq i32 %11557, 6
  store i1 %cmp2259, i1* %cmp2259.reg2mem
  %11558 = load i32, i32* @x
  %11559 = load i32, i32* @y
  %11560 = sub i32 0, 1
  %11561 = add i32 %11558, %11560
  %11562 = sub i32 %11558, 1
  %11563 = mul i32 %11558, %11561
  %11564 = urem i32 %11563, 2
  %11565 = icmp eq i32 %11564, 0
  %11566 = icmp slt i32 %11559, 10
  %11567 = and i1 %11565, %11566
  %11568 = xor i1 %11565, %11566
  %11569 = or i1 %11567, %11568
  %11570 = or i1 %11565, %11566
  %11571 = select i1 %11569, i32 -1910876433, i32 1267679392
  store i32 %11571, i32* %switchVar
  br label %loopEnd

originalBBpart26292:                              ; preds = %loopEntry
  %cmp2259.reload = load volatile i1, i1* %cmp2259.reg2mem
  %11572 = select i1 %cmp2259.reload, i32 -865884482, i32 1273002432
  store i32 %11572, i32* %switchVar
  br label %loopEnd

if.then2260:                                      ; preds = %loopEntry
  %11573 = load i32, i32* %s, align 4
  %11574 = add i32 %11573, 1447889911
  %11575 = sub i32 %11574, 31
  %11576 = sub i32 %11575, 1447889911
  %sub2261 = sub nsw i32 %11573, 31
  %11577 = add i32 %11576, 1024786235
  %11578 = sub i32 %11577, 30
  %11579 = sub i32 %11578, 1024786235
  %sub2262 = sub nsw i32 %11576, 30
  %11580 = load i32, i32* %f, align 4
  %11581 = sub i32 %11579, -1213508390
  %11582 = add i32 %11581, %11580
  %11583 = add i32 %11582, -1213508390
  %add2263 = add nsw i32 %11579, %11580
  %11584 = load i32, i32* %c, align 4
  %11585 = sub i32 %11583, -1607224701
  %11586 = sub i32 %11585, %11584
  %11587 = add i32 %11586, -1607224701
  %sub2264 = sub nsw i32 %11583, %11584
  store i32 %11587, i32* %s, align 4
  %11588 = load i32, i32* %s, align 4
  %call2265 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11588)
  store i32 1273002432, i32* %switchVar
  br label %loopEnd

if.end2266:                                       ; preds = %loopEntry
  %11589 = load i32, i32* @x
  %11590 = load i32, i32* @y
  %11591 = add i32 %11589, 2118218032
  %11592 = sub i32 %11591, 1
  %11593 = sub i32 %11592, 2118218032
  %11594 = sub i32 %11589, 1
  %11595 = mul i32 %11589, %11593
  %11596 = urem i32 %11595, 2
  %11597 = icmp eq i32 %11596, 0
  %11598 = icmp slt i32 %11590, 10
  %11599 = and i1 %11597, %11598
  %11600 = xor i1 %11597, %11598
  %11601 = or i1 %11599, %11600
  %11602 = or i1 %11597, %11598
  %11603 = select i1 %11601, i32 -1457616969, i32 -1441253651
  store i32 %11603, i32* %switchVar
  br label %loopEnd

originalBB6294:                                   ; preds = %loopEntry
  %11604 = load i32, i32* %e, align 4
  %cmp2267 = icmp eq i32 %11604, 7
  store i1 %cmp2267, i1* %cmp2267.reg2mem
  %11605 = load i32, i32* @x
  %11606 = load i32, i32* @y
  %11607 = sub i32 %11605, -2131001099
  %11608 = sub i32 %11607, 1
  %11609 = add i32 %11608, -2131001099
  %11610 = sub i32 %11605, 1
  %11611 = mul i32 %11605, %11609
  %11612 = urem i32 %11611, 2
  %11613 = icmp eq i32 %11612, 0
  %11614 = icmp slt i32 %11606, 10
  %11615 = xor i1 %11613, true
  %11616 = xor i1 %11614, true
  %11617 = xor i1 false, true
  %11618 = and i1 %11615, false
  %11619 = and i1 %11613, %11617
  %11620 = and i1 %11616, false
  %11621 = and i1 %11614, %11617
  %11622 = or i1 %11618, %11619
  %11623 = or i1 %11620, %11621
  %11624 = xor i1 %11622, %11623
  %11625 = or i1 %11615, %11616
  %11626 = xor i1 %11625, true
  %11627 = or i1 false, %11617
  %11628 = and i1 %11626, %11627
  %11629 = or i1 %11624, %11628
  %11630 = or i1 %11613, %11614
  %11631 = select i1 %11629, i32 1742239151, i32 -1441253651
  store i32 %11631, i32* %switchVar
  br label %loopEnd

originalBBpart26296:                              ; preds = %loopEntry
  %cmp2267.reload = load volatile i1, i1* %cmp2267.reg2mem
  %11632 = select i1 %cmp2267.reload, i32 -750253192, i32 283554169
  store i32 %11632, i32* %switchVar
  br label %loopEnd

if.then2268:                                      ; preds = %loopEntry
  %11633 = load i32, i32* @x
  %11634 = load i32, i32* @y
  %11635 = sub i32 0, 1
  %11636 = add i32 %11633, %11635
  %11637 = sub i32 %11633, 1
  %11638 = mul i32 %11633, %11636
  %11639 = urem i32 %11638, 2
  %11640 = icmp eq i32 %11639, 0
  %11641 = icmp slt i32 %11634, 10
  %11642 = xor i1 %11640, true
  %11643 = xor i1 %11641, true
  %11644 = xor i1 false, true
  %11645 = and i1 %11642, false
  %11646 = and i1 %11640, %11644
  %11647 = and i1 %11643, false
  %11648 = and i1 %11641, %11644
  %11649 = or i1 %11645, %11646
  %11650 = or i1 %11647, %11648
  %11651 = xor i1 %11649, %11650
  %11652 = or i1 %11642, %11643
  %11653 = xor i1 %11652, true
  %11654 = or i1 false, %11644
  %11655 = and i1 %11653, %11654
  %11656 = or i1 %11651, %11655
  %11657 = or i1 %11640, %11641
  %11658 = select i1 %11656, i32 -1769373257, i32 -1941594624
  store i32 %11658, i32* %switchVar
  br label %loopEnd

originalBB6298:                                   ; preds = %loopEntry
  %11659 = load i32, i32* %s, align 4
  %11660 = sub i32 %11659, 1462974634
  %11661 = sub i32 %11660, 31
  %11662 = add i32 %11661, 1462974634
  %sub2269 = sub nsw i32 %11659, 31
  %11663 = load i32, i32* %f, align 4
  %11664 = add i32 %11662, -390499888
  %11665 = add i32 %11664, %11663
  %11666 = sub i32 %11665, -390499888
  %add2270 = add nsw i32 %11662, %11663
  %11667 = load i32, i32* %c, align 4
  %11668 = add i32 %11666, 49871301
  %11669 = sub i32 %11668, %11667
  %11670 = sub i32 %11669, 49871301
  %sub2271 = sub nsw i32 %11666, %11667
  store i32 %11670, i32* %s, align 4
  %11671 = load i32, i32* %s, align 4
  %call2272 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11671)
  %11672 = load i32, i32* @x
  %11673 = load i32, i32* @y
  %11674 = sub i32 %11672, -2021375983
  %11675 = sub i32 %11674, 1
  %11676 = add i32 %11675, -2021375983
  %11677 = sub i32 %11672, 1
  %11678 = mul i32 %11672, %11676
  %11679 = urem i32 %11678, 2
  %11680 = icmp eq i32 %11679, 0
  %11681 = icmp slt i32 %11673, 10
  %11682 = and i1 %11680, %11681
  %11683 = xor i1 %11680, %11681
  %11684 = or i1 %11682, %11683
  %11685 = or i1 %11680, %11681
  %11686 = select i1 %11684, i32 2119098433, i32 -1941594624
  store i32 %11686, i32* %switchVar
  br label %loopEnd

originalBBpart26315:                              ; preds = %loopEntry
  store i32 283554169, i32* %switchVar
  br label %loopEnd

if.end2273:                                       ; preds = %loopEntry
  %11687 = load i32, i32* %e, align 4
  %cmp2274 = icmp eq i32 %11687, 9
  %11688 = select i1 %cmp2274, i32 245420293, i32 -1924352367
  store i32 %11688, i32* %switchVar
  br label %loopEnd

if.then2275:                                      ; preds = %loopEntry
  %11689 = load i32, i32* %s, align 4
  %11690 = sub i32 0, 31
  %11691 = sub i32 %11689, %11690
  %add2276 = add nsw i32 %11689, 31
  %11692 = load i32, i32* %f, align 4
  %11693 = sub i32 %11691, -959509471
  %11694 = add i32 %11693, %11692
  %11695 = add i32 %11694, -959509471
  %add2277 = add nsw i32 %11691, %11692
  %11696 = load i32, i32* %c, align 4
  %11697 = sub i32 0, %11696
  %11698 = add i32 %11695, %11697
  %sub2278 = sub nsw i32 %11695, %11696
  store i32 %11698, i32* %s, align 4
  %11699 = load i32, i32* %s, align 4
  %call2279 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11699)
  store i32 -1924352367, i32* %switchVar
  br label %loopEnd

if.end2280:                                       ; preds = %loopEntry
  %11700 = load i32, i32* %e, align 4
  %cmp2281 = icmp eq i32 %11700, 10
  %11701 = select i1 %cmp2281, i32 1133938866, i32 1729010585
  store i32 %11701, i32* %switchVar
  br label %loopEnd

if.then2282:                                      ; preds = %loopEntry
  %11702 = load i32, i32* %s, align 4
  %11703 = sub i32 0, %11702
  %11704 = sub i32 0, 31
  %11705 = add i32 %11703, %11704
  %11706 = sub i32 0, %11705
  %add2283 = add nsw i32 %11702, 31
  %11707 = add i32 %11706, 195360364
  %11708 = add i32 %11707, 30
  %11709 = sub i32 %11708, 195360364
  %add2284 = add nsw i32 %11706, 30
  %11710 = load i32, i32* %f, align 4
  %11711 = sub i32 0, %11710
  %11712 = sub i32 %11709, %11711
  %add2285 = add nsw i32 %11709, %11710
  %11713 = load i32, i32* %c, align 4
  %11714 = sub i32 0, %11713
  %11715 = add i32 %11712, %11714
  %sub2286 = sub nsw i32 %11712, %11713
  store i32 %11715, i32* %s, align 4
  %11716 = load i32, i32* %s, align 4
  %call2287 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11716)
  store i32 1729010585, i32* %switchVar
  br label %loopEnd

if.end2288:                                       ; preds = %loopEntry
  %11717 = load i32, i32* %e, align 4
  %cmp2289 = icmp eq i32 %11717, 11
  %11718 = select i1 %cmp2289, i32 -916210600, i32 1688751975
  store i32 %11718, i32* %switchVar
  br label %loopEnd

if.then2290:                                      ; preds = %loopEntry
  %11719 = load i32, i32* %s, align 4
  %11720 = sub i32 0, %11719
  %11721 = sub i32 0, 31
  %11722 = add i32 %11720, %11721
  %11723 = sub i32 0, %11722
  %add2291 = add nsw i32 %11719, 31
  %11724 = sub i32 0, %11723
  %11725 = sub i32 0, 30
  %11726 = add i32 %11724, %11725
  %11727 = sub i32 0, %11726
  %add2292 = add nsw i32 %11723, 30
  %11728 = sub i32 0, %11727
  %11729 = sub i32 0, 31
  %11730 = add i32 %11728, %11729
  %11731 = sub i32 0, %11730
  %add2293 = add nsw i32 %11727, 31
  %11732 = load i32, i32* %f, align 4
  %11733 = sub i32 0, %11732
  %11734 = sub i32 %11731, %11733
  %add2294 = add nsw i32 %11731, %11732
  %11735 = load i32, i32* %c, align 4
  %11736 = sub i32 %11734, 674700860
  %11737 = sub i32 %11736, %11735
  %11738 = add i32 %11737, 674700860
  %sub2295 = sub nsw i32 %11734, %11735
  store i32 %11738, i32* %s, align 4
  %11739 = load i32, i32* %s, align 4
  %call2296 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11739)
  store i32 1688751975, i32* %switchVar
  br label %loopEnd

if.end2297:                                       ; preds = %loopEntry
  %11740 = load i32, i32* @x
  %11741 = load i32, i32* @y
  %11742 = add i32 %11740, 1107213175
  %11743 = sub i32 %11742, 1
  %11744 = sub i32 %11743, 1107213175
  %11745 = sub i32 %11740, 1
  %11746 = mul i32 %11740, %11744
  %11747 = urem i32 %11746, 2
  %11748 = icmp eq i32 %11747, 0
  %11749 = icmp slt i32 %11741, 10
  %11750 = xor i1 %11748, true
  %11751 = xor i1 %11749, true
  %11752 = xor i1 true, true
  %11753 = and i1 %11750, true
  %11754 = and i1 %11748, %11752
  %11755 = and i1 %11751, true
  %11756 = and i1 %11749, %11752
  %11757 = or i1 %11753, %11754
  %11758 = or i1 %11755, %11756
  %11759 = xor i1 %11757, %11758
  %11760 = or i1 %11750, %11751
  %11761 = xor i1 %11760, true
  %11762 = or i1 true, %11752
  %11763 = and i1 %11761, %11762
  %11764 = or i1 %11759, %11763
  %11765 = or i1 %11748, %11749
  %11766 = select i1 %11764, i32 214321737, i32 1389655160
  store i32 %11766, i32* %switchVar
  br label %loopEnd

originalBB6317:                                   ; preds = %loopEntry
  %11767 = load i32, i32* %e, align 4
  %cmp2298 = icmp eq i32 %11767, 12
  store i1 %cmp2298, i1* %cmp2298.reg2mem
  %11768 = load i32, i32* @x
  %11769 = load i32, i32* @y
  %11770 = add i32 %11768, -717410106
  %11771 = sub i32 %11770, 1
  %11772 = sub i32 %11771, -717410106
  %11773 = sub i32 %11768, 1
  %11774 = mul i32 %11768, %11772
  %11775 = urem i32 %11774, 2
  %11776 = icmp eq i32 %11775, 0
  %11777 = icmp slt i32 %11769, 10
  %11778 = xor i1 %11776, true
  %11779 = xor i1 %11777, true
  %11780 = xor i1 true, true
  %11781 = and i1 %11778, true
  %11782 = and i1 %11776, %11780
  %11783 = and i1 %11779, true
  %11784 = and i1 %11777, %11780
  %11785 = or i1 %11781, %11782
  %11786 = or i1 %11783, %11784
  %11787 = xor i1 %11785, %11786
  %11788 = or i1 %11778, %11779
  %11789 = xor i1 %11788, true
  %11790 = or i1 true, %11780
  %11791 = and i1 %11789, %11790
  %11792 = or i1 %11787, %11791
  %11793 = or i1 %11776, %11777
  %11794 = select i1 %11792, i32 -516816391, i32 1389655160
  store i32 %11794, i32* %switchVar
  br label %loopEnd

originalBBpart26319:                              ; preds = %loopEntry
  %cmp2298.reload = load volatile i1, i1* %cmp2298.reg2mem
  %11795 = select i1 %cmp2298.reload, i32 -168152812, i32 -1013753951
  store i32 %11795, i32* %switchVar
  br label %loopEnd

if.then2299:                                      ; preds = %loopEntry
  %11796 = load i32, i32* @x
  %11797 = load i32, i32* @y
  %11798 = add i32 %11796, -1254587719
  %11799 = sub i32 %11798, 1
  %11800 = sub i32 %11799, -1254587719
  %11801 = sub i32 %11796, 1
  %11802 = mul i32 %11796, %11800
  %11803 = urem i32 %11802, 2
  %11804 = icmp eq i32 %11803, 0
  %11805 = icmp slt i32 %11797, 10
  %11806 = and i1 %11804, %11805
  %11807 = xor i1 %11804, %11805
  %11808 = or i1 %11806, %11807
  %11809 = or i1 %11804, %11805
  %11810 = select i1 %11808, i32 654866151, i32 1912500025
  store i32 %11810, i32* %switchVar
  br label %loopEnd

originalBB6321:                                   ; preds = %loopEntry
  %11811 = load i32, i32* %s, align 4
  %11812 = sub i32 0, 31
  %11813 = sub i32 %11811, %11812
  %add2300 = add nsw i32 %11811, 31
  %11814 = add i32 %11813, 713873475
  %11815 = add i32 %11814, 30
  %11816 = sub i32 %11815, 713873475
  %add2301 = add nsw i32 %11813, 30
  %11817 = sub i32 0, 31
  %11818 = sub i32 %11816, %11817
  %add2302 = add nsw i32 %11816, 31
  %11819 = sub i32 0, 30
  %11820 = sub i32 %11818, %11819
  %add2303 = add nsw i32 %11818, 30
  %11821 = load i32, i32* %f, align 4
  %11822 = sub i32 0, %11821
  %11823 = sub i32 %11820, %11822
  %add2304 = add nsw i32 %11820, %11821
  %11824 = load i32, i32* %c, align 4
  %11825 = sub i32 0, %11824
  %11826 = add i32 %11823, %11825
  %sub2305 = sub nsw i32 %11823, %11824
  store i32 %11826, i32* %s, align 4
  %11827 = load i32, i32* %s, align 4
  %call2306 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11827)
  %11828 = load i32, i32* @x
  %11829 = load i32, i32* @y
  %11830 = sub i32 %11828, 544106516
  %11831 = sub i32 %11830, 1
  %11832 = add i32 %11831, 544106516
  %11833 = sub i32 %11828, 1
  %11834 = mul i32 %11828, %11832
  %11835 = urem i32 %11834, 2
  %11836 = icmp eq i32 %11835, 0
  %11837 = icmp slt i32 %11829, 10
  %11838 = and i1 %11836, %11837
  %11839 = xor i1 %11836, %11837
  %11840 = or i1 %11838, %11839
  %11841 = or i1 %11836, %11837
  %11842 = select i1 %11840, i32 -1601666764, i32 1912500025
  store i32 %11842, i32* %switchVar
  br label %loopEnd

originalBBpart26349:                              ; preds = %loopEntry
  store i32 -1013753951, i32* %switchVar
  br label %loopEnd

if.end2307:                                       ; preds = %loopEntry
  %11843 = load i32, i32* @x
  %11844 = load i32, i32* @y
  %11845 = sub i32 0, 1
  %11846 = add i32 %11843, %11845
  %11847 = sub i32 %11843, 1
  %11848 = mul i32 %11843, %11846
  %11849 = urem i32 %11848, 2
  %11850 = icmp eq i32 %11849, 0
  %11851 = icmp slt i32 %11844, 10
  %11852 = xor i1 %11850, true
  %11853 = xor i1 %11851, true
  %11854 = xor i1 true, true
  %11855 = and i1 %11852, true
  %11856 = and i1 %11850, %11854
  %11857 = and i1 %11853, true
  %11858 = and i1 %11851, %11854
  %11859 = or i1 %11855, %11856
  %11860 = or i1 %11857, %11858
  %11861 = xor i1 %11859, %11860
  %11862 = or i1 %11852, %11853
  %11863 = xor i1 %11862, true
  %11864 = or i1 true, %11854
  %11865 = and i1 %11863, %11864
  %11866 = or i1 %11861, %11865
  %11867 = or i1 %11850, %11851
  %11868 = select i1 %11866, i32 -751300785, i32 -1281057075
  store i32 %11868, i32* %switchVar
  br label %loopEnd

originalBB6351:                                   ; preds = %loopEntry
  %11869 = load i32, i32* @x
  %11870 = load i32, i32* @y
  %11871 = add i32 %11869, 785910362
  %11872 = sub i32 %11871, 1
  %11873 = sub i32 %11872, 785910362
  %11874 = sub i32 %11869, 1
  %11875 = mul i32 %11869, %11873
  %11876 = urem i32 %11875, 2
  %11877 = icmp eq i32 %11876, 0
  %11878 = icmp slt i32 %11870, 10
  %11879 = xor i1 %11877, true
  %11880 = xor i1 %11878, true
  %11881 = xor i1 false, true
  %11882 = and i1 %11879, false
  %11883 = and i1 %11877, %11881
  %11884 = and i1 %11880, false
  %11885 = and i1 %11878, %11881
  %11886 = or i1 %11882, %11883
  %11887 = or i1 %11884, %11885
  %11888 = xor i1 %11886, %11887
  %11889 = or i1 %11879, %11880
  %11890 = xor i1 %11889, true
  %11891 = or i1 false, %11881
  %11892 = and i1 %11890, %11891
  %11893 = or i1 %11888, %11892
  %11894 = or i1 %11877, %11878
  %11895 = select i1 %11893, i32 -739864097, i32 -1281057075
  store i32 %11895, i32* %switchVar
  br label %loopEnd

originalBBpart26353:                              ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.bb2308:                                        ; preds = %loopEntry
  %11896 = load i32, i32* %e, align 4
  %cmp2309 = icmp eq i32 %11896, 1
  %11897 = select i1 %cmp2309, i32 -1265960314, i32 1275375080
  store i32 %11897, i32* %switchVar
  br label %loopEnd

if.then2310:                                      ; preds = %loopEntry
  %11898 = load i32, i32* %s, align 4
  %11899 = sub i32 %11898, 757243678
  %11900 = sub i32 %11899, 31
  %11901 = add i32 %11900, 757243678
  %sub2311 = sub nsw i32 %11898, 31
  %11902 = sub i32 %11901, 365189766
  %11903 = sub i32 %11902, 31
  %11904 = add i32 %11903, 365189766
  %sub2312 = sub nsw i32 %11901, 31
  %11905 = sub i32 0, 30
  %11906 = add i32 %11904, %11905
  %sub2313 = sub nsw i32 %11904, 30
  %11907 = sub i32 0, 31
  %11908 = add i32 %11906, %11907
  %sub2314 = sub nsw i32 %11906, 31
  %11909 = sub i32 %11908, 1173255753
  %11910 = sub i32 %11909, 30
  %11911 = add i32 %11910, 1173255753
  %sub2315 = sub nsw i32 %11908, 30
  %11912 = sub i32 %11911, 1851038455
  %11913 = sub i32 %11912, 31
  %11914 = add i32 %11913, 1851038455
  %sub2316 = sub nsw i32 %11911, 31
  %11915 = add i32 %11914, 171378007
  %11916 = sub i32 %11915, 28
  %11917 = sub i32 %11916, 171378007
  %sub2317 = sub nsw i32 %11914, 28
  %11918 = add i32 %11917, -1892051235
  %11919 = sub i32 %11918, 31
  %11920 = sub i32 %11919, -1892051235
  %sub2318 = sub nsw i32 %11917, 31
  %11921 = load i32, i32* %f, align 4
  %11922 = add i32 %11920, -1416590722
  %11923 = add i32 %11922, %11921
  %11924 = sub i32 %11923, -1416590722
  %add2319 = add nsw i32 %11920, %11921
  %11925 = load i32, i32* %c, align 4
  %11926 = sub i32 %11924, 1608661722
  %11927 = sub i32 %11926, %11925
  %11928 = add i32 %11927, 1608661722
  %sub2320 = sub nsw i32 %11924, %11925
  store i32 %11928, i32* %s, align 4
  %11929 = load i32, i32* %s, align 4
  %call2321 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11929)
  store i32 1275375080, i32* %switchVar
  br label %loopEnd

if.end2322:                                       ; preds = %loopEntry
  %11930 = load i32, i32* %e, align 4
  %cmp2323 = icmp eq i32 %11930, 2
  %11931 = select i1 %cmp2323, i32 363140183, i32 1169786462
  store i32 %11931, i32* %switchVar
  br label %loopEnd

if.then2324:                                      ; preds = %loopEntry
  %11932 = load i32, i32* %s, align 4
  %11933 = sub i32 0, 31
  %11934 = add i32 %11932, %11933
  %sub2325 = sub nsw i32 %11932, 31
  %11935 = sub i32 0, 31
  %11936 = add i32 %11934, %11935
  %sub2326 = sub nsw i32 %11934, 31
  %11937 = sub i32 0, 30
  %11938 = add i32 %11936, %11937
  %sub2327 = sub nsw i32 %11936, 30
  %11939 = sub i32 %11938, -29048561
  %11940 = sub i32 %11939, 31
  %11941 = add i32 %11940, -29048561
  %sub2328 = sub nsw i32 %11938, 31
  %11942 = sub i32 0, 30
  %11943 = add i32 %11941, %11942
  %sub2329 = sub nsw i32 %11941, 30
  %11944 = sub i32 0, 31
  %11945 = add i32 %11943, %11944
  %sub2330 = sub nsw i32 %11943, 31
  %11946 = sub i32 %11945, 88222566
  %11947 = sub i32 %11946, 28
  %11948 = add i32 %11947, 88222566
  %sub2331 = sub nsw i32 %11945, 28
  %11949 = load i32, i32* %f, align 4
  %11950 = sub i32 %11948, 1528495379
  %11951 = add i32 %11950, %11949
  %11952 = add i32 %11951, 1528495379
  %add2332 = add nsw i32 %11948, %11949
  %11953 = load i32, i32* %c, align 4
  %11954 = sub i32 0, %11953
  %11955 = add i32 %11952, %11954
  %sub2333 = sub nsw i32 %11952, %11953
  store i32 %11955, i32* %s, align 4
  %11956 = load i32, i32* %s, align 4
  %call2334 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11956)
  store i32 1169786462, i32* %switchVar
  br label %loopEnd

if.end2335:                                       ; preds = %loopEntry
  %11957 = load i32, i32* %e, align 4
  %cmp2336 = icmp eq i32 %11957, 3
  %11958 = select i1 %cmp2336, i32 -116259428, i32 -205462107
  store i32 %11958, i32* %switchVar
  br label %loopEnd

if.then2337:                                      ; preds = %loopEntry
  %11959 = load i32, i32* %s, align 4
  %11960 = sub i32 0, 31
  %11961 = add i32 %11959, %11960
  %sub2338 = sub nsw i32 %11959, 31
  %11962 = sub i32 0, 31
  %11963 = add i32 %11961, %11962
  %sub2339 = sub nsw i32 %11961, 31
  %11964 = sub i32 0, 30
  %11965 = add i32 %11963, %11964
  %sub2340 = sub nsw i32 %11963, 30
  %11966 = sub i32 0, 31
  %11967 = add i32 %11965, %11966
  %sub2341 = sub nsw i32 %11965, 31
  %11968 = sub i32 0, 30
  %11969 = add i32 %11967, %11968
  %sub2342 = sub nsw i32 %11967, 30
  %11970 = sub i32 %11969, 1730266120
  %11971 = sub i32 %11970, 31
  %11972 = add i32 %11971, 1730266120
  %sub2343 = sub nsw i32 %11969, 31
  %11973 = load i32, i32* %f, align 4
  %11974 = sub i32 %11972, 414049990
  %11975 = add i32 %11974, %11973
  %11976 = add i32 %11975, 414049990
  %add2344 = add nsw i32 %11972, %11973
  %11977 = load i32, i32* %c, align 4
  %11978 = sub i32 %11976, -641157777
  %11979 = sub i32 %11978, %11977
  %11980 = add i32 %11979, -641157777
  %sub2345 = sub nsw i32 %11976, %11977
  store i32 %11980, i32* %s, align 4
  %11981 = load i32, i32* %s, align 4
  %call2346 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %11981)
  store i32 -205462107, i32* %switchVar
  br label %loopEnd

if.end2347:                                       ; preds = %loopEntry
  %11982 = load i32, i32* %e, align 4
  %cmp2348 = icmp eq i32 %11982, 4
  %11983 = select i1 %cmp2348, i32 256238299, i32 -1670244154
  store i32 %11983, i32* %switchVar
  br label %loopEnd

if.then2349:                                      ; preds = %loopEntry
  %11984 = load i32, i32* %s, align 4
  %11985 = sub i32 0, 31
  %11986 = add i32 %11984, %11985
  %sub2350 = sub nsw i32 %11984, 31
  %11987 = sub i32 0, 31
  %11988 = add i32 %11986, %11987
  %sub2351 = sub nsw i32 %11986, 31
  %11989 = sub i32 %11988, -638954472
  %11990 = sub i32 %11989, 30
  %11991 = add i32 %11990, -638954472
  %sub2352 = sub nsw i32 %11988, 30
  %11992 = add i32 %11991, -775117840
  %11993 = sub i32 %11992, 31
  %11994 = sub i32 %11993, -775117840
  %sub2353 = sub nsw i32 %11991, 31
  %11995 = add i32 %11994, -228427740
  %11996 = sub i32 %11995, 30
  %11997 = sub i32 %11996, -228427740
  %sub2354 = sub nsw i32 %11994, 30
  %11998 = load i32, i32* %f, align 4
  %11999 = add i32 %11997, 65840926
  %12000 = add i32 %11999, %11998
  %12001 = sub i32 %12000, 65840926
  %add2355 = add nsw i32 %11997, %11998
  %12002 = load i32, i32* %c, align 4
  %12003 = sub i32 %12001, -356029612
  %12004 = sub i32 %12003, %12002
  %12005 = add i32 %12004, -356029612
  %sub2356 = sub nsw i32 %12001, %12002
  store i32 %12005, i32* %s, align 4
  %12006 = load i32, i32* %s, align 4
  %call2357 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12006)
  store i32 -1670244154, i32* %switchVar
  br label %loopEnd

if.end2358:                                       ; preds = %loopEntry
  %12007 = load i32, i32* %e, align 4
  %cmp2359 = icmp eq i32 %12007, 5
  %12008 = select i1 %cmp2359, i32 34770917, i32 2052074664
  store i32 %12008, i32* %switchVar
  br label %loopEnd

if.then2360:                                      ; preds = %loopEntry
  %12009 = load i32, i32* %s, align 4
  %12010 = sub i32 0, 31
  %12011 = add i32 %12009, %12010
  %sub2361 = sub nsw i32 %12009, 31
  %12012 = add i32 %12011, -1706859666
  %12013 = sub i32 %12012, 31
  %12014 = sub i32 %12013, -1706859666
  %sub2362 = sub nsw i32 %12011, 31
  %12015 = add i32 %12014, -2013420665
  %12016 = sub i32 %12015, 30
  %12017 = sub i32 %12016, -2013420665
  %sub2363 = sub nsw i32 %12014, 30
  %12018 = sub i32 %12017, 1613820063
  %12019 = sub i32 %12018, 31
  %12020 = add i32 %12019, 1613820063
  %sub2364 = sub nsw i32 %12017, 31
  %12021 = load i32, i32* %f, align 4
  %12022 = sub i32 0, %12021
  %12023 = sub i32 %12020, %12022
  %add2365 = add nsw i32 %12020, %12021
  %12024 = load i32, i32* %c, align 4
  %12025 = sub i32 0, %12024
  %12026 = add i32 %12023, %12025
  %sub2366 = sub nsw i32 %12023, %12024
  store i32 %12026, i32* %s, align 4
  %12027 = load i32, i32* %s, align 4
  %call2367 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12027)
  store i32 2052074664, i32* %switchVar
  br label %loopEnd

if.end2368:                                       ; preds = %loopEntry
  %12028 = load i32, i32* %e, align 4
  %cmp2369 = icmp eq i32 %12028, 6
  %12029 = select i1 %cmp2369, i32 -1830464893, i32 -908154801
  store i32 %12029, i32* %switchVar
  br label %loopEnd

if.then2370:                                      ; preds = %loopEntry
  %12030 = load i32, i32* %s, align 4
  %12031 = sub i32 %12030, -437281162
  %12032 = sub i32 %12031, 31
  %12033 = add i32 %12032, -437281162
  %sub2371 = sub nsw i32 %12030, 31
  %12034 = sub i32 0, 31
  %12035 = add i32 %12033, %12034
  %sub2372 = sub nsw i32 %12033, 31
  %12036 = sub i32 %12035, -1639038592
  %12037 = sub i32 %12036, 30
  %12038 = add i32 %12037, -1639038592
  %sub2373 = sub nsw i32 %12035, 30
  %12039 = load i32, i32* %f, align 4
  %12040 = sub i32 0, %12038
  %12041 = sub i32 0, %12039
  %12042 = add i32 %12040, %12041
  %12043 = sub i32 0, %12042
  %add2374 = add nsw i32 %12038, %12039
  %12044 = load i32, i32* %c, align 4
  %12045 = sub i32 0, %12044
  %12046 = add i32 %12043, %12045
  %sub2375 = sub nsw i32 %12043, %12044
  store i32 %12046, i32* %s, align 4
  %12047 = load i32, i32* %s, align 4
  %call2376 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12047)
  store i32 -908154801, i32* %switchVar
  br label %loopEnd

if.end2377:                                       ; preds = %loopEntry
  %12048 = load i32, i32* %e, align 4
  %cmp2378 = icmp eq i32 %12048, 7
  %12049 = select i1 %cmp2378, i32 -1253580853, i32 1453567913
  store i32 %12049, i32* %switchVar
  br label %loopEnd

if.then2379:                                      ; preds = %loopEntry
  %12050 = load i32, i32* %s, align 4
  %12051 = sub i32 0, 31
  %12052 = add i32 %12050, %12051
  %sub2380 = sub nsw i32 %12050, 31
  %12053 = add i32 %12052, -1084001644
  %12054 = sub i32 %12053, 31
  %12055 = sub i32 %12054, -1084001644
  %sub2381 = sub nsw i32 %12052, 31
  %12056 = load i32, i32* %f, align 4
  %12057 = sub i32 %12055, 526605698
  %12058 = add i32 %12057, %12056
  %12059 = add i32 %12058, 526605698
  %add2382 = add nsw i32 %12055, %12056
  %12060 = load i32, i32* %c, align 4
  %12061 = sub i32 %12059, -552364488
  %12062 = sub i32 %12061, %12060
  %12063 = add i32 %12062, -552364488
  %sub2383 = sub nsw i32 %12059, %12060
  store i32 %12063, i32* %s, align 4
  %12064 = load i32, i32* %s, align 4
  %call2384 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12064)
  store i32 1453567913, i32* %switchVar
  br label %loopEnd

if.end2385:                                       ; preds = %loopEntry
  %12065 = load i32, i32* %e, align 4
  %cmp2386 = icmp eq i32 %12065, 8
  %12066 = select i1 %cmp2386, i32 160945801, i32 -1049462504
  store i32 %12066, i32* %switchVar
  br label %loopEnd

if.then2387:                                      ; preds = %loopEntry
  %12067 = load i32, i32* %s, align 4
  %12068 = add i32 %12067, 818727683
  %12069 = sub i32 %12068, 31
  %12070 = sub i32 %12069, 818727683
  %sub2388 = sub nsw i32 %12067, 31
  %12071 = load i32, i32* %f, align 4
  %12072 = add i32 %12070, 1832579099
  %12073 = add i32 %12072, %12071
  %12074 = sub i32 %12073, 1832579099
  %add2389 = add nsw i32 %12070, %12071
  %12075 = load i32, i32* %c, align 4
  %12076 = sub i32 %12074, 170700858
  %12077 = sub i32 %12076, %12075
  %12078 = add i32 %12077, 170700858
  %sub2390 = sub nsw i32 %12074, %12075
  store i32 %12078, i32* %s, align 4
  %12079 = load i32, i32* %s, align 4
  %call2391 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12079)
  store i32 -1049462504, i32* %switchVar
  br label %loopEnd

if.end2392:                                       ; preds = %loopEntry
  %12080 = load i32, i32* @x
  %12081 = load i32, i32* @y
  %12082 = sub i32 %12080, -920432757
  %12083 = sub i32 %12082, 1
  %12084 = add i32 %12083, -920432757
  %12085 = sub i32 %12080, 1
  %12086 = mul i32 %12080, %12084
  %12087 = urem i32 %12086, 2
  %12088 = icmp eq i32 %12087, 0
  %12089 = icmp slt i32 %12081, 10
  %12090 = xor i1 %12088, true
  %12091 = xor i1 %12089, true
  %12092 = xor i1 false, true
  %12093 = and i1 %12090, false
  %12094 = and i1 %12088, %12092
  %12095 = and i1 %12091, false
  %12096 = and i1 %12089, %12092
  %12097 = or i1 %12093, %12094
  %12098 = or i1 %12095, %12096
  %12099 = xor i1 %12097, %12098
  %12100 = or i1 %12090, %12091
  %12101 = xor i1 %12100, true
  %12102 = or i1 false, %12092
  %12103 = and i1 %12101, %12102
  %12104 = or i1 %12099, %12103
  %12105 = or i1 %12088, %12089
  %12106 = select i1 %12104, i32 -1830869030, i32 -963320905
  store i32 %12106, i32* %switchVar
  br label %loopEnd

originalBB6355:                                   ; preds = %loopEntry
  %12107 = load i32, i32* %e, align 4
  %cmp2393 = icmp eq i32 %12107, 10
  store i1 %cmp2393, i1* %cmp2393.reg2mem
  %12108 = load i32, i32* @x
  %12109 = load i32, i32* @y
  %12110 = sub i32 %12108, 1935835020
  %12111 = sub i32 %12110, 1
  %12112 = add i32 %12111, 1935835020
  %12113 = sub i32 %12108, 1
  %12114 = mul i32 %12108, %12112
  %12115 = urem i32 %12114, 2
  %12116 = icmp eq i32 %12115, 0
  %12117 = icmp slt i32 %12109, 10
  %12118 = and i1 %12116, %12117
  %12119 = xor i1 %12116, %12117
  %12120 = or i1 %12118, %12119
  %12121 = or i1 %12116, %12117
  %12122 = select i1 %12120, i32 -2023816808, i32 -963320905
  store i32 %12122, i32* %switchVar
  br label %loopEnd

originalBBpart26357:                              ; preds = %loopEntry
  %cmp2393.reload = load volatile i1, i1* %cmp2393.reg2mem
  %12123 = select i1 %cmp2393.reload, i32 -1575736524, i32 186335915
  store i32 %12123, i32* %switchVar
  br label %loopEnd

if.then2394:                                      ; preds = %loopEntry
  %12124 = load i32, i32* %s, align 4
  %12125 = sub i32 %12124, 1318999224
  %12126 = add i32 %12125, 30
  %12127 = add i32 %12126, 1318999224
  %add2395 = add nsw i32 %12124, 30
  %12128 = load i32, i32* %f, align 4
  %12129 = sub i32 0, %12128
  %12130 = sub i32 %12127, %12129
  %add2396 = add nsw i32 %12127, %12128
  %12131 = load i32, i32* %c, align 4
  %12132 = sub i32 %12130, -736959797
  %12133 = sub i32 %12132, %12131
  %12134 = add i32 %12133, -736959797
  %sub2397 = sub nsw i32 %12130, %12131
  store i32 %12134, i32* %s, align 4
  %12135 = load i32, i32* %s, align 4
  %call2398 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12135)
  store i32 186335915, i32* %switchVar
  br label %loopEnd

if.end2399:                                       ; preds = %loopEntry
  %12136 = load i32, i32* @x
  %12137 = load i32, i32* @y
  %12138 = sub i32 0, 1
  %12139 = add i32 %12136, %12138
  %12140 = sub i32 %12136, 1
  %12141 = mul i32 %12136, %12139
  %12142 = urem i32 %12141, 2
  %12143 = icmp eq i32 %12142, 0
  %12144 = icmp slt i32 %12137, 10
  %12145 = and i1 %12143, %12144
  %12146 = xor i1 %12143, %12144
  %12147 = or i1 %12145, %12146
  %12148 = or i1 %12143, %12144
  %12149 = select i1 %12147, i32 -210724751, i32 -878443146
  store i32 %12149, i32* %switchVar
  br label %loopEnd

originalBB6359:                                   ; preds = %loopEntry
  %12150 = load i32, i32* %e, align 4
  %cmp2400 = icmp eq i32 %12150, 11
  store i1 %cmp2400, i1* %cmp2400.reg2mem
  %12151 = load i32, i32* @x
  %12152 = load i32, i32* @y
  %12153 = sub i32 %12151, -119515995
  %12154 = sub i32 %12153, 1
  %12155 = add i32 %12154, -119515995
  %12156 = sub i32 %12151, 1
  %12157 = mul i32 %12151, %12155
  %12158 = urem i32 %12157, 2
  %12159 = icmp eq i32 %12158, 0
  %12160 = icmp slt i32 %12152, 10
  %12161 = and i1 %12159, %12160
  %12162 = xor i1 %12159, %12160
  %12163 = or i1 %12161, %12162
  %12164 = or i1 %12159, %12160
  %12165 = select i1 %12163, i32 -93377213, i32 -878443146
  store i32 %12165, i32* %switchVar
  br label %loopEnd

originalBBpart26361:                              ; preds = %loopEntry
  %cmp2400.reload = load volatile i1, i1* %cmp2400.reg2mem
  %12166 = select i1 %cmp2400.reload, i32 1033350440, i32 -663525852
  store i32 %12166, i32* %switchVar
  br label %loopEnd

if.then2401:                                      ; preds = %loopEntry
  %12167 = load i32, i32* @x
  %12168 = load i32, i32* @y
  %12169 = sub i32 %12167, -1882512959
  %12170 = sub i32 %12169, 1
  %12171 = add i32 %12170, -1882512959
  %12172 = sub i32 %12167, 1
  %12173 = mul i32 %12167, %12171
  %12174 = urem i32 %12173, 2
  %12175 = icmp eq i32 %12174, 0
  %12176 = icmp slt i32 %12168, 10
  %12177 = xor i1 %12175, true
  %12178 = xor i1 %12176, true
  %12179 = xor i1 true, true
  %12180 = and i1 %12177, true
  %12181 = and i1 %12175, %12179
  %12182 = and i1 %12178, true
  %12183 = and i1 %12176, %12179
  %12184 = or i1 %12180, %12181
  %12185 = or i1 %12182, %12183
  %12186 = xor i1 %12184, %12185
  %12187 = or i1 %12177, %12178
  %12188 = xor i1 %12187, true
  %12189 = or i1 true, %12179
  %12190 = and i1 %12188, %12189
  %12191 = or i1 %12186, %12190
  %12192 = or i1 %12175, %12176
  %12193 = select i1 %12191, i32 247060730, i32 1186572073
  store i32 %12193, i32* %switchVar
  br label %loopEnd

originalBB6363:                                   ; preds = %loopEntry
  %12194 = load i32, i32* %s, align 4
  %12195 = sub i32 0, %12194
  %12196 = sub i32 0, 30
  %12197 = add i32 %12195, %12196
  %12198 = sub i32 0, %12197
  %add2402 = add nsw i32 %12194, 30
  %12199 = sub i32 0, %12198
  %12200 = sub i32 0, 31
  %12201 = add i32 %12199, %12200
  %12202 = sub i32 0, %12201
  %add2403 = add nsw i32 %12198, 31
  %12203 = load i32, i32* %f, align 4
  %12204 = sub i32 0, %12203
  %12205 = sub i32 %12202, %12204
  %add2404 = add nsw i32 %12202, %12203
  %12206 = load i32, i32* %c, align 4
  %12207 = add i32 %12205, -1500876471
  %12208 = sub i32 %12207, %12206
  %12209 = sub i32 %12208, -1500876471
  %sub2405 = sub nsw i32 %12205, %12206
  store i32 %12209, i32* %s, align 4
  %12210 = load i32, i32* %s, align 4
  %call2406 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12210)
  %12211 = load i32, i32* @x
  %12212 = load i32, i32* @y
  %12213 = add i32 %12211, 353527350
  %12214 = sub i32 %12213, 1
  %12215 = sub i32 %12214, 353527350
  %12216 = sub i32 %12211, 1
  %12217 = mul i32 %12211, %12215
  %12218 = urem i32 %12217, 2
  %12219 = icmp eq i32 %12218, 0
  %12220 = icmp slt i32 %12212, 10
  %12221 = and i1 %12219, %12220
  %12222 = xor i1 %12219, %12220
  %12223 = or i1 %12221, %12222
  %12224 = or i1 %12219, %12220
  %12225 = select i1 %12223, i32 -297175081, i32 1186572073
  store i32 %12225, i32* %switchVar
  br label %loopEnd

originalBBpart26385:                              ; preds = %loopEntry
  store i32 -663525852, i32* %switchVar
  br label %loopEnd

if.end2407:                                       ; preds = %loopEntry
  %12226 = load i32, i32* @x
  %12227 = load i32, i32* @y
  %12228 = sub i32 0, 1
  %12229 = add i32 %12226, %12228
  %12230 = sub i32 %12226, 1
  %12231 = mul i32 %12226, %12229
  %12232 = urem i32 %12231, 2
  %12233 = icmp eq i32 %12232, 0
  %12234 = icmp slt i32 %12227, 10
  %12235 = and i1 %12233, %12234
  %12236 = xor i1 %12233, %12234
  %12237 = or i1 %12235, %12236
  %12238 = or i1 %12233, %12234
  %12239 = select i1 %12237, i32 1571325707, i32 1861418974
  store i32 %12239, i32* %switchVar
  br label %loopEnd

originalBB6387:                                   ; preds = %loopEntry
  %12240 = load i32, i32* %e, align 4
  %cmp2408 = icmp eq i32 %12240, 12
  store i1 %cmp2408, i1* %cmp2408.reg2mem
  %12241 = load i32, i32* @x
  %12242 = load i32, i32* @y
  %12243 = sub i32 0, 1
  %12244 = add i32 %12241, %12243
  %12245 = sub i32 %12241, 1
  %12246 = mul i32 %12241, %12244
  %12247 = urem i32 %12246, 2
  %12248 = icmp eq i32 %12247, 0
  %12249 = icmp slt i32 %12242, 10
  %12250 = and i1 %12248, %12249
  %12251 = xor i1 %12248, %12249
  %12252 = or i1 %12250, %12251
  %12253 = or i1 %12248, %12249
  %12254 = select i1 %12252, i32 1932431944, i32 1861418974
  store i32 %12254, i32* %switchVar
  br label %loopEnd

originalBBpart26389:                              ; preds = %loopEntry
  %cmp2408.reload = load volatile i1, i1* %cmp2408.reg2mem
  %12255 = select i1 %cmp2408.reload, i32 -1408875690, i32 -1684750804
  store i32 %12255, i32* %switchVar
  br label %loopEnd

if.then2409:                                      ; preds = %loopEntry
  %12256 = load i32, i32* @x
  %12257 = load i32, i32* @y
  %12258 = add i32 %12256, 136096958
  %12259 = sub i32 %12258, 1
  %12260 = sub i32 %12259, 136096958
  %12261 = sub i32 %12256, 1
  %12262 = mul i32 %12256, %12260
  %12263 = urem i32 %12262, 2
  %12264 = icmp eq i32 %12263, 0
  %12265 = icmp slt i32 %12257, 10
  %12266 = xor i1 %12264, true
  %12267 = xor i1 %12265, true
  %12268 = xor i1 false, true
  %12269 = and i1 %12266, false
  %12270 = and i1 %12264, %12268
  %12271 = and i1 %12267, false
  %12272 = and i1 %12265, %12268
  %12273 = or i1 %12269, %12270
  %12274 = or i1 %12271, %12272
  %12275 = xor i1 %12273, %12274
  %12276 = or i1 %12266, %12267
  %12277 = xor i1 %12276, true
  %12278 = or i1 false, %12268
  %12279 = and i1 %12277, %12278
  %12280 = or i1 %12275, %12279
  %12281 = or i1 %12264, %12265
  %12282 = select i1 %12280, i32 -1425410747, i32 1123202603
  store i32 %12282, i32* %switchVar
  br label %loopEnd

originalBB6391:                                   ; preds = %loopEntry
  %12283 = load i32, i32* %s, align 4
  %12284 = sub i32 0, 30
  %12285 = sub i32 %12283, %12284
  %add2410 = add nsw i32 %12283, 30
  %12286 = sub i32 0, %12285
  %12287 = sub i32 0, 31
  %12288 = add i32 %12286, %12287
  %12289 = sub i32 0, %12288
  %add2411 = add nsw i32 %12285, 31
  %12290 = sub i32 0, %12289
  %12291 = sub i32 0, 30
  %12292 = add i32 %12290, %12291
  %12293 = sub i32 0, %12292
  %add2412 = add nsw i32 %12289, 30
  %12294 = load i32, i32* %f, align 4
  %12295 = sub i32 %12293, 1624720840
  %12296 = add i32 %12295, %12294
  %12297 = add i32 %12296, 1624720840
  %add2413 = add nsw i32 %12293, %12294
  %12298 = load i32, i32* %c, align 4
  %12299 = add i32 %12297, 483884461
  %12300 = sub i32 %12299, %12298
  %12301 = sub i32 %12300, 483884461
  %sub2414 = sub nsw i32 %12297, %12298
  store i32 %12301, i32* %s, align 4
  %12302 = load i32, i32* %s, align 4
  %call2415 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12302)
  %12303 = load i32, i32* @x
  %12304 = load i32, i32* @y
  %12305 = add i32 %12303, 690548993
  %12306 = sub i32 %12305, 1
  %12307 = sub i32 %12306, 690548993
  %12308 = sub i32 %12303, 1
  %12309 = mul i32 %12303, %12307
  %12310 = urem i32 %12309, 2
  %12311 = icmp eq i32 %12310, 0
  %12312 = icmp slt i32 %12304, 10
  %12313 = xor i1 %12311, true
  %12314 = xor i1 %12312, true
  %12315 = xor i1 true, true
  %12316 = and i1 %12313, true
  %12317 = and i1 %12311, %12315
  %12318 = and i1 %12314, true
  %12319 = and i1 %12312, %12315
  %12320 = or i1 %12316, %12317
  %12321 = or i1 %12318, %12319
  %12322 = xor i1 %12320, %12321
  %12323 = or i1 %12313, %12314
  %12324 = xor i1 %12323, true
  %12325 = or i1 true, %12315
  %12326 = and i1 %12324, %12325
  %12327 = or i1 %12322, %12326
  %12328 = or i1 %12311, %12312
  %12329 = select i1 %12327, i32 324895591, i32 1123202603
  store i32 %12329, i32* %switchVar
  br label %loopEnd

originalBBpart26425:                              ; preds = %loopEntry
  store i32 -1684750804, i32* %switchVar
  br label %loopEnd

if.end2416:                                       ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.bb2417:                                        ; preds = %loopEntry
  %12330 = load i32, i32* %e, align 4
  %cmp2418 = icmp eq i32 %12330, 1
  %12331 = select i1 %cmp2418, i32 1620993186, i32 1761003391
  store i32 %12331, i32* %switchVar
  br label %loopEnd

if.then2419:                                      ; preds = %loopEntry
  %12332 = load i32, i32* @x
  %12333 = load i32, i32* @y
  %12334 = sub i32 0, 1
  %12335 = add i32 %12332, %12334
  %12336 = sub i32 %12332, 1
  %12337 = mul i32 %12332, %12335
  %12338 = urem i32 %12337, 2
  %12339 = icmp eq i32 %12338, 0
  %12340 = icmp slt i32 %12333, 10
  %12341 = xor i1 %12339, true
  %12342 = xor i1 %12340, true
  %12343 = xor i1 false, true
  %12344 = and i1 %12341, false
  %12345 = and i1 %12339, %12343
  %12346 = and i1 %12342, false
  %12347 = and i1 %12340, %12343
  %12348 = or i1 %12344, %12345
  %12349 = or i1 %12346, %12347
  %12350 = xor i1 %12348, %12349
  %12351 = or i1 %12341, %12342
  %12352 = xor i1 %12351, true
  %12353 = or i1 false, %12343
  %12354 = and i1 %12352, %12353
  %12355 = or i1 %12350, %12354
  %12356 = or i1 %12339, %12340
  %12357 = select i1 %12355, i32 -2001560270, i32 -496697900
  store i32 %12357, i32* %switchVar
  br label %loopEnd

originalBB6427:                                   ; preds = %loopEntry
  %12358 = load i32, i32* %s, align 4
  %12359 = add i32 %12358, 892493251
  %12360 = sub i32 %12359, 30
  %12361 = sub i32 %12360, 892493251
  %sub2420 = sub nsw i32 %12358, 30
  %12362 = sub i32 %12361, 1004158673
  %12363 = sub i32 %12362, 31
  %12364 = add i32 %12363, 1004158673
  %sub2421 = sub nsw i32 %12361, 31
  %12365 = sub i32 0, 31
  %12366 = add i32 %12364, %12365
  %sub2422 = sub nsw i32 %12364, 31
  %12367 = sub i32 0, 30
  %12368 = add i32 %12366, %12367
  %sub2423 = sub nsw i32 %12366, 30
  %12369 = add i32 %12368, -928988261
  %12370 = sub i32 %12369, 31
  %12371 = sub i32 %12370, -928988261
  %sub2424 = sub nsw i32 %12368, 31
  %12372 = sub i32 %12371, -1128342115
  %12373 = sub i32 %12372, 30
  %12374 = add i32 %12373, -1128342115
  %sub2425 = sub nsw i32 %12371, 30
  %12375 = sub i32 %12374, 231657635
  %12376 = sub i32 %12375, 31
  %12377 = add i32 %12376, 231657635
  %sub2426 = sub nsw i32 %12374, 31
  %12378 = sub i32 %12377, -1802524298
  %12379 = sub i32 %12378, 28
  %12380 = add i32 %12379, -1802524298
  %sub2427 = sub nsw i32 %12377, 28
  %12381 = sub i32 0, 31
  %12382 = add i32 %12380, %12381
  %sub2428 = sub nsw i32 %12380, 31
  %12383 = load i32, i32* %f, align 4
  %12384 = sub i32 0, %12383
  %12385 = sub i32 %12382, %12384
  %add2429 = add nsw i32 %12382, %12383
  %12386 = load i32, i32* %c, align 4
  %12387 = sub i32 0, %12386
  %12388 = add i32 %12385, %12387
  %sub2430 = sub nsw i32 %12385, %12386
  store i32 %12388, i32* %s, align 4
  %12389 = load i32, i32* %s, align 4
  %call2431 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12389)
  %12390 = load i32, i32* @x
  %12391 = load i32, i32* @y
  %12392 = sub i32 0, 1
  %12393 = add i32 %12390, %12392
  %12394 = sub i32 %12390, 1
  %12395 = mul i32 %12390, %12393
  %12396 = urem i32 %12395, 2
  %12397 = icmp eq i32 %12396, 0
  %12398 = icmp slt i32 %12391, 10
  %12399 = and i1 %12397, %12398
  %12400 = xor i1 %12397, %12398
  %12401 = or i1 %12399, %12400
  %12402 = or i1 %12397, %12398
  %12403 = select i1 %12401, i32 1784094859, i32 -496697900
  store i32 %12403, i32* %switchVar
  br label %loopEnd

originalBBpart26506:                              ; preds = %loopEntry
  store i32 1761003391, i32* %switchVar
  br label %loopEnd

if.end2432:                                       ; preds = %loopEntry
  %12404 = load i32, i32* %e, align 4
  %cmp2433 = icmp eq i32 %12404, 2
  %12405 = select i1 %cmp2433, i32 -1827431176, i32 -211281356
  store i32 %12405, i32* %switchVar
  br label %loopEnd

if.then2434:                                      ; preds = %loopEntry
  %12406 = load i32, i32* @x
  %12407 = load i32, i32* @y
  %12408 = add i32 %12406, -1352979518
  %12409 = sub i32 %12408, 1
  %12410 = sub i32 %12409, -1352979518
  %12411 = sub i32 %12406, 1
  %12412 = mul i32 %12406, %12410
  %12413 = urem i32 %12412, 2
  %12414 = icmp eq i32 %12413, 0
  %12415 = icmp slt i32 %12407, 10
  %12416 = xor i1 %12414, true
  %12417 = xor i1 %12415, true
  %12418 = xor i1 false, true
  %12419 = and i1 %12416, false
  %12420 = and i1 %12414, %12418
  %12421 = and i1 %12417, false
  %12422 = and i1 %12415, %12418
  %12423 = or i1 %12419, %12420
  %12424 = or i1 %12421, %12422
  %12425 = xor i1 %12423, %12424
  %12426 = or i1 %12416, %12417
  %12427 = xor i1 %12426, true
  %12428 = or i1 false, %12418
  %12429 = and i1 %12427, %12428
  %12430 = or i1 %12425, %12429
  %12431 = or i1 %12414, %12415
  %12432 = select i1 %12430, i32 997453074, i32 1122751982
  store i32 %12432, i32* %switchVar
  br label %loopEnd

originalBB6508:                                   ; preds = %loopEntry
  %12433 = load i32, i32* %s, align 4
  %12434 = sub i32 0, 30
  %12435 = add i32 %12433, %12434
  %sub2435 = sub nsw i32 %12433, 30
  %12436 = sub i32 %12435, 508030280
  %12437 = sub i32 %12436, 31
  %12438 = add i32 %12437, 508030280
  %sub2436 = sub nsw i32 %12435, 31
  %12439 = sub i32 0, 31
  %12440 = add i32 %12438, %12439
  %sub2437 = sub nsw i32 %12438, 31
  %12441 = sub i32 0, 30
  %12442 = add i32 %12440, %12441
  %sub2438 = sub nsw i32 %12440, 30
  %12443 = add i32 %12442, 1556375290
  %12444 = sub i32 %12443, 31
  %12445 = sub i32 %12444, 1556375290
  %sub2439 = sub nsw i32 %12442, 31
  %12446 = add i32 %12445, 1699979957
  %12447 = sub i32 %12446, 30
  %12448 = sub i32 %12447, 1699979957
  %sub2440 = sub nsw i32 %12445, 30
  %12449 = sub i32 %12448, -1207381442
  %12450 = sub i32 %12449, 31
  %12451 = add i32 %12450, -1207381442
  %sub2441 = sub nsw i32 %12448, 31
  %12452 = sub i32 0, 28
  %12453 = add i32 %12451, %12452
  %sub2442 = sub nsw i32 %12451, 28
  %12454 = load i32, i32* %f, align 4
  %12455 = sub i32 0, %12454
  %12456 = sub i32 %12453, %12455
  %add2443 = add nsw i32 %12453, %12454
  %12457 = load i32, i32* %c, align 4
  %12458 = sub i32 %12456, 143366324
  %12459 = sub i32 %12458, %12457
  %12460 = add i32 %12459, 143366324
  %sub2444 = sub nsw i32 %12456, %12457
  store i32 %12460, i32* %s, align 4
  %12461 = load i32, i32* %s, align 4
  %call2445 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12461)
  %12462 = load i32, i32* @x
  %12463 = load i32, i32* @y
  %12464 = sub i32 0, 1
  %12465 = add i32 %12462, %12464
  %12466 = sub i32 %12462, 1
  %12467 = mul i32 %12462, %12465
  %12468 = urem i32 %12467, 2
  %12469 = icmp eq i32 %12468, 0
  %12470 = icmp slt i32 %12463, 10
  %12471 = xor i1 %12469, true
  %12472 = xor i1 %12470, true
  %12473 = xor i1 false, true
  %12474 = and i1 %12471, false
  %12475 = and i1 %12469, %12473
  %12476 = and i1 %12472, false
  %12477 = and i1 %12470, %12473
  %12478 = or i1 %12474, %12475
  %12479 = or i1 %12476, %12477
  %12480 = xor i1 %12478, %12479
  %12481 = or i1 %12471, %12472
  %12482 = xor i1 %12481, true
  %12483 = or i1 false, %12473
  %12484 = and i1 %12482, %12483
  %12485 = or i1 %12480, %12484
  %12486 = or i1 %12469, %12470
  %12487 = select i1 %12485, i32 -719316165, i32 1122751982
  store i32 %12487, i32* %switchVar
  br label %loopEnd

originalBBpart26580:                              ; preds = %loopEntry
  store i32 -211281356, i32* %switchVar
  br label %loopEnd

if.end2446:                                       ; preds = %loopEntry
  %12488 = load i32, i32* %e, align 4
  %cmp2447 = icmp eq i32 %12488, 3
  %12489 = select i1 %cmp2447, i32 -1316021374, i32 -281598752
  store i32 %12489, i32* %switchVar
  br label %loopEnd

if.then2448:                                      ; preds = %loopEntry
  %12490 = load i32, i32* %s, align 4
  %12491 = sub i32 %12490, 33769191
  %12492 = sub i32 %12491, 30
  %12493 = add i32 %12492, 33769191
  %sub2449 = sub nsw i32 %12490, 30
  %12494 = sub i32 0, 31
  %12495 = add i32 %12493, %12494
  %sub2450 = sub nsw i32 %12493, 31
  %12496 = sub i32 %12495, -185459031
  %12497 = sub i32 %12496, 31
  %12498 = add i32 %12497, -185459031
  %sub2451 = sub nsw i32 %12495, 31
  %12499 = sub i32 0, 30
  %12500 = add i32 %12498, %12499
  %sub2452 = sub nsw i32 %12498, 30
  %12501 = sub i32 %12500, -1156858759
  %12502 = sub i32 %12501, 31
  %12503 = add i32 %12502, -1156858759
  %sub2453 = sub nsw i32 %12500, 31
  %12504 = sub i32 0, 30
  %12505 = add i32 %12503, %12504
  %sub2454 = sub nsw i32 %12503, 30
  %12506 = sub i32 0, 31
  %12507 = add i32 %12505, %12506
  %sub2455 = sub nsw i32 %12505, 31
  %12508 = load i32, i32* %f, align 4
  %12509 = sub i32 0, %12507
  %12510 = sub i32 0, %12508
  %12511 = add i32 %12509, %12510
  %12512 = sub i32 0, %12511
  %add2456 = add nsw i32 %12507, %12508
  %12513 = load i32, i32* %c, align 4
  %12514 = add i32 %12512, -616273910
  %12515 = sub i32 %12514, %12513
  %12516 = sub i32 %12515, -616273910
  %sub2457 = sub nsw i32 %12512, %12513
  store i32 %12516, i32* %s, align 4
  %12517 = load i32, i32* %s, align 4
  %call2458 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12517)
  store i32 -281598752, i32* %switchVar
  br label %loopEnd

if.end2459:                                       ; preds = %loopEntry
  %12518 = load i32, i32* @x
  %12519 = load i32, i32* @y
  %12520 = add i32 %12518, 929999571
  %12521 = sub i32 %12520, 1
  %12522 = sub i32 %12521, 929999571
  %12523 = sub i32 %12518, 1
  %12524 = mul i32 %12518, %12522
  %12525 = urem i32 %12524, 2
  %12526 = icmp eq i32 %12525, 0
  %12527 = icmp slt i32 %12519, 10
  %12528 = and i1 %12526, %12527
  %12529 = xor i1 %12526, %12527
  %12530 = or i1 %12528, %12529
  %12531 = or i1 %12526, %12527
  %12532 = select i1 %12530, i32 1273421447, i32 -1527641430
  store i32 %12532, i32* %switchVar
  br label %loopEnd

originalBB6582:                                   ; preds = %loopEntry
  %12533 = load i32, i32* %e, align 4
  %cmp2460 = icmp eq i32 %12533, 4
  store i1 %cmp2460, i1* %cmp2460.reg2mem
  %12534 = load i32, i32* @x
  %12535 = load i32, i32* @y
  %12536 = add i32 %12534, 827640066
  %12537 = sub i32 %12536, 1
  %12538 = sub i32 %12537, 827640066
  %12539 = sub i32 %12534, 1
  %12540 = mul i32 %12534, %12538
  %12541 = urem i32 %12540, 2
  %12542 = icmp eq i32 %12541, 0
  %12543 = icmp slt i32 %12535, 10
  %12544 = and i1 %12542, %12543
  %12545 = xor i1 %12542, %12543
  %12546 = or i1 %12544, %12545
  %12547 = or i1 %12542, %12543
  %12548 = select i1 %12546, i32 799059728, i32 -1527641430
  store i32 %12548, i32* %switchVar
  br label %loopEnd

originalBBpart26584:                              ; preds = %loopEntry
  %cmp2460.reload = load volatile i1, i1* %cmp2460.reg2mem
  %12549 = select i1 %cmp2460.reload, i32 -1044112588, i32 -1160201841
  store i32 %12549, i32* %switchVar
  br label %loopEnd

if.then2461:                                      ; preds = %loopEntry
  %12550 = load i32, i32* %s, align 4
  %12551 = sub i32 %12550, 1299208723
  %12552 = sub i32 %12551, 30
  %12553 = add i32 %12552, 1299208723
  %sub2462 = sub nsw i32 %12550, 30
  %12554 = add i32 %12553, 715383761
  %12555 = sub i32 %12554, 31
  %12556 = sub i32 %12555, 715383761
  %sub2463 = sub nsw i32 %12553, 31
  %12557 = add i32 %12556, 330633733
  %12558 = sub i32 %12557, 31
  %12559 = sub i32 %12558, 330633733
  %sub2464 = sub nsw i32 %12556, 31
  %12560 = add i32 %12559, -1846835868
  %12561 = sub i32 %12560, 30
  %12562 = sub i32 %12561, -1846835868
  %sub2465 = sub nsw i32 %12559, 30
  %12563 = add i32 %12562, -637579500
  %12564 = sub i32 %12563, 31
  %12565 = sub i32 %12564, -637579500
  %sub2466 = sub nsw i32 %12562, 31
  %12566 = add i32 %12565, -1484670408
  %12567 = sub i32 %12566, 30
  %12568 = sub i32 %12567, -1484670408
  %sub2467 = sub nsw i32 %12565, 30
  %12569 = load i32, i32* %f, align 4
  %12570 = sub i32 0, %12568
  %12571 = sub i32 0, %12569
  %12572 = add i32 %12570, %12571
  %12573 = sub i32 0, %12572
  %add2468 = add nsw i32 %12568, %12569
  %12574 = load i32, i32* %c, align 4
  %12575 = sub i32 %12573, -14242214
  %12576 = sub i32 %12575, %12574
  %12577 = add i32 %12576, -14242214
  %sub2469 = sub nsw i32 %12573, %12574
  store i32 %12577, i32* %s, align 4
  %12578 = load i32, i32* %s, align 4
  %call2470 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12578)
  store i32 -1160201841, i32* %switchVar
  br label %loopEnd

if.end2471:                                       ; preds = %loopEntry
  %12579 = load i32, i32* %e, align 4
  %cmp2472 = icmp eq i32 %12579, 5
  %12580 = select i1 %cmp2472, i32 43256238, i32 1521618006
  store i32 %12580, i32* %switchVar
  br label %loopEnd

if.then2473:                                      ; preds = %loopEntry
  %12581 = load i32, i32* %s, align 4
  %12582 = add i32 %12581, -9018507
  %12583 = sub i32 %12582, 30
  %12584 = sub i32 %12583, -9018507
  %sub2474 = sub nsw i32 %12581, 30
  %12585 = sub i32 %12584, -1483813536
  %12586 = sub i32 %12585, 31
  %12587 = add i32 %12586, -1483813536
  %sub2475 = sub nsw i32 %12584, 31
  %12588 = add i32 %12587, 522203883
  %12589 = sub i32 %12588, 31
  %12590 = sub i32 %12589, 522203883
  %sub2476 = sub nsw i32 %12587, 31
  %12591 = sub i32 0, 30
  %12592 = add i32 %12590, %12591
  %sub2477 = sub nsw i32 %12590, 30
  %12593 = add i32 %12592, -814943031
  %12594 = sub i32 %12593, 31
  %12595 = sub i32 %12594, -814943031
  %sub2478 = sub nsw i32 %12592, 31
  %12596 = load i32, i32* %f, align 4
  %12597 = sub i32 0, %12595
  %12598 = sub i32 0, %12596
  %12599 = add i32 %12597, %12598
  %12600 = sub i32 0, %12599
  %add2479 = add nsw i32 %12595, %12596
  %12601 = load i32, i32* %c, align 4
  %12602 = sub i32 0, %12601
  %12603 = add i32 %12600, %12602
  %sub2480 = sub nsw i32 %12600, %12601
  store i32 %12603, i32* %s, align 4
  %12604 = load i32, i32* %s, align 4
  %call2481 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12604)
  store i32 1521618006, i32* %switchVar
  br label %loopEnd

if.end2482:                                       ; preds = %loopEntry
  %12605 = load i32, i32* %e, align 4
  %cmp2483 = icmp eq i32 %12605, 6
  %12606 = select i1 %cmp2483, i32 -415717722, i32 -1969202767
  store i32 %12606, i32* %switchVar
  br label %loopEnd

if.then2484:                                      ; preds = %loopEntry
  %12607 = load i32, i32* %s, align 4
  %12608 = sub i32 0, 30
  %12609 = add i32 %12607, %12608
  %sub2485 = sub nsw i32 %12607, 30
  %12610 = sub i32 %12609, -1326816310
  %12611 = sub i32 %12610, 31
  %12612 = add i32 %12611, -1326816310
  %sub2486 = sub nsw i32 %12609, 31
  %12613 = add i32 %12612, -441817979
  %12614 = sub i32 %12613, 31
  %12615 = sub i32 %12614, -441817979
  %sub2487 = sub nsw i32 %12612, 31
  %12616 = sub i32 0, 30
  %12617 = add i32 %12615, %12616
  %sub2488 = sub nsw i32 %12615, 30
  %12618 = load i32, i32* %f, align 4
  %12619 = sub i32 0, %12618
  %12620 = sub i32 %12617, %12619
  %add2489 = add nsw i32 %12617, %12618
  %12621 = load i32, i32* %c, align 4
  %12622 = sub i32 %12620, 213347655
  %12623 = sub i32 %12622, %12621
  %12624 = add i32 %12623, 213347655
  %sub2490 = sub nsw i32 %12620, %12621
  store i32 %12624, i32* %s, align 4
  %12625 = load i32, i32* %s, align 4
  %call2491 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12625)
  store i32 -1969202767, i32* %switchVar
  br label %loopEnd

if.end2492:                                       ; preds = %loopEntry
  %12626 = load i32, i32* %e, align 4
  %cmp2493 = icmp eq i32 %12626, 7
  %12627 = select i1 %cmp2493, i32 691811449, i32 879164899
  store i32 %12627, i32* %switchVar
  br label %loopEnd

if.then2494:                                      ; preds = %loopEntry
  %12628 = load i32, i32* @x
  %12629 = load i32, i32* @y
  %12630 = add i32 %12628, -375515679
  %12631 = sub i32 %12630, 1
  %12632 = sub i32 %12631, -375515679
  %12633 = sub i32 %12628, 1
  %12634 = mul i32 %12628, %12632
  %12635 = urem i32 %12634, 2
  %12636 = icmp eq i32 %12635, 0
  %12637 = icmp slt i32 %12629, 10
  %12638 = xor i1 %12636, true
  %12639 = xor i1 %12637, true
  %12640 = xor i1 false, true
  %12641 = and i1 %12638, false
  %12642 = and i1 %12636, %12640
  %12643 = and i1 %12639, false
  %12644 = and i1 %12637, %12640
  %12645 = or i1 %12641, %12642
  %12646 = or i1 %12643, %12644
  %12647 = xor i1 %12645, %12646
  %12648 = or i1 %12638, %12639
  %12649 = xor i1 %12648, true
  %12650 = or i1 false, %12640
  %12651 = and i1 %12649, %12650
  %12652 = or i1 %12647, %12651
  %12653 = or i1 %12636, %12637
  %12654 = select i1 %12652, i32 1786581484, i32 1866791886
  store i32 %12654, i32* %switchVar
  br label %loopEnd

originalBB6586:                                   ; preds = %loopEntry
  %12655 = load i32, i32* %s, align 4
  %12656 = add i32 %12655, 1392366222
  %12657 = sub i32 %12656, 30
  %12658 = sub i32 %12657, 1392366222
  %sub2495 = sub nsw i32 %12655, 30
  %12659 = sub i32 %12658, -1411902322
  %12660 = sub i32 %12659, 31
  %12661 = add i32 %12660, -1411902322
  %sub2496 = sub nsw i32 %12658, 31
  %12662 = sub i32 0, 31
  %12663 = add i32 %12661, %12662
  %sub2497 = sub nsw i32 %12661, 31
  %12664 = load i32, i32* %f, align 4
  %12665 = sub i32 %12663, -1974921300
  %12666 = add i32 %12665, %12664
  %12667 = add i32 %12666, -1974921300
  %add2498 = add nsw i32 %12663, %12664
  %12668 = load i32, i32* %c, align 4
  %12669 = sub i32 %12667, -1114372585
  %12670 = sub i32 %12669, %12668
  %12671 = add i32 %12670, -1114372585
  %sub2499 = sub nsw i32 %12667, %12668
  store i32 %12671, i32* %s, align 4
  %12672 = load i32, i32* %s, align 4
  %call2500 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12672)
  %12673 = load i32, i32* @x
  %12674 = load i32, i32* @y
  %12675 = sub i32 0, 1
  %12676 = add i32 %12673, %12675
  %12677 = sub i32 %12673, 1
  %12678 = mul i32 %12673, %12676
  %12679 = urem i32 %12678, 2
  %12680 = icmp eq i32 %12679, 0
  %12681 = icmp slt i32 %12674, 10
  %12682 = xor i1 %12680, true
  %12683 = xor i1 %12681, true
  %12684 = xor i1 false, true
  %12685 = and i1 %12682, false
  %12686 = and i1 %12680, %12684
  %12687 = and i1 %12683, false
  %12688 = and i1 %12681, %12684
  %12689 = or i1 %12685, %12686
  %12690 = or i1 %12687, %12688
  %12691 = xor i1 %12689, %12690
  %12692 = or i1 %12682, %12683
  %12693 = xor i1 %12692, true
  %12694 = or i1 false, %12684
  %12695 = and i1 %12693, %12694
  %12696 = or i1 %12691, %12695
  %12697 = or i1 %12680, %12681
  %12698 = select i1 %12696, i32 1123435076, i32 1866791886
  store i32 %12698, i32* %switchVar
  br label %loopEnd

originalBBpart26625:                              ; preds = %loopEntry
  store i32 879164899, i32* %switchVar
  br label %loopEnd

if.end2501:                                       ; preds = %loopEntry
  %12699 = load i32, i32* %e, align 4
  %cmp2502 = icmp eq i32 %12699, 8
  %12700 = select i1 %cmp2502, i32 -1785441373, i32 -1088548233
  store i32 %12700, i32* %switchVar
  br label %loopEnd

if.then2503:                                      ; preds = %loopEntry
  %12701 = load i32, i32* %s, align 4
  %12702 = sub i32 %12701, 2101893666
  %12703 = sub i32 %12702, 30
  %12704 = add i32 %12703, 2101893666
  %sub2504 = sub nsw i32 %12701, 30
  %12705 = sub i32 %12704, -152652363
  %12706 = sub i32 %12705, 31
  %12707 = add i32 %12706, -152652363
  %sub2505 = sub nsw i32 %12704, 31
  %12708 = load i32, i32* %f, align 4
  %12709 = add i32 %12707, 673503896
  %12710 = add i32 %12709, %12708
  %12711 = sub i32 %12710, 673503896
  %add2506 = add nsw i32 %12707, %12708
  %12712 = load i32, i32* %c, align 4
  %12713 = sub i32 %12711, -129161457
  %12714 = sub i32 %12713, %12712
  %12715 = add i32 %12714, -129161457
  %sub2507 = sub nsw i32 %12711, %12712
  store i32 %12715, i32* %s, align 4
  %12716 = load i32, i32* %s, align 4
  %call2508 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12716)
  store i32 -1088548233, i32* %switchVar
  br label %loopEnd

if.end2509:                                       ; preds = %loopEntry
  %12717 = load i32, i32* %e, align 4
  %cmp2510 = icmp eq i32 %12717, 9
  %12718 = select i1 %cmp2510, i32 863733790, i32 1834404740
  store i32 %12718, i32* %switchVar
  br label %loopEnd

if.then2511:                                      ; preds = %loopEntry
  %12719 = load i32, i32* @x
  %12720 = load i32, i32* @y
  %12721 = sub i32 %12719, -206834850
  %12722 = sub i32 %12721, 1
  %12723 = add i32 %12722, -206834850
  %12724 = sub i32 %12719, 1
  %12725 = mul i32 %12719, %12723
  %12726 = urem i32 %12725, 2
  %12727 = icmp eq i32 %12726, 0
  %12728 = icmp slt i32 %12720, 10
  %12729 = and i1 %12727, %12728
  %12730 = xor i1 %12727, %12728
  %12731 = or i1 %12729, %12730
  %12732 = or i1 %12727, %12728
  %12733 = select i1 %12731, i32 2064062062, i32 -1316351742
  store i32 %12733, i32* %switchVar
  br label %loopEnd

originalBB6627:                                   ; preds = %loopEntry
  %12734 = load i32, i32* %s, align 4
  %12735 = add i32 %12734, -1834242534
  %12736 = sub i32 %12735, 30
  %12737 = sub i32 %12736, -1834242534
  %sub2512 = sub nsw i32 %12734, 30
  %12738 = load i32, i32* %f, align 4
  %12739 = add i32 %12737, 624441606
  %12740 = add i32 %12739, %12738
  %12741 = sub i32 %12740, 624441606
  %add2513 = add nsw i32 %12737, %12738
  %12742 = load i32, i32* %c, align 4
  %12743 = sub i32 0, %12742
  %12744 = add i32 %12741, %12743
  %sub2514 = sub nsw i32 %12741, %12742
  store i32 %12744, i32* %s, align 4
  %12745 = load i32, i32* %s, align 4
  %call2515 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12745)
  %12746 = load i32, i32* @x
  %12747 = load i32, i32* @y
  %12748 = sub i32 %12746, -1385257835
  %12749 = sub i32 %12748, 1
  %12750 = add i32 %12749, -1385257835
  %12751 = sub i32 %12746, 1
  %12752 = mul i32 %12746, %12750
  %12753 = urem i32 %12752, 2
  %12754 = icmp eq i32 %12753, 0
  %12755 = icmp slt i32 %12747, 10
  %12756 = xor i1 %12754, true
  %12757 = xor i1 %12755, true
  %12758 = xor i1 false, true
  %12759 = and i1 %12756, false
  %12760 = and i1 %12754, %12758
  %12761 = and i1 %12757, false
  %12762 = and i1 %12755, %12758
  %12763 = or i1 %12759, %12760
  %12764 = or i1 %12761, %12762
  %12765 = xor i1 %12763, %12764
  %12766 = or i1 %12756, %12757
  %12767 = xor i1 %12766, true
  %12768 = or i1 false, %12758
  %12769 = and i1 %12767, %12768
  %12770 = or i1 %12765, %12769
  %12771 = or i1 %12754, %12755
  %12772 = select i1 %12770, i32 2044700609, i32 -1316351742
  store i32 %12772, i32* %switchVar
  br label %loopEnd

originalBBpart26657:                              ; preds = %loopEntry
  store i32 1834404740, i32* %switchVar
  br label %loopEnd

if.end2516:                                       ; preds = %loopEntry
  %12773 = load i32, i32* %e, align 4
  %cmp2517 = icmp eq i32 %12773, 11
  %12774 = select i1 %cmp2517, i32 575279727, i32 1562739595
  store i32 %12774, i32* %switchVar
  br label %loopEnd

if.then2518:                                      ; preds = %loopEntry
  %12775 = load i32, i32* %s, align 4
  %12776 = sub i32 0, 31
  %12777 = sub i32 %12775, %12776
  %add2519 = add nsw i32 %12775, 31
  %12778 = load i32, i32* %f, align 4
  %12779 = sub i32 0, %12777
  %12780 = sub i32 0, %12778
  %12781 = add i32 %12779, %12780
  %12782 = sub i32 0, %12781
  %add2520 = add nsw i32 %12777, %12778
  %12783 = load i32, i32* %c, align 4
  %12784 = sub i32 0, %12783
  %12785 = add i32 %12782, %12784
  %sub2521 = sub nsw i32 %12782, %12783
  store i32 %12785, i32* %s, align 4
  %12786 = load i32, i32* %s, align 4
  %call2522 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12786)
  store i32 1562739595, i32* %switchVar
  br label %loopEnd

if.end2523:                                       ; preds = %loopEntry
  %12787 = load i32, i32* @x
  %12788 = load i32, i32* @y
  %12789 = sub i32 0, 1
  %12790 = add i32 %12787, %12789
  %12791 = sub i32 %12787, 1
  %12792 = mul i32 %12787, %12790
  %12793 = urem i32 %12792, 2
  %12794 = icmp eq i32 %12793, 0
  %12795 = icmp slt i32 %12788, 10
  %12796 = xor i1 %12794, true
  %12797 = xor i1 %12795, true
  %12798 = xor i1 true, true
  %12799 = and i1 %12796, true
  %12800 = and i1 %12794, %12798
  %12801 = and i1 %12797, true
  %12802 = and i1 %12795, %12798
  %12803 = or i1 %12799, %12800
  %12804 = or i1 %12801, %12802
  %12805 = xor i1 %12803, %12804
  %12806 = or i1 %12796, %12797
  %12807 = xor i1 %12806, true
  %12808 = or i1 true, %12798
  %12809 = and i1 %12807, %12808
  %12810 = or i1 %12805, %12809
  %12811 = or i1 %12794, %12795
  %12812 = select i1 %12810, i32 -1029749679, i32 249291045
  store i32 %12812, i32* %switchVar
  br label %loopEnd

originalBB6659:                                   ; preds = %loopEntry
  %12813 = load i32, i32* %e, align 4
  %cmp2524 = icmp eq i32 %12813, 12
  store i1 %cmp2524, i1* %cmp2524.reg2mem
  %12814 = load i32, i32* @x
  %12815 = load i32, i32* @y
  %12816 = sub i32 %12814, -58182072
  %12817 = sub i32 %12816, 1
  %12818 = add i32 %12817, -58182072
  %12819 = sub i32 %12814, 1
  %12820 = mul i32 %12814, %12818
  %12821 = urem i32 %12820, 2
  %12822 = icmp eq i32 %12821, 0
  %12823 = icmp slt i32 %12815, 10
  %12824 = xor i1 %12822, true
  %12825 = xor i1 %12823, true
  %12826 = xor i1 false, true
  %12827 = and i1 %12824, false
  %12828 = and i1 %12822, %12826
  %12829 = and i1 %12825, false
  %12830 = and i1 %12823, %12826
  %12831 = or i1 %12827, %12828
  %12832 = or i1 %12829, %12830
  %12833 = xor i1 %12831, %12832
  %12834 = or i1 %12824, %12825
  %12835 = xor i1 %12834, true
  %12836 = or i1 false, %12826
  %12837 = and i1 %12835, %12836
  %12838 = or i1 %12833, %12837
  %12839 = or i1 %12822, %12823
  %12840 = select i1 %12838, i32 -792045782, i32 249291045
  store i32 %12840, i32* %switchVar
  br label %loopEnd

originalBBpart26661:                              ; preds = %loopEntry
  %cmp2524.reload = load volatile i1, i1* %cmp2524.reg2mem
  %12841 = select i1 %cmp2524.reload, i32 -432020370, i32 676521075
  store i32 %12841, i32* %switchVar
  br label %loopEnd

if.then2525:                                      ; preds = %loopEntry
  %12842 = load i32, i32* %s, align 4
  %12843 = sub i32 %12842, 748464446
  %12844 = add i32 %12843, 31
  %12845 = add i32 %12844, 748464446
  %add2526 = add nsw i32 %12842, 31
  %12846 = sub i32 %12845, 2107780326
  %12847 = add i32 %12846, 30
  %12848 = add i32 %12847, 2107780326
  %add2527 = add nsw i32 %12845, 30
  %12849 = load i32, i32* %f, align 4
  %12850 = sub i32 %12848, -1745683391
  %12851 = add i32 %12850, %12849
  %12852 = add i32 %12851, -1745683391
  %add2528 = add nsw i32 %12848, %12849
  %12853 = load i32, i32* %c, align 4
  %12854 = sub i32 0, %12853
  %12855 = add i32 %12852, %12854
  %sub2529 = sub nsw i32 %12852, %12853
  store i32 %12855, i32* %s, align 4
  %12856 = load i32, i32* %s, align 4
  %call2530 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12856)
  store i32 676521075, i32* %switchVar
  br label %loopEnd

if.end2531:                                       ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.bb2532:                                        ; preds = %loopEntry
  %12857 = load i32, i32* %e, align 4
  %cmp2533 = icmp eq i32 %12857, 1
  %12858 = select i1 %cmp2533, i32 1946879307, i32 1936420001
  store i32 %12858, i32* %switchVar
  br label %loopEnd

if.then2534:                                      ; preds = %loopEntry
  %12859 = load i32, i32* %s, align 4
  %12860 = add i32 %12859, 184167383
  %12861 = sub i32 %12860, 31
  %12862 = sub i32 %12861, 184167383
  %sub2535 = sub nsw i32 %12859, 31
  %12863 = sub i32 0, 30
  %12864 = add i32 %12862, %12863
  %sub2536 = sub nsw i32 %12862, 30
  %12865 = sub i32 %12864, 1815020130
  %12866 = sub i32 %12865, 31
  %12867 = add i32 %12866, 1815020130
  %sub2537 = sub nsw i32 %12864, 31
  %12868 = add i32 %12867, -1704459839
  %12869 = sub i32 %12868, 31
  %12870 = sub i32 %12869, -1704459839
  %sub2538 = sub nsw i32 %12867, 31
  %12871 = add i32 %12870, 695175193
  %12872 = sub i32 %12871, 30
  %12873 = sub i32 %12872, 695175193
  %sub2539 = sub nsw i32 %12870, 30
  %12874 = sub i32 0, 31
  %12875 = add i32 %12873, %12874
  %sub2540 = sub nsw i32 %12873, 31
  %12876 = sub i32 %12875, 1397964657
  %12877 = sub i32 %12876, 30
  %12878 = add i32 %12877, 1397964657
  %sub2541 = sub nsw i32 %12875, 30
  %12879 = sub i32 %12878, -815102756
  %12880 = sub i32 %12879, 31
  %12881 = add i32 %12880, -815102756
  %sub2542 = sub nsw i32 %12878, 31
  %12882 = sub i32 0, 28
  %12883 = add i32 %12881, %12882
  %sub2543 = sub nsw i32 %12881, 28
  %12884 = add i32 %12883, 224775036
  %12885 = sub i32 %12884, 31
  %12886 = sub i32 %12885, 224775036
  %sub2544 = sub nsw i32 %12883, 31
  %12887 = load i32, i32* %f, align 4
  %12888 = sub i32 0, %12886
  %12889 = sub i32 0, %12887
  %12890 = add i32 %12888, %12889
  %12891 = sub i32 0, %12890
  %add2545 = add nsw i32 %12886, %12887
  %12892 = load i32, i32* %c, align 4
  %12893 = sub i32 0, %12892
  %12894 = add i32 %12891, %12893
  %sub2546 = sub nsw i32 %12891, %12892
  store i32 %12894, i32* %s, align 4
  %12895 = load i32, i32* %s, align 4
  %call2547 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12895)
  store i32 1936420001, i32* %switchVar
  br label %loopEnd

if.end2548:                                       ; preds = %loopEntry
  %12896 = load i32, i32* %e, align 4
  %cmp2549 = icmp eq i32 %12896, 2
  %12897 = select i1 %cmp2549, i32 216443463, i32 -1865959958
  store i32 %12897, i32* %switchVar
  br label %loopEnd

if.then2550:                                      ; preds = %loopEntry
  %12898 = load i32, i32* %s, align 4
  %12899 = sub i32 0, 31
  %12900 = add i32 %12898, %12899
  %sub2551 = sub nsw i32 %12898, 31
  %12901 = sub i32 %12900, -1058521486
  %12902 = sub i32 %12901, 30
  %12903 = add i32 %12902, -1058521486
  %sub2552 = sub nsw i32 %12900, 30
  %12904 = sub i32 %12903, -1592192838
  %12905 = sub i32 %12904, 31
  %12906 = add i32 %12905, -1592192838
  %sub2553 = sub nsw i32 %12903, 31
  %12907 = sub i32 0, 31
  %12908 = add i32 %12906, %12907
  %sub2554 = sub nsw i32 %12906, 31
  %12909 = sub i32 0, 30
  %12910 = add i32 %12908, %12909
  %sub2555 = sub nsw i32 %12908, 30
  %12911 = sub i32 %12910, -751931485
  %12912 = sub i32 %12911, 31
  %12913 = add i32 %12912, -751931485
  %sub2556 = sub nsw i32 %12910, 31
  %12914 = sub i32 0, 30
  %12915 = add i32 %12913, %12914
  %sub2557 = sub nsw i32 %12913, 30
  %12916 = sub i32 0, 31
  %12917 = add i32 %12915, %12916
  %sub2558 = sub nsw i32 %12915, 31
  %12918 = sub i32 0, 28
  %12919 = add i32 %12917, %12918
  %sub2559 = sub nsw i32 %12917, 28
  %12920 = load i32, i32* %f, align 4
  %12921 = sub i32 %12919, 1158140495
  %12922 = add i32 %12921, %12920
  %12923 = add i32 %12922, 1158140495
  %add2560 = add nsw i32 %12919, %12920
  %12924 = load i32, i32* %c, align 4
  %12925 = sub i32 %12923, 1838764793
  %12926 = sub i32 %12925, %12924
  %12927 = add i32 %12926, 1838764793
  %sub2561 = sub nsw i32 %12923, %12924
  store i32 %12927, i32* %s, align 4
  %12928 = load i32, i32* %s, align 4
  %call2562 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12928)
  store i32 -1865959958, i32* %switchVar
  br label %loopEnd

if.end2563:                                       ; preds = %loopEntry
  %12929 = load i32, i32* %e, align 4
  %cmp2564 = icmp eq i32 %12929, 3
  %12930 = select i1 %cmp2564, i32 1478078415, i32 1748223312
  store i32 %12930, i32* %switchVar
  br label %loopEnd

if.then2565:                                      ; preds = %loopEntry
  %12931 = load i32, i32* %s, align 4
  %12932 = add i32 %12931, -610424579
  %12933 = sub i32 %12932, 31
  %12934 = sub i32 %12933, -610424579
  %sub2566 = sub nsw i32 %12931, 31
  %12935 = add i32 %12934, 1138803702
  %12936 = sub i32 %12935, 30
  %12937 = sub i32 %12936, 1138803702
  %sub2567 = sub nsw i32 %12934, 30
  %12938 = add i32 %12937, 1158634065
  %12939 = sub i32 %12938, 31
  %12940 = sub i32 %12939, 1158634065
  %sub2568 = sub nsw i32 %12937, 31
  %12941 = add i32 %12940, 1490393516
  %12942 = sub i32 %12941, 31
  %12943 = sub i32 %12942, 1490393516
  %sub2569 = sub nsw i32 %12940, 31
  %12944 = sub i32 0, 30
  %12945 = add i32 %12943, %12944
  %sub2570 = sub nsw i32 %12943, 30
  %12946 = sub i32 %12945, 288226432
  %12947 = sub i32 %12946, 31
  %12948 = add i32 %12947, 288226432
  %sub2571 = sub nsw i32 %12945, 31
  %12949 = sub i32 0, 30
  %12950 = add i32 %12948, %12949
  %sub2572 = sub nsw i32 %12948, 30
  %12951 = add i32 %12950, 34923926
  %12952 = sub i32 %12951, 31
  %12953 = sub i32 %12952, 34923926
  %sub2573 = sub nsw i32 %12950, 31
  %12954 = load i32, i32* %f, align 4
  %12955 = sub i32 0, %12954
  %12956 = sub i32 %12953, %12955
  %add2574 = add nsw i32 %12953, %12954
  %12957 = load i32, i32* %c, align 4
  %12958 = sub i32 0, %12957
  %12959 = add i32 %12956, %12958
  %sub2575 = sub nsw i32 %12956, %12957
  store i32 %12959, i32* %s, align 4
  %12960 = load i32, i32* %s, align 4
  %call2576 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %12960)
  store i32 1748223312, i32* %switchVar
  br label %loopEnd

if.end2577:                                       ; preds = %loopEntry
  %12961 = load i32, i32* %e, align 4
  %cmp2578 = icmp eq i32 %12961, 4
  %12962 = select i1 %cmp2578, i32 -1192504109, i32 -1926882295
  store i32 %12962, i32* %switchVar
  br label %loopEnd

if.then2579:                                      ; preds = %loopEntry
  %12963 = load i32, i32* @x
  %12964 = load i32, i32* @y
  %12965 = sub i32 0, 1
  %12966 = add i32 %12963, %12965
  %12967 = sub i32 %12963, 1
  %12968 = mul i32 %12963, %12966
  %12969 = urem i32 %12968, 2
  %12970 = icmp eq i32 %12969, 0
  %12971 = icmp slt i32 %12964, 10
  %12972 = xor i1 %12970, true
  %12973 = xor i1 %12971, true
  %12974 = xor i1 true, true
  %12975 = and i1 %12972, true
  %12976 = and i1 %12970, %12974
  %12977 = and i1 %12973, true
  %12978 = and i1 %12971, %12974
  %12979 = or i1 %12975, %12976
  %12980 = or i1 %12977, %12978
  %12981 = xor i1 %12979, %12980
  %12982 = or i1 %12972, %12973
  %12983 = xor i1 %12982, true
  %12984 = or i1 true, %12974
  %12985 = and i1 %12983, %12984
  %12986 = or i1 %12981, %12985
  %12987 = or i1 %12970, %12971
  %12988 = select i1 %12986, i32 -1052197482, i32 1295110105
  store i32 %12988, i32* %switchVar
  br label %loopEnd

originalBB6663:                                   ; preds = %loopEntry
  %12989 = load i32, i32* %s, align 4
  %12990 = sub i32 0, 31
  %12991 = add i32 %12989, %12990
  %sub2580 = sub nsw i32 %12989, 31
  %12992 = add i32 %12991, -2049154847
  %12993 = sub i32 %12992, 30
  %12994 = sub i32 %12993, -2049154847
  %sub2581 = sub nsw i32 %12991, 30
  %12995 = sub i32 0, 31
  %12996 = add i32 %12994, %12995
  %sub2582 = sub nsw i32 %12994, 31
  %12997 = sub i32 0, 31
  %12998 = add i32 %12996, %12997
  %sub2583 = sub nsw i32 %12996, 31
  %12999 = sub i32 %12998, -1354490645
  %13000 = sub i32 %12999, 30
  %13001 = add i32 %13000, -1354490645
  %sub2584 = sub nsw i32 %12998, 30
  %13002 = add i32 %13001, 726023120
  %13003 = sub i32 %13002, 31
  %13004 = sub i32 %13003, 726023120
  %sub2585 = sub nsw i32 %13001, 31
  %13005 = sub i32 0, 30
  %13006 = add i32 %13004, %13005
  %sub2586 = sub nsw i32 %13004, 30
  %13007 = load i32, i32* %f, align 4
  %13008 = sub i32 0, %13007
  %13009 = sub i32 %13006, %13008
  %add2587 = add nsw i32 %13006, %13007
  %13010 = load i32, i32* %c, align 4
  %13011 = add i32 %13009, 1224524406
  %13012 = sub i32 %13011, %13010
  %13013 = sub i32 %13012, 1224524406
  %sub2588 = sub nsw i32 %13009, %13010
  store i32 %13013, i32* %s, align 4
  %13014 = load i32, i32* %s, align 4
  %call2589 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13014)
  %13015 = load i32, i32* @x
  %13016 = load i32, i32* @y
  %13017 = sub i32 %13015, -1288671245
  %13018 = sub i32 %13017, 1
  %13019 = add i32 %13018, -1288671245
  %13020 = sub i32 %13015, 1
  %13021 = mul i32 %13015, %13019
  %13022 = urem i32 %13021, 2
  %13023 = icmp eq i32 %13022, 0
  %13024 = icmp slt i32 %13016, 10
  %13025 = xor i1 %13023, true
  %13026 = xor i1 %13024, true
  %13027 = xor i1 true, true
  %13028 = and i1 %13025, true
  %13029 = and i1 %13023, %13027
  %13030 = and i1 %13026, true
  %13031 = and i1 %13024, %13027
  %13032 = or i1 %13028, %13029
  %13033 = or i1 %13030, %13031
  %13034 = xor i1 %13032, %13033
  %13035 = or i1 %13025, %13026
  %13036 = xor i1 %13035, true
  %13037 = or i1 true, %13027
  %13038 = and i1 %13036, %13037
  %13039 = or i1 %13034, %13038
  %13040 = or i1 %13023, %13024
  %13041 = select i1 %13039, i32 -1388332985, i32 1295110105
  store i32 %13041, i32* %switchVar
  br label %loopEnd

originalBBpart26727:                              ; preds = %loopEntry
  store i32 -1926882295, i32* %switchVar
  br label %loopEnd

if.end2590:                                       ; preds = %loopEntry
  %13042 = load i32, i32* %e, align 4
  %cmp2591 = icmp eq i32 %13042, 5
  %13043 = select i1 %cmp2591, i32 1292896090, i32 -1280762305
  store i32 %13043, i32* %switchVar
  br label %loopEnd

if.then2592:                                      ; preds = %loopEntry
  %13044 = load i32, i32* @x
  %13045 = load i32, i32* @y
  %13046 = add i32 %13044, 2047995039
  %13047 = sub i32 %13046, 1
  %13048 = sub i32 %13047, 2047995039
  %13049 = sub i32 %13044, 1
  %13050 = mul i32 %13044, %13048
  %13051 = urem i32 %13050, 2
  %13052 = icmp eq i32 %13051, 0
  %13053 = icmp slt i32 %13045, 10
  %13054 = xor i1 %13052, true
  %13055 = xor i1 %13053, true
  %13056 = xor i1 false, true
  %13057 = and i1 %13054, false
  %13058 = and i1 %13052, %13056
  %13059 = and i1 %13055, false
  %13060 = and i1 %13053, %13056
  %13061 = or i1 %13057, %13058
  %13062 = or i1 %13059, %13060
  %13063 = xor i1 %13061, %13062
  %13064 = or i1 %13054, %13055
  %13065 = xor i1 %13064, true
  %13066 = or i1 false, %13056
  %13067 = and i1 %13065, %13066
  %13068 = or i1 %13063, %13067
  %13069 = or i1 %13052, %13053
  %13070 = select i1 %13068, i32 -2074106340, i32 2082634842
  store i32 %13070, i32* %switchVar
  br label %loopEnd

originalBB6729:                                   ; preds = %loopEntry
  %13071 = load i32, i32* %s, align 4
  %13072 = sub i32 0, 31
  %13073 = add i32 %13071, %13072
  %sub2593 = sub nsw i32 %13071, 31
  %13074 = sub i32 0, 30
  %13075 = add i32 %13073, %13074
  %sub2594 = sub nsw i32 %13073, 30
  %13076 = add i32 %13075, -844427719
  %13077 = sub i32 %13076, 31
  %13078 = sub i32 %13077, -844427719
  %sub2595 = sub nsw i32 %13075, 31
  %13079 = sub i32 0, 31
  %13080 = add i32 %13078, %13079
  %sub2596 = sub nsw i32 %13078, 31
  %13081 = add i32 %13080, 1668466058
  %13082 = sub i32 %13081, 30
  %13083 = sub i32 %13082, 1668466058
  %sub2597 = sub nsw i32 %13080, 30
  %13084 = add i32 %13083, -1065243305
  %13085 = sub i32 %13084, 31
  %13086 = sub i32 %13085, -1065243305
  %sub2598 = sub nsw i32 %13083, 31
  %13087 = load i32, i32* %f, align 4
  %13088 = sub i32 %13086, 1823009913
  %13089 = add i32 %13088, %13087
  %13090 = add i32 %13089, 1823009913
  %add2599 = add nsw i32 %13086, %13087
  %13091 = load i32, i32* %c, align 4
  %13092 = sub i32 %13090, -1518421643
  %13093 = sub i32 %13092, %13091
  %13094 = add i32 %13093, -1518421643
  %sub2600 = sub nsw i32 %13090, %13091
  store i32 %13094, i32* %s, align 4
  %13095 = load i32, i32* %s, align 4
  %call2601 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13095)
  %13096 = load i32, i32* @x
  %13097 = load i32, i32* @y
  %13098 = add i32 %13096, 832321035
  %13099 = sub i32 %13098, 1
  %13100 = sub i32 %13099, 832321035
  %13101 = sub i32 %13096, 1
  %13102 = mul i32 %13096, %13100
  %13103 = urem i32 %13102, 2
  %13104 = icmp eq i32 %13103, 0
  %13105 = icmp slt i32 %13097, 10
  %13106 = and i1 %13104, %13105
  %13107 = xor i1 %13104, %13105
  %13108 = or i1 %13106, %13107
  %13109 = or i1 %13104, %13105
  %13110 = select i1 %13108, i32 -953796048, i32 2082634842
  store i32 %13110, i32* %switchVar
  br label %loopEnd

originalBBpart26774:                              ; preds = %loopEntry
  store i32 -1280762305, i32* %switchVar
  br label %loopEnd

if.end2602:                                       ; preds = %loopEntry
  %13111 = load i32, i32* %e, align 4
  %cmp2603 = icmp eq i32 %13111, 6
  %13112 = select i1 %cmp2603, i32 -562538480, i32 -1117482817
  store i32 %13112, i32* %switchVar
  br label %loopEnd

if.then2604:                                      ; preds = %loopEntry
  %13113 = load i32, i32* %s, align 4
  %13114 = add i32 %13113, 105149300
  %13115 = sub i32 %13114, 31
  %13116 = sub i32 %13115, 105149300
  %sub2605 = sub nsw i32 %13113, 31
  %13117 = sub i32 0, 30
  %13118 = add i32 %13116, %13117
  %sub2606 = sub nsw i32 %13116, 30
  %13119 = sub i32 0, 31
  %13120 = add i32 %13118, %13119
  %sub2607 = sub nsw i32 %13118, 31
  %13121 = sub i32 0, 31
  %13122 = add i32 %13120, %13121
  %sub2608 = sub nsw i32 %13120, 31
  %13123 = sub i32 %13122, 2086993654
  %13124 = sub i32 %13123, 30
  %13125 = add i32 %13124, 2086993654
  %sub2609 = sub nsw i32 %13122, 30
  %13126 = load i32, i32* %f, align 4
  %13127 = sub i32 0, %13126
  %13128 = sub i32 %13125, %13127
  %add2610 = add nsw i32 %13125, %13126
  %13129 = load i32, i32* %c, align 4
  %13130 = sub i32 %13128, 56011205
  %13131 = sub i32 %13130, %13129
  %13132 = add i32 %13131, 56011205
  %sub2611 = sub nsw i32 %13128, %13129
  store i32 %13132, i32* %s, align 4
  %13133 = load i32, i32* %s, align 4
  %call2612 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13133)
  store i32 -1117482817, i32* %switchVar
  br label %loopEnd

if.end2613:                                       ; preds = %loopEntry
  %13134 = load i32, i32* %e, align 4
  %cmp2614 = icmp eq i32 %13134, 7
  %13135 = select i1 %cmp2614, i32 -309912575, i32 -623346607
  store i32 %13135, i32* %switchVar
  br label %loopEnd

if.then2615:                                      ; preds = %loopEntry
  %13136 = load i32, i32* %s, align 4
  %13137 = add i32 %13136, 370389770
  %13138 = sub i32 %13137, 31
  %13139 = sub i32 %13138, 370389770
  %sub2616 = sub nsw i32 %13136, 31
  %13140 = sub i32 %13139, -1060223213
  %13141 = sub i32 %13140, 30
  %13142 = add i32 %13141, -1060223213
  %sub2617 = sub nsw i32 %13139, 30
  %13143 = sub i32 0, 31
  %13144 = add i32 %13142, %13143
  %sub2618 = sub nsw i32 %13142, 31
  %13145 = sub i32 0, 31
  %13146 = add i32 %13144, %13145
  %sub2619 = sub nsw i32 %13144, 31
  %13147 = load i32, i32* %f, align 4
  %13148 = sub i32 0, %13147
  %13149 = sub i32 %13146, %13148
  %add2620 = add nsw i32 %13146, %13147
  %13150 = load i32, i32* %c, align 4
  %13151 = add i32 %13149, 1196194252
  %13152 = sub i32 %13151, %13150
  %13153 = sub i32 %13152, 1196194252
  %sub2621 = sub nsw i32 %13149, %13150
  store i32 %13153, i32* %s, align 4
  %13154 = load i32, i32* %s, align 4
  %call2622 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13154)
  store i32 -623346607, i32* %switchVar
  br label %loopEnd

if.end2623:                                       ; preds = %loopEntry
  %13155 = load i32, i32* %e, align 4
  %cmp2624 = icmp eq i32 %13155, 8
  %13156 = select i1 %cmp2624, i32 2024989397, i32 1189061334
  store i32 %13156, i32* %switchVar
  br label %loopEnd

if.then2625:                                      ; preds = %loopEntry
  %13157 = load i32, i32* %s, align 4
  %13158 = sub i32 %13157, 154375034
  %13159 = sub i32 %13158, 31
  %13160 = add i32 %13159, 154375034
  %sub2626 = sub nsw i32 %13157, 31
  %13161 = add i32 %13160, -871198617
  %13162 = sub i32 %13161, 30
  %13163 = sub i32 %13162, -871198617
  %sub2627 = sub nsw i32 %13160, 30
  %13164 = sub i32 0, 31
  %13165 = add i32 %13163, %13164
  %sub2628 = sub nsw i32 %13163, 31
  %13166 = load i32, i32* %f, align 4
  %13167 = sub i32 %13165, 652094283
  %13168 = add i32 %13167, %13166
  %13169 = add i32 %13168, 652094283
  %add2629 = add nsw i32 %13165, %13166
  %13170 = load i32, i32* %c, align 4
  %13171 = sub i32 0, %13170
  %13172 = add i32 %13169, %13171
  %sub2630 = sub nsw i32 %13169, %13170
  store i32 %13172, i32* %s, align 4
  %13173 = load i32, i32* %s, align 4
  %call2631 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13173)
  store i32 1189061334, i32* %switchVar
  br label %loopEnd

if.end2632:                                       ; preds = %loopEntry
  %13174 = load i32, i32* %e, align 4
  %cmp2633 = icmp eq i32 %13174, 9
  %13175 = select i1 %cmp2633, i32 -2142999047, i32 -567366679
  store i32 %13175, i32* %switchVar
  br label %loopEnd

if.then2634:                                      ; preds = %loopEntry
  %13176 = load i32, i32* %s, align 4
  %13177 = add i32 %13176, -1519050084
  %13178 = sub i32 %13177, 31
  %13179 = sub i32 %13178, -1519050084
  %sub2635 = sub nsw i32 %13176, 31
  %13180 = add i32 %13179, -1756389123
  %13181 = sub i32 %13180, 30
  %13182 = sub i32 %13181, -1756389123
  %sub2636 = sub nsw i32 %13179, 30
  %13183 = load i32, i32* %f, align 4
  %13184 = sub i32 %13182, -1746198227
  %13185 = add i32 %13184, %13183
  %13186 = add i32 %13185, -1746198227
  %add2637 = add nsw i32 %13182, %13183
  %13187 = load i32, i32* %c, align 4
  %13188 = sub i32 %13186, 1974806372
  %13189 = sub i32 %13188, %13187
  %13190 = add i32 %13189, 1974806372
  %sub2638 = sub nsw i32 %13186, %13187
  store i32 %13190, i32* %s, align 4
  %13191 = load i32, i32* %s, align 4
  %call2639 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13191)
  store i32 -567366679, i32* %switchVar
  br label %loopEnd

if.end2640:                                       ; preds = %loopEntry
  %13192 = load i32, i32* %e, align 4
  %cmp2641 = icmp eq i32 %13192, 10
  %13193 = select i1 %cmp2641, i32 676268525, i32 1675134789
  store i32 %13193, i32* %switchVar
  br label %loopEnd

if.then2642:                                      ; preds = %loopEntry
  %13194 = load i32, i32* %s, align 4
  %13195 = sub i32 0, 31
  %13196 = add i32 %13194, %13195
  %sub2643 = sub nsw i32 %13194, 31
  %13197 = load i32, i32* %f, align 4
  %13198 = sub i32 0, %13197
  %13199 = sub i32 %13196, %13198
  %add2644 = add nsw i32 %13196, %13197
  %13200 = load i32, i32* %c, align 4
  %13201 = sub i32 %13199, 1518547229
  %13202 = sub i32 %13201, %13200
  %13203 = add i32 %13202, 1518547229
  %sub2645 = sub nsw i32 %13199, %13200
  store i32 %13203, i32* %s, align 4
  %13204 = load i32, i32* %s, align 4
  %call2646 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13204)
  store i32 1675134789, i32* %switchVar
  br label %loopEnd

if.end2647:                                       ; preds = %loopEntry
  %13205 = load i32, i32* %e, align 4
  %cmp2648 = icmp eq i32 %13205, 12
  %13206 = select i1 %cmp2648, i32 691608137, i32 1229922192
  store i32 %13206, i32* %switchVar
  br label %loopEnd

if.then2649:                                      ; preds = %loopEntry
  %13207 = load i32, i32* %s, align 4
  %13208 = add i32 %13207, -150882358
  %13209 = add i32 %13208, 30
  %13210 = sub i32 %13209, -150882358
  %add2650 = add nsw i32 %13207, 30
  %13211 = load i32, i32* %f, align 4
  %13212 = sub i32 0, %13211
  %13213 = sub i32 %13210, %13212
  %add2651 = add nsw i32 %13210, %13211
  %13214 = load i32, i32* %c, align 4
  %13215 = sub i32 0, %13214
  %13216 = add i32 %13213, %13215
  %sub2652 = sub nsw i32 %13213, %13214
  store i32 %13216, i32* %s, align 4
  %13217 = load i32, i32* %s, align 4
  %call2653 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13217)
  store i32 1229922192, i32* %switchVar
  br label %loopEnd

if.end2654:                                       ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.bb2655:                                        ; preds = %loopEntry
  %13218 = load i32, i32* @x
  %13219 = load i32, i32* @y
  %13220 = sub i32 %13218, -2013610605
  %13221 = sub i32 %13220, 1
  %13222 = add i32 %13221, -2013610605
  %13223 = sub i32 %13218, 1
  %13224 = mul i32 %13218, %13222
  %13225 = urem i32 %13224, 2
  %13226 = icmp eq i32 %13225, 0
  %13227 = icmp slt i32 %13219, 10
  %13228 = xor i1 %13226, true
  %13229 = xor i1 %13227, true
  %13230 = xor i1 false, true
  %13231 = and i1 %13228, false
  %13232 = and i1 %13226, %13230
  %13233 = and i1 %13229, false
  %13234 = and i1 %13227, %13230
  %13235 = or i1 %13231, %13232
  %13236 = or i1 %13233, %13234
  %13237 = xor i1 %13235, %13236
  %13238 = or i1 %13228, %13229
  %13239 = xor i1 %13238, true
  %13240 = or i1 false, %13230
  %13241 = and i1 %13239, %13240
  %13242 = or i1 %13237, %13241
  %13243 = or i1 %13226, %13227
  %13244 = select i1 %13242, i32 735805603, i32 -382133370
  store i32 %13244, i32* %switchVar
  br label %loopEnd

originalBB6776:                                   ; preds = %loopEntry
  %13245 = load i32, i32* %e, align 4
  %cmp2656 = icmp eq i32 %13245, 1
  store i1 %cmp2656, i1* %cmp2656.reg2mem
  %13246 = load i32, i32* @x
  %13247 = load i32, i32* @y
  %13248 = sub i32 0, 1
  %13249 = add i32 %13246, %13248
  %13250 = sub i32 %13246, 1
  %13251 = mul i32 %13246, %13249
  %13252 = urem i32 %13251, 2
  %13253 = icmp eq i32 %13252, 0
  %13254 = icmp slt i32 %13247, 10
  %13255 = xor i1 %13253, true
  %13256 = xor i1 %13254, true
  %13257 = xor i1 false, true
  %13258 = and i1 %13255, false
  %13259 = and i1 %13253, %13257
  %13260 = and i1 %13256, false
  %13261 = and i1 %13254, %13257
  %13262 = or i1 %13258, %13259
  %13263 = or i1 %13260, %13261
  %13264 = xor i1 %13262, %13263
  %13265 = or i1 %13255, %13256
  %13266 = xor i1 %13265, true
  %13267 = or i1 false, %13257
  %13268 = and i1 %13266, %13267
  %13269 = or i1 %13264, %13268
  %13270 = or i1 %13253, %13254
  %13271 = select i1 %13269, i32 -1310224616, i32 -382133370
  store i32 %13271, i32* %switchVar
  br label %loopEnd

originalBBpart26778:                              ; preds = %loopEntry
  %cmp2656.reload = load volatile i1, i1* %cmp2656.reg2mem
  %13272 = select i1 %cmp2656.reload, i32 1276926935, i32 -1096905154
  store i32 %13272, i32* %switchVar
  br label %loopEnd

if.then2657:                                      ; preds = %loopEntry
  %13273 = load i32, i32* %s, align 4
  %13274 = sub i32 0, 30
  %13275 = add i32 %13273, %13274
  %sub2658 = sub nsw i32 %13273, 30
  %13276 = sub i32 %13275, 1854181392
  %13277 = sub i32 %13276, 31
  %13278 = add i32 %13277, 1854181392
  %sub2659 = sub nsw i32 %13275, 31
  %13279 = add i32 %13278, 333249914
  %13280 = sub i32 %13279, 30
  %13281 = sub i32 %13280, 333249914
  %sub2660 = sub nsw i32 %13278, 30
  %13282 = sub i32 %13281, -1913040898
  %13283 = sub i32 %13282, 31
  %13284 = add i32 %13283, -1913040898
  %sub2661 = sub nsw i32 %13281, 31
  %13285 = sub i32 %13284, -668237897
  %13286 = sub i32 %13285, 31
  %13287 = add i32 %13286, -668237897
  %sub2662 = sub nsw i32 %13284, 31
  %13288 = sub i32 %13287, -1369867182
  %13289 = sub i32 %13288, 30
  %13290 = add i32 %13289, -1369867182
  %sub2663 = sub nsw i32 %13287, 30
  %13291 = sub i32 %13290, 37642202
  %13292 = sub i32 %13291, 31
  %13293 = add i32 %13292, 37642202
  %sub2664 = sub nsw i32 %13290, 31
  %13294 = sub i32 %13293, 1451971671
  %13295 = sub i32 %13294, 30
  %13296 = add i32 %13295, 1451971671
  %sub2665 = sub nsw i32 %13293, 30
  %13297 = sub i32 %13296, -324071786
  %13298 = sub i32 %13297, 31
  %13299 = add i32 %13298, -324071786
  %sub2666 = sub nsw i32 %13296, 31
  %13300 = sub i32 0, 28
  %13301 = add i32 %13299, %13300
  %sub2667 = sub nsw i32 %13299, 28
  %13302 = sub i32 %13301, 1252773487
  %13303 = sub i32 %13302, 31
  %13304 = add i32 %13303, 1252773487
  %sub2668 = sub nsw i32 %13301, 31
  %13305 = load i32, i32* %f, align 4
  %13306 = sub i32 %13304, 539713574
  %13307 = add i32 %13306, %13305
  %13308 = add i32 %13307, 539713574
  %add2669 = add nsw i32 %13304, %13305
  %13309 = load i32, i32* %c, align 4
  %13310 = sub i32 0, %13309
  %13311 = add i32 %13308, %13310
  %sub2670 = sub nsw i32 %13308, %13309
  store i32 %13311, i32* %s, align 4
  %13312 = load i32, i32* %s, align 4
  %call2671 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13312)
  store i32 -1096905154, i32* %switchVar
  br label %loopEnd

if.end2672:                                       ; preds = %loopEntry
  %13313 = load i32, i32* %e, align 4
  %cmp2673 = icmp eq i32 %13313, 2
  %13314 = select i1 %cmp2673, i32 -1496634094, i32 450855263
  store i32 %13314, i32* %switchVar
  br label %loopEnd

if.then2674:                                      ; preds = %loopEntry
  %13315 = load i32, i32* %s, align 4
  %13316 = sub i32 %13315, -7351207
  %13317 = sub i32 %13316, 30
  %13318 = add i32 %13317, -7351207
  %sub2675 = sub nsw i32 %13315, 30
  %13319 = add i32 %13318, -1561615356
  %13320 = sub i32 %13319, 31
  %13321 = sub i32 %13320, -1561615356
  %sub2676 = sub nsw i32 %13318, 31
  %13322 = sub i32 %13321, -1389295249
  %13323 = sub i32 %13322, 30
  %13324 = add i32 %13323, -1389295249
  %sub2677 = sub nsw i32 %13321, 30
  %13325 = sub i32 0, 31
  %13326 = add i32 %13324, %13325
  %sub2678 = sub nsw i32 %13324, 31
  %13327 = sub i32 0, 31
  %13328 = add i32 %13326, %13327
  %sub2679 = sub nsw i32 %13326, 31
  %13329 = add i32 %13328, 1070521218
  %13330 = sub i32 %13329, 30
  %13331 = sub i32 %13330, 1070521218
  %sub2680 = sub nsw i32 %13328, 30
  %13332 = sub i32 %13331, -678382362
  %13333 = sub i32 %13332, 31
  %13334 = add i32 %13333, -678382362
  %sub2681 = sub nsw i32 %13331, 31
  %13335 = add i32 %13334, 697396893
  %13336 = sub i32 %13335, 30
  %13337 = sub i32 %13336, 697396893
  %sub2682 = sub nsw i32 %13334, 30
  %13338 = sub i32 0, 31
  %13339 = add i32 %13337, %13338
  %sub2683 = sub nsw i32 %13337, 31
  %13340 = sub i32 0, 2
  %13341 = add i32 %13339, %13340
  %sub2684 = sub nsw i32 %13339, 2
  %13342 = load i32, i32* %f, align 4
  %13343 = sub i32 %13341, -1739574864
  %13344 = add i32 %13343, %13342
  %13345 = add i32 %13344, -1739574864
  %add2685 = add nsw i32 %13341, %13342
  %13346 = load i32, i32* %c, align 4
  %13347 = sub i32 0, %13346
  %13348 = add i32 %13345, %13347
  %sub2686 = sub nsw i32 %13345, %13346
  store i32 %13348, i32* %s, align 4
  %13349 = load i32, i32* %s, align 4
  %call2687 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13349)
  store i32 450855263, i32* %switchVar
  br label %loopEnd

if.end2688:                                       ; preds = %loopEntry
  %13350 = load i32, i32* %e, align 4
  %cmp2689 = icmp eq i32 %13350, 3
  %13351 = select i1 %cmp2689, i32 -1164880954, i32 -1885698739
  store i32 %13351, i32* %switchVar
  br label %loopEnd

if.then2690:                                      ; preds = %loopEntry
  %13352 = load i32, i32* %s, align 4
  %13353 = sub i32 0, 30
  %13354 = add i32 %13352, %13353
  %sub2691 = sub nsw i32 %13352, 30
  %13355 = sub i32 0, 31
  %13356 = add i32 %13354, %13355
  %sub2692 = sub nsw i32 %13354, 31
  %13357 = add i32 %13356, -944990533
  %13358 = sub i32 %13357, 30
  %13359 = sub i32 %13358, -944990533
  %sub2693 = sub nsw i32 %13356, 30
  %13360 = add i32 %13359, -3123242
  %13361 = sub i32 %13360, 31
  %13362 = sub i32 %13361, -3123242
  %sub2694 = sub nsw i32 %13359, 31
  %13363 = add i32 %13362, -430767422
  %13364 = sub i32 %13363, 31
  %13365 = sub i32 %13364, -430767422
  %sub2695 = sub nsw i32 %13362, 31
  %13366 = sub i32 0, 30
  %13367 = add i32 %13365, %13366
  %sub2696 = sub nsw i32 %13365, 30
  %13368 = sub i32 0, 31
  %13369 = add i32 %13367, %13368
  %sub2697 = sub nsw i32 %13367, 31
  %13370 = add i32 %13369, -1406878410
  %13371 = sub i32 %13370, 30
  %13372 = sub i32 %13371, -1406878410
  %sub2698 = sub nsw i32 %13369, 30
  %13373 = sub i32 %13372, 1250512448
  %13374 = sub i32 %13373, 31
  %13375 = add i32 %13374, 1250512448
  %sub2699 = sub nsw i32 %13372, 31
  %13376 = load i32, i32* %f, align 4
  %13377 = sub i32 0, %13375
  %13378 = sub i32 0, %13376
  %13379 = add i32 %13377, %13378
  %13380 = sub i32 0, %13379
  %add2700 = add nsw i32 %13375, %13376
  %13381 = load i32, i32* %c, align 4
  %13382 = sub i32 %13380, -415052019
  %13383 = sub i32 %13382, %13381
  %13384 = add i32 %13383, -415052019
  %sub2701 = sub nsw i32 %13380, %13381
  store i32 %13384, i32* %s, align 4
  %13385 = load i32, i32* %s, align 4
  %call2702 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13385)
  store i32 -1885698739, i32* %switchVar
  br label %loopEnd

if.end2703:                                       ; preds = %loopEntry
  %13386 = load i32, i32* %e, align 4
  %cmp2704 = icmp eq i32 %13386, 4
  %13387 = select i1 %cmp2704, i32 -1004105133, i32 -1858500925
  store i32 %13387, i32* %switchVar
  br label %loopEnd

if.then2705:                                      ; preds = %loopEntry
  %13388 = load i32, i32* %s, align 4
  %13389 = sub i32 0, 30
  %13390 = add i32 %13388, %13389
  %sub2706 = sub nsw i32 %13388, 30
  %13391 = sub i32 0, 31
  %13392 = add i32 %13390, %13391
  %sub2707 = sub nsw i32 %13390, 31
  %13393 = sub i32 0, 30
  %13394 = add i32 %13392, %13393
  %sub2708 = sub nsw i32 %13392, 30
  %13395 = sub i32 0, 31
  %13396 = add i32 %13394, %13395
  %sub2709 = sub nsw i32 %13394, 31
  %13397 = sub i32 0, 31
  %13398 = add i32 %13396, %13397
  %sub2710 = sub nsw i32 %13396, 31
  %13399 = sub i32 %13398, -2009471920
  %13400 = sub i32 %13399, 30
  %13401 = add i32 %13400, -2009471920
  %sub2711 = sub nsw i32 %13398, 30
  %13402 = sub i32 %13401, -24723433
  %13403 = sub i32 %13402, 31
  %13404 = add i32 %13403, -24723433
  %sub2712 = sub nsw i32 %13401, 31
  %13405 = add i32 %13404, 89360930
  %13406 = sub i32 %13405, 30
  %13407 = sub i32 %13406, 89360930
  %sub2713 = sub nsw i32 %13404, 30
  %13408 = load i32, i32* %f, align 4
  %13409 = sub i32 0, %13408
  %13410 = sub i32 %13407, %13409
  %add2714 = add nsw i32 %13407, %13408
  %13411 = load i32, i32* %c, align 4
  %13412 = sub i32 %13410, 985323799
  %13413 = sub i32 %13412, %13411
  %13414 = add i32 %13413, 985323799
  %sub2715 = sub nsw i32 %13410, %13411
  store i32 %13414, i32* %s, align 4
  %13415 = load i32, i32* %s, align 4
  %call2716 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13415)
  store i32 -1858500925, i32* %switchVar
  br label %loopEnd

if.end2717:                                       ; preds = %loopEntry
  %13416 = load i32, i32* %e, align 4
  %cmp2718 = icmp eq i32 %13416, 5
  %13417 = select i1 %cmp2718, i32 -1313796600, i32 624305601
  store i32 %13417, i32* %switchVar
  br label %loopEnd

if.then2719:                                      ; preds = %loopEntry
  %13418 = load i32, i32* %s, align 4
  %13419 = sub i32 0, 30
  %13420 = add i32 %13418, %13419
  %sub2720 = sub nsw i32 %13418, 30
  %13421 = sub i32 0, 31
  %13422 = add i32 %13420, %13421
  %sub2721 = sub nsw i32 %13420, 31
  %13423 = add i32 %13422, 2001740186
  %13424 = sub i32 %13423, 30
  %13425 = sub i32 %13424, 2001740186
  %sub2722 = sub nsw i32 %13422, 30
  %13426 = sub i32 %13425, 1858134933
  %13427 = sub i32 %13426, 31
  %13428 = add i32 %13427, 1858134933
  %sub2723 = sub nsw i32 %13425, 31
  %13429 = sub i32 0, 31
  %13430 = add i32 %13428, %13429
  %sub2724 = sub nsw i32 %13428, 31
  %13431 = sub i32 0, 30
  %13432 = add i32 %13430, %13431
  %sub2725 = sub nsw i32 %13430, 30
  %13433 = sub i32 0, 31
  %13434 = add i32 %13432, %13433
  %sub2726 = sub nsw i32 %13432, 31
  %13435 = load i32, i32* %f, align 4
  %13436 = sub i32 0, %13435
  %13437 = sub i32 %13434, %13436
  %add2727 = add nsw i32 %13434, %13435
  %13438 = load i32, i32* %c, align 4
  %13439 = add i32 %13437, 1678252940
  %13440 = sub i32 %13439, %13438
  %13441 = sub i32 %13440, 1678252940
  %sub2728 = sub nsw i32 %13437, %13438
  store i32 %13441, i32* %s, align 4
  %13442 = load i32, i32* %s, align 4
  %call2729 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13442)
  store i32 624305601, i32* %switchVar
  br label %loopEnd

if.end2730:                                       ; preds = %loopEntry
  %13443 = load i32, i32* @x
  %13444 = load i32, i32* @y
  %13445 = add i32 %13443, -324161731
  %13446 = sub i32 %13445, 1
  %13447 = sub i32 %13446, -324161731
  %13448 = sub i32 %13443, 1
  %13449 = mul i32 %13443, %13447
  %13450 = urem i32 %13449, 2
  %13451 = icmp eq i32 %13450, 0
  %13452 = icmp slt i32 %13444, 10
  %13453 = xor i1 %13451, true
  %13454 = xor i1 %13452, true
  %13455 = xor i1 true, true
  %13456 = and i1 %13453, true
  %13457 = and i1 %13451, %13455
  %13458 = and i1 %13454, true
  %13459 = and i1 %13452, %13455
  %13460 = or i1 %13456, %13457
  %13461 = or i1 %13458, %13459
  %13462 = xor i1 %13460, %13461
  %13463 = or i1 %13453, %13454
  %13464 = xor i1 %13463, true
  %13465 = or i1 true, %13455
  %13466 = and i1 %13464, %13465
  %13467 = or i1 %13462, %13466
  %13468 = or i1 %13451, %13452
  %13469 = select i1 %13467, i32 584069336, i32 1966549015
  store i32 %13469, i32* %switchVar
  br label %loopEnd

originalBB6780:                                   ; preds = %loopEntry
  %13470 = load i32, i32* %e, align 4
  %cmp2731 = icmp eq i32 %13470, 6
  store i1 %cmp2731, i1* %cmp2731.reg2mem
  %13471 = load i32, i32* @x
  %13472 = load i32, i32* @y
  %13473 = sub i32 0, 1
  %13474 = add i32 %13471, %13473
  %13475 = sub i32 %13471, 1
  %13476 = mul i32 %13471, %13474
  %13477 = urem i32 %13476, 2
  %13478 = icmp eq i32 %13477, 0
  %13479 = icmp slt i32 %13472, 10
  %13480 = xor i1 %13478, true
  %13481 = xor i1 %13479, true
  %13482 = xor i1 true, true
  %13483 = and i1 %13480, true
  %13484 = and i1 %13478, %13482
  %13485 = and i1 %13481, true
  %13486 = and i1 %13479, %13482
  %13487 = or i1 %13483, %13484
  %13488 = or i1 %13485, %13486
  %13489 = xor i1 %13487, %13488
  %13490 = or i1 %13480, %13481
  %13491 = xor i1 %13490, true
  %13492 = or i1 true, %13482
  %13493 = and i1 %13491, %13492
  %13494 = or i1 %13489, %13493
  %13495 = or i1 %13478, %13479
  %13496 = select i1 %13494, i32 1526480986, i32 1966549015
  store i32 %13496, i32* %switchVar
  br label %loopEnd

originalBBpart26782:                              ; preds = %loopEntry
  %cmp2731.reload = load volatile i1, i1* %cmp2731.reg2mem
  %13497 = select i1 %cmp2731.reload, i32 -1099431487, i32 1509182448
  store i32 %13497, i32* %switchVar
  br label %loopEnd

if.then2732:                                      ; preds = %loopEntry
  %13498 = load i32, i32* %s, align 4
  %13499 = sub i32 0, 30
  %13500 = add i32 %13498, %13499
  %sub2733 = sub nsw i32 %13498, 30
  %13501 = sub i32 0, 31
  %13502 = add i32 %13500, %13501
  %sub2734 = sub nsw i32 %13500, 31
  %13503 = sub i32 0, 30
  %13504 = add i32 %13502, %13503
  %sub2735 = sub nsw i32 %13502, 30
  %13505 = sub i32 0, 31
  %13506 = add i32 %13504, %13505
  %sub2736 = sub nsw i32 %13504, 31
  %13507 = sub i32 %13506, -426826029
  %13508 = sub i32 %13507, 31
  %13509 = add i32 %13508, -426826029
  %sub2737 = sub nsw i32 %13506, 31
  %13510 = sub i32 0, 30
  %13511 = add i32 %13509, %13510
  %sub2738 = sub nsw i32 %13509, 30
  %13512 = load i32, i32* %f, align 4
  %13513 = sub i32 0, %13512
  %13514 = sub i32 %13511, %13513
  %add2739 = add nsw i32 %13511, %13512
  %13515 = load i32, i32* %c, align 4
  %13516 = add i32 %13514, -441523728
  %13517 = sub i32 %13516, %13515
  %13518 = sub i32 %13517, -441523728
  %sub2740 = sub nsw i32 %13514, %13515
  store i32 %13518, i32* %s, align 4
  %13519 = load i32, i32* %s, align 4
  %call2741 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13519)
  store i32 1509182448, i32* %switchVar
  br label %loopEnd

if.end2742:                                       ; preds = %loopEntry
  %13520 = load i32, i32* %e, align 4
  %cmp2743 = icmp eq i32 %13520, 7
  %13521 = select i1 %cmp2743, i32 -1873808302, i32 484955065
  store i32 %13521, i32* %switchVar
  br label %loopEnd

if.then2744:                                      ; preds = %loopEntry
  %13522 = load i32, i32* %s, align 4
  %13523 = sub i32 %13522, 2058849886
  %13524 = sub i32 %13523, 30
  %13525 = add i32 %13524, 2058849886
  %sub2745 = sub nsw i32 %13522, 30
  %13526 = sub i32 0, 31
  %13527 = add i32 %13525, %13526
  %sub2746 = sub nsw i32 %13525, 31
  %13528 = sub i32 %13527, 1737609985
  %13529 = sub i32 %13528, 30
  %13530 = add i32 %13529, 1737609985
  %sub2747 = sub nsw i32 %13527, 30
  %13531 = sub i32 0, 31
  %13532 = add i32 %13530, %13531
  %sub2748 = sub nsw i32 %13530, 31
  %13533 = sub i32 0, 31
  %13534 = add i32 %13532, %13533
  %sub2749 = sub nsw i32 %13532, 31
  %13535 = load i32, i32* %f, align 4
  %13536 = add i32 %13534, -1656076590
  %13537 = add i32 %13536, %13535
  %13538 = sub i32 %13537, -1656076590
  %add2750 = add nsw i32 %13534, %13535
  %13539 = load i32, i32* %c, align 4
  %13540 = sub i32 0, %13539
  %13541 = add i32 %13538, %13540
  %sub2751 = sub nsw i32 %13538, %13539
  store i32 %13541, i32* %s, align 4
  %13542 = load i32, i32* %s, align 4
  %call2752 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13542)
  store i32 484955065, i32* %switchVar
  br label %loopEnd

if.end2753:                                       ; preds = %loopEntry
  %13543 = load i32, i32* %e, align 4
  %cmp2754 = icmp eq i32 %13543, 8
  %13544 = select i1 %cmp2754, i32 -1448427410, i32 1172766663
  store i32 %13544, i32* %switchVar
  br label %loopEnd

if.then2755:                                      ; preds = %loopEntry
  %13545 = load i32, i32* @x
  %13546 = load i32, i32* @y
  %13547 = sub i32 0, 1
  %13548 = add i32 %13545, %13547
  %13549 = sub i32 %13545, 1
  %13550 = mul i32 %13545, %13548
  %13551 = urem i32 %13550, 2
  %13552 = icmp eq i32 %13551, 0
  %13553 = icmp slt i32 %13546, 10
  %13554 = xor i1 %13552, true
  %13555 = xor i1 %13553, true
  %13556 = xor i1 false, true
  %13557 = and i1 %13554, false
  %13558 = and i1 %13552, %13556
  %13559 = and i1 %13555, false
  %13560 = and i1 %13553, %13556
  %13561 = or i1 %13557, %13558
  %13562 = or i1 %13559, %13560
  %13563 = xor i1 %13561, %13562
  %13564 = or i1 %13554, %13555
  %13565 = xor i1 %13564, true
  %13566 = or i1 false, %13556
  %13567 = and i1 %13565, %13566
  %13568 = or i1 %13563, %13567
  %13569 = or i1 %13552, %13553
  %13570 = select i1 %13568, i32 -773330413, i32 -213063834
  store i32 %13570, i32* %switchVar
  br label %loopEnd

originalBB6784:                                   ; preds = %loopEntry
  %13571 = load i32, i32* %s, align 4
  %13572 = sub i32 %13571, -459583977
  %13573 = sub i32 %13572, 30
  %13574 = add i32 %13573, -459583977
  %sub2756 = sub nsw i32 %13571, 30
  %13575 = add i32 %13574, -615002791
  %13576 = sub i32 %13575, 31
  %13577 = sub i32 %13576, -615002791
  %sub2757 = sub nsw i32 %13574, 31
  %13578 = sub i32 0, 30
  %13579 = add i32 %13577, %13578
  %sub2758 = sub nsw i32 %13577, 30
  %13580 = sub i32 %13579, -833254039
  %13581 = sub i32 %13580, 31
  %13582 = add i32 %13581, -833254039
  %sub2759 = sub nsw i32 %13579, 31
  %13583 = load i32, i32* %f, align 4
  %13584 = add i32 %13582, -457331164
  %13585 = add i32 %13584, %13583
  %13586 = sub i32 %13585, -457331164
  %add2760 = add nsw i32 %13582, %13583
  %13587 = load i32, i32* %c, align 4
  %13588 = sub i32 0, %13587
  %13589 = add i32 %13586, %13588
  %sub2761 = sub nsw i32 %13586, %13587
  store i32 %13589, i32* %s, align 4
  %13590 = load i32, i32* %s, align 4
  %call2762 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13590)
  %13591 = load i32, i32* @x
  %13592 = load i32, i32* @y
  %13593 = sub i32 %13591, 1770343803
  %13594 = sub i32 %13593, 1
  %13595 = add i32 %13594, 1770343803
  %13596 = sub i32 %13591, 1
  %13597 = mul i32 %13591, %13595
  %13598 = urem i32 %13597, 2
  %13599 = icmp eq i32 %13598, 0
  %13600 = icmp slt i32 %13592, 10
  %13601 = xor i1 %13599, true
  %13602 = xor i1 %13600, true
  %13603 = xor i1 false, true
  %13604 = and i1 %13601, false
  %13605 = and i1 %13599, %13603
  %13606 = and i1 %13602, false
  %13607 = and i1 %13600, %13603
  %13608 = or i1 %13604, %13605
  %13609 = or i1 %13606, %13607
  %13610 = xor i1 %13608, %13609
  %13611 = or i1 %13601, %13602
  %13612 = xor i1 %13611, true
  %13613 = or i1 false, %13603
  %13614 = and i1 %13612, %13613
  %13615 = or i1 %13610, %13614
  %13616 = or i1 %13599, %13600
  %13617 = select i1 %13615, i32 1443138227, i32 -213063834
  store i32 %13617, i32* %switchVar
  br label %loopEnd

originalBBpart26835:                              ; preds = %loopEntry
  store i32 1172766663, i32* %switchVar
  br label %loopEnd

if.end2763:                                       ; preds = %loopEntry
  %13618 = load i32, i32* @x
  %13619 = load i32, i32* @y
  %13620 = sub i32 %13618, -2091888900
  %13621 = sub i32 %13620, 1
  %13622 = add i32 %13621, -2091888900
  %13623 = sub i32 %13618, 1
  %13624 = mul i32 %13618, %13622
  %13625 = urem i32 %13624, 2
  %13626 = icmp eq i32 %13625, 0
  %13627 = icmp slt i32 %13619, 10
  %13628 = xor i1 %13626, true
  %13629 = xor i1 %13627, true
  %13630 = xor i1 true, true
  %13631 = and i1 %13628, true
  %13632 = and i1 %13626, %13630
  %13633 = and i1 %13629, true
  %13634 = and i1 %13627, %13630
  %13635 = or i1 %13631, %13632
  %13636 = or i1 %13633, %13634
  %13637 = xor i1 %13635, %13636
  %13638 = or i1 %13628, %13629
  %13639 = xor i1 %13638, true
  %13640 = or i1 true, %13630
  %13641 = and i1 %13639, %13640
  %13642 = or i1 %13637, %13641
  %13643 = or i1 %13626, %13627
  %13644 = select i1 %13642, i32 -1826121561, i32 1507744972
  store i32 %13644, i32* %switchVar
  br label %loopEnd

originalBB6837:                                   ; preds = %loopEntry
  %13645 = load i32, i32* %e, align 4
  %cmp2764 = icmp eq i32 %13645, 9
  store i1 %cmp2764, i1* %cmp2764.reg2mem
  %13646 = load i32, i32* @x
  %13647 = load i32, i32* @y
  %13648 = sub i32 %13646, 170919523
  %13649 = sub i32 %13648, 1
  %13650 = add i32 %13649, 170919523
  %13651 = sub i32 %13646, 1
  %13652 = mul i32 %13646, %13650
  %13653 = urem i32 %13652, 2
  %13654 = icmp eq i32 %13653, 0
  %13655 = icmp slt i32 %13647, 10
  %13656 = and i1 %13654, %13655
  %13657 = xor i1 %13654, %13655
  %13658 = or i1 %13656, %13657
  %13659 = or i1 %13654, %13655
  %13660 = select i1 %13658, i32 374975646, i32 1507744972
  store i32 %13660, i32* %switchVar
  br label %loopEnd

originalBBpart26839:                              ; preds = %loopEntry
  %cmp2764.reload = load volatile i1, i1* %cmp2764.reg2mem
  %13661 = select i1 %cmp2764.reload, i32 -1765840417, i32 -1983442199
  store i32 %13661, i32* %switchVar
  br label %loopEnd

if.then2765:                                      ; preds = %loopEntry
  %13662 = load i32, i32* %s, align 4
  %13663 = sub i32 %13662, 210633852
  %13664 = sub i32 %13663, 30
  %13665 = add i32 %13664, 210633852
  %sub2766 = sub nsw i32 %13662, 30
  %13666 = add i32 %13665, -372610253
  %13667 = sub i32 %13666, 31
  %13668 = sub i32 %13667, -372610253
  %sub2767 = sub nsw i32 %13665, 31
  %13669 = add i32 %13668, 566455027
  %13670 = sub i32 %13669, 30
  %13671 = sub i32 %13670, 566455027
  %sub2768 = sub nsw i32 %13668, 30
  %13672 = load i32, i32* %f, align 4
  %13673 = sub i32 0, %13672
  %13674 = sub i32 %13671, %13673
  %add2769 = add nsw i32 %13671, %13672
  %13675 = load i32, i32* %c, align 4
  %13676 = sub i32 %13674, -2015600335
  %13677 = sub i32 %13676, %13675
  %13678 = add i32 %13677, -2015600335
  %sub2770 = sub nsw i32 %13674, %13675
  store i32 %13678, i32* %s, align 4
  %13679 = load i32, i32* %s, align 4
  %call2771 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13679)
  store i32 -1983442199, i32* %switchVar
  br label %loopEnd

if.end2772:                                       ; preds = %loopEntry
  %13680 = load i32, i32* %e, align 4
  %cmp2773 = icmp eq i32 %13680, 10
  %13681 = select i1 %cmp2773, i32 -1346381741, i32 1709434634
  store i32 %13681, i32* %switchVar
  br label %loopEnd

if.then2774:                                      ; preds = %loopEntry
  %13682 = load i32, i32* %s, align 4
  %13683 = sub i32 0, 30
  %13684 = add i32 %13682, %13683
  %sub2775 = sub nsw i32 %13682, 30
  %13685 = add i32 %13684, -839187747
  %13686 = sub i32 %13685, 31
  %13687 = sub i32 %13686, -839187747
  %sub2776 = sub nsw i32 %13684, 31
  %13688 = load i32, i32* %f, align 4
  %13689 = sub i32 %13687, 1089800944
  %13690 = add i32 %13689, %13688
  %13691 = add i32 %13690, 1089800944
  %add2777 = add nsw i32 %13687, %13688
  %13692 = load i32, i32* %c, align 4
  %13693 = add i32 %13691, 1296564871
  %13694 = sub i32 %13693, %13692
  %13695 = sub i32 %13694, 1296564871
  %sub2778 = sub nsw i32 %13691, %13692
  store i32 %13695, i32* %s, align 4
  %13696 = load i32, i32* %s, align 4
  %call2779 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13696)
  store i32 1709434634, i32* %switchVar
  br label %loopEnd

if.end2780:                                       ; preds = %loopEntry
  %13697 = load i32, i32* %e, align 4
  %cmp2781 = icmp eq i32 %13697, 11
  %13698 = select i1 %cmp2781, i32 322017214, i32 -1131236830
  store i32 %13698, i32* %switchVar
  br label %loopEnd

if.then2782:                                      ; preds = %loopEntry
  %13699 = load i32, i32* %s, align 4
  %13700 = add i32 %13699, -566046794
  %13701 = sub i32 %13700, 30
  %13702 = sub i32 %13701, -566046794
  %sub2783 = sub nsw i32 %13699, 30
  %13703 = load i32, i32* %f, align 4
  %13704 = add i32 %13702, 343032766
  %13705 = add i32 %13704, %13703
  %13706 = sub i32 %13705, 343032766
  %add2784 = add nsw i32 %13702, %13703
  %13707 = load i32, i32* %c, align 4
  %13708 = sub i32 0, %13707
  %13709 = add i32 %13706, %13708
  %sub2785 = sub nsw i32 %13706, %13707
  store i32 %13709, i32* %s, align 4
  %13710 = load i32, i32* %s, align 4
  %call2786 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13710)
  store i32 -1131236830, i32* %switchVar
  br label %loopEnd

if.end2787:                                       ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

NewDefault6870:                                   ; preds = %loopEntry
  store i32 476738164, i32* %switchVar
  br label %loopEnd

sw.epilog2788:                                    ; preds = %loopEntry
  %13711 = load i32, i32* %retval, align 4
  ret i32 %13711

originalBBalteredBB:                              ; preds = %loopEntry
  %13712 = load i32, i32* %a, align 4
  %13713 = load i32, i32* %d, align 4
  %13714 = sub i32 0, 1
  %13715 = add i32 %13713, %13714
  %subalteredBB = sub nsw i32 %13713, 1
  %cmp1alteredBB = icmp sle i32 %13712, %13715
  store i32 -1681586230, i32* %switchVar
  br label %loopEnd

originalBB2789alteredBB:                          ; preds = %loopEntry
  %13716 = load i32, i32* %a, align 4
  %_ = shl i32 %13716, 100
  %_2790 = shl i32 %13716, 100
  %rem3alteredBB = srem i32 %13716, 100
  %cmp4alteredBB = icmp ne i32 %rem3alteredBB, 0
  store i32 2067472260, i32* %switchVar
  br label %loopEnd

originalBB2794alteredBB:                          ; preds = %loopEntry
  %13717 = load i32, i32* %a, align 4
  %13718 = sub i32 0, %13717
  %13719 = add i32 0, %13718
  %_2795 = sub i32 0, %13717
  %13720 = sub i32 0, %13719
  %13721 = sub i32 0, 400
  %13722 = add i32 %13720, %13721
  %13723 = sub i32 0, %13722
  %gen = add i32 %13719, 400
  %_2796 = shl i32 %13717, 400
  %rem5alteredBB = srem i32 %13717, 400
  %cmp6alteredBB = icmp eq i32 %rem5alteredBB, 0
  store i32 -1468506229, i32* %switchVar
  br label %loopEnd

originalBB2800alteredBB:                          ; preds = %loopEntry
  store i32 -1977724284, i32* %switchVar
  br label %loopEnd

originalBB2804alteredBB:                          ; preds = %loopEntry
  %13724 = load i32, i32* %s, align 4
  %13725 = add i32 0, -717401262
  %13726 = sub i32 %13725, %13724
  %13727 = sub i32 %13726, -717401262
  %_2805 = sub i32 0, %13724
  %13728 = sub i32 0, %13727
  %13729 = sub i32 0, 31
  %13730 = add i32 %13728, %13729
  %13731 = sub i32 0, %13730
  %gen2806 = add i32 %13727, 31
  %13732 = add i32 0, -1866960754
  %13733 = sub i32 %13732, %13724
  %13734 = sub i32 %13733, -1866960754
  %_2807 = sub i32 0, %13724
  %13735 = add i32 %13734, 677574295
  %13736 = add i32 %13735, 31
  %13737 = sub i32 %13736, 677574295
  %gen2808 = add i32 %13734, 31
  %_2809 = shl i32 %13724, 31
  %13738 = add i32 %13724, -332077599
  %13739 = add i32 %13738, 31
  %13740 = sub i32 %13739, -332077599
  %add28alteredBB = add nsw i32 %13724, 31
  %13741 = load i32, i32* %f, align 4
  %13742 = sub i32 0, %13741
  %13743 = add i32 %13740, %13742
  %_2810 = sub i32 %13740, %13741
  %gen2811 = mul i32 %13743, %13741
  %13744 = sub i32 0, -1850160320
  %13745 = sub i32 %13744, %13740
  %13746 = add i32 %13745, -1850160320
  %_2812 = sub i32 0, %13740
  %13747 = sub i32 0, %13746
  %13748 = sub i32 0, %13741
  %13749 = add i32 %13747, %13748
  %13750 = sub i32 0, %13749
  %gen2813 = add i32 %13746, %13741
  %13751 = sub i32 0, %13740
  %13752 = add i32 0, %13751
  %_2814 = sub i32 0, %13740
  %13753 = sub i32 0, %13752
  %13754 = sub i32 0, %13741
  %13755 = add i32 %13753, %13754
  %13756 = sub i32 0, %13755
  %gen2815 = add i32 %13752, %13741
  %13757 = sub i32 0, %13740
  %13758 = sub i32 0, %13741
  %13759 = add i32 %13757, %13758
  %13760 = sub i32 0, %13759
  %add29alteredBB = add nsw i32 %13740, %13741
  %13761 = load i32, i32* %c, align 4
  %13762 = add i32 0, 607355107
  %13763 = sub i32 %13762, %13760
  %13764 = sub i32 %13763, 607355107
  %_2816 = sub i32 0, %13760
  %13765 = sub i32 0, %13764
  %13766 = sub i32 0, %13761
  %13767 = add i32 %13765, %13766
  %13768 = sub i32 0, %13767
  %gen2817 = add i32 %13764, %13761
  %_2818 = shl i32 %13760, %13761
  %13769 = add i32 0, 2146843978
  %13770 = sub i32 %13769, %13760
  %13771 = sub i32 %13770, 2146843978
  %_2819 = sub i32 0, %13760
  %13772 = sub i32 0, %13761
  %13773 = sub i32 %13771, %13772
  %gen2820 = add i32 %13771, %13761
  %_2821 = shl i32 %13760, %13761
  %_2822 = shl i32 %13760, %13761
  %13774 = add i32 0, -739049854
  %13775 = sub i32 %13774, %13760
  %13776 = sub i32 %13775, -739049854
  %_2823 = sub i32 0, %13760
  %13777 = add i32 %13776, 1555035485
  %13778 = add i32 %13777, %13761
  %13779 = sub i32 %13778, 1555035485
  %gen2824 = add i32 %13776, %13761
  %13780 = sub i32 0, %13761
  %13781 = add i32 %13760, %13780
  %_2825 = sub i32 %13760, %13761
  %gen2826 = mul i32 %13781, %13761
  %_2827 = shl i32 %13760, %13761
  %13782 = sub i32 0, %13761
  %13783 = add i32 %13760, %13782
  %_2828 = sub i32 %13760, %13761
  %gen2829 = mul i32 %13783, %13761
  %13784 = add i32 0, 84392284
  %13785 = sub i32 %13784, %13760
  %13786 = sub i32 %13785, 84392284
  %_2830 = sub i32 0, %13760
  %13787 = sub i32 0, %13761
  %13788 = sub i32 %13786, %13787
  %gen2831 = add i32 %13786, %13761
  %13789 = sub i32 %13760, -1481960373
  %13790 = sub i32 %13789, %13761
  %13791 = add i32 %13790, -1481960373
  %sub30alteredBB = sub nsw i32 %13760, %13761
  store i32 %13791, i32* %s, align 4
  %13792 = load i32, i32* %s, align 4
  %call31alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13792)
  store i32 -880784375, i32* %switchVar
  br label %loopEnd

originalBB2835alteredBB:                          ; preds = %loopEntry
  %13793 = load i32, i32* %e, align 4
  %cmp41alteredBB = icmp eq i32 %13793, 4
  store i32 -1810214989, i32* %switchVar
  br label %loopEnd

originalBB2839alteredBB:                          ; preds = %loopEntry
  %13794 = load i32, i32* %s, align 4
  %13795 = sub i32 0, 31
  %13796 = add i32 %13794, %13795
  %_2840 = sub i32 %13794, 31
  %gen2841 = mul i32 %13796, 31
  %13797 = add i32 0, -1614130116
  %13798 = sub i32 %13797, %13794
  %13799 = sub i32 %13798, -1614130116
  %_2842 = sub i32 0, %13794
  %13800 = sub i32 0, 31
  %13801 = sub i32 %13799, %13800
  %gen2843 = add i32 %13799, 31
  %_2844 = shl i32 %13794, 31
  %13802 = sub i32 %13794, 925312152
  %13803 = sub i32 %13802, 31
  %13804 = add i32 %13803, 925312152
  %_2845 = sub i32 %13794, 31
  %gen2846 = mul i32 %13804, 31
  %_2847 = shl i32 %13794, 31
  %13805 = add i32 %13794, -1461523945
  %13806 = sub i32 %13805, 31
  %13807 = sub i32 %13806, -1461523945
  %_2848 = sub i32 %13794, 31
  %gen2849 = mul i32 %13807, 31
  %13808 = sub i32 0, 31
  %13809 = add i32 %13794, %13808
  %_2850 = sub i32 %13794, 31
  %gen2851 = mul i32 %13809, 31
  %13810 = sub i32 %13794, -1765059365
  %13811 = add i32 %13810, 31
  %13812 = add i32 %13811, -1765059365
  %add52alteredBB = add nsw i32 %13794, 31
  %_2852 = shl i32 %13812, 29
  %13813 = add i32 %13812, -1821075530
  %13814 = sub i32 %13813, 29
  %13815 = sub i32 %13814, -1821075530
  %_2853 = sub i32 %13812, 29
  %gen2854 = mul i32 %13815, 29
  %_2855 = shl i32 %13812, 29
  %13816 = add i32 0, -210643543
  %13817 = sub i32 %13816, %13812
  %13818 = sub i32 %13817, -210643543
  %_2856 = sub i32 0, %13812
  %13819 = add i32 %13818, -1505472923
  %13820 = add i32 %13819, 29
  %13821 = sub i32 %13820, -1505472923
  %gen2857 = add i32 %13818, 29
  %13822 = sub i32 %13812, -1127511711
  %13823 = sub i32 %13822, 29
  %13824 = add i32 %13823, -1127511711
  %_2858 = sub i32 %13812, 29
  %gen2859 = mul i32 %13824, 29
  %13825 = sub i32 %13812, 768542898
  %13826 = add i32 %13825, 29
  %13827 = add i32 %13826, 768542898
  %add53alteredBB = add nsw i32 %13812, 29
  %13828 = add i32 0, 1590946473
  %13829 = sub i32 %13828, %13827
  %13830 = sub i32 %13829, 1590946473
  %_2860 = sub i32 0, %13827
  %13831 = add i32 %13830, 1138234113
  %13832 = add i32 %13831, 31
  %13833 = sub i32 %13832, 1138234113
  %gen2861 = add i32 %13830, 31
  %13834 = sub i32 0, 31
  %13835 = sub i32 %13827, %13834
  %add54alteredBB = add nsw i32 %13827, 31
  %13836 = sub i32 0, 30
  %13837 = add i32 %13835, %13836
  %_2862 = sub i32 %13835, 30
  %gen2863 = mul i32 %13837, 30
  %13838 = sub i32 %13835, 1011377164
  %13839 = add i32 %13838, 30
  %13840 = add i32 %13839, 1011377164
  %add55alteredBB = add nsw i32 %13835, 30
  %13841 = load i32, i32* %f, align 4
  %_2864 = shl i32 %13840, %13841
  %13842 = add i32 %13840, 1262654943
  %13843 = add i32 %13842, %13841
  %13844 = sub i32 %13843, 1262654943
  %add56alteredBB = add nsw i32 %13840, %13841
  %13845 = load i32, i32* %c, align 4
  %13846 = sub i32 0, %13845
  %13847 = add i32 %13844, %13846
  %_2865 = sub i32 %13844, %13845
  %gen2866 = mul i32 %13847, %13845
  %_2867 = shl i32 %13844, %13845
  %_2868 = shl i32 %13844, %13845
  %13848 = sub i32 0, %13845
  %13849 = add i32 %13844, %13848
  %_2869 = sub i32 %13844, %13845
  %gen2870 = mul i32 %13849, %13845
  %13850 = sub i32 0, %13845
  %13851 = add i32 %13844, %13850
  %_2871 = sub i32 %13844, %13845
  %gen2872 = mul i32 %13851, %13845
  %13852 = sub i32 0, %13845
  %13853 = add i32 %13844, %13852
  %sub57alteredBB = sub nsw i32 %13844, %13845
  store i32 %13853, i32* %s, align 4
  %13854 = load i32, i32* %s, align 4
  %call58alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13854)
  store i32 218966396, i32* %switchVar
  br label %loopEnd

originalBB2876alteredBB:                          ; preds = %loopEntry
  %13855 = load i32, i32* %s, align 4
  %13856 = sub i32 %13855, -1613430888
  %13857 = sub i32 %13856, 31
  %13858 = add i32 %13857, -1613430888
  %_2877 = sub i32 %13855, 31
  %gen2878 = mul i32 %13858, 31
  %_2879 = shl i32 %13855, 31
  %13859 = add i32 %13855, -1540227550
  %13860 = sub i32 %13859, 31
  %13861 = sub i32 %13860, -1540227550
  %_2880 = sub i32 %13855, 31
  %gen2881 = mul i32 %13861, 31
  %13862 = sub i32 0, -1987064169
  %13863 = sub i32 %13862, %13855
  %13864 = add i32 %13863, -1987064169
  %_2882 = sub i32 0, %13855
  %13865 = sub i32 %13864, -201056956
  %13866 = add i32 %13865, 31
  %13867 = add i32 %13866, -201056956
  %gen2883 = add i32 %13864, 31
  %_2884 = shl i32 %13855, 31
  %_2885 = shl i32 %13855, 31
  %13868 = sub i32 0, 31
  %13869 = sub i32 %13855, %13868
  %add85alteredBB = add nsw i32 %13855, 31
  %_2886 = shl i32 %13869, 29
  %13870 = sub i32 0, %13869
  %13871 = add i32 0, %13870
  %_2887 = sub i32 0, %13869
  %13872 = sub i32 0, %13871
  %13873 = sub i32 0, 29
  %13874 = add i32 %13872, %13873
  %13875 = sub i32 0, %13874
  %gen2888 = add i32 %13871, 29
  %13876 = add i32 0, -561112399
  %13877 = sub i32 %13876, %13869
  %13878 = sub i32 %13877, -561112399
  %_2889 = sub i32 0, %13869
  %13879 = sub i32 %13878, -1535610746
  %13880 = add i32 %13879, 29
  %13881 = add i32 %13880, -1535610746
  %gen2890 = add i32 %13878, 29
  %13882 = sub i32 0, %13869
  %13883 = add i32 0, %13882
  %_2891 = sub i32 0, %13869
  %13884 = sub i32 0, 29
  %13885 = sub i32 %13883, %13884
  %gen2892 = add i32 %13883, 29
  %_2893 = shl i32 %13869, 29
  %_2894 = shl i32 %13869, 29
  %13886 = sub i32 0, 29
  %13887 = sub i32 %13869, %13886
  %add86alteredBB = add nsw i32 %13869, 29
  %_2895 = shl i32 %13887, 31
  %_2896 = shl i32 %13887, 31
  %13888 = sub i32 %13887, -661086513
  %13889 = sub i32 %13888, 31
  %13890 = add i32 %13889, -661086513
  %_2897 = sub i32 %13887, 31
  %gen2898 = mul i32 %13890, 31
  %13891 = sub i32 %13887, 57377645
  %13892 = sub i32 %13891, 31
  %13893 = add i32 %13892, 57377645
  %_2899 = sub i32 %13887, 31
  %gen2900 = mul i32 %13893, 31
  %13894 = add i32 %13887, 1959342220
  %13895 = sub i32 %13894, 31
  %13896 = sub i32 %13895, 1959342220
  %_2901 = sub i32 %13887, 31
  %gen2902 = mul i32 %13896, 31
  %_2903 = shl i32 %13887, 31
  %_2904 = shl i32 %13887, 31
  %13897 = sub i32 %13887, 1528945122
  %13898 = sub i32 %13897, 31
  %13899 = add i32 %13898, 1528945122
  %_2905 = sub i32 %13887, 31
  %gen2906 = mul i32 %13899, 31
  %13900 = sub i32 %13887, -994768476
  %13901 = add i32 %13900, 31
  %13902 = add i32 %13901, -994768476
  %add87alteredBB = add nsw i32 %13887, 31
  %13903 = add i32 %13902, -126087670
  %13904 = sub i32 %13903, 30
  %13905 = sub i32 %13904, -126087670
  %_2907 = sub i32 %13902, 30
  %gen2908 = mul i32 %13905, 30
  %_2909 = shl i32 %13902, 30
  %13906 = sub i32 0, 30
  %13907 = add i32 %13902, %13906
  %_2910 = sub i32 %13902, 30
  %gen2911 = mul i32 %13907, 30
  %13908 = sub i32 0, %13902
  %13909 = sub i32 0, 30
  %13910 = add i32 %13908, %13909
  %13911 = sub i32 0, %13910
  %add88alteredBB = add nsw i32 %13902, 30
  %13912 = sub i32 0, 31
  %13913 = add i32 %13911, %13912
  %_2912 = sub i32 %13911, 31
  %gen2913 = mul i32 %13913, 31
  %13914 = sub i32 %13911, 1044319151
  %13915 = sub i32 %13914, 31
  %13916 = add i32 %13915, 1044319151
  %_2914 = sub i32 %13911, 31
  %gen2915 = mul i32 %13916, 31
  %13917 = sub i32 0, 31
  %13918 = add i32 %13911, %13917
  %_2916 = sub i32 %13911, 31
  %gen2917 = mul i32 %13918, 31
  %13919 = sub i32 %13911, -167334421
  %13920 = add i32 %13919, 31
  %13921 = add i32 %13920, -167334421
  %add89alteredBB = add nsw i32 %13911, 31
  %_2918 = shl i32 %13921, 30
  %13922 = sub i32 0, 30
  %13923 = add i32 %13921, %13922
  %_2919 = sub i32 %13921, 30
  %gen2920 = mul i32 %13923, 30
  %13924 = add i32 %13921, -162353024
  %13925 = add i32 %13924, 30
  %13926 = sub i32 %13925, -162353024
  %add90alteredBB = add nsw i32 %13921, 30
  %13927 = add i32 0, -384707366
  %13928 = sub i32 %13927, %13926
  %13929 = sub i32 %13928, -384707366
  %_2921 = sub i32 0, %13926
  %13930 = sub i32 0, %13929
  %13931 = sub i32 0, 31
  %13932 = add i32 %13930, %13931
  %13933 = sub i32 0, %13932
  %gen2922 = add i32 %13929, 31
  %13934 = add i32 0, -246461044
  %13935 = sub i32 %13934, %13926
  %13936 = sub i32 %13935, -246461044
  %_2923 = sub i32 0, %13926
  %13937 = sub i32 0, 31
  %13938 = sub i32 %13936, %13937
  %gen2924 = add i32 %13936, 31
  %13939 = add i32 %13926, 1664710043
  %13940 = add i32 %13939, 31
  %13941 = sub i32 %13940, 1664710043
  %add91alteredBB = add nsw i32 %13926, 31
  %13942 = load i32, i32* %f, align 4
  %13943 = add i32 0, 90768647
  %13944 = sub i32 %13943, %13941
  %13945 = sub i32 %13944, 90768647
  %_2925 = sub i32 0, %13941
  %13946 = sub i32 0, %13945
  %13947 = sub i32 0, %13942
  %13948 = add i32 %13946, %13947
  %13949 = sub i32 0, %13948
  %gen2926 = add i32 %13945, %13942
  %13950 = sub i32 0, %13941
  %13951 = sub i32 0, %13942
  %13952 = add i32 %13950, %13951
  %13953 = sub i32 0, %13952
  %add92alteredBB = add nsw i32 %13941, %13942
  %13954 = load i32, i32* %c, align 4
  %_2927 = shl i32 %13953, %13954
  %13955 = add i32 %13953, 351317665
  %13956 = sub i32 %13955, %13954
  %13957 = sub i32 %13956, 351317665
  %_2928 = sub i32 %13953, %13954
  %gen2929 = mul i32 %13957, %13954
  %13958 = sub i32 0, -1144958137
  %13959 = sub i32 %13958, %13953
  %13960 = add i32 %13959, -1144958137
  %_2930 = sub i32 0, %13953
  %13961 = sub i32 0, %13960
  %13962 = sub i32 0, %13954
  %13963 = add i32 %13961, %13962
  %13964 = sub i32 0, %13963
  %gen2931 = add i32 %13960, %13954
  %13965 = add i32 %13953, -1858789620
  %13966 = sub i32 %13965, %13954
  %13967 = sub i32 %13966, -1858789620
  %_2932 = sub i32 %13953, %13954
  %gen2933 = mul i32 %13967, %13954
  %13968 = sub i32 %13953, 1500315565
  %13969 = sub i32 %13968, %13954
  %13970 = add i32 %13969, 1500315565
  %_2934 = sub i32 %13953, %13954
  %gen2935 = mul i32 %13970, %13954
  %13971 = sub i32 %13953, -223324370
  %13972 = sub i32 %13971, %13954
  %13973 = add i32 %13972, -223324370
  %_2936 = sub i32 %13953, %13954
  %gen2937 = mul i32 %13973, %13954
  %13974 = add i32 %13953, 341148408
  %13975 = sub i32 %13974, %13954
  %13976 = sub i32 %13975, 341148408
  %sub93alteredBB = sub nsw i32 %13953, %13954
  store i32 %13976, i32* %s, align 4
  %13977 = load i32, i32* %s, align 4
  %call94alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %13977)
  store i32 -7108793, i32* %switchVar
  br label %loopEnd

originalBB2941alteredBB:                          ; preds = %loopEntry
  %13978 = load i32, i32* %e, align 4
  %cmp110alteredBB = icmp eq i32 %13978, 10
  store i32 351892026, i32* %switchVar
  br label %loopEnd

originalBB2945alteredBB:                          ; preds = %loopEntry
  %13979 = load i32, i32* %e, align 4
  %cmp141alteredBB = icmp eq i32 %13979, 12
  store i32 972888253, i32* %switchVar
  br label %loopEnd

originalBB2949alteredBB:                          ; preds = %loopEntry
  %13980 = load i32, i32* %s, align 4
  %13981 = sub i32 0, %13980
  %13982 = add i32 0, %13981
  %_2950 = sub i32 0, %13980
  %13983 = sub i32 0, 31
  %13984 = sub i32 %13982, %13983
  %gen2951 = add i32 %13982, 31
  %13985 = sub i32 0, -1097506637
  %13986 = sub i32 %13985, %13980
  %13987 = add i32 %13986, -1097506637
  %_2952 = sub i32 0, %13980
  %13988 = sub i32 0, %13987
  %13989 = sub i32 0, 31
  %13990 = add i32 %13988, %13989
  %13991 = sub i32 0, %13990
  %gen2953 = add i32 %13987, 31
  %13992 = sub i32 0, 31
  %13993 = add i32 %13980, %13992
  %_2954 = sub i32 %13980, 31
  %gen2955 = mul i32 %13993, 31
  %13994 = sub i32 %13980, -763868000
  %13995 = sub i32 %13994, 31
  %13996 = add i32 %13995, -763868000
  %_2956 = sub i32 %13980, 31
  %gen2957 = mul i32 %13996, 31
  %_2958 = shl i32 %13980, 31
  %_2959 = shl i32 %13980, 31
  %13997 = sub i32 0, 31
  %13998 = sub i32 %13980, %13997
  %add143alteredBB = add nsw i32 %13980, 31
  %13999 = add i32 %13998, -451075789
  %14000 = sub i32 %13999, 29
  %14001 = sub i32 %14000, -451075789
  %_2960 = sub i32 %13998, 29
  %gen2961 = mul i32 %14001, 29
  %14002 = sub i32 0, %13998
  %14003 = add i32 0, %14002
  %_2962 = sub i32 0, %13998
  %14004 = add i32 %14003, 306062739
  %14005 = add i32 %14004, 29
  %14006 = sub i32 %14005, 306062739
  %gen2963 = add i32 %14003, 29
  %14007 = sub i32 %13998, -1349934713
  %14008 = sub i32 %14007, 29
  %14009 = add i32 %14008, -1349934713
  %_2964 = sub i32 %13998, 29
  %gen2965 = mul i32 %14009, 29
  %14010 = sub i32 0, 29
  %14011 = add i32 %13998, %14010
  %_2966 = sub i32 %13998, 29
  %gen2967 = mul i32 %14011, 29
  %14012 = add i32 %13998, 343223155
  %14013 = sub i32 %14012, 29
  %14014 = sub i32 %14013, 343223155
  %_2968 = sub i32 %13998, 29
  %gen2969 = mul i32 %14014, 29
  %14015 = add i32 %13998, 1076860701
  %14016 = sub i32 %14015, 29
  %14017 = sub i32 %14016, 1076860701
  %_2970 = sub i32 %13998, 29
  %gen2971 = mul i32 %14017, 29
  %14018 = sub i32 0, 29
  %14019 = sub i32 %13998, %14018
  %add144alteredBB = add nsw i32 %13998, 29
  %14020 = add i32 %14019, 159409461
  %14021 = sub i32 %14020, 31
  %14022 = sub i32 %14021, 159409461
  %_2972 = sub i32 %14019, 31
  %gen2973 = mul i32 %14022, 31
  %14023 = add i32 0, 2054407849
  %14024 = sub i32 %14023, %14019
  %14025 = sub i32 %14024, 2054407849
  %_2974 = sub i32 0, %14019
  %14026 = sub i32 0, 31
  %14027 = sub i32 %14025, %14026
  %gen2975 = add i32 %14025, 31
  %14028 = sub i32 0, %14019
  %14029 = add i32 0, %14028
  %_2976 = sub i32 0, %14019
  %14030 = sub i32 0, %14029
  %14031 = sub i32 0, 31
  %14032 = add i32 %14030, %14031
  %14033 = sub i32 0, %14032
  %gen2977 = add i32 %14029, 31
  %14034 = sub i32 0, %14019
  %14035 = add i32 0, %14034
  %_2978 = sub i32 0, %14019
  %14036 = sub i32 0, 31
  %14037 = sub i32 %14035, %14036
  %gen2979 = add i32 %14035, 31
  %14038 = sub i32 0, %14019
  %14039 = sub i32 0, 31
  %14040 = add i32 %14038, %14039
  %14041 = sub i32 0, %14040
  %add145alteredBB = add nsw i32 %14019, 31
  %14042 = sub i32 0, %14041
  %14043 = sub i32 0, 30
  %14044 = add i32 %14042, %14043
  %14045 = sub i32 0, %14044
  %add146alteredBB = add nsw i32 %14041, 30
  %_2980 = shl i32 %14045, 31
  %_2981 = shl i32 %14045, 31
  %_2982 = shl i32 %14045, 31
  %14046 = add i32 0, 1071350074
  %14047 = sub i32 %14046, %14045
  %14048 = sub i32 %14047, 1071350074
  %_2983 = sub i32 0, %14045
  %14049 = sub i32 0, %14048
  %14050 = sub i32 0, 31
  %14051 = add i32 %14049, %14050
  %14052 = sub i32 0, %14051
  %gen2984 = add i32 %14048, 31
  %_2985 = shl i32 %14045, 31
  %_2986 = shl i32 %14045, 31
  %14053 = sub i32 0, 31
  %14054 = sub i32 %14045, %14053
  %add147alteredBB = add nsw i32 %14045, 31
  %14055 = add i32 0, -1937028999
  %14056 = sub i32 %14055, %14054
  %14057 = sub i32 %14056, -1937028999
  %_2987 = sub i32 0, %14054
  %14058 = sub i32 0, %14057
  %14059 = sub i32 0, 30
  %14060 = add i32 %14058, %14059
  %14061 = sub i32 0, %14060
  %gen2988 = add i32 %14057, 30
  %14062 = add i32 %14054, -554509611
  %14063 = sub i32 %14062, 30
  %14064 = sub i32 %14063, -554509611
  %_2989 = sub i32 %14054, 30
  %gen2990 = mul i32 %14064, 30
  %14065 = sub i32 %14054, -1628483350
  %14066 = add i32 %14065, 30
  %14067 = add i32 %14066, -1628483350
  %add148alteredBB = add nsw i32 %14054, 30
  %_2991 = shl i32 %14067, 31
  %14068 = add i32 %14067, -1366531607
  %14069 = sub i32 %14068, 31
  %14070 = sub i32 %14069, -1366531607
  %_2992 = sub i32 %14067, 31
  %gen2993 = mul i32 %14070, 31
  %14071 = add i32 %14067, -385155588
  %14072 = sub i32 %14071, 31
  %14073 = sub i32 %14072, -385155588
  %_2994 = sub i32 %14067, 31
  %gen2995 = mul i32 %14073, 31
  %_2996 = shl i32 %14067, 31
  %14074 = add i32 0, -1901173034
  %14075 = sub i32 %14074, %14067
  %14076 = sub i32 %14075, -1901173034
  %_2997 = sub i32 0, %14067
  %14077 = add i32 %14076, -48800699
  %14078 = add i32 %14077, 31
  %14079 = sub i32 %14078, -48800699
  %gen2998 = add i32 %14076, 31
  %14080 = sub i32 %14067, -1818267067
  %14081 = sub i32 %14080, 31
  %14082 = add i32 %14081, -1818267067
  %_2999 = sub i32 %14067, 31
  %gen3000 = mul i32 %14082, 31
  %14083 = add i32 %14067, -216535205
  %14084 = add i32 %14083, 31
  %14085 = sub i32 %14084, -216535205
  %add149alteredBB = add nsw i32 %14067, 31
  %14086 = sub i32 %14085, 1047230864
  %14087 = sub i32 %14086, 31
  %14088 = add i32 %14087, 1047230864
  %_3001 = sub i32 %14085, 31
  %gen3002 = mul i32 %14088, 31
  %14089 = add i32 %14085, -1415874662
  %14090 = sub i32 %14089, 31
  %14091 = sub i32 %14090, -1415874662
  %_3003 = sub i32 %14085, 31
  %gen3004 = mul i32 %14091, 31
  %14092 = add i32 %14085, 1257322869
  %14093 = add i32 %14092, 31
  %14094 = sub i32 %14093, 1257322869
  %add150alteredBB = add nsw i32 %14085, 31
  %_3005 = shl i32 %14094, 30
  %14095 = add i32 %14094, -1580542558
  %14096 = sub i32 %14095, 30
  %14097 = sub i32 %14096, -1580542558
  %_3006 = sub i32 %14094, 30
  %gen3007 = mul i32 %14097, 30
  %14098 = sub i32 0, -970284124
  %14099 = sub i32 %14098, %14094
  %14100 = add i32 %14099, -970284124
  %_3008 = sub i32 0, %14094
  %14101 = sub i32 0, 30
  %14102 = sub i32 %14100, %14101
  %gen3009 = add i32 %14100, 30
  %14103 = add i32 0, 2012972413
  %14104 = sub i32 %14103, %14094
  %14105 = sub i32 %14104, 2012972413
  %_3010 = sub i32 0, %14094
  %14106 = add i32 %14105, -683956080
  %14107 = add i32 %14106, 30
  %14108 = sub i32 %14107, -683956080
  %gen3011 = add i32 %14105, 30
  %14109 = sub i32 0, 30
  %14110 = add i32 %14094, %14109
  %_3012 = sub i32 %14094, 30
  %gen3013 = mul i32 %14110, 30
  %14111 = sub i32 0, %14094
  %14112 = sub i32 0, 30
  %14113 = add i32 %14111, %14112
  %14114 = sub i32 0, %14113
  %add151alteredBB = add nsw i32 %14094, 30
  %14115 = sub i32 %14114, -530848216
  %14116 = sub i32 %14115, 31
  %14117 = add i32 %14116, -530848216
  %_3014 = sub i32 %14114, 31
  %gen3015 = mul i32 %14117, 31
  %_3016 = shl i32 %14114, 31
  %14118 = sub i32 0, %14114
  %14119 = sub i32 0, 31
  %14120 = add i32 %14118, %14119
  %14121 = sub i32 0, %14120
  %add152alteredBB = add nsw i32 %14114, 31
  %_3017 = shl i32 %14121, 30
  %14122 = sub i32 0, 965184623
  %14123 = sub i32 %14122, %14121
  %14124 = add i32 %14123, 965184623
  %_3018 = sub i32 0, %14121
  %14125 = sub i32 %14124, -1355568448
  %14126 = add i32 %14125, 30
  %14127 = add i32 %14126, -1355568448
  %gen3019 = add i32 %14124, 30
  %14128 = add i32 0, 891060301
  %14129 = sub i32 %14128, %14121
  %14130 = sub i32 %14129, 891060301
  %_3020 = sub i32 0, %14121
  %14131 = sub i32 0, %14130
  %14132 = sub i32 0, 30
  %14133 = add i32 %14131, %14132
  %14134 = sub i32 0, %14133
  %gen3021 = add i32 %14130, 30
  %14135 = sub i32 0, %14121
  %14136 = add i32 0, %14135
  %_3022 = sub i32 0, %14121
  %14137 = sub i32 %14136, -1369572695
  %14138 = add i32 %14137, 30
  %14139 = add i32 %14138, -1369572695
  %gen3023 = add i32 %14136, 30
  %14140 = sub i32 0, %14121
  %14141 = add i32 0, %14140
  %_3024 = sub i32 0, %14121
  %14142 = sub i32 %14141, 483388534
  %14143 = add i32 %14142, 30
  %14144 = add i32 %14143, 483388534
  %gen3025 = add i32 %14141, 30
  %_3026 = shl i32 %14121, 30
  %14145 = sub i32 %14121, 520247526
  %14146 = add i32 %14145, 30
  %14147 = add i32 %14146, 520247526
  %add153alteredBB = add nsw i32 %14121, 30
  %14148 = load i32, i32* %f, align 4
  %_3027 = shl i32 %14147, %14148
  %14149 = add i32 %14147, -557400512
  %14150 = add i32 %14149, %14148
  %14151 = sub i32 %14150, -557400512
  %add154alteredBB = add nsw i32 %14147, %14148
  %14152 = load i32, i32* %c, align 4
  %14153 = sub i32 0, %14151
  %14154 = add i32 0, %14153
  %_3028 = sub i32 0, %14151
  %14155 = sub i32 0, %14154
  %14156 = sub i32 0, %14152
  %14157 = add i32 %14155, %14156
  %14158 = sub i32 0, %14157
  %gen3029 = add i32 %14154, %14152
  %14159 = sub i32 0, %14152
  %14160 = add i32 %14151, %14159
  %_3030 = sub i32 %14151, %14152
  %gen3031 = mul i32 %14160, %14152
  %_3032 = shl i32 %14151, %14152
  %14161 = sub i32 0, %14151
  %14162 = add i32 0, %14161
  %_3033 = sub i32 0, %14151
  %14163 = add i32 %14162, 1870062289
  %14164 = add i32 %14163, %14152
  %14165 = sub i32 %14164, 1870062289
  %gen3034 = add i32 %14162, %14152
  %14166 = sub i32 0, %14151
  %14167 = add i32 0, %14166
  %_3035 = sub i32 0, %14151
  %14168 = add i32 %14167, 2082403665
  %14169 = add i32 %14168, %14152
  %14170 = sub i32 %14169, 2082403665
  %gen3036 = add i32 %14167, %14152
  %14171 = sub i32 0, %14151
  %14172 = add i32 0, %14171
  %_3037 = sub i32 0, %14151
  %14173 = add i32 %14172, 491082400
  %14174 = add i32 %14173, %14152
  %14175 = sub i32 %14174, 491082400
  %gen3038 = add i32 %14172, %14152
  %_3039 = shl i32 %14151, %14152
  %_3040 = shl i32 %14151, %14152
  %_3041 = shl i32 %14151, %14152
  %14176 = sub i32 %14151, 101867181
  %14177 = sub i32 %14176, %14152
  %14178 = add i32 %14177, 101867181
  %sub155alteredBB = sub nsw i32 %14151, %14152
  store i32 %14178, i32* %s, align 4
  %14179 = load i32, i32* %s, align 4
  %call156alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %14179)
  store i32 -857779, i32* %switchVar
  br label %loopEnd

originalBB3045alteredBB:                          ; preds = %loopEntry
  %14180 = load i32, i32* %e, align 4
  %cmp159alteredBB = icmp eq i32 %14180, 1
  store i32 -1093415071, i32* %switchVar
  br label %loopEnd

originalBB3049alteredBB:                          ; preds = %loopEntry
  %14181 = load i32, i32* %s, align 4
  %14182 = add i32 0, 1648613986
  %14183 = sub i32 %14182, %14181
  %14184 = sub i32 %14183, 1648613986
  %_3050 = sub i32 0, %14181
  %14185 = sub i32 0, %14184
  %14186 = sub i32 0, 29
  %14187 = add i32 %14185, %14186
  %14188 = sub i32 0, %14187
  %gen3051 = add i32 %14184, 29
  %_3052 = shl i32 %14181, 29
  %14189 = sub i32 0, 29
  %14190 = add i32 %14181, %14189
  %_3053 = sub i32 %14181, 29
  %gen3054 = mul i32 %14190, 29
  %14191 = sub i32 0, %14181
  %14192 = add i32 0, %14191
  %_3055 = sub i32 0, %14181
  %14193 = sub i32 %14192, 1982446780
  %14194 = add i32 %14193, 29
  %14195 = add i32 %14194, 1982446780
  %gen3056 = add i32 %14192, 29
  %14196 = sub i32 0, %14181
  %14197 = sub i32 0, 29
  %14198 = add i32 %14196, %14197
  %14199 = sub i32 0, %14198
  %add175alteredBB = add nsw i32 %14181, 29
  %14200 = sub i32 %14199, 1527892271
  %14201 = sub i32 %14200, 31
  %14202 = add i32 %14201, 1527892271
  %_3057 = sub i32 %14199, 31
  %gen3058 = mul i32 %14202, 31
  %14203 = add i32 %14199, -2111780328
  %14204 = sub i32 %14203, 31
  %14205 = sub i32 %14204, -2111780328
  %_3059 = sub i32 %14199, 31
  %gen3060 = mul i32 %14205, 31
  %14206 = sub i32 0, 31
  %14207 = add i32 %14199, %14206
  %_3061 = sub i32 %14199, 31
  %gen3062 = mul i32 %14207, 31
  %14208 = sub i32 0, 31
  %14209 = add i32 %14199, %14208
  %_3063 = sub i32 %14199, 31
  %gen3064 = mul i32 %14209, 31
  %_3065 = shl i32 %14199, 31
  %14210 = sub i32 %14199, 2135302322
  %14211 = add i32 %14210, 31
  %14212 = add i32 %14211, 2135302322
  %add176alteredBB = add nsw i32 %14199, 31
  %14213 = load i32, i32* %f, align 4
  %_3066 = shl i32 %14212, %14213
  %_3067 = shl i32 %14212, %14213
  %14214 = sub i32 0, %14213
  %14215 = sub i32 %14212, %14214
  %add177alteredBB = add nsw i32 %14212, %14213
  %14216 = load i32, i32* %c, align 4
  %14217 = sub i32 %14215, -217161523
  %14218 = sub i32 %14217, %14216
  %14219 = add i32 %14218, -217161523
  %_3068 = sub i32 %14215, %14216
  %gen3069 = mul i32 %14219, %14216
  %14220 = sub i32 0, %14215
  %14221 = add i32 0, %14220
  %_3070 = sub i32 0, %14215
  %14222 = sub i32 0, %14221
  %14223 = sub i32 0, %14216
  %14224 = add i32 %14222, %14223
  %14225 = sub i32 0, %14224
  %gen3071 = add i32 %14221, %14216
  %14226 = sub i32 %14215, -715783455
  %14227 = sub i32 %14226, %14216
  %14228 = add i32 %14227, -715783455
  %_3072 = sub i32 %14215, %14216
  %gen3073 = mul i32 %14228, %14216
  %14229 = add i32 0, 1121981684
  %14230 = sub i32 %14229, %14215
  %14231 = sub i32 %14230, 1121981684
  %_3074 = sub i32 0, %14215
  %14232 = add i32 %14231, 531792261
  %14233 = add i32 %14232, %14216
  %14234 = sub i32 %14233, 531792261
  %gen3075 = add i32 %14231, %14216
  %14235 = sub i32 %14215, 1813317576
  %14236 = sub i32 %14235, %14216
  %14237 = add i32 %14236, 1813317576
  %sub178alteredBB = sub nsw i32 %14215, %14216
  store i32 %14237, i32* %s, align 4
  %14238 = load i32, i32* %s, align 4
  %call179alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %14238)
  store i32 1617385855, i32* %switchVar
  br label %loopEnd

originalBB3079alteredBB:                          ; preds = %loopEntry
  %14239 = load i32, i32* %s, align 4
  %14240 = sub i32 0, %14239
  %14241 = add i32 0, %14240
  %_3080 = sub i32 0, %14239
  %14242 = sub i32 0, %14241
  %14243 = sub i32 0, 29
  %14244 = add i32 %14242, %14243
  %14245 = sub i32 0, %14244
  %gen3081 = add i32 %14241, 29
  %_3082 = shl i32 %14239, 29
  %14246 = sub i32 0, 29
  %14247 = add i32 %14239, %14246
  %_3083 = sub i32 %14239, 29
  %gen3084 = mul i32 %14247, 29
  %_3085 = shl i32 %14239, 29
  %14248 = add i32 %14239, -653678572
  %14249 = sub i32 %14248, 29
  %14250 = sub i32 %14249, -653678572
  %_3086 = sub i32 %14239, 29
  %gen3087 = mul i32 %14250, 29
  %_3088 = shl i32 %14239, 29
  %14251 = sub i32 0, %14239
  %14252 = add i32 0, %14251
  %_3089 = sub i32 0, %14239
  %14253 = sub i32 0, %14252
  %14254 = sub i32 0, 29
  %14255 = add i32 %14253, %14254
  %14256 = sub i32 0, %14255
  %gen3090 = add i32 %14252, 29
  %14257 = sub i32 %14239, 638393798
  %14258 = sub i32 %14257, 29
  %14259 = add i32 %14258, 638393798
  %_3091 = sub i32 %14239, 29
  %gen3092 = mul i32 %14259, 29
  %14260 = add i32 0, -613514566
  %14261 = sub i32 %14260, %14239
  %14262 = sub i32 %14261, -613514566
  %_3093 = sub i32 0, %14239
  %14263 = sub i32 0, 29
  %14264 = sub i32 %14262, %14263
  %gen3094 = add i32 %14262, 29
  %_3095 = shl i32 %14239, 29
  %14265 = sub i32 0, %14239
  %14266 = sub i32 0, 29
  %14267 = add i32 %14265, %14266
  %14268 = sub i32 0, %14267
  %add183alteredBB = add nsw i32 %14239, 29
  %14269 = sub i32 0, %14268
  %14270 = add i32 0, %14269
  %_3096 = sub i32 0, %14268
  %14271 = sub i32 %14270, 977039056
  %14272 = add i32 %14271, 31
  %14273 = add i32 %14272, 977039056
  %gen3097 = add i32 %14270, 31
  %14274 = sub i32 0, %14268
  %14275 = sub i32 0, 31
  %14276 = add i32 %14274, %14275
  %14277 = sub i32 0, %14276
  %add184alteredBB = add nsw i32 %14268, 31
  %14278 = sub i32 0, %14277
  %14279 = add i32 0, %14278
  %_3098 = sub i32 0, %14277
  %14280 = sub i32 %14279, 679419040
  %14281 = add i32 %14280, 30
  %14282 = add i32 %14281, 679419040
  %gen3099 = add i32 %14279, 30
  %14283 = add i32 0, -943678848
  %14284 = sub i32 %14283, %14277
  %14285 = sub i32 %14284, -943678848
  %_3100 = sub i32 0, %14277
  %14286 = sub i32 %14285, 439641536
  %14287 = add i32 %14286, 30
  %14288 = add i32 %14287, 439641536
  %gen3101 = add i32 %14285, 30
  %14289 = sub i32 0, %14277
  %14290 = sub i32 0, 30
  %14291 = add i32 %14289, %14290
  %14292 = sub i32 0, %14291
  %add185alteredBB = add nsw i32 %14277, 30
  %14293 = load i32, i32* %f, align 4
  %14294 = sub i32 0, -1858157873
  %14295 = sub i32 %14294, %14292
  %14296 = add i32 %14295, -1858157873
  %_3102 = sub i32 0, %14292
  %14297 = sub i32 0, %14296
  %14298 = sub i32 0, %14293
  %14299 = add i32 %14297, %14298
  %14300 = sub i32 0, %14299
  %gen3103 = add i32 %14296, %14293
  %_3104 = shl i32 %14292, %14293
  %14301 = sub i32 0, -1967010161
  %14302 = sub i32 %14301, %14292
  %14303 = add i32 %14302, -1967010161
  %_3105 = sub i32 0, %14292
  %14304 = sub i32 0, %14293
  %14305 = sub i32 %14303, %14304
  %gen3106 = add i32 %14303, %14293
  %14306 = sub i32 0, %14293
  %14307 = add i32 %14292, %14306
  %_3107 = sub i32 %14292, %14293
  %gen3108 = mul i32 %14307, %14293
  %14308 = sub i32 0, %14292
  %14309 = sub i32 0, %14293
  %14310 = add i32 %14308, %14309
  %14311 = sub i32 0, %14310
  %add186alteredBB = add nsw i32 %14292, %14293
  %14312 = load i32, i32* %c, align 4
  %14313 = sub i32 0, %14311
  %14314 = add i32 0, %14313
  %_3109 = sub i32 0, %14311
  %14315 = sub i32 0, %14314
  %14316 = sub i32 0, %14312
  %14317 = add i32 %14315, %14316
  %14318 = sub i32 0, %14317
  %gen3110 = add i32 %14314, %14312
  %_3111 = shl i32 %14311, %14312
  %14319 = add i32 %14311, 1058432901
  %14320 = sub i32 %14319, %14312
  %14321 = sub i32 %14320, 1058432901
  %sub187alteredBB = sub nsw i32 %14311, %14312
  store i32 %14321, i32* %s, align 4
  %14322 = load i32, i32* %s, align 4
  %call188alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %14322)
  store i32 -194869309, i32* %switchVar
  br label %loopEnd

originalBB3115alteredBB:                          ; preds = %loopEntry
  %14323 = load i32, i32* %e, align 4
  %cmp211alteredBB = icmp eq i32 %14323, 8
  store i32 -1741146246, i32* %switchVar
  br label %loopEnd

originalBB3119alteredBB:                          ; preds = %loopEntry
  %14324 = load i32, i32* %s, align 4
  %14325 = sub i32 0, %14324
  %14326 = add i32 0, %14325
  %_3120 = sub i32 0, %14324
  %14327 = sub i32 0, 29
  %14328 = sub i32 %14326, %14327
  %gen3121 = add i32 %14326, 29
  %_3122 = shl i32 %14324, 29
  %_3123 = shl i32 %14324, 29
  %_3124 = shl i32 %14324, 29
  %_3125 = shl i32 %14324, 29
  %14329 = sub i32 0, 29
  %14330 = sub i32 %14324, %14329
  %add238alteredBB = add nsw i32 %14324, 29
  %_3126 = shl i32 %14330, 31
  %14331 = sub i32 0, 1462069702
  %14332 = sub i32 %14331, %14330
  %14333 = add i32 %14332, 1462069702
  %_3127 = sub i32 0, %14330
  %14334 = sub i32 0, 31
  %14335 = sub i32 %14333, %14334
  %gen3128 = add i32 %14333, 31
  %_3129 = shl i32 %14330, 31
  %14336 = add i32 %14330, 399703254
  %14337 = add i32 %14336, 31
  %14338 = sub i32 %14337, 399703254
  %add239alteredBB = add nsw i32 %14330, 31
  %14339 = sub i32 %14338, 467359409
  %14340 = sub i32 %14339, 30
  %14341 = add i32 %14340, 467359409
  %_3130 = sub i32 %14338, 30
  %gen3131 = mul i32 %14341, 30
  %_3132 = shl i32 %14338, 30
  %_3133 = shl i32 %14338, 30
  %14342 = sub i32 0, -1193569969
  %14343 = sub i32 %14342, %14338
  %14344 = add i32 %14343, -1193569969
  %_3134 = sub i32 0, %14338
  %14345 = sub i32 0, %14344
  %14346 = sub i32 0, 30
  %14347 = add i32 %14345, %14346
  %14348 = sub i32 0, %14347
  %gen3135 = add i32 %14344, 30
  %14349 = sub i32 0, %14338
  %14350 = sub i32 0, 30
  %14351 = add i32 %14349, %14350
  %14352 = sub i32 0, %14351
  %add240alteredBB = add nsw i32 %14338, 30
  %14353 = add i32 %14352, -1398678325
  %14354 = sub i32 %14353, 31
  %14355 = sub i32 %14354, -1398678325
  %_3136 = sub i32 %14352, 31
  %gen3137 = mul i32 %14355, 31
  %14356 = sub i32 0, %14352
  %14357 = sub i32 0, 31
  %14358 = add i32 %14356, %14357
  %14359 = sub i32 0, %14358
  %add241alteredBB = add nsw i32 %14352, 31
  %14360 = add i32 0, -912100349
  %14361 = sub i32 %14360, %14359
  %14362 = sub i32 %14361, -912100349
  %_3138 = sub i32 0, %14359
  %14363 = add i32 %14362, -1455937990
  %14364 = add i32 %14363, 30
  %14365 = sub i32 %14364, -1455937990
  %gen3139 = add i32 %14362, 30
  %_3140 = shl i32 %14359, 30
  %_3141 = shl i32 %14359, 30
  %_3142 = shl i32 %14359, 30
  %_3143 = shl i32 %14359, 30
  %_3144 = shl i32 %14359, 30
  %14366 = sub i32 0, %14359
  %14367 = add i32 0, %14366
  %_3145 = sub i32 0, %14359
  %14368 = sub i32 0, 30
  %14369 = sub i32 %14367, %14368
  %gen3146 = add i32 %14367, 30
  %14370 = add i32 %14359, 815018246
  %14371 = add i32 %14370, 30
  %14372 = sub i32 %14371, 815018246
  %add242alteredBB = add nsw i32 %14359, 30
  %14373 = sub i32 0, 31
  %14374 = sub i32 %14372, %14373
  %add243alteredBB = add nsw i32 %14372, 31
  %14375 = sub i32 0, 31
  %14376 = add i32 %14374, %14375
  %_3147 = sub i32 %14374, 31
  %gen3148 = mul i32 %14376, 31
  %14377 = add i32 %14374, -230708073
  %14378 = sub i32 %14377, 31
  %14379 = sub i32 %14378, -230708073
  %_3149 = sub i32 %14374, 31
  %gen3150 = mul i32 %14379, 31
  %_3151 = shl i32 %14374, 31
  %_3152 = shl i32 %14374, 31
  %14380 = sub i32 0, %14374
  %14381 = sub i32 0, 31
  %14382 = add i32 %14380, %14381
  %14383 = sub i32 0, %14382
  %add244alteredBB = add nsw i32 %14374, 31
  %14384 = sub i32 0, %14383
  %14385 = add i32 0, %14384
  %_3153 = sub i32 0, %14383
  %14386 = sub i32 0, %14385
  %14387 = sub i32 0, 30
  %14388 = add i32 %14386, %14387
  %14389 = sub i32 0, %14388
  %gen3154 = add i32 %14385, 30
  %14390 = add i32 %14383, -687515629
  %14391 = add i32 %14390, 30
  %14392 = sub i32 %14391, -687515629
  %add245alteredBB = add nsw i32 %14383, 30
  %14393 = load i32, i32* %f, align 4
  %14394 = add i32 %14392, 1904313999
  %14395 = sub i32 %14394, %14393
  %14396 = sub i32 %14395, 1904313999
  %_3155 = sub i32 %14392, %14393
  %gen3156 = mul i32 %14396, %14393
  %_3157 = shl i32 %14392, %14393
  %_3158 = shl i32 %14392, %14393
  %14397 = sub i32 0, %14393
  %14398 = sub i32 %14392, %14397
  %add246alteredBB = add nsw i32 %14392, %14393
  %14399 = load i32, i32* %c, align 4
  %14400 = sub i32 0, 828322982
  %14401 = sub i32 %14400, %14398
  %14402 = add i32 %14401, 828322982
  %_3159 = sub i32 0, %14398
  %14403 = add i32 %14402, 820191230
  %14404 = add i32 %14403, %14399
  %14405 = sub i32 %14404, 820191230
  %gen3160 = add i32 %14402, %14399
  %14406 = add i32 %14398, 1535570026
  %14407 = sub i32 %14406, %14399
  %14408 = sub i32 %14407, 1535570026
  %_3161 = sub i32 %14398, %14399
  %gen3162 = mul i32 %14408, %14399
  %14409 = sub i32 0, %14399
  %14410 = add i32 %14398, %14409
  %sub247alteredBB = sub nsw i32 %14398, %14399
  store i32 %14410, i32* %s, align 4
  %14411 = load i32, i32* %s, align 4
  %call248alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %14411)
  store i32 574473160, i32* %switchVar
  br label %loopEnd

originalBB3166alteredBB:                          ; preds = %loopEntry
  %14412 = load i32, i32* %e, align 4
  %cmp250alteredBB = icmp eq i32 %14412, 11
  store i32 1276490516, i32* %switchVar
  br label %loopEnd

originalBB3170alteredBB:                          ; preds = %loopEntry
  %14413 = load i32, i32* %e, align 4
  %cmp265alteredBB = icmp eq i32 %14413, 12
  store i32 -1658459582, i32* %switchVar
  br label %loopEnd

originalBB3174alteredBB:                          ; preds = %loopEntry
  %14414 = load i32, i32* %s, align 4
  %14415 = sub i32 0, 29
  %14416 = sub i32 %14414, %14415
  %add267alteredBB = add nsw i32 %14414, 29
  %14417 = sub i32 0, 31
  %14418 = add i32 %14416, %14417
  %_3175 = sub i32 %14416, 31
  %gen3176 = mul i32 %14418, 31
  %14419 = add i32 %14416, -374659776
  %14420 = sub i32 %14419, 31
  %14421 = sub i32 %14420, -374659776
  %_3177 = sub i32 %14416, 31
  %gen3178 = mul i32 %14421, 31
  %14422 = sub i32 0, 31
  %14423 = add i32 %14416, %14422
  %_3179 = sub i32 %14416, 31
  %gen3180 = mul i32 %14423, 31
  %_3181 = shl i32 %14416, 31
  %14424 = sub i32 0, 31
  %14425 = add i32 %14416, %14424
  %_3182 = sub i32 %14416, 31
  %gen3183 = mul i32 %14425, 31
  %14426 = sub i32 %14416, -1448883808
  %14427 = sub i32 %14426, 31
  %14428 = add i32 %14427, -1448883808
  %_3184 = sub i32 %14416, 31
  %gen3185 = mul i32 %14428, 31
  %14429 = add i32 %14416, 834950647
  %14430 = sub i32 %14429, 31
  %14431 = sub i32 %14430, 834950647
  %_3186 = sub i32 %14416, 31
  %gen3187 = mul i32 %14431, 31
  %14432 = add i32 0, 1388263907
  %14433 = sub i32 %14432, %14416
  %14434 = sub i32 %14433, 1388263907
  %_3188 = sub i32 0, %14416
  %14435 = sub i32 %14434, 1565746079
  %14436 = add i32 %14435, 31
  %14437 = add i32 %14436, 1565746079
  %gen3189 = add i32 %14434, 31
  %14438 = sub i32 0, 31
  %14439 = add i32 %14416, %14438
  %_3190 = sub i32 %14416, 31
  %gen3191 = mul i32 %14439, 31
  %14440 = sub i32 0, %14416
  %14441 = add i32 0, %14440
  %_3192 = sub i32 0, %14416
  %14442 = add i32 %14441, 355112593
  %14443 = add i32 %14442, 31
  %14444 = sub i32 %14443, 355112593
  %gen3193 = add i32 %14441, 31
  %14445 = sub i32 0, 31
  %14446 = sub i32 %14416, %14445
  %add268alteredBB = add nsw i32 %14416, 31
  %14447 = sub i32 0, %14446
  %14448 = add i32 0, %14447
  %_3194 = sub i32 0, %14446
  %14449 = sub i32 %14448, 1281231161
  %14450 = add i32 %14449, 30
  %14451 = add i32 %14450, 1281231161
  %gen3195 = add i32 %14448, 30
  %14452 = add i32 0, 1306982873
  %14453 = sub i32 %14452, %14446
  %14454 = sub i32 %14453, 1306982873
  %_3196 = sub i32 0, %14446
  %14455 = sub i32 0, 30
  %14456 = sub i32 %14454, %14455
  %gen3197 = add i32 %14454, 30
  %_3198 = shl i32 %14446, 30
  %14457 = sub i32 0, %14446
  %14458 = sub i32 0, 30
  %14459 = add i32 %14457, %14458
  %14460 = sub i32 0, %14459
  %add269alteredBB = add nsw i32 %14446, 30
  %14461 = add i32 %14460, 971323431
  %14462 = sub i32 %14461, 31
  %14463 = sub i32 %14462, 971323431
  %_3199 = sub i32 %14460, 31
  %gen3200 = mul i32 %14463, 31
  %14464 = sub i32 0, %14460
  %14465 = add i32 0, %14464
  %_3201 = sub i32 0, %14460
  %14466 = sub i32 0, 31
  %14467 = sub i32 %14465, %14466
  %gen3202 = add i32 %14465, 31
  %14468 = sub i32 0, %14460
  %14469 = add i32 0, %14468
  %_3203 = sub i32 0, %14460
  %14470 = sub i32 0, 31
  %14471 = sub i32 %14469, %14470
  %gen3204 = add i32 %14469, 31
  %14472 = add i32 %14460, 585756371
  %14473 = add i32 %14472, 31
  %14474 = sub i32 %14473, 585756371
  %add270alteredBB = add nsw i32 %14460, 31
  %14475 = sub i32 0, %14474
  %14476 = add i32 0, %14475
  %_3205 = sub i32 0, %14474
  %14477 = sub i32 0, %14476
  %14478 = sub i32 0, 30
  %14479 = add i32 %14477, %14478
  %14480 = sub i32 0, %14479
  %gen3206 = add i32 %14476, 30
  %14481 = sub i32 0, %14474
  %14482 = add i32 0, %14481
  %_3207 = sub i32 0, %14474
  %14483 = sub i32 %14482, -590546127
  %14484 = add i32 %14483, 30
  %14485 = add i32 %14484, -590546127
  %gen3208 = add i32 %14482, 30
  %14486 = sub i32 0, %14474
  %14487 = add i32 0, %14486
  %_3209 = sub i32 0, %14474
  %14488 = sub i32 0, %14487
  %14489 = sub i32 0, 30
  %14490 = add i32 %14488, %14489
  %14491 = sub i32 0, %14490
  %gen3210 = add i32 %14487, 30
  %14492 = sub i32 %14474, 667147393
  %14493 = sub i32 %14492, 30
  %14494 = add i32 %14493, 667147393
  %_3211 = sub i32 %14474, 30
  %gen3212 = mul i32 %14494, 30
  %14495 = sub i32 0, %14474
  %14496 = sub i32 0, 30
  %14497 = add i32 %14495, %14496
  %14498 = sub i32 0, %14497
  %add271alteredBB = add nsw i32 %14474, 30
  %14499 = sub i32 0, 31
  %14500 = add i32 %14498, %14499
  %_3213 = sub i32 %14498, 31
  %gen3214 = mul i32 %14500, 31
  %14501 = sub i32 0, 31
  %14502 = sub i32 %14498, %14501
  %add272alteredBB = add nsw i32 %14498, 31
  %14503 = sub i32 0, 31
  %14504 = add i32 %14502, %14503
  %_3215 = sub i32 %14502, 31
  %gen3216 = mul i32 %14504, 31
  %14505 = sub i32 0, %14502
  %14506 = add i32 0, %14505
  %_3217 = sub i32 0, %14502
  %14507 = sub i32 0, 31
  %14508 = sub i32 %14506, %14507
  %gen3218 = add i32 %14506, 31
  %_3219 = shl i32 %14502, 31
  %14509 = sub i32 0, 934229802
  %14510 = sub i32 %14509, %14502
  %14511 = add i32 %14510, 934229802
  %_3220 = sub i32 0, %14502
  %14512 = sub i32 0, %14511
  %14513 = sub i32 0, 31
  %14514 = add i32 %14512, %14513
  %14515 = sub i32 0, %14514
  %gen3221 = add i32 %14511, 31
  %_3222 = shl i32 %14502, 31
  %14516 = sub i32 0, %14502
  %14517 = add i32 0, %14516
  %_3223 = sub i32 0, %14502
  %14518 = sub i32 0, %14517
  %14519 = sub i32 0, 31
  %14520 = add i32 %14518, %14519
  %14521 = sub i32 0, %14520
  %gen3224 = add i32 %14517, 31
  %14522 = add i32 %14502, 1899795640
  %14523 = add i32 %14522, 31
  %14524 = sub i32 %14523, 1899795640
  %add273alteredBB = add nsw i32 %14502, 31
  %14525 = sub i32 %14524, 1866553501
  %14526 = sub i32 %14525, 30
  %14527 = add i32 %14526, 1866553501
  %_3225 = sub i32 %14524, 30
  %gen3226 = mul i32 %14527, 30
  %14528 = add i32 0, 1458569352
  %14529 = sub i32 %14528, %14524
  %14530 = sub i32 %14529, 1458569352
  %_3227 = sub i32 0, %14524
  %14531 = sub i32 %14530, -2070470834
  %14532 = add i32 %14531, 30
  %14533 = add i32 %14532, -2070470834
  %gen3228 = add i32 %14530, 30
  %14534 = sub i32 0, 504857744
  %14535 = sub i32 %14534, %14524
  %14536 = add i32 %14535, 504857744
  %_3229 = sub i32 0, %14524
  %14537 = add i32 %14536, 14222757
  %14538 = add i32 %14537, 30
  %14539 = sub i32 %14538, 14222757
  %gen3230 = add i32 %14536, 30
  %14540 = sub i32 0, %14524
  %14541 = sub i32 0, 30
  %14542 = add i32 %14540, %14541
  %14543 = sub i32 0, %14542
  %add274alteredBB = add nsw i32 %14524, 30
  %14544 = sub i32 0, 31
  %14545 = add i32 %14543, %14544
  %_3231 = sub i32 %14543, 31
  %gen3232 = mul i32 %14545, 31
  %14546 = sub i32 0, %14543
  %14547 = sub i32 0, 31
  %14548 = add i32 %14546, %14547
  %14549 = sub i32 0, %14548
  %add275alteredBB = add nsw i32 %14543, 31
  %_3233 = shl i32 %14549, 30
  %14550 = sub i32 %14549, 1132896327
  %14551 = sub i32 %14550, 30
  %14552 = add i32 %14551, 1132896327
  %_3234 = sub i32 %14549, 30
  %gen3235 = mul i32 %14552, 30
  %_3236 = shl i32 %14549, 30
  %14553 = sub i32 0, %14549
  %14554 = add i32 0, %14553
  %_3237 = sub i32 0, %14549
  %14555 = sub i32 %14554, -1911122752
  %14556 = add i32 %14555, 30
  %14557 = add i32 %14556, -1911122752
  %gen3238 = add i32 %14554, 30
  %_3239 = shl i32 %14549, 30
  %_3240 = shl i32 %14549, 30
  %14558 = sub i32 0, 30
  %14559 = add i32 %14549, %14558
  %_3241 = sub i32 %14549, 30
  %gen3242 = mul i32 %14559, 30
  %14560 = sub i32 0, 30
  %14561 = sub i32 %14549, %14560
  %add276alteredBB = add nsw i32 %14549, 30
  %14562 = load i32, i32* %f, align 4
  %14563 = sub i32 0, %14561
  %14564 = add i32 0, %14563
  %_3243 = sub i32 0, %14561
  %14565 = sub i32 0, %14564
  %14566 = sub i32 0, %14562
  %14567 = add i32 %14565, %14566
  %14568 = sub i32 0, %14567
  %gen3244 = add i32 %14564, %14562
  %14569 = sub i32 %14561, 1165120111
  %14570 = sub i32 %14569, %14562
  %14571 = add i32 %14570, 1165120111
  %_3245 = sub i32 %14561, %14562
  %gen3246 = mul i32 %14571, %14562
  %14572 = sub i32 0, %14561
  %14573 = sub i32 0, %14562
  %14574 = add i32 %14572, %14573
  %14575 = sub i32 0, %14574
  %add277alteredBB = add nsw i32 %14561, %14562
  %14576 = load i32, i32* %c, align 4
  %14577 = sub i32 0, %14576
  %14578 = add i32 %14575, %14577
  %_3247 = sub i32 %14575, %14576
  %gen3248 = mul i32 %14578, %14576
  %_3249 = shl i32 %14575, %14576
  %_3250 = shl i32 %14575, %14576
  %14579 = sub i32 0, %14576
  %14580 = add i32 %14575, %14579
  %_3251 = sub i32 %14575, %14576
  %gen3252 = mul i32 %14580, %14576
  %_3253 = shl i32 %14575, %14576
  %_3254 = shl i32 %14575, %14576
  %14581 = add i32 0, -1703403821
  %14582 = sub i32 %14581, %14575
  %14583 = sub i32 %14582, -1703403821
  %_3255 = sub i32 0, %14575
  %14584 = sub i32 0, %14583
  %14585 = sub i32 0, %14576
  %14586 = add i32 %14584, %14585
  %14587 = sub i32 0, %14586
  %gen3256 = add i32 %14583, %14576
  %14588 = sub i32 0, %14576
  %14589 = add i32 %14575, %14588
  %sub278alteredBB = sub nsw i32 %14575, %14576
  store i32 %14589, i32* %s, align 4
  %14590 = load i32, i32* %s, align 4
  %call279alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %14590)
  store i32 152029212, i32* %switchVar
  br label %loopEnd

originalBB3260alteredBB:                          ; preds = %loopEntry
  store i32 1498202359, i32* %switchVar
  br label %loopEnd

originalBB3264alteredBB:                          ; preds = %loopEntry
  %14591 = load i32, i32* %s, align 4
  %14592 = sub i32 0, 29
  %14593 = add i32 %14591, %14592
  %_3265 = sub i32 %14591, 29
  %gen3266 = mul i32 %14593, 29
  %14594 = add i32 0, 116350530
  %14595 = sub i32 %14594, %14591
  %14596 = sub i32 %14595, 116350530
  %_3267 = sub i32 0, %14591
  %14597 = sub i32 0, 29
  %14598 = sub i32 %14596, %14597
  %gen3268 = add i32 %14596, 29
  %_3269 = shl i32 %14591, 29
  %_3270 = shl i32 %14591, 29
  %_3271 = shl i32 %14591, 29
  %14599 = add i32 %14591, -1053563825
  %14600 = sub i32 %14599, 29
  %14601 = sub i32 %14600, -1053563825
  %_3272 = sub i32 %14591, 29
  %gen3273 = mul i32 %14601, 29
  %_3274 = shl i32 %14591, 29
  %14602 = sub i32 0, 29
  %14603 = add i32 %14591, %14602
  %sub284alteredBB = sub nsw i32 %14591, 29
  %14604 = add i32 %14603, 1031123793
  %14605 = sub i32 %14604, 31
  %14606 = sub i32 %14605, 1031123793
  %_3275 = sub i32 %14603, 31
  %gen3276 = mul i32 %14606, 31
  %14607 = sub i32 0, 31
  %14608 = add i32 %14603, %14607
  %_3277 = sub i32 %14603, 31
  %gen3278 = mul i32 %14608, 31
  %14609 = add i32 0, 106715337
  %14610 = sub i32 %14609, %14603
  %14611 = sub i32 %14610, 106715337
  %_3279 = sub i32 0, %14603
  %14612 = sub i32 0, %14611
  %14613 = sub i32 0, 31
  %14614 = add i32 %14612, %14613
  %14615 = sub i32 0, %14614
  %gen3280 = add i32 %14611, 31
  %14616 = add i32 %14603, 2095103257
  %14617 = sub i32 %14616, 31
  %14618 = sub i32 %14617, 2095103257
  %_3281 = sub i32 %14603, 31
  %gen3282 = mul i32 %14618, 31
  %14619 = sub i32 %14603, 1059716040
  %14620 = sub i32 %14619, 31
  %14621 = add i32 %14620, 1059716040
  %sub285alteredBB = sub nsw i32 %14603, 31
  %14622 = load i32, i32* %f, align 4
  %_3283 = shl i32 %14621, %14622
  %14623 = add i32 0, -1744072277
  %14624 = sub i32 %14623, %14621
  %14625 = sub i32 %14624, -1744072277
  %_3284 = sub i32 0, %14621
  %14626 = sub i32 0, %14625
  %14627 = sub i32 0, %14622
  %14628 = add i32 %14626, %14627
  %14629 = sub i32 0, %14628
  %gen3285 = add i32 %14625, %14622
  %14630 = sub i32 0, %14621
  %14631 = add i32 0, %14630
  %_3286 = sub i32 0, %14621
  %14632 = add i32 %14631, 1098977951
  %14633 = add i32 %14632, %14622
  %14634 = sub i32 %14633, 1098977951
  %gen3287 = add i32 %14631, %14622
  %14635 = sub i32 0, -431971721
  %14636 = sub i32 %14635, %14621
  %14637 = add i32 %14636, -431971721
  %_3288 = sub i32 0, %14621
  %14638 = sub i32 0, %14622
  %14639 = sub i32 %14637, %14638
  %gen3289 = add i32 %14637, %14622
  %14640 = add i32 %14621, -588108780
  %14641 = add i32 %14640, %14622
  %14642 = sub i32 %14641, -588108780
  %add286alteredBB = add nsw i32 %14621, %14622
  %14643 = load i32, i32* %c, align 4
  %14644 = sub i32 0, %14643
  %14645 = add i32 %14642, %14644
  %sub287alteredBB = sub nsw i32 %14642, %14643
  store i32 %14645, i32* %s, align 4
  %14646 = load i32, i32* %s, align 4
  %call288alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %14646)
  store i32 -651562586, i32* %switchVar
  br label %loopEnd

originalBB3293alteredBB:                          ; preds = %loopEntry
  %14647 = load i32, i32* %s, align 4
  %14648 = sub i32 0, 29
  %14649 = add i32 %14647, %14648
  %_3294 = sub i32 %14647, 29
  %gen3295 = mul i32 %14649, 29
  %14650 = sub i32 0, %14647
  %14651 = add i32 0, %14650
  %_3296 = sub i32 0, %14647
  %14652 = add i32 %14651, -660100784
  %14653 = add i32 %14652, 29
  %14654 = sub i32 %14653, -660100784
  %gen3297 = add i32 %14651, 29
  %14655 = sub i32 0, 29
  %14656 = add i32 %14647, %14655
  %_3298 = sub i32 %14647, 29
  %gen3299 = mul i32 %14656, 29
  %14657 = sub i32 0, 29
  %14658 = add i32 %14647, %14657
  %sub292alteredBB = sub nsw i32 %14647, 29
  %14659 = load i32, i32* %f, align 4
  %14660 = sub i32 %14658, 902609583
  %14661 = sub i32 %14660, %14659
  %14662 = add i32 %14661, 902609583
  %_3300 = sub i32 %14658, %14659
  %gen3301 = mul i32 %14662, %14659
  %14663 = sub i32 0, %14658
  %14664 = add i32 0, %14663
  %_3302 = sub i32 0, %14658
  %14665 = sub i32 %14664, -1303464459
  %14666 = add i32 %14665, %14659
  %14667 = add i32 %14666, -1303464459
  %gen3303 = add i32 %14664, %14659
  %14668 = sub i32 0, %14658
  %14669 = sub i32 0, %14659
  %14670 = add i32 %14668, %14669
  %14671 = sub i32 0, %14670
  %add293alteredBB = add nsw i32 %14658, %14659
  %14672 = load i32, i32* %c, align 4
  %14673 = add i32 %14671, 1439430153
  %14674 = sub i32 %14673, %14672
  %14675 = sub i32 %14674, 1439430153
  %_3304 = sub i32 %14671, %14672
  %gen3305 = mul i32 %14675, %14672
  %14676 = sub i32 %14671, 904433673
  %14677 = sub i32 %14676, %14672
  %14678 = add i32 %14677, 904433673
  %_3306 = sub i32 %14671, %14672
  %gen3307 = mul i32 %14678, %14672
  %_3308 = shl i32 %14671, %14672
  %14679 = sub i32 0, %14671
  %14680 = add i32 0, %14679
  %_3309 = sub i32 0, %14671
  %14681 = add i32 %14680, -563454084
  %14682 = add i32 %14681, %14672
  %14683 = sub i32 %14682, -563454084
  %gen3310 = add i32 %14680, %14672
  %14684 = sub i32 0, %14672
  %14685 = add i32 %14671, %14684
  %sub294alteredBB = sub nsw i32 %14671, %14672
  store i32 %14685, i32* %s, align 4
  %14686 = load i32, i32* %s, align 4
  %call295alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %14686)
  store i32 1164339277, i32* %switchVar
  br label %loopEnd

originalBB3314alteredBB:                          ; preds = %loopEntry
  %14687 = load i32, i32* %e, align 4
  %cmp312alteredBB = icmp eq i32 %14687, 6
  store i32 2136741556, i32* %switchVar
  br label %loopEnd

originalBB3318alteredBB:                          ; preds = %loopEntry
  %14688 = load i32, i32* %e, align 4
  %cmp321alteredBB = icmp eq i32 %14688, 7
  store i32 -1880223793, i32* %switchVar
  br label %loopEnd

originalBB3322alteredBB:                          ; preds = %loopEntry
  %14689 = load i32, i32* %e, align 4
  %cmp367alteredBB = icmp eq i32 %14689, 11
  store i32 -112024796, i32* %switchVar
  br label %loopEnd

originalBB3326alteredBB:                          ; preds = %loopEntry
  %14690 = load i32, i32* %s, align 4
  %14691 = add i32 %14690, 1730806346
  %14692 = sub i32 %14691, 31
  %14693 = sub i32 %14692, 1730806346
  %_3327 = sub i32 %14690, 31
  %gen3328 = mul i32 %14693, 31
  %14694 = add i32 %14690, -253782387
  %14695 = sub i32 %14694, 31
  %14696 = sub i32 %14695, -253782387
  %_3329 = sub i32 %14690, 31
  %gen3330 = mul i32 %14696, 31
  %_3331 = shl i32 %14690, 31
  %14697 = add i32 %14690, -556603645
  %14698 = sub i32 %14697, 31
  %14699 = sub i32 %14698, -556603645
  %_3332 = sub i32 %14690, 31
  %gen3333 = mul i32 %14699, 31
  %14700 = sub i32 0, %14690
  %14701 = add i32 0, %14700
  %_3334 = sub i32 0, %14690
  %14702 = sub i32 %14701, -1142138146
  %14703 = add i32 %14702, 31
  %14704 = add i32 %14703, -1142138146
  %gen3335 = add i32 %14701, 31
  %_3336 = shl i32 %14690, 31
  %14705 = sub i32 0, 31
  %14706 = add i32 %14690, %14705
  %_3337 = sub i32 %14690, 31
  %gen3338 = mul i32 %14706, 31
  %14707 = sub i32 0, 31
  %14708 = sub i32 %14690, %14707
  %add383alteredBB = add nsw i32 %14690, 31
  %_3339 = shl i32 %14708, 30
  %14709 = sub i32 0, %14708
  %14710 = add i32 0, %14709
  %_3340 = sub i32 0, %14708
  %14711 = sub i32 %14710, 1467122502
  %14712 = add i32 %14711, 30
  %14713 = add i32 %14712, 1467122502
  %gen3341 = add i32 %14710, 30
  %_3342 = shl i32 %14708, 30
  %14714 = sub i32 %14708, -1325274121
  %14715 = sub i32 %14714, 30
  %14716 = add i32 %14715, -1325274121
  %_3343 = sub i32 %14708, 30
  %gen3344 = mul i32 %14716, 30
  %_3345 = shl i32 %14708, 30
  %_3346 = shl i32 %14708, 30
  %_3347 = shl i32 %14708, 30
  %14717 = sub i32 0, %14708
  %14718 = sub i32 0, 30
  %14719 = add i32 %14717, %14718
  %14720 = sub i32 0, %14719
  %add384alteredBB = add nsw i32 %14708, 30
  %14721 = sub i32 0, 453180943
  %14722 = sub i32 %14721, %14720
  %14723 = add i32 %14722, 453180943
  %_3348 = sub i32 0, %14720
  %14724 = sub i32 %14723, 451683532
  %14725 = add i32 %14724, 31
  %14726 = add i32 %14725, 451683532
  %gen3349 = add i32 %14723, 31
  %_3350 = shl i32 %14720, 31
  %_3351 = shl i32 %14720, 31
  %14727 = sub i32 0, %14720
  %14728 = add i32 0, %14727
  %_3352 = sub i32 0, %14720
  %14729 = sub i32 0, 31
  %14730 = sub i32 %14728, %14729
  %gen3353 = add i32 %14728, 31
  %14731 = sub i32 0, 1759840031
  %14732 = sub i32 %14731, %14720
  %14733 = add i32 %14732, 1759840031
  %_3354 = sub i32 0, %14720
  %14734 = add i32 %14733, 307683319
  %14735 = add i32 %14734, 31
  %14736 = sub i32 %14735, 307683319
  %gen3355 = add i32 %14733, 31
  %_3356 = shl i32 %14720, 31
  %_3357 = shl i32 %14720, 31
  %14737 = sub i32 0, 31
  %14738 = sub i32 %14720, %14737
  %add385alteredBB = add nsw i32 %14720, 31
  %14739 = sub i32 0, -1696902999
  %14740 = sub i32 %14739, %14738
  %14741 = add i32 %14740, -1696902999
  %_3358 = sub i32 0, %14738
  %14742 = sub i32 0, 30
  %14743 = sub i32 %14741, %14742
  %gen3359 = add i32 %14741, 30
  %14744 = sub i32 0, %14738
  %14745 = add i32 0, %14744
  %_3360 = sub i32 0, %14738
  %14746 = add i32 %14745, -1620961249
  %14747 = add i32 %14746, 30
  %14748 = sub i32 %14747, -1620961249
  %gen3361 = add i32 %14745, 30
  %_3362 = shl i32 %14738, 30
  %14749 = sub i32 %14738, -710425203
  %14750 = sub i32 %14749, 30
  %14751 = add i32 %14750, -710425203
  %_3363 = sub i32 %14738, 30
  %gen3364 = mul i32 %14751, 30
  %14752 = add i32 %14738, 1952959199
  %14753 = add i32 %14752, 30
  %14754 = sub i32 %14753, 1952959199
  %add386alteredBB = add nsw i32 %14738, 30
  %_3365 = shl i32 %14754, 31
  %_3366 = shl i32 %14754, 31
  %14755 = sub i32 0, %14754
  %14756 = add i32 0, %14755
  %_3367 = sub i32 0, %14754
  %14757 = sub i32 0, %14756
  %14758 = sub i32 0, 31
  %14759 = add i32 %14757, %14758
  %14760 = sub i32 0, %14759
  %gen3368 = add i32 %14756, 31
  %14761 = add i32 0, 1961422064
  %14762 = sub i32 %14761, %14754
  %14763 = sub i32 %14762, 1961422064
  %_3369 = sub i32 0, %14754
  %14764 = sub i32 0, 31
  %14765 = sub i32 %14763, %14764
  %gen3370 = add i32 %14763, 31
  %14766 = add i32 %14754, -1339463979
  %14767 = sub i32 %14766, 31
  %14768 = sub i32 %14767, -1339463979
  %_3371 = sub i32 %14754, 31
  %gen3372 = mul i32 %14768, 31
  %_3373 = shl i32 %14754, 31
  %_3374 = shl i32 %14754, 31
  %14769 = add i32 %14754, 158327482
  %14770 = add i32 %14769, 31
  %14771 = sub i32 %14770, 158327482
  %add387alteredBB = add nsw i32 %14754, 31
  %14772 = sub i32 0, %14771
  %14773 = add i32 0, %14772
  %_3375 = sub i32 0, %14771
  %14774 = sub i32 0, %14773
  %14775 = sub i32 0, 31
  %14776 = add i32 %14774, %14775
  %14777 = sub i32 0, %14776
  %gen3376 = add i32 %14773, 31
  %14778 = sub i32 0, 31
  %14779 = sub i32 %14771, %14778
  %add388alteredBB = add nsw i32 %14771, 31
  %_3377 = shl i32 %14779, 30
  %_3378 = shl i32 %14779, 30
  %14780 = sub i32 0, 611979277
  %14781 = sub i32 %14780, %14779
  %14782 = add i32 %14781, 611979277
  %_3379 = sub i32 0, %14779
  %14783 = sub i32 0, %14782
  %14784 = sub i32 0, 30
  %14785 = add i32 %14783, %14784
  %14786 = sub i32 0, %14785
  %gen3380 = add i32 %14782, 30
  %14787 = add i32 %14779, 828871449
  %14788 = sub i32 %14787, 30
  %14789 = sub i32 %14788, 828871449
  %_3381 = sub i32 %14779, 30
  %gen3382 = mul i32 %14789, 30
  %_3383 = shl i32 %14779, 30
  %14790 = sub i32 0, %14779
  %14791 = add i32 0, %14790
  %_3384 = sub i32 0, %14779
  %14792 = sub i32 0, 30
  %14793 = sub i32 %14791, %14792
  %gen3385 = add i32 %14791, 30
  %14794 = sub i32 %14779, 1081690262
  %14795 = sub i32 %14794, 30
  %14796 = add i32 %14795, 1081690262
  %_3386 = sub i32 %14779, 30
  %gen3387 = mul i32 %14796, 30
  %14797 = add i32 %14779, 910981481
  %14798 = add i32 %14797, 30
  %14799 = sub i32 %14798, 910981481
  %add389alteredBB = add nsw i32 %14779, 30
  %14800 = sub i32 0, 31
  %14801 = sub i32 %14799, %14800
  %add390alteredBB = add nsw i32 %14799, 31
  %14802 = add i32 0, 20918275
  %14803 = sub i32 %14802, %14801
  %14804 = sub i32 %14803, 20918275
  %_3388 = sub i32 0, %14801
  %14805 = sub i32 0, %14804
  %14806 = sub i32 0, 30
  %14807 = add i32 %14805, %14806
  %14808 = sub i32 0, %14807
  %gen3389 = add i32 %14804, 30
  %14809 = sub i32 0, -484224592
  %14810 = sub i32 %14809, %14801
  %14811 = add i32 %14810, -484224592
  %_3390 = sub i32 0, %14801
  %14812 = sub i32 0, %14811
  %14813 = sub i32 0, 30
  %14814 = add i32 %14812, %14813
  %14815 = sub i32 0, %14814
  %gen3391 = add i32 %14811, 30
  %_3392 = shl i32 %14801, 30
  %_3393 = shl i32 %14801, 30
  %14816 = add i32 %14801, -721839777
  %14817 = sub i32 %14816, 30
  %14818 = sub i32 %14817, -721839777
  %_3394 = sub i32 %14801, 30
  %gen3395 = mul i32 %14818, 30
  %_3396 = shl i32 %14801, 30
  %14819 = add i32 %14801, 165915184
  %14820 = sub i32 %14819, 30
  %14821 = sub i32 %14820, 165915184
  %_3397 = sub i32 %14801, 30
  %gen3398 = mul i32 %14821, 30
  %14822 = sub i32 0, 30
  %14823 = add i32 %14801, %14822
  %_3399 = sub i32 %14801, 30
  %gen3400 = mul i32 %14823, 30
  %14824 = add i32 %14801, -798300124
  %14825 = sub i32 %14824, 30
  %14826 = sub i32 %14825, -798300124
  %_3401 = sub i32 %14801, 30
  %gen3402 = mul i32 %14826, 30
  %14827 = sub i32 %14801, 1164358527
  %14828 = add i32 %14827, 30
  %14829 = add i32 %14828, 1164358527
  %add391alteredBB = add nsw i32 %14801, 30
  %14830 = load i32, i32* %f, align 4
  %_3403 = shl i32 %14829, %14830
  %14831 = add i32 %14829, 1453422854
  %14832 = sub i32 %14831, %14830
  %14833 = sub i32 %14832, 1453422854
  %_3404 = sub i32 %14829, %14830
  %gen3405 = mul i32 %14833, %14830
  %14834 = sub i32 %14829, 590583205
  %14835 = sub i32 %14834, %14830
  %14836 = add i32 %14835, 590583205
  %_3406 = sub i32 %14829, %14830
  %gen3407 = mul i32 %14836, %14830
  %14837 = sub i32 %14829, 930668456
  %14838 = add i32 %14837, %14830
  %14839 = add i32 %14838, 930668456
  %add392alteredBB = add nsw i32 %14829, %14830
  %14840 = load i32, i32* %c, align 4
  %_3408 = shl i32 %14839, %14840
  %14841 = sub i32 0, 581850616
  %14842 = sub i32 %14841, %14839
  %14843 = add i32 %14842, 581850616
  %_3409 = sub i32 0, %14839
  %14844 = add i32 %14843, -1724951289
  %14845 = add i32 %14844, %14840
  %14846 = sub i32 %14845, -1724951289
  %gen3410 = add i32 %14843, %14840
  %14847 = add i32 %14839, 221560172
  %14848 = sub i32 %14847, %14840
  %14849 = sub i32 %14848, 221560172
  %sub393alteredBB = sub nsw i32 %14839, %14840
  store i32 %14849, i32* %s, align 4
  %14850 = load i32, i32* %s, align 4
  %call394alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %14850)
  store i32 -1276545128, i32* %switchVar
  br label %loopEnd

originalBB3414alteredBB:                          ; preds = %loopEntry
  %14851 = load i32, i32* %s, align 4
  %14852 = sub i32 %14851, 36562100
  %14853 = sub i32 %14852, 30
  %14854 = add i32 %14853, 36562100
  %_3415 = sub i32 %14851, 30
  %gen3416 = mul i32 %14854, 30
  %14855 = sub i32 0, %14851
  %14856 = add i32 0, %14855
  %_3417 = sub i32 0, %14851
  %14857 = sub i32 0, 30
  %14858 = sub i32 %14856, %14857
  %gen3418 = add i32 %14856, 30
  %14859 = sub i32 0, 467876015
  %14860 = sub i32 %14859, %14851
  %14861 = add i32 %14860, 467876015
  %_3419 = sub i32 0, %14851
  %14862 = sub i32 0, %14861
  %14863 = sub i32 0, 30
  %14864 = add i32 %14862, %14863
  %14865 = sub i32 0, %14864
  %gen3420 = add i32 %14861, 30
  %14866 = add i32 %14851, 1914652803
  %14867 = sub i32 %14866, 30
  %14868 = sub i32 %14867, 1914652803
  %_3421 = sub i32 %14851, 30
  %gen3422 = mul i32 %14868, 30
  %14869 = sub i32 0, 30
  %14870 = sub i32 %14851, %14869
  %add423alteredBB = add nsw i32 %14851, 30
  %14871 = load i32, i32* %f, align 4
  %14872 = add i32 0, 553297316
  %14873 = sub i32 %14872, %14870
  %14874 = sub i32 %14873, 553297316
  %_3423 = sub i32 0, %14870
  %14875 = sub i32 0, %14874
  %14876 = sub i32 0, %14871
  %14877 = add i32 %14875, %14876
  %14878 = sub i32 0, %14877
  %gen3424 = add i32 %14874, %14871
  %14879 = add i32 0, -2116724984
  %14880 = sub i32 %14879, %14870
  %14881 = sub i32 %14880, -2116724984
  %_3425 = sub i32 0, %14870
  %14882 = sub i32 0, %14881
  %14883 = sub i32 0, %14871
  %14884 = add i32 %14882, %14883
  %14885 = sub i32 0, %14884
  %gen3426 = add i32 %14881, %14871
  %_3427 = shl i32 %14870, %14871
  %14886 = sub i32 0, %14870
  %14887 = add i32 0, %14886
  %_3428 = sub i32 0, %14870
  %14888 = add i32 %14887, -1694449025
  %14889 = add i32 %14888, %14871
  %14890 = sub i32 %14889, -1694449025
  %gen3429 = add i32 %14887, %14871
  %_3430 = shl i32 %14870, %14871
  %14891 = sub i32 0, %14871
  %14892 = add i32 %14870, %14891
  %_3431 = sub i32 %14870, %14871
  %gen3432 = mul i32 %14892, %14871
  %14893 = sub i32 0, %14870
  %14894 = sub i32 0, %14871
  %14895 = add i32 %14893, %14894
  %14896 = sub i32 0, %14895
  %add424alteredBB = add nsw i32 %14870, %14871
  %14897 = load i32, i32* %c, align 4
  %14898 = add i32 %14896, 1076672578
  %14899 = sub i32 %14898, %14897
  %14900 = sub i32 %14899, 1076672578
  %_3433 = sub i32 %14896, %14897
  %gen3434 = mul i32 %14900, %14897
  %14901 = add i32 %14896, 537502815
  %14902 = sub i32 %14901, %14897
  %14903 = sub i32 %14902, 537502815
  %_3435 = sub i32 %14896, %14897
  %gen3436 = mul i32 %14903, %14897
  %14904 = add i32 0, -1465252992
  %14905 = sub i32 %14904, %14896
  %14906 = sub i32 %14905, -1465252992
  %_3437 = sub i32 0, %14896
  %14907 = sub i32 %14906, 424981781
  %14908 = add i32 %14907, %14897
  %14909 = add i32 %14908, 424981781
  %gen3438 = add i32 %14906, %14897
  %_3439 = shl i32 %14896, %14897
  %14910 = add i32 0, -1862736806
  %14911 = sub i32 %14910, %14896
  %14912 = sub i32 %14911, -1862736806
  %_3440 = sub i32 0, %14896
  %14913 = sub i32 %14912, -623222559
  %14914 = add i32 %14913, %14897
  %14915 = add i32 %14914, -623222559
  %gen3441 = add i32 %14912, %14897
  %14916 = add i32 0, 813027210
  %14917 = sub i32 %14916, %14896
  %14918 = sub i32 %14917, 813027210
  %_3442 = sub i32 0, %14896
  %14919 = add i32 %14918, 258256680
  %14920 = add i32 %14919, %14897
  %14921 = sub i32 %14920, 258256680
  %gen3443 = add i32 %14918, %14897
  %14922 = sub i32 %14896, 1629917201
  %14923 = sub i32 %14922, %14897
  %14924 = add i32 %14923, 1629917201
  %sub425alteredBB = sub nsw i32 %14896, %14897
  store i32 %14924, i32* %s, align 4
  %14925 = load i32, i32* %s, align 4
  %call426alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %14925)
  store i32 2143913474, i32* %switchVar
  br label %loopEnd

originalBB3447alteredBB:                          ; preds = %loopEntry
  %14926 = load i32, i32* %s, align 4
  %14927 = sub i32 0, %14926
  %14928 = add i32 0, %14927
  %_3448 = sub i32 0, %14926
  %14929 = sub i32 0, %14928
  %14930 = sub i32 0, 30
  %14931 = add i32 %14929, %14930
  %14932 = sub i32 0, %14931
  %gen3449 = add i32 %14928, 30
  %_3450 = shl i32 %14926, 30
  %14933 = add i32 %14926, -191030870
  %14934 = add i32 %14933, 30
  %14935 = sub i32 %14934, -191030870
  %add430alteredBB = add nsw i32 %14926, 30
  %14936 = sub i32 0, 1639470901
  %14937 = sub i32 %14936, %14935
  %14938 = add i32 %14937, 1639470901
  %_3451 = sub i32 0, %14935
  %14939 = sub i32 0, %14938
  %14940 = sub i32 0, 31
  %14941 = add i32 %14939, %14940
  %14942 = sub i32 0, %14941
  %gen3452 = add i32 %14938, 31
  %14943 = sub i32 %14935, -1696609658
  %14944 = sub i32 %14943, 31
  %14945 = add i32 %14944, -1696609658
  %_3453 = sub i32 %14935, 31
  %gen3454 = mul i32 %14945, 31
  %14946 = sub i32 0, %14935
  %14947 = add i32 0, %14946
  %_3455 = sub i32 0, %14935
  %14948 = sub i32 %14947, 1467007962
  %14949 = add i32 %14948, 31
  %14950 = add i32 %14949, 1467007962
  %gen3456 = add i32 %14947, 31
  %14951 = sub i32 0, 31
  %14952 = add i32 %14935, %14951
  %_3457 = sub i32 %14935, 31
  %gen3458 = mul i32 %14952, 31
  %_3459 = shl i32 %14935, 31
  %_3460 = shl i32 %14935, 31
  %_3461 = shl i32 %14935, 31
  %14953 = sub i32 0, 31
  %14954 = add i32 %14935, %14953
  %_3462 = sub i32 %14935, 31
  %gen3463 = mul i32 %14954, 31
  %14955 = sub i32 0, %14935
  %14956 = sub i32 0, 31
  %14957 = add i32 %14955, %14956
  %14958 = sub i32 0, %14957
  %add431alteredBB = add nsw i32 %14935, 31
  %14959 = load i32, i32* %f, align 4
  %_3464 = shl i32 %14958, %14959
  %14960 = sub i32 0, %14958
  %14961 = add i32 0, %14960
  %_3465 = sub i32 0, %14958
  %14962 = sub i32 0, %14959
  %14963 = sub i32 %14961, %14962
  %gen3466 = add i32 %14961, %14959
  %14964 = add i32 %14958, 1581692894
  %14965 = sub i32 %14964, %14959
  %14966 = sub i32 %14965, 1581692894
  %_3467 = sub i32 %14958, %14959
  %gen3468 = mul i32 %14966, %14959
  %14967 = sub i32 %14958, -1020578169
  %14968 = sub i32 %14967, %14959
  %14969 = add i32 %14968, -1020578169
  %_3469 = sub i32 %14958, %14959
  %gen3470 = mul i32 %14969, %14959
  %14970 = sub i32 0, %14958
  %14971 = sub i32 0, %14959
  %14972 = add i32 %14970, %14971
  %14973 = sub i32 0, %14972
  %add432alteredBB = add nsw i32 %14958, %14959
  %14974 = load i32, i32* %c, align 4
  %14975 = add i32 0, -1361432453
  %14976 = sub i32 %14975, %14973
  %14977 = sub i32 %14976, -1361432453
  %_3471 = sub i32 0, %14973
  %14978 = sub i32 0, %14974
  %14979 = sub i32 %14977, %14978
  %gen3472 = add i32 %14977, %14974
  %14980 = sub i32 0, %14974
  %14981 = add i32 %14973, %14980
  %_3473 = sub i32 %14973, %14974
  %gen3474 = mul i32 %14981, %14974
  %14982 = sub i32 0, %14973
  %14983 = add i32 0, %14982
  %_3475 = sub i32 0, %14973
  %14984 = sub i32 0, %14983
  %14985 = sub i32 0, %14974
  %14986 = add i32 %14984, %14985
  %14987 = sub i32 0, %14986
  %gen3476 = add i32 %14983, %14974
  %14988 = add i32 0, -1302227779
  %14989 = sub i32 %14988, %14973
  %14990 = sub i32 %14989, -1302227779
  %_3477 = sub i32 0, %14973
  %14991 = sub i32 0, %14974
  %14992 = sub i32 %14990, %14991
  %gen3478 = add i32 %14990, %14974
  %14993 = add i32 0, -486947124
  %14994 = sub i32 %14993, %14973
  %14995 = sub i32 %14994, -486947124
  %_3479 = sub i32 0, %14973
  %14996 = sub i32 %14995, 1539431305
  %14997 = add i32 %14996, %14974
  %14998 = add i32 %14997, 1539431305
  %gen3480 = add i32 %14995, %14974
  %14999 = sub i32 0, -300805606
  %15000 = sub i32 %14999, %14973
  %15001 = add i32 %15000, -300805606
  %_3481 = sub i32 0, %14973
  %15002 = sub i32 0, %14974
  %15003 = sub i32 %15001, %15002
  %gen3482 = add i32 %15001, %14974
  %_3483 = shl i32 %14973, %14974
  %15004 = add i32 %14973, 369665092
  %15005 = sub i32 %15004, %14974
  %15006 = sub i32 %15005, 369665092
  %sub433alteredBB = sub nsw i32 %14973, %14974
  store i32 %15006, i32* %s, align 4
  %15007 = load i32, i32* %s, align 4
  %call434alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15007)
  store i32 1363543197, i32* %switchVar
  br label %loopEnd

originalBB3487alteredBB:                          ; preds = %loopEntry
  %15008 = load i32, i32* %s, align 4
  %15009 = add i32 %15008, -1921648525
  %15010 = sub i32 %15009, 30
  %15011 = sub i32 %15010, -1921648525
  %_3488 = sub i32 %15008, 30
  %gen3489 = mul i32 %15011, 30
  %15012 = add i32 0, -925902363
  %15013 = sub i32 %15012, %15008
  %15014 = sub i32 %15013, -925902363
  %_3490 = sub i32 0, %15008
  %15015 = sub i32 0, 30
  %15016 = sub i32 %15014, %15015
  %gen3491 = add i32 %15014, 30
  %15017 = sub i32 0, -1856373191
  %15018 = sub i32 %15017, %15008
  %15019 = add i32 %15018, -1856373191
  %_3492 = sub i32 0, %15008
  %15020 = sub i32 0, %15019
  %15021 = sub i32 0, 30
  %15022 = add i32 %15020, %15021
  %15023 = sub i32 0, %15022
  %gen3493 = add i32 %15019, 30
  %15024 = add i32 %15008, 1924576699
  %15025 = sub i32 %15024, 30
  %15026 = sub i32 %15025, 1924576699
  %_3494 = sub i32 %15008, 30
  %gen3495 = mul i32 %15026, 30
  %15027 = add i32 %15008, -827385092
  %15028 = add i32 %15027, 30
  %15029 = sub i32 %15028, -827385092
  %add438alteredBB = add nsw i32 %15008, 30
  %_3496 = shl i32 %15029, 31
  %15030 = sub i32 %15029, 1469687750
  %15031 = sub i32 %15030, 31
  %15032 = add i32 %15031, 1469687750
  %_3497 = sub i32 %15029, 31
  %gen3498 = mul i32 %15032, 31
  %_3499 = shl i32 %15029, 31
  %15033 = add i32 %15029, 1593052703
  %15034 = sub i32 %15033, 31
  %15035 = sub i32 %15034, 1593052703
  %_3500 = sub i32 %15029, 31
  %gen3501 = mul i32 %15035, 31
  %15036 = sub i32 0, 31
  %15037 = add i32 %15029, %15036
  %_3502 = sub i32 %15029, 31
  %gen3503 = mul i32 %15037, 31
  %15038 = sub i32 0, 31
  %15039 = add i32 %15029, %15038
  %_3504 = sub i32 %15029, 31
  %gen3505 = mul i32 %15039, 31
  %15040 = add i32 %15029, -1962827457
  %15041 = add i32 %15040, 31
  %15042 = sub i32 %15041, -1962827457
  %add439alteredBB = add nsw i32 %15029, 31
  %15043 = sub i32 %15042, -1871411648
  %15044 = sub i32 %15043, 30
  %15045 = add i32 %15044, -1871411648
  %_3506 = sub i32 %15042, 30
  %gen3507 = mul i32 %15045, 30
  %15046 = sub i32 0, 30
  %15047 = sub i32 %15042, %15046
  %add440alteredBB = add nsw i32 %15042, 30
  %15048 = load i32, i32* %f, align 4
  %_3508 = shl i32 %15047, %15048
  %15049 = add i32 %15047, 328044876
  %15050 = add i32 %15049, %15048
  %15051 = sub i32 %15050, 328044876
  %add441alteredBB = add nsw i32 %15047, %15048
  %15052 = load i32, i32* %c, align 4
  %_3509 = shl i32 %15051, %15052
  %15053 = add i32 0, -653156365
  %15054 = sub i32 %15053, %15051
  %15055 = sub i32 %15054, -653156365
  %_3510 = sub i32 0, %15051
  %15056 = add i32 %15055, -1679313170
  %15057 = add i32 %15056, %15052
  %15058 = sub i32 %15057, -1679313170
  %gen3511 = add i32 %15055, %15052
  %15059 = sub i32 %15051, 1400272794
  %15060 = sub i32 %15059, %15052
  %15061 = add i32 %15060, 1400272794
  %_3512 = sub i32 %15051, %15052
  %gen3513 = mul i32 %15061, %15052
  %_3514 = shl i32 %15051, %15052
  %15062 = add i32 %15051, 266989353
  %15063 = sub i32 %15062, %15052
  %15064 = sub i32 %15063, 266989353
  %_3515 = sub i32 %15051, %15052
  %gen3516 = mul i32 %15064, %15052
  %_3517 = shl i32 %15051, %15052
  %_3518 = shl i32 %15051, %15052
  %15065 = sub i32 0, 1367891565
  %15066 = sub i32 %15065, %15051
  %15067 = add i32 %15066, 1367891565
  %_3519 = sub i32 0, %15051
  %15068 = sub i32 0, %15052
  %15069 = sub i32 %15067, %15068
  %gen3520 = add i32 %15067, %15052
  %15070 = sub i32 %15051, 502906579
  %15071 = sub i32 %15070, %15052
  %15072 = add i32 %15071, 502906579
  %sub442alteredBB = sub nsw i32 %15051, %15052
  store i32 %15072, i32* %s, align 4
  %15073 = load i32, i32* %s, align 4
  %call443alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15073)
  store i32 -2010769785, i32* %switchVar
  br label %loopEnd

originalBB3524alteredBB:                          ; preds = %loopEntry
  %15074 = load i32, i32* %e, align 4
  %cmp445alteredBB = icmp eq i32 %15074, 8
  store i32 -1229429443, i32* %switchVar
  br label %loopEnd

originalBB3528alteredBB:                          ; preds = %loopEntry
  %15075 = load i32, i32* %s, align 4
  %15076 = add i32 %15075, -1223329437
  %15077 = sub i32 %15076, 30
  %15078 = sub i32 %15077, -1223329437
  %_3529 = sub i32 %15075, 30
  %gen3530 = mul i32 %15078, 30
  %15079 = sub i32 0, 1161368054
  %15080 = sub i32 %15079, %15075
  %15081 = add i32 %15080, 1161368054
  %_3531 = sub i32 0, %15075
  %15082 = sub i32 %15081, -1477970091
  %15083 = add i32 %15082, 30
  %15084 = add i32 %15083, -1477970091
  %gen3532 = add i32 %15081, 30
  %_3533 = shl i32 %15075, 30
  %15085 = add i32 %15075, 831622875
  %15086 = sub i32 %15085, 30
  %15087 = sub i32 %15086, 831622875
  %_3534 = sub i32 %15075, 30
  %gen3535 = mul i32 %15087, 30
  %15088 = sub i32 0, 30
  %15089 = add i32 %15075, %15088
  %_3536 = sub i32 %15075, 30
  %gen3537 = mul i32 %15089, 30
  %15090 = sub i32 %15075, -1879660483
  %15091 = sub i32 %15090, 30
  %15092 = add i32 %15091, -1879660483
  %_3538 = sub i32 %15075, 30
  %gen3539 = mul i32 %15092, 30
  %15093 = sub i32 0, 30
  %15094 = sub i32 %15075, %15093
  %add447alteredBB = add nsw i32 %15075, 30
  %15095 = add i32 %15094, -1421610086
  %15096 = sub i32 %15095, 31
  %15097 = sub i32 %15096, -1421610086
  %_3540 = sub i32 %15094, 31
  %gen3541 = mul i32 %15097, 31
  %15098 = sub i32 0, -156348531
  %15099 = sub i32 %15098, %15094
  %15100 = add i32 %15099, -156348531
  %_3542 = sub i32 0, %15094
  %15101 = sub i32 0, 31
  %15102 = sub i32 %15100, %15101
  %gen3543 = add i32 %15100, 31
  %15103 = sub i32 0, %15094
  %15104 = add i32 0, %15103
  %_3544 = sub i32 0, %15094
  %15105 = sub i32 %15104, -2079001200
  %15106 = add i32 %15105, 31
  %15107 = add i32 %15106, -2079001200
  %gen3545 = add i32 %15104, 31
  %_3546 = shl i32 %15094, 31
  %15108 = sub i32 0, 31
  %15109 = sub i32 %15094, %15108
  %add448alteredBB = add nsw i32 %15094, 31
  %15110 = sub i32 0, -1994815089
  %15111 = sub i32 %15110, %15109
  %15112 = add i32 %15111, -1994815089
  %_3547 = sub i32 0, %15109
  %15113 = sub i32 0, 30
  %15114 = sub i32 %15112, %15113
  %gen3548 = add i32 %15112, 30
  %15115 = sub i32 0, 30
  %15116 = sub i32 %15109, %15115
  %add449alteredBB = add nsw i32 %15109, 30
  %15117 = add i32 %15116, -526896807
  %15118 = sub i32 %15117, 31
  %15119 = sub i32 %15118, -526896807
  %_3549 = sub i32 %15116, 31
  %gen3550 = mul i32 %15119, 31
  %15120 = sub i32 0, %15116
  %15121 = add i32 0, %15120
  %_3551 = sub i32 0, %15116
  %15122 = add i32 %15121, -179945060
  %15123 = add i32 %15122, 31
  %15124 = sub i32 %15123, -179945060
  %gen3552 = add i32 %15121, 31
  %15125 = add i32 %15116, -2104414834
  %15126 = sub i32 %15125, 31
  %15127 = sub i32 %15126, -2104414834
  %_3553 = sub i32 %15116, 31
  %gen3554 = mul i32 %15127, 31
  %15128 = sub i32 0, %15116
  %15129 = add i32 0, %15128
  %_3555 = sub i32 0, %15116
  %15130 = add i32 %15129, -123715327
  %15131 = add i32 %15130, 31
  %15132 = sub i32 %15131, -123715327
  %gen3556 = add i32 %15129, 31
  %15133 = sub i32 0, -866562264
  %15134 = sub i32 %15133, %15116
  %15135 = add i32 %15134, -866562264
  %_3557 = sub i32 0, %15116
  %15136 = sub i32 0, %15135
  %15137 = sub i32 0, 31
  %15138 = add i32 %15136, %15137
  %15139 = sub i32 0, %15138
  %gen3558 = add i32 %15135, 31
  %15140 = sub i32 %15116, -1096482385
  %15141 = add i32 %15140, 31
  %15142 = add i32 %15141, -1096482385
  %add450alteredBB = add nsw i32 %15116, 31
  %15143 = load i32, i32* %f, align 4
  %_3559 = shl i32 %15142, %15143
  %_3560 = shl i32 %15142, %15143
  %15144 = add i32 0, -1489987423
  %15145 = sub i32 %15144, %15142
  %15146 = sub i32 %15145, -1489987423
  %_3561 = sub i32 0, %15142
  %15147 = sub i32 %15146, -1588400658
  %15148 = add i32 %15147, %15143
  %15149 = add i32 %15148, -1588400658
  %gen3562 = add i32 %15146, %15143
  %15150 = add i32 0, 1143932465
  %15151 = sub i32 %15150, %15142
  %15152 = sub i32 %15151, 1143932465
  %_3563 = sub i32 0, %15142
  %15153 = sub i32 0, %15152
  %15154 = sub i32 0, %15143
  %15155 = add i32 %15153, %15154
  %15156 = sub i32 0, %15155
  %gen3564 = add i32 %15152, %15143
  %15157 = sub i32 0, %15142
  %15158 = add i32 0, %15157
  %_3565 = sub i32 0, %15142
  %15159 = sub i32 0, %15158
  %15160 = sub i32 0, %15143
  %15161 = add i32 %15159, %15160
  %15162 = sub i32 0, %15161
  %gen3566 = add i32 %15158, %15143
  %_3567 = shl i32 %15142, %15143
  %15163 = sub i32 %15142, 1741180704
  %15164 = add i32 %15163, %15143
  %15165 = add i32 %15164, 1741180704
  %add451alteredBB = add nsw i32 %15142, %15143
  %15166 = load i32, i32* %c, align 4
  %15167 = sub i32 0, -1321782818
  %15168 = sub i32 %15167, %15165
  %15169 = add i32 %15168, -1321782818
  %_3568 = sub i32 0, %15165
  %15170 = sub i32 0, %15169
  %15171 = sub i32 0, %15166
  %15172 = add i32 %15170, %15171
  %15173 = sub i32 0, %15172
  %gen3569 = add i32 %15169, %15166
  %_3570 = shl i32 %15165, %15166
  %_3571 = shl i32 %15165, %15166
  %_3572 = shl i32 %15165, %15166
  %15174 = sub i32 0, %15165
  %15175 = add i32 0, %15174
  %_3573 = sub i32 0, %15165
  %15176 = sub i32 0, %15175
  %15177 = sub i32 0, %15166
  %15178 = add i32 %15176, %15177
  %15179 = sub i32 0, %15178
  %gen3574 = add i32 %15175, %15166
  %_3575 = shl i32 %15165, %15166
  %15180 = add i32 %15165, 1610167840
  %15181 = sub i32 %15180, %15166
  %15182 = sub i32 %15181, 1610167840
  %_3576 = sub i32 %15165, %15166
  %gen3577 = mul i32 %15182, %15166
  %15183 = add i32 %15165, 2144655073
  %15184 = sub i32 %15183, %15166
  %15185 = sub i32 %15184, 2144655073
  %sub452alteredBB = sub nsw i32 %15165, %15166
  store i32 %15185, i32* %s, align 4
  %15186 = load i32, i32* %s, align 4
  %call453alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15186)
  store i32 1346979380, i32* %switchVar
  br label %loopEnd

originalBB3581alteredBB:                          ; preds = %loopEntry
  %15187 = load i32, i32* %e, align 4
  %cmp506alteredBB = icmp eq i32 %15187, 1
  store i32 -906418732, i32* %switchVar
  br label %loopEnd

originalBB3585alteredBB:                          ; preds = %loopEntry
  %15188 = load i32, i32* %s, align 4
  %_3586 = shl i32 %15188, 30
  %15189 = sub i32 %15188, -863307129
  %15190 = sub i32 %15189, 30
  %15191 = add i32 %15190, -863307129
  %_3587 = sub i32 %15188, 30
  %gen3588 = mul i32 %15191, 30
  %15192 = sub i32 %15188, -283510879
  %15193 = sub i32 %15192, 30
  %15194 = add i32 %15193, -283510879
  %_3589 = sub i32 %15188, 30
  %gen3590 = mul i32 %15194, 30
  %15195 = sub i32 0, %15188
  %15196 = add i32 0, %15195
  %_3591 = sub i32 0, %15188
  %15197 = add i32 %15196, 240140399
  %15198 = add i32 %15197, 30
  %15199 = sub i32 %15198, 240140399
  %gen3592 = add i32 %15196, 30
  %_3593 = shl i32 %15188, 30
  %15200 = add i32 %15188, -537169577
  %15201 = sub i32 %15200, 30
  %15202 = sub i32 %15201, -537169577
  %_3594 = sub i32 %15188, 30
  %gen3595 = mul i32 %15202, 30
  %15203 = sub i32 0, 30
  %15204 = add i32 %15188, %15203
  %sub508alteredBB = sub nsw i32 %15188, 30
  %15205 = add i32 %15204, 1005485805
  %15206 = sub i32 %15205, 31
  %15207 = sub i32 %15206, 1005485805
  %_3596 = sub i32 %15204, 31
  %gen3597 = mul i32 %15207, 31
  %15208 = sub i32 0, -1844817309
  %15209 = sub i32 %15208, %15204
  %15210 = add i32 %15209, -1844817309
  %_3598 = sub i32 0, %15204
  %15211 = add i32 %15210, -260385856
  %15212 = add i32 %15211, 31
  %15213 = sub i32 %15212, -260385856
  %gen3599 = add i32 %15210, 31
  %15214 = add i32 0, -217611016
  %15215 = sub i32 %15214, %15204
  %15216 = sub i32 %15215, -217611016
  %_3600 = sub i32 0, %15204
  %15217 = sub i32 0, 31
  %15218 = sub i32 %15216, %15217
  %gen3601 = add i32 %15216, 31
  %15219 = sub i32 0, 1607518221
  %15220 = sub i32 %15219, %15204
  %15221 = add i32 %15220, 1607518221
  %_3602 = sub i32 0, %15204
  %15222 = sub i32 0, %15221
  %15223 = sub i32 0, 31
  %15224 = add i32 %15222, %15223
  %15225 = sub i32 0, %15224
  %gen3603 = add i32 %15221, 31
  %15226 = sub i32 0, -1060689591
  %15227 = sub i32 %15226, %15204
  %15228 = add i32 %15227, -1060689591
  %_3604 = sub i32 0, %15204
  %15229 = sub i32 0, %15228
  %15230 = sub i32 0, 31
  %15231 = add i32 %15229, %15230
  %15232 = sub i32 0, %15231
  %gen3605 = add i32 %15228, 31
  %15233 = add i32 %15204, 432143419
  %15234 = sub i32 %15233, 31
  %15235 = sub i32 %15234, 432143419
  %_3606 = sub i32 %15204, 31
  %gen3607 = mul i32 %15235, 31
  %15236 = sub i32 0, 31
  %15237 = add i32 %15204, %15236
  %_3608 = sub i32 %15204, 31
  %gen3609 = mul i32 %15237, 31
  %15238 = sub i32 0, 31
  %15239 = add i32 %15204, %15238
  %sub509alteredBB = sub nsw i32 %15204, 31
  %_3610 = shl i32 %15239, 29
  %15240 = add i32 0, -1234307150
  %15241 = sub i32 %15240, %15239
  %15242 = sub i32 %15241, -1234307150
  %_3611 = sub i32 0, %15239
  %15243 = sub i32 %15242, -1073941313
  %15244 = add i32 %15243, 29
  %15245 = add i32 %15244, -1073941313
  %gen3612 = add i32 %15242, 29
  %15246 = add i32 0, 51052401
  %15247 = sub i32 %15246, %15239
  %15248 = sub i32 %15247, 51052401
  %_3613 = sub i32 0, %15239
  %15249 = sub i32 %15248, 759720480
  %15250 = add i32 %15249, 29
  %15251 = add i32 %15250, 759720480
  %gen3614 = add i32 %15248, 29
  %15252 = add i32 0, 1156725097
  %15253 = sub i32 %15252, %15239
  %15254 = sub i32 %15253, 1156725097
  %_3615 = sub i32 0, %15239
  %15255 = add i32 %15254, -1114023777
  %15256 = add i32 %15255, 29
  %15257 = sub i32 %15256, -1114023777
  %gen3616 = add i32 %15254, 29
  %15258 = sub i32 0, %15239
  %15259 = add i32 0, %15258
  %_3617 = sub i32 0, %15239
  %15260 = sub i32 %15259, -877043620
  %15261 = add i32 %15260, 29
  %15262 = add i32 %15261, -877043620
  %gen3618 = add i32 %15259, 29
  %15263 = sub i32 %15239, 282854200
  %15264 = sub i32 %15263, 29
  %15265 = add i32 %15264, 282854200
  %sub510alteredBB = sub nsw i32 %15239, 29
  %15266 = add i32 %15265, 1747280947
  %15267 = sub i32 %15266, 31
  %15268 = sub i32 %15267, 1747280947
  %_3619 = sub i32 %15265, 31
  %gen3620 = mul i32 %15268, 31
  %15269 = sub i32 %15265, 1831325458
  %15270 = sub i32 %15269, 31
  %15271 = add i32 %15270, 1831325458
  %_3621 = sub i32 %15265, 31
  %gen3622 = mul i32 %15271, 31
  %15272 = sub i32 0, %15265
  %15273 = add i32 0, %15272
  %_3623 = sub i32 0, %15265
  %15274 = sub i32 0, 31
  %15275 = sub i32 %15273, %15274
  %gen3624 = add i32 %15273, 31
  %15276 = add i32 %15265, 385691029
  %15277 = sub i32 %15276, 31
  %15278 = sub i32 %15277, 385691029
  %_3625 = sub i32 %15265, 31
  %gen3626 = mul i32 %15278, 31
  %15279 = add i32 %15265, 499712447
  %15280 = sub i32 %15279, 31
  %15281 = sub i32 %15280, 499712447
  %sub511alteredBB = sub nsw i32 %15265, 31
  %15282 = load i32, i32* %f, align 4
  %15283 = sub i32 0, 2098569160
  %15284 = sub i32 %15283, %15281
  %15285 = add i32 %15284, 2098569160
  %_3627 = sub i32 0, %15281
  %15286 = add i32 %15285, -1800913220
  %15287 = add i32 %15286, %15282
  %15288 = sub i32 %15287, -1800913220
  %gen3628 = add i32 %15285, %15282
  %_3629 = shl i32 %15281, %15282
  %15289 = sub i32 0, %15281
  %15290 = add i32 0, %15289
  %_3630 = sub i32 0, %15281
  %15291 = sub i32 0, %15282
  %15292 = sub i32 %15290, %15291
  %gen3631 = add i32 %15290, %15282
  %_3632 = shl i32 %15281, %15282
  %15293 = add i32 %15281, 1209777339
  %15294 = sub i32 %15293, %15282
  %15295 = sub i32 %15294, 1209777339
  %_3633 = sub i32 %15281, %15282
  %gen3634 = mul i32 %15295, %15282
  %15296 = sub i32 %15281, 1443290298
  %15297 = add i32 %15296, %15282
  %15298 = add i32 %15297, 1443290298
  %add512alteredBB = add nsw i32 %15281, %15282
  %15299 = load i32, i32* %c, align 4
  %_3635 = shl i32 %15298, %15299
  %15300 = sub i32 0, -1188548557
  %15301 = sub i32 %15300, %15298
  %15302 = add i32 %15301, -1188548557
  %_3636 = sub i32 0, %15298
  %15303 = sub i32 0, %15302
  %15304 = sub i32 0, %15299
  %15305 = add i32 %15303, %15304
  %15306 = sub i32 0, %15305
  %gen3637 = add i32 %15302, %15299
  %15307 = add i32 %15298, -1211943332
  %15308 = sub i32 %15307, %15299
  %15309 = sub i32 %15308, -1211943332
  %sub513alteredBB = sub nsw i32 %15298, %15299
  store i32 %15309, i32* %s, align 4
  %15310 = load i32, i32* %s, align 4
  %call514alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15310)
  store i32 -1716534500, i32* %switchVar
  br label %loopEnd

originalBB3641alteredBB:                          ; preds = %loopEntry
  %15311 = load i32, i32* %e, align 4
  %cmp525alteredBB = icmp eq i32 %15311, 3
  store i32 -1877324521, i32* %switchVar
  br label %loopEnd

originalBB3645alteredBB:                          ; preds = %loopEntry
  %15312 = load i32, i32* %s, align 4
  %15313 = sub i32 0, -83739762
  %15314 = sub i32 %15313, %15312
  %15315 = add i32 %15314, -83739762
  %_3646 = sub i32 0, %15312
  %15316 = sub i32 0, %15315
  %15317 = sub i32 0, 31
  %15318 = add i32 %15316, %15317
  %15319 = sub i32 0, %15318
  %gen3647 = add i32 %15315, 31
  %15320 = sub i32 %15312, 8692683
  %15321 = sub i32 %15320, 31
  %15322 = add i32 %15321, 8692683
  %_3648 = sub i32 %15312, 31
  %gen3649 = mul i32 %15322, 31
  %_3650 = shl i32 %15312, 31
  %15323 = sub i32 %15312, 1051263697
  %15324 = add i32 %15323, 31
  %15325 = add i32 %15324, 1051263697
  %add542alteredBB = add nsw i32 %15312, 31
  %15326 = load i32, i32* %f, align 4
  %15327 = add i32 %15325, 406565327
  %15328 = sub i32 %15327, %15326
  %15329 = sub i32 %15328, 406565327
  %_3651 = sub i32 %15325, %15326
  %gen3652 = mul i32 %15329, %15326
  %15330 = add i32 %15325, 396867439
  %15331 = sub i32 %15330, %15326
  %15332 = sub i32 %15331, 396867439
  %_3653 = sub i32 %15325, %15326
  %gen3654 = mul i32 %15332, %15326
  %15333 = add i32 0, 219989079
  %15334 = sub i32 %15333, %15325
  %15335 = sub i32 %15334, 219989079
  %_3655 = sub i32 0, %15325
  %15336 = sub i32 0, %15335
  %15337 = sub i32 0, %15326
  %15338 = add i32 %15336, %15337
  %15339 = sub i32 0, %15338
  %gen3656 = add i32 %15335, %15326
  %15340 = add i32 %15325, 289258948
  %15341 = sub i32 %15340, %15326
  %15342 = sub i32 %15341, 289258948
  %_3657 = sub i32 %15325, %15326
  %gen3658 = mul i32 %15342, %15326
  %15343 = sub i32 0, %15326
  %15344 = sub i32 %15325, %15343
  %add543alteredBB = add nsw i32 %15325, %15326
  %15345 = load i32, i32* %c, align 4
  %15346 = add i32 0, 859079138
  %15347 = sub i32 %15346, %15344
  %15348 = sub i32 %15347, 859079138
  %_3659 = sub i32 0, %15344
  %15349 = add i32 %15348, -536259824
  %15350 = add i32 %15349, %15345
  %15351 = sub i32 %15350, -536259824
  %gen3660 = add i32 %15348, %15345
  %15352 = sub i32 0, %15345
  %15353 = add i32 %15344, %15352
  %sub544alteredBB = sub nsw i32 %15344, %15345
  store i32 %15353, i32* %s, align 4
  %15354 = load i32, i32* %s, align 4
  %call545alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15354)
  store i32 1707756890, i32* %switchVar
  br label %loopEnd

originalBB3664alteredBB:                          ; preds = %loopEntry
  %15355 = load i32, i32* %e, align 4
  %cmp547alteredBB = icmp eq i32 %15355, 7
  store i32 691387355, i32* %switchVar
  br label %loopEnd

originalBB3668alteredBB:                          ; preds = %loopEntry
  %15356 = load i32, i32* %s, align 4
  %15357 = sub i32 %15356, -1521077267
  %15358 = sub i32 %15357, 31
  %15359 = add i32 %15358, -1521077267
  %_3669 = sub i32 %15356, 31
  %gen3670 = mul i32 %15359, 31
  %15360 = sub i32 %15356, -1732365691
  %15361 = add i32 %15360, 31
  %15362 = add i32 %15361, -1732365691
  %add549alteredBB = add nsw i32 %15356, 31
  %_3671 = shl i32 %15362, 30
  %_3672 = shl i32 %15362, 30
  %15363 = add i32 %15362, 2036414170
  %15364 = sub i32 %15363, 30
  %15365 = sub i32 %15364, 2036414170
  %_3673 = sub i32 %15362, 30
  %gen3674 = mul i32 %15365, 30
  %15366 = add i32 %15362, -1795417073
  %15367 = sub i32 %15366, 30
  %15368 = sub i32 %15367, -1795417073
  %_3675 = sub i32 %15362, 30
  %gen3676 = mul i32 %15368, 30
  %15369 = add i32 0, 983416781
  %15370 = sub i32 %15369, %15362
  %15371 = sub i32 %15370, 983416781
  %_3677 = sub i32 0, %15362
  %15372 = add i32 %15371, 323127933
  %15373 = add i32 %15372, 30
  %15374 = sub i32 %15373, 323127933
  %gen3678 = add i32 %15371, 30
  %15375 = sub i32 %15362, 1421235433
  %15376 = add i32 %15375, 30
  %15377 = add i32 %15376, 1421235433
  %add550alteredBB = add nsw i32 %15362, 30
  %15378 = load i32, i32* %f, align 4
  %_3679 = shl i32 %15377, %15378
  %15379 = sub i32 0, 508141062
  %15380 = sub i32 %15379, %15377
  %15381 = add i32 %15380, 508141062
  %_3680 = sub i32 0, %15377
  %15382 = add i32 %15381, -88528583
  %15383 = add i32 %15382, %15378
  %15384 = sub i32 %15383, -88528583
  %gen3681 = add i32 %15381, %15378
  %_3682 = shl i32 %15377, %15378
  %_3683 = shl i32 %15377, %15378
  %15385 = add i32 0, 2070296737
  %15386 = sub i32 %15385, %15377
  %15387 = sub i32 %15386, 2070296737
  %_3684 = sub i32 0, %15377
  %15388 = sub i32 %15387, -249201821
  %15389 = add i32 %15388, %15378
  %15390 = add i32 %15389, -249201821
  %gen3685 = add i32 %15387, %15378
  %15391 = sub i32 0, 351257026
  %15392 = sub i32 %15391, %15377
  %15393 = add i32 %15392, 351257026
  %_3686 = sub i32 0, %15377
  %15394 = sub i32 0, %15378
  %15395 = sub i32 %15393, %15394
  %gen3687 = add i32 %15393, %15378
  %15396 = sub i32 0, %15378
  %15397 = add i32 %15377, %15396
  %_3688 = sub i32 %15377, %15378
  %gen3689 = mul i32 %15397, %15378
  %15398 = add i32 %15377, -564782637
  %15399 = add i32 %15398, %15378
  %15400 = sub i32 %15399, -564782637
  %add551alteredBB = add nsw i32 %15377, %15378
  %15401 = load i32, i32* %c, align 4
  %_3690 = shl i32 %15400, %15401
  %15402 = sub i32 %15400, -1447504667
  %15403 = sub i32 %15402, %15401
  %15404 = add i32 %15403, -1447504667
  %sub552alteredBB = sub nsw i32 %15400, %15401
  store i32 %15404, i32* %s, align 4
  %15405 = load i32, i32* %s, align 4
  %call553alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15405)
  store i32 1985659938, i32* %switchVar
  br label %loopEnd

originalBB3694alteredBB:                          ; preds = %loopEntry
  %15406 = load i32, i32* %s, align 4
  %_3695 = shl i32 %15406, 31
  %15407 = add i32 0, 497827383
  %15408 = sub i32 %15407, %15406
  %15409 = sub i32 %15408, 497827383
  %_3696 = sub i32 0, %15406
  %15410 = add i32 %15409, -1570898563
  %15411 = add i32 %15410, 31
  %15412 = sub i32 %15411, -1570898563
  %gen3697 = add i32 %15409, 31
  %15413 = sub i32 0, %15406
  %15414 = add i32 0, %15413
  %_3698 = sub i32 0, %15406
  %15415 = sub i32 0, %15414
  %15416 = sub i32 0, 31
  %15417 = add i32 %15415, %15416
  %15418 = sub i32 0, %15417
  %gen3699 = add i32 %15414, 31
  %15419 = sub i32 %15406, -1225914060
  %15420 = sub i32 %15419, 31
  %15421 = add i32 %15420, -1225914060
  %_3700 = sub i32 %15406, 31
  %gen3701 = mul i32 %15421, 31
  %15422 = sub i32 0, 31
  %15423 = add i32 %15406, %15422
  %_3702 = sub i32 %15406, 31
  %gen3703 = mul i32 %15423, 31
  %15424 = sub i32 0, %15406
  %15425 = add i32 0, %15424
  %_3704 = sub i32 0, %15406
  %15426 = sub i32 %15425, 162389864
  %15427 = add i32 %15426, 31
  %15428 = add i32 %15427, 162389864
  %gen3705 = add i32 %15425, 31
  %15429 = sub i32 %15406, -317314738
  %15430 = sub i32 %15429, 31
  %15431 = add i32 %15430, -317314738
  %_3706 = sub i32 %15406, 31
  %gen3707 = mul i32 %15431, 31
  %15432 = sub i32 0, %15406
  %15433 = add i32 0, %15432
  %_3708 = sub i32 0, %15406
  %15434 = sub i32 %15433, -1578421738
  %15435 = add i32 %15434, 31
  %15436 = add i32 %15435, -1578421738
  %gen3709 = add i32 %15433, 31
  %15437 = sub i32 %15406, -1545713599
  %15438 = add i32 %15437, 31
  %15439 = add i32 %15438, -1545713599
  %add557alteredBB = add nsw i32 %15406, 31
  %_3710 = shl i32 %15439, 30
  %15440 = sub i32 0, 30
  %15441 = add i32 %15439, %15440
  %_3711 = sub i32 %15439, 30
  %gen3712 = mul i32 %15441, 30
  %15442 = sub i32 %15439, -1370822348
  %15443 = add i32 %15442, 30
  %15444 = add i32 %15443, -1370822348
  %add558alteredBB = add nsw i32 %15439, 30
  %15445 = add i32 %15444, -1938265075
  %15446 = add i32 %15445, 31
  %15447 = sub i32 %15446, -1938265075
  %add559alteredBB = add nsw i32 %15444, 31
  %15448 = load i32, i32* %f, align 4
  %15449 = add i32 0, -319580319
  %15450 = sub i32 %15449, %15447
  %15451 = sub i32 %15450, -319580319
  %_3713 = sub i32 0, %15447
  %15452 = sub i32 0, %15448
  %15453 = sub i32 %15451, %15452
  %gen3714 = add i32 %15451, %15448
  %15454 = sub i32 %15447, -367120280
  %15455 = sub i32 %15454, %15448
  %15456 = add i32 %15455, -367120280
  %_3715 = sub i32 %15447, %15448
  %gen3716 = mul i32 %15456, %15448
  %15457 = sub i32 0, -477893687
  %15458 = sub i32 %15457, %15447
  %15459 = add i32 %15458, -477893687
  %_3717 = sub i32 0, %15447
  %15460 = sub i32 %15459, -1018488115
  %15461 = add i32 %15460, %15448
  %15462 = add i32 %15461, -1018488115
  %gen3718 = add i32 %15459, %15448
  %15463 = sub i32 0, %15448
  %15464 = sub i32 %15447, %15463
  %add560alteredBB = add nsw i32 %15447, %15448
  %15465 = load i32, i32* %c, align 4
  %15466 = sub i32 %15464, -1173084120
  %15467 = sub i32 %15466, %15465
  %15468 = add i32 %15467, -1173084120
  %_3719 = sub i32 %15464, %15465
  %gen3720 = mul i32 %15468, %15465
  %15469 = sub i32 %15464, -1048563232
  %15470 = sub i32 %15469, %15465
  %15471 = add i32 %15470, -1048563232
  %sub561alteredBB = sub nsw i32 %15464, %15465
  store i32 %15471, i32* %s, align 4
  %15472 = load i32, i32* %s, align 4
  %call562alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15472)
  store i32 -1574288010, i32* %switchVar
  br label %loopEnd

originalBB3724alteredBB:                          ; preds = %loopEntry
  %15473 = load i32, i32* %s, align 4
  %15474 = sub i32 0, -1297396605
  %15475 = sub i32 %15474, %15473
  %15476 = add i32 %15475, -1297396605
  %_3725 = sub i32 0, %15473
  %15477 = sub i32 0, 31
  %15478 = sub i32 %15476, %15477
  %gen3726 = add i32 %15476, 31
  %15479 = sub i32 %15473, 1047677568
  %15480 = sub i32 %15479, 31
  %15481 = add i32 %15480, 1047677568
  %_3727 = sub i32 %15473, 31
  %gen3728 = mul i32 %15481, 31
  %_3729 = shl i32 %15473, 31
  %15482 = sub i32 0, 31
  %15483 = add i32 %15473, %15482
  %_3730 = sub i32 %15473, 31
  %gen3731 = mul i32 %15483, 31
  %15484 = add i32 %15473, -1744263847
  %15485 = sub i32 %15484, 31
  %15486 = sub i32 %15485, -1744263847
  %_3732 = sub i32 %15473, 31
  %gen3733 = mul i32 %15486, 31
  %15487 = sub i32 0, 2064824109
  %15488 = sub i32 %15487, %15473
  %15489 = add i32 %15488, 2064824109
  %_3734 = sub i32 0, %15473
  %15490 = sub i32 %15489, 1273250107
  %15491 = add i32 %15490, 31
  %15492 = add i32 %15491, 1273250107
  %gen3735 = add i32 %15489, 31
  %15493 = sub i32 0, 31
  %15494 = sub i32 %15473, %15493
  %add576alteredBB = add nsw i32 %15473, 31
  %15495 = add i32 0, -1708953262
  %15496 = sub i32 %15495, %15494
  %15497 = sub i32 %15496, -1708953262
  %_3736 = sub i32 0, %15494
  %15498 = add i32 %15497, -1676322729
  %15499 = add i32 %15498, 30
  %15500 = sub i32 %15499, -1676322729
  %gen3737 = add i32 %15497, 30
  %15501 = add i32 0, 1923396521
  %15502 = sub i32 %15501, %15494
  %15503 = sub i32 %15502, 1923396521
  %_3738 = sub i32 0, %15494
  %15504 = sub i32 %15503, 432762573
  %15505 = add i32 %15504, 30
  %15506 = add i32 %15505, 432762573
  %gen3739 = add i32 %15503, 30
  %_3740 = shl i32 %15494, 30
  %15507 = sub i32 0, %15494
  %15508 = sub i32 0, 30
  %15509 = add i32 %15507, %15508
  %15510 = sub i32 0, %15509
  %add577alteredBB = add nsw i32 %15494, 30
  %15511 = add i32 0, -2013256198
  %15512 = sub i32 %15511, %15510
  %15513 = sub i32 %15512, -2013256198
  %_3741 = sub i32 0, %15510
  %15514 = sub i32 0, 31
  %15515 = sub i32 %15513, %15514
  %gen3742 = add i32 %15513, 31
  %15516 = add i32 %15510, 2028147865
  %15517 = sub i32 %15516, 31
  %15518 = sub i32 %15517, 2028147865
  %_3743 = sub i32 %15510, 31
  %gen3744 = mul i32 %15518, 31
  %15519 = add i32 0, -1902055500
  %15520 = sub i32 %15519, %15510
  %15521 = sub i32 %15520, -1902055500
  %_3745 = sub i32 0, %15510
  %15522 = sub i32 0, %15521
  %15523 = sub i32 0, 31
  %15524 = add i32 %15522, %15523
  %15525 = sub i32 0, %15524
  %gen3746 = add i32 %15521, 31
  %15526 = add i32 %15510, 1400544153
  %15527 = sub i32 %15526, 31
  %15528 = sub i32 %15527, 1400544153
  %_3747 = sub i32 %15510, 31
  %gen3748 = mul i32 %15528, 31
  %_3749 = shl i32 %15510, 31
  %15529 = sub i32 %15510, -1242494014
  %15530 = add i32 %15529, 31
  %15531 = add i32 %15530, -1242494014
  %add578alteredBB = add nsw i32 %15510, 31
  %15532 = sub i32 0, 31
  %15533 = add i32 %15531, %15532
  %_3750 = sub i32 %15531, 31
  %gen3751 = mul i32 %15533, 31
  %15534 = sub i32 0, %15531
  %15535 = add i32 0, %15534
  %_3752 = sub i32 0, %15531
  %15536 = sub i32 0, 31
  %15537 = sub i32 %15535, %15536
  %gen3753 = add i32 %15535, 31
  %15538 = add i32 0, -928397388
  %15539 = sub i32 %15538, %15531
  %15540 = sub i32 %15539, -928397388
  %_3754 = sub i32 0, %15531
  %15541 = sub i32 0, 31
  %15542 = sub i32 %15540, %15541
  %gen3755 = add i32 %15540, 31
  %15543 = add i32 %15531, 35829765
  %15544 = add i32 %15543, 31
  %15545 = sub i32 %15544, 35829765
  %add579alteredBB = add nsw i32 %15531, 31
  %_3756 = shl i32 %15545, 30
  %15546 = sub i32 0, 30
  %15547 = add i32 %15545, %15546
  %_3757 = sub i32 %15545, 30
  %gen3758 = mul i32 %15547, 30
  %15548 = sub i32 0, 30
  %15549 = add i32 %15545, %15548
  %_3759 = sub i32 %15545, 30
  %gen3760 = mul i32 %15549, 30
  %15550 = sub i32 0, 649317600
  %15551 = sub i32 %15550, %15545
  %15552 = add i32 %15551, 649317600
  %_3761 = sub i32 0, %15545
  %15553 = add i32 %15552, -1864823626
  %15554 = add i32 %15553, 30
  %15555 = sub i32 %15554, -1864823626
  %gen3762 = add i32 %15552, 30
  %15556 = sub i32 0, 117542997
  %15557 = sub i32 %15556, %15545
  %15558 = add i32 %15557, 117542997
  %_3763 = sub i32 0, %15545
  %15559 = sub i32 0, %15558
  %15560 = sub i32 0, 30
  %15561 = add i32 %15559, %15560
  %15562 = sub i32 0, %15561
  %gen3764 = add i32 %15558, 30
  %15563 = sub i32 0, 30
  %15564 = add i32 %15545, %15563
  %_3765 = sub i32 %15545, 30
  %gen3766 = mul i32 %15564, 30
  %_3767 = shl i32 %15545, 30
  %15565 = sub i32 0, 30
  %15566 = sub i32 %15545, %15565
  %add580alteredBB = add nsw i32 %15545, 30
  %15567 = load i32, i32* %f, align 4
  %15568 = add i32 %15566, -1143059315
  %15569 = sub i32 %15568, %15567
  %15570 = sub i32 %15569, -1143059315
  %_3768 = sub i32 %15566, %15567
  %gen3769 = mul i32 %15570, %15567
  %15571 = sub i32 %15566, -1528114585
  %15572 = add i32 %15571, %15567
  %15573 = add i32 %15572, -1528114585
  %add581alteredBB = add nsw i32 %15566, %15567
  %15574 = load i32, i32* %c, align 4
  %_3770 = shl i32 %15573, %15574
  %_3771 = shl i32 %15573, %15574
  %15575 = sub i32 %15573, 184447994
  %15576 = sub i32 %15575, %15574
  %15577 = add i32 %15576, 184447994
  %_3772 = sub i32 %15573, %15574
  %gen3773 = mul i32 %15577, %15574
  %15578 = sub i32 0, -1482002883
  %15579 = sub i32 %15578, %15573
  %15580 = add i32 %15579, -1482002883
  %_3774 = sub i32 0, %15573
  %15581 = add i32 %15580, 35726700
  %15582 = add i32 %15581, %15574
  %15583 = sub i32 %15582, 35726700
  %gen3775 = add i32 %15580, %15574
  %_3776 = shl i32 %15573, %15574
  %15584 = sub i32 0, %15574
  %15585 = add i32 %15573, %15584
  %_3777 = sub i32 %15573, %15574
  %gen3778 = mul i32 %15585, %15574
  %15586 = add i32 0, -566164927
  %15587 = sub i32 %15586, %15573
  %15588 = sub i32 %15587, -566164927
  %_3779 = sub i32 0, %15573
  %15589 = sub i32 %15588, -323821571
  %15590 = add i32 %15589, %15574
  %15591 = add i32 %15590, -323821571
  %gen3780 = add i32 %15588, %15574
  %15592 = add i32 %15573, -1797602051
  %15593 = sub i32 %15592, %15574
  %15594 = sub i32 %15593, -1797602051
  %sub582alteredBB = sub nsw i32 %15573, %15574
  store i32 %15594, i32* %s, align 4
  %15595 = load i32, i32* %s, align 4
  %call583alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15595)
  store i32 184368386, i32* %switchVar
  br label %loopEnd

originalBB3784alteredBB:                          ; preds = %loopEntry
  %15596 = load i32, i32* %e, align 4
  %cmp597alteredBB = icmp eq i32 %15596, 12
  store i32 1234533991, i32* %switchVar
  br label %loopEnd

originalBB3788alteredBB:                          ; preds = %loopEntry
  store i32 852231519, i32* %switchVar
  br label %loopEnd

originalBB3792alteredBB:                          ; preds = %loopEntry
  %15597 = load i32, i32* %e, align 4
  %cmp622alteredBB = icmp eq i32 %15597, 2
  store i32 29790145, i32* %switchVar
  br label %loopEnd

originalBB3796alteredBB:                          ; preds = %loopEntry
  %15598 = load i32, i32* %e, align 4
  %cmp632alteredBB = icmp eq i32 %15598, 3
  store i32 202303184, i32* %switchVar
  br label %loopEnd

originalBB3800alteredBB:                          ; preds = %loopEntry
  %15599 = load i32, i32* %s, align 4
  %15600 = sub i32 %15599, -1175077189
  %15601 = sub i32 %15600, 31
  %15602 = add i32 %15601, -1175077189
  %_3801 = sub i32 %15599, 31
  %gen3802 = mul i32 %15602, 31
  %15603 = sub i32 0, 31
  %15604 = add i32 %15599, %15603
  %_3803 = sub i32 %15599, 31
  %gen3804 = mul i32 %15604, 31
  %15605 = sub i32 0, 31
  %15606 = add i32 %15599, %15605
  %sub634alteredBB = sub nsw i32 %15599, 31
  %15607 = add i32 %15606, 2052233551
  %15608 = sub i32 %15607, 30
  %15609 = sub i32 %15608, 2052233551
  %_3805 = sub i32 %15606, 30
  %gen3806 = mul i32 %15609, 30
  %15610 = add i32 0, 53685531
  %15611 = sub i32 %15610, %15606
  %15612 = sub i32 %15611, 53685531
  %_3807 = sub i32 0, %15606
  %15613 = sub i32 0, %15612
  %15614 = sub i32 0, 30
  %15615 = add i32 %15613, %15614
  %15616 = sub i32 0, %15615
  %gen3808 = add i32 %15612, 30
  %15617 = sub i32 0, 139415328
  %15618 = sub i32 %15617, %15606
  %15619 = add i32 %15618, 139415328
  %_3809 = sub i32 0, %15606
  %15620 = sub i32 %15619, 710015253
  %15621 = add i32 %15620, 30
  %15622 = add i32 %15621, 710015253
  %gen3810 = add i32 %15619, 30
  %15623 = add i32 %15606, 904832233
  %15624 = sub i32 %15623, 30
  %15625 = sub i32 %15624, 904832233
  %_3811 = sub i32 %15606, 30
  %gen3812 = mul i32 %15625, 30
  %15626 = sub i32 0, %15606
  %15627 = add i32 0, %15626
  %_3813 = sub i32 0, %15606
  %15628 = sub i32 0, 30
  %15629 = sub i32 %15627, %15628
  %gen3814 = add i32 %15627, 30
  %15630 = sub i32 0, 30
  %15631 = add i32 %15606, %15630
  %sub635alteredBB = sub nsw i32 %15606, 30
  %_3815 = shl i32 %15631, 31
  %15632 = sub i32 0, 31
  %15633 = add i32 %15631, %15632
  %sub636alteredBB = sub nsw i32 %15631, 31
  %15634 = load i32, i32* %f, align 4
  %15635 = sub i32 0, %15633
  %15636 = add i32 0, %15635
  %_3816 = sub i32 0, %15633
  %15637 = add i32 %15636, 521176272
  %15638 = add i32 %15637, %15634
  %15639 = sub i32 %15638, 521176272
  %gen3817 = add i32 %15636, %15634
  %15640 = sub i32 %15633, 1623420321
  %15641 = sub i32 %15640, %15634
  %15642 = add i32 %15641, 1623420321
  %_3818 = sub i32 %15633, %15634
  %gen3819 = mul i32 %15642, %15634
  %_3820 = shl i32 %15633, %15634
  %_3821 = shl i32 %15633, %15634
  %_3822 = shl i32 %15633, %15634
  %_3823 = shl i32 %15633, %15634
  %15643 = sub i32 0, %15633
  %15644 = add i32 0, %15643
  %_3824 = sub i32 0, %15633
  %15645 = sub i32 0, %15634
  %15646 = sub i32 %15644, %15645
  %gen3825 = add i32 %15644, %15634
  %15647 = sub i32 0, 1694845626
  %15648 = sub i32 %15647, %15633
  %15649 = add i32 %15648, 1694845626
  %_3826 = sub i32 0, %15633
  %15650 = sub i32 0, %15634
  %15651 = sub i32 %15649, %15650
  %gen3827 = add i32 %15649, %15634
  %15652 = sub i32 0, %15634
  %15653 = sub i32 %15633, %15652
  %add637alteredBB = add nsw i32 %15633, %15634
  %15654 = load i32, i32* %c, align 4
  %15655 = sub i32 0, 518514962
  %15656 = sub i32 %15655, %15653
  %15657 = add i32 %15656, 518514962
  %_3828 = sub i32 0, %15653
  %15658 = sub i32 %15657, -1139390920
  %15659 = add i32 %15658, %15654
  %15660 = add i32 %15659, -1139390920
  %gen3829 = add i32 %15657, %15654
  %15661 = sub i32 0, %15654
  %15662 = add i32 %15653, %15661
  %sub638alteredBB = sub nsw i32 %15653, %15654
  store i32 %15662, i32* %s, align 4
  %15663 = load i32, i32* %s, align 4
  %call639alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15663)
  store i32 -2065013622, i32* %switchVar
  br label %loopEnd

originalBB3833alteredBB:                          ; preds = %loopEntry
  %15664 = load i32, i32* %e, align 4
  %cmp641alteredBB = icmp eq i32 %15664, 4
  store i32 -118794139, i32* %switchVar
  br label %loopEnd

originalBB3837alteredBB:                          ; preds = %loopEntry
  %15665 = load i32, i32* %s, align 4
  %15666 = add i32 %15665, -46890705
  %15667 = sub i32 %15666, 31
  %15668 = sub i32 %15667, -46890705
  %_3838 = sub i32 %15665, 31
  %gen3839 = mul i32 %15668, 31
  %_3840 = shl i32 %15665, 31
  %15669 = sub i32 0, 31
  %15670 = add i32 %15665, %15669
  %_3841 = sub i32 %15665, 31
  %gen3842 = mul i32 %15670, 31
  %_3843 = shl i32 %15665, 31
  %15671 = add i32 0, 2108736544
  %15672 = sub i32 %15671, %15665
  %15673 = sub i32 %15672, 2108736544
  %_3844 = sub i32 0, %15665
  %15674 = sub i32 0, %15673
  %15675 = sub i32 0, 31
  %15676 = add i32 %15674, %15675
  %15677 = sub i32 0, %15676
  %gen3845 = add i32 %15673, 31
  %15678 = sub i32 0, -1939718752
  %15679 = sub i32 %15678, %15665
  %15680 = add i32 %15679, -1939718752
  %_3846 = sub i32 0, %15665
  %15681 = sub i32 %15680, 1083101209
  %15682 = add i32 %15681, 31
  %15683 = add i32 %15682, 1083101209
  %gen3847 = add i32 %15680, 31
  %15684 = sub i32 %15665, 2099367423
  %15685 = sub i32 %15684, 31
  %15686 = add i32 %15685, 2099367423
  %_3848 = sub i32 %15665, 31
  %gen3849 = mul i32 %15686, 31
  %15687 = sub i32 %15665, -1455956565
  %15688 = sub i32 %15687, 31
  %15689 = add i32 %15688, -1455956565
  %sub643alteredBB = sub nsw i32 %15665, 31
  %_3850 = shl i32 %15689, 30
  %15690 = add i32 %15689, 174159479
  %15691 = sub i32 %15690, 30
  %15692 = sub i32 %15691, 174159479
  %_3851 = sub i32 %15689, 30
  %gen3852 = mul i32 %15692, 30
  %15693 = add i32 0, 602297712
  %15694 = sub i32 %15693, %15689
  %15695 = sub i32 %15694, 602297712
  %_3853 = sub i32 0, %15689
  %15696 = sub i32 0, 30
  %15697 = sub i32 %15695, %15696
  %gen3854 = add i32 %15695, 30
  %15698 = sub i32 0, 30
  %15699 = add i32 %15689, %15698
  %_3855 = sub i32 %15689, 30
  %gen3856 = mul i32 %15699, 30
  %15700 = add i32 %15689, -1306221704
  %15701 = sub i32 %15700, 30
  %15702 = sub i32 %15701, -1306221704
  %sub644alteredBB = sub nsw i32 %15689, 30
  %15703 = load i32, i32* %f, align 4
  %15704 = sub i32 %15702, -1552222746
  %15705 = sub i32 %15704, %15703
  %15706 = add i32 %15705, -1552222746
  %_3857 = sub i32 %15702, %15703
  %gen3858 = mul i32 %15706, %15703
  %15707 = sub i32 %15702, -1494747807
  %15708 = add i32 %15707, %15703
  %15709 = add i32 %15708, -1494747807
  %add645alteredBB = add nsw i32 %15702, %15703
  %15710 = load i32, i32* %c, align 4
  %15711 = sub i32 0, %15709
  %15712 = add i32 0, %15711
  %_3859 = sub i32 0, %15709
  %15713 = sub i32 %15712, 2114414735
  %15714 = add i32 %15713, %15710
  %15715 = add i32 %15714, 2114414735
  %gen3860 = add i32 %15712, %15710
  %_3861 = shl i32 %15709, %15710
  %_3862 = shl i32 %15709, %15710
  %15716 = sub i32 %15709, -81340894
  %15717 = sub i32 %15716, %15710
  %15718 = add i32 %15717, -81340894
  %sub646alteredBB = sub nsw i32 %15709, %15710
  store i32 %15718, i32* %s, align 4
  %15719 = load i32, i32* %s, align 4
  %call647alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15719)
  store i32 -1048379284, i32* %switchVar
  br label %loopEnd

originalBB3866alteredBB:                          ; preds = %loopEntry
  %15720 = load i32, i32* %s, align 4
  %_3867 = shl i32 %15720, 30
  %15721 = sub i32 %15720, -264335610
  %15722 = sub i32 %15721, 30
  %15723 = add i32 %15722, -264335610
  %_3868 = sub i32 %15720, 30
  %gen3869 = mul i32 %15723, 30
  %15724 = sub i32 0, 30
  %15725 = add i32 %15720, %15724
  %_3870 = sub i32 %15720, 30
  %gen3871 = mul i32 %15725, 30
  %15726 = add i32 0, 1167186635
  %15727 = sub i32 %15726, %15720
  %15728 = sub i32 %15727, 1167186635
  %_3872 = sub i32 0, %15720
  %15729 = sub i32 0, %15728
  %15730 = sub i32 0, 30
  %15731 = add i32 %15729, %15730
  %15732 = sub i32 0, %15731
  %gen3873 = add i32 %15728, 30
  %15733 = sub i32 0, %15720
  %15734 = add i32 0, %15733
  %_3874 = sub i32 0, %15720
  %15735 = sub i32 0, 30
  %15736 = sub i32 %15734, %15735
  %gen3875 = add i32 %15734, 30
  %15737 = add i32 0, 701964402
  %15738 = sub i32 %15737, %15720
  %15739 = sub i32 %15738, 701964402
  %_3876 = sub i32 0, %15720
  %15740 = sub i32 %15739, 853802698
  %15741 = add i32 %15740, 30
  %15742 = add i32 %15741, 853802698
  %gen3877 = add i32 %15739, 30
  %15743 = add i32 %15720, 582519544
  %15744 = sub i32 %15743, 30
  %15745 = sub i32 %15744, 582519544
  %_3878 = sub i32 %15720, 30
  %gen3879 = mul i32 %15745, 30
  %_3880 = shl i32 %15720, 30
  %15746 = sub i32 0, 30
  %15747 = sub i32 %15720, %15746
  %add673alteredBB = add nsw i32 %15720, 30
  %15748 = sub i32 0, -1531045856
  %15749 = sub i32 %15748, %15747
  %15750 = add i32 %15749, -1531045856
  %_3881 = sub i32 0, %15747
  %15751 = sub i32 0, %15750
  %15752 = sub i32 0, 31
  %15753 = add i32 %15751, %15752
  %15754 = sub i32 0, %15753
  %gen3882 = add i32 %15750, 31
  %15755 = sub i32 0, %15747
  %15756 = sub i32 0, 31
  %15757 = add i32 %15755, %15756
  %15758 = sub i32 0, %15757
  %add674alteredBB = add nsw i32 %15747, 31
  %15759 = sub i32 %15758, 59929285
  %15760 = sub i32 %15759, 31
  %15761 = add i32 %15760, 59929285
  %_3883 = sub i32 %15758, 31
  %gen3884 = mul i32 %15761, 31
  %_3885 = shl i32 %15758, 31
  %_3886 = shl i32 %15758, 31
  %_3887 = shl i32 %15758, 31
  %15762 = add i32 0, 1126597541
  %15763 = sub i32 %15762, %15758
  %15764 = sub i32 %15763, 1126597541
  %_3888 = sub i32 0, %15758
  %15765 = add i32 %15764, 749990117
  %15766 = add i32 %15765, 31
  %15767 = sub i32 %15766, 749990117
  %gen3889 = add i32 %15764, 31
  %15768 = sub i32 %15758, 1260168780
  %15769 = add i32 %15768, 31
  %15770 = add i32 %15769, 1260168780
  %add675alteredBB = add nsw i32 %15758, 31
  %15771 = load i32, i32* %f, align 4
  %15772 = add i32 %15770, -283774651
  %15773 = add i32 %15772, %15771
  %15774 = sub i32 %15773, -283774651
  %add676alteredBB = add nsw i32 %15770, %15771
  %15775 = load i32, i32* %c, align 4
  %_3890 = shl i32 %15774, %15775
  %15776 = sub i32 0, %15775
  %15777 = add i32 %15774, %15776
  %_3891 = sub i32 %15774, %15775
  %gen3892 = mul i32 %15777, %15775
  %15778 = sub i32 %15774, -992949417
  %15779 = sub i32 %15778, %15775
  %15780 = add i32 %15779, -992949417
  %sub677alteredBB = sub nsw i32 %15774, %15775
  store i32 %15780, i32* %s, align 4
  %15781 = load i32, i32* %s, align 4
  %call678alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15781)
  store i32 -1291526328, i32* %switchVar
  br label %loopEnd

originalBB3896alteredBB:                          ; preds = %loopEntry
  %15782 = load i32, i32* %e, align 4
  %cmp726alteredBB = icmp eq i32 %15782, 2
  store i32 -373167167, i32* %switchVar
  br label %loopEnd

originalBB3900alteredBB:                          ; preds = %loopEntry
  %15783 = load i32, i32* %s, align 4
  %15784 = sub i32 0, 30
  %15785 = add i32 %15783, %15784
  %_3901 = sub i32 %15783, 30
  %gen3902 = mul i32 %15785, 30
  %15786 = sub i32 0, 30
  %15787 = add i32 %15783, %15786
  %_3903 = sub i32 %15783, 30
  %gen3904 = mul i32 %15787, 30
  %15788 = add i32 %15783, -1689114336
  %15789 = sub i32 %15788, 30
  %15790 = sub i32 %15789, -1689114336
  %_3905 = sub i32 %15783, 30
  %gen3906 = mul i32 %15790, 30
  %15791 = sub i32 0, 1197193403
  %15792 = sub i32 %15791, %15783
  %15793 = add i32 %15792, 1197193403
  %_3907 = sub i32 0, %15783
  %15794 = sub i32 0, 30
  %15795 = sub i32 %15793, %15794
  %gen3908 = add i32 %15793, 30
  %_3909 = shl i32 %15783, 30
  %15796 = sub i32 0, %15783
  %15797 = add i32 0, %15796
  %_3910 = sub i32 0, %15783
  %15798 = sub i32 0, 30
  %15799 = sub i32 %15797, %15798
  %gen3911 = add i32 %15797, 30
  %15800 = sub i32 0, 1833309509
  %15801 = sub i32 %15800, %15783
  %15802 = add i32 %15801, 1833309509
  %_3912 = sub i32 0, %15783
  %15803 = add i32 %15802, -1481934500
  %15804 = add i32 %15803, 30
  %15805 = sub i32 %15804, -1481934500
  %gen3913 = add i32 %15802, 30
  %15806 = add i32 %15783, -697725355
  %15807 = sub i32 %15806, 30
  %15808 = sub i32 %15807, -697725355
  %sub758alteredBB = sub nsw i32 %15783, 30
  %15809 = sub i32 0, 31
  %15810 = add i32 %15808, %15809
  %_3914 = sub i32 %15808, 31
  %gen3915 = mul i32 %15810, 31
  %_3916 = shl i32 %15808, 31
  %15811 = sub i32 %15808, -1256769214
  %15812 = sub i32 %15811, 31
  %15813 = add i32 %15812, -1256769214
  %sub759alteredBB = sub nsw i32 %15808, 31
  %15814 = load i32, i32* %f, align 4
  %15815 = sub i32 %15813, -88258189
  %15816 = sub i32 %15815, %15814
  %15817 = add i32 %15816, -88258189
  %_3917 = sub i32 %15813, %15814
  %gen3918 = mul i32 %15817, %15814
  %15818 = sub i32 0, 1586215581
  %15819 = sub i32 %15818, %15813
  %15820 = add i32 %15819, 1586215581
  %_3919 = sub i32 0, %15813
  %15821 = sub i32 0, %15820
  %15822 = sub i32 0, %15814
  %15823 = add i32 %15821, %15822
  %15824 = sub i32 0, %15823
  %gen3920 = add i32 %15820, %15814
  %15825 = sub i32 0, -944346769
  %15826 = sub i32 %15825, %15813
  %15827 = add i32 %15826, -944346769
  %_3921 = sub i32 0, %15813
  %15828 = sub i32 0, %15814
  %15829 = sub i32 %15827, %15828
  %gen3922 = add i32 %15827, %15814
  %_3923 = shl i32 %15813, %15814
  %15830 = add i32 %15813, 727902243
  %15831 = add i32 %15830, %15814
  %15832 = sub i32 %15831, 727902243
  %add760alteredBB = add nsw i32 %15813, %15814
  %15833 = load i32, i32* %c, align 4
  %_3924 = shl i32 %15832, %15833
  %15834 = sub i32 0, 1483160025
  %15835 = sub i32 %15834, %15832
  %15836 = add i32 %15835, 1483160025
  %_3925 = sub i32 0, %15832
  %15837 = add i32 %15836, -1907147820
  %15838 = add i32 %15837, %15833
  %15839 = sub i32 %15838, -1907147820
  %gen3926 = add i32 %15836, %15833
  %15840 = add i32 %15832, -2033086977
  %15841 = sub i32 %15840, %15833
  %15842 = sub i32 %15841, -2033086977
  %sub761alteredBB = sub nsw i32 %15832, %15833
  store i32 %15842, i32* %s, align 4
  %15843 = load i32, i32* %s, align 4
  %call762alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15843)
  store i32 852812909, i32* %switchVar
  br label %loopEnd

originalBB3930alteredBB:                          ; preds = %loopEntry
  %15844 = load i32, i32* %s, align 4
  %15845 = sub i32 0, -1897696212
  %15846 = sub i32 %15845, %15844
  %15847 = add i32 %15846, -1897696212
  %_3931 = sub i32 0, %15844
  %15848 = sub i32 0, %15847
  %15849 = sub i32 0, 31
  %15850 = add i32 %15848, %15849
  %15851 = sub i32 0, %15850
  %gen3932 = add i32 %15847, 31
  %_3933 = shl i32 %15844, 31
  %15852 = add i32 0, 1335455049
  %15853 = sub i32 %15852, %15844
  %15854 = sub i32 %15853, 1335455049
  %_3934 = sub i32 0, %15844
  %15855 = sub i32 0, %15854
  %15856 = sub i32 0, 31
  %15857 = add i32 %15855, %15856
  %15858 = sub i32 0, %15857
  %gen3935 = add i32 %15854, 31
  %15859 = sub i32 %15844, -1010536049
  %15860 = add i32 %15859, 31
  %15861 = add i32 %15860, -1010536049
  %add773alteredBB = add nsw i32 %15844, 31
  %15862 = load i32, i32* %f, align 4
  %15863 = sub i32 0, 1423186973
  %15864 = sub i32 %15863, %15861
  %15865 = add i32 %15864, 1423186973
  %_3936 = sub i32 0, %15861
  %15866 = sub i32 %15865, 955823820
  %15867 = add i32 %15866, %15862
  %15868 = add i32 %15867, 955823820
  %gen3937 = add i32 %15865, %15862
  %15869 = add i32 %15861, -1065974980
  %15870 = sub i32 %15869, %15862
  %15871 = sub i32 %15870, -1065974980
  %_3938 = sub i32 %15861, %15862
  %gen3939 = mul i32 %15871, %15862
  %15872 = sub i32 0, 1022190574
  %15873 = sub i32 %15872, %15861
  %15874 = add i32 %15873, 1022190574
  %_3940 = sub i32 0, %15861
  %15875 = sub i32 0, %15862
  %15876 = sub i32 %15874, %15875
  %gen3941 = add i32 %15874, %15862
  %_3942 = shl i32 %15861, %15862
  %15877 = add i32 %15861, 2119781884
  %15878 = add i32 %15877, %15862
  %15879 = sub i32 %15878, 2119781884
  %add774alteredBB = add nsw i32 %15861, %15862
  %15880 = load i32, i32* %c, align 4
  %15881 = add i32 %15879, 1009540061
  %15882 = sub i32 %15881, %15880
  %15883 = sub i32 %15882, 1009540061
  %_3943 = sub i32 %15879, %15880
  %gen3944 = mul i32 %15883, %15880
  %_3945 = shl i32 %15879, %15880
  %15884 = add i32 %15879, 514451985
  %15885 = sub i32 %15884, %15880
  %15886 = sub i32 %15885, 514451985
  %_3946 = sub i32 %15879, %15880
  %gen3947 = mul i32 %15886, %15880
  %_3948 = shl i32 %15879, %15880
  %15887 = add i32 %15879, 2039649710
  %15888 = sub i32 %15887, %15880
  %15889 = sub i32 %15888, 2039649710
  %_3949 = sub i32 %15879, %15880
  %gen3950 = mul i32 %15889, %15880
  %15890 = sub i32 0, 1455031674
  %15891 = sub i32 %15890, %15879
  %15892 = add i32 %15891, 1455031674
  %_3951 = sub i32 0, %15879
  %15893 = add i32 %15892, -61635809
  %15894 = add i32 %15893, %15880
  %15895 = sub i32 %15894, -61635809
  %gen3952 = add i32 %15892, %15880
  %15896 = sub i32 0, %15879
  %15897 = add i32 0, %15896
  %_3953 = sub i32 0, %15879
  %15898 = sub i32 0, %15880
  %15899 = sub i32 %15897, %15898
  %gen3954 = add i32 %15897, %15880
  %15900 = sub i32 0, %15880
  %15901 = add i32 %15879, %15900
  %sub775alteredBB = sub nsw i32 %15879, %15880
  store i32 %15901, i32* %s, align 4
  %15902 = load i32, i32* %s, align 4
  %call776alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15902)
  store i32 1253426922, i32* %switchVar
  br label %loopEnd

originalBB3958alteredBB:                          ; preds = %loopEntry
  %15903 = load i32, i32* %e, align 4
  %cmp778alteredBB = icmp eq i32 %15903, 9
  store i32 1895290671, i32* %switchVar
  br label %loopEnd

originalBB3962alteredBB:                          ; preds = %loopEntry
  %15904 = load i32, i32* %s, align 4
  %15905 = add i32 0, -1257391689
  %15906 = sub i32 %15905, %15904
  %15907 = sub i32 %15906, -1257391689
  %_3963 = sub i32 0, %15904
  %15908 = sub i32 0, 31
  %15909 = sub i32 %15907, %15908
  %gen3964 = add i32 %15907, 31
  %15910 = sub i32 0, 31
  %15911 = sub i32 %15904, %15910
  %add780alteredBB = add nsw i32 %15904, 31
  %15912 = sub i32 %15911, 1197465739
  %15913 = sub i32 %15912, 31
  %15914 = add i32 %15913, 1197465739
  %_3965 = sub i32 %15911, 31
  %gen3966 = mul i32 %15914, 31
  %15915 = sub i32 0, 31
  %15916 = add i32 %15911, %15915
  %_3967 = sub i32 %15911, 31
  %gen3968 = mul i32 %15916, 31
  %_3969 = shl i32 %15911, 31
  %_3970 = shl i32 %15911, 31
  %15917 = sub i32 0, %15911
  %15918 = add i32 0, %15917
  %_3971 = sub i32 0, %15911
  %15919 = sub i32 0, %15918
  %15920 = sub i32 0, 31
  %15921 = add i32 %15919, %15920
  %15922 = sub i32 0, %15921
  %gen3972 = add i32 %15918, 31
  %15923 = add i32 0, 382649712
  %15924 = sub i32 %15923, %15911
  %15925 = sub i32 %15924, 382649712
  %_3973 = sub i32 0, %15911
  %15926 = add i32 %15925, -785233767
  %15927 = add i32 %15926, 31
  %15928 = sub i32 %15927, -785233767
  %gen3974 = add i32 %15925, 31
  %_3975 = shl i32 %15911, 31
  %15929 = sub i32 0, 31
  %15930 = sub i32 %15911, %15929
  %add781alteredBB = add nsw i32 %15911, 31
  %15931 = load i32, i32* %f, align 4
  %_3976 = shl i32 %15930, %15931
  %15932 = add i32 %15930, 1259384094
  %15933 = sub i32 %15932, %15931
  %15934 = sub i32 %15933, 1259384094
  %_3977 = sub i32 %15930, %15931
  %gen3978 = mul i32 %15934, %15931
  %15935 = sub i32 0, %15931
  %15936 = sub i32 %15930, %15935
  %add782alteredBB = add nsw i32 %15930, %15931
  %15937 = load i32, i32* %c, align 4
  %15938 = add i32 0, 1257990560
  %15939 = sub i32 %15938, %15936
  %15940 = sub i32 %15939, 1257990560
  %_3979 = sub i32 0, %15936
  %15941 = sub i32 0, %15937
  %15942 = sub i32 %15940, %15941
  %gen3980 = add i32 %15940, %15937
  %15943 = sub i32 0, %15936
  %15944 = add i32 0, %15943
  %_3981 = sub i32 0, %15936
  %15945 = add i32 %15944, 1572086701
  %15946 = add i32 %15945, %15937
  %15947 = sub i32 %15946, 1572086701
  %gen3982 = add i32 %15944, %15937
  %15948 = add i32 %15936, -803358806
  %15949 = sub i32 %15948, %15937
  %15950 = sub i32 %15949, -803358806
  %_3983 = sub i32 %15936, %15937
  %gen3984 = mul i32 %15950, %15937
  %_3985 = shl i32 %15936, %15937
  %15951 = add i32 %15936, -1779901271
  %15952 = sub i32 %15951, %15937
  %15953 = sub i32 %15952, -1779901271
  %sub783alteredBB = sub nsw i32 %15936, %15937
  store i32 %15953, i32* %s, align 4
  %15954 = load i32, i32* %s, align 4
  %call784alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %15954)
  store i32 543617598, i32* %switchVar
  br label %loopEnd

originalBB3989alteredBB:                          ; preds = %loopEntry
  %15955 = load i32, i32* %s, align 4
  %_3990 = shl i32 %15955, 31
  %15956 = sub i32 0, 31
  %15957 = sub i32 %15955, %15956
  %add788alteredBB = add nsw i32 %15955, 31
  %15958 = add i32 0, -846091620
  %15959 = sub i32 %15958, %15957
  %15960 = sub i32 %15959, -846091620
  %_3991 = sub i32 0, %15957
  %15961 = sub i32 0, %15960
  %15962 = sub i32 0, 31
  %15963 = add i32 %15961, %15962
  %15964 = sub i32 0, %15963
  %gen3992 = add i32 %15960, 31
  %15965 = sub i32 %15957, 2091448306
  %15966 = sub i32 %15965, 31
  %15967 = add i32 %15966, 2091448306
  %_3993 = sub i32 %15957, 31
  %gen3994 = mul i32 %15967, 31
  %15968 = sub i32 0, -58381209
  %15969 = sub i32 %15968, %15957
  %15970 = add i32 %15969, -58381209
  %_3995 = sub i32 0, %15957
  %15971 = sub i32 %15970, 140786089
  %15972 = add i32 %15971, 31
  %15973 = add i32 %15972, 140786089
  %gen3996 = add i32 %15970, 31
  %_3997 = shl i32 %15957, 31
  %15974 = sub i32 0, 1771284722
  %15975 = sub i32 %15974, %15957
  %15976 = add i32 %15975, 1771284722
  %_3998 = sub i32 0, %15957
  %15977 = sub i32 0, 31
  %15978 = sub i32 %15976, %15977
  %gen3999 = add i32 %15976, 31
  %15979 = sub i32 %15957, 2079993666
  %15980 = add i32 %15979, 31
  %15981 = add i32 %15980, 2079993666
  %add789alteredBB = add nsw i32 %15957, 31
  %_4000 = shl i32 %15981, 30
  %15982 = sub i32 0, %15981
  %15983 = sub i32 0, 30
  %15984 = add i32 %15982, %15983
  %15985 = sub i32 0, %15984
  %add790alteredBB = add nsw i32 %15981, 30
  %15986 = load i32, i32* %f, align 4
  %15987 = add i32 %15985, -922087457
  %15988 = sub i32 %15987, %15986
  %15989 = sub i32 %15988, -922087457
  %_4001 = sub i32 %15985, %15986
  %gen4002 = mul i32 %15989, %15986
  %15990 = sub i32 0, %15986
  %15991 = add i32 %15985, %15990
  %_4003 = sub i32 %15985, %15986
  %gen4004 = mul i32 %15991, %15986
  %15992 = sub i32 %15985, 1266446891
  %15993 = sub i32 %15992, %15986
  %15994 = add i32 %15993, 1266446891
  %_4005 = sub i32 %15985, %15986
  %gen4006 = mul i32 %15994, %15986
  %15995 = add i32 %15985, -1677058546
  %15996 = add i32 %15995, %15986
  %15997 = sub i32 %15996, -1677058546
  %add791alteredBB = add nsw i32 %15985, %15986
  %15998 = load i32, i32* %c, align 4
  %15999 = sub i32 0, %15997
  %16000 = add i32 0, %15999
  %_4007 = sub i32 0, %15997
  %16001 = sub i32 %16000, 769553324
  %16002 = add i32 %16001, %15998
  %16003 = add i32 %16002, 769553324
  %gen4008 = add i32 %16000, %15998
  %16004 = sub i32 %15997, 1286592199
  %16005 = sub i32 %16004, %15998
  %16006 = add i32 %16005, 1286592199
  %sub792alteredBB = sub nsw i32 %15997, %15998
  store i32 %16006, i32* %s, align 4
  %16007 = load i32, i32* %s, align 4
  %call793alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16007)
  store i32 1114887190, i32* %switchVar
  br label %loopEnd

originalBB4012alteredBB:                          ; preds = %loopEntry
  %16008 = load i32, i32* %s, align 4
  %16009 = sub i32 0, %16008
  %16010 = add i32 0, %16009
  %_4013 = sub i32 0, %16008
  %16011 = add i32 %16010, 753972646
  %16012 = add i32 %16011, 31
  %16013 = sub i32 %16012, 753972646
  %gen4014 = add i32 %16010, 31
  %16014 = add i32 0, 1218870653
  %16015 = sub i32 %16014, %16008
  %16016 = sub i32 %16015, 1218870653
  %_4015 = sub i32 0, %16008
  %16017 = sub i32 0, %16016
  %16018 = sub i32 0, 31
  %16019 = add i32 %16017, %16018
  %16020 = sub i32 0, %16019
  %gen4016 = add i32 %16016, 31
  %_4017 = shl i32 %16008, 31
  %_4018 = shl i32 %16008, 31
  %16021 = add i32 0, 1786358823
  %16022 = sub i32 %16021, %16008
  %16023 = sub i32 %16022, 1786358823
  %_4019 = sub i32 0, %16008
  %16024 = add i32 %16023, 2037103479
  %16025 = add i32 %16024, 31
  %16026 = sub i32 %16025, 2037103479
  %gen4020 = add i32 %16023, 31
  %16027 = sub i32 %16008, 1843955930
  %16028 = sub i32 %16027, 31
  %16029 = add i32 %16028, 1843955930
  %_4021 = sub i32 %16008, 31
  %gen4022 = mul i32 %16029, 31
  %16030 = add i32 %16008, 1733331497
  %16031 = add i32 %16030, 31
  %16032 = sub i32 %16031, 1733331497
  %add797alteredBB = add nsw i32 %16008, 31
  %_4023 = shl i32 %16032, 31
  %16033 = add i32 0, 745607253
  %16034 = sub i32 %16033, %16032
  %16035 = sub i32 %16034, 745607253
  %_4024 = sub i32 0, %16032
  %16036 = sub i32 0, %16035
  %16037 = sub i32 0, 31
  %16038 = add i32 %16036, %16037
  %16039 = sub i32 0, %16038
  %gen4025 = add i32 %16035, 31
  %16040 = sub i32 %16032, 908338241
  %16041 = add i32 %16040, 31
  %16042 = add i32 %16041, 908338241
  %add798alteredBB = add nsw i32 %16032, 31
  %16043 = add i32 %16042, -2004629387
  %16044 = sub i32 %16043, 30
  %16045 = sub i32 %16044, -2004629387
  %_4026 = sub i32 %16042, 30
  %gen4027 = mul i32 %16045, 30
  %_4028 = shl i32 %16042, 30
  %16046 = sub i32 0, 30
  %16047 = sub i32 %16042, %16046
  %add799alteredBB = add nsw i32 %16042, 30
  %16048 = sub i32 0, -1607812913
  %16049 = sub i32 %16048, %16047
  %16050 = add i32 %16049, -1607812913
  %_4029 = sub i32 0, %16047
  %16051 = add i32 %16050, -414765072
  %16052 = add i32 %16051, 31
  %16053 = sub i32 %16052, -414765072
  %gen4030 = add i32 %16050, 31
  %16054 = sub i32 %16047, -400107604
  %16055 = sub i32 %16054, 31
  %16056 = add i32 %16055, -400107604
  %_4031 = sub i32 %16047, 31
  %gen4032 = mul i32 %16056, 31
  %16057 = add i32 0, -1424426674
  %16058 = sub i32 %16057, %16047
  %16059 = sub i32 %16058, -1424426674
  %_4033 = sub i32 0, %16047
  %16060 = add i32 %16059, -291082633
  %16061 = add i32 %16060, 31
  %16062 = sub i32 %16061, -291082633
  %gen4034 = add i32 %16059, 31
  %_4035 = shl i32 %16047, 31
  %16063 = sub i32 0, 31
  %16064 = add i32 %16047, %16063
  %_4036 = sub i32 %16047, 31
  %gen4037 = mul i32 %16064, 31
  %16065 = sub i32 %16047, 1047739197
  %16066 = add i32 %16065, 31
  %16067 = add i32 %16066, 1047739197
  %add800alteredBB = add nsw i32 %16047, 31
  %16068 = load i32, i32* %f, align 4
  %16069 = sub i32 0, 1426726843
  %16070 = sub i32 %16069, %16067
  %16071 = add i32 %16070, 1426726843
  %_4038 = sub i32 0, %16067
  %16072 = sub i32 0, %16071
  %16073 = sub i32 0, %16068
  %16074 = add i32 %16072, %16073
  %16075 = sub i32 0, %16074
  %gen4039 = add i32 %16071, %16068
  %16076 = add i32 0, 357370721
  %16077 = sub i32 %16076, %16067
  %16078 = sub i32 %16077, 357370721
  %_4040 = sub i32 0, %16067
  %16079 = add i32 %16078, 1392984965
  %16080 = add i32 %16079, %16068
  %16081 = sub i32 %16080, 1392984965
  %gen4041 = add i32 %16078, %16068
  %_4042 = shl i32 %16067, %16068
  %16082 = sub i32 %16067, 750222275
  %16083 = sub i32 %16082, %16068
  %16084 = add i32 %16083, 750222275
  %_4043 = sub i32 %16067, %16068
  %gen4044 = mul i32 %16084, %16068
  %16085 = sub i32 0, 1266837893
  %16086 = sub i32 %16085, %16067
  %16087 = add i32 %16086, 1266837893
  %_4045 = sub i32 0, %16067
  %16088 = sub i32 0, %16068
  %16089 = sub i32 %16087, %16088
  %gen4046 = add i32 %16087, %16068
  %_4047 = shl i32 %16067, %16068
  %16090 = sub i32 %16067, 1836711138
  %16091 = add i32 %16090, %16068
  %16092 = add i32 %16091, 1836711138
  %add801alteredBB = add nsw i32 %16067, %16068
  %16093 = load i32, i32* %c, align 4
  %16094 = add i32 %16092, 1359874067
  %16095 = sub i32 %16094, %16093
  %16096 = sub i32 %16095, 1359874067
  %_4048 = sub i32 %16092, %16093
  %gen4049 = mul i32 %16096, %16093
  %16097 = sub i32 0, %16092
  %16098 = add i32 0, %16097
  %_4050 = sub i32 0, %16092
  %16099 = sub i32 0, %16098
  %16100 = sub i32 0, %16093
  %16101 = add i32 %16099, %16100
  %16102 = sub i32 0, %16101
  %gen4051 = add i32 %16098, %16093
  %16103 = sub i32 %16092, -1670550403
  %16104 = sub i32 %16103, %16093
  %16105 = add i32 %16104, -1670550403
  %sub802alteredBB = sub nsw i32 %16092, %16093
  store i32 %16105, i32* %s, align 4
  %16106 = load i32, i32* %s, align 4
  %call803alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16106)
  store i32 941618472, i32* %switchVar
  br label %loopEnd

originalBB4055alteredBB:                          ; preds = %loopEntry
  %16107 = load i32, i32* %e, align 4
  %cmp805alteredBB = icmp eq i32 %16107, 12
  store i32 -323754390, i32* %switchVar
  br label %loopEnd

originalBB4059alteredBB:                          ; preds = %loopEntry
  %16108 = load i32, i32* %s, align 4
  %16109 = sub i32 0, 31
  %16110 = add i32 %16108, %16109
  %_4060 = sub i32 %16108, 31
  %gen4061 = mul i32 %16110, 31
  %16111 = add i32 %16108, 839632428
  %16112 = add i32 %16111, 31
  %16113 = sub i32 %16112, 839632428
  %add807alteredBB = add nsw i32 %16108, 31
  %16114 = add i32 0, 1563873830
  %16115 = sub i32 %16114, %16113
  %16116 = sub i32 %16115, 1563873830
  %_4062 = sub i32 0, %16113
  %16117 = sub i32 %16116, 128551112
  %16118 = add i32 %16117, 31
  %16119 = add i32 %16118, 128551112
  %gen4063 = add i32 %16116, 31
  %_4064 = shl i32 %16113, 31
  %16120 = sub i32 0, 31
  %16121 = add i32 %16113, %16120
  %_4065 = sub i32 %16113, 31
  %gen4066 = mul i32 %16121, 31
  %_4067 = shl i32 %16113, 31
  %_4068 = shl i32 %16113, 31
  %16122 = add i32 %16113, 1851953485
  %16123 = sub i32 %16122, 31
  %16124 = sub i32 %16123, 1851953485
  %_4069 = sub i32 %16113, 31
  %gen4070 = mul i32 %16124, 31
  %_4071 = shl i32 %16113, 31
  %16125 = add i32 0, -1487922480
  %16126 = sub i32 %16125, %16113
  %16127 = sub i32 %16126, -1487922480
  %_4072 = sub i32 0, %16113
  %16128 = sub i32 %16127, -188061171
  %16129 = add i32 %16128, 31
  %16130 = add i32 %16129, -188061171
  %gen4073 = add i32 %16127, 31
  %16131 = sub i32 %16113, -305240980
  %16132 = add i32 %16131, 31
  %16133 = add i32 %16132, -305240980
  %add808alteredBB = add nsw i32 %16113, 31
  %_4074 = shl i32 %16133, 30
  %16134 = sub i32 %16133, 1533585365
  %16135 = add i32 %16134, 30
  %16136 = add i32 %16135, 1533585365
  %add809alteredBB = add nsw i32 %16133, 30
  %16137 = sub i32 %16136, 870938179
  %16138 = sub i32 %16137, 31
  %16139 = add i32 %16138, 870938179
  %_4075 = sub i32 %16136, 31
  %gen4076 = mul i32 %16139, 31
  %16140 = add i32 %16136, 2123923700
  %16141 = sub i32 %16140, 31
  %16142 = sub i32 %16141, 2123923700
  %_4077 = sub i32 %16136, 31
  %gen4078 = mul i32 %16142, 31
  %16143 = sub i32 0, 556394957
  %16144 = sub i32 %16143, %16136
  %16145 = add i32 %16144, 556394957
  %_4079 = sub i32 0, %16136
  %16146 = sub i32 0, 31
  %16147 = sub i32 %16145, %16146
  %gen4080 = add i32 %16145, 31
  %16148 = sub i32 0, %16136
  %16149 = sub i32 0, 31
  %16150 = add i32 %16148, %16149
  %16151 = sub i32 0, %16150
  %add810alteredBB = add nsw i32 %16136, 31
  %_4081 = shl i32 %16151, 30
  %16152 = sub i32 %16151, 1889607427
  %16153 = sub i32 %16152, 30
  %16154 = add i32 %16153, 1889607427
  %_4082 = sub i32 %16151, 30
  %gen4083 = mul i32 %16154, 30
  %16155 = sub i32 %16151, -1428259111
  %16156 = add i32 %16155, 30
  %16157 = add i32 %16156, -1428259111
  %add811alteredBB = add nsw i32 %16151, 30
  %16158 = load i32, i32* %f, align 4
  %16159 = sub i32 %16157, 1368299340
  %16160 = sub i32 %16159, %16158
  %16161 = add i32 %16160, 1368299340
  %_4084 = sub i32 %16157, %16158
  %gen4085 = mul i32 %16161, %16158
  %16162 = sub i32 0, %16157
  %16163 = add i32 0, %16162
  %_4086 = sub i32 0, %16157
  %16164 = sub i32 0, %16163
  %16165 = sub i32 0, %16158
  %16166 = add i32 %16164, %16165
  %16167 = sub i32 0, %16166
  %gen4087 = add i32 %16163, %16158
  %_4088 = shl i32 %16157, %16158
  %_4089 = shl i32 %16157, %16158
  %16168 = sub i32 0, 1141183847
  %16169 = sub i32 %16168, %16157
  %16170 = add i32 %16169, 1141183847
  %_4090 = sub i32 0, %16157
  %16171 = sub i32 %16170, 1477924858
  %16172 = add i32 %16171, %16158
  %16173 = add i32 %16172, 1477924858
  %gen4091 = add i32 %16170, %16158
  %16174 = sub i32 0, %16158
  %16175 = add i32 %16157, %16174
  %_4092 = sub i32 %16157, %16158
  %gen4093 = mul i32 %16175, %16158
  %_4094 = shl i32 %16157, %16158
  %16176 = sub i32 0, %16158
  %16177 = add i32 %16157, %16176
  %_4095 = sub i32 %16157, %16158
  %gen4096 = mul i32 %16177, %16158
  %16178 = sub i32 %16157, 1800827129
  %16179 = add i32 %16178, %16158
  %16180 = add i32 %16179, 1800827129
  %add812alteredBB = add nsw i32 %16157, %16158
  %16181 = load i32, i32* %c, align 4
  %_4097 = shl i32 %16180, %16181
  %16182 = add i32 %16180, 2044240985
  %16183 = sub i32 %16182, %16181
  %16184 = sub i32 %16183, 2044240985
  %_4098 = sub i32 %16180, %16181
  %gen4099 = mul i32 %16184, %16181
  %16185 = add i32 0, -1025078972
  %16186 = sub i32 %16185, %16180
  %16187 = sub i32 %16186, -1025078972
  %_4100 = sub i32 0, %16180
  %16188 = add i32 %16187, 1725721650
  %16189 = add i32 %16188, %16181
  %16190 = sub i32 %16189, 1725721650
  %gen4101 = add i32 %16187, %16181
  %16191 = sub i32 0, 1083700231
  %16192 = sub i32 %16191, %16180
  %16193 = add i32 %16192, 1083700231
  %_4102 = sub i32 0, %16180
  %16194 = add i32 %16193, 227605844
  %16195 = add i32 %16194, %16181
  %16196 = sub i32 %16195, 227605844
  %gen4103 = add i32 %16193, %16181
  %16197 = sub i32 %16180, 1477390583
  %16198 = sub i32 %16197, %16181
  %16199 = add i32 %16198, 1477390583
  %sub813alteredBB = sub nsw i32 %16180, %16181
  store i32 %16199, i32* %s, align 4
  %16200 = load i32, i32* %s, align 4
  %call814alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16200)
  store i32 1840193528, i32* %switchVar
  br label %loopEnd

originalBB4107alteredBB:                          ; preds = %loopEntry
  store i32 -750691086, i32* %switchVar
  br label %loopEnd

originalBB4111alteredBB:                          ; preds = %loopEntry
  %16201 = load i32, i32* %e, align 4
  %cmp817alteredBB = icmp eq i32 %16201, 1
  store i32 69609552, i32* %switchVar
  br label %loopEnd

originalBB4115alteredBB:                          ; preds = %loopEntry
  %16202 = load i32, i32* %s, align 4
  %16203 = add i32 0, -2061038449
  %16204 = sub i32 %16203, %16202
  %16205 = sub i32 %16204, -2061038449
  %_4116 = sub i32 0, %16202
  %16206 = sub i32 0, 31
  %16207 = sub i32 %16205, %16206
  %gen4117 = add i32 %16205, 31
  %_4118 = shl i32 %16202, 31
  %16208 = sub i32 0, 31
  %16209 = add i32 %16202, %16208
  %_4119 = sub i32 %16202, 31
  %gen4120 = mul i32 %16209, 31
  %16210 = sub i32 0, -122504604
  %16211 = sub i32 %16210, %16202
  %16212 = add i32 %16211, -122504604
  %_4121 = sub i32 0, %16202
  %16213 = sub i32 0, 31
  %16214 = sub i32 %16212, %16213
  %gen4122 = add i32 %16212, 31
  %16215 = add i32 %16202, 1462806749
  %16216 = sub i32 %16215, 31
  %16217 = sub i32 %16216, 1462806749
  %_4123 = sub i32 %16202, 31
  %gen4124 = mul i32 %16217, 31
  %16218 = sub i32 %16202, 946099222
  %16219 = sub i32 %16218, 31
  %16220 = add i32 %16219, 946099222
  %_4125 = sub i32 %16202, 31
  %gen4126 = mul i32 %16220, 31
  %_4127 = shl i32 %16202, 31
  %16221 = sub i32 0, 53054588
  %16222 = sub i32 %16221, %16202
  %16223 = add i32 %16222, 53054588
  %_4128 = sub i32 0, %16202
  %16224 = sub i32 %16223, 833599745
  %16225 = add i32 %16224, 31
  %16226 = add i32 %16225, 833599745
  %gen4129 = add i32 %16223, 31
  %16227 = add i32 %16202, 957869652
  %16228 = sub i32 %16227, 31
  %16229 = sub i32 %16228, 957869652
  %sub832alteredBB = sub nsw i32 %16202, 31
  %_4130 = shl i32 %16229, 30
  %16230 = sub i32 %16229, 1115692177
  %16231 = sub i32 %16230, 30
  %16232 = add i32 %16231, 1115692177
  %_4131 = sub i32 %16229, 30
  %gen4132 = mul i32 %16232, 30
  %16233 = sub i32 %16229, 847942976
  %16234 = sub i32 %16233, 30
  %16235 = add i32 %16234, 847942976
  %_4133 = sub i32 %16229, 30
  %gen4134 = mul i32 %16235, 30
  %_4135 = shl i32 %16229, 30
  %16236 = add i32 %16229, 718267257
  %16237 = sub i32 %16236, 30
  %16238 = sub i32 %16237, 718267257
  %sub833alteredBB = sub nsw i32 %16229, 30
  %16239 = add i32 %16238, 1056973830
  %16240 = sub i32 %16239, 31
  %16241 = sub i32 %16240, 1056973830
  %_4136 = sub i32 %16238, 31
  %gen4137 = mul i32 %16241, 31
  %16242 = sub i32 %16238, 742387212
  %16243 = sub i32 %16242, 31
  %16244 = add i32 %16243, 742387212
  %sub834alteredBB = sub nsw i32 %16238, 31
  %16245 = add i32 0, -58283664
  %16246 = sub i32 %16245, %16244
  %16247 = sub i32 %16246, -58283664
  %_4138 = sub i32 0, %16244
  %16248 = sub i32 0, 30
  %16249 = sub i32 %16247, %16248
  %gen4139 = add i32 %16247, 30
  %16250 = sub i32 0, 30
  %16251 = add i32 %16244, %16250
  %sub835alteredBB = sub nsw i32 %16244, 30
  %16252 = add i32 %16251, -384049756
  %16253 = sub i32 %16252, 31
  %16254 = sub i32 %16253, -384049756
  %_4140 = sub i32 %16251, 31
  %gen4141 = mul i32 %16254, 31
  %16255 = sub i32 0, 881430881
  %16256 = sub i32 %16255, %16251
  %16257 = add i32 %16256, 881430881
  %_4142 = sub i32 0, %16251
  %16258 = add i32 %16257, -1087934323
  %16259 = add i32 %16258, 31
  %16260 = sub i32 %16259, -1087934323
  %gen4143 = add i32 %16257, 31
  %16261 = sub i32 0, 31
  %16262 = add i32 %16251, %16261
  %sub836alteredBB = sub nsw i32 %16251, 31
  %_4144 = shl i32 %16262, 29
  %16263 = add i32 %16262, 1729595612
  %16264 = sub i32 %16263, 29
  %16265 = sub i32 %16264, 1729595612
  %_4145 = sub i32 %16262, 29
  %gen4146 = mul i32 %16265, 29
  %16266 = sub i32 0, 29
  %16267 = add i32 %16262, %16266
  %_4147 = sub i32 %16262, 29
  %gen4148 = mul i32 %16267, 29
  %16268 = sub i32 %16262, 38828600
  %16269 = sub i32 %16268, 29
  %16270 = add i32 %16269, 38828600
  %_4149 = sub i32 %16262, 29
  %gen4150 = mul i32 %16270, 29
  %16271 = add i32 %16262, -1808821249
  %16272 = sub i32 %16271, 29
  %16273 = sub i32 %16272, -1808821249
  %sub837alteredBB = sub nsw i32 %16262, 29
  %16274 = load i32, i32* %f, align 4
  %16275 = sub i32 0, %16274
  %16276 = add i32 %16273, %16275
  %_4151 = sub i32 %16273, %16274
  %gen4152 = mul i32 %16276, %16274
  %16277 = sub i32 0, 1770337602
  %16278 = sub i32 %16277, %16273
  %16279 = add i32 %16278, 1770337602
  %_4153 = sub i32 0, %16273
  %16280 = sub i32 0, %16274
  %16281 = sub i32 %16279, %16280
  %gen4154 = add i32 %16279, %16274
  %16282 = add i32 0, -1324854658
  %16283 = sub i32 %16282, %16273
  %16284 = sub i32 %16283, -1324854658
  %_4155 = sub i32 0, %16273
  %16285 = add i32 %16284, -592136607
  %16286 = add i32 %16285, %16274
  %16287 = sub i32 %16286, -592136607
  %gen4156 = add i32 %16284, %16274
  %16288 = sub i32 %16273, 1099086321
  %16289 = sub i32 %16288, %16274
  %16290 = add i32 %16289, 1099086321
  %_4157 = sub i32 %16273, %16274
  %gen4158 = mul i32 %16290, %16274
  %16291 = add i32 0, -1795729683
  %16292 = sub i32 %16291, %16273
  %16293 = sub i32 %16292, -1795729683
  %_4159 = sub i32 0, %16273
  %16294 = add i32 %16293, -1620598829
  %16295 = add i32 %16294, %16274
  %16296 = sub i32 %16295, -1620598829
  %gen4160 = add i32 %16293, %16274
  %16297 = sub i32 %16273, -739509521
  %16298 = add i32 %16297, %16274
  %16299 = add i32 %16298, -739509521
  %add838alteredBB = add nsw i32 %16273, %16274
  %16300 = load i32, i32* %c, align 4
  %_4161 = shl i32 %16299, %16300
  %_4162 = shl i32 %16299, %16300
  %16301 = add i32 %16299, 1072928356
  %16302 = sub i32 %16301, %16300
  %16303 = sub i32 %16302, 1072928356
  %_4163 = sub i32 %16299, %16300
  %gen4164 = mul i32 %16303, %16300
  %16304 = add i32 0, 70280996
  %16305 = sub i32 %16304, %16299
  %16306 = sub i32 %16305, 70280996
  %_4165 = sub i32 0, %16299
  %16307 = add i32 %16306, 1938818470
  %16308 = add i32 %16307, %16300
  %16309 = sub i32 %16308, 1938818470
  %gen4166 = add i32 %16306, %16300
  %16310 = sub i32 0, %16300
  %16311 = add i32 %16299, %16310
  %_4167 = sub i32 %16299, %16300
  %gen4168 = mul i32 %16311, %16300
  %16312 = add i32 %16299, -108827448
  %16313 = sub i32 %16312, %16300
  %16314 = sub i32 %16313, -108827448
  %sub839alteredBB = sub nsw i32 %16299, %16300
  store i32 %16314, i32* %s, align 4
  %16315 = load i32, i32* %s, align 4
  %call840alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16315)
  store i32 2118293245, i32* %switchVar
  br label %loopEnd

originalBB4172alteredBB:                          ; preds = %loopEntry
  %16316 = load i32, i32* %s, align 4
  %16317 = add i32 %16316, -926028538
  %16318 = sub i32 %16317, 31
  %16319 = sub i32 %16318, -926028538
  %_4173 = sub i32 %16316, 31
  %gen4174 = mul i32 %16319, 31
  %_4175 = shl i32 %16316, 31
  %16320 = sub i32 0, -1751823974
  %16321 = sub i32 %16320, %16316
  %16322 = add i32 %16321, -1751823974
  %_4176 = sub i32 0, %16316
  %16323 = sub i32 0, 31
  %16324 = sub i32 %16322, %16323
  %gen4177 = add i32 %16322, 31
  %16325 = sub i32 %16316, 1193296190
  %16326 = sub i32 %16325, 31
  %16327 = add i32 %16326, 1193296190
  %sub874alteredBB = sub nsw i32 %16316, 31
  %16328 = add i32 0, 2114333605
  %16329 = sub i32 %16328, %16327
  %16330 = sub i32 %16329, 2114333605
  %_4178 = sub i32 0, %16327
  %16331 = sub i32 %16330, 1944119581
  %16332 = add i32 %16331, 30
  %16333 = add i32 %16332, 1944119581
  %gen4179 = add i32 %16330, 30
  %_4180 = shl i32 %16327, 30
  %_4181 = shl i32 %16327, 30
  %16334 = add i32 %16327, -111212372
  %16335 = sub i32 %16334, 30
  %16336 = sub i32 %16335, -111212372
  %_4182 = sub i32 %16327, 30
  %gen4183 = mul i32 %16336, 30
  %16337 = sub i32 0, 30
  %16338 = add i32 %16327, %16337
  %_4184 = sub i32 %16327, 30
  %gen4185 = mul i32 %16338, 30
  %_4186 = shl i32 %16327, 30
  %16339 = add i32 %16327, -368678964
  %16340 = sub i32 %16339, 30
  %16341 = sub i32 %16340, -368678964
  %sub875alteredBB = sub nsw i32 %16327, 30
  %16342 = load i32, i32* %f, align 4
  %_4187 = shl i32 %16341, %16342
  %16343 = sub i32 %16341, 1311608718
  %16344 = add i32 %16343, %16342
  %16345 = add i32 %16344, 1311608718
  %add876alteredBB = add nsw i32 %16341, %16342
  %16346 = load i32, i32* %c, align 4
  %_4188 = shl i32 %16345, %16346
  %16347 = add i32 %16345, 761996534
  %16348 = sub i32 %16347, %16346
  %16349 = sub i32 %16348, 761996534
  %_4189 = sub i32 %16345, %16346
  %gen4190 = mul i32 %16349, %16346
  %_4191 = shl i32 %16345, %16346
  %16350 = sub i32 0, %16346
  %16351 = add i32 %16345, %16350
  %_4192 = sub i32 %16345, %16346
  %gen4193 = mul i32 %16351, %16346
  %16352 = add i32 %16345, -1266193544
  %16353 = sub i32 %16352, %16346
  %16354 = sub i32 %16353, -1266193544
  %_4194 = sub i32 %16345, %16346
  %gen4195 = mul i32 %16354, %16346
  %_4196 = shl i32 %16345, %16346
  %_4197 = shl i32 %16345, %16346
  %16355 = add i32 %16345, -705582062
  %16356 = sub i32 %16355, %16346
  %16357 = sub i32 %16356, -705582062
  %sub877alteredBB = sub nsw i32 %16345, %16346
  store i32 %16357, i32* %s, align 4
  %16358 = load i32, i32* %s, align 4
  %call878alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16358)
  store i32 -1727184455, i32* %switchVar
  br label %loopEnd

originalBB4201alteredBB:                          ; preds = %loopEntry
  %16359 = load i32, i32* %s, align 4
  %16360 = sub i32 0, 551591764
  %16361 = sub i32 %16360, %16359
  %16362 = add i32 %16361, 551591764
  %_4202 = sub i32 0, %16359
  %16363 = add i32 %16362, -1816931188
  %16364 = add i32 %16363, 31
  %16365 = sub i32 %16364, -1816931188
  %gen4203 = add i32 %16362, 31
  %16366 = sub i32 %16359, 889383526
  %16367 = sub i32 %16366, 31
  %16368 = add i32 %16367, 889383526
  %sub882alteredBB = sub nsw i32 %16359, 31
  %16369 = load i32, i32* %f, align 4
  %16370 = sub i32 %16368, 439443574
  %16371 = sub i32 %16370, %16369
  %16372 = add i32 %16371, 439443574
  %_4204 = sub i32 %16368, %16369
  %gen4205 = mul i32 %16372, %16369
  %_4206 = shl i32 %16368, %16369
  %_4207 = shl i32 %16368, %16369
  %16373 = sub i32 0, %16369
  %16374 = add i32 %16368, %16373
  %_4208 = sub i32 %16368, %16369
  %gen4209 = mul i32 %16374, %16369
  %16375 = sub i32 0, %16369
  %16376 = add i32 %16368, %16375
  %_4210 = sub i32 %16368, %16369
  %gen4211 = mul i32 %16376, %16369
  %16377 = sub i32 %16368, -1080115146
  %16378 = sub i32 %16377, %16369
  %16379 = add i32 %16378, -1080115146
  %_4212 = sub i32 %16368, %16369
  %gen4213 = mul i32 %16379, %16369
  %16380 = sub i32 0, %16368
  %16381 = add i32 0, %16380
  %_4214 = sub i32 0, %16368
  %16382 = add i32 %16381, -1861258856
  %16383 = add i32 %16382, %16369
  %16384 = sub i32 %16383, -1861258856
  %gen4215 = add i32 %16381, %16369
  %16385 = sub i32 0, %16368
  %16386 = sub i32 0, %16369
  %16387 = add i32 %16385, %16386
  %16388 = sub i32 0, %16387
  %add883alteredBB = add nsw i32 %16368, %16369
  %16389 = load i32, i32* %c, align 4
  %16390 = sub i32 0, %16388
  %16391 = add i32 0, %16390
  %_4216 = sub i32 0, %16388
  %16392 = sub i32 0, %16389
  %16393 = sub i32 %16391, %16392
  %gen4217 = add i32 %16391, %16389
  %16394 = sub i32 0, -1358229023
  %16395 = sub i32 %16394, %16388
  %16396 = add i32 %16395, -1358229023
  %_4218 = sub i32 0, %16388
  %16397 = sub i32 %16396, 1673514852
  %16398 = add i32 %16397, %16389
  %16399 = add i32 %16398, 1673514852
  %gen4219 = add i32 %16396, %16389
  %_4220 = shl i32 %16388, %16389
  %16400 = sub i32 0, -290407032
  %16401 = sub i32 %16400, %16388
  %16402 = add i32 %16401, -290407032
  %_4221 = sub i32 0, %16388
  %16403 = sub i32 0, %16402
  %16404 = sub i32 0, %16389
  %16405 = add i32 %16403, %16404
  %16406 = sub i32 0, %16405
  %gen4222 = add i32 %16402, %16389
  %_4223 = shl i32 %16388, %16389
  %16407 = sub i32 %16388, -1120375831
  %16408 = sub i32 %16407, %16389
  %16409 = add i32 %16408, -1120375831
  %sub884alteredBB = sub nsw i32 %16388, %16389
  store i32 %16409, i32* %s, align 4
  %16410 = load i32, i32* %s, align 4
  %call885alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16410)
  store i32 -1731019515, i32* %switchVar
  br label %loopEnd

originalBB4227alteredBB:                          ; preds = %loopEntry
  %16411 = load i32, i32* %s, align 4
  %16412 = sub i32 0, 31
  %16413 = add i32 %16411, %16412
  %_4228 = sub i32 %16411, 31
  %gen4229 = mul i32 %16413, 31
  %16414 = sub i32 0, %16411
  %16415 = add i32 0, %16414
  %_4230 = sub i32 0, %16411
  %16416 = sub i32 0, 31
  %16417 = sub i32 %16415, %16416
  %gen4231 = add i32 %16415, 31
  %16418 = sub i32 0, 31
  %16419 = add i32 %16411, %16418
  %_4232 = sub i32 %16411, 31
  %gen4233 = mul i32 %16419, 31
  %16420 = add i32 %16411, -662330673
  %16421 = sub i32 %16420, 31
  %16422 = sub i32 %16421, -662330673
  %_4234 = sub i32 %16411, 31
  %gen4235 = mul i32 %16422, 31
  %16423 = sub i32 0, 31
  %16424 = sub i32 %16411, %16423
  %add889alteredBB = add nsw i32 %16411, 31
  %16425 = load i32, i32* %f, align 4
  %16426 = add i32 0, -1884935765
  %16427 = sub i32 %16426, %16424
  %16428 = sub i32 %16427, -1884935765
  %_4236 = sub i32 0, %16424
  %16429 = sub i32 0, %16425
  %16430 = sub i32 %16428, %16429
  %gen4237 = add i32 %16428, %16425
  %16431 = sub i32 %16424, -1464469268
  %16432 = add i32 %16431, %16425
  %16433 = add i32 %16432, -1464469268
  %add890alteredBB = add nsw i32 %16424, %16425
  %16434 = load i32, i32* %c, align 4
  %16435 = sub i32 %16433, -511170639
  %16436 = sub i32 %16435, %16434
  %16437 = add i32 %16436, -511170639
  %_4238 = sub i32 %16433, %16434
  %gen4239 = mul i32 %16437, %16434
  %16438 = sub i32 0, %16434
  %16439 = add i32 %16433, %16438
  %_4240 = sub i32 %16433, %16434
  %gen4241 = mul i32 %16439, %16434
  %_4242 = shl i32 %16433, %16434
  %16440 = sub i32 %16433, -1097729905
  %16441 = sub i32 %16440, %16434
  %16442 = add i32 %16441, -1097729905
  %_4243 = sub i32 %16433, %16434
  %gen4244 = mul i32 %16442, %16434
  %_4245 = shl i32 %16433, %16434
  %16443 = sub i32 0, -1951843117
  %16444 = sub i32 %16443, %16433
  %16445 = add i32 %16444, -1951843117
  %_4246 = sub i32 0, %16433
  %16446 = add i32 %16445, -1883948
  %16447 = add i32 %16446, %16434
  %16448 = sub i32 %16447, -1883948
  %gen4247 = add i32 %16445, %16434
  %_4248 = shl i32 %16433, %16434
  %16449 = add i32 %16433, 1250508701
  %16450 = sub i32 %16449, %16434
  %16451 = sub i32 %16450, 1250508701
  %sub891alteredBB = sub nsw i32 %16433, %16434
  store i32 %16451, i32* %s, align 4
  %16452 = load i32, i32* %s, align 4
  %call892alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16452)
  store i32 -699030034, i32* %switchVar
  br label %loopEnd

originalBB4252alteredBB:                          ; preds = %loopEntry
  %16453 = load i32, i32* %s, align 4
  %_4253 = shl i32 %16453, 31
  %16454 = sub i32 %16453, 1083037674
  %16455 = sub i32 %16454, 31
  %16456 = add i32 %16455, 1083037674
  %_4254 = sub i32 %16453, 31
  %gen4255 = mul i32 %16456, 31
  %16457 = sub i32 0, 31
  %16458 = add i32 %16453, %16457
  %_4256 = sub i32 %16453, 31
  %gen4257 = mul i32 %16458, 31
  %16459 = sub i32 0, 31
  %16460 = sub i32 %16453, %16459
  %add896alteredBB = add nsw i32 %16453, 31
  %16461 = sub i32 0, 30
  %16462 = add i32 %16460, %16461
  %_4258 = sub i32 %16460, 30
  %gen4259 = mul i32 %16462, 30
  %16463 = sub i32 0, %16460
  %16464 = add i32 0, %16463
  %_4260 = sub i32 0, %16460
  %16465 = add i32 %16464, -300419278
  %16466 = add i32 %16465, 30
  %16467 = sub i32 %16466, -300419278
  %gen4261 = add i32 %16464, 30
  %16468 = add i32 0, -1138426775
  %16469 = sub i32 %16468, %16460
  %16470 = sub i32 %16469, -1138426775
  %_4262 = sub i32 0, %16460
  %16471 = sub i32 0, 30
  %16472 = sub i32 %16470, %16471
  %gen4263 = add i32 %16470, 30
  %16473 = sub i32 0, 1316796616
  %16474 = sub i32 %16473, %16460
  %16475 = add i32 %16474, 1316796616
  %_4264 = sub i32 0, %16460
  %16476 = sub i32 0, %16475
  %16477 = sub i32 0, 30
  %16478 = add i32 %16476, %16477
  %16479 = sub i32 0, %16478
  %gen4265 = add i32 %16475, 30
  %16480 = sub i32 0, 30
  %16481 = sub i32 %16460, %16480
  %add897alteredBB = add nsw i32 %16460, 30
  %16482 = load i32, i32* %f, align 4
  %16483 = add i32 0, 2084592146
  %16484 = sub i32 %16483, %16481
  %16485 = sub i32 %16484, 2084592146
  %_4266 = sub i32 0, %16481
  %16486 = sub i32 0, %16485
  %16487 = sub i32 0, %16482
  %16488 = add i32 %16486, %16487
  %16489 = sub i32 0, %16488
  %gen4267 = add i32 %16485, %16482
  %16490 = sub i32 0, %16481
  %16491 = add i32 0, %16490
  %_4268 = sub i32 0, %16481
  %16492 = sub i32 0, %16482
  %16493 = sub i32 %16491, %16492
  %gen4269 = add i32 %16491, %16482
  %16494 = add i32 %16481, 1396959662
  %16495 = sub i32 %16494, %16482
  %16496 = sub i32 %16495, 1396959662
  %_4270 = sub i32 %16481, %16482
  %gen4271 = mul i32 %16496, %16482
  %_4272 = shl i32 %16481, %16482
  %16497 = sub i32 0, %16482
  %16498 = add i32 %16481, %16497
  %_4273 = sub i32 %16481, %16482
  %gen4274 = mul i32 %16498, %16482
  %_4275 = shl i32 %16481, %16482
  %_4276 = shl i32 %16481, %16482
  %16499 = sub i32 %16481, -1179486354
  %16500 = sub i32 %16499, %16482
  %16501 = add i32 %16500, -1179486354
  %_4277 = sub i32 %16481, %16482
  %gen4278 = mul i32 %16501, %16482
  %_4279 = shl i32 %16481, %16482
  %16502 = sub i32 0, %16481
  %16503 = sub i32 0, %16482
  %16504 = add i32 %16502, %16503
  %16505 = sub i32 0, %16504
  %add898alteredBB = add nsw i32 %16481, %16482
  %16506 = load i32, i32* %c, align 4
  %16507 = add i32 0, -1823169873
  %16508 = sub i32 %16507, %16505
  %16509 = sub i32 %16508, -1823169873
  %_4280 = sub i32 0, %16505
  %16510 = sub i32 0, %16509
  %16511 = sub i32 0, %16506
  %16512 = add i32 %16510, %16511
  %16513 = sub i32 0, %16512
  %gen4281 = add i32 %16509, %16506
  %16514 = add i32 %16505, -2011058688
  %16515 = sub i32 %16514, %16506
  %16516 = sub i32 %16515, -2011058688
  %sub899alteredBB = sub nsw i32 %16505, %16506
  store i32 %16516, i32* %s, align 4
  %16517 = load i32, i32* %s, align 4
  %call900alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16517)
  store i32 -474413486, i32* %switchVar
  br label %loopEnd

originalBB4285alteredBB:                          ; preds = %loopEntry
  %16518 = load i32, i32* %e, align 4
  %cmp936alteredBB = icmp eq i32 %16518, 2
  store i32 -785674141, i32* %switchVar
  br label %loopEnd

originalBB4289alteredBB:                          ; preds = %loopEntry
  %16519 = load i32, i32* %e, align 4
  %cmp949alteredBB = icmp eq i32 %16519, 3
  store i32 1372445417, i32* %switchVar
  br label %loopEnd

originalBB4293alteredBB:                          ; preds = %loopEntry
  %16520 = load i32, i32* %e, align 4
  %cmp961alteredBB = icmp eq i32 %16520, 4
  store i32 971372955, i32* %switchVar
  br label %loopEnd

originalBB4297alteredBB:                          ; preds = %loopEntry
  %16521 = load i32, i32* %s, align 4
  %16522 = sub i32 %16521, -459974278
  %16523 = sub i32 %16522, 31
  %16524 = add i32 %16523, -459974278
  %_4298 = sub i32 %16521, 31
  %gen4299 = mul i32 %16524, 31
  %_4300 = shl i32 %16521, 31
  %16525 = add i32 %16521, 1702319845
  %16526 = sub i32 %16525, 31
  %16527 = sub i32 %16526, 1702319845
  %_4301 = sub i32 %16521, 31
  %gen4302 = mul i32 %16527, 31
  %16528 = sub i32 0, %16521
  %16529 = add i32 0, %16528
  %_4303 = sub i32 0, %16521
  %16530 = sub i32 0, 31
  %16531 = sub i32 %16529, %16530
  %gen4304 = add i32 %16529, 31
  %16532 = sub i32 0, 31
  %16533 = add i32 %16521, %16532
  %sub984alteredBB = sub nsw i32 %16521, 31
  %_4305 = shl i32 %16533, 31
  %16534 = sub i32 0, %16533
  %16535 = add i32 0, %16534
  %_4306 = sub i32 0, %16533
  %16536 = sub i32 0, %16535
  %16537 = sub i32 0, 31
  %16538 = add i32 %16536, %16537
  %16539 = sub i32 0, %16538
  %gen4307 = add i32 %16535, 31
  %16540 = sub i32 0, %16533
  %16541 = add i32 0, %16540
  %_4308 = sub i32 0, %16533
  %16542 = sub i32 0, 31
  %16543 = sub i32 %16541, %16542
  %gen4309 = add i32 %16541, 31
  %16544 = add i32 %16533, -1187318323
  %16545 = sub i32 %16544, 31
  %16546 = sub i32 %16545, -1187318323
  %sub985alteredBB = sub nsw i32 %16533, 31
  %16547 = sub i32 0, 30
  %16548 = add i32 %16546, %16547
  %_4310 = sub i32 %16546, 30
  %gen4311 = mul i32 %16548, 30
  %16549 = sub i32 0, %16546
  %16550 = add i32 0, %16549
  %_4312 = sub i32 0, %16546
  %16551 = sub i32 %16550, 1877589994
  %16552 = add i32 %16551, 30
  %16553 = add i32 %16552, 1877589994
  %gen4313 = add i32 %16550, 30
  %16554 = sub i32 0, 30
  %16555 = add i32 %16546, %16554
  %sub986alteredBB = sub nsw i32 %16546, 30
  %16556 = load i32, i32* %f, align 4
  %16557 = add i32 0, 1003725590
  %16558 = sub i32 %16557, %16555
  %16559 = sub i32 %16558, 1003725590
  %_4314 = sub i32 0, %16555
  %16560 = sub i32 0, %16556
  %16561 = sub i32 %16559, %16560
  %gen4315 = add i32 %16559, %16556
  %16562 = add i32 0, -1959999675
  %16563 = sub i32 %16562, %16555
  %16564 = sub i32 %16563, -1959999675
  %_4316 = sub i32 0, %16555
  %16565 = sub i32 %16564, 1885981655
  %16566 = add i32 %16565, %16556
  %16567 = add i32 %16566, 1885981655
  %gen4317 = add i32 %16564, %16556
  %16568 = sub i32 0, %16555
  %16569 = add i32 0, %16568
  %_4318 = sub i32 0, %16555
  %16570 = add i32 %16569, -1934552939
  %16571 = add i32 %16570, %16556
  %16572 = sub i32 %16571, -1934552939
  %gen4319 = add i32 %16569, %16556
  %16573 = sub i32 0, %16556
  %16574 = add i32 %16555, %16573
  %_4320 = sub i32 %16555, %16556
  %gen4321 = mul i32 %16574, %16556
  %16575 = sub i32 0, %16556
  %16576 = add i32 %16555, %16575
  %_4322 = sub i32 %16555, %16556
  %gen4323 = mul i32 %16576, %16556
  %16577 = sub i32 %16555, 663830575
  %16578 = sub i32 %16577, %16556
  %16579 = add i32 %16578, 663830575
  %_4324 = sub i32 %16555, %16556
  %gen4325 = mul i32 %16579, %16556
  %16580 = sub i32 0, -704175096
  %16581 = sub i32 %16580, %16555
  %16582 = add i32 %16581, -704175096
  %_4326 = sub i32 0, %16555
  %16583 = add i32 %16582, 463137970
  %16584 = add i32 %16583, %16556
  %16585 = sub i32 %16584, 463137970
  %gen4327 = add i32 %16582, %16556
  %_4328 = shl i32 %16555, %16556
  %16586 = sub i32 0, %16556
  %16587 = sub i32 %16555, %16586
  %add987alteredBB = add nsw i32 %16555, %16556
  %16588 = load i32, i32* %c, align 4
  %_4329 = shl i32 %16587, %16588
  %16589 = add i32 0, -97317988
  %16590 = sub i32 %16589, %16587
  %16591 = sub i32 %16590, -97317988
  %_4330 = sub i32 0, %16587
  %16592 = sub i32 0, %16591
  %16593 = sub i32 0, %16588
  %16594 = add i32 %16592, %16593
  %16595 = sub i32 0, %16594
  %gen4331 = add i32 %16591, %16588
  %16596 = sub i32 0, -1054533421
  %16597 = sub i32 %16596, %16587
  %16598 = add i32 %16597, -1054533421
  %_4332 = sub i32 0, %16587
  %16599 = sub i32 0, %16598
  %16600 = sub i32 0, %16588
  %16601 = add i32 %16599, %16600
  %16602 = sub i32 0, %16601
  %gen4333 = add i32 %16598, %16588
  %16603 = sub i32 0, %16588
  %16604 = add i32 %16587, %16603
  %_4334 = sub i32 %16587, %16588
  %gen4335 = mul i32 %16604, %16588
  %_4336 = shl i32 %16587, %16588
  %16605 = sub i32 0, %16587
  %16606 = add i32 0, %16605
  %_4337 = sub i32 0, %16587
  %16607 = sub i32 0, %16588
  %16608 = sub i32 %16606, %16607
  %gen4338 = add i32 %16606, %16588
  %16609 = add i32 %16587, -1659454955
  %16610 = sub i32 %16609, %16588
  %16611 = sub i32 %16610, -1659454955
  %_4339 = sub i32 %16587, %16588
  %gen4340 = mul i32 %16611, %16588
  %16612 = sub i32 0, %16588
  %16613 = add i32 %16587, %16612
  %sub988alteredBB = sub nsw i32 %16587, %16588
  store i32 %16613, i32* %s, align 4
  %16614 = load i32, i32* %s, align 4
  %call989alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16614)
  store i32 1929450195, i32* %switchVar
  br label %loopEnd

originalBB4344alteredBB:                          ; preds = %loopEntry
  %16615 = load i32, i32* %s, align 4
  %16616 = sub i32 0, 31
  %16617 = add i32 %16615, %16616
  %_4345 = sub i32 %16615, 31
  %gen4346 = mul i32 %16617, 31
  %16618 = sub i32 %16615, -811595549
  %16619 = sub i32 %16618, 31
  %16620 = add i32 %16619, -811595549
  %sub1001alteredBB = sub nsw i32 %16615, 31
  %16621 = load i32, i32* %f, align 4
  %16622 = sub i32 0, 783215431
  %16623 = sub i32 %16622, %16620
  %16624 = add i32 %16623, 783215431
  %_4347 = sub i32 0, %16620
  %16625 = sub i32 %16624, 1932689493
  %16626 = add i32 %16625, %16621
  %16627 = add i32 %16626, 1932689493
  %gen4348 = add i32 %16624, %16621
  %_4349 = shl i32 %16620, %16621
  %_4350 = shl i32 %16620, %16621
  %_4351 = shl i32 %16620, %16621
  %16628 = sub i32 %16620, -390095541
  %16629 = add i32 %16628, %16621
  %16630 = add i32 %16629, -390095541
  %add1002alteredBB = add nsw i32 %16620, %16621
  %16631 = load i32, i32* %c, align 4
  %_4352 = shl i32 %16630, %16631
  %_4353 = shl i32 %16630, %16631
  %16632 = sub i32 0, %16630
  %16633 = add i32 0, %16632
  %_4354 = sub i32 0, %16630
  %16634 = sub i32 0, %16631
  %16635 = sub i32 %16633, %16634
  %gen4355 = add i32 %16633, %16631
  %16636 = sub i32 0, %16631
  %16637 = add i32 %16630, %16636
  %sub1003alteredBB = sub nsw i32 %16630, %16631
  store i32 %16637, i32* %s, align 4
  %16638 = load i32, i32* %s, align 4
  %call1004alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16638)
  store i32 1045852028, i32* %switchVar
  br label %loopEnd

originalBB4359alteredBB:                          ; preds = %loopEntry
  %16639 = load i32, i32* %e, align 4
  %cmp1013alteredBB = icmp eq i32 %16639, 11
  store i32 1120408221, i32* %switchVar
  br label %loopEnd

originalBB4363alteredBB:                          ; preds = %loopEntry
  %16640 = load i32, i32* %e, align 4
  %cmp1031alteredBB = icmp eq i32 %16640, 1
  store i32 335749813, i32* %switchVar
  br label %loopEnd

originalBB4367alteredBB:                          ; preds = %loopEntry
  %16641 = load i32, i32* %e, align 4
  %cmp1085alteredBB = icmp eq i32 %16641, 5
  store i32 100221896, i32* %switchVar
  br label %loopEnd

originalBB4371alteredBB:                          ; preds = %loopEntry
  %16642 = load i32, i32* %s, align 4
  %16643 = sub i32 0, %16642
  %16644 = add i32 0, %16643
  %_4372 = sub i32 0, %16642
  %16645 = sub i32 0, %16644
  %16646 = sub i32 0, 30
  %16647 = add i32 %16645, %16646
  %16648 = sub i32 0, %16647
  %gen4373 = add i32 %16644, 30
  %_4374 = shl i32 %16642, 30
  %_4375 = shl i32 %16642, 30
  %16649 = sub i32 %16642, 313375053
  %16650 = sub i32 %16649, 30
  %16651 = add i32 %16650, 313375053
  %sub1087alteredBB = sub nsw i32 %16642, 30
  %16652 = add i32 %16651, 257261579
  %16653 = sub i32 %16652, 31
  %16654 = sub i32 %16653, 257261579
  %_4376 = sub i32 %16651, 31
  %gen4377 = mul i32 %16654, 31
  %_4378 = shl i32 %16651, 31
  %16655 = add i32 %16651, 285306977
  %16656 = sub i32 %16655, 31
  %16657 = sub i32 %16656, 285306977
  %_4379 = sub i32 %16651, 31
  %gen4380 = mul i32 %16657, 31
  %16658 = sub i32 0, -882787729
  %16659 = sub i32 %16658, %16651
  %16660 = add i32 %16659, -882787729
  %_4381 = sub i32 0, %16651
  %16661 = sub i32 0, 31
  %16662 = sub i32 %16660, %16661
  %gen4382 = add i32 %16660, 31
  %16663 = sub i32 0, %16651
  %16664 = add i32 0, %16663
  %_4383 = sub i32 0, %16651
  %16665 = sub i32 0, %16664
  %16666 = sub i32 0, 31
  %16667 = add i32 %16665, %16666
  %16668 = sub i32 0, %16667
  %gen4384 = add i32 %16664, 31
  %_4385 = shl i32 %16651, 31
  %16669 = add i32 %16651, 1283282806
  %16670 = sub i32 %16669, 31
  %16671 = sub i32 %16670, 1283282806
  %sub1088alteredBB = sub nsw i32 %16651, 31
  %16672 = sub i32 0, -1474211731
  %16673 = sub i32 %16672, %16671
  %16674 = add i32 %16673, -1474211731
  %_4386 = sub i32 0, %16671
  %16675 = add i32 %16674, 1388488975
  %16676 = add i32 %16675, 31
  %16677 = sub i32 %16676, 1388488975
  %gen4387 = add i32 %16674, 31
  %16678 = sub i32 %16671, 467401105
  %16679 = sub i32 %16678, 31
  %16680 = add i32 %16679, 467401105
  %_4388 = sub i32 %16671, 31
  %gen4389 = mul i32 %16680, 31
  %_4390 = shl i32 %16671, 31
  %_4391 = shl i32 %16671, 31
  %_4392 = shl i32 %16671, 31
  %_4393 = shl i32 %16671, 31
  %_4394 = shl i32 %16671, 31
  %16681 = add i32 %16671, 347090111
  %16682 = sub i32 %16681, 31
  %16683 = sub i32 %16682, 347090111
  %_4395 = sub i32 %16671, 31
  %gen4396 = mul i32 %16683, 31
  %16684 = sub i32 %16671, 985463851
  %16685 = sub i32 %16684, 31
  %16686 = add i32 %16685, 985463851
  %sub1089alteredBB = sub nsw i32 %16671, 31
  %16687 = add i32 0, -1692793161
  %16688 = sub i32 %16687, %16686
  %16689 = sub i32 %16688, -1692793161
  %_4397 = sub i32 0, %16686
  %16690 = add i32 %16689, 757201514
  %16691 = add i32 %16690, 30
  %16692 = sub i32 %16691, 757201514
  %gen4398 = add i32 %16689, 30
  %16693 = sub i32 0, 30
  %16694 = add i32 %16686, %16693
  %_4399 = sub i32 %16686, 30
  %gen4400 = mul i32 %16694, 30
  %_4401 = shl i32 %16686, 30
  %16695 = sub i32 0, 1353532509
  %16696 = sub i32 %16695, %16686
  %16697 = add i32 %16696, 1353532509
  %_4402 = sub i32 0, %16686
  %16698 = sub i32 0, 30
  %16699 = sub i32 %16697, %16698
  %gen4403 = add i32 %16697, 30
  %16700 = sub i32 0, 30
  %16701 = add i32 %16686, %16700
  %sub1090alteredBB = sub nsw i32 %16686, 30
  %_4404 = shl i32 %16701, 31
  %_4405 = shl i32 %16701, 31
  %_4406 = shl i32 %16701, 31
  %16702 = sub i32 0, 31
  %16703 = add i32 %16701, %16702
  %_4407 = sub i32 %16701, 31
  %gen4408 = mul i32 %16703, 31
  %16704 = add i32 %16701, 346959171
  %16705 = sub i32 %16704, 31
  %16706 = sub i32 %16705, 346959171
  %sub1091alteredBB = sub nsw i32 %16701, 31
  %16707 = load i32, i32* %f, align 4
  %16708 = sub i32 0, %16706
  %16709 = add i32 0, %16708
  %_4409 = sub i32 0, %16706
  %16710 = sub i32 0, %16709
  %16711 = sub i32 0, %16707
  %16712 = add i32 %16710, %16711
  %16713 = sub i32 0, %16712
  %gen4410 = add i32 %16709, %16707
  %_4411 = shl i32 %16706, %16707
  %_4412 = shl i32 %16706, %16707
  %16714 = sub i32 %16706, -160269365
  %16715 = add i32 %16714, %16707
  %16716 = add i32 %16715, -160269365
  %add1092alteredBB = add nsw i32 %16706, %16707
  %16717 = load i32, i32* %c, align 4
  %16718 = add i32 %16716, -60403318
  %16719 = sub i32 %16718, %16717
  %16720 = sub i32 %16719, -60403318
  %_4413 = sub i32 %16716, %16717
  %gen4414 = mul i32 %16720, %16717
  %_4415 = shl i32 %16716, %16717
  %16721 = add i32 %16716, 988065508
  %16722 = sub i32 %16721, %16717
  %16723 = sub i32 %16722, 988065508
  %_4416 = sub i32 %16716, %16717
  %gen4417 = mul i32 %16723, %16717
  %16724 = add i32 0, -918274498
  %16725 = sub i32 %16724, %16716
  %16726 = sub i32 %16725, -918274498
  %_4418 = sub i32 0, %16716
  %16727 = sub i32 %16726, -1233151416
  %16728 = add i32 %16727, %16717
  %16729 = add i32 %16728, -1233151416
  %gen4419 = add i32 %16726, %16717
  %16730 = sub i32 0, %16716
  %16731 = add i32 0, %16730
  %_4420 = sub i32 0, %16716
  %16732 = sub i32 %16731, 303453385
  %16733 = add i32 %16732, %16717
  %16734 = add i32 %16733, 303453385
  %gen4421 = add i32 %16731, %16717
  %_4422 = shl i32 %16716, %16717
  %_4423 = shl i32 %16716, %16717
  %16735 = sub i32 0, %16716
  %16736 = add i32 0, %16735
  %_4424 = sub i32 0, %16716
  %16737 = add i32 %16736, -419289670
  %16738 = add i32 %16737, %16717
  %16739 = sub i32 %16738, -419289670
  %gen4425 = add i32 %16736, %16717
  %16740 = add i32 %16716, 460710199
  %16741 = sub i32 %16740, %16717
  %16742 = sub i32 %16741, 460710199
  %sub1093alteredBB = sub nsw i32 %16716, %16717
  store i32 %16742, i32* %s, align 4
  %16743 = load i32, i32* %s, align 4
  %call1094alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16743)
  store i32 63331586, i32* %switchVar
  br label %loopEnd

originalBB4429alteredBB:                          ; preds = %loopEntry
  %16744 = load i32, i32* %e, align 4
  %cmp1096alteredBB = icmp eq i32 %16744, 6
  store i32 -1840347845, i32* %switchVar
  br label %loopEnd

originalBB4433alteredBB:                          ; preds = %loopEntry
  %16745 = load i32, i32* %s, align 4
  %16746 = add i32 0, 411860833
  %16747 = sub i32 %16746, %16745
  %16748 = sub i32 %16747, 411860833
  %_4434 = sub i32 0, %16745
  %16749 = sub i32 %16748, 231727473
  %16750 = add i32 %16749, 30
  %16751 = add i32 %16750, 231727473
  %gen4435 = add i32 %16748, 30
  %16752 = add i32 0, 555949597
  %16753 = sub i32 %16752, %16745
  %16754 = sub i32 %16753, 555949597
  %_4436 = sub i32 0, %16745
  %16755 = sub i32 0, %16754
  %16756 = sub i32 0, 30
  %16757 = add i32 %16755, %16756
  %16758 = sub i32 0, %16757
  %gen4437 = add i32 %16754, 30
  %16759 = add i32 %16745, 605730823
  %16760 = sub i32 %16759, 30
  %16761 = sub i32 %16760, 605730823
  %_4438 = sub i32 %16745, 30
  %gen4439 = mul i32 %16761, 30
  %16762 = sub i32 0, 30
  %16763 = add i32 %16745, %16762
  %sub1117alteredBB = sub nsw i32 %16745, 30
  %_4440 = shl i32 %16763, 31
  %16764 = add i32 0, -984524033
  %16765 = sub i32 %16764, %16763
  %16766 = sub i32 %16765, -984524033
  %_4441 = sub i32 0, %16763
  %16767 = sub i32 0, 31
  %16768 = sub i32 %16766, %16767
  %gen4442 = add i32 %16766, 31
  %16769 = sub i32 %16763, -2021377384
  %16770 = sub i32 %16769, 31
  %16771 = add i32 %16770, -2021377384
  %sub1118alteredBB = sub nsw i32 %16763, 31
  %16772 = load i32, i32* %f, align 4
  %16773 = add i32 %16771, -547207804
  %16774 = sub i32 %16773, %16772
  %16775 = sub i32 %16774, -547207804
  %_4443 = sub i32 %16771, %16772
  %gen4444 = mul i32 %16775, %16772
  %16776 = sub i32 0, 1768589945
  %16777 = sub i32 %16776, %16771
  %16778 = add i32 %16777, 1768589945
  %_4445 = sub i32 0, %16771
  %16779 = sub i32 0, %16772
  %16780 = sub i32 %16778, %16779
  %gen4446 = add i32 %16778, %16772
  %_4447 = shl i32 %16771, %16772
  %_4448 = shl i32 %16771, %16772
  %16781 = sub i32 0, %16771
  %16782 = add i32 0, %16781
  %_4449 = sub i32 0, %16771
  %16783 = add i32 %16782, -1349607055
  %16784 = add i32 %16783, %16772
  %16785 = sub i32 %16784, -1349607055
  %gen4450 = add i32 %16782, %16772
  %16786 = add i32 0, 1648823411
  %16787 = sub i32 %16786, %16771
  %16788 = sub i32 %16787, 1648823411
  %_4451 = sub i32 0, %16771
  %16789 = sub i32 0, %16772
  %16790 = sub i32 %16788, %16789
  %gen4452 = add i32 %16788, %16772
  %16791 = sub i32 %16771, -1116157929
  %16792 = sub i32 %16791, %16772
  %16793 = add i32 %16792, -1116157929
  %_4453 = sub i32 %16771, %16772
  %gen4454 = mul i32 %16793, %16772
  %_4455 = shl i32 %16771, %16772
  %16794 = sub i32 %16771, 1859106099
  %16795 = sub i32 %16794, %16772
  %16796 = add i32 %16795, 1859106099
  %_4456 = sub i32 %16771, %16772
  %gen4457 = mul i32 %16796, %16772
  %16797 = sub i32 0, %16772
  %16798 = add i32 %16771, %16797
  %_4458 = sub i32 %16771, %16772
  %gen4459 = mul i32 %16798, %16772
  %16799 = sub i32 0, %16772
  %16800 = sub i32 %16771, %16799
  %add1119alteredBB = add nsw i32 %16771, %16772
  %16801 = load i32, i32* %c, align 4
  %16802 = sub i32 0, 1822917438
  %16803 = sub i32 %16802, %16800
  %16804 = add i32 %16803, 1822917438
  %_4460 = sub i32 0, %16800
  %16805 = sub i32 0, %16804
  %16806 = sub i32 0, %16801
  %16807 = add i32 %16805, %16806
  %16808 = sub i32 0, %16807
  %gen4461 = add i32 %16804, %16801
  %_4462 = shl i32 %16800, %16801
  %16809 = sub i32 %16800, -128435372
  %16810 = sub i32 %16809, %16801
  %16811 = add i32 %16810, -128435372
  %_4463 = sub i32 %16800, %16801
  %gen4464 = mul i32 %16811, %16801
  %16812 = sub i32 %16800, 679570000
  %16813 = sub i32 %16812, %16801
  %16814 = add i32 %16813, 679570000
  %_4465 = sub i32 %16800, %16801
  %gen4466 = mul i32 %16814, %16801
  %16815 = add i32 %16800, -83025090
  %16816 = sub i32 %16815, %16801
  %16817 = sub i32 %16816, -83025090
  %_4467 = sub i32 %16800, %16801
  %gen4468 = mul i32 %16817, %16801
  %16818 = sub i32 0, -952943212
  %16819 = sub i32 %16818, %16800
  %16820 = add i32 %16819, -952943212
  %_4469 = sub i32 0, %16800
  %16821 = add i32 %16820, -1289899811
  %16822 = add i32 %16821, %16801
  %16823 = sub i32 %16822, -1289899811
  %gen4470 = add i32 %16820, %16801
  %16824 = add i32 0, -501405885
  %16825 = sub i32 %16824, %16800
  %16826 = sub i32 %16825, -501405885
  %_4471 = sub i32 0, %16800
  %16827 = sub i32 0, %16801
  %16828 = sub i32 %16826, %16827
  %gen4472 = add i32 %16826, %16801
  %16829 = sub i32 0, %16801
  %16830 = add i32 %16800, %16829
  %sub1120alteredBB = sub nsw i32 %16800, %16801
  store i32 %16830, i32* %s, align 4
  %16831 = load i32, i32* %s, align 4
  %call1121alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16831)
  store i32 -1979794549, i32* %switchVar
  br label %loopEnd

originalBB4476alteredBB:                          ; preds = %loopEntry
  %16832 = load i32, i32* %s, align 4
  %_4477 = shl i32 %16832, 30
  %_4478 = shl i32 %16832, 30
  %_4479 = shl i32 %16832, 30
  %16833 = add i32 0, -2037889993
  %16834 = sub i32 %16833, %16832
  %16835 = sub i32 %16834, -2037889993
  %_4480 = sub i32 0, %16832
  %16836 = add i32 %16835, -1730864709
  %16837 = add i32 %16836, 30
  %16838 = sub i32 %16837, -1730864709
  %gen4481 = add i32 %16835, 30
  %_4482 = shl i32 %16832, 30
  %16839 = add i32 %16832, -1089723962
  %16840 = sub i32 %16839, 30
  %16841 = sub i32 %16840, -1089723962
  %_4483 = sub i32 %16832, 30
  %gen4484 = mul i32 %16841, 30
  %16842 = sub i32 0, -1913416796
  %16843 = sub i32 %16842, %16832
  %16844 = add i32 %16843, -1913416796
  %_4485 = sub i32 0, %16832
  %16845 = sub i32 %16844, 34723720
  %16846 = add i32 %16845, 30
  %16847 = add i32 %16846, 34723720
  %gen4486 = add i32 %16844, 30
  %16848 = add i32 %16832, -637876570
  %16849 = sub i32 %16848, 30
  %16850 = sub i32 %16849, -637876570
  %_4487 = sub i32 %16832, 30
  %gen4488 = mul i32 %16850, 30
  %16851 = sub i32 0, 30
  %16852 = add i32 %16832, %16851
  %sub1125alteredBB = sub nsw i32 %16832, 30
  %16853 = load i32, i32* %f, align 4
  %16854 = sub i32 0, %16852
  %16855 = add i32 0, %16854
  %_4489 = sub i32 0, %16852
  %16856 = sub i32 %16855, -1893550976
  %16857 = add i32 %16856, %16853
  %16858 = add i32 %16857, -1893550976
  %gen4490 = add i32 %16855, %16853
  %16859 = sub i32 0, %16853
  %16860 = add i32 %16852, %16859
  %_4491 = sub i32 %16852, %16853
  %gen4492 = mul i32 %16860, %16853
  %16861 = sub i32 0, %16853
  %16862 = sub i32 %16852, %16861
  %add1126alteredBB = add nsw i32 %16852, %16853
  %16863 = load i32, i32* %c, align 4
  %16864 = add i32 0, 723331430
  %16865 = sub i32 %16864, %16862
  %16866 = sub i32 %16865, 723331430
  %_4493 = sub i32 0, %16862
  %16867 = sub i32 0, %16863
  %16868 = sub i32 %16866, %16867
  %gen4494 = add i32 %16866, %16863
  %16869 = add i32 0, -1209312758
  %16870 = sub i32 %16869, %16862
  %16871 = sub i32 %16870, -1209312758
  %_4495 = sub i32 0, %16862
  %16872 = add i32 %16871, 177132876
  %16873 = add i32 %16872, %16863
  %16874 = sub i32 %16873, 177132876
  %gen4496 = add i32 %16871, %16863
  %16875 = add i32 %16862, -973734392
  %16876 = sub i32 %16875, %16863
  %16877 = sub i32 %16876, -973734392
  %sub1127alteredBB = sub nsw i32 %16862, %16863
  store i32 %16877, i32* %s, align 4
  %16878 = load i32, i32* %s, align 4
  %call1128alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16878)
  store i32 -1447745402, i32* %switchVar
  br label %loopEnd

originalBB4500alteredBB:                          ; preds = %loopEntry
  store i32 2139689484, i32* %switchVar
  br label %loopEnd

originalBB4504alteredBB:                          ; preds = %loopEntry
  %16879 = load i32, i32* %e, align 4
  %cmp1162alteredBB = icmp eq i32 %16879, 2
  store i32 1427037174, i32* %switchVar
  br label %loopEnd

originalBB4508alteredBB:                          ; preds = %loopEntry
  %16880 = load i32, i32* %e, align 4
  %cmp1204alteredBB = icmp eq i32 %16880, 5
  store i32 -816128580, i32* %switchVar
  br label %loopEnd

originalBB4512alteredBB:                          ; preds = %loopEntry
  %16881 = load i32, i32* %e, align 4
  %cmp1227alteredBB = icmp eq i32 %16881, 7
  store i32 -1359728611, i32* %switchVar
  br label %loopEnd

originalBB4516alteredBB:                          ; preds = %loopEntry
  %16882 = load i32, i32* %s, align 4
  %_4517 = shl i32 %16882, 31
  %_4518 = shl i32 %16882, 31
  %16883 = add i32 0, -1562952409
  %16884 = sub i32 %16883, %16882
  %16885 = sub i32 %16884, -1562952409
  %_4519 = sub i32 0, %16882
  %16886 = sub i32 0, 31
  %16887 = sub i32 %16885, %16886
  %gen4520 = add i32 %16885, 31
  %16888 = sub i32 %16882, -971234051
  %16889 = sub i32 %16888, 31
  %16890 = add i32 %16889, -971234051
  %_4521 = sub i32 %16882, 31
  %gen4522 = mul i32 %16890, 31
  %16891 = add i32 %16882, -416682002
  %16892 = sub i32 %16891, 31
  %16893 = sub i32 %16892, -416682002
  %sub1239alteredBB = sub nsw i32 %16882, 31
  %16894 = sub i32 0, 30
  %16895 = add i32 %16893, %16894
  %_4523 = sub i32 %16893, 30
  %gen4524 = mul i32 %16895, 30
  %16896 = sub i32 0, %16893
  %16897 = add i32 0, %16896
  %_4525 = sub i32 0, %16893
  %16898 = sub i32 %16897, 1971444899
  %16899 = add i32 %16898, 30
  %16900 = add i32 %16899, 1971444899
  %gen4526 = add i32 %16897, 30
  %16901 = add i32 %16893, 2014811644
  %16902 = sub i32 %16901, 30
  %16903 = sub i32 %16902, 2014811644
  %sub1240alteredBB = sub nsw i32 %16893, 30
  %16904 = sub i32 0, %16903
  %16905 = add i32 0, %16904
  %_4527 = sub i32 0, %16903
  %16906 = sub i32 0, 31
  %16907 = sub i32 %16905, %16906
  %gen4528 = add i32 %16905, 31
  %16908 = sub i32 %16903, -718065251
  %16909 = sub i32 %16908, 31
  %16910 = add i32 %16909, -718065251
  %sub1241alteredBB = sub nsw i32 %16903, 31
  %16911 = load i32, i32* %f, align 4
  %_4529 = shl i32 %16910, %16911
  %16912 = add i32 %16910, -74864685
  %16913 = sub i32 %16912, %16911
  %16914 = sub i32 %16913, -74864685
  %_4530 = sub i32 %16910, %16911
  %gen4531 = mul i32 %16914, %16911
  %16915 = add i32 %16910, 121353142
  %16916 = sub i32 %16915, %16911
  %16917 = sub i32 %16916, 121353142
  %_4532 = sub i32 %16910, %16911
  %gen4533 = mul i32 %16917, %16911
  %16918 = add i32 %16910, -243646096
  %16919 = sub i32 %16918, %16911
  %16920 = sub i32 %16919, -243646096
  %_4534 = sub i32 %16910, %16911
  %gen4535 = mul i32 %16920, %16911
  %_4536 = shl i32 %16910, %16911
  %16921 = sub i32 0, %16911
  %16922 = sub i32 %16910, %16921
  %add1242alteredBB = add nsw i32 %16910, %16911
  %16923 = load i32, i32* %c, align 4
  %_4537 = shl i32 %16922, %16923
  %16924 = sub i32 %16922, -334670017
  %16925 = sub i32 %16924, %16923
  %16926 = add i32 %16925, -334670017
  %sub1243alteredBB = sub nsw i32 %16922, %16923
  store i32 %16926, i32* %s, align 4
  %16927 = load i32, i32* %s, align 4
  %call1244alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16927)
  store i32 -66059447, i32* %switchVar
  br label %loopEnd

originalBB4541alteredBB:                          ; preds = %loopEntry
  %16928 = load i32, i32* %s, align 4
  %_4542 = shl i32 %16928, 30
  %16929 = add i32 %16928, -706682152
  %16930 = add i32 %16929, 30
  %16931 = sub i32 %16930, -706682152
  %add1263alteredBB = add nsw i32 %16928, 30
  %16932 = load i32, i32* %f, align 4
  %_4543 = shl i32 %16931, %16932
  %_4544 = shl i32 %16931, %16932
  %_4545 = shl i32 %16931, %16932
  %16933 = sub i32 %16931, -260680378
  %16934 = sub i32 %16933, %16932
  %16935 = add i32 %16934, -260680378
  %_4546 = sub i32 %16931, %16932
  %gen4547 = mul i32 %16935, %16932
  %16936 = sub i32 0, 1999292391
  %16937 = sub i32 %16936, %16931
  %16938 = add i32 %16937, 1999292391
  %_4548 = sub i32 0, %16931
  %16939 = sub i32 0, %16932
  %16940 = sub i32 %16938, %16939
  %gen4549 = add i32 %16938, %16932
  %_4550 = shl i32 %16931, %16932
  %16941 = add i32 %16931, -136490500
  %16942 = add i32 %16941, %16932
  %16943 = sub i32 %16942, -136490500
  %add1264alteredBB = add nsw i32 %16931, %16932
  %16944 = load i32, i32* %c, align 4
  %16945 = sub i32 0, 2076520110
  %16946 = sub i32 %16945, %16943
  %16947 = add i32 %16946, 2076520110
  %_4551 = sub i32 0, %16943
  %16948 = sub i32 0, %16944
  %16949 = sub i32 %16947, %16948
  %gen4552 = add i32 %16947, %16944
  %16950 = sub i32 0, %16944
  %16951 = add i32 %16943, %16950
  %_4553 = sub i32 %16943, %16944
  %gen4554 = mul i32 %16951, %16944
  %16952 = sub i32 0, -1134421777
  %16953 = sub i32 %16952, %16943
  %16954 = add i32 %16953, -1134421777
  %_4555 = sub i32 0, %16943
  %16955 = sub i32 0, %16954
  %16956 = sub i32 0, %16944
  %16957 = add i32 %16955, %16956
  %16958 = sub i32 0, %16957
  %gen4556 = add i32 %16954, %16944
  %16959 = sub i32 0, -1327595609
  %16960 = sub i32 %16959, %16943
  %16961 = add i32 %16960, -1327595609
  %_4557 = sub i32 0, %16943
  %16962 = add i32 %16961, 834733413
  %16963 = add i32 %16962, %16944
  %16964 = sub i32 %16963, 834733413
  %gen4558 = add i32 %16961, %16944
  %16965 = sub i32 %16943, 1805390852
  %16966 = sub i32 %16965, %16944
  %16967 = add i32 %16966, 1805390852
  %sub1265alteredBB = sub nsw i32 %16943, %16944
  store i32 %16967, i32* %s, align 4
  %16968 = load i32, i32* %s, align 4
  %call1266alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %16968)
  store i32 708385301, i32* %switchVar
  br label %loopEnd

originalBB4562alteredBB:                          ; preds = %loopEntry
  %16969 = load i32, i32* %s, align 4
  %16970 = sub i32 0, 2021793791
  %16971 = sub i32 %16970, %16969
  %16972 = add i32 %16971, 2021793791
  %_4563 = sub i32 0, %16969
  %16973 = add i32 %16972, -1461781811
  %16974 = add i32 %16973, 30
  %16975 = sub i32 %16974, -1461781811
  %gen4564 = add i32 %16972, 30
  %16976 = add i32 %16969, 48440850
  %16977 = sub i32 %16976, 30
  %16978 = sub i32 %16977, 48440850
  %_4565 = sub i32 %16969, 30
  %gen4566 = mul i32 %16978, 30
  %_4567 = shl i32 %16969, 30
  %16979 = sub i32 0, 30
  %16980 = add i32 %16969, %16979
  %_4568 = sub i32 %16969, 30
  %gen4569 = mul i32 %16980, 30
  %16981 = sub i32 0, 30
  %16982 = add i32 %16969, %16981
  %_4570 = sub i32 %16969, 30
  %gen4571 = mul i32 %16982, 30
  %16983 = add i32 0, -670886258
  %16984 = sub i32 %16983, %16969
  %16985 = sub i32 %16984, -670886258
  %_4572 = sub i32 0, %16969
  %16986 = sub i32 0, 30
  %16987 = sub i32 %16985, %16986
  %gen4573 = add i32 %16985, 30
  %16988 = sub i32 0, 30
  %16989 = add i32 %16969, %16988
  %sub1319alteredBB = sub nsw i32 %16969, 30
  %16990 = sub i32 0, 31
  %16991 = add i32 %16989, %16990
  %_4574 = sub i32 %16989, 31
  %gen4575 = mul i32 %16991, 31
  %_4576 = shl i32 %16989, 31
  %16992 = add i32 0, -573777862
  %16993 = sub i32 %16992, %16989
  %16994 = sub i32 %16993, -573777862
  %_4577 = sub i32 0, %16989
  %16995 = sub i32 0, %16994
  %16996 = sub i32 0, 31
  %16997 = add i32 %16995, %16996
  %16998 = sub i32 0, %16997
  %gen4578 = add i32 %16994, 31
  %16999 = sub i32 0, %16989
  %17000 = add i32 0, %16999
  %_4579 = sub i32 0, %16989
  %17001 = sub i32 0, 31
  %17002 = sub i32 %17000, %17001
  %gen4580 = add i32 %17000, 31
  %17003 = sub i32 %16989, 482851055
  %17004 = sub i32 %17003, 31
  %17005 = add i32 %17004, 482851055
  %_4581 = sub i32 %16989, 31
  %gen4582 = mul i32 %17005, 31
  %17006 = sub i32 0, 31
  %17007 = add i32 %16989, %17006
  %sub1320alteredBB = sub nsw i32 %16989, 31
  %17008 = sub i32 %17007, 1073524069
  %17009 = sub i32 %17008, 30
  %17010 = add i32 %17009, 1073524069
  %sub1321alteredBB = sub nsw i32 %17007, 30
  %_4583 = shl i32 %17010, 31
  %17011 = sub i32 0, -1393022575
  %17012 = sub i32 %17011, %17010
  %17013 = add i32 %17012, -1393022575
  %_4584 = sub i32 0, %17010
  %17014 = add i32 %17013, -723726150
  %17015 = add i32 %17014, 31
  %17016 = sub i32 %17015, -723726150
  %gen4585 = add i32 %17013, 31
  %_4586 = shl i32 %17010, 31
  %17017 = sub i32 0, 1762127902
  %17018 = sub i32 %17017, %17010
  %17019 = add i32 %17018, 1762127902
  %_4587 = sub i32 0, %17010
  %17020 = sub i32 %17019, -1663112723
  %17021 = add i32 %17020, 31
  %17022 = add i32 %17021, -1663112723
  %gen4588 = add i32 %17019, 31
  %_4589 = shl i32 %17010, 31
  %17023 = add i32 %17010, -95686909
  %17024 = sub i32 %17023, 31
  %17025 = sub i32 %17024, -95686909
  %sub1322alteredBB = sub nsw i32 %17010, 31
  %17026 = add i32 %17025, -1664346571
  %17027 = sub i32 %17026, 31
  %17028 = sub i32 %17027, -1664346571
  %_4590 = sub i32 %17025, 31
  %gen4591 = mul i32 %17028, 31
  %_4592 = shl i32 %17025, 31
  %_4593 = shl i32 %17025, 31
  %17029 = add i32 0, -1311541664
  %17030 = sub i32 %17029, %17025
  %17031 = sub i32 %17030, -1311541664
  %_4594 = sub i32 0, %17025
  %17032 = sub i32 0, 31
  %17033 = sub i32 %17031, %17032
  %gen4595 = add i32 %17031, 31
  %_4596 = shl i32 %17025, 31
  %17034 = sub i32 %17025, 2020689051
  %17035 = sub i32 %17034, 31
  %17036 = add i32 %17035, 2020689051
  %sub1323alteredBB = sub nsw i32 %17025, 31
  %17037 = add i32 %17036, 1734225824
  %17038 = sub i32 %17037, 30
  %17039 = sub i32 %17038, 1734225824
  %_4597 = sub i32 %17036, 30
  %gen4598 = mul i32 %17039, 30
  %17040 = sub i32 %17036, -1297124959
  %17041 = sub i32 %17040, 30
  %17042 = add i32 %17041, -1297124959
  %_4599 = sub i32 %17036, 30
  %gen4600 = mul i32 %17042, 30
  %17043 = add i32 %17036, 1777703517
  %17044 = sub i32 %17043, 30
  %17045 = sub i32 %17044, 1777703517
  %sub1324alteredBB = sub nsw i32 %17036, 30
  %17046 = sub i32 0, %17045
  %17047 = add i32 0, %17046
  %_4601 = sub i32 0, %17045
  %17048 = sub i32 %17047, -176019689
  %17049 = add i32 %17048, 31
  %17050 = add i32 %17049, -176019689
  %gen4602 = add i32 %17047, 31
  %17051 = add i32 0, 2028514320
  %17052 = sub i32 %17051, %17045
  %17053 = sub i32 %17052, 2028514320
  %_4603 = sub i32 0, %17045
  %17054 = sub i32 0, 31
  %17055 = sub i32 %17053, %17054
  %gen4604 = add i32 %17053, 31
  %17056 = add i32 %17045, 1944655574
  %17057 = sub i32 %17056, 31
  %17058 = sub i32 %17057, 1944655574
  %sub1325alteredBB = sub nsw i32 %17045, 31
  %17059 = sub i32 0, 30
  %17060 = add i32 %17058, %17059
  %_4605 = sub i32 %17058, 30
  %gen4606 = mul i32 %17060, 30
  %17061 = sub i32 0, 30
  %17062 = add i32 %17058, %17061
  %_4607 = sub i32 %17058, 30
  %gen4608 = mul i32 %17062, 30
  %17063 = sub i32 0, 30
  %17064 = add i32 %17058, %17063
  %_4609 = sub i32 %17058, 30
  %gen4610 = mul i32 %17064, 30
  %17065 = sub i32 0, 30
  %17066 = add i32 %17058, %17065
  %_4611 = sub i32 %17058, 30
  %gen4612 = mul i32 %17066, 30
  %17067 = sub i32 %17058, -2005086441
  %17068 = sub i32 %17067, 30
  %17069 = add i32 %17068, -2005086441
  %_4613 = sub i32 %17058, 30
  %gen4614 = mul i32 %17069, 30
  %_4615 = shl i32 %17058, 30
  %17070 = add i32 %17058, 801595269
  %17071 = sub i32 %17070, 30
  %17072 = sub i32 %17071, 801595269
  %sub1326alteredBB = sub nsw i32 %17058, 30
  %17073 = load i32, i32* %f, align 4
  %_4616 = shl i32 %17072, %17073
  %17074 = sub i32 0, %17073
  %17075 = add i32 %17072, %17074
  %_4617 = sub i32 %17072, %17073
  %gen4618 = mul i32 %17075, %17073
  %17076 = add i32 %17072, 313908129
  %17077 = add i32 %17076, %17073
  %17078 = sub i32 %17077, 313908129
  %add1327alteredBB = add nsw i32 %17072, %17073
  %17079 = load i32, i32* %c, align 4
  %17080 = add i32 %17078, -1540120133
  %17081 = sub i32 %17080, %17079
  %17082 = sub i32 %17081, -1540120133
  %_4619 = sub i32 %17078, %17079
  %gen4620 = mul i32 %17082, %17079
  %17083 = add i32 %17078, -697954911
  %17084 = sub i32 %17083, %17079
  %17085 = sub i32 %17084, -697954911
  %sub1328alteredBB = sub nsw i32 %17078, %17079
  store i32 %17085, i32* %s, align 4
  %17086 = load i32, i32* %s, align 4
  %call1329alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17086)
  store i32 941546688, i32* %switchVar
  br label %loopEnd

originalBB4624alteredBB:                          ; preds = %loopEntry
  %17087 = load i32, i32* %e, align 4
  %cmp1331alteredBB = icmp eq i32 %17087, 5
  store i32 -474843946, i32* %switchVar
  br label %loopEnd

originalBB4628alteredBB:                          ; preds = %loopEntry
  %17088 = load i32, i32* %s, align 4
  %17089 = sub i32 0, -918843597
  %17090 = sub i32 %17089, %17088
  %17091 = add i32 %17090, -918843597
  %_4629 = sub i32 0, %17088
  %17092 = sub i32 0, 30
  %17093 = sub i32 %17091, %17092
  %gen4630 = add i32 %17091, 30
  %17094 = add i32 %17088, 978438841
  %17095 = sub i32 %17094, 30
  %17096 = sub i32 %17095, 978438841
  %_4631 = sub i32 %17088, 30
  %gen4632 = mul i32 %17096, 30
  %17097 = sub i32 %17088, -1431697045
  %17098 = sub i32 %17097, 30
  %17099 = add i32 %17098, -1431697045
  %sub1333alteredBB = sub nsw i32 %17088, 30
  %17100 = add i32 0, 613828673
  %17101 = sub i32 %17100, %17099
  %17102 = sub i32 %17101, 613828673
  %_4633 = sub i32 0, %17099
  %17103 = add i32 %17102, 1949108194
  %17104 = add i32 %17103, 31
  %17105 = sub i32 %17104, 1949108194
  %gen4634 = add i32 %17102, 31
  %_4635 = shl i32 %17099, 31
  %_4636 = shl i32 %17099, 31
  %_4637 = shl i32 %17099, 31
  %17106 = sub i32 0, 31
  %17107 = add i32 %17099, %17106
  %sub1334alteredBB = sub nsw i32 %17099, 31
  %17108 = sub i32 0, %17107
  %17109 = add i32 0, %17108
  %_4638 = sub i32 0, %17107
  %17110 = add i32 %17109, 742162295
  %17111 = add i32 %17110, 30
  %17112 = sub i32 %17111, 742162295
  %gen4639 = add i32 %17109, 30
  %17113 = sub i32 %17107, 13378745
  %17114 = sub i32 %17113, 30
  %17115 = add i32 %17114, 13378745
  %_4640 = sub i32 %17107, 30
  %gen4641 = mul i32 %17115, 30
  %17116 = sub i32 0, %17107
  %17117 = add i32 0, %17116
  %_4642 = sub i32 0, %17107
  %17118 = sub i32 0, 30
  %17119 = sub i32 %17117, %17118
  %gen4643 = add i32 %17117, 30
  %17120 = sub i32 %17107, 1411206870
  %17121 = sub i32 %17120, 30
  %17122 = add i32 %17121, 1411206870
  %_4644 = sub i32 %17107, 30
  %gen4645 = mul i32 %17122, 30
  %17123 = sub i32 %17107, 1730168304
  %17124 = sub i32 %17123, 30
  %17125 = add i32 %17124, 1730168304
  %sub1335alteredBB = sub nsw i32 %17107, 30
  %17126 = add i32 %17125, -1970078110
  %17127 = sub i32 %17126, 31
  %17128 = sub i32 %17127, -1970078110
  %_4646 = sub i32 %17125, 31
  %gen4647 = mul i32 %17128, 31
  %_4648 = shl i32 %17125, 31
  %17129 = add i32 %17125, -1265429060
  %17130 = sub i32 %17129, 31
  %17131 = sub i32 %17130, -1265429060
  %_4649 = sub i32 %17125, 31
  %gen4650 = mul i32 %17131, 31
  %17132 = sub i32 0, 31
  %17133 = add i32 %17125, %17132
  %sub1336alteredBB = sub nsw i32 %17125, 31
  %_4651 = shl i32 %17133, 31
  %_4652 = shl i32 %17133, 31
  %17134 = sub i32 0, %17133
  %17135 = add i32 0, %17134
  %_4653 = sub i32 0, %17133
  %17136 = sub i32 %17135, -1884745914
  %17137 = add i32 %17136, 31
  %17138 = add i32 %17137, -1884745914
  %gen4654 = add i32 %17135, 31
  %_4655 = shl i32 %17133, 31
  %17139 = sub i32 0, 31
  %17140 = add i32 %17133, %17139
  %sub1337alteredBB = sub nsw i32 %17133, 31
  %17141 = sub i32 0, 30
  %17142 = add i32 %17140, %17141
  %_4656 = sub i32 %17140, 30
  %gen4657 = mul i32 %17142, 30
  %17143 = add i32 0, -1623281630
  %17144 = sub i32 %17143, %17140
  %17145 = sub i32 %17144, -1623281630
  %_4658 = sub i32 0, %17140
  %17146 = add i32 %17145, -820871295
  %17147 = add i32 %17146, 30
  %17148 = sub i32 %17147, -820871295
  %gen4659 = add i32 %17145, 30
  %_4660 = shl i32 %17140, 30
  %17149 = add i32 %17140, -547047813
  %17150 = sub i32 %17149, 30
  %17151 = sub i32 %17150, -547047813
  %sub1338alteredBB = sub nsw i32 %17140, 30
  %17152 = add i32 0, -1404085584
  %17153 = sub i32 %17152, %17151
  %17154 = sub i32 %17153, -1404085584
  %_4661 = sub i32 0, %17151
  %17155 = add i32 %17154, 2024522634
  %17156 = add i32 %17155, 31
  %17157 = sub i32 %17156, 2024522634
  %gen4662 = add i32 %17154, 31
  %17158 = add i32 0, 1706602631
  %17159 = sub i32 %17158, %17151
  %17160 = sub i32 %17159, 1706602631
  %_4663 = sub i32 0, %17151
  %17161 = sub i32 0, 31
  %17162 = sub i32 %17160, %17161
  %gen4664 = add i32 %17160, 31
  %17163 = sub i32 %17151, -1014345547
  %17164 = sub i32 %17163, 31
  %17165 = add i32 %17164, -1014345547
  %_4665 = sub i32 %17151, 31
  %gen4666 = mul i32 %17165, 31
  %17166 = add i32 0, 360827974
  %17167 = sub i32 %17166, %17151
  %17168 = sub i32 %17167, 360827974
  %_4667 = sub i32 0, %17151
  %17169 = sub i32 0, %17168
  %17170 = sub i32 0, 31
  %17171 = add i32 %17169, %17170
  %17172 = sub i32 0, %17171
  %gen4668 = add i32 %17168, 31
  %17173 = sub i32 0, 31
  %17174 = add i32 %17151, %17173
  %_4669 = sub i32 %17151, 31
  %gen4670 = mul i32 %17174, 31
  %17175 = sub i32 %17151, 530063418
  %17176 = sub i32 %17175, 31
  %17177 = add i32 %17176, 530063418
  %_4671 = sub i32 %17151, 31
  %gen4672 = mul i32 %17177, 31
  %17178 = add i32 %17151, -1403670122
  %17179 = sub i32 %17178, 31
  %17180 = sub i32 %17179, -1403670122
  %sub1339alteredBB = sub nsw i32 %17151, 31
  %17181 = load i32, i32* %f, align 4
  %17182 = sub i32 %17180, -798715512
  %17183 = sub i32 %17182, %17181
  %17184 = add i32 %17183, -798715512
  %_4673 = sub i32 %17180, %17181
  %gen4674 = mul i32 %17184, %17181
  %_4675 = shl i32 %17180, %17181
  %17185 = sub i32 %17180, -2110651780
  %17186 = add i32 %17185, %17181
  %17187 = add i32 %17186, -2110651780
  %add1340alteredBB = add nsw i32 %17180, %17181
  %17188 = load i32, i32* %c, align 4
  %_4676 = shl i32 %17187, %17188
  %17189 = sub i32 %17187, 988371200
  %17190 = sub i32 %17189, %17188
  %17191 = add i32 %17190, 988371200
  %sub1341alteredBB = sub nsw i32 %17187, %17188
  store i32 %17191, i32* %s, align 4
  %17192 = load i32, i32* %s, align 4
  %call1342alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17192)
  store i32 1374359433, i32* %switchVar
  br label %loopEnd

originalBB4680alteredBB:                          ; preds = %loopEntry
  %17193 = load i32, i32* %e, align 4
  %cmp1367alteredBB = icmp eq i32 %17193, 8
  store i32 1987914497, i32* %switchVar
  br label %loopEnd

originalBB4684alteredBB:                          ; preds = %loopEntry
  %17194 = load i32, i32* %s, align 4
  %_4685 = shl i32 %17194, 30
  %_4686 = shl i32 %17194, 30
  %17195 = add i32 %17194, 759341172
  %17196 = sub i32 %17195, 30
  %17197 = sub i32 %17196, 759341172
  %_4687 = sub i32 %17194, 30
  %gen4688 = mul i32 %17197, 30
  %17198 = sub i32 0, 30
  %17199 = add i32 %17194, %17198
  %sub1379alteredBB = sub nsw i32 %17194, 30
  %_4689 = shl i32 %17199, 31
  %17200 = sub i32 %17199, 967135530
  %17201 = sub i32 %17200, 31
  %17202 = add i32 %17201, 967135530
  %_4690 = sub i32 %17199, 31
  %gen4691 = mul i32 %17202, 31
  %17203 = add i32 0, -495219985
  %17204 = sub i32 %17203, %17199
  %17205 = sub i32 %17204, -495219985
  %_4692 = sub i32 0, %17199
  %17206 = sub i32 %17205, 1802056516
  %17207 = add i32 %17206, 31
  %17208 = add i32 %17207, 1802056516
  %gen4693 = add i32 %17205, 31
  %17209 = sub i32 0, %17199
  %17210 = add i32 0, %17209
  %_4694 = sub i32 0, %17199
  %17211 = sub i32 0, 31
  %17212 = sub i32 %17210, %17211
  %gen4695 = add i32 %17210, 31
  %17213 = add i32 %17199, -915823510
  %17214 = sub i32 %17213, 31
  %17215 = sub i32 %17214, -915823510
  %sub1380alteredBB = sub nsw i32 %17199, 31
  %_4696 = shl i32 %17215, 30
  %17216 = sub i32 0, 30
  %17217 = add i32 %17215, %17216
  %_4697 = sub i32 %17215, 30
  %gen4698 = mul i32 %17217, 30
  %_4699 = shl i32 %17215, 30
  %17218 = add i32 %17215, 999281058
  %17219 = sub i32 %17218, 30
  %17220 = sub i32 %17219, 999281058
  %sub1381alteredBB = sub nsw i32 %17215, 30
  %17221 = load i32, i32* %f, align 4
  %17222 = sub i32 0, %17221
  %17223 = sub i32 %17220, %17222
  %add1382alteredBB = add nsw i32 %17220, %17221
  %17224 = load i32, i32* %c, align 4
  %17225 = sub i32 %17223, 2062456980
  %17226 = sub i32 %17225, %17224
  %17227 = add i32 %17226, 2062456980
  %_4700 = sub i32 %17223, %17224
  %gen4701 = mul i32 %17227, %17224
  %17228 = add i32 %17223, 53788829
  %17229 = sub i32 %17228, %17224
  %17230 = sub i32 %17229, 53788829
  %_4702 = sub i32 %17223, %17224
  %gen4703 = mul i32 %17230, %17224
  %_4704 = shl i32 %17223, %17224
  %_4705 = shl i32 %17223, %17224
  %17231 = sub i32 %17223, 841370316
  %17232 = sub i32 %17231, %17224
  %17233 = add i32 %17232, 841370316
  %_4706 = sub i32 %17223, %17224
  %gen4707 = mul i32 %17233, %17224
  %_4708 = shl i32 %17223, %17224
  %17234 = sub i32 0, %17224
  %17235 = add i32 %17223, %17234
  %sub1383alteredBB = sub nsw i32 %17223, %17224
  store i32 %17235, i32* %s, align 4
  %17236 = load i32, i32* %s, align 4
  %call1384alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17236)
  store i32 385575181, i32* %switchVar
  br label %loopEnd

originalBB4712alteredBB:                          ; preds = %loopEntry
  %17237 = load i32, i32* %e, align 4
  %cmp1394alteredBB = icmp eq i32 %17237, 11
  store i32 -636514357, i32* %switchVar
  br label %loopEnd

originalBB4716alteredBB:                          ; preds = %loopEntry
  store i32 1394101347, i32* %switchVar
  br label %loopEnd

originalBB4720alteredBB:                          ; preds = %loopEntry
  %17238 = load i32, i32* %b, align 4
  %17239 = load i32, i32* %e, align 4
  %cmp1403alteredBB = icmp eq i32 %17238, %17239
  store i32 819842834, i32* %switchVar
  br label %loopEnd

originalBB4724alteredBB:                          ; preds = %loopEntry
  %17240 = load i32, i32* %s, align 4
  %17241 = load i32, i32* %f, align 4
  %17242 = sub i32 0, %17240
  %17243 = add i32 0, %17242
  %_4725 = sub i32 0, %17240
  %17244 = sub i32 0, %17241
  %17245 = sub i32 %17243, %17244
  %gen4726 = add i32 %17243, %17241
  %17246 = sub i32 0, %17240
  %17247 = add i32 0, %17246
  %_4727 = sub i32 0, %17240
  %17248 = sub i32 0, %17247
  %17249 = sub i32 0, %17241
  %17250 = add i32 %17248, %17249
  %17251 = sub i32 0, %17250
  %gen4728 = add i32 %17247, %17241
  %17252 = sub i32 0, %17240
  %17253 = sub i32 0, %17241
  %17254 = add i32 %17252, %17253
  %17255 = sub i32 0, %17254
  %add1405alteredBB = add nsw i32 %17240, %17241
  %17256 = load i32, i32* %c, align 4
  %17257 = sub i32 0, %17256
  %17258 = add i32 %17255, %17257
  %sub1406alteredBB = sub nsw i32 %17255, %17256
  store i32 %17258, i32* %s, align 4
  %17259 = load i32, i32* %s, align 4
  %call1407alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17259)
  store i32 1763763121, i32* %switchVar
  br label %loopEnd

originalBB4732alteredBB:                          ; preds = %loopEntry
  %17260 = load i32, i32* %b, align 4
  store i32 -1766639698, i32* %switchVar
  br label %loopEnd

originalBB4736alteredBB:                          ; preds = %loopEntry
  %17261 = load i32, i32* %e, align 4
  %cmp1410alteredBB = icmp eq i32 %17261, 2
  store i32 -944567892, i32* %switchVar
  br label %loopEnd

originalBB4740alteredBB:                          ; preds = %loopEntry
  %17262 = load i32, i32* %e, align 4
  %cmp1425alteredBB = icmp eq i32 %17262, 4
  store i32 -1007036407, i32* %switchVar
  br label %loopEnd

originalBB4744alteredBB:                          ; preds = %loopEntry
  %17263 = load i32, i32* %e, align 4
  %cmp1434alteredBB = icmp eq i32 %17263, 5
  store i32 -305474100, i32* %switchVar
  br label %loopEnd

originalBB4748alteredBB:                          ; preds = %loopEntry
  %17264 = load i32, i32* %s, align 4
  %_4749 = shl i32 %17264, 31
  %17265 = add i32 %17264, 855905199
  %17266 = sub i32 %17265, 31
  %17267 = sub i32 %17266, 855905199
  %_4750 = sub i32 %17264, 31
  %gen4751 = mul i32 %17267, 31
  %17268 = sub i32 %17264, 1254307200
  %17269 = add i32 %17268, 31
  %17270 = add i32 %17269, 1254307200
  %add1436alteredBB = add nsw i32 %17264, 31
  %_4752 = shl i32 %17270, 28
  %17271 = sub i32 0, %17270
  %17272 = add i32 0, %17271
  %_4753 = sub i32 0, %17270
  %17273 = sub i32 %17272, 1139770429
  %17274 = add i32 %17273, 28
  %17275 = add i32 %17274, 1139770429
  %gen4754 = add i32 %17272, 28
  %17276 = add i32 0, -878396259
  %17277 = sub i32 %17276, %17270
  %17278 = sub i32 %17277, -878396259
  %_4755 = sub i32 0, %17270
  %17279 = sub i32 0, 28
  %17280 = sub i32 %17278, %17279
  %gen4756 = add i32 %17278, 28
  %17281 = sub i32 0, %17270
  %17282 = add i32 0, %17281
  %_4757 = sub i32 0, %17270
  %17283 = sub i32 0, 28
  %17284 = sub i32 %17282, %17283
  %gen4758 = add i32 %17282, 28
  %17285 = add i32 %17270, 1537774980
  %17286 = sub i32 %17285, 28
  %17287 = sub i32 %17286, 1537774980
  %_4759 = sub i32 %17270, 28
  %gen4760 = mul i32 %17287, 28
  %_4761 = shl i32 %17270, 28
  %17288 = sub i32 0, %17270
  %17289 = sub i32 0, 28
  %17290 = add i32 %17288, %17289
  %17291 = sub i32 0, %17290
  %add1437alteredBB = add nsw i32 %17270, 28
  %17292 = add i32 %17291, -1416138547
  %17293 = sub i32 %17292, 31
  %17294 = sub i32 %17293, -1416138547
  %_4762 = sub i32 %17291, 31
  %gen4763 = mul i32 %17294, 31
  %17295 = sub i32 %17291, 155496186
  %17296 = add i32 %17295, 31
  %17297 = add i32 %17296, 155496186
  %add1438alteredBB = add nsw i32 %17291, 31
  %17298 = sub i32 0, 30
  %17299 = add i32 %17297, %17298
  %_4764 = sub i32 %17297, 30
  %gen4765 = mul i32 %17299, 30
  %17300 = sub i32 0, 30
  %17301 = add i32 %17297, %17300
  %_4766 = sub i32 %17297, 30
  %gen4767 = mul i32 %17301, 30
  %17302 = sub i32 0, 30
  %17303 = add i32 %17297, %17302
  %_4768 = sub i32 %17297, 30
  %gen4769 = mul i32 %17303, 30
  %17304 = sub i32 %17297, 1272737121
  %17305 = add i32 %17304, 30
  %17306 = add i32 %17305, 1272737121
  %add1439alteredBB = add nsw i32 %17297, 30
  %17307 = load i32, i32* %f, align 4
  %_4770 = shl i32 %17306, %17307
  %17308 = sub i32 0, 1705070945
  %17309 = sub i32 %17308, %17306
  %17310 = add i32 %17309, 1705070945
  %_4771 = sub i32 0, %17306
  %17311 = sub i32 %17310, -483679484
  %17312 = add i32 %17311, %17307
  %17313 = add i32 %17312, -483679484
  %gen4772 = add i32 %17310, %17307
  %17314 = add i32 %17306, 625687180
  %17315 = sub i32 %17314, %17307
  %17316 = sub i32 %17315, 625687180
  %_4773 = sub i32 %17306, %17307
  %gen4774 = mul i32 %17316, %17307
  %_4775 = shl i32 %17306, %17307
  %17317 = sub i32 0, %17306
  %17318 = add i32 0, %17317
  %_4776 = sub i32 0, %17306
  %17319 = sub i32 0, %17318
  %17320 = sub i32 0, %17307
  %17321 = add i32 %17319, %17320
  %17322 = sub i32 0, %17321
  %gen4777 = add i32 %17318, %17307
  %_4778 = shl i32 %17306, %17307
  %17323 = sub i32 %17306, 857731836
  %17324 = sub i32 %17323, %17307
  %17325 = add i32 %17324, 857731836
  %_4779 = sub i32 %17306, %17307
  %gen4780 = mul i32 %17325, %17307
  %17326 = sub i32 %17306, 729042834
  %17327 = add i32 %17326, %17307
  %17328 = add i32 %17327, 729042834
  %add1440alteredBB = add nsw i32 %17306, %17307
  %17329 = load i32, i32* %c, align 4
  %17330 = sub i32 0, -1582271646
  %17331 = sub i32 %17330, %17328
  %17332 = add i32 %17331, -1582271646
  %_4781 = sub i32 0, %17328
  %17333 = add i32 %17332, 1687967938
  %17334 = add i32 %17333, %17329
  %17335 = sub i32 %17334, 1687967938
  %gen4782 = add i32 %17332, %17329
  %17336 = sub i32 0, %17329
  %17337 = add i32 %17328, %17336
  %_4783 = sub i32 %17328, %17329
  %gen4784 = mul i32 %17337, %17329
  %_4785 = shl i32 %17328, %17329
  %17338 = sub i32 0, %17328
  %17339 = add i32 0, %17338
  %_4786 = sub i32 0, %17328
  %17340 = add i32 %17339, 963192107
  %17341 = add i32 %17340, %17329
  %17342 = sub i32 %17341, 963192107
  %gen4787 = add i32 %17339, %17329
  %17343 = add i32 0, -855596653
  %17344 = sub i32 %17343, %17328
  %17345 = sub i32 %17344, -855596653
  %_4788 = sub i32 0, %17328
  %17346 = add i32 %17345, 1742026616
  %17347 = add i32 %17346, %17329
  %17348 = sub i32 %17347, 1742026616
  %gen4789 = add i32 %17345, %17329
  %17349 = add i32 %17328, -313756343
  %17350 = sub i32 %17349, %17329
  %17351 = sub i32 %17350, -313756343
  %_4790 = sub i32 %17328, %17329
  %gen4791 = mul i32 %17351, %17329
  %17352 = sub i32 0, -1752278536
  %17353 = sub i32 %17352, %17328
  %17354 = add i32 %17353, -1752278536
  %_4792 = sub i32 0, %17328
  %17355 = sub i32 0, %17354
  %17356 = sub i32 0, %17329
  %17357 = add i32 %17355, %17356
  %17358 = sub i32 0, %17357
  %gen4793 = add i32 %17354, %17329
  %17359 = add i32 %17328, -1059974507
  %17360 = sub i32 %17359, %17329
  %17361 = sub i32 %17360, -1059974507
  %_4794 = sub i32 %17328, %17329
  %gen4795 = mul i32 %17361, %17329
  %17362 = sub i32 0, %17329
  %17363 = add i32 %17328, %17362
  %sub1441alteredBB = sub nsw i32 %17328, %17329
  store i32 %17363, i32* %s, align 4
  %17364 = load i32, i32* %s, align 4
  %call1442alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17364)
  store i32 -1428856379, i32* %switchVar
  br label %loopEnd

originalBB4799alteredBB:                          ; preds = %loopEntry
  %17365 = load i32, i32* %s, align 4
  %17366 = sub i32 0, %17365
  %17367 = add i32 0, %17366
  %_4800 = sub i32 0, %17365
  %17368 = sub i32 %17367, 1102461379
  %17369 = add i32 %17368, 31
  %17370 = add i32 %17369, 1102461379
  %gen4801 = add i32 %17367, 31
  %17371 = sub i32 0, 31
  %17372 = add i32 %17365, %17371
  %_4802 = sub i32 %17365, 31
  %gen4803 = mul i32 %17372, 31
  %17373 = sub i32 0, 31
  %17374 = sub i32 %17365, %17373
  %add1457alteredBB = add nsw i32 %17365, 31
  %17375 = sub i32 0, %17374
  %17376 = add i32 0, %17375
  %_4804 = sub i32 0, %17374
  %17377 = sub i32 %17376, 1559261126
  %17378 = add i32 %17377, 28
  %17379 = add i32 %17378, 1559261126
  %gen4805 = add i32 %17376, 28
  %_4806 = shl i32 %17374, 28
  %_4807 = shl i32 %17374, 28
  %17380 = add i32 0, -572437887
  %17381 = sub i32 %17380, %17374
  %17382 = sub i32 %17381, -572437887
  %_4808 = sub i32 0, %17374
  %17383 = add i32 %17382, 75274341
  %17384 = add i32 %17383, 28
  %17385 = sub i32 %17384, 75274341
  %gen4809 = add i32 %17382, 28
  %17386 = sub i32 %17374, 138360352
  %17387 = add i32 %17386, 28
  %17388 = add i32 %17387, 138360352
  %add1458alteredBB = add nsw i32 %17374, 28
  %17389 = add i32 %17388, -1158619833
  %17390 = sub i32 %17389, 31
  %17391 = sub i32 %17390, -1158619833
  %_4810 = sub i32 %17388, 31
  %gen4811 = mul i32 %17391, 31
  %_4812 = shl i32 %17388, 31
  %17392 = sub i32 0, %17388
  %17393 = sub i32 0, 31
  %17394 = add i32 %17392, %17393
  %17395 = sub i32 0, %17394
  %add1459alteredBB = add nsw i32 %17388, 31
  %17396 = add i32 %17395, 2114758951
  %17397 = sub i32 %17396, 30
  %17398 = sub i32 %17397, 2114758951
  %_4813 = sub i32 %17395, 30
  %gen4814 = mul i32 %17398, 30
  %_4815 = shl i32 %17395, 30
  %17399 = sub i32 %17395, -1179590506
  %17400 = add i32 %17399, 30
  %17401 = add i32 %17400, -1179590506
  %add1460alteredBB = add nsw i32 %17395, 30
  %_4816 = shl i32 %17401, 31
  %17402 = sub i32 0, 31
  %17403 = add i32 %17401, %17402
  %_4817 = sub i32 %17401, 31
  %gen4818 = mul i32 %17403, 31
  %17404 = sub i32 0, 1449194315
  %17405 = sub i32 %17404, %17401
  %17406 = add i32 %17405, 1449194315
  %_4819 = sub i32 0, %17401
  %17407 = add i32 %17406, 102380198
  %17408 = add i32 %17407, 31
  %17409 = sub i32 %17408, 102380198
  %gen4820 = add i32 %17406, 31
  %_4821 = shl i32 %17401, 31
  %17410 = sub i32 0, %17401
  %17411 = add i32 0, %17410
  %_4822 = sub i32 0, %17401
  %17412 = sub i32 0, %17411
  %17413 = sub i32 0, 31
  %17414 = add i32 %17412, %17413
  %17415 = sub i32 0, %17414
  %gen4823 = add i32 %17411, 31
  %17416 = sub i32 0, -1976389967
  %17417 = sub i32 %17416, %17401
  %17418 = add i32 %17417, -1976389967
  %_4824 = sub i32 0, %17401
  %17419 = sub i32 %17418, 746211960
  %17420 = add i32 %17419, 31
  %17421 = add i32 %17420, 746211960
  %gen4825 = add i32 %17418, 31
  %17422 = sub i32 %17401, -771584273
  %17423 = add i32 %17422, 31
  %17424 = add i32 %17423, -771584273
  %add1461alteredBB = add nsw i32 %17401, 31
  %17425 = sub i32 0, 30
  %17426 = add i32 %17424, %17425
  %_4826 = sub i32 %17424, 30
  %gen4827 = mul i32 %17426, 30
  %17427 = add i32 0, 624702596
  %17428 = sub i32 %17427, %17424
  %17429 = sub i32 %17428, 624702596
  %_4828 = sub i32 0, %17424
  %17430 = add i32 %17429, 145231663
  %17431 = add i32 %17430, 30
  %17432 = sub i32 %17431, 145231663
  %gen4829 = add i32 %17429, 30
  %_4830 = shl i32 %17424, 30
  %17433 = sub i32 0, %17424
  %17434 = sub i32 0, 30
  %17435 = add i32 %17433, %17434
  %17436 = sub i32 0, %17435
  %add1462alteredBB = add nsw i32 %17424, 30
  %17437 = load i32, i32* %f, align 4
  %17438 = sub i32 0, %17437
  %17439 = add i32 %17436, %17438
  %_4831 = sub i32 %17436, %17437
  %gen4832 = mul i32 %17439, %17437
  %_4833 = shl i32 %17436, %17437
  %17440 = sub i32 0, %17436
  %17441 = sub i32 0, %17437
  %17442 = add i32 %17440, %17441
  %17443 = sub i32 0, %17442
  %add1463alteredBB = add nsw i32 %17436, %17437
  %17444 = load i32, i32* %c, align 4
  %17445 = add i32 %17443, -1616854858
  %17446 = sub i32 %17445, %17444
  %17447 = sub i32 %17446, -1616854858
  %_4834 = sub i32 %17443, %17444
  %gen4835 = mul i32 %17447, %17444
  %_4836 = shl i32 %17443, %17444
  %17448 = sub i32 %17443, 24281102
  %17449 = sub i32 %17448, %17444
  %17450 = add i32 %17449, 24281102
  %sub1464alteredBB = sub nsw i32 %17443, %17444
  store i32 %17450, i32* %s, align 4
  %17451 = load i32, i32* %s, align 4
  %call1465alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17451)
  store i32 1435978151, i32* %switchVar
  br label %loopEnd

originalBB4840alteredBB:                          ; preds = %loopEntry
  %17452 = load i32, i32* %e, align 4
  %cmp1480alteredBB = icmp eq i32 %17452, 9
  store i32 854729756, i32* %switchVar
  br label %loopEnd

originalBB4844alteredBB:                          ; preds = %loopEntry
  %17453 = load i32, i32* %e, align 4
  %cmp1494alteredBB = icmp eq i32 %17453, 10
  store i32 10232142, i32* %switchVar
  br label %loopEnd

originalBB4848alteredBB:                          ; preds = %loopEntry
  %17454 = load i32, i32* %s, align 4
  %17455 = sub i32 0, -1753940462
  %17456 = sub i32 %17455, %17454
  %17457 = add i32 %17456, -1753940462
  %_4849 = sub i32 0, %17454
  %17458 = sub i32 0, %17457
  %17459 = sub i32 0, 31
  %17460 = add i32 %17458, %17459
  %17461 = sub i32 0, %17460
  %gen4850 = add i32 %17457, 31
  %17462 = sub i32 0, -1008748575
  %17463 = sub i32 %17462, %17454
  %17464 = add i32 %17463, -1008748575
  %_4851 = sub i32 0, %17454
  %17465 = add i32 %17464, 1331335727
  %17466 = add i32 %17465, 31
  %17467 = sub i32 %17466, 1331335727
  %gen4852 = add i32 %17464, 31
  %17468 = sub i32 0, 31
  %17469 = add i32 %17454, %17468
  %_4853 = sub i32 %17454, 31
  %gen4854 = mul i32 %17469, 31
  %17470 = sub i32 0, 31
  %17471 = add i32 %17454, %17470
  %_4855 = sub i32 %17454, 31
  %gen4856 = mul i32 %17471, 31
  %17472 = sub i32 0, 31
  %17473 = add i32 %17454, %17472
  %_4857 = sub i32 %17454, 31
  %gen4858 = mul i32 %17473, 31
  %17474 = sub i32 0, %17454
  %17475 = add i32 0, %17474
  %_4859 = sub i32 0, %17454
  %17476 = sub i32 0, 31
  %17477 = sub i32 %17475, %17476
  %gen4860 = add i32 %17475, 31
  %17478 = sub i32 0, 31
  %17479 = sub i32 %17454, %17478
  %add1496alteredBB = add nsw i32 %17454, 31
  %_4861 = shl i32 %17479, 28
  %_4862 = shl i32 %17479, 28
  %17480 = sub i32 0, %17479
  %17481 = sub i32 0, 28
  %17482 = add i32 %17480, %17481
  %17483 = sub i32 0, %17482
  %add1497alteredBB = add nsw i32 %17479, 28
  %17484 = sub i32 %17483, -217051247
  %17485 = sub i32 %17484, 31
  %17486 = add i32 %17485, -217051247
  %_4863 = sub i32 %17483, 31
  %gen4864 = mul i32 %17486, 31
  %17487 = add i32 %17483, 1266166387
  %17488 = sub i32 %17487, 31
  %17489 = sub i32 %17488, 1266166387
  %_4865 = sub i32 %17483, 31
  %gen4866 = mul i32 %17489, 31
  %_4867 = shl i32 %17483, 31
  %17490 = add i32 %17483, -1611775543
  %17491 = sub i32 %17490, 31
  %17492 = sub i32 %17491, -1611775543
  %_4868 = sub i32 %17483, 31
  %gen4869 = mul i32 %17492, 31
  %_4870 = shl i32 %17483, 31
  %_4871 = shl i32 %17483, 31
  %17493 = sub i32 %17483, 1875899921
  %17494 = add i32 %17493, 31
  %17495 = add i32 %17494, 1875899921
  %add1498alteredBB = add nsw i32 %17483, 31
  %17496 = sub i32 0, 1904845212
  %17497 = sub i32 %17496, %17495
  %17498 = add i32 %17497, 1904845212
  %_4872 = sub i32 0, %17495
  %17499 = sub i32 0, 30
  %17500 = sub i32 %17498, %17499
  %gen4873 = add i32 %17498, 30
  %17501 = sub i32 0, %17495
  %17502 = sub i32 0, 30
  %17503 = add i32 %17501, %17502
  %17504 = sub i32 0, %17503
  %add1499alteredBB = add nsw i32 %17495, 30
  %_4874 = shl i32 %17504, 31
  %17505 = add i32 %17504, -220821426
  %17506 = sub i32 %17505, 31
  %17507 = sub i32 %17506, -220821426
  %_4875 = sub i32 %17504, 31
  %gen4876 = mul i32 %17507, 31
  %_4877 = shl i32 %17504, 31
  %17508 = add i32 %17504, -1305057969
  %17509 = add i32 %17508, 31
  %17510 = sub i32 %17509, -1305057969
  %add1500alteredBB = add nsw i32 %17504, 31
  %17511 = sub i32 0, -209176689
  %17512 = sub i32 %17511, %17510
  %17513 = add i32 %17512, -209176689
  %_4878 = sub i32 0, %17510
  %17514 = sub i32 %17513, -1513378777
  %17515 = add i32 %17514, 30
  %17516 = add i32 %17515, -1513378777
  %gen4879 = add i32 %17513, 30
  %17517 = sub i32 0, 30
  %17518 = add i32 %17510, %17517
  %_4880 = sub i32 %17510, 30
  %gen4881 = mul i32 %17518, 30
  %_4882 = shl i32 %17510, 30
  %_4883 = shl i32 %17510, 30
  %17519 = add i32 %17510, 938745888
  %17520 = sub i32 %17519, 30
  %17521 = sub i32 %17520, 938745888
  %_4884 = sub i32 %17510, 30
  %gen4885 = mul i32 %17521, 30
  %_4886 = shl i32 %17510, 30
  %17522 = sub i32 0, 30
  %17523 = sub i32 %17510, %17522
  %add1501alteredBB = add nsw i32 %17510, 30
  %17524 = add i32 0, 799153967
  %17525 = sub i32 %17524, %17523
  %17526 = sub i32 %17525, 799153967
  %_4887 = sub i32 0, %17523
  %17527 = sub i32 0, 31
  %17528 = sub i32 %17526, %17527
  %gen4888 = add i32 %17526, 31
  %17529 = sub i32 0, 31
  %17530 = add i32 %17523, %17529
  %_4889 = sub i32 %17523, 31
  %gen4890 = mul i32 %17530, 31
  %17531 = sub i32 0, 31
  %17532 = add i32 %17523, %17531
  %_4891 = sub i32 %17523, 31
  %gen4892 = mul i32 %17532, 31
  %17533 = sub i32 0, 31
  %17534 = sub i32 %17523, %17533
  %add1502alteredBB = add nsw i32 %17523, 31
  %17535 = sub i32 0, 31
  %17536 = add i32 %17534, %17535
  %_4893 = sub i32 %17534, 31
  %gen4894 = mul i32 %17536, 31
  %_4895 = shl i32 %17534, 31
  %17537 = add i32 0, 911587237
  %17538 = sub i32 %17537, %17534
  %17539 = sub i32 %17538, 911587237
  %_4896 = sub i32 0, %17534
  %17540 = sub i32 %17539, -428970462
  %17541 = add i32 %17540, 31
  %17542 = add i32 %17541, -428970462
  %gen4897 = add i32 %17539, 31
  %17543 = add i32 0, 899164247
  %17544 = sub i32 %17543, %17534
  %17545 = sub i32 %17544, 899164247
  %_4898 = sub i32 0, %17534
  %17546 = sub i32 %17545, -1966832691
  %17547 = add i32 %17546, 31
  %17548 = add i32 %17547, -1966832691
  %gen4899 = add i32 %17545, 31
  %17549 = sub i32 0, 31
  %17550 = add i32 %17534, %17549
  %_4900 = sub i32 %17534, 31
  %gen4901 = mul i32 %17550, 31
  %_4902 = shl i32 %17534, 31
  %17551 = add i32 0, -1457420556
  %17552 = sub i32 %17551, %17534
  %17553 = sub i32 %17552, -1457420556
  %_4903 = sub i32 0, %17534
  %17554 = sub i32 %17553, -1794183033
  %17555 = add i32 %17554, 31
  %17556 = add i32 %17555, -1794183033
  %gen4904 = add i32 %17553, 31
  %_4905 = shl i32 %17534, 31
  %17557 = sub i32 %17534, 1633113090
  %17558 = add i32 %17557, 31
  %17559 = add i32 %17558, 1633113090
  %add1503alteredBB = add nsw i32 %17534, 31
  %17560 = add i32 %17559, -965781119
  %17561 = sub i32 %17560, 30
  %17562 = sub i32 %17561, -965781119
  %_4906 = sub i32 %17559, 30
  %gen4907 = mul i32 %17562, 30
  %_4908 = shl i32 %17559, 30
  %_4909 = shl i32 %17559, 30
  %_4910 = shl i32 %17559, 30
  %17563 = sub i32 0, -1640956981
  %17564 = sub i32 %17563, %17559
  %17565 = add i32 %17564, -1640956981
  %_4911 = sub i32 0, %17559
  %17566 = add i32 %17565, 1920534788
  %17567 = add i32 %17566, 30
  %17568 = sub i32 %17567, 1920534788
  %gen4912 = add i32 %17565, 30
  %_4913 = shl i32 %17559, 30
  %17569 = sub i32 0, 30
  %17570 = add i32 %17559, %17569
  %_4914 = sub i32 %17559, 30
  %gen4915 = mul i32 %17570, 30
  %17571 = sub i32 0, %17559
  %17572 = sub i32 0, 30
  %17573 = add i32 %17571, %17572
  %17574 = sub i32 0, %17573
  %add1504alteredBB = add nsw i32 %17559, 30
  %17575 = load i32, i32* %f, align 4
  %17576 = sub i32 0, %17575
  %17577 = add i32 %17574, %17576
  %_4916 = sub i32 %17574, %17575
  %gen4917 = mul i32 %17577, %17575
  %17578 = add i32 0, -1830050880
  %17579 = sub i32 %17578, %17574
  %17580 = sub i32 %17579, -1830050880
  %_4918 = sub i32 0, %17574
  %17581 = sub i32 0, %17580
  %17582 = sub i32 0, %17575
  %17583 = add i32 %17581, %17582
  %17584 = sub i32 0, %17583
  %gen4919 = add i32 %17580, %17575
  %_4920 = shl i32 %17574, %17575
  %17585 = sub i32 0, %17574
  %17586 = add i32 0, %17585
  %_4921 = sub i32 0, %17574
  %17587 = sub i32 0, %17586
  %17588 = sub i32 0, %17575
  %17589 = add i32 %17587, %17588
  %17590 = sub i32 0, %17589
  %gen4922 = add i32 %17586, %17575
  %17591 = sub i32 0, %17575
  %17592 = sub i32 %17574, %17591
  %add1505alteredBB = add nsw i32 %17574, %17575
  %17593 = load i32, i32* %c, align 4
  %_4923 = shl i32 %17592, %17593
  %_4924 = shl i32 %17592, %17593
  %17594 = add i32 %17592, -1312285382
  %17595 = sub i32 %17594, %17593
  %17596 = sub i32 %17595, -1312285382
  %_4925 = sub i32 %17592, %17593
  %gen4926 = mul i32 %17596, %17593
  %17597 = sub i32 0, %17592
  %17598 = add i32 0, %17597
  %_4927 = sub i32 0, %17592
  %17599 = sub i32 %17598, -1956935131
  %17600 = add i32 %17599, %17593
  %17601 = add i32 %17600, -1956935131
  %gen4928 = add i32 %17598, %17593
  %17602 = sub i32 0, %17593
  %17603 = add i32 %17592, %17602
  %_4929 = sub i32 %17592, %17593
  %gen4930 = mul i32 %17603, %17593
  %17604 = sub i32 0, %17592
  %17605 = add i32 0, %17604
  %_4931 = sub i32 0, %17592
  %17606 = sub i32 0, %17593
  %17607 = sub i32 %17605, %17606
  %gen4932 = add i32 %17605, %17593
  %17608 = add i32 %17592, 1818118822
  %17609 = sub i32 %17608, %17593
  %17610 = sub i32 %17609, 1818118822
  %_4933 = sub i32 %17592, %17593
  %gen4934 = mul i32 %17610, %17593
  %17611 = sub i32 0, %17592
  %17612 = add i32 0, %17611
  %_4935 = sub i32 0, %17592
  %17613 = sub i32 0, %17593
  %17614 = sub i32 %17612, %17613
  %gen4936 = add i32 %17612, %17593
  %17615 = add i32 0, 1433497245
  %17616 = sub i32 %17615, %17592
  %17617 = sub i32 %17616, 1433497245
  %_4937 = sub i32 0, %17592
  %17618 = sub i32 0, %17617
  %17619 = sub i32 0, %17593
  %17620 = add i32 %17618, %17619
  %17621 = sub i32 0, %17620
  %gen4938 = add i32 %17617, %17593
  %17622 = sub i32 %17592, 7900522
  %17623 = sub i32 %17622, %17593
  %17624 = add i32 %17623, 7900522
  %sub1506alteredBB = sub nsw i32 %17592, %17593
  store i32 %17624, i32* %s, align 4
  %17625 = load i32, i32* %s, align 4
  %call1507alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17625)
  store i32 -1196559913, i32* %switchVar
  br label %loopEnd

originalBB4942alteredBB:                          ; preds = %loopEntry
  %17626 = load i32, i32* %e, align 4
  %cmp1550alteredBB = icmp eq i32 %17626, 3
  store i32 404273808, i32* %switchVar
  br label %loopEnd

originalBB4946alteredBB:                          ; preds = %loopEntry
  %17627 = load i32, i32* %e, align 4
  %cmp1607alteredBB = icmp eq i32 %17627, 9
  store i32 1482865559, i32* %switchVar
  br label %loopEnd

originalBB4950alteredBB:                          ; preds = %loopEntry
  %17628 = load i32, i32* %s, align 4
  %_4951 = shl i32 %17628, 28
  %_4952 = shl i32 %17628, 28
  %17629 = sub i32 0, -668996096
  %17630 = sub i32 %17629, %17628
  %17631 = add i32 %17630, -668996096
  %_4953 = sub i32 0, %17628
  %17632 = add i32 %17631, 2126078784
  %17633 = add i32 %17632, 28
  %17634 = sub i32 %17633, 2126078784
  %gen4954 = add i32 %17631, 28
  %_4955 = shl i32 %17628, 28
  %17635 = add i32 %17628, 1219501763
  %17636 = add i32 %17635, 28
  %17637 = sub i32 %17636, 1219501763
  %add1636alteredBB = add nsw i32 %17628, 28
  %_4956 = shl i32 %17637, 31
  %17638 = add i32 %17637, 299138477
  %17639 = sub i32 %17638, 31
  %17640 = sub i32 %17639, 299138477
  %_4957 = sub i32 %17637, 31
  %gen4958 = mul i32 %17640, 31
  %17641 = add i32 0, -715092158
  %17642 = sub i32 %17641, %17637
  %17643 = sub i32 %17642, -715092158
  %_4959 = sub i32 0, %17637
  %17644 = sub i32 0, 31
  %17645 = sub i32 %17643, %17644
  %gen4960 = add i32 %17643, 31
  %_4961 = shl i32 %17637, 31
  %_4962 = shl i32 %17637, 31
  %17646 = add i32 %17637, -1493897767
  %17647 = sub i32 %17646, 31
  %17648 = sub i32 %17647, -1493897767
  %_4963 = sub i32 %17637, 31
  %gen4964 = mul i32 %17648, 31
  %17649 = sub i32 0, 31
  %17650 = sub i32 %17637, %17649
  %add1637alteredBB = add nsw i32 %17637, 31
  %_4965 = shl i32 %17650, 30
  %17651 = sub i32 0, -1959243295
  %17652 = sub i32 %17651, %17650
  %17653 = add i32 %17652, -1959243295
  %_4966 = sub i32 0, %17650
  %17654 = sub i32 0, 30
  %17655 = sub i32 %17653, %17654
  %gen4967 = add i32 %17653, 30
  %17656 = sub i32 0, 30
  %17657 = add i32 %17650, %17656
  %_4968 = sub i32 %17650, 30
  %gen4969 = mul i32 %17657, 30
  %17658 = add i32 %17650, -1597264138
  %17659 = add i32 %17658, 30
  %17660 = sub i32 %17659, -1597264138
  %add1638alteredBB = add nsw i32 %17650, 30
  %17661 = add i32 %17660, -1340882044
  %17662 = add i32 %17661, 31
  %17663 = sub i32 %17662, -1340882044
  %add1639alteredBB = add nsw i32 %17660, 31
  %17664 = sub i32 0, %17663
  %17665 = add i32 0, %17664
  %_4970 = sub i32 0, %17663
  %17666 = sub i32 0, 30
  %17667 = sub i32 %17665, %17666
  %gen4971 = add i32 %17665, 30
  %17668 = sub i32 0, %17663
  %17669 = add i32 0, %17668
  %_4972 = sub i32 0, %17663
  %17670 = add i32 %17669, -1568357437
  %17671 = add i32 %17670, 30
  %17672 = sub i32 %17671, -1568357437
  %gen4973 = add i32 %17669, 30
  %17673 = sub i32 0, -780724082
  %17674 = sub i32 %17673, %17663
  %17675 = add i32 %17674, -780724082
  %_4974 = sub i32 0, %17663
  %17676 = sub i32 0, %17675
  %17677 = sub i32 0, 30
  %17678 = add i32 %17676, %17677
  %17679 = sub i32 0, %17678
  %gen4975 = add i32 %17675, 30
  %17680 = sub i32 0, %17663
  %17681 = sub i32 0, 30
  %17682 = add i32 %17680, %17681
  %17683 = sub i32 0, %17682
  %add1640alteredBB = add nsw i32 %17663, 30
  %_4976 = shl i32 %17683, 31
  %17684 = add i32 %17683, 1337613208
  %17685 = sub i32 %17684, 31
  %17686 = sub i32 %17685, 1337613208
  %_4977 = sub i32 %17683, 31
  %gen4978 = mul i32 %17686, 31
  %_4979 = shl i32 %17683, 31
  %17687 = sub i32 %17683, 611644039
  %17688 = add i32 %17687, 31
  %17689 = add i32 %17688, 611644039
  %add1641alteredBB = add nsw i32 %17683, 31
  %17690 = sub i32 0, %17689
  %17691 = add i32 0, %17690
  %_4980 = sub i32 0, %17689
  %17692 = sub i32 0, 31
  %17693 = sub i32 %17691, %17692
  %gen4981 = add i32 %17691, 31
  %17694 = sub i32 0, %17689
  %17695 = add i32 0, %17694
  %_4982 = sub i32 0, %17689
  %17696 = sub i32 0, 31
  %17697 = sub i32 %17695, %17696
  %gen4983 = add i32 %17695, 31
  %_4984 = shl i32 %17689, 31
  %17698 = sub i32 0, 31
  %17699 = sub i32 %17689, %17698
  %add1642alteredBB = add nsw i32 %17689, 31
  %17700 = sub i32 %17699, -378568042
  %17701 = sub i32 %17700, 30
  %17702 = add i32 %17701, -378568042
  %_4985 = sub i32 %17699, 30
  %gen4986 = mul i32 %17702, 30
  %_4987 = shl i32 %17699, 30
  %17703 = sub i32 0, 30
  %17704 = add i32 %17699, %17703
  %_4988 = sub i32 %17699, 30
  %gen4989 = mul i32 %17704, 30
  %17705 = sub i32 0, %17699
  %17706 = add i32 0, %17705
  %_4990 = sub i32 0, %17699
  %17707 = sub i32 %17706, -2130768972
  %17708 = add i32 %17707, 30
  %17709 = add i32 %17708, -2130768972
  %gen4991 = add i32 %17706, 30
  %17710 = sub i32 %17699, 2126197288
  %17711 = sub i32 %17710, 30
  %17712 = add i32 %17711, 2126197288
  %_4992 = sub i32 %17699, 30
  %gen4993 = mul i32 %17712, 30
  %17713 = sub i32 %17699, 121202951
  %17714 = sub i32 %17713, 30
  %17715 = add i32 %17714, 121202951
  %_4994 = sub i32 %17699, 30
  %gen4995 = mul i32 %17715, 30
  %17716 = sub i32 0, 30
  %17717 = sub i32 %17699, %17716
  %add1643alteredBB = add nsw i32 %17699, 30
  %17718 = sub i32 0, %17717
  %17719 = sub i32 0, 31
  %17720 = add i32 %17718, %17719
  %17721 = sub i32 0, %17720
  %add1644alteredBB = add nsw i32 %17717, 31
  %17722 = load i32, i32* %f, align 4
  %17723 = add i32 %17721, -2009186891
  %17724 = sub i32 %17723, %17722
  %17725 = sub i32 %17724, -2009186891
  %_4996 = sub i32 %17721, %17722
  %gen4997 = mul i32 %17725, %17722
  %17726 = sub i32 %17721, -1672517210
  %17727 = sub i32 %17726, %17722
  %17728 = add i32 %17727, -1672517210
  %_4998 = sub i32 %17721, %17722
  %gen4999 = mul i32 %17728, %17722
  %17729 = sub i32 %17721, -1132373581
  %17730 = sub i32 %17729, %17722
  %17731 = add i32 %17730, -1132373581
  %_5000 = sub i32 %17721, %17722
  %gen5001 = mul i32 %17731, %17722
  %17732 = add i32 %17721, -1469818097
  %17733 = sub i32 %17732, %17722
  %17734 = sub i32 %17733, -1469818097
  %_5002 = sub i32 %17721, %17722
  %gen5003 = mul i32 %17734, %17722
  %_5004 = shl i32 %17721, %17722
  %17735 = sub i32 0, %17721
  %17736 = sub i32 0, %17722
  %17737 = add i32 %17735, %17736
  %17738 = sub i32 0, %17737
  %add1645alteredBB = add nsw i32 %17721, %17722
  %17739 = load i32, i32* %c, align 4
  %17740 = sub i32 0, %17739
  %17741 = add i32 %17738, %17740
  %_5005 = sub i32 %17738, %17739
  %gen5006 = mul i32 %17741, %17739
  %17742 = sub i32 0, -1689029110
  %17743 = sub i32 %17742, %17738
  %17744 = add i32 %17743, -1689029110
  %_5007 = sub i32 0, %17738
  %17745 = sub i32 0, %17744
  %17746 = sub i32 0, %17739
  %17747 = add i32 %17745, %17746
  %17748 = sub i32 0, %17747
  %gen5008 = add i32 %17744, %17739
  %17749 = sub i32 %17738, -753387595
  %17750 = sub i32 %17749, %17739
  %17751 = add i32 %17750, -753387595
  %_5009 = sub i32 %17738, %17739
  %gen5010 = mul i32 %17751, %17739
  %17752 = sub i32 0, %17739
  %17753 = add i32 %17738, %17752
  %_5011 = sub i32 %17738, %17739
  %gen5012 = mul i32 %17753, %17739
  %17754 = sub i32 %17738, -1684923166
  %17755 = sub i32 %17754, %17739
  %17756 = add i32 %17755, -1684923166
  %sub1646alteredBB = sub nsw i32 %17738, %17739
  store i32 %17756, i32* %s, align 4
  %17757 = load i32, i32* %s, align 4
  %call1647alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17757)
  store i32 -779254767, i32* %switchVar
  br label %loopEnd

originalBB5016alteredBB:                          ; preds = %loopEntry
  %17758 = load i32, i32* %s, align 4
  %17759 = sub i32 0, 28
  %17760 = add i32 %17758, %17759
  %_5017 = sub i32 %17758, 28
  %gen5018 = mul i32 %17760, 28
  %_5019 = shl i32 %17758, 28
  %_5020 = shl i32 %17758, 28
  %17761 = sub i32 %17758, -1804219599
  %17762 = add i32 %17761, 28
  %17763 = add i32 %17762, -1804219599
  %add1651alteredBB = add nsw i32 %17758, 28
  %17764 = sub i32 0, %17763
  %17765 = add i32 0, %17764
  %_5021 = sub i32 0, %17763
  %17766 = sub i32 %17765, 1173505686
  %17767 = add i32 %17766, 31
  %17768 = add i32 %17767, 1173505686
  %gen5022 = add i32 %17765, 31
  %17769 = add i32 %17763, 898509785
  %17770 = sub i32 %17769, 31
  %17771 = sub i32 %17770, 898509785
  %_5023 = sub i32 %17763, 31
  %gen5024 = mul i32 %17771, 31
  %17772 = sub i32 0, 31
  %17773 = add i32 %17763, %17772
  %_5025 = sub i32 %17763, 31
  %gen5026 = mul i32 %17773, 31
  %17774 = sub i32 %17763, 1976169005
  %17775 = add i32 %17774, 31
  %17776 = add i32 %17775, 1976169005
  %add1652alteredBB = add nsw i32 %17763, 31
  %17777 = sub i32 0, 30
  %17778 = add i32 %17776, %17777
  %_5027 = sub i32 %17776, 30
  %gen5028 = mul i32 %17778, 30
  %17779 = add i32 0, -1602610024
  %17780 = sub i32 %17779, %17776
  %17781 = sub i32 %17780, -1602610024
  %_5029 = sub i32 0, %17776
  %17782 = sub i32 0, %17781
  %17783 = sub i32 0, 30
  %17784 = add i32 %17782, %17783
  %17785 = sub i32 0, %17784
  %gen5030 = add i32 %17781, 30
  %17786 = add i32 %17776, 1101811667
  %17787 = sub i32 %17786, 30
  %17788 = sub i32 %17787, 1101811667
  %_5031 = sub i32 %17776, 30
  %gen5032 = mul i32 %17788, 30
  %17789 = add i32 0, 836418257
  %17790 = sub i32 %17789, %17776
  %17791 = sub i32 %17790, 836418257
  %_5033 = sub i32 0, %17776
  %17792 = add i32 %17791, 1177338431
  %17793 = add i32 %17792, 30
  %17794 = sub i32 %17793, 1177338431
  %gen5034 = add i32 %17791, 30
  %17795 = add i32 %17776, 1218408019
  %17796 = sub i32 %17795, 30
  %17797 = sub i32 %17796, 1218408019
  %_5035 = sub i32 %17776, 30
  %gen5036 = mul i32 %17797, 30
  %_5037 = shl i32 %17776, 30
  %17798 = sub i32 0, 30
  %17799 = add i32 %17776, %17798
  %_5038 = sub i32 %17776, 30
  %gen5039 = mul i32 %17799, 30
  %17800 = add i32 0, 686215094
  %17801 = sub i32 %17800, %17776
  %17802 = sub i32 %17801, 686215094
  %_5040 = sub i32 0, %17776
  %17803 = sub i32 %17802, -1965471447
  %17804 = add i32 %17803, 30
  %17805 = add i32 %17804, -1965471447
  %gen5041 = add i32 %17802, 30
  %17806 = sub i32 0, %17776
  %17807 = sub i32 0, 30
  %17808 = add i32 %17806, %17807
  %17809 = sub i32 0, %17808
  %add1653alteredBB = add nsw i32 %17776, 30
  %_5042 = shl i32 %17809, 31
  %17810 = add i32 0, -978616819
  %17811 = sub i32 %17810, %17809
  %17812 = sub i32 %17811, -978616819
  %_5043 = sub i32 0, %17809
  %17813 = sub i32 %17812, -208224323
  %17814 = add i32 %17813, 31
  %17815 = add i32 %17814, -208224323
  %gen5044 = add i32 %17812, 31
  %17816 = sub i32 0, 31
  %17817 = add i32 %17809, %17816
  %_5045 = sub i32 %17809, 31
  %gen5046 = mul i32 %17817, 31
  %17818 = sub i32 0, %17809
  %17819 = add i32 0, %17818
  %_5047 = sub i32 0, %17809
  %17820 = sub i32 0, 31
  %17821 = sub i32 %17819, %17820
  %gen5048 = add i32 %17819, 31
  %17822 = sub i32 %17809, -309362521
  %17823 = add i32 %17822, 31
  %17824 = add i32 %17823, -309362521
  %add1654alteredBB = add nsw i32 %17809, 31
  %_5049 = shl i32 %17824, 30
  %17825 = sub i32 %17824, -1636090205
  %17826 = sub i32 %17825, 30
  %17827 = add i32 %17826, -1636090205
  %_5050 = sub i32 %17824, 30
  %gen5051 = mul i32 %17827, 30
  %17828 = add i32 %17824, -636091817
  %17829 = sub i32 %17828, 30
  %17830 = sub i32 %17829, -636091817
  %_5052 = sub i32 %17824, 30
  %gen5053 = mul i32 %17830, 30
  %17831 = add i32 0, 1824148484
  %17832 = sub i32 %17831, %17824
  %17833 = sub i32 %17832, 1824148484
  %_5054 = sub i32 0, %17824
  %17834 = add i32 %17833, -792783817
  %17835 = add i32 %17834, 30
  %17836 = sub i32 %17835, -792783817
  %gen5055 = add i32 %17833, 30
  %17837 = sub i32 %17824, -1798444112
  %17838 = add i32 %17837, 30
  %17839 = add i32 %17838, -1798444112
  %add1655alteredBB = add nsw i32 %17824, 30
  %17840 = sub i32 %17839, 464681095
  %17841 = sub i32 %17840, 31
  %17842 = add i32 %17841, 464681095
  %_5056 = sub i32 %17839, 31
  %gen5057 = mul i32 %17842, 31
  %17843 = sub i32 0, 31
  %17844 = add i32 %17839, %17843
  %_5058 = sub i32 %17839, 31
  %gen5059 = mul i32 %17844, 31
  %_5060 = shl i32 %17839, 31
  %17845 = sub i32 0, -1798857240
  %17846 = sub i32 %17845, %17839
  %17847 = add i32 %17846, -1798857240
  %_5061 = sub i32 0, %17839
  %17848 = sub i32 0, %17847
  %17849 = sub i32 0, 31
  %17850 = add i32 %17848, %17849
  %17851 = sub i32 0, %17850
  %gen5062 = add i32 %17847, 31
  %17852 = sub i32 0, -915189026
  %17853 = sub i32 %17852, %17839
  %17854 = add i32 %17853, -915189026
  %_5063 = sub i32 0, %17839
  %17855 = sub i32 0, 31
  %17856 = sub i32 %17854, %17855
  %gen5064 = add i32 %17854, 31
  %17857 = sub i32 0, %17839
  %17858 = sub i32 0, 31
  %17859 = add i32 %17857, %17858
  %17860 = sub i32 0, %17859
  %add1656alteredBB = add nsw i32 %17839, 31
  %17861 = sub i32 0, %17860
  %17862 = add i32 0, %17861
  %_5065 = sub i32 0, %17860
  %17863 = add i32 %17862, 2124300637
  %17864 = add i32 %17863, 31
  %17865 = sub i32 %17864, 2124300637
  %gen5066 = add i32 %17862, 31
  %17866 = add i32 %17860, -288665229
  %17867 = add i32 %17866, 31
  %17868 = sub i32 %17867, -288665229
  %add1657alteredBB = add nsw i32 %17860, 31
  %17869 = sub i32 0, %17868
  %17870 = add i32 0, %17869
  %_5067 = sub i32 0, %17868
  %17871 = sub i32 %17870, 900866127
  %17872 = add i32 %17871, 30
  %17873 = add i32 %17872, 900866127
  %gen5068 = add i32 %17870, 30
  %17874 = add i32 %17868, -1037018673
  %17875 = sub i32 %17874, 30
  %17876 = sub i32 %17875, -1037018673
  %_5069 = sub i32 %17868, 30
  %gen5070 = mul i32 %17876, 30
  %_5071 = shl i32 %17868, 30
  %17877 = sub i32 0, %17868
  %17878 = add i32 0, %17877
  %_5072 = sub i32 0, %17868
  %17879 = sub i32 0, 30
  %17880 = sub i32 %17878, %17879
  %gen5073 = add i32 %17878, 30
  %17881 = sub i32 %17868, 147155643
  %17882 = sub i32 %17881, 30
  %17883 = add i32 %17882, 147155643
  %_5074 = sub i32 %17868, 30
  %gen5075 = mul i32 %17883, 30
  %17884 = add i32 %17868, 2027789085
  %17885 = sub i32 %17884, 30
  %17886 = sub i32 %17885, 2027789085
  %_5076 = sub i32 %17868, 30
  %gen5077 = mul i32 %17886, 30
  %_5078 = shl i32 %17868, 30
  %17887 = sub i32 0, 30
  %17888 = add i32 %17868, %17887
  %_5079 = sub i32 %17868, 30
  %gen5080 = mul i32 %17888, 30
  %17889 = sub i32 0, 30
  %17890 = sub i32 %17868, %17889
  %add1658alteredBB = add nsw i32 %17868, 30
  %17891 = add i32 %17890, 616856365
  %17892 = sub i32 %17891, 31
  %17893 = sub i32 %17892, 616856365
  %_5081 = sub i32 %17890, 31
  %gen5082 = mul i32 %17893, 31
  %_5083 = shl i32 %17890, 31
  %17894 = sub i32 0, 31
  %17895 = add i32 %17890, %17894
  %_5084 = sub i32 %17890, 31
  %gen5085 = mul i32 %17895, 31
  %17896 = add i32 0, 308578813
  %17897 = sub i32 %17896, %17890
  %17898 = sub i32 %17897, 308578813
  %_5086 = sub i32 0, %17890
  %17899 = sub i32 0, %17898
  %17900 = sub i32 0, 31
  %17901 = add i32 %17899, %17900
  %17902 = sub i32 0, %17901
  %gen5087 = add i32 %17898, 31
  %17903 = sub i32 %17890, -868366032
  %17904 = sub i32 %17903, 31
  %17905 = add i32 %17904, -868366032
  %_5088 = sub i32 %17890, 31
  %gen5089 = mul i32 %17905, 31
  %_5090 = shl i32 %17890, 31
  %17906 = sub i32 0, -2099349010
  %17907 = sub i32 %17906, %17890
  %17908 = add i32 %17907, -2099349010
  %_5091 = sub i32 0, %17890
  %17909 = sub i32 0, %17908
  %17910 = sub i32 0, 31
  %17911 = add i32 %17909, %17910
  %17912 = sub i32 0, %17911
  %gen5092 = add i32 %17908, 31
  %17913 = sub i32 0, 31
  %17914 = sub i32 %17890, %17913
  %add1659alteredBB = add nsw i32 %17890, 31
  %_5093 = shl i32 %17914, 30
  %17915 = add i32 %17914, 908200023
  %17916 = add i32 %17915, 30
  %17917 = sub i32 %17916, 908200023
  %add1660alteredBB = add nsw i32 %17914, 30
  %17918 = load i32, i32* %f, align 4
  %17919 = sub i32 0, 754837071
  %17920 = sub i32 %17919, %17917
  %17921 = add i32 %17920, 754837071
  %_5094 = sub i32 0, %17917
  %17922 = sub i32 0, %17918
  %17923 = sub i32 %17921, %17922
  %gen5095 = add i32 %17921, %17918
  %17924 = sub i32 %17917, 844003928
  %17925 = sub i32 %17924, %17918
  %17926 = add i32 %17925, 844003928
  %_5096 = sub i32 %17917, %17918
  %gen5097 = mul i32 %17926, %17918
  %17927 = add i32 0, 1430065859
  %17928 = sub i32 %17927, %17917
  %17929 = sub i32 %17928, 1430065859
  %_5098 = sub i32 0, %17917
  %17930 = add i32 %17929, 1183305459
  %17931 = add i32 %17930, %17918
  %17932 = sub i32 %17931, 1183305459
  %gen5099 = add i32 %17929, %17918
  %17933 = sub i32 %17917, -1680723538
  %17934 = sub i32 %17933, %17918
  %17935 = add i32 %17934, -1680723538
  %_5100 = sub i32 %17917, %17918
  %gen5101 = mul i32 %17935, %17918
  %17936 = add i32 %17917, -1482272925
  %17937 = sub i32 %17936, %17918
  %17938 = sub i32 %17937, -1482272925
  %_5102 = sub i32 %17917, %17918
  %gen5103 = mul i32 %17938, %17918
  %17939 = sub i32 0, %17918
  %17940 = add i32 %17917, %17939
  %_5104 = sub i32 %17917, %17918
  %gen5105 = mul i32 %17940, %17918
  %17941 = sub i32 0, %17917
  %17942 = sub i32 0, %17918
  %17943 = add i32 %17941, %17942
  %17944 = sub i32 0, %17943
  %add1661alteredBB = add nsw i32 %17917, %17918
  %17945 = load i32, i32* %c, align 4
  %_5106 = shl i32 %17944, %17945
  %17946 = add i32 %17944, -1202008195
  %17947 = sub i32 %17946, %17945
  %17948 = sub i32 %17947, -1202008195
  %_5107 = sub i32 %17944, %17945
  %gen5108 = mul i32 %17948, %17945
  %17949 = sub i32 0, %17945
  %17950 = add i32 %17944, %17949
  %sub1662alteredBB = sub nsw i32 %17944, %17945
  store i32 %17950, i32* %s, align 4
  %17951 = load i32, i32* %s, align 4
  %call1663alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17951)
  store i32 1249300639, i32* %switchVar
  br label %loopEnd

originalBB5112alteredBB:                          ; preds = %loopEntry
  store i32 -993345526, i32* %switchVar
  br label %loopEnd

originalBB5116alteredBB:                          ; preds = %loopEntry
  %17952 = load i32, i32* %e, align 4
  %cmp1669alteredBB = icmp eq i32 %17952, 1
  store i32 -1446182639, i32* %switchVar
  br label %loopEnd

originalBB5120alteredBB:                          ; preds = %loopEntry
  %17953 = load i32, i32* %s, align 4
  %_5121 = shl i32 %17953, 28
  %17954 = add i32 0, -573018351
  %17955 = sub i32 %17954, %17953
  %17956 = sub i32 %17955, -573018351
  %_5122 = sub i32 0, %17953
  %17957 = add i32 %17956, 915489745
  %17958 = add i32 %17957, 28
  %17959 = sub i32 %17958, 915489745
  %gen5123 = add i32 %17956, 28
  %17960 = add i32 0, -1990876806
  %17961 = sub i32 %17960, %17953
  %17962 = sub i32 %17961, -1990876806
  %_5124 = sub i32 0, %17953
  %17963 = sub i32 %17962, 1816326432
  %17964 = add i32 %17963, 28
  %17965 = add i32 %17964, 1816326432
  %gen5125 = add i32 %17962, 28
  %17966 = add i32 %17953, -1103139286
  %17967 = sub i32 %17966, 28
  %17968 = sub i32 %17967, -1103139286
  %_5126 = sub i32 %17953, 28
  %gen5127 = mul i32 %17968, 28
  %_5128 = shl i32 %17953, 28
  %_5129 = shl i32 %17953, 28
  %17969 = add i32 %17953, 922126935
  %17970 = sub i32 %17969, 28
  %17971 = sub i32 %17970, 922126935
  %sub1671alteredBB = sub nsw i32 %17953, 28
  %_5130 = shl i32 %17971, 31
  %17972 = sub i32 %17971, 2055639817
  %17973 = sub i32 %17972, 31
  %17974 = add i32 %17973, 2055639817
  %sub1672alteredBB = sub nsw i32 %17971, 31
  %17975 = load i32, i32* %f, align 4
  %_5131 = shl i32 %17974, %17975
  %17976 = sub i32 0, %17974
  %17977 = sub i32 0, %17975
  %17978 = add i32 %17976, %17977
  %17979 = sub i32 0, %17978
  %add1673alteredBB = add nsw i32 %17974, %17975
  %17980 = load i32, i32* %c, align 4
  %_5132 = shl i32 %17979, %17980
  %17981 = sub i32 0, -886274103
  %17982 = sub i32 %17981, %17979
  %17983 = add i32 %17982, -886274103
  %_5133 = sub i32 0, %17979
  %17984 = sub i32 0, %17980
  %17985 = sub i32 %17983, %17984
  %gen5134 = add i32 %17983, %17980
  %17986 = sub i32 0, %17980
  %17987 = add i32 %17979, %17986
  %sub1674alteredBB = sub nsw i32 %17979, %17980
  store i32 %17987, i32* %s, align 4
  %17988 = load i32, i32* %s, align 4
  %call1675alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %17988)
  store i32 316428276, i32* %switchVar
  br label %loopEnd

originalBB5138alteredBB:                          ; preds = %loopEntry
  %17989 = load i32, i32* %s, align 4
  %17990 = sub i32 0, %17989
  %17991 = add i32 0, %17990
  %_5139 = sub i32 0, %17989
  %17992 = sub i32 %17991, 1136498925
  %17993 = add i32 %17992, 31
  %17994 = add i32 %17993, 1136498925
  %gen5140 = add i32 %17991, 31
  %17995 = add i32 0, -567723230
  %17996 = sub i32 %17995, %17989
  %17997 = sub i32 %17996, -567723230
  %_5141 = sub i32 0, %17989
  %17998 = sub i32 %17997, 2063942750
  %17999 = add i32 %17998, 31
  %18000 = add i32 %17999, 2063942750
  %gen5142 = add i32 %17997, 31
  %_5143 = shl i32 %17989, 31
  %_5144 = shl i32 %17989, 31
  %18001 = sub i32 0, 2067267636
  %18002 = sub i32 %18001, %17989
  %18003 = add i32 %18002, 2067267636
  %_5145 = sub i32 0, %17989
  %18004 = add i32 %18003, -1272477944
  %18005 = add i32 %18004, 31
  %18006 = sub i32 %18005, -1272477944
  %gen5146 = add i32 %18003, 31
  %18007 = sub i32 0, %17989
  %18008 = add i32 0, %18007
  %_5147 = sub i32 0, %17989
  %18009 = sub i32 0, %18008
  %18010 = sub i32 0, 31
  %18011 = add i32 %18009, %18010
  %18012 = sub i32 0, %18011
  %gen5148 = add i32 %18008, 31
  %18013 = sub i32 %17989, -1646959615
  %18014 = add i32 %18013, 31
  %18015 = add i32 %18014, -1646959615
  %add1686alteredBB = add nsw i32 %17989, 31
  %18016 = load i32, i32* %f, align 4
  %18017 = add i32 %18015, 1838057393
  %18018 = sub i32 %18017, %18016
  %18019 = sub i32 %18018, 1838057393
  %_5149 = sub i32 %18015, %18016
  %gen5150 = mul i32 %18019, %18016
  %18020 = add i32 0, 610198596
  %18021 = sub i32 %18020, %18015
  %18022 = sub i32 %18021, 610198596
  %_5151 = sub i32 0, %18015
  %18023 = sub i32 %18022, 1564379317
  %18024 = add i32 %18023, %18016
  %18025 = add i32 %18024, 1564379317
  %gen5152 = add i32 %18022, %18016
  %_5153 = shl i32 %18015, %18016
  %18026 = sub i32 0, -2134220160
  %18027 = sub i32 %18026, %18015
  %18028 = add i32 %18027, -2134220160
  %_5154 = sub i32 0, %18015
  %18029 = sub i32 %18028, -1872905221
  %18030 = add i32 %18029, %18016
  %18031 = add i32 %18030, -1872905221
  %gen5155 = add i32 %18028, %18016
  %_5156 = shl i32 %18015, %18016
  %18032 = sub i32 %18015, -295999340
  %18033 = add i32 %18032, %18016
  %18034 = add i32 %18033, -295999340
  %add1687alteredBB = add nsw i32 %18015, %18016
  %18035 = load i32, i32* %c, align 4
  %_5157 = shl i32 %18034, %18035
  %_5158 = shl i32 %18034, %18035
  %18036 = sub i32 0, -139463445
  %18037 = sub i32 %18036, %18034
  %18038 = add i32 %18037, -139463445
  %_5159 = sub i32 0, %18034
  %18039 = sub i32 %18038, -1552422190
  %18040 = add i32 %18039, %18035
  %18041 = add i32 %18040, -1552422190
  %gen5160 = add i32 %18038, %18035
  %_5161 = shl i32 %18034, %18035
  %18042 = add i32 0, 1877110652
  %18043 = sub i32 %18042, %18034
  %18044 = sub i32 %18043, 1877110652
  %_5162 = sub i32 0, %18034
  %18045 = sub i32 %18044, -17402832
  %18046 = add i32 %18045, %18035
  %18047 = add i32 %18046, -17402832
  %gen5163 = add i32 %18044, %18035
  %18048 = sub i32 %18034, 151786411
  %18049 = sub i32 %18048, %18035
  %18050 = add i32 %18049, 151786411
  %_5164 = sub i32 %18034, %18035
  %gen5165 = mul i32 %18050, %18035
  %18051 = add i32 %18034, 1269783683
  %18052 = sub i32 %18051, %18035
  %18053 = sub i32 %18052, 1269783683
  %sub1688alteredBB = sub nsw i32 %18034, %18035
  store i32 %18053, i32* %s, align 4
  %18054 = load i32, i32* %s, align 4
  %call1689alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18054)
  store i32 2031738390, i32* %switchVar
  br label %loopEnd

originalBB5169alteredBB:                          ; preds = %loopEntry
  %18055 = load i32, i32* %e, align 4
  %cmp1691alteredBB = icmp eq i32 %18055, 5
  store i32 1345232318, i32* %switchVar
  br label %loopEnd

originalBB5173alteredBB:                          ; preds = %loopEntry
  %18056 = load i32, i32* %s, align 4
  %_5174 = shl i32 %18056, 31
  %18057 = sub i32 %18056, 406929170
  %18058 = sub i32 %18057, 31
  %18059 = add i32 %18058, 406929170
  %_5175 = sub i32 %18056, 31
  %gen5176 = mul i32 %18059, 31
  %_5177 = shl i32 %18056, 31
  %18060 = sub i32 0, 31
  %18061 = add i32 %18056, %18060
  %_5178 = sub i32 %18056, 31
  %gen5179 = mul i32 %18061, 31
  %_5180 = shl i32 %18056, 31
  %18062 = sub i32 0, 31
  %18063 = add i32 %18056, %18062
  %_5181 = sub i32 %18056, 31
  %gen5182 = mul i32 %18063, 31
  %18064 = sub i32 %18056, 685066774
  %18065 = sub i32 %18064, 31
  %18066 = add i32 %18065, 685066774
  %_5183 = sub i32 %18056, 31
  %gen5184 = mul i32 %18066, 31
  %18067 = add i32 %18056, -1966925936
  %18068 = add i32 %18067, 31
  %18069 = sub i32 %18068, -1966925936
  %add1693alteredBB = add nsw i32 %18056, 31
  %18070 = add i32 0, -667777842
  %18071 = sub i32 %18070, %18069
  %18072 = sub i32 %18071, -667777842
  %_5185 = sub i32 0, %18069
  %18073 = sub i32 0, 30
  %18074 = sub i32 %18072, %18073
  %gen5186 = add i32 %18072, 30
  %18075 = sub i32 %18069, -907552074
  %18076 = add i32 %18075, 30
  %18077 = add i32 %18076, -907552074
  %add1694alteredBB = add nsw i32 %18069, 30
  %18078 = load i32, i32* %f, align 4
  %18079 = add i32 0, -12733698
  %18080 = sub i32 %18079, %18077
  %18081 = sub i32 %18080, -12733698
  %_5187 = sub i32 0, %18077
  %18082 = sub i32 %18081, 1614176796
  %18083 = add i32 %18082, %18078
  %18084 = add i32 %18083, 1614176796
  %gen5188 = add i32 %18081, %18078
  %18085 = add i32 0, 603434678
  %18086 = sub i32 %18085, %18077
  %18087 = sub i32 %18086, 603434678
  %_5189 = sub i32 0, %18077
  %18088 = add i32 %18087, -1060905066
  %18089 = add i32 %18088, %18078
  %18090 = sub i32 %18089, -1060905066
  %gen5190 = add i32 %18087, %18078
  %18091 = sub i32 0, %18077
  %18092 = add i32 0, %18091
  %_5191 = sub i32 0, %18077
  %18093 = sub i32 %18092, -1944134079
  %18094 = add i32 %18093, %18078
  %18095 = add i32 %18094, -1944134079
  %gen5192 = add i32 %18092, %18078
  %_5193 = shl i32 %18077, %18078
  %18096 = sub i32 %18077, 1661553441
  %18097 = sub i32 %18096, %18078
  %18098 = add i32 %18097, 1661553441
  %_5194 = sub i32 %18077, %18078
  %gen5195 = mul i32 %18098, %18078
  %18099 = sub i32 0, %18078
  %18100 = add i32 %18077, %18099
  %_5196 = sub i32 %18077, %18078
  %gen5197 = mul i32 %18100, %18078
  %18101 = sub i32 0, %18077
  %18102 = sub i32 0, %18078
  %18103 = add i32 %18101, %18102
  %18104 = sub i32 0, %18103
  %add1695alteredBB = add nsw i32 %18077, %18078
  %18105 = load i32, i32* %c, align 4
  %18106 = sub i32 0, %18105
  %18107 = add i32 %18104, %18106
  %sub1696alteredBB = sub nsw i32 %18104, %18105
  store i32 %18107, i32* %s, align 4
  %18108 = load i32, i32* %s, align 4
  %call1697alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18108)
  store i32 -1154659405, i32* %switchVar
  br label %loopEnd

originalBB5201alteredBB:                          ; preds = %loopEntry
  %18109 = load i32, i32* %e, align 4
  %cmp1699alteredBB = icmp eq i32 %18109, 6
  store i32 166915825, i32* %switchVar
  br label %loopEnd

originalBB5205alteredBB:                          ; preds = %loopEntry
  %18110 = load i32, i32* %s, align 4
  %18111 = sub i32 0, 178061862
  %18112 = sub i32 %18111, %18110
  %18113 = add i32 %18112, 178061862
  %_5206 = sub i32 0, %18110
  %18114 = add i32 %18113, -834464310
  %18115 = add i32 %18114, 31
  %18116 = sub i32 %18115, -834464310
  %gen5207 = add i32 %18113, 31
  %18117 = sub i32 %18110, -1533131463
  %18118 = sub i32 %18117, 31
  %18119 = add i32 %18118, -1533131463
  %_5208 = sub i32 %18110, 31
  %gen5209 = mul i32 %18119, 31
  %18120 = sub i32 0, %18110
  %18121 = add i32 0, %18120
  %_5210 = sub i32 0, %18110
  %18122 = add i32 %18121, 1026617881
  %18123 = add i32 %18122, 31
  %18124 = sub i32 %18123, 1026617881
  %gen5211 = add i32 %18121, 31
  %18125 = sub i32 0, 31
  %18126 = add i32 %18110, %18125
  %_5212 = sub i32 %18110, 31
  %gen5213 = mul i32 %18126, 31
  %18127 = sub i32 %18110, -813821552
  %18128 = sub i32 %18127, 31
  %18129 = add i32 %18128, -813821552
  %_5214 = sub i32 %18110, 31
  %gen5215 = mul i32 %18129, 31
  %18130 = sub i32 0, %18110
  %18131 = add i32 0, %18130
  %_5216 = sub i32 0, %18110
  %18132 = add i32 %18131, 1301562709
  %18133 = add i32 %18132, 31
  %18134 = sub i32 %18133, 1301562709
  %gen5217 = add i32 %18131, 31
  %18135 = add i32 %18110, -941048830
  %18136 = sub i32 %18135, 31
  %18137 = sub i32 %18136, -941048830
  %_5218 = sub i32 %18110, 31
  %gen5219 = mul i32 %18137, 31
  %18138 = add i32 0, -468848426
  %18139 = sub i32 %18138, %18110
  %18140 = sub i32 %18139, -468848426
  %_5220 = sub i32 0, %18110
  %18141 = sub i32 0, 31
  %18142 = sub i32 %18140, %18141
  %gen5221 = add i32 %18140, 31
  %18143 = add i32 %18110, -572965734
  %18144 = sub i32 %18143, 31
  %18145 = sub i32 %18144, -572965734
  %_5222 = sub i32 %18110, 31
  %gen5223 = mul i32 %18145, 31
  %18146 = sub i32 %18110, -1487650789
  %18147 = add i32 %18146, 31
  %18148 = add i32 %18147, -1487650789
  %add1710alteredBB = add nsw i32 %18110, 31
  %18149 = sub i32 0, %18148
  %18150 = add i32 0, %18149
  %_5224 = sub i32 0, %18148
  %18151 = sub i32 0, %18150
  %18152 = sub i32 0, 30
  %18153 = add i32 %18151, %18152
  %18154 = sub i32 0, %18153
  %gen5225 = add i32 %18150, 30
  %18155 = sub i32 0, -252247852
  %18156 = sub i32 %18155, %18148
  %18157 = add i32 %18156, -252247852
  %_5226 = sub i32 0, %18148
  %18158 = sub i32 0, 30
  %18159 = sub i32 %18157, %18158
  %gen5227 = add i32 %18157, 30
  %18160 = add i32 0, -1118263790
  %18161 = sub i32 %18160, %18148
  %18162 = sub i32 %18161, -1118263790
  %_5228 = sub i32 0, %18148
  %18163 = sub i32 0, 30
  %18164 = sub i32 %18162, %18163
  %gen5229 = add i32 %18162, 30
  %18165 = sub i32 %18148, 1762675153
  %18166 = sub i32 %18165, 30
  %18167 = add i32 %18166, 1762675153
  %_5230 = sub i32 %18148, 30
  %gen5231 = mul i32 %18167, 30
  %18168 = add i32 %18148, -2070115320
  %18169 = add i32 %18168, 30
  %18170 = sub i32 %18169, -2070115320
  %add1711alteredBB = add nsw i32 %18148, 30
  %18171 = sub i32 0, 1899033022
  %18172 = sub i32 %18171, %18170
  %18173 = add i32 %18172, 1899033022
  %_5232 = sub i32 0, %18170
  %18174 = sub i32 %18173, 1835235297
  %18175 = add i32 %18174, 31
  %18176 = add i32 %18175, 1835235297
  %gen5233 = add i32 %18173, 31
  %_5234 = shl i32 %18170, 31
  %_5235 = shl i32 %18170, 31
  %18177 = sub i32 0, %18170
  %18178 = add i32 0, %18177
  %_5236 = sub i32 0, %18170
  %18179 = sub i32 %18178, -952444354
  %18180 = add i32 %18179, 31
  %18181 = add i32 %18180, -952444354
  %gen5237 = add i32 %18178, 31
  %18182 = sub i32 %18170, -318649139
  %18183 = add i32 %18182, 31
  %18184 = add i32 %18183, -318649139
  %add1712alteredBB = add nsw i32 %18170, 31
  %18185 = add i32 0, 1866989299
  %18186 = sub i32 %18185, %18184
  %18187 = sub i32 %18186, 1866989299
  %_5238 = sub i32 0, %18184
  %18188 = sub i32 %18187, 1775325598
  %18189 = add i32 %18188, 30
  %18190 = add i32 %18189, 1775325598
  %gen5239 = add i32 %18187, 30
  %_5240 = shl i32 %18184, 30
  %_5241 = shl i32 %18184, 30
  %18191 = sub i32 %18184, 2058047912
  %18192 = sub i32 %18191, 30
  %18193 = add i32 %18192, 2058047912
  %_5242 = sub i32 %18184, 30
  %gen5243 = mul i32 %18193, 30
  %_5244 = shl i32 %18184, 30
  %_5245 = shl i32 %18184, 30
  %_5246 = shl i32 %18184, 30
  %18194 = add i32 0, -396515846
  %18195 = sub i32 %18194, %18184
  %18196 = sub i32 %18195, -396515846
  %_5247 = sub i32 0, %18184
  %18197 = sub i32 %18196, 364454106
  %18198 = add i32 %18197, 30
  %18199 = add i32 %18198, 364454106
  %gen5248 = add i32 %18196, 30
  %18200 = sub i32 0, 1100451513
  %18201 = sub i32 %18200, %18184
  %18202 = add i32 %18201, 1100451513
  %_5249 = sub i32 0, %18184
  %18203 = sub i32 0, 30
  %18204 = sub i32 %18202, %18203
  %gen5250 = add i32 %18202, 30
  %18205 = sub i32 0, %18184
  %18206 = sub i32 0, 30
  %18207 = add i32 %18205, %18206
  %18208 = sub i32 0, %18207
  %add1713alteredBB = add nsw i32 %18184, 30
  %18209 = load i32, i32* %f, align 4
  %_5251 = shl i32 %18208, %18209
  %18210 = sub i32 %18208, -1550009407
  %18211 = add i32 %18210, %18209
  %18212 = add i32 %18211, -1550009407
  %add1714alteredBB = add nsw i32 %18208, %18209
  %18213 = load i32, i32* %c, align 4
  %18214 = add i32 0, -1311087526
  %18215 = sub i32 %18214, %18212
  %18216 = sub i32 %18215, -1311087526
  %_5252 = sub i32 0, %18212
  %18217 = sub i32 0, %18213
  %18218 = sub i32 %18216, %18217
  %gen5253 = add i32 %18216, %18213
  %_5254 = shl i32 %18212, %18213
  %_5255 = shl i32 %18212, %18213
  %_5256 = shl i32 %18212, %18213
  %_5257 = shl i32 %18212, %18213
  %18219 = sub i32 %18212, 1104024221
  %18220 = sub i32 %18219, %18213
  %18221 = add i32 %18220, 1104024221
  %_5258 = sub i32 %18212, %18213
  %gen5259 = mul i32 %18221, %18213
  %18222 = add i32 %18212, -2108031613
  %18223 = sub i32 %18222, %18213
  %18224 = sub i32 %18223, -2108031613
  %_5260 = sub i32 %18212, %18213
  %gen5261 = mul i32 %18224, %18213
  %18225 = add i32 %18212, -933709493
  %18226 = sub i32 %18225, %18213
  %18227 = sub i32 %18226, -933709493
  %_5262 = sub i32 %18212, %18213
  %gen5263 = mul i32 %18227, %18213
  %18228 = add i32 %18212, -1433150286
  %18229 = sub i32 %18228, %18213
  %18230 = sub i32 %18229, -1433150286
  %_5264 = sub i32 %18212, %18213
  %gen5265 = mul i32 %18230, %18213
  %18231 = sub i32 %18212, -576488725
  %18232 = sub i32 %18231, %18213
  %18233 = add i32 %18232, -576488725
  %sub1715alteredBB = sub nsw i32 %18212, %18213
  store i32 %18233, i32* %s, align 4
  %18234 = load i32, i32* %s, align 4
  %call1716alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18234)
  store i32 1818302017, i32* %switchVar
  br label %loopEnd

originalBB5269alteredBB:                          ; preds = %loopEntry
  %18235 = load i32, i32* %e, align 4
  %cmp1718alteredBB = icmp eq i32 %18235, 8
  store i32 347591410, i32* %switchVar
  br label %loopEnd

originalBB5273alteredBB:                          ; preds = %loopEntry
  %18236 = load i32, i32* %s, align 4
  %18237 = add i32 0, -1248652339
  %18238 = sub i32 %18237, %18236
  %18239 = sub i32 %18238, -1248652339
  %_5274 = sub i32 0, %18236
  %18240 = add i32 %18239, -187763495
  %18241 = add i32 %18240, 31
  %18242 = sub i32 %18241, -187763495
  %gen5275 = add i32 %18239, 31
  %_5276 = shl i32 %18236, 31
  %18243 = sub i32 0, -437967408
  %18244 = sub i32 %18243, %18236
  %18245 = add i32 %18244, -437967408
  %_5277 = sub i32 0, %18236
  %18246 = sub i32 0, %18245
  %18247 = sub i32 0, 31
  %18248 = add i32 %18246, %18247
  %18249 = sub i32 0, %18248
  %gen5278 = add i32 %18245, 31
  %18250 = add i32 %18236, -1768249287
  %18251 = add i32 %18250, 31
  %18252 = sub i32 %18251, -1768249287
  %add1756alteredBB = add nsw i32 %18236, 31
  %18253 = sub i32 0, 30
  %18254 = add i32 %18252, %18253
  %_5279 = sub i32 %18252, 30
  %gen5280 = mul i32 %18254, 30
  %18255 = sub i32 0, -21728156
  %18256 = sub i32 %18255, %18252
  %18257 = add i32 %18256, -21728156
  %_5281 = sub i32 0, %18252
  %18258 = sub i32 %18257, 1280625306
  %18259 = add i32 %18258, 30
  %18260 = add i32 %18259, 1280625306
  %gen5282 = add i32 %18257, 30
  %18261 = add i32 0, -156285661
  %18262 = sub i32 %18261, %18252
  %18263 = sub i32 %18262, -156285661
  %_5283 = sub i32 0, %18252
  %18264 = sub i32 %18263, -1753042516
  %18265 = add i32 %18264, 30
  %18266 = add i32 %18265, -1753042516
  %gen5284 = add i32 %18263, 30
  %18267 = add i32 0, -1347524099
  %18268 = sub i32 %18267, %18252
  %18269 = sub i32 %18268, -1347524099
  %_5285 = sub i32 0, %18252
  %18270 = sub i32 0, %18269
  %18271 = sub i32 0, 30
  %18272 = add i32 %18270, %18271
  %18273 = sub i32 0, %18272
  %gen5286 = add i32 %18269, 30
  %18274 = sub i32 0, %18252
  %18275 = add i32 0, %18274
  %_5287 = sub i32 0, %18252
  %18276 = sub i32 %18275, 1691921217
  %18277 = add i32 %18276, 30
  %18278 = add i32 %18277, 1691921217
  %gen5288 = add i32 %18275, 30
  %18279 = sub i32 %18252, 1383219144
  %18280 = sub i32 %18279, 30
  %18281 = add i32 %18280, 1383219144
  %_5289 = sub i32 %18252, 30
  %gen5290 = mul i32 %18281, 30
  %18282 = add i32 %18252, 1386739817
  %18283 = sub i32 %18282, 30
  %18284 = sub i32 %18283, 1386739817
  %_5291 = sub i32 %18252, 30
  %gen5292 = mul i32 %18284, 30
  %18285 = add i32 %18252, -587183299
  %18286 = add i32 %18285, 30
  %18287 = sub i32 %18286, -587183299
  %add1757alteredBB = add nsw i32 %18252, 30
  %18288 = sub i32 0, %18287
  %18289 = add i32 0, %18288
  %_5293 = sub i32 0, %18287
  %18290 = add i32 %18289, 1463015907
  %18291 = add i32 %18290, 31
  %18292 = sub i32 %18291, 1463015907
  %gen5294 = add i32 %18289, 31
  %18293 = sub i32 0, %18287
  %18294 = add i32 0, %18293
  %_5295 = sub i32 0, %18287
  %18295 = sub i32 0, %18294
  %18296 = sub i32 0, 31
  %18297 = add i32 %18295, %18296
  %18298 = sub i32 0, %18297
  %gen5296 = add i32 %18294, 31
  %18299 = sub i32 %18287, 992542810
  %18300 = sub i32 %18299, 31
  %18301 = add i32 %18300, 992542810
  %_5297 = sub i32 %18287, 31
  %gen5298 = mul i32 %18301, 31
  %_5299 = shl i32 %18287, 31
  %_5300 = shl i32 %18287, 31
  %_5301 = shl i32 %18287, 31
  %_5302 = shl i32 %18287, 31
  %18302 = sub i32 0, %18287
  %18303 = add i32 0, %18302
  %_5303 = sub i32 0, %18287
  %18304 = add i32 %18303, -268067948
  %18305 = add i32 %18304, 31
  %18306 = sub i32 %18305, -268067948
  %gen5304 = add i32 %18303, 31
  %18307 = sub i32 %18287, -936867308
  %18308 = add i32 %18307, 31
  %18309 = add i32 %18308, -936867308
  %add1758alteredBB = add nsw i32 %18287, 31
  %18310 = add i32 0, 644203048
  %18311 = sub i32 %18310, %18309
  %18312 = sub i32 %18311, 644203048
  %_5305 = sub i32 0, %18309
  %18313 = add i32 %18312, -1072408959
  %18314 = add i32 %18313, 30
  %18315 = sub i32 %18314, -1072408959
  %gen5306 = add i32 %18312, 30
  %18316 = sub i32 0, %18309
  %18317 = sub i32 0, 30
  %18318 = add i32 %18316, %18317
  %18319 = sub i32 0, %18318
  %add1759alteredBB = add nsw i32 %18309, 30
  %18320 = sub i32 0, 31
  %18321 = add i32 %18319, %18320
  %_5307 = sub i32 %18319, 31
  %gen5308 = mul i32 %18321, 31
  %18322 = sub i32 %18319, -1449369339
  %18323 = add i32 %18322, 31
  %18324 = add i32 %18323, -1449369339
  %add1760alteredBB = add nsw i32 %18319, 31
  %18325 = sub i32 0, %18324
  %18326 = add i32 0, %18325
  %_5309 = sub i32 0, %18324
  %18327 = sub i32 0, 31
  %18328 = sub i32 %18326, %18327
  %gen5310 = add i32 %18326, 31
  %18329 = add i32 %18324, 1955619858
  %18330 = add i32 %18329, 31
  %18331 = sub i32 %18330, 1955619858
  %add1761alteredBB = add nsw i32 %18324, 31
  %_5311 = shl i32 %18331, 30
  %18332 = sub i32 0, -537485897
  %18333 = sub i32 %18332, %18331
  %18334 = add i32 %18333, -537485897
  %_5312 = sub i32 0, %18331
  %18335 = sub i32 0, 30
  %18336 = sub i32 %18334, %18335
  %gen5313 = add i32 %18334, 30
  %18337 = add i32 0, -1559730618
  %18338 = sub i32 %18337, %18331
  %18339 = sub i32 %18338, -1559730618
  %_5314 = sub i32 0, %18331
  %18340 = sub i32 0, 30
  %18341 = sub i32 %18339, %18340
  %gen5315 = add i32 %18339, 30
  %18342 = sub i32 0, %18331
  %18343 = sub i32 0, 30
  %18344 = add i32 %18342, %18343
  %18345 = sub i32 0, %18344
  %add1762alteredBB = add nsw i32 %18331, 30
  %_5316 = shl i32 %18345, 31
  %_5317 = shl i32 %18345, 31
  %18346 = sub i32 0, 31
  %18347 = add i32 %18345, %18346
  %_5318 = sub i32 %18345, 31
  %gen5319 = mul i32 %18347, 31
  %_5320 = shl i32 %18345, 31
  %_5321 = shl i32 %18345, 31
  %18348 = add i32 0, 1626274428
  %18349 = sub i32 %18348, %18345
  %18350 = sub i32 %18349, 1626274428
  %_5322 = sub i32 0, %18345
  %18351 = sub i32 %18350, 659065743
  %18352 = add i32 %18351, 31
  %18353 = add i32 %18352, 659065743
  %gen5323 = add i32 %18350, 31
  %18354 = sub i32 0, 1527309149
  %18355 = sub i32 %18354, %18345
  %18356 = add i32 %18355, 1527309149
  %_5324 = sub i32 0, %18345
  %18357 = sub i32 0, %18356
  %18358 = sub i32 0, 31
  %18359 = add i32 %18357, %18358
  %18360 = sub i32 0, %18359
  %gen5325 = add i32 %18356, 31
  %18361 = add i32 %18345, -2100681285
  %18362 = add i32 %18361, 31
  %18363 = sub i32 %18362, -2100681285
  %add1763alteredBB = add nsw i32 %18345, 31
  %18364 = load i32, i32* %f, align 4
  %_5326 = shl i32 %18363, %18364
  %_5327 = shl i32 %18363, %18364
  %18365 = add i32 %18363, -1716001432
  %18366 = add i32 %18365, %18364
  %18367 = sub i32 %18366, -1716001432
  %add1764alteredBB = add nsw i32 %18363, %18364
  %18368 = load i32, i32* %c, align 4
  %_5328 = shl i32 %18367, %18368
  %_5329 = shl i32 %18367, %18368
  %18369 = sub i32 %18367, -1531837810
  %18370 = sub i32 %18369, %18368
  %18371 = add i32 %18370, -1531837810
  %_5330 = sub i32 %18367, %18368
  %gen5331 = mul i32 %18371, %18368
  %18372 = add i32 %18367, 171120892
  %18373 = sub i32 %18372, %18368
  %18374 = sub i32 %18373, 171120892
  %_5332 = sub i32 %18367, %18368
  %gen5333 = mul i32 %18374, %18368
  %18375 = sub i32 0, %18367
  %18376 = add i32 0, %18375
  %_5334 = sub i32 0, %18367
  %18377 = sub i32 %18376, 319429437
  %18378 = add i32 %18377, %18368
  %18379 = add i32 %18378, 319429437
  %gen5335 = add i32 %18376, %18368
  %_5336 = shl i32 %18367, %18368
  %18380 = sub i32 0, %18368
  %18381 = add i32 %18367, %18380
  %sub1765alteredBB = sub nsw i32 %18367, %18368
  store i32 %18381, i32* %s, align 4
  %18382 = load i32, i32* %s, align 4
  %call1766alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18382)
  store i32 1550970550, i32* %switchVar
  br label %loopEnd

originalBB5340alteredBB:                          ; preds = %loopEntry
  %18383 = load i32, i32* %e, align 4
  %cmp1784alteredBB = icmp eq i32 %18383, 1
  store i32 162786023, i32* %switchVar
  br label %loopEnd

originalBB5344alteredBB:                          ; preds = %loopEntry
  %18384 = load i32, i32* %s, align 4
  %18385 = add i32 0, -1036167052
  %18386 = sub i32 %18385, %18384
  %18387 = sub i32 %18386, -1036167052
  %_5345 = sub i32 0, %18384
  %18388 = sub i32 0, %18387
  %18389 = sub i32 0, 31
  %18390 = add i32 %18388, %18389
  %18391 = sub i32 0, %18390
  %gen5346 = add i32 %18387, 31
  %18392 = sub i32 0, 31
  %18393 = add i32 %18384, %18392
  %_5347 = sub i32 %18384, 31
  %gen5348 = mul i32 %18393, 31
  %18394 = sub i32 0, %18384
  %18395 = add i32 0, %18394
  %_5349 = sub i32 0, %18384
  %18396 = sub i32 0, 31
  %18397 = sub i32 %18395, %18396
  %gen5350 = add i32 %18395, 31
  %18398 = sub i32 0, 31
  %18399 = add i32 %18384, %18398
  %_5351 = sub i32 %18384, 31
  %gen5352 = mul i32 %18399, 31
  %18400 = sub i32 %18384, -2005093625
  %18401 = sub i32 %18400, 31
  %18402 = add i32 %18401, -2005093625
  %sub1786alteredBB = sub nsw i32 %18384, 31
  %18403 = sub i32 0, 1989495918
  %18404 = sub i32 %18403, %18402
  %18405 = add i32 %18404, 1989495918
  %_5353 = sub i32 0, %18402
  %18406 = sub i32 %18405, -2100189069
  %18407 = add i32 %18406, 28
  %18408 = add i32 %18407, -2100189069
  %gen5354 = add i32 %18405, 28
  %18409 = sub i32 0, 28
  %18410 = add i32 %18402, %18409
  %sub1787alteredBB = sub nsw i32 %18402, 28
  %18411 = add i32 0, 646272782
  %18412 = sub i32 %18411, %18410
  %18413 = sub i32 %18412, 646272782
  %_5355 = sub i32 0, %18410
  %18414 = sub i32 %18413, 1694026426
  %18415 = add i32 %18414, 31
  %18416 = add i32 %18415, 1694026426
  %gen5356 = add i32 %18413, 31
  %_5357 = shl i32 %18410, 31
  %_5358 = shl i32 %18410, 31
  %_5359 = shl i32 %18410, 31
  %_5360 = shl i32 %18410, 31
  %_5361 = shl i32 %18410, 31
  %18417 = sub i32 0, 31
  %18418 = add i32 %18410, %18417
  %_5362 = sub i32 %18410, 31
  %gen5363 = mul i32 %18418, 31
  %18419 = add i32 %18410, -419636472
  %18420 = sub i32 %18419, 31
  %18421 = sub i32 %18420, -419636472
  %sub1788alteredBB = sub nsw i32 %18410, 31
  %18422 = load i32, i32* %f, align 4
  %18423 = sub i32 0, 1889264377
  %18424 = sub i32 %18423, %18421
  %18425 = add i32 %18424, 1889264377
  %_5364 = sub i32 0, %18421
  %18426 = sub i32 %18425, 862796797
  %18427 = add i32 %18426, %18422
  %18428 = add i32 %18427, 862796797
  %gen5365 = add i32 %18425, %18422
  %_5366 = shl i32 %18421, %18422
  %_5367 = shl i32 %18421, %18422
  %18429 = sub i32 0, -809077883
  %18430 = sub i32 %18429, %18421
  %18431 = add i32 %18430, -809077883
  %_5368 = sub i32 0, %18421
  %18432 = sub i32 %18431, -779499436
  %18433 = add i32 %18432, %18422
  %18434 = add i32 %18433, -779499436
  %gen5369 = add i32 %18431, %18422
  %18435 = add i32 %18421, -454577285
  %18436 = sub i32 %18435, %18422
  %18437 = sub i32 %18436, -454577285
  %_5370 = sub i32 %18421, %18422
  %gen5371 = mul i32 %18437, %18422
  %18438 = sub i32 0, %18422
  %18439 = sub i32 %18421, %18438
  %add1789alteredBB = add nsw i32 %18421, %18422
  %18440 = load i32, i32* %c, align 4
  %18441 = sub i32 0, %18440
  %18442 = add i32 %18439, %18441
  %_5372 = sub i32 %18439, %18440
  %gen5373 = mul i32 %18442, %18440
  %18443 = sub i32 0, %18440
  %18444 = add i32 %18439, %18443
  %_5374 = sub i32 %18439, %18440
  %gen5375 = mul i32 %18444, %18440
  %_5376 = shl i32 %18439, %18440
  %18445 = sub i32 %18439, -1595186062
  %18446 = sub i32 %18445, %18440
  %18447 = add i32 %18446, -1595186062
  %_5377 = sub i32 %18439, %18440
  %gen5378 = mul i32 %18447, %18440
  %18448 = sub i32 0, %18440
  %18449 = add i32 %18439, %18448
  %sub1790alteredBB = sub nsw i32 %18439, %18440
  store i32 %18449, i32* %s, align 4
  %18450 = load i32, i32* %s, align 4
  %call1791alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18450)
  store i32 969817886, i32* %switchVar
  br label %loopEnd

originalBB5382alteredBB:                          ; preds = %loopEntry
  %18451 = load i32, i32* %s, align 4
  %18452 = sub i32 0, 31
  %18453 = add i32 %18451, %18452
  %_5383 = sub i32 %18451, 31
  %gen5384 = mul i32 %18453, 31
  %_5385 = shl i32 %18451, 31
  %18454 = add i32 %18451, -921876967
  %18455 = sub i32 %18454, 31
  %18456 = sub i32 %18455, -921876967
  %_5386 = sub i32 %18451, 31
  %gen5387 = mul i32 %18456, 31
  %18457 = add i32 %18451, 1708231447
  %18458 = sub i32 %18457, 31
  %18459 = sub i32 %18458, 1708231447
  %_5388 = sub i32 %18451, 31
  %gen5389 = mul i32 %18459, 31
  %18460 = sub i32 0, 519197487
  %18461 = sub i32 %18460, %18451
  %18462 = add i32 %18461, 519197487
  %_5390 = sub i32 0, %18451
  %18463 = add i32 %18462, -896605592
  %18464 = add i32 %18463, 31
  %18465 = sub i32 %18464, -896605592
  %gen5391 = add i32 %18462, 31
  %_5392 = shl i32 %18451, 31
  %18466 = sub i32 0, 31
  %18467 = add i32 %18451, %18466
  %_5393 = sub i32 %18451, 31
  %gen5394 = mul i32 %18467, 31
  %_5395 = shl i32 %18451, 31
  %18468 = add i32 %18451, 1455515898
  %18469 = sub i32 %18468, 31
  %18470 = sub i32 %18469, 1455515898
  %sub1803alteredBB = sub nsw i32 %18451, 31
  %18471 = load i32, i32* %f, align 4
  %_5396 = shl i32 %18470, %18471
  %18472 = sub i32 0, %18471
  %18473 = add i32 %18470, %18472
  %_5397 = sub i32 %18470, %18471
  %gen5398 = mul i32 %18473, %18471
  %_5399 = shl i32 %18470, %18471
  %_5400 = shl i32 %18470, %18471
  %18474 = sub i32 0, -284239542
  %18475 = sub i32 %18474, %18470
  %18476 = add i32 %18475, -284239542
  %_5401 = sub i32 0, %18470
  %18477 = sub i32 0, %18476
  %18478 = sub i32 0, %18471
  %18479 = add i32 %18477, %18478
  %18480 = sub i32 0, %18479
  %gen5402 = add i32 %18476, %18471
  %18481 = sub i32 0, -1152986985
  %18482 = sub i32 %18481, %18470
  %18483 = add i32 %18482, -1152986985
  %_5403 = sub i32 0, %18470
  %18484 = sub i32 %18483, -2066165564
  %18485 = add i32 %18484, %18471
  %18486 = add i32 %18485, -2066165564
  %gen5404 = add i32 %18483, %18471
  %18487 = sub i32 %18470, -2032308500
  %18488 = sub i32 %18487, %18471
  %18489 = add i32 %18488, -2032308500
  %_5405 = sub i32 %18470, %18471
  %gen5406 = mul i32 %18489, %18471
  %18490 = sub i32 0, %18471
  %18491 = sub i32 %18470, %18490
  %add1804alteredBB = add nsw i32 %18470, %18471
  %18492 = load i32, i32* %c, align 4
  %18493 = sub i32 0, %18492
  %18494 = add i32 %18491, %18493
  %_5407 = sub i32 %18491, %18492
  %gen5408 = mul i32 %18494, %18492
  %18495 = add i32 %18491, -1512600498
  %18496 = sub i32 %18495, %18492
  %18497 = sub i32 %18496, -1512600498
  %_5409 = sub i32 %18491, %18492
  %gen5410 = mul i32 %18497, %18492
  %_5411 = shl i32 %18491, %18492
  %18498 = add i32 %18491, -669826103
  %18499 = sub i32 %18498, %18492
  %18500 = sub i32 %18499, -669826103
  %_5412 = sub i32 %18491, %18492
  %gen5413 = mul i32 %18500, %18492
  %18501 = add i32 %18491, -1986281034
  %18502 = sub i32 %18501, %18492
  %18503 = sub i32 %18502, -1986281034
  %_5414 = sub i32 %18491, %18492
  %gen5415 = mul i32 %18503, %18492
  %18504 = sub i32 %18491, 2123596887
  %18505 = sub i32 %18504, %18492
  %18506 = add i32 %18505, 2123596887
  %sub1805alteredBB = sub nsw i32 %18491, %18492
  store i32 %18506, i32* %s, align 4
  %18507 = load i32, i32* %s, align 4
  %call1806alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18507)
  store i32 -1079375611, i32* %switchVar
  br label %loopEnd

originalBB5419alteredBB:                          ; preds = %loopEntry
  %18508 = load i32, i32* %s, align 4
  %_5420 = shl i32 %18508, 30
  %18509 = sub i32 0, 871519070
  %18510 = sub i32 %18509, %18508
  %18511 = add i32 %18510, 871519070
  %_5421 = sub i32 0, %18508
  %18512 = sub i32 0, 30
  %18513 = sub i32 %18511, %18512
  %gen5422 = add i32 %18511, 30
  %18514 = add i32 %18508, 1008976036
  %18515 = sub i32 %18514, 30
  %18516 = sub i32 %18515, 1008976036
  %_5423 = sub i32 %18508, 30
  %gen5424 = mul i32 %18516, 30
  %18517 = add i32 %18508, -950623330
  %18518 = sub i32 %18517, 30
  %18519 = sub i32 %18518, -950623330
  %_5425 = sub i32 %18508, 30
  %gen5426 = mul i32 %18519, 30
  %18520 = sub i32 0, 30
  %18521 = add i32 %18508, %18520
  %_5427 = sub i32 %18508, 30
  %gen5428 = mul i32 %18521, 30
  %_5429 = shl i32 %18508, 30
  %18522 = add i32 %18508, -1976576130
  %18523 = add i32 %18522, 30
  %18524 = sub i32 %18523, -1976576130
  %add1817alteredBB = add nsw i32 %18508, 30
  %_5430 = shl i32 %18524, 31
  %18525 = add i32 %18524, -1739135911
  %18526 = add i32 %18525, 31
  %18527 = sub i32 %18526, -1739135911
  %add1818alteredBB = add nsw i32 %18524, 31
  %18528 = load i32, i32* %f, align 4
  %18529 = add i32 0, -360375481
  %18530 = sub i32 %18529, %18527
  %18531 = sub i32 %18530, -360375481
  %_5431 = sub i32 0, %18527
  %18532 = sub i32 %18531, -148755725
  %18533 = add i32 %18532, %18528
  %18534 = add i32 %18533, -148755725
  %gen5432 = add i32 %18531, %18528
  %18535 = sub i32 %18527, 1865242789
  %18536 = sub i32 %18535, %18528
  %18537 = add i32 %18536, 1865242789
  %_5433 = sub i32 %18527, %18528
  %gen5434 = mul i32 %18537, %18528
  %_5435 = shl i32 %18527, %18528
  %_5436 = shl i32 %18527, %18528
  %18538 = sub i32 0, 809038304
  %18539 = sub i32 %18538, %18527
  %18540 = add i32 %18539, 809038304
  %_5437 = sub i32 0, %18527
  %18541 = sub i32 0, %18528
  %18542 = sub i32 %18540, %18541
  %gen5438 = add i32 %18540, %18528
  %18543 = add i32 %18527, -654526644
  %18544 = sub i32 %18543, %18528
  %18545 = sub i32 %18544, -654526644
  %_5439 = sub i32 %18527, %18528
  %gen5440 = mul i32 %18545, %18528
  %_5441 = shl i32 %18527, %18528
  %18546 = sub i32 %18527, -506801206
  %18547 = add i32 %18546, %18528
  %18548 = add i32 %18547, -506801206
  %add1819alteredBB = add nsw i32 %18527, %18528
  %18549 = load i32, i32* %c, align 4
  %_5442 = shl i32 %18548, %18549
  %18550 = add i32 %18548, 1860140430
  %18551 = sub i32 %18550, %18549
  %18552 = sub i32 %18551, 1860140430
  %sub1820alteredBB = sub nsw i32 %18548, %18549
  store i32 %18552, i32* %s, align 4
  %18553 = load i32, i32* %s, align 4
  %call1821alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18553)
  store i32 207489504, i32* %switchVar
  br label %loopEnd

originalBB5446alteredBB:                          ; preds = %loopEntry
  %18554 = load i32, i32* %s, align 4
  %18555 = add i32 %18554, 1200221127
  %18556 = sub i32 %18555, 30
  %18557 = sub i32 %18556, 1200221127
  %_5447 = sub i32 %18554, 30
  %gen5448 = mul i32 %18557, 30
  %18558 = sub i32 %18554, -518101016
  %18559 = add i32 %18558, 30
  %18560 = add i32 %18559, -518101016
  %add1825alteredBB = add nsw i32 %18554, 30
  %_5449 = shl i32 %18560, 31
  %_5450 = shl i32 %18560, 31
  %_5451 = shl i32 %18560, 31
  %18561 = sub i32 0, -1622839273
  %18562 = sub i32 %18561, %18560
  %18563 = add i32 %18562, -1622839273
  %_5452 = sub i32 0, %18560
  %18564 = add i32 %18563, -1833031182
  %18565 = add i32 %18564, 31
  %18566 = sub i32 %18565, -1833031182
  %gen5453 = add i32 %18563, 31
  %_5454 = shl i32 %18560, 31
  %_5455 = shl i32 %18560, 31
  %18567 = sub i32 0, 31
  %18568 = add i32 %18560, %18567
  %_5456 = sub i32 %18560, 31
  %gen5457 = mul i32 %18568, 31
  %_5458 = shl i32 %18560, 31
  %18569 = add i32 %18560, 2143999576
  %18570 = sub i32 %18569, 31
  %18571 = sub i32 %18570, 2143999576
  %_5459 = sub i32 %18560, 31
  %gen5460 = mul i32 %18571, 31
  %18572 = sub i32 0, %18560
  %18573 = sub i32 0, 31
  %18574 = add i32 %18572, %18573
  %18575 = sub i32 0, %18574
  %add1826alteredBB = add nsw i32 %18560, 31
  %18576 = sub i32 %18575, -2056812607
  %18577 = add i32 %18576, 30
  %18578 = add i32 %18577, -2056812607
  %add1827alteredBB = add nsw i32 %18575, 30
  %18579 = load i32, i32* %f, align 4
  %18580 = sub i32 0, %18578
  %18581 = add i32 0, %18580
  %_5461 = sub i32 0, %18578
  %18582 = sub i32 0, %18581
  %18583 = sub i32 0, %18579
  %18584 = add i32 %18582, %18583
  %18585 = sub i32 0, %18584
  %gen5462 = add i32 %18581, %18579
  %18586 = sub i32 0, %18578
  %18587 = add i32 0, %18586
  %_5463 = sub i32 0, %18578
  %18588 = sub i32 %18587, 595212898
  %18589 = add i32 %18588, %18579
  %18590 = add i32 %18589, 595212898
  %gen5464 = add i32 %18587, %18579
  %_5465 = shl i32 %18578, %18579
  %_5466 = shl i32 %18578, %18579
  %18591 = sub i32 0, %18579
  %18592 = add i32 %18578, %18591
  %_5467 = sub i32 %18578, %18579
  %gen5468 = mul i32 %18592, %18579
  %_5469 = shl i32 %18578, %18579
  %_5470 = shl i32 %18578, %18579
  %18593 = sub i32 0, %18578
  %18594 = add i32 0, %18593
  %_5471 = sub i32 0, %18578
  %18595 = sub i32 %18594, 1336395077
  %18596 = add i32 %18595, %18579
  %18597 = add i32 %18596, 1336395077
  %gen5472 = add i32 %18594, %18579
  %_5473 = shl i32 %18578, %18579
  %18598 = sub i32 %18578, 2141783406
  %18599 = add i32 %18598, %18579
  %18600 = add i32 %18599, 2141783406
  %add1828alteredBB = add nsw i32 %18578, %18579
  %18601 = load i32, i32* %c, align 4
  %_5474 = shl i32 %18600, %18601
  %18602 = sub i32 %18600, -1462441639
  %18603 = sub i32 %18602, %18601
  %18604 = add i32 %18603, -1462441639
  %_5475 = sub i32 %18600, %18601
  %gen5476 = mul i32 %18604, %18601
  %18605 = add i32 %18600, 167948043
  %18606 = sub i32 %18605, %18601
  %18607 = sub i32 %18606, 167948043
  %sub1829alteredBB = sub nsw i32 %18600, %18601
  store i32 %18607, i32* %s, align 4
  %18608 = load i32, i32* %s, align 4
  %call1830alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18608)
  store i32 -725902932, i32* %switchVar
  br label %loopEnd

originalBB5480alteredBB:                          ; preds = %loopEntry
  %18609 = load i32, i32* %e, align 4
  %cmp1832alteredBB = icmp eq i32 %18609, 8
  store i32 -1618559572, i32* %switchVar
  br label %loopEnd

originalBB5484alteredBB:                          ; preds = %loopEntry
  %18610 = load i32, i32* %s, align 4
  %18611 = sub i32 0, 30
  %18612 = add i32 %18610, %18611
  %_5485 = sub i32 %18610, 30
  %gen5486 = mul i32 %18612, 30
  %18613 = add i32 %18610, 1365219105
  %18614 = add i32 %18613, 30
  %18615 = sub i32 %18614, 1365219105
  %add1834alteredBB = add nsw i32 %18610, 30
  %_5487 = shl i32 %18615, 31
  %18616 = sub i32 %18615, -1875927988
  %18617 = sub i32 %18616, 31
  %18618 = add i32 %18617, -1875927988
  %_5488 = sub i32 %18615, 31
  %gen5489 = mul i32 %18618, 31
  %18619 = sub i32 0, 1061998623
  %18620 = sub i32 %18619, %18615
  %18621 = add i32 %18620, 1061998623
  %_5490 = sub i32 0, %18615
  %18622 = sub i32 0, 31
  %18623 = sub i32 %18621, %18622
  %gen5491 = add i32 %18621, 31
  %18624 = sub i32 0, %18615
  %18625 = sub i32 0, 31
  %18626 = add i32 %18624, %18625
  %18627 = sub i32 0, %18626
  %add1835alteredBB = add nsw i32 %18615, 31
  %_5492 = shl i32 %18627, 30
  %18628 = add i32 %18627, 265422012
  %18629 = add i32 %18628, 30
  %18630 = sub i32 %18629, 265422012
  %add1836alteredBB = add nsw i32 %18627, 30
  %18631 = add i32 %18630, 354340694
  %18632 = sub i32 %18631, 31
  %18633 = sub i32 %18632, 354340694
  %_5493 = sub i32 %18630, 31
  %gen5494 = mul i32 %18633, 31
  %18634 = add i32 0, -824912454
  %18635 = sub i32 %18634, %18630
  %18636 = sub i32 %18635, -824912454
  %_5495 = sub i32 0, %18630
  %18637 = sub i32 0, %18636
  %18638 = sub i32 0, 31
  %18639 = add i32 %18637, %18638
  %18640 = sub i32 0, %18639
  %gen5496 = add i32 %18636, 31
  %_5497 = shl i32 %18630, 31
  %18641 = add i32 %18630, -339868544
  %18642 = sub i32 %18641, 31
  %18643 = sub i32 %18642, -339868544
  %_5498 = sub i32 %18630, 31
  %gen5499 = mul i32 %18643, 31
  %18644 = sub i32 %18630, -409277791
  %18645 = sub i32 %18644, 31
  %18646 = add i32 %18645, -409277791
  %_5500 = sub i32 %18630, 31
  %gen5501 = mul i32 %18646, 31
  %18647 = add i32 %18630, -757223083
  %18648 = sub i32 %18647, 31
  %18649 = sub i32 %18648, -757223083
  %_5502 = sub i32 %18630, 31
  %gen5503 = mul i32 %18649, 31
  %_5504 = shl i32 %18630, 31
  %18650 = sub i32 %18630, 444877596
  %18651 = add i32 %18650, 31
  %18652 = add i32 %18651, 444877596
  %add1837alteredBB = add nsw i32 %18630, 31
  %18653 = load i32, i32* %f, align 4
  %18654 = add i32 %18652, -1747982317
  %18655 = sub i32 %18654, %18653
  %18656 = sub i32 %18655, -1747982317
  %_5505 = sub i32 %18652, %18653
  %gen5506 = mul i32 %18656, %18653
  %18657 = add i32 %18652, -1672885307
  %18658 = sub i32 %18657, %18653
  %18659 = sub i32 %18658, -1672885307
  %_5507 = sub i32 %18652, %18653
  %gen5508 = mul i32 %18659, %18653
  %18660 = sub i32 0, %18653
  %18661 = add i32 %18652, %18660
  %_5509 = sub i32 %18652, %18653
  %gen5510 = mul i32 %18661, %18653
  %18662 = sub i32 0, %18653
  %18663 = add i32 %18652, %18662
  %_5511 = sub i32 %18652, %18653
  %gen5512 = mul i32 %18663, %18653
  %18664 = sub i32 0, -679911853
  %18665 = sub i32 %18664, %18652
  %18666 = add i32 %18665, -679911853
  %_5513 = sub i32 0, %18652
  %18667 = sub i32 0, %18666
  %18668 = sub i32 0, %18653
  %18669 = add i32 %18667, %18668
  %18670 = sub i32 0, %18669
  %gen5514 = add i32 %18666, %18653
  %18671 = sub i32 0, %18653
  %18672 = add i32 %18652, %18671
  %_5515 = sub i32 %18652, %18653
  %gen5516 = mul i32 %18672, %18653
  %18673 = add i32 %18652, -710898077
  %18674 = add i32 %18673, %18653
  %18675 = sub i32 %18674, -710898077
  %add1838alteredBB = add nsw i32 %18652, %18653
  %18676 = load i32, i32* %c, align 4
  %18677 = sub i32 %18675, 1780660522
  %18678 = sub i32 %18677, %18676
  %18679 = add i32 %18678, 1780660522
  %_5517 = sub i32 %18675, %18676
  %gen5518 = mul i32 %18679, %18676
  %18680 = sub i32 0, %18675
  %18681 = add i32 0, %18680
  %_5519 = sub i32 0, %18675
  %18682 = sub i32 0, %18676
  %18683 = sub i32 %18681, %18682
  %gen5520 = add i32 %18681, %18676
  %18684 = add i32 %18675, -825630957
  %18685 = sub i32 %18684, %18676
  %18686 = sub i32 %18685, -825630957
  %_5521 = sub i32 %18675, %18676
  %gen5522 = mul i32 %18686, %18676
  %18687 = sub i32 0, %18676
  %18688 = add i32 %18675, %18687
  %sub1839alteredBB = sub nsw i32 %18675, %18676
  store i32 %18688, i32* %s, align 4
  %18689 = load i32, i32* %s, align 4
  %call1840alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18689)
  store i32 1893835353, i32* %switchVar
  br label %loopEnd

originalBB5526alteredBB:                          ; preds = %loopEntry
  %18690 = load i32, i32* %e, align 4
  %cmp1842alteredBB = icmp eq i32 %18690, 9
  store i32 653057325, i32* %switchVar
  br label %loopEnd

originalBB5530alteredBB:                          ; preds = %loopEntry
  %18691 = load i32, i32* %s, align 4
  %18692 = sub i32 0, 30
  %18693 = add i32 %18691, %18692
  %_5531 = sub i32 %18691, 30
  %gen5532 = mul i32 %18693, 30
  %_5533 = shl i32 %18691, 30
  %_5534 = shl i32 %18691, 30
  %18694 = add i32 %18691, -1973182034
  %18695 = sub i32 %18694, 30
  %18696 = sub i32 %18695, -1973182034
  %_5535 = sub i32 %18691, 30
  %gen5536 = mul i32 %18696, 30
  %_5537 = shl i32 %18691, 30
  %18697 = sub i32 %18691, -1625756129
  %18698 = add i32 %18697, 30
  %18699 = add i32 %18698, -1625756129
  %add1844alteredBB = add nsw i32 %18691, 30
  %18700 = add i32 %18699, 760608457
  %18701 = sub i32 %18700, 31
  %18702 = sub i32 %18701, 760608457
  %_5538 = sub i32 %18699, 31
  %gen5539 = mul i32 %18702, 31
  %18703 = add i32 %18699, -669179940
  %18704 = sub i32 %18703, 31
  %18705 = sub i32 %18704, -669179940
  %_5540 = sub i32 %18699, 31
  %gen5541 = mul i32 %18705, 31
  %_5542 = shl i32 %18699, 31
  %18706 = sub i32 0, %18699
  %18707 = add i32 0, %18706
  %_5543 = sub i32 0, %18699
  %18708 = sub i32 0, 31
  %18709 = sub i32 %18707, %18708
  %gen5544 = add i32 %18707, 31
  %18710 = sub i32 %18699, -1720732093
  %18711 = sub i32 %18710, 31
  %18712 = add i32 %18711, -1720732093
  %_5545 = sub i32 %18699, 31
  %gen5546 = mul i32 %18712, 31
  %18713 = sub i32 %18699, -1921327319
  %18714 = add i32 %18713, 31
  %18715 = add i32 %18714, -1921327319
  %add1845alteredBB = add nsw i32 %18699, 31
  %18716 = sub i32 0, %18715
  %18717 = add i32 0, %18716
  %_5547 = sub i32 0, %18715
  %18718 = sub i32 %18717, 835687529
  %18719 = add i32 %18718, 30
  %18720 = add i32 %18719, 835687529
  %gen5548 = add i32 %18717, 30
  %_5549 = shl i32 %18715, 30
  %18721 = sub i32 %18715, -351054688
  %18722 = sub i32 %18721, 30
  %18723 = add i32 %18722, -351054688
  %_5550 = sub i32 %18715, 30
  %gen5551 = mul i32 %18723, 30
  %18724 = sub i32 0, 30
  %18725 = add i32 %18715, %18724
  %_5552 = sub i32 %18715, 30
  %gen5553 = mul i32 %18725, 30
  %18726 = sub i32 %18715, -1888871683
  %18727 = add i32 %18726, 30
  %18728 = add i32 %18727, -1888871683
  %add1846alteredBB = add nsw i32 %18715, 30
  %_5554 = shl i32 %18728, 31
  %_5555 = shl i32 %18728, 31
  %18729 = add i32 %18728, 1016515433
  %18730 = sub i32 %18729, 31
  %18731 = sub i32 %18730, 1016515433
  %_5556 = sub i32 %18728, 31
  %gen5557 = mul i32 %18731, 31
  %18732 = sub i32 0, 31
  %18733 = add i32 %18728, %18732
  %_5558 = sub i32 %18728, 31
  %gen5559 = mul i32 %18733, 31
  %18734 = add i32 0, -303546561
  %18735 = sub i32 %18734, %18728
  %18736 = sub i32 %18735, -303546561
  %_5560 = sub i32 0, %18728
  %18737 = sub i32 %18736, -307072021
  %18738 = add i32 %18737, 31
  %18739 = add i32 %18738, -307072021
  %gen5561 = add i32 %18736, 31
  %18740 = sub i32 0, 381354138
  %18741 = sub i32 %18740, %18728
  %18742 = add i32 %18741, 381354138
  %_5562 = sub i32 0, %18728
  %18743 = add i32 %18742, 727362793
  %18744 = add i32 %18743, 31
  %18745 = sub i32 %18744, 727362793
  %gen5563 = add i32 %18742, 31
  %18746 = add i32 %18728, -1648544086
  %18747 = sub i32 %18746, 31
  %18748 = sub i32 %18747, -1648544086
  %_5564 = sub i32 %18728, 31
  %gen5565 = mul i32 %18748, 31
  %_5566 = shl i32 %18728, 31
  %18749 = sub i32 0, 31
  %18750 = sub i32 %18728, %18749
  %add1847alteredBB = add nsw i32 %18728, 31
  %18751 = sub i32 0, %18750
  %18752 = add i32 0, %18751
  %_5567 = sub i32 0, %18750
  %18753 = sub i32 %18752, 938001349
  %18754 = add i32 %18753, 31
  %18755 = add i32 %18754, 938001349
  %gen5568 = add i32 %18752, 31
  %18756 = sub i32 %18750, -1771846199
  %18757 = sub i32 %18756, 31
  %18758 = add i32 %18757, -1771846199
  %_5569 = sub i32 %18750, 31
  %gen5570 = mul i32 %18758, 31
  %18759 = sub i32 %18750, -2110633239
  %18760 = sub i32 %18759, 31
  %18761 = add i32 %18760, -2110633239
  %_5571 = sub i32 %18750, 31
  %gen5572 = mul i32 %18761, 31
  %18762 = add i32 %18750, 1607312185
  %18763 = add i32 %18762, 31
  %18764 = sub i32 %18763, 1607312185
  %add1848alteredBB = add nsw i32 %18750, 31
  %18765 = load i32, i32* %f, align 4
  %_5573 = shl i32 %18764, %18765
  %18766 = sub i32 0, %18764
  %18767 = add i32 0, %18766
  %_5574 = sub i32 0, %18764
  %18768 = sub i32 0, %18765
  %18769 = sub i32 %18767, %18768
  %gen5575 = add i32 %18767, %18765
  %18770 = add i32 %18764, -1356139786
  %18771 = add i32 %18770, %18765
  %18772 = sub i32 %18771, -1356139786
  %add1849alteredBB = add nsw i32 %18764, %18765
  %18773 = load i32, i32* %c, align 4
  %18774 = sub i32 0, %18772
  %18775 = add i32 0, %18774
  %_5576 = sub i32 0, %18772
  %18776 = sub i32 %18775, -730205571
  %18777 = add i32 %18776, %18773
  %18778 = add i32 %18777, -730205571
  %gen5577 = add i32 %18775, %18773
  %_5578 = shl i32 %18772, %18773
  %18779 = sub i32 0, -1888400288
  %18780 = sub i32 %18779, %18772
  %18781 = add i32 %18780, -1888400288
  %_5579 = sub i32 0, %18772
  %18782 = sub i32 %18781, 1632051667
  %18783 = add i32 %18782, %18773
  %18784 = add i32 %18783, 1632051667
  %gen5580 = add i32 %18781, %18773
  %18785 = sub i32 %18772, 826505198
  %18786 = sub i32 %18785, %18773
  %18787 = add i32 %18786, 826505198
  %sub1850alteredBB = sub nsw i32 %18772, %18773
  store i32 %18787, i32* %s, align 4
  %18788 = load i32, i32* %s, align 4
  %call1851alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18788)
  store i32 767216833, i32* %switchVar
  br label %loopEnd

originalBB5584alteredBB:                          ; preds = %loopEntry
  %18789 = load i32, i32* %e, align 4
  %cmp1853alteredBB = icmp eq i32 %18789, 10
  store i32 288498387, i32* %switchVar
  br label %loopEnd

originalBB5588alteredBB:                          ; preds = %loopEntry
  %18790 = load i32, i32* %e, align 4
  %cmp1878alteredBB = icmp eq i32 %18790, 12
  store i32 -632235344, i32* %switchVar
  br label %loopEnd

originalBB5592alteredBB:                          ; preds = %loopEntry
  store i32 -1389971942, i32* %switchVar
  br label %loopEnd

originalBB5596alteredBB:                          ; preds = %loopEntry
  %18791 = load i32, i32* %e, align 4
  %cmp1893alteredBB = icmp eq i32 %18791, 1
  store i32 411833382, i32* %switchVar
  br label %loopEnd

originalBB5600alteredBB:                          ; preds = %loopEntry
  %18792 = load i32, i32* %s, align 4
  %18793 = sub i32 0, 30
  %18794 = add i32 %18792, %18793
  %_5601 = sub i32 %18792, 30
  %gen5602 = mul i32 %18794, 30
  %18795 = add i32 %18792, -1696423301
  %18796 = sub i32 %18795, 30
  %18797 = sub i32 %18796, -1696423301
  %_5603 = sub i32 %18792, 30
  %gen5604 = mul i32 %18797, 30
  %18798 = sub i32 0, 30
  %18799 = add i32 %18792, %18798
  %_5605 = sub i32 %18792, 30
  %gen5606 = mul i32 %18799, 30
  %18800 = sub i32 0, -414074344
  %18801 = sub i32 %18800, %18792
  %18802 = add i32 %18801, -414074344
  %_5607 = sub i32 0, %18792
  %18803 = sub i32 %18802, 739440738
  %18804 = add i32 %18803, 30
  %18805 = add i32 %18804, 739440738
  %gen5608 = add i32 %18802, 30
  %_5609 = shl i32 %18792, 30
  %18806 = sub i32 %18792, -1019629944
  %18807 = sub i32 %18806, 30
  %18808 = add i32 %18807, -1019629944
  %sub1914alteredBB = sub nsw i32 %18792, 30
  %_5610 = shl i32 %18808, 31
  %18809 = sub i32 0, 528108789
  %18810 = sub i32 %18809, %18808
  %18811 = add i32 %18810, 528108789
  %_5611 = sub i32 0, %18808
  %18812 = add i32 %18811, 733292255
  %18813 = add i32 %18812, 31
  %18814 = sub i32 %18813, 733292255
  %gen5612 = add i32 %18811, 31
  %18815 = sub i32 0, 1654241943
  %18816 = sub i32 %18815, %18808
  %18817 = add i32 %18816, 1654241943
  %_5613 = sub i32 0, %18808
  %18818 = sub i32 0, %18817
  %18819 = sub i32 0, 31
  %18820 = add i32 %18818, %18819
  %18821 = sub i32 0, %18820
  %gen5614 = add i32 %18817, 31
  %_5615 = shl i32 %18808, 31
  %_5616 = shl i32 %18808, 31
  %18822 = sub i32 0, 2024978411
  %18823 = sub i32 %18822, %18808
  %18824 = add i32 %18823, 2024978411
  %_5617 = sub i32 0, %18808
  %18825 = sub i32 0, 31
  %18826 = sub i32 %18824, %18825
  %gen5618 = add i32 %18824, 31
  %18827 = sub i32 0, 31
  %18828 = add i32 %18808, %18827
  %sub1915alteredBB = sub nsw i32 %18808, 31
  %18829 = load i32, i32* %f, align 4
  %18830 = sub i32 0, %18828
  %18831 = add i32 0, %18830
  %_5619 = sub i32 0, %18828
  %18832 = sub i32 0, %18829
  %18833 = sub i32 %18831, %18832
  %gen5620 = add i32 %18831, %18829
  %18834 = add i32 0, -1147327909
  %18835 = sub i32 %18834, %18828
  %18836 = sub i32 %18835, -1147327909
  %_5621 = sub i32 0, %18828
  %18837 = sub i32 0, %18836
  %18838 = sub i32 0, %18829
  %18839 = add i32 %18837, %18838
  %18840 = sub i32 0, %18839
  %gen5622 = add i32 %18836, %18829
  %18841 = sub i32 0, %18828
  %18842 = sub i32 0, %18829
  %18843 = add i32 %18841, %18842
  %18844 = sub i32 0, %18843
  %add1916alteredBB = add nsw i32 %18828, %18829
  %18845 = load i32, i32* %c, align 4
  %_5623 = shl i32 %18844, %18845
  %_5624 = shl i32 %18844, %18845
  %18846 = sub i32 %18844, 1915107226
  %18847 = sub i32 %18846, %18845
  %18848 = add i32 %18847, 1915107226
  %_5625 = sub i32 %18844, %18845
  %gen5626 = mul i32 %18848, %18845
  %18849 = sub i32 0, %18844
  %18850 = add i32 0, %18849
  %_5627 = sub i32 0, %18844
  %18851 = sub i32 0, %18845
  %18852 = sub i32 %18850, %18851
  %gen5628 = add i32 %18850, %18845
  %18853 = sub i32 %18844, -1056294631
  %18854 = sub i32 %18853, %18845
  %18855 = add i32 %18854, -1056294631
  %_5629 = sub i32 %18844, %18845
  %gen5630 = mul i32 %18855, %18845
  %18856 = sub i32 %18844, -1802414852
  %18857 = sub i32 %18856, %18845
  %18858 = add i32 %18857, -1802414852
  %sub1917alteredBB = sub nsw i32 %18844, %18845
  store i32 %18858, i32* %s, align 4
  %18859 = load i32, i32* %s, align 4
  %call1918alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18859)
  store i32 1921999730, i32* %switchVar
  br label %loopEnd

originalBB5634alteredBB:                          ; preds = %loopEntry
  %18860 = load i32, i32* %e, align 4
  %cmp1920alteredBB = icmp eq i32 %18860, 4
  store i32 -1432799176, i32* %switchVar
  br label %loopEnd

originalBB5638alteredBB:                          ; preds = %loopEntry
  %18861 = load i32, i32* %e, align 4
  %cmp1961alteredBB = icmp eq i32 %18861, 10
  store i32 -239076622, i32* %switchVar
  br label %loopEnd

originalBB5642alteredBB:                          ; preds = %loopEntry
  %18862 = load i32, i32* %s, align 4
  %18863 = sub i32 0, %18862
  %18864 = add i32 0, %18863
  %_5643 = sub i32 0, %18862
  %18865 = sub i32 0, %18864
  %18866 = sub i32 0, 31
  %18867 = add i32 %18865, %18866
  %18868 = sub i32 0, %18867
  %gen5644 = add i32 %18864, 31
  %18869 = sub i32 0, -744429464
  %18870 = sub i32 %18869, %18862
  %18871 = add i32 %18870, -744429464
  %_5645 = sub i32 0, %18862
  %18872 = add i32 %18871, 902135273
  %18873 = add i32 %18872, 31
  %18874 = sub i32 %18873, 902135273
  %gen5646 = add i32 %18871, 31
  %18875 = add i32 %18862, -2082538131
  %18876 = sub i32 %18875, 31
  %18877 = sub i32 %18876, -2082538131
  %_5647 = sub i32 %18862, 31
  %gen5648 = mul i32 %18877, 31
  %_5649 = shl i32 %18862, 31
  %_5650 = shl i32 %18862, 31
  %18878 = sub i32 0, 31
  %18879 = add i32 %18862, %18878
  %_5651 = sub i32 %18862, 31
  %gen5652 = mul i32 %18879, 31
  %18880 = sub i32 0, 31
  %18881 = add i32 %18862, %18880
  %_5653 = sub i32 %18862, 31
  %gen5654 = mul i32 %18881, 31
  %18882 = add i32 %18862, -15016941
  %18883 = add i32 %18882, 31
  %18884 = sub i32 %18883, -15016941
  %add1963alteredBB = add nsw i32 %18862, 31
  %18885 = add i32 0, -2099155240
  %18886 = sub i32 %18885, %18884
  %18887 = sub i32 %18886, -2099155240
  %_5655 = sub i32 0, %18884
  %18888 = sub i32 0, 30
  %18889 = sub i32 %18887, %18888
  %gen5656 = add i32 %18887, 30
  %18890 = add i32 0, -1793077359
  %18891 = sub i32 %18890, %18884
  %18892 = sub i32 %18891, -1793077359
  %_5657 = sub i32 0, %18884
  %18893 = add i32 %18892, 1452574192
  %18894 = add i32 %18893, 30
  %18895 = sub i32 %18894, 1452574192
  %gen5658 = add i32 %18892, 30
  %18896 = add i32 0, 1845257187
  %18897 = sub i32 %18896, %18884
  %18898 = sub i32 %18897, 1845257187
  %_5659 = sub i32 0, %18884
  %18899 = sub i32 %18898, 193405922
  %18900 = add i32 %18899, 30
  %18901 = add i32 %18900, 193405922
  %gen5660 = add i32 %18898, 30
  %_5661 = shl i32 %18884, 30
  %18902 = add i32 %18884, -290677057
  %18903 = sub i32 %18902, 30
  %18904 = sub i32 %18903, -290677057
  %_5662 = sub i32 %18884, 30
  %gen5663 = mul i32 %18904, 30
  %_5664 = shl i32 %18884, 30
  %18905 = sub i32 %18884, 966480868
  %18906 = add i32 %18905, 30
  %18907 = add i32 %18906, 966480868
  %add1964alteredBB = add nsw i32 %18884, 30
  %_5665 = shl i32 %18907, 31
  %18908 = sub i32 %18907, 1742183763
  %18909 = sub i32 %18908, 31
  %18910 = add i32 %18909, 1742183763
  %_5666 = sub i32 %18907, 31
  %gen5667 = mul i32 %18910, 31
  %18911 = sub i32 0, 1813958924
  %18912 = sub i32 %18911, %18907
  %18913 = add i32 %18912, 1813958924
  %_5668 = sub i32 0, %18907
  %18914 = add i32 %18913, 1625733055
  %18915 = add i32 %18914, 31
  %18916 = sub i32 %18915, 1625733055
  %gen5669 = add i32 %18913, 31
  %18917 = add i32 %18907, -2075633266
  %18918 = sub i32 %18917, 31
  %18919 = sub i32 %18918, -2075633266
  %_5670 = sub i32 %18907, 31
  %gen5671 = mul i32 %18919, 31
  %_5672 = shl i32 %18907, 31
  %_5673 = shl i32 %18907, 31
  %18920 = add i32 %18907, 1932388896
  %18921 = sub i32 %18920, 31
  %18922 = sub i32 %18921, 1932388896
  %_5674 = sub i32 %18907, 31
  %gen5675 = mul i32 %18922, 31
  %18923 = add i32 0, -1605991862
  %18924 = sub i32 %18923, %18907
  %18925 = sub i32 %18924, -1605991862
  %_5676 = sub i32 0, %18907
  %18926 = sub i32 %18925, -1146744340
  %18927 = add i32 %18926, 31
  %18928 = add i32 %18927, -1146744340
  %gen5677 = add i32 %18925, 31
  %18929 = sub i32 %18907, -27084926
  %18930 = add i32 %18929, 31
  %18931 = add i32 %18930, -27084926
  %add1965alteredBB = add nsw i32 %18907, 31
  %18932 = sub i32 0, 31
  %18933 = add i32 %18931, %18932
  %_5678 = sub i32 %18931, 31
  %gen5679 = mul i32 %18933, 31
  %_5680 = shl i32 %18931, 31
  %_5681 = shl i32 %18931, 31
  %_5682 = shl i32 %18931, 31
  %18934 = sub i32 %18931, 262072019
  %18935 = add i32 %18934, 31
  %18936 = add i32 %18935, 262072019
  %add1966alteredBB = add nsw i32 %18931, 31
  %18937 = add i32 %18936, 1455862578
  %18938 = sub i32 %18937, 30
  %18939 = sub i32 %18938, 1455862578
  %_5683 = sub i32 %18936, 30
  %gen5684 = mul i32 %18939, 30
  %18940 = sub i32 %18936, 338167497
  %18941 = sub i32 %18940, 30
  %18942 = add i32 %18941, 338167497
  %_5685 = sub i32 %18936, 30
  %gen5686 = mul i32 %18942, 30
  %_5687 = shl i32 %18936, 30
  %18943 = add i32 0, -1743232049
  %18944 = sub i32 %18943, %18936
  %18945 = sub i32 %18944, -1743232049
  %_5688 = sub i32 0, %18936
  %18946 = sub i32 0, 30
  %18947 = sub i32 %18945, %18946
  %gen5689 = add i32 %18945, 30
  %_5690 = shl i32 %18936, 30
  %18948 = add i32 %18936, 795415119
  %18949 = sub i32 %18948, 30
  %18950 = sub i32 %18949, 795415119
  %_5691 = sub i32 %18936, 30
  %gen5692 = mul i32 %18950, 30
  %18951 = sub i32 0, %18936
  %18952 = sub i32 0, 30
  %18953 = add i32 %18951, %18952
  %18954 = sub i32 0, %18953
  %add1967alteredBB = add nsw i32 %18936, 30
  %18955 = load i32, i32* %f, align 4
  %18956 = sub i32 0, 425534085
  %18957 = sub i32 %18956, %18954
  %18958 = add i32 %18957, 425534085
  %_5693 = sub i32 0, %18954
  %18959 = sub i32 0, %18955
  %18960 = sub i32 %18958, %18959
  %gen5694 = add i32 %18958, %18955
  %18961 = sub i32 0, 1348551494
  %18962 = sub i32 %18961, %18954
  %18963 = add i32 %18962, 1348551494
  %_5695 = sub i32 0, %18954
  %18964 = sub i32 0, %18963
  %18965 = sub i32 0, %18955
  %18966 = add i32 %18964, %18965
  %18967 = sub i32 0, %18966
  %gen5696 = add i32 %18963, %18955
  %18968 = sub i32 0, %18954
  %18969 = add i32 0, %18968
  %_5697 = sub i32 0, %18954
  %18970 = sub i32 %18969, 1006463952
  %18971 = add i32 %18970, %18955
  %18972 = add i32 %18971, 1006463952
  %gen5698 = add i32 %18969, %18955
  %18973 = add i32 0, 1802019952
  %18974 = sub i32 %18973, %18954
  %18975 = sub i32 %18974, 1802019952
  %_5699 = sub i32 0, %18954
  %18976 = add i32 %18975, 1127704848
  %18977 = add i32 %18976, %18955
  %18978 = sub i32 %18977, 1127704848
  %gen5700 = add i32 %18975, %18955
  %_5701 = shl i32 %18954, %18955
  %18979 = add i32 %18954, 684332091
  %18980 = add i32 %18979, %18955
  %18981 = sub i32 %18980, 684332091
  %add1968alteredBB = add nsw i32 %18954, %18955
  %18982 = load i32, i32* %c, align 4
  %18983 = sub i32 0, %18981
  %18984 = add i32 0, %18983
  %_5702 = sub i32 0, %18981
  %18985 = add i32 %18984, 131464205
  %18986 = add i32 %18985, %18982
  %18987 = sub i32 %18986, 131464205
  %gen5703 = add i32 %18984, %18982
  %_5704 = shl i32 %18981, %18982
  %18988 = sub i32 %18981, 1638314676
  %18989 = sub i32 %18988, %18982
  %18990 = add i32 %18989, 1638314676
  %sub1969alteredBB = sub nsw i32 %18981, %18982
  store i32 %18990, i32* %s, align 4
  %18991 = load i32, i32* %s, align 4
  %call1970alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %18991)
  store i32 907775263, i32* %switchVar
  br label %loopEnd

originalBB5708alteredBB:                          ; preds = %loopEntry
  %18992 = load i32, i32* %e, align 4
  %cmp2009alteredBB = icmp eq i32 %18992, 2
  store i32 797902299, i32* %switchVar
  br label %loopEnd

originalBB5712alteredBB:                          ; preds = %loopEntry
  %18993 = load i32, i32* %s, align 4
  %18994 = add i32 %18993, -987217997
  %18995 = sub i32 %18994, 31
  %18996 = sub i32 %18995, -987217997
  %sub2038alteredBB = sub nsw i32 %18993, 31
  %18997 = load i32, i32* %f, align 4
  %18998 = sub i32 0, %18997
  %18999 = add i32 %18996, %18998
  %_5713 = sub i32 %18996, %18997
  %gen5714 = mul i32 %18999, %18997
  %19000 = add i32 0, 1830754372
  %19001 = sub i32 %19000, %18996
  %19002 = sub i32 %19001, 1830754372
  %_5715 = sub i32 0, %18996
  %19003 = add i32 %19002, 1081059817
  %19004 = add i32 %19003, %18997
  %19005 = sub i32 %19004, 1081059817
  %gen5716 = add i32 %19002, %18997
  %19006 = sub i32 0, %18997
  %19007 = sub i32 %18996, %19006
  %add2039alteredBB = add nsw i32 %18996, %18997
  %19008 = load i32, i32* %c, align 4
  %19009 = sub i32 0, %19007
  %19010 = add i32 0, %19009
  %_5717 = sub i32 0, %19007
  %19011 = add i32 %19010, 905986571
  %19012 = add i32 %19011, %19008
  %19013 = sub i32 %19012, 905986571
  %gen5718 = add i32 %19010, %19008
  %19014 = sub i32 0, %19008
  %19015 = add i32 %19007, %19014
  %sub2040alteredBB = sub nsw i32 %19007, %19008
  store i32 %19015, i32* %s, align 4
  %19016 = load i32, i32* %s, align 4
  %call2041alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19016)
  store i32 -440054357, i32* %switchVar
  br label %loopEnd

originalBB5722alteredBB:                          ; preds = %loopEntry
  %19017 = load i32, i32* %e, align 4
  %cmp2043alteredBB = icmp eq i32 %19017, 7
  store i32 -1595913419, i32* %switchVar
  br label %loopEnd

originalBB5726alteredBB:                          ; preds = %loopEntry
  %19018 = load i32, i32* %s, align 4
  %19019 = sub i32 0, 30
  %19020 = add i32 %19018, %19019
  %_5727 = sub i32 %19018, 30
  %gen5728 = mul i32 %19020, 30
  %_5729 = shl i32 %19018, 30
  %19021 = add i32 0, -2120132499
  %19022 = sub i32 %19021, %19018
  %19023 = sub i32 %19022, -2120132499
  %_5730 = sub i32 0, %19018
  %19024 = sub i32 0, 30
  %19025 = sub i32 %19023, %19024
  %gen5731 = add i32 %19023, 30
  %_5732 = shl i32 %19018, 30
  %_5733 = shl i32 %19018, 30
  %19026 = sub i32 0, %19018
  %19027 = add i32 0, %19026
  %_5734 = sub i32 0, %19018
  %19028 = sub i32 0, %19027
  %19029 = sub i32 0, 30
  %19030 = add i32 %19028, %19029
  %19031 = sub i32 0, %19030
  %gen5735 = add i32 %19027, 30
  %19032 = add i32 %19018, -161858633
  %19033 = sub i32 %19032, 30
  %19034 = sub i32 %19033, -161858633
  %_5736 = sub i32 %19018, 30
  %gen5737 = mul i32 %19034, 30
  %19035 = sub i32 %19018, 725967211
  %19036 = add i32 %19035, 30
  %19037 = add i32 %19036, 725967211
  %add2052alteredBB = add nsw i32 %19018, 30
  %19038 = sub i32 %19037, -540479759
  %19039 = sub i32 %19038, 31
  %19040 = add i32 %19039, -540479759
  %_5738 = sub i32 %19037, 31
  %gen5739 = mul i32 %19040, 31
  %19041 = sub i32 %19037, 1900062630
  %19042 = sub i32 %19041, 31
  %19043 = add i32 %19042, 1900062630
  %_5740 = sub i32 %19037, 31
  %gen5741 = mul i32 %19043, 31
  %_5742 = shl i32 %19037, 31
  %19044 = sub i32 0, %19037
  %19045 = sub i32 0, 31
  %19046 = add i32 %19044, %19045
  %19047 = sub i32 0, %19046
  %add2053alteredBB = add nsw i32 %19037, 31
  %19048 = load i32, i32* %f, align 4
  %19049 = sub i32 0, %19047
  %19050 = add i32 0, %19049
  %_5743 = sub i32 0, %19047
  %19051 = add i32 %19050, -1926264817
  %19052 = add i32 %19051, %19048
  %19053 = sub i32 %19052, -1926264817
  %gen5744 = add i32 %19050, %19048
  %19054 = sub i32 %19047, -1344452544
  %19055 = sub i32 %19054, %19048
  %19056 = add i32 %19055, -1344452544
  %_5745 = sub i32 %19047, %19048
  %gen5746 = mul i32 %19056, %19048
  %19057 = sub i32 %19047, -752231092
  %19058 = sub i32 %19057, %19048
  %19059 = add i32 %19058, -752231092
  %_5747 = sub i32 %19047, %19048
  %gen5748 = mul i32 %19059, %19048
  %19060 = add i32 0, 364074290
  %19061 = sub i32 %19060, %19047
  %19062 = sub i32 %19061, 364074290
  %_5749 = sub i32 0, %19047
  %19063 = sub i32 0, %19048
  %19064 = sub i32 %19062, %19063
  %gen5750 = add i32 %19062, %19048
  %_5751 = shl i32 %19047, %19048
  %_5752 = shl i32 %19047, %19048
  %19065 = sub i32 0, -1734156086
  %19066 = sub i32 %19065, %19047
  %19067 = add i32 %19066, -1734156086
  %_5753 = sub i32 0, %19047
  %19068 = sub i32 %19067, 2093091820
  %19069 = add i32 %19068, %19048
  %19070 = add i32 %19069, 2093091820
  %gen5754 = add i32 %19067, %19048
  %19071 = add i32 0, -219597794
  %19072 = sub i32 %19071, %19047
  %19073 = sub i32 %19072, -219597794
  %_5755 = sub i32 0, %19047
  %19074 = sub i32 0, %19048
  %19075 = sub i32 %19073, %19074
  %gen5756 = add i32 %19073, %19048
  %19076 = add i32 %19047, 228365945
  %19077 = add i32 %19076, %19048
  %19078 = sub i32 %19077, 228365945
  %add2054alteredBB = add nsw i32 %19047, %19048
  %19079 = load i32, i32* %c, align 4
  %_5757 = shl i32 %19078, %19079
  %19080 = sub i32 %19078, -1038334522
  %19081 = sub i32 %19080, %19079
  %19082 = add i32 %19081, -1038334522
  %sub2055alteredBB = sub nsw i32 %19078, %19079
  store i32 %19082, i32* %s, align 4
  %19083 = load i32, i32* %s, align 4
  %call2056alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19083)
  store i32 1953581287, i32* %switchVar
  br label %loopEnd

originalBB5761alteredBB:                          ; preds = %loopEntry
  %19084 = load i32, i32* %e, align 4
  %cmp2067alteredBB = icmp eq i32 %19084, 10
  store i32 387921657, i32* %switchVar
  br label %loopEnd

originalBB5765alteredBB:                          ; preds = %loopEntry
  %19085 = load i32, i32* %e, align 4
  %cmp2077alteredBB = icmp eq i32 %19085, 11
  store i32 609328423, i32* %switchVar
  br label %loopEnd

originalBB5769alteredBB:                          ; preds = %loopEntry
  %19086 = load i32, i32* %s, align 4
  %_5770 = shl i32 %19086, 30
  %19087 = sub i32 %19086, 1853973072
  %19088 = sub i32 %19087, 30
  %19089 = add i32 %19088, 1853973072
  %_5771 = sub i32 %19086, 30
  %gen5772 = mul i32 %19089, 30
  %19090 = sub i32 0, %19086
  %19091 = add i32 0, %19090
  %_5773 = sub i32 0, %19086
  %19092 = sub i32 0, 30
  %19093 = sub i32 %19091, %19092
  %gen5774 = add i32 %19091, 30
  %19094 = sub i32 0, 30
  %19095 = sub i32 %19086, %19094
  %add2079alteredBB = add nsw i32 %19086, 30
  %19096 = add i32 %19095, -298825302
  %19097 = sub i32 %19096, 31
  %19098 = sub i32 %19097, -298825302
  %_5775 = sub i32 %19095, 31
  %gen5776 = mul i32 %19098, 31
  %_5777 = shl i32 %19095, 31
  %19099 = sub i32 0, %19095
  %19100 = add i32 0, %19099
  %_5778 = sub i32 0, %19095
  %19101 = sub i32 %19100, 2097891663
  %19102 = add i32 %19101, 31
  %19103 = add i32 %19102, 2097891663
  %gen5779 = add i32 %19100, 31
  %19104 = sub i32 0, 31
  %19105 = add i32 %19095, %19104
  %_5780 = sub i32 %19095, 31
  %gen5781 = mul i32 %19105, 31
  %19106 = sub i32 %19095, 54449732
  %19107 = add i32 %19106, 31
  %19108 = add i32 %19107, 54449732
  %add2080alteredBB = add nsw i32 %19095, 31
  %_5782 = shl i32 %19108, 31
  %19109 = add i32 0, 1859349994
  %19110 = sub i32 %19109, %19108
  %19111 = sub i32 %19110, 1859349994
  %_5783 = sub i32 0, %19108
  %19112 = sub i32 0, 31
  %19113 = sub i32 %19111, %19112
  %gen5784 = add i32 %19111, 31
  %19114 = sub i32 %19108, 16375434
  %19115 = add i32 %19114, 31
  %19116 = add i32 %19115, 16375434
  %add2081alteredBB = add nsw i32 %19108, 31
  %19117 = sub i32 %19116, -2028079010
  %19118 = sub i32 %19117, 30
  %19119 = add i32 %19118, -2028079010
  %_5785 = sub i32 %19116, 30
  %gen5786 = mul i32 %19119, 30
  %19120 = sub i32 %19116, -327613244
  %19121 = add i32 %19120, 30
  %19122 = add i32 %19121, -327613244
  %add2082alteredBB = add nsw i32 %19116, 30
  %_5787 = shl i32 %19122, 31
  %19123 = add i32 0, 231312260
  %19124 = sub i32 %19123, %19122
  %19125 = sub i32 %19124, 231312260
  %_5788 = sub i32 0, %19122
  %19126 = sub i32 0, %19125
  %19127 = sub i32 0, 31
  %19128 = add i32 %19126, %19127
  %19129 = sub i32 0, %19128
  %gen5789 = add i32 %19125, 31
  %19130 = sub i32 %19122, 531372022
  %19131 = sub i32 %19130, 31
  %19132 = add i32 %19131, 531372022
  %_5790 = sub i32 %19122, 31
  %gen5791 = mul i32 %19132, 31
  %19133 = sub i32 %19122, -1953562130
  %19134 = add i32 %19133, 31
  %19135 = add i32 %19134, -1953562130
  %add2083alteredBB = add nsw i32 %19122, 31
  %19136 = load i32, i32* %f, align 4
  %19137 = sub i32 0, %19135
  %19138 = add i32 0, %19137
  %_5792 = sub i32 0, %19135
  %19139 = sub i32 %19138, -990717421
  %19140 = add i32 %19139, %19136
  %19141 = add i32 %19140, -990717421
  %gen5793 = add i32 %19138, %19136
  %19142 = add i32 0, -28294118
  %19143 = sub i32 %19142, %19135
  %19144 = sub i32 %19143, -28294118
  %_5794 = sub i32 0, %19135
  %19145 = sub i32 0, %19136
  %19146 = sub i32 %19144, %19145
  %gen5795 = add i32 %19144, %19136
  %19147 = sub i32 %19135, -93043183
  %19148 = sub i32 %19147, %19136
  %19149 = add i32 %19148, -93043183
  %_5796 = sub i32 %19135, %19136
  %gen5797 = mul i32 %19149, %19136
  %19150 = sub i32 0, -127044706
  %19151 = sub i32 %19150, %19135
  %19152 = add i32 %19151, -127044706
  %_5798 = sub i32 0, %19135
  %19153 = sub i32 0, %19152
  %19154 = sub i32 0, %19136
  %19155 = add i32 %19153, %19154
  %19156 = sub i32 0, %19155
  %gen5799 = add i32 %19152, %19136
  %19157 = sub i32 %19135, 1672746939
  %19158 = sub i32 %19157, %19136
  %19159 = add i32 %19158, 1672746939
  %_5800 = sub i32 %19135, %19136
  %gen5801 = mul i32 %19159, %19136
  %19160 = sub i32 0, %19136
  %19161 = sub i32 %19135, %19160
  %add2084alteredBB = add nsw i32 %19135, %19136
  %19162 = load i32, i32* %c, align 4
  %19163 = add i32 0, -1051166546
  %19164 = sub i32 %19163, %19161
  %19165 = sub i32 %19164, -1051166546
  %_5802 = sub i32 0, %19161
  %19166 = sub i32 %19165, 1680449727
  %19167 = add i32 %19166, %19162
  %19168 = add i32 %19167, 1680449727
  %gen5803 = add i32 %19165, %19162
  %19169 = sub i32 %19161, 120554694
  %19170 = sub i32 %19169, %19162
  %19171 = add i32 %19170, 120554694
  %_5804 = sub i32 %19161, %19162
  %gen5805 = mul i32 %19171, %19162
  %19172 = add i32 %19161, 1552557770
  %19173 = sub i32 %19172, %19162
  %19174 = sub i32 %19173, 1552557770
  %sub2085alteredBB = sub nsw i32 %19161, %19162
  store i32 %19174, i32* %s, align 4
  %19175 = load i32, i32* %s, align 4
  %call2086alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19175)
  store i32 1325271283, i32* %switchVar
  br label %loopEnd

originalBB5809alteredBB:                          ; preds = %loopEntry
  %19176 = load i32, i32* %e, align 4
  %cmp2088alteredBB = icmp eq i32 %19176, 12
  store i32 -1833791035, i32* %switchVar
  br label %loopEnd

originalBB5813alteredBB:                          ; preds = %loopEntry
  %19177 = load i32, i32* %s, align 4
  %19178 = sub i32 0, 1925197954
  %19179 = sub i32 %19178, %19177
  %19180 = add i32 %19179, 1925197954
  %_5814 = sub i32 0, %19177
  %19181 = sub i32 0, 30
  %19182 = sub i32 %19180, %19181
  %gen5815 = add i32 %19180, 30
  %_5816 = shl i32 %19177, 30
  %19183 = add i32 0, -1980082494
  %19184 = sub i32 %19183, %19177
  %19185 = sub i32 %19184, -1980082494
  %_5817 = sub i32 0, %19177
  %19186 = add i32 %19185, 2105516380
  %19187 = add i32 %19186, 30
  %19188 = sub i32 %19187, 2105516380
  %gen5818 = add i32 %19185, 30
  %_5819 = shl i32 %19177, 30
  %19189 = sub i32 0, %19177
  %19190 = add i32 0, %19189
  %_5820 = sub i32 0, %19177
  %19191 = sub i32 0, %19190
  %19192 = sub i32 0, 30
  %19193 = add i32 %19191, %19192
  %19194 = sub i32 0, %19193
  %gen5821 = add i32 %19190, 30
  %19195 = sub i32 0, %19177
  %19196 = sub i32 0, 30
  %19197 = add i32 %19195, %19196
  %19198 = sub i32 0, %19197
  %add2090alteredBB = add nsw i32 %19177, 30
  %19199 = sub i32 0, 31
  %19200 = add i32 %19198, %19199
  %_5822 = sub i32 %19198, 31
  %gen5823 = mul i32 %19200, 31
  %_5824 = shl i32 %19198, 31
  %19201 = add i32 %19198, -1483867160
  %19202 = sub i32 %19201, 31
  %19203 = sub i32 %19202, -1483867160
  %_5825 = sub i32 %19198, 31
  %gen5826 = mul i32 %19203, 31
  %19204 = sub i32 %19198, 758492959
  %19205 = sub i32 %19204, 31
  %19206 = add i32 %19205, 758492959
  %_5827 = sub i32 %19198, 31
  %gen5828 = mul i32 %19206, 31
  %19207 = add i32 0, 1340546718
  %19208 = sub i32 %19207, %19198
  %19209 = sub i32 %19208, 1340546718
  %_5829 = sub i32 0, %19198
  %19210 = add i32 %19209, 1962574247
  %19211 = add i32 %19210, 31
  %19212 = sub i32 %19211, 1962574247
  %gen5830 = add i32 %19209, 31
  %19213 = sub i32 0, -731652355
  %19214 = sub i32 %19213, %19198
  %19215 = add i32 %19214, -731652355
  %_5831 = sub i32 0, %19198
  %19216 = sub i32 0, 31
  %19217 = sub i32 %19215, %19216
  %gen5832 = add i32 %19215, 31
  %19218 = sub i32 0, 31
  %19219 = sub i32 %19198, %19218
  %add2091alteredBB = add nsw i32 %19198, 31
  %_5833 = shl i32 %19219, 31
  %19220 = sub i32 %19219, -1700286340
  %19221 = add i32 %19220, 31
  %19222 = add i32 %19221, -1700286340
  %add2092alteredBB = add nsw i32 %19219, 31
  %_5834 = shl i32 %19222, 30
  %19223 = sub i32 0, 888253368
  %19224 = sub i32 %19223, %19222
  %19225 = add i32 %19224, 888253368
  %_5835 = sub i32 0, %19222
  %19226 = add i32 %19225, -1153934230
  %19227 = add i32 %19226, 30
  %19228 = sub i32 %19227, -1153934230
  %gen5836 = add i32 %19225, 30
  %19229 = sub i32 0, -1707695490
  %19230 = sub i32 %19229, %19222
  %19231 = add i32 %19230, -1707695490
  %_5837 = sub i32 0, %19222
  %19232 = sub i32 0, 30
  %19233 = sub i32 %19231, %19232
  %gen5838 = add i32 %19231, 30
  %_5839 = shl i32 %19222, 30
  %19234 = sub i32 %19222, 784018404
  %19235 = sub i32 %19234, 30
  %19236 = add i32 %19235, 784018404
  %_5840 = sub i32 %19222, 30
  %gen5841 = mul i32 %19236, 30
  %19237 = add i32 0, 2070726326
  %19238 = sub i32 %19237, %19222
  %19239 = sub i32 %19238, 2070726326
  %_5842 = sub i32 0, %19222
  %19240 = add i32 %19239, 1224000355
  %19241 = add i32 %19240, 30
  %19242 = sub i32 %19241, 1224000355
  %gen5843 = add i32 %19239, 30
  %19243 = sub i32 0, 30
  %19244 = sub i32 %19222, %19243
  %add2093alteredBB = add nsw i32 %19222, 30
  %_5844 = shl i32 %19244, 31
  %19245 = sub i32 0, -995632327
  %19246 = sub i32 %19245, %19244
  %19247 = add i32 %19246, -995632327
  %_5845 = sub i32 0, %19244
  %19248 = add i32 %19247, 1789256184
  %19249 = add i32 %19248, 31
  %19250 = sub i32 %19249, 1789256184
  %gen5846 = add i32 %19247, 31
  %19251 = add i32 %19244, -1288391759
  %19252 = sub i32 %19251, 31
  %19253 = sub i32 %19252, -1288391759
  %_5847 = sub i32 %19244, 31
  %gen5848 = mul i32 %19253, 31
  %_5849 = shl i32 %19244, 31
  %_5850 = shl i32 %19244, 31
  %_5851 = shl i32 %19244, 31
  %19254 = sub i32 0, %19244
  %19255 = sub i32 0, 31
  %19256 = add i32 %19254, %19255
  %19257 = sub i32 0, %19256
  %add2094alteredBB = add nsw i32 %19244, 31
  %19258 = sub i32 0, 419334779
  %19259 = sub i32 %19258, %19257
  %19260 = add i32 %19259, 419334779
  %_5852 = sub i32 0, %19257
  %19261 = sub i32 0, 30
  %19262 = sub i32 %19260, %19261
  %gen5853 = add i32 %19260, 30
  %_5854 = shl i32 %19257, 30
  %_5855 = shl i32 %19257, 30
  %_5856 = shl i32 %19257, 30
  %19263 = sub i32 0, -849007447
  %19264 = sub i32 %19263, %19257
  %19265 = add i32 %19264, -849007447
  %_5857 = sub i32 0, %19257
  %19266 = sub i32 %19265, -426161165
  %19267 = add i32 %19266, 30
  %19268 = add i32 %19267, -426161165
  %gen5858 = add i32 %19265, 30
  %_5859 = shl i32 %19257, 30
  %19269 = add i32 0, -833138609
  %19270 = sub i32 %19269, %19257
  %19271 = sub i32 %19270, -833138609
  %_5860 = sub i32 0, %19257
  %19272 = add i32 %19271, 1021148972
  %19273 = add i32 %19272, 30
  %19274 = sub i32 %19273, 1021148972
  %gen5861 = add i32 %19271, 30
  %19275 = add i32 %19257, 1650993120
  %19276 = add i32 %19275, 30
  %19277 = sub i32 %19276, 1650993120
  %add2095alteredBB = add nsw i32 %19257, 30
  %19278 = load i32, i32* %f, align 4
  %19279 = add i32 %19277, -1864472509
  %19280 = sub i32 %19279, %19278
  %19281 = sub i32 %19280, -1864472509
  %_5862 = sub i32 %19277, %19278
  %gen5863 = mul i32 %19281, %19278
  %_5864 = shl i32 %19277, %19278
  %19282 = add i32 %19277, 2140981533
  %19283 = sub i32 %19282, %19278
  %19284 = sub i32 %19283, 2140981533
  %_5865 = sub i32 %19277, %19278
  %gen5866 = mul i32 %19284, %19278
  %19285 = add i32 0, 118134959
  %19286 = sub i32 %19285, %19277
  %19287 = sub i32 %19286, 118134959
  %_5867 = sub i32 0, %19277
  %19288 = sub i32 %19287, 1027343740
  %19289 = add i32 %19288, %19278
  %19290 = add i32 %19289, 1027343740
  %gen5868 = add i32 %19287, %19278
  %_5869 = shl i32 %19277, %19278
  %19291 = add i32 %19277, 1551914904
  %19292 = add i32 %19291, %19278
  %19293 = sub i32 %19292, 1551914904
  %add2096alteredBB = add nsw i32 %19277, %19278
  %19294 = load i32, i32* %c, align 4
  %19295 = sub i32 0, -838795001
  %19296 = sub i32 %19295, %19293
  %19297 = add i32 %19296, -838795001
  %_5870 = sub i32 0, %19293
  %19298 = sub i32 0, %19297
  %19299 = sub i32 0, %19294
  %19300 = add i32 %19298, %19299
  %19301 = sub i32 0, %19300
  %gen5871 = add i32 %19297, %19294
  %19302 = sub i32 %19293, 526536831
  %19303 = sub i32 %19302, %19294
  %19304 = add i32 %19303, 526536831
  %_5872 = sub i32 %19293, %19294
  %gen5873 = mul i32 %19304, %19294
  %_5874 = shl i32 %19293, %19294
  %_5875 = shl i32 %19293, %19294
  %19305 = add i32 0, -1498606190
  %19306 = sub i32 %19305, %19293
  %19307 = sub i32 %19306, -1498606190
  %_5876 = sub i32 0, %19293
  %19308 = add i32 %19307, -1405143913
  %19309 = add i32 %19308, %19294
  %19310 = sub i32 %19309, -1405143913
  %gen5877 = add i32 %19307, %19294
  %19311 = sub i32 0, %19293
  %19312 = add i32 0, %19311
  %_5878 = sub i32 0, %19293
  %19313 = add i32 %19312, 657442648
  %19314 = add i32 %19313, %19294
  %19315 = sub i32 %19314, 657442648
  %gen5879 = add i32 %19312, %19294
  %19316 = add i32 %19293, 1237816285
  %19317 = sub i32 %19316, %19294
  %19318 = sub i32 %19317, 1237816285
  %sub2097alteredBB = sub nsw i32 %19293, %19294
  store i32 %19318, i32* %s, align 4
  %19319 = load i32, i32* %s, align 4
  %call2098alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19319)
  store i32 -1041769420, i32* %switchVar
  br label %loopEnd

originalBB5883alteredBB:                          ; preds = %loopEntry
  %19320 = load i32, i32* %s, align 4
  %19321 = sub i32 0, 30
  %19322 = add i32 %19320, %19321
  %_5884 = sub i32 %19320, 30
  %gen5885 = mul i32 %19322, 30
  %19323 = sub i32 0, 30
  %19324 = add i32 %19320, %19323
  %sub2103alteredBB = sub nsw i32 %19320, 30
  %19325 = sub i32 0, 31
  %19326 = add i32 %19324, %19325
  %_5886 = sub i32 %19324, 31
  %gen5887 = mul i32 %19326, 31
  %_5888 = shl i32 %19324, 31
  %19327 = add i32 %19324, -1158657512
  %19328 = sub i32 %19327, 31
  %19329 = sub i32 %19328, -1158657512
  %_5889 = sub i32 %19324, 31
  %gen5890 = mul i32 %19329, 31
  %19330 = add i32 %19324, -348981702
  %19331 = sub i32 %19330, 31
  %19332 = sub i32 %19331, -348981702
  %_5891 = sub i32 %19324, 31
  %gen5892 = mul i32 %19332, 31
  %19333 = sub i32 0, %19324
  %19334 = add i32 0, %19333
  %_5893 = sub i32 0, %19324
  %19335 = add i32 %19334, -1911193533
  %19336 = add i32 %19335, 31
  %19337 = sub i32 %19336, -1911193533
  %gen5894 = add i32 %19334, 31
  %19338 = sub i32 %19324, -657830178
  %19339 = sub i32 %19338, 31
  %19340 = add i32 %19339, -657830178
  %_5895 = sub i32 %19324, 31
  %gen5896 = mul i32 %19340, 31
  %_5897 = shl i32 %19324, 31
  %19341 = sub i32 %19324, 680425232
  %19342 = sub i32 %19341, 31
  %19343 = add i32 %19342, 680425232
  %sub2104alteredBB = sub nsw i32 %19324, 31
  %_5898 = shl i32 %19343, 30
  %19344 = add i32 0, -1956157283
  %19345 = sub i32 %19344, %19343
  %19346 = sub i32 %19345, -1956157283
  %_5899 = sub i32 0, %19343
  %19347 = sub i32 0, %19346
  %19348 = sub i32 0, 30
  %19349 = add i32 %19347, %19348
  %19350 = sub i32 0, %19349
  %gen5900 = add i32 %19346, 30
  %19351 = add i32 %19343, -755119149
  %19352 = sub i32 %19351, 30
  %19353 = sub i32 %19352, -755119149
  %sub2105alteredBB = sub nsw i32 %19343, 30
  %19354 = add i32 %19353, -751427398
  %19355 = sub i32 %19354, 31
  %19356 = sub i32 %19355, -751427398
  %_5901 = sub i32 %19353, 31
  %gen5902 = mul i32 %19356, 31
  %_5903 = shl i32 %19353, 31
  %19357 = add i32 0, 1441336938
  %19358 = sub i32 %19357, %19353
  %19359 = sub i32 %19358, 1441336938
  %_5904 = sub i32 0, %19353
  %19360 = sub i32 0, %19359
  %19361 = sub i32 0, 31
  %19362 = add i32 %19360, %19361
  %19363 = sub i32 0, %19362
  %gen5905 = add i32 %19359, 31
  %_5906 = shl i32 %19353, 31
  %19364 = sub i32 0, -1893340295
  %19365 = sub i32 %19364, %19353
  %19366 = add i32 %19365, -1893340295
  %_5907 = sub i32 0, %19353
  %19367 = sub i32 0, %19366
  %19368 = sub i32 0, 31
  %19369 = add i32 %19367, %19368
  %19370 = sub i32 0, %19369
  %gen5908 = add i32 %19366, 31
  %19371 = sub i32 %19353, -2049185887
  %19372 = sub i32 %19371, 31
  %19373 = add i32 %19372, -2049185887
  %sub2106alteredBB = sub nsw i32 %19353, 31
  %19374 = add i32 0, 691202902
  %19375 = sub i32 %19374, %19373
  %19376 = sub i32 %19375, 691202902
  %_5909 = sub i32 0, %19373
  %19377 = add i32 %19376, -1680180115
  %19378 = add i32 %19377, 28
  %19379 = sub i32 %19378, -1680180115
  %gen5910 = add i32 %19376, 28
  %19380 = sub i32 %19373, -800252948
  %19381 = sub i32 %19380, 28
  %19382 = add i32 %19381, -800252948
  %_5911 = sub i32 %19373, 28
  %gen5912 = mul i32 %19382, 28
  %19383 = add i32 %19373, 1091478089
  %19384 = sub i32 %19383, 28
  %19385 = sub i32 %19384, 1091478089
  %sub2107alteredBB = sub nsw i32 %19373, 28
  %19386 = sub i32 %19385, -698809562
  %19387 = sub i32 %19386, 31
  %19388 = add i32 %19387, -698809562
  %_5913 = sub i32 %19385, 31
  %gen5914 = mul i32 %19388, 31
  %19389 = sub i32 0, 31
  %19390 = add i32 %19385, %19389
  %_5915 = sub i32 %19385, 31
  %gen5916 = mul i32 %19390, 31
  %19391 = add i32 %19385, -431445342
  %19392 = sub i32 %19391, 31
  %19393 = sub i32 %19392, -431445342
  %_5917 = sub i32 %19385, 31
  %gen5918 = mul i32 %19393, 31
  %19394 = sub i32 %19385, 1447131244
  %19395 = sub i32 %19394, 31
  %19396 = add i32 %19395, 1447131244
  %sub2108alteredBB = sub nsw i32 %19385, 31
  %19397 = load i32, i32* %f, align 4
  %19398 = sub i32 0, %19397
  %19399 = add i32 %19396, %19398
  %_5919 = sub i32 %19396, %19397
  %gen5920 = mul i32 %19399, %19397
  %19400 = sub i32 0, %19396
  %19401 = add i32 0, %19400
  %_5921 = sub i32 0, %19396
  %19402 = sub i32 0, %19401
  %19403 = sub i32 0, %19397
  %19404 = add i32 %19402, %19403
  %19405 = sub i32 0, %19404
  %gen5922 = add i32 %19401, %19397
  %19406 = add i32 %19396, 1000912914
  %19407 = add i32 %19406, %19397
  %19408 = sub i32 %19407, 1000912914
  %add2109alteredBB = add nsw i32 %19396, %19397
  %19409 = load i32, i32* %c, align 4
  %19410 = sub i32 0, %19408
  %19411 = add i32 0, %19410
  %_5923 = sub i32 0, %19408
  %19412 = sub i32 %19411, -564937984
  %19413 = add i32 %19412, %19409
  %19414 = add i32 %19413, -564937984
  %gen5924 = add i32 %19411, %19409
  %19415 = add i32 %19408, -2031131865
  %19416 = sub i32 %19415, %19409
  %19417 = sub i32 %19416, -2031131865
  %sub2110alteredBB = sub nsw i32 %19408, %19409
  store i32 %19417, i32* %s, align 4
  %19418 = load i32, i32* %s, align 4
  %call2111alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19418)
  store i32 -1027535221, i32* %switchVar
  br label %loopEnd

originalBB5928alteredBB:                          ; preds = %loopEntry
  %19419 = load i32, i32* %e, align 4
  %cmp2113alteredBB = icmp eq i32 %19419, 2
  store i32 1060332048, i32* %switchVar
  br label %loopEnd

originalBB5932alteredBB:                          ; preds = %loopEntry
  %19420 = load i32, i32* %s, align 4
  %19421 = sub i32 0, 30
  %19422 = add i32 %19420, %19421
  %_5933 = sub i32 %19420, 30
  %gen5934 = mul i32 %19422, 30
  %_5935 = shl i32 %19420, 30
  %19423 = sub i32 0, 30
  %19424 = add i32 %19420, %19423
  %_5936 = sub i32 %19420, 30
  %gen5937 = mul i32 %19424, 30
  %_5938 = shl i32 %19420, 30
  %19425 = add i32 %19420, -1020244036
  %19426 = sub i32 %19425, 30
  %19427 = sub i32 %19426, -1020244036
  %_5939 = sub i32 %19420, 30
  %gen5940 = mul i32 %19427, 30
  %_5941 = shl i32 %19420, 30
  %19428 = sub i32 %19420, 1262313997
  %19429 = sub i32 %19428, 30
  %19430 = add i32 %19429, 1262313997
  %_5942 = sub i32 %19420, 30
  %gen5943 = mul i32 %19430, 30
  %19431 = add i32 %19420, -1455373140
  %19432 = sub i32 %19431, 30
  %19433 = sub i32 %19432, -1455373140
  %sub2136alteredBB = sub nsw i32 %19420, 30
  %19434 = sub i32 0, 31
  %19435 = add i32 %19433, %19434
  %_5944 = sub i32 %19433, 31
  %gen5945 = mul i32 %19435, 31
  %19436 = sub i32 0, %19433
  %19437 = add i32 0, %19436
  %_5946 = sub i32 0, %19433
  %19438 = sub i32 %19437, -255396307
  %19439 = add i32 %19438, 31
  %19440 = add i32 %19439, -255396307
  %gen5947 = add i32 %19437, 31
  %19441 = sub i32 %19433, 198651302
  %19442 = sub i32 %19441, 31
  %19443 = add i32 %19442, 198651302
  %sub2137alteredBB = sub nsw i32 %19433, 31
  %19444 = sub i32 0, %19443
  %19445 = add i32 0, %19444
  %_5948 = sub i32 0, %19443
  %19446 = sub i32 0, 30
  %19447 = sub i32 %19445, %19446
  %gen5949 = add i32 %19445, 30
  %19448 = sub i32 0, 30
  %19449 = add i32 %19443, %19448
  %_5950 = sub i32 %19443, 30
  %gen5951 = mul i32 %19449, 30
  %19450 = sub i32 0, %19443
  %19451 = add i32 0, %19450
  %_5952 = sub i32 0, %19443
  %19452 = sub i32 0, 30
  %19453 = sub i32 %19451, %19452
  %gen5953 = add i32 %19451, 30
  %19454 = sub i32 0, -978929286
  %19455 = sub i32 %19454, %19443
  %19456 = add i32 %19455, -978929286
  %_5954 = sub i32 0, %19443
  %19457 = add i32 %19456, 618152689
  %19458 = add i32 %19457, 30
  %19459 = sub i32 %19458, 618152689
  %gen5955 = add i32 %19456, 30
  %19460 = sub i32 %19443, -2094657541
  %19461 = sub i32 %19460, 30
  %19462 = add i32 %19461, -2094657541
  %_5956 = sub i32 %19443, 30
  %gen5957 = mul i32 %19462, 30
  %19463 = add i32 %19443, 2059137493
  %19464 = sub i32 %19463, 30
  %19465 = sub i32 %19464, 2059137493
  %sub2138alteredBB = sub nsw i32 %19443, 30
  %19466 = load i32, i32* %f, align 4
  %19467 = sub i32 0, %19466
  %19468 = add i32 %19465, %19467
  %_5958 = sub i32 %19465, %19466
  %gen5959 = mul i32 %19468, %19466
  %_5960 = shl i32 %19465, %19466
  %19469 = sub i32 %19465, 1325489303
  %19470 = sub i32 %19469, %19466
  %19471 = add i32 %19470, 1325489303
  %_5961 = sub i32 %19465, %19466
  %gen5962 = mul i32 %19471, %19466
  %19472 = add i32 0, -300269828
  %19473 = sub i32 %19472, %19465
  %19474 = sub i32 %19473, -300269828
  %_5963 = sub i32 0, %19465
  %19475 = sub i32 0, %19474
  %19476 = sub i32 0, %19466
  %19477 = add i32 %19475, %19476
  %19478 = sub i32 0, %19477
  %gen5964 = add i32 %19474, %19466
  %19479 = sub i32 0, %19465
  %19480 = add i32 0, %19479
  %_5965 = sub i32 0, %19465
  %19481 = sub i32 0, %19480
  %19482 = sub i32 0, %19466
  %19483 = add i32 %19481, %19482
  %19484 = sub i32 0, %19483
  %gen5966 = add i32 %19480, %19466
  %_5967 = shl i32 %19465, %19466
  %_5968 = shl i32 %19465, %19466
  %19485 = sub i32 0, %19466
  %19486 = sub i32 %19465, %19485
  %add2139alteredBB = add nsw i32 %19465, %19466
  %19487 = load i32, i32* %c, align 4
  %19488 = sub i32 0, 1713227442
  %19489 = sub i32 %19488, %19486
  %19490 = add i32 %19489, 1713227442
  %_5969 = sub i32 0, %19486
  %19491 = add i32 %19490, 270670273
  %19492 = add i32 %19491, %19487
  %19493 = sub i32 %19492, 270670273
  %gen5970 = add i32 %19490, %19487
  %19494 = sub i32 0, %19487
  %19495 = add i32 %19486, %19494
  %_5971 = sub i32 %19486, %19487
  %gen5972 = mul i32 %19495, %19487
  %19496 = add i32 %19486, -1041974560
  %19497 = sub i32 %19496, %19487
  %19498 = sub i32 %19497, -1041974560
  %sub2140alteredBB = sub nsw i32 %19486, %19487
  store i32 %19498, i32* %s, align 4
  %19499 = load i32, i32* %s, align 4
  %call2141alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19499)
  store i32 1434164456, i32* %switchVar
  br label %loopEnd

originalBB5976alteredBB:                          ; preds = %loopEntry
  %19500 = load i32, i32* %s, align 4
  %19501 = sub i32 0, 30
  %19502 = add i32 %19500, %19501
  %_5977 = sub i32 %19500, 30
  %gen5978 = mul i32 %19502, 30
  %_5979 = shl i32 %19500, 30
  %19503 = sub i32 %19500, 1506944220
  %19504 = sub i32 %19503, 30
  %19505 = add i32 %19504, 1506944220
  %sub2145alteredBB = sub nsw i32 %19500, 30
  %19506 = sub i32 %19505, 1838363504
  %19507 = sub i32 %19506, 31
  %19508 = add i32 %19507, 1838363504
  %_5980 = sub i32 %19505, 31
  %gen5981 = mul i32 %19508, 31
  %19509 = sub i32 0, %19505
  %19510 = add i32 0, %19509
  %_5982 = sub i32 0, %19505
  %19511 = add i32 %19510, 2129395413
  %19512 = add i32 %19511, 31
  %19513 = sub i32 %19512, 2129395413
  %gen5983 = add i32 %19510, 31
  %19514 = add i32 %19505, 959009909
  %19515 = sub i32 %19514, 31
  %19516 = sub i32 %19515, 959009909
  %sub2146alteredBB = sub nsw i32 %19505, 31
  %19517 = load i32, i32* %f, align 4
  %_5984 = shl i32 %19516, %19517
  %19518 = add i32 0, -1246544076
  %19519 = sub i32 %19518, %19516
  %19520 = sub i32 %19519, -1246544076
  %_5985 = sub i32 0, %19516
  %19521 = sub i32 %19520, 2104774667
  %19522 = add i32 %19521, %19517
  %19523 = add i32 %19522, 2104774667
  %gen5986 = add i32 %19520, %19517
  %_5987 = shl i32 %19516, %19517
  %19524 = sub i32 0, 687528086
  %19525 = sub i32 %19524, %19516
  %19526 = add i32 %19525, 687528086
  %_5988 = sub i32 0, %19516
  %19527 = sub i32 0, %19517
  %19528 = sub i32 %19526, %19527
  %gen5989 = add i32 %19526, %19517
  %19529 = add i32 %19516, -2038095346
  %19530 = sub i32 %19529, %19517
  %19531 = sub i32 %19530, -2038095346
  %_5990 = sub i32 %19516, %19517
  %gen5991 = mul i32 %19531, %19517
  %_5992 = shl i32 %19516, %19517
  %_5993 = shl i32 %19516, %19517
  %19532 = sub i32 0, %19517
  %19533 = sub i32 %19516, %19532
  %add2147alteredBB = add nsw i32 %19516, %19517
  %19534 = load i32, i32* %c, align 4
  %19535 = sub i32 0, %19534
  %19536 = add i32 %19533, %19535
  %_5994 = sub i32 %19533, %19534
  %gen5995 = mul i32 %19536, %19534
  %19537 = sub i32 %19533, 920605265
  %19538 = sub i32 %19537, %19534
  %19539 = add i32 %19538, 920605265
  %_5996 = sub i32 %19533, %19534
  %gen5997 = mul i32 %19539, %19534
  %_5998 = shl i32 %19533, %19534
  %_5999 = shl i32 %19533, %19534
  %_6000 = shl i32 %19533, %19534
  %19540 = sub i32 %19533, 678722312
  %19541 = sub i32 %19540, %19534
  %19542 = add i32 %19541, 678722312
  %sub2148alteredBB = sub nsw i32 %19533, %19534
  store i32 %19542, i32* %s, align 4
  %19543 = load i32, i32* %s, align 4
  %call2149alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19543)
  store i32 -544681885, i32* %switchVar
  br label %loopEnd

originalBB6004alteredBB:                          ; preds = %loopEntry
  %19544 = load i32, i32* %s, align 4
  %19545 = add i32 0, -1590717954
  %19546 = sub i32 %19545, %19544
  %19547 = sub i32 %19546, -1590717954
  %_6005 = sub i32 0, %19544
  %19548 = sub i32 %19547, 585978164
  %19549 = add i32 %19548, 30
  %19550 = add i32 %19549, 585978164
  %gen6006 = add i32 %19547, 30
  %19551 = add i32 %19544, 1823269132
  %19552 = sub i32 %19551, 30
  %19553 = sub i32 %19552, 1823269132
  %sub2153alteredBB = sub nsw i32 %19544, 30
  %19554 = load i32, i32* %f, align 4
  %19555 = sub i32 0, %19554
  %19556 = add i32 %19553, %19555
  %_6007 = sub i32 %19553, %19554
  %gen6008 = mul i32 %19556, %19554
  %_6009 = shl i32 %19553, %19554
  %19557 = sub i32 0, %19553
  %19558 = add i32 0, %19557
  %_6010 = sub i32 0, %19553
  %19559 = sub i32 %19558, -1748520458
  %19560 = add i32 %19559, %19554
  %19561 = add i32 %19560, -1748520458
  %gen6011 = add i32 %19558, %19554
  %_6012 = shl i32 %19553, %19554
  %19562 = sub i32 0, %19553
  %19563 = add i32 0, %19562
  %_6013 = sub i32 0, %19553
  %19564 = sub i32 0, %19563
  %19565 = sub i32 0, %19554
  %19566 = add i32 %19564, %19565
  %19567 = sub i32 0, %19566
  %gen6014 = add i32 %19563, %19554
  %19568 = sub i32 0, %19554
  %19569 = add i32 %19553, %19568
  %_6015 = sub i32 %19553, %19554
  %gen6016 = mul i32 %19569, %19554
  %19570 = add i32 %19553, -1252767330
  %19571 = sub i32 %19570, %19554
  %19572 = sub i32 %19571, -1252767330
  %_6017 = sub i32 %19553, %19554
  %gen6018 = mul i32 %19572, %19554
  %_6019 = shl i32 %19553, %19554
  %19573 = sub i32 0, %19554
  %19574 = add i32 %19553, %19573
  %_6020 = sub i32 %19553, %19554
  %gen6021 = mul i32 %19574, %19554
  %19575 = add i32 %19553, 82205556
  %19576 = add i32 %19575, %19554
  %19577 = sub i32 %19576, 82205556
  %add2154alteredBB = add nsw i32 %19553, %19554
  %19578 = load i32, i32* %c, align 4
  %19579 = sub i32 0, %19577
  %19580 = add i32 0, %19579
  %_6022 = sub i32 0, %19577
  %19581 = sub i32 0, %19580
  %19582 = sub i32 0, %19578
  %19583 = add i32 %19581, %19582
  %19584 = sub i32 0, %19583
  %gen6023 = add i32 %19580, %19578
  %19585 = sub i32 0, %19577
  %19586 = add i32 0, %19585
  %_6024 = sub i32 0, %19577
  %19587 = sub i32 0, %19578
  %19588 = sub i32 %19586, %19587
  %gen6025 = add i32 %19586, %19578
  %19589 = sub i32 0, %19577
  %19590 = add i32 0, %19589
  %_6026 = sub i32 0, %19577
  %19591 = sub i32 0, %19590
  %19592 = sub i32 0, %19578
  %19593 = add i32 %19591, %19592
  %19594 = sub i32 0, %19593
  %gen6027 = add i32 %19590, %19578
  %19595 = sub i32 %19577, 1821280014
  %19596 = sub i32 %19595, %19578
  %19597 = add i32 %19596, 1821280014
  %_6028 = sub i32 %19577, %19578
  %gen6029 = mul i32 %19597, %19578
  %_6030 = shl i32 %19577, %19578
  %_6031 = shl i32 %19577, %19578
  %19598 = sub i32 %19577, -1723890923
  %19599 = sub i32 %19598, %19578
  %19600 = add i32 %19599, -1723890923
  %_6032 = sub i32 %19577, %19578
  %gen6033 = mul i32 %19600, %19578
  %19601 = sub i32 %19577, 182240495
  %19602 = sub i32 %19601, %19578
  %19603 = add i32 %19602, 182240495
  %sub2155alteredBB = sub nsw i32 %19577, %19578
  store i32 %19603, i32* %s, align 4
  %19604 = load i32, i32* %s, align 4
  %call2156alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19604)
  store i32 -1107273224, i32* %switchVar
  br label %loopEnd

originalBB6037alteredBB:                          ; preds = %loopEntry
  %19605 = load i32, i32* %s, align 4
  %19606 = add i32 0, -1273995915
  %19607 = sub i32 %19606, %19605
  %19608 = sub i32 %19607, -1273995915
  %_6038 = sub i32 0, %19605
  %19609 = add i32 %19608, -948403077
  %19610 = add i32 %19609, 31
  %19611 = sub i32 %19610, -948403077
  %gen6039 = add i32 %19608, 31
  %19612 = sub i32 %19605, -1356054971
  %19613 = sub i32 %19612, 31
  %19614 = add i32 %19613, -1356054971
  %_6040 = sub i32 %19605, 31
  %gen6041 = mul i32 %19614, 31
  %_6042 = shl i32 %19605, 31
  %_6043 = shl i32 %19605, 31
  %19615 = sub i32 0, %19605
  %19616 = add i32 0, %19615
  %_6044 = sub i32 0, %19605
  %19617 = sub i32 %19616, -774873786
  %19618 = add i32 %19617, 31
  %19619 = add i32 %19618, -774873786
  %gen6045 = add i32 %19616, 31
  %19620 = add i32 %19605, 468524995
  %19621 = sub i32 %19620, 31
  %19622 = sub i32 %19621, 468524995
  %_6046 = sub i32 %19605, 31
  %gen6047 = mul i32 %19622, 31
  %19623 = add i32 0, -638620107
  %19624 = sub i32 %19623, %19605
  %19625 = sub i32 %19624, -638620107
  %_6048 = sub i32 0, %19605
  %19626 = sub i32 0, %19625
  %19627 = sub i32 0, 31
  %19628 = add i32 %19626, %19627
  %19629 = sub i32 0, %19628
  %gen6049 = add i32 %19625, 31
  %19630 = sub i32 0, 31
  %19631 = sub i32 %19605, %19630
  %add2160alteredBB = add nsw i32 %19605, 31
  %19632 = load i32, i32* %f, align 4
  %_6050 = shl i32 %19631, %19632
  %19633 = sub i32 0, %19632
  %19634 = add i32 %19631, %19633
  %_6051 = sub i32 %19631, %19632
  %gen6052 = mul i32 %19634, %19632
  %19635 = sub i32 %19631, 341613323
  %19636 = sub i32 %19635, %19632
  %19637 = add i32 %19636, 341613323
  %_6053 = sub i32 %19631, %19632
  %gen6054 = mul i32 %19637, %19632
  %19638 = sub i32 %19631, -1279958647
  %19639 = add i32 %19638, %19632
  %19640 = add i32 %19639, -1279958647
  %add2161alteredBB = add nsw i32 %19631, %19632
  %19641 = load i32, i32* %c, align 4
  %19642 = add i32 0, 704738530
  %19643 = sub i32 %19642, %19640
  %19644 = sub i32 %19643, 704738530
  %_6055 = sub i32 0, %19640
  %19645 = sub i32 0, %19641
  %19646 = sub i32 %19644, %19645
  %gen6056 = add i32 %19644, %19641
  %19647 = sub i32 0, %19641
  %19648 = add i32 %19640, %19647
  %_6057 = sub i32 %19640, %19641
  %gen6058 = mul i32 %19648, %19641
  %19649 = sub i32 0, %19641
  %19650 = add i32 %19640, %19649
  %_6059 = sub i32 %19640, %19641
  %gen6060 = mul i32 %19650, %19641
  %19651 = add i32 0, -1647442394
  %19652 = sub i32 %19651, %19640
  %19653 = sub i32 %19652, -1647442394
  %_6061 = sub i32 0, %19640
  %19654 = sub i32 0, %19641
  %19655 = sub i32 %19653, %19654
  %gen6062 = add i32 %19653, %19641
  %19656 = add i32 0, 1642787448
  %19657 = sub i32 %19656, %19640
  %19658 = sub i32 %19657, 1642787448
  %_6063 = sub i32 0, %19640
  %19659 = sub i32 %19658, -352097941
  %19660 = add i32 %19659, %19641
  %19661 = add i32 %19660, -352097941
  %gen6064 = add i32 %19658, %19641
  %19662 = add i32 %19640, 1922997550
  %19663 = sub i32 %19662, %19641
  %19664 = sub i32 %19663, 1922997550
  %sub2162alteredBB = sub nsw i32 %19640, %19641
  store i32 %19664, i32* %s, align 4
  %19665 = load i32, i32* %s, align 4
  %call2163alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19665)
  store i32 1529332866, i32* %switchVar
  br label %loopEnd

originalBB6068alteredBB:                          ; preds = %loopEntry
  %19666 = load i32, i32* %e, align 4
  %cmp2165alteredBB = icmp eq i32 %19666, 9
  store i32 840263231, i32* %switchVar
  br label %loopEnd

originalBB6072alteredBB:                          ; preds = %loopEntry
  %19667 = load i32, i32* %s, align 4
  %19668 = sub i32 0, -1381897218
  %19669 = sub i32 %19668, %19667
  %19670 = add i32 %19669, -1381897218
  %_6073 = sub i32 0, %19667
  %19671 = sub i32 %19670, -703342496
  %19672 = add i32 %19671, 31
  %19673 = add i32 %19672, -703342496
  %gen6074 = add i32 %19670, 31
  %19674 = sub i32 %19667, 190029366
  %19675 = add i32 %19674, 31
  %19676 = add i32 %19675, 190029366
  %add2167alteredBB = add nsw i32 %19667, 31
  %_6075 = shl i32 %19676, 31
  %_6076 = shl i32 %19676, 31
  %19677 = add i32 0, 2119919585
  %19678 = sub i32 %19677, %19676
  %19679 = sub i32 %19678, 2119919585
  %_6077 = sub i32 0, %19676
  %19680 = sub i32 0, 31
  %19681 = sub i32 %19679, %19680
  %gen6078 = add i32 %19679, 31
  %19682 = add i32 0, -946990089
  %19683 = sub i32 %19682, %19676
  %19684 = sub i32 %19683, -946990089
  %_6079 = sub i32 0, %19676
  %19685 = sub i32 0, %19684
  %19686 = sub i32 0, 31
  %19687 = add i32 %19685, %19686
  %19688 = sub i32 0, %19687
  %gen6080 = add i32 %19684, 31
  %19689 = sub i32 0, %19676
  %19690 = sub i32 0, 31
  %19691 = add i32 %19689, %19690
  %19692 = sub i32 0, %19691
  %add2168alteredBB = add nsw i32 %19676, 31
  %19693 = load i32, i32* %f, align 4
  %19694 = sub i32 0, -1307325374
  %19695 = sub i32 %19694, %19692
  %19696 = add i32 %19695, -1307325374
  %_6081 = sub i32 0, %19692
  %19697 = add i32 %19696, -2026786060
  %19698 = add i32 %19697, %19693
  %19699 = sub i32 %19698, -2026786060
  %gen6082 = add i32 %19696, %19693
  %_6083 = shl i32 %19692, %19693
  %19700 = sub i32 %19692, -830810163
  %19701 = sub i32 %19700, %19693
  %19702 = add i32 %19701, -830810163
  %_6084 = sub i32 %19692, %19693
  %gen6085 = mul i32 %19702, %19693
  %19703 = add i32 %19692, -1352085901
  %19704 = sub i32 %19703, %19693
  %19705 = sub i32 %19704, -1352085901
  %_6086 = sub i32 %19692, %19693
  %gen6087 = mul i32 %19705, %19693
  %19706 = sub i32 0, -1942897913
  %19707 = sub i32 %19706, %19692
  %19708 = add i32 %19707, -1942897913
  %_6088 = sub i32 0, %19692
  %19709 = add i32 %19708, -1820085337
  %19710 = add i32 %19709, %19693
  %19711 = sub i32 %19710, -1820085337
  %gen6089 = add i32 %19708, %19693
  %19712 = add i32 %19692, -1445759864
  %19713 = add i32 %19712, %19693
  %19714 = sub i32 %19713, -1445759864
  %add2169alteredBB = add nsw i32 %19692, %19693
  %19715 = load i32, i32* %c, align 4
  %19716 = sub i32 0, 367566778
  %19717 = sub i32 %19716, %19714
  %19718 = add i32 %19717, 367566778
  %_6090 = sub i32 0, %19714
  %19719 = sub i32 0, %19718
  %19720 = sub i32 0, %19715
  %19721 = add i32 %19719, %19720
  %19722 = sub i32 0, %19721
  %gen6091 = add i32 %19718, %19715
  %_6092 = shl i32 %19714, %19715
  %19723 = add i32 %19714, -759312455
  %19724 = sub i32 %19723, %19715
  %19725 = sub i32 %19724, -759312455
  %_6093 = sub i32 %19714, %19715
  %gen6094 = mul i32 %19725, %19715
  %19726 = sub i32 %19714, 490563932
  %19727 = sub i32 %19726, %19715
  %19728 = add i32 %19727, 490563932
  %_6095 = sub i32 %19714, %19715
  %gen6096 = mul i32 %19728, %19715
  %_6097 = shl i32 %19714, %19715
  %19729 = sub i32 0, %19715
  %19730 = add i32 %19714, %19729
  %_6098 = sub i32 %19714, %19715
  %gen6099 = mul i32 %19730, %19715
  %19731 = sub i32 0, 1831960798
  %19732 = sub i32 %19731, %19714
  %19733 = add i32 %19732, 1831960798
  %_6100 = sub i32 0, %19714
  %19734 = sub i32 0, %19733
  %19735 = sub i32 0, %19715
  %19736 = add i32 %19734, %19735
  %19737 = sub i32 0, %19736
  %gen6101 = add i32 %19733, %19715
  %19738 = add i32 0, -1497609866
  %19739 = sub i32 %19738, %19714
  %19740 = sub i32 %19739, -1497609866
  %_6102 = sub i32 0, %19714
  %19741 = sub i32 0, %19715
  %19742 = sub i32 %19740, %19741
  %gen6103 = add i32 %19740, %19715
  %19743 = sub i32 %19714, -1626799511
  %19744 = sub i32 %19743, %19715
  %19745 = add i32 %19744, -1626799511
  %sub2170alteredBB = sub nsw i32 %19714, %19715
  store i32 %19745, i32* %s, align 4
  %19746 = load i32, i32* %s, align 4
  %call2171alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19746)
  store i32 1350273157, i32* %switchVar
  br label %loopEnd

originalBB6107alteredBB:                          ; preds = %loopEntry
  %19747 = load i32, i32* %e, align 4
  %cmp2173alteredBB = icmp eq i32 %19747, 10
  store i32 455619043, i32* %switchVar
  br label %loopEnd

originalBB6111alteredBB:                          ; preds = %loopEntry
  %19748 = load i32, i32* %s, align 4
  %_6112 = shl i32 %19748, 31
  %19749 = add i32 %19748, -260522640
  %19750 = sub i32 %19749, 31
  %19751 = sub i32 %19750, -260522640
  %_6113 = sub i32 %19748, 31
  %gen6114 = mul i32 %19751, 31
  %19752 = sub i32 0, -1517257749
  %19753 = sub i32 %19752, %19748
  %19754 = add i32 %19753, -1517257749
  %_6115 = sub i32 0, %19748
  %19755 = add i32 %19754, 1261424662
  %19756 = add i32 %19755, 31
  %19757 = sub i32 %19756, 1261424662
  %gen6116 = add i32 %19754, 31
  %_6117 = shl i32 %19748, 31
  %19758 = sub i32 0, -1787183417
  %19759 = sub i32 %19758, %19748
  %19760 = add i32 %19759, -1787183417
  %_6118 = sub i32 0, %19748
  %19761 = add i32 %19760, -889537811
  %19762 = add i32 %19761, 31
  %19763 = sub i32 %19762, -889537811
  %gen6119 = add i32 %19760, 31
  %19764 = add i32 %19748, 1763235330
  %19765 = sub i32 %19764, 31
  %19766 = sub i32 %19765, 1763235330
  %_6120 = sub i32 %19748, 31
  %gen6121 = mul i32 %19766, 31
  %19767 = add i32 0, -306901883
  %19768 = sub i32 %19767, %19748
  %19769 = sub i32 %19768, -306901883
  %_6122 = sub i32 0, %19748
  %19770 = sub i32 0, %19769
  %19771 = sub i32 0, 31
  %19772 = add i32 %19770, %19771
  %19773 = sub i32 0, %19772
  %gen6123 = add i32 %19769, 31
  %19774 = sub i32 0, 31
  %19775 = add i32 %19748, %19774
  %_6124 = sub i32 %19748, 31
  %gen6125 = mul i32 %19775, 31
  %19776 = sub i32 0, 31
  %19777 = add i32 %19748, %19776
  %_6126 = sub i32 %19748, 31
  %gen6127 = mul i32 %19777, 31
  %19778 = sub i32 0, 31
  %19779 = sub i32 %19748, %19778
  %add2184alteredBB = add nsw i32 %19748, 31
  %_6128 = shl i32 %19779, 31
  %_6129 = shl i32 %19779, 31
  %19780 = add i32 0, -1384531472
  %19781 = sub i32 %19780, %19779
  %19782 = sub i32 %19781, -1384531472
  %_6130 = sub i32 0, %19779
  %19783 = sub i32 %19782, 1552456582
  %19784 = add i32 %19783, 31
  %19785 = add i32 %19784, 1552456582
  %gen6131 = add i32 %19782, 31
  %19786 = add i32 0, 123877275
  %19787 = sub i32 %19786, %19779
  %19788 = sub i32 %19787, 123877275
  %_6132 = sub i32 0, %19779
  %19789 = sub i32 %19788, 505970750
  %19790 = add i32 %19789, 31
  %19791 = add i32 %19790, 505970750
  %gen6133 = add i32 %19788, 31
  %19792 = sub i32 0, 31
  %19793 = add i32 %19779, %19792
  %_6134 = sub i32 %19779, 31
  %gen6135 = mul i32 %19793, 31
  %_6136 = shl i32 %19779, 31
  %19794 = sub i32 0, 1977213995
  %19795 = sub i32 %19794, %19779
  %19796 = add i32 %19795, 1977213995
  %_6137 = sub i32 0, %19779
  %19797 = sub i32 0, 31
  %19798 = sub i32 %19796, %19797
  %gen6138 = add i32 %19796, 31
  %_6139 = shl i32 %19779, 31
  %19799 = sub i32 0, 31
  %19800 = sub i32 %19779, %19799
  %add2185alteredBB = add nsw i32 %19779, 31
  %_6140 = shl i32 %19800, 30
  %19801 = add i32 0, -1167075893
  %19802 = sub i32 %19801, %19800
  %19803 = sub i32 %19802, -1167075893
  %_6141 = sub i32 0, %19800
  %19804 = sub i32 %19803, -1536718482
  %19805 = add i32 %19804, 30
  %19806 = add i32 %19805, -1536718482
  %gen6142 = add i32 %19803, 30
  %19807 = add i32 %19800, -1960191370
  %19808 = sub i32 %19807, 30
  %19809 = sub i32 %19808, -1960191370
  %_6143 = sub i32 %19800, 30
  %gen6144 = mul i32 %19809, 30
  %_6145 = shl i32 %19800, 30
  %19810 = sub i32 0, %19800
  %19811 = sub i32 0, 30
  %19812 = add i32 %19810, %19811
  %19813 = sub i32 0, %19812
  %add2186alteredBB = add nsw i32 %19800, 30
  %_6146 = shl i32 %19813, 31
  %19814 = sub i32 %19813, -1013584154
  %19815 = sub i32 %19814, 31
  %19816 = add i32 %19815, -1013584154
  %_6147 = sub i32 %19813, 31
  %gen6148 = mul i32 %19816, 31
  %19817 = sub i32 0, %19813
  %19818 = add i32 0, %19817
  %_6149 = sub i32 0, %19813
  %19819 = sub i32 0, %19818
  %19820 = sub i32 0, 31
  %19821 = add i32 %19819, %19820
  %19822 = sub i32 0, %19821
  %gen6150 = add i32 %19818, 31
  %19823 = add i32 %19813, -1049284005
  %19824 = sub i32 %19823, 31
  %19825 = sub i32 %19824, -1049284005
  %_6151 = sub i32 %19813, 31
  %gen6152 = mul i32 %19825, 31
  %_6153 = shl i32 %19813, 31
  %19826 = sub i32 0, %19813
  %19827 = add i32 0, %19826
  %_6154 = sub i32 0, %19813
  %19828 = add i32 %19827, -1740339430
  %19829 = add i32 %19828, 31
  %19830 = sub i32 %19829, -1740339430
  %gen6155 = add i32 %19827, 31
  %19831 = sub i32 0, 31
  %19832 = add i32 %19813, %19831
  %_6156 = sub i32 %19813, 31
  %gen6157 = mul i32 %19832, 31
  %19833 = sub i32 0, 31
  %19834 = add i32 %19813, %19833
  %_6158 = sub i32 %19813, 31
  %gen6159 = mul i32 %19834, 31
  %19835 = sub i32 0, %19813
  %19836 = add i32 0, %19835
  %_6160 = sub i32 0, %19813
  %19837 = add i32 %19836, 1078730481
  %19838 = add i32 %19837, 31
  %19839 = sub i32 %19838, 1078730481
  %gen6161 = add i32 %19836, 31
  %19840 = add i32 %19813, -481905570
  %19841 = add i32 %19840, 31
  %19842 = sub i32 %19841, -481905570
  %add2187alteredBB = add nsw i32 %19813, 31
  %19843 = load i32, i32* %f, align 4
  %19844 = sub i32 0, %19843
  %19845 = add i32 %19842, %19844
  %_6162 = sub i32 %19842, %19843
  %gen6163 = mul i32 %19845, %19843
  %_6164 = shl i32 %19842, %19843
  %_6165 = shl i32 %19842, %19843
  %19846 = sub i32 0, %19843
  %19847 = add i32 %19842, %19846
  %_6166 = sub i32 %19842, %19843
  %gen6167 = mul i32 %19847, %19843
  %_6168 = shl i32 %19842, %19843
  %19848 = sub i32 0, %19843
  %19849 = add i32 %19842, %19848
  %_6169 = sub i32 %19842, %19843
  %gen6170 = mul i32 %19849, %19843
  %19850 = sub i32 0, %19842
  %19851 = sub i32 0, %19843
  %19852 = add i32 %19850, %19851
  %19853 = sub i32 0, %19852
  %add2188alteredBB = add nsw i32 %19842, %19843
  %19854 = load i32, i32* %c, align 4
  %_6171 = shl i32 %19853, %19854
  %_6172 = shl i32 %19853, %19854
  %19855 = sub i32 0, %19853
  %19856 = add i32 0, %19855
  %_6173 = sub i32 0, %19853
  %19857 = sub i32 0, %19854
  %19858 = sub i32 %19856, %19857
  %gen6174 = add i32 %19856, %19854
  %_6175 = shl i32 %19853, %19854
  %19859 = sub i32 0, 1514863538
  %19860 = sub i32 %19859, %19853
  %19861 = add i32 %19860, 1514863538
  %_6176 = sub i32 0, %19853
  %19862 = sub i32 0, %19854
  %19863 = sub i32 %19861, %19862
  %gen6177 = add i32 %19861, %19854
  %19864 = sub i32 0, %19854
  %19865 = add i32 %19853, %19864
  %sub2189alteredBB = sub nsw i32 %19853, %19854
  store i32 %19865, i32* %s, align 4
  %19866 = load i32, i32* %s, align 4
  %call2190alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19866)
  store i32 2085181241, i32* %switchVar
  br label %loopEnd

originalBB6181alteredBB:                          ; preds = %loopEntry
  %19867 = load i32, i32* %s, align 4
  %19868 = sub i32 %19867, -1524073227
  %19869 = sub i32 %19868, 31
  %19870 = add i32 %19869, -1524073227
  %_6182 = sub i32 %19867, 31
  %gen6183 = mul i32 %19870, 31
  %19871 = sub i32 0, 541903771
  %19872 = sub i32 %19871, %19867
  %19873 = add i32 %19872, 541903771
  %_6184 = sub i32 0, %19867
  %19874 = sub i32 %19873, 1054353753
  %19875 = add i32 %19874, 31
  %19876 = add i32 %19875, 1054353753
  %gen6185 = add i32 %19873, 31
  %19877 = sub i32 0, 31
  %19878 = add i32 %19867, %19877
  %sub2206alteredBB = sub nsw i32 %19867, 31
  %19879 = sub i32 0, %19878
  %19880 = add i32 0, %19879
  %_6186 = sub i32 0, %19878
  %19881 = sub i32 0, 30
  %19882 = sub i32 %19880, %19881
  %gen6187 = add i32 %19880, 30
  %_6188 = shl i32 %19878, 30
  %_6189 = shl i32 %19878, 30
  %19883 = add i32 %19878, 378584078
  %19884 = sub i32 %19883, 30
  %19885 = sub i32 %19884, 378584078
  %sub2207alteredBB = sub nsw i32 %19878, 30
  %19886 = add i32 %19885, -2065691837
  %19887 = sub i32 %19886, 31
  %19888 = sub i32 %19887, -2065691837
  %_6190 = sub i32 %19885, 31
  %gen6191 = mul i32 %19888, 31
  %_6192 = shl i32 %19885, 31
  %19889 = add i32 %19885, -1513328892
  %19890 = sub i32 %19889, 31
  %19891 = sub i32 %19890, -1513328892
  %_6193 = sub i32 %19885, 31
  %gen6194 = mul i32 %19891, 31
  %19892 = sub i32 0, %19885
  %19893 = add i32 0, %19892
  %_6195 = sub i32 0, %19885
  %19894 = sub i32 0, %19893
  %19895 = sub i32 0, 31
  %19896 = add i32 %19894, %19895
  %19897 = sub i32 0, %19896
  %gen6196 = add i32 %19893, 31
  %19898 = add i32 %19885, -591951254
  %19899 = sub i32 %19898, 31
  %19900 = sub i32 %19899, -591951254
  %sub2208alteredBB = sub nsw i32 %19885, 31
  %19901 = add i32 0, 1646378433
  %19902 = sub i32 %19901, %19900
  %19903 = sub i32 %19902, 1646378433
  %_6197 = sub i32 0, %19900
  %19904 = sub i32 0, %19903
  %19905 = sub i32 0, 30
  %19906 = add i32 %19904, %19905
  %19907 = sub i32 0, %19906
  %gen6198 = add i32 %19903, 30
  %19908 = sub i32 %19900, -1940164405
  %19909 = sub i32 %19908, 30
  %19910 = add i32 %19909, -1940164405
  %sub2209alteredBB = sub nsw i32 %19900, 30
  %_6199 = shl i32 %19910, 31
  %19911 = add i32 %19910, -1908591991
  %19912 = sub i32 %19911, 31
  %19913 = sub i32 %19912, -1908591991
  %_6200 = sub i32 %19910, 31
  %gen6201 = mul i32 %19913, 31
  %19914 = sub i32 0, 31
  %19915 = add i32 %19910, %19914
  %_6202 = sub i32 %19910, 31
  %gen6203 = mul i32 %19915, 31
  %19916 = add i32 %19910, -1494352419
  %19917 = sub i32 %19916, 31
  %19918 = sub i32 %19917, -1494352419
  %_6204 = sub i32 %19910, 31
  %gen6205 = mul i32 %19918, 31
  %_6206 = shl i32 %19910, 31
  %19919 = sub i32 0, 31
  %19920 = add i32 %19910, %19919
  %sub2210alteredBB = sub nsw i32 %19910, 31
  %_6207 = shl i32 %19920, 28
  %19921 = sub i32 0, 28
  %19922 = add i32 %19920, %19921
  %_6208 = sub i32 %19920, 28
  %gen6209 = mul i32 %19922, 28
  %_6210 = shl i32 %19920, 28
  %19923 = sub i32 %19920, 379215387
  %19924 = sub i32 %19923, 28
  %19925 = add i32 %19924, 379215387
  %_6211 = sub i32 %19920, 28
  %gen6212 = mul i32 %19925, 28
  %19926 = add i32 %19920, 1342976346
  %19927 = sub i32 %19926, 28
  %19928 = sub i32 %19927, 1342976346
  %sub2211alteredBB = sub nsw i32 %19920, 28
  %19929 = add i32 %19928, -820642557
  %19930 = sub i32 %19929, 31
  %19931 = sub i32 %19930, -820642557
  %_6213 = sub i32 %19928, 31
  %gen6214 = mul i32 %19931, 31
  %19932 = add i32 %19928, 1495652377
  %19933 = sub i32 %19932, 31
  %19934 = sub i32 %19933, 1495652377
  %_6215 = sub i32 %19928, 31
  %gen6216 = mul i32 %19934, 31
  %19935 = sub i32 0, %19928
  %19936 = add i32 0, %19935
  %_6217 = sub i32 0, %19928
  %19937 = sub i32 %19936, -523364644
  %19938 = add i32 %19937, 31
  %19939 = add i32 %19938, -523364644
  %gen6218 = add i32 %19936, 31
  %19940 = sub i32 %19928, -981543280
  %19941 = sub i32 %19940, 31
  %19942 = add i32 %19941, -981543280
  %_6219 = sub i32 %19928, 31
  %gen6220 = mul i32 %19942, 31
  %_6221 = shl i32 %19928, 31
  %19943 = sub i32 %19928, -1808878731
  %19944 = sub i32 %19943, 31
  %19945 = add i32 %19944, -1808878731
  %sub2212alteredBB = sub nsw i32 %19928, 31
  %19946 = load i32, i32* %f, align 4
  %19947 = add i32 %19945, 997782327
  %19948 = sub i32 %19947, %19946
  %19949 = sub i32 %19948, 997782327
  %_6222 = sub i32 %19945, %19946
  %gen6223 = mul i32 %19949, %19946
  %19950 = sub i32 0, %19945
  %19951 = sub i32 0, %19946
  %19952 = add i32 %19950, %19951
  %19953 = sub i32 0, %19952
  %add2213alteredBB = add nsw i32 %19945, %19946
  %19954 = load i32, i32* %c, align 4
  %19955 = sub i32 0, 1288126389
  %19956 = sub i32 %19955, %19953
  %19957 = add i32 %19956, 1288126389
  %_6224 = sub i32 0, %19953
  %19958 = sub i32 %19957, -1526124573
  %19959 = add i32 %19958, %19954
  %19960 = add i32 %19959, -1526124573
  %gen6225 = add i32 %19957, %19954
  %19961 = sub i32 0, %19953
  %19962 = add i32 0, %19961
  %_6226 = sub i32 0, %19953
  %19963 = add i32 %19962, -676991373
  %19964 = add i32 %19963, %19954
  %19965 = sub i32 %19964, -676991373
  %gen6227 = add i32 %19962, %19954
  %19966 = add i32 %19953, -490353142
  %19967 = sub i32 %19966, %19954
  %19968 = sub i32 %19967, -490353142
  %_6228 = sub i32 %19953, %19954
  %gen6229 = mul i32 %19968, %19954
  %19969 = add i32 %19953, -58705784
  %19970 = sub i32 %19969, %19954
  %19971 = sub i32 %19970, -58705784
  %_6230 = sub i32 %19953, %19954
  %gen6231 = mul i32 %19971, %19954
  %19972 = sub i32 0, %19954
  %19973 = add i32 %19953, %19972
  %sub2214alteredBB = sub nsw i32 %19953, %19954
  store i32 %19973, i32* %s, align 4
  %19974 = load i32, i32* %s, align 4
  %call2215alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %19974)
  store i32 -305275816, i32* %switchVar
  br label %loopEnd

originalBB6235alteredBB:                          ; preds = %loopEntry
  %19975 = load i32, i32* %e, align 4
  %cmp2229alteredBB = icmp eq i32 %19975, 3
  store i32 2095728487, i32* %switchVar
  br label %loopEnd

originalBB6239alteredBB:                          ; preds = %loopEntry
  %19976 = load i32, i32* %s, align 4
  %_6240 = shl i32 %19976, 31
  %19977 = sub i32 %19976, 1729136339
  %19978 = sub i32 %19977, 31
  %19979 = add i32 %19978, 1729136339
  %_6241 = sub i32 %19976, 31
  %gen6242 = mul i32 %19979, 31
  %_6243 = shl i32 %19976, 31
  %19980 = sub i32 %19976, -1586557329
  %19981 = sub i32 %19980, 31
  %19982 = add i32 %19981, -1586557329
  %sub2242alteredBB = sub nsw i32 %19976, 31
  %19983 = add i32 0, 2045296572
  %19984 = sub i32 %19983, %19982
  %19985 = sub i32 %19984, 2045296572
  %_6244 = sub i32 0, %19982
  %19986 = sub i32 0, %19985
  %19987 = sub i32 0, 30
  %19988 = add i32 %19986, %19987
  %19989 = sub i32 0, %19988
  %gen6245 = add i32 %19985, 30
  %_6246 = shl i32 %19982, 30
  %19990 = add i32 %19982, -1193464169
  %19991 = sub i32 %19990, 30
  %19992 = sub i32 %19991, -1193464169
  %_6247 = sub i32 %19982, 30
  %gen6248 = mul i32 %19992, 30
  %19993 = sub i32 0, %19982
  %19994 = add i32 0, %19993
  %_6249 = sub i32 0, %19982
  %19995 = add i32 %19994, -142964427
  %19996 = add i32 %19995, 30
  %19997 = sub i32 %19996, -142964427
  %gen6250 = add i32 %19994, 30
  %19998 = add i32 %19982, -1298267148
  %19999 = sub i32 %19998, 30
  %20000 = sub i32 %19999, -1298267148
  %sub2243alteredBB = sub nsw i32 %19982, 30
  %_6251 = shl i32 %20000, 31
  %_6252 = shl i32 %20000, 31
  %20001 = add i32 %20000, 27096995
  %20002 = sub i32 %20001, 31
  %20003 = sub i32 %20002, 27096995
  %_6253 = sub i32 %20000, 31
  %gen6254 = mul i32 %20003, 31
  %20004 = sub i32 0, -945253476
  %20005 = sub i32 %20004, %20000
  %20006 = add i32 %20005, -945253476
  %_6255 = sub i32 0, %20000
  %20007 = add i32 %20006, 1789055218
  %20008 = add i32 %20007, 31
  %20009 = sub i32 %20008, 1789055218
  %gen6256 = add i32 %20006, 31
  %20010 = add i32 %20000, -944300051
  %20011 = sub i32 %20010, 31
  %20012 = sub i32 %20011, -944300051
  %sub2244alteredBB = sub nsw i32 %20000, 31
  %20013 = sub i32 %20012, 2003220713
  %20014 = sub i32 %20013, 30
  %20015 = add i32 %20014, 2003220713
  %_6257 = sub i32 %20012, 30
  %gen6258 = mul i32 %20015, 30
  %20016 = add i32 0, 1863704313
  %20017 = sub i32 %20016, %20012
  %20018 = sub i32 %20017, 1863704313
  %_6259 = sub i32 0, %20012
  %20019 = sub i32 0, 30
  %20020 = sub i32 %20018, %20019
  %gen6260 = add i32 %20018, 30
  %_6261 = shl i32 %20012, 30
  %20021 = add i32 0, 1290382346
  %20022 = sub i32 %20021, %20012
  %20023 = sub i32 %20022, 1290382346
  %_6262 = sub i32 0, %20012
  %20024 = sub i32 0, %20023
  %20025 = sub i32 0, 30
  %20026 = add i32 %20024, %20025
  %20027 = sub i32 0, %20026
  %gen6263 = add i32 %20023, 30
  %20028 = add i32 %20012, -2040629815
  %20029 = sub i32 %20028, 30
  %20030 = sub i32 %20029, -2040629815
  %sub2245alteredBB = sub nsw i32 %20012, 30
  %20031 = load i32, i32* %f, align 4
  %20032 = sub i32 %20030, -888817857
  %20033 = sub i32 %20032, %20031
  %20034 = add i32 %20033, -888817857
  %_6264 = sub i32 %20030, %20031
  %gen6265 = mul i32 %20034, %20031
  %20035 = add i32 0, 1846589603
  %20036 = sub i32 %20035, %20030
  %20037 = sub i32 %20036, 1846589603
  %_6266 = sub i32 0, %20030
  %20038 = sub i32 %20037, -1324611549
  %20039 = add i32 %20038, %20031
  %20040 = add i32 %20039, -1324611549
  %gen6267 = add i32 %20037, %20031
  %20041 = add i32 0, -1374004194
  %20042 = sub i32 %20041, %20030
  %20043 = sub i32 %20042, -1374004194
  %_6268 = sub i32 0, %20030
  %20044 = add i32 %20043, 1884315220
  %20045 = add i32 %20044, %20031
  %20046 = sub i32 %20045, 1884315220
  %gen6269 = add i32 %20043, %20031
  %20047 = sub i32 0, 380441602
  %20048 = sub i32 %20047, %20030
  %20049 = add i32 %20048, 380441602
  %_6270 = sub i32 0, %20030
  %20050 = add i32 %20049, -780573746
  %20051 = add i32 %20050, %20031
  %20052 = sub i32 %20051, -780573746
  %gen6271 = add i32 %20049, %20031
  %20053 = sub i32 0, -1272587915
  %20054 = sub i32 %20053, %20030
  %20055 = add i32 %20054, -1272587915
  %_6272 = sub i32 0, %20030
  %20056 = sub i32 0, %20031
  %20057 = sub i32 %20055, %20056
  %gen6273 = add i32 %20055, %20031
  %20058 = sub i32 %20030, -1572571522
  %20059 = sub i32 %20058, %20031
  %20060 = add i32 %20059, -1572571522
  %_6274 = sub i32 %20030, %20031
  %gen6275 = mul i32 %20060, %20031
  %20061 = add i32 %20030, 1549960245
  %20062 = sub i32 %20061, %20031
  %20063 = sub i32 %20062, 1549960245
  %_6276 = sub i32 %20030, %20031
  %gen6277 = mul i32 %20063, %20031
  %20064 = sub i32 0, %20031
  %20065 = sub i32 %20030, %20064
  %add2246alteredBB = add nsw i32 %20030, %20031
  %20066 = load i32, i32* %c, align 4
  %20067 = add i32 0, 1238909982
  %20068 = sub i32 %20067, %20065
  %20069 = sub i32 %20068, 1238909982
  %_6278 = sub i32 0, %20065
  %20070 = sub i32 0, %20069
  %20071 = sub i32 0, %20066
  %20072 = add i32 %20070, %20071
  %20073 = sub i32 0, %20072
  %gen6279 = add i32 %20069, %20066
  %_6280 = shl i32 %20065, %20066
  %20074 = add i32 %20065, -1096696482
  %20075 = sub i32 %20074, %20066
  %20076 = sub i32 %20075, -1096696482
  %_6281 = sub i32 %20065, %20066
  %gen6282 = mul i32 %20076, %20066
  %_6283 = shl i32 %20065, %20066
  %_6284 = shl i32 %20065, %20066
  %20077 = add i32 0, 186879732
  %20078 = sub i32 %20077, %20065
  %20079 = sub i32 %20078, 186879732
  %_6285 = sub i32 0, %20065
  %20080 = sub i32 %20079, 1135037003
  %20081 = add i32 %20080, %20066
  %20082 = add i32 %20081, 1135037003
  %gen6286 = add i32 %20079, %20066
  %20083 = sub i32 %20065, -594412579
  %20084 = sub i32 %20083, %20066
  %20085 = add i32 %20084, -594412579
  %sub2247alteredBB = sub nsw i32 %20065, %20066
  store i32 %20085, i32* %s, align 4
  %20086 = load i32, i32* %s, align 4
  %call2248alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20086)
  store i32 -677270201, i32* %switchVar
  br label %loopEnd

originalBB6290alteredBB:                          ; preds = %loopEntry
  %20087 = load i32, i32* %e, align 4
  %cmp2259alteredBB = icmp eq i32 %20087, 6
  store i32 2061015294, i32* %switchVar
  br label %loopEnd

originalBB6294alteredBB:                          ; preds = %loopEntry
  %20088 = load i32, i32* %e, align 4
  %cmp2267alteredBB = icmp eq i32 %20088, 7
  store i32 -1457616969, i32* %switchVar
  br label %loopEnd

originalBB6298alteredBB:                          ; preds = %loopEntry
  %20089 = load i32, i32* %s, align 4
  %_6299 = shl i32 %20089, 31
  %20090 = sub i32 %20089, 1531722236
  %20091 = sub i32 %20090, 31
  %20092 = add i32 %20091, 1531722236
  %_6300 = sub i32 %20089, 31
  %gen6301 = mul i32 %20092, 31
  %_6302 = shl i32 %20089, 31
  %_6303 = shl i32 %20089, 31
  %20093 = sub i32 0, 31
  %20094 = add i32 %20089, %20093
  %sub2269alteredBB = sub nsw i32 %20089, 31
  %20095 = load i32, i32* %f, align 4
  %_6304 = shl i32 %20094, %20095
  %_6305 = shl i32 %20094, %20095
  %_6306 = shl i32 %20094, %20095
  %20096 = sub i32 0, %20095
  %20097 = sub i32 %20094, %20096
  %add2270alteredBB = add nsw i32 %20094, %20095
  %20098 = load i32, i32* %c, align 4
  %20099 = add i32 0, 842515944
  %20100 = sub i32 %20099, %20097
  %20101 = sub i32 %20100, 842515944
  %_6307 = sub i32 0, %20097
  %20102 = sub i32 0, %20098
  %20103 = sub i32 %20101, %20102
  %gen6308 = add i32 %20101, %20098
  %_6309 = shl i32 %20097, %20098
  %20104 = sub i32 0, %20098
  %20105 = add i32 %20097, %20104
  %_6310 = sub i32 %20097, %20098
  %gen6311 = mul i32 %20105, %20098
  %20106 = sub i32 0, 537838049
  %20107 = sub i32 %20106, %20097
  %20108 = add i32 %20107, 537838049
  %_6312 = sub i32 0, %20097
  %20109 = sub i32 %20108, -162512557
  %20110 = add i32 %20109, %20098
  %20111 = add i32 %20110, -162512557
  %gen6313 = add i32 %20108, %20098
  %20112 = sub i32 %20097, -154328591
  %20113 = sub i32 %20112, %20098
  %20114 = add i32 %20113, -154328591
  %sub2271alteredBB = sub nsw i32 %20097, %20098
  store i32 %20114, i32* %s, align 4
  %20115 = load i32, i32* %s, align 4
  %call2272alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20115)
  store i32 -1769373257, i32* %switchVar
  br label %loopEnd

originalBB6317alteredBB:                          ; preds = %loopEntry
  %20116 = load i32, i32* %e, align 4
  %cmp2298alteredBB = icmp eq i32 %20116, 12
  store i32 214321737, i32* %switchVar
  br label %loopEnd

originalBB6321alteredBB:                          ; preds = %loopEntry
  %20117 = load i32, i32* %s, align 4
  %20118 = add i32 0, 7319107
  %20119 = sub i32 %20118, %20117
  %20120 = sub i32 %20119, 7319107
  %_6322 = sub i32 0, %20117
  %20121 = add i32 %20120, 652269376
  %20122 = add i32 %20121, 31
  %20123 = sub i32 %20122, 652269376
  %gen6323 = add i32 %20120, 31
  %20124 = sub i32 0, %20117
  %20125 = add i32 0, %20124
  %_6324 = sub i32 0, %20117
  %20126 = add i32 %20125, 984833826
  %20127 = add i32 %20126, 31
  %20128 = sub i32 %20127, 984833826
  %gen6325 = add i32 %20125, 31
  %20129 = sub i32 0, -1226077257
  %20130 = sub i32 %20129, %20117
  %20131 = add i32 %20130, -1226077257
  %_6326 = sub i32 0, %20117
  %20132 = sub i32 0, 31
  %20133 = sub i32 %20131, %20132
  %gen6327 = add i32 %20131, 31
  %20134 = sub i32 0, 1175499440
  %20135 = sub i32 %20134, %20117
  %20136 = add i32 %20135, 1175499440
  %_6328 = sub i32 0, %20117
  %20137 = add i32 %20136, 1627520823
  %20138 = add i32 %20137, 31
  %20139 = sub i32 %20138, 1627520823
  %gen6329 = add i32 %20136, 31
  %_6330 = shl i32 %20117, 31
  %_6331 = shl i32 %20117, 31
  %20140 = add i32 %20117, -1108566534
  %20141 = add i32 %20140, 31
  %20142 = sub i32 %20141, -1108566534
  %add2300alteredBB = add nsw i32 %20117, 31
  %20143 = sub i32 %20142, 1070165284
  %20144 = add i32 %20143, 30
  %20145 = add i32 %20144, 1070165284
  %add2301alteredBB = add nsw i32 %20142, 30
  %_6332 = shl i32 %20145, 31
  %_6333 = shl i32 %20145, 31
  %20146 = add i32 %20145, 129560559
  %20147 = sub i32 %20146, 31
  %20148 = sub i32 %20147, 129560559
  %_6334 = sub i32 %20145, 31
  %gen6335 = mul i32 %20148, 31
  %_6336 = shl i32 %20145, 31
  %20149 = sub i32 0, 31
  %20150 = add i32 %20145, %20149
  %_6337 = sub i32 %20145, 31
  %gen6338 = mul i32 %20150, 31
  %20151 = sub i32 0, %20145
  %20152 = sub i32 0, 31
  %20153 = add i32 %20151, %20152
  %20154 = sub i32 0, %20153
  %add2302alteredBB = add nsw i32 %20145, 31
  %20155 = add i32 %20154, -1358146443
  %20156 = sub i32 %20155, 30
  %20157 = sub i32 %20156, -1358146443
  %_6339 = sub i32 %20154, 30
  %gen6340 = mul i32 %20157, 30
  %20158 = sub i32 0, %20154
  %20159 = add i32 0, %20158
  %_6341 = sub i32 0, %20154
  %20160 = sub i32 %20159, -1602052031
  %20161 = add i32 %20160, 30
  %20162 = add i32 %20161, -1602052031
  %gen6342 = add i32 %20159, 30
  %_6343 = shl i32 %20154, 30
  %_6344 = shl i32 %20154, 30
  %20163 = add i32 %20154, 225342252
  %20164 = add i32 %20163, 30
  %20165 = sub i32 %20164, 225342252
  %add2303alteredBB = add nsw i32 %20154, 30
  %20166 = load i32, i32* %f, align 4
  %20167 = sub i32 0, 866635137
  %20168 = sub i32 %20167, %20165
  %20169 = add i32 %20168, 866635137
  %_6345 = sub i32 0, %20165
  %20170 = sub i32 0, %20166
  %20171 = sub i32 %20169, %20170
  %gen6346 = add i32 %20169, %20166
  %20172 = sub i32 0, %20166
  %20173 = sub i32 %20165, %20172
  %add2304alteredBB = add nsw i32 %20165, %20166
  %20174 = load i32, i32* %c, align 4
  %_6347 = shl i32 %20173, %20174
  %20175 = sub i32 %20173, -1318104775
  %20176 = sub i32 %20175, %20174
  %20177 = add i32 %20176, -1318104775
  %sub2305alteredBB = sub nsw i32 %20173, %20174
  store i32 %20177, i32* %s, align 4
  %20178 = load i32, i32* %s, align 4
  %call2306alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20178)
  store i32 654866151, i32* %switchVar
  br label %loopEnd

originalBB6351alteredBB:                          ; preds = %loopEntry
  store i32 -751300785, i32* %switchVar
  br label %loopEnd

originalBB6355alteredBB:                          ; preds = %loopEntry
  %20179 = load i32, i32* %e, align 4
  %cmp2393alteredBB = icmp eq i32 %20179, 10
  store i32 -1830869030, i32* %switchVar
  br label %loopEnd

originalBB6359alteredBB:                          ; preds = %loopEntry
  %20180 = load i32, i32* %e, align 4
  %cmp2400alteredBB = icmp eq i32 %20180, 11
  store i32 -210724751, i32* %switchVar
  br label %loopEnd

originalBB6363alteredBB:                          ; preds = %loopEntry
  %20181 = load i32, i32* %s, align 4
  %_6364 = shl i32 %20181, 30
  %20182 = sub i32 0, %20181
  %20183 = sub i32 0, 30
  %20184 = add i32 %20182, %20183
  %20185 = sub i32 0, %20184
  %add2402alteredBB = add nsw i32 %20181, 30
  %20186 = add i32 %20185, 798758755
  %20187 = sub i32 %20186, 31
  %20188 = sub i32 %20187, 798758755
  %_6365 = sub i32 %20185, 31
  %gen6366 = mul i32 %20188, 31
  %20189 = add i32 0, -660640035
  %20190 = sub i32 %20189, %20185
  %20191 = sub i32 %20190, -660640035
  %_6367 = sub i32 0, %20185
  %20192 = sub i32 0, %20191
  %20193 = sub i32 0, 31
  %20194 = add i32 %20192, %20193
  %20195 = sub i32 0, %20194
  %gen6368 = add i32 %20191, 31
  %20196 = sub i32 0, 1876152858
  %20197 = sub i32 %20196, %20185
  %20198 = add i32 %20197, 1876152858
  %_6369 = sub i32 0, %20185
  %20199 = add i32 %20198, 548168346
  %20200 = add i32 %20199, 31
  %20201 = sub i32 %20200, 548168346
  %gen6370 = add i32 %20198, 31
  %20202 = sub i32 0, 31
  %20203 = add i32 %20185, %20202
  %_6371 = sub i32 %20185, 31
  %gen6372 = mul i32 %20203, 31
  %_6373 = shl i32 %20185, 31
  %20204 = sub i32 %20185, 866280665
  %20205 = sub i32 %20204, 31
  %20206 = add i32 %20205, 866280665
  %_6374 = sub i32 %20185, 31
  %gen6375 = mul i32 %20206, 31
  %20207 = sub i32 0, %20185
  %20208 = add i32 0, %20207
  %_6376 = sub i32 0, %20185
  %20209 = sub i32 0, %20208
  %20210 = sub i32 0, 31
  %20211 = add i32 %20209, %20210
  %20212 = sub i32 0, %20211
  %gen6377 = add i32 %20208, 31
  %20213 = add i32 %20185, 1601160581
  %20214 = add i32 %20213, 31
  %20215 = sub i32 %20214, 1601160581
  %add2403alteredBB = add nsw i32 %20185, 31
  %20216 = load i32, i32* %f, align 4
  %_6378 = shl i32 %20215, %20216
  %_6379 = shl i32 %20215, %20216
  %20217 = sub i32 0, %20216
  %20218 = add i32 %20215, %20217
  %_6380 = sub i32 %20215, %20216
  %gen6381 = mul i32 %20218, %20216
  %20219 = sub i32 0, %20216
  %20220 = sub i32 %20215, %20219
  %add2404alteredBB = add nsw i32 %20215, %20216
  %20221 = load i32, i32* %c, align 4
  %20222 = sub i32 0, %20221
  %20223 = add i32 %20220, %20222
  %_6382 = sub i32 %20220, %20221
  %gen6383 = mul i32 %20223, %20221
  %20224 = sub i32 0, %20221
  %20225 = add i32 %20220, %20224
  %sub2405alteredBB = sub nsw i32 %20220, %20221
  store i32 %20225, i32* %s, align 4
  %20226 = load i32, i32* %s, align 4
  %call2406alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20226)
  store i32 247060730, i32* %switchVar
  br label %loopEnd

originalBB6387alteredBB:                          ; preds = %loopEntry
  %20227 = load i32, i32* %e, align 4
  %cmp2408alteredBB = icmp eq i32 %20227, 12
  store i32 1571325707, i32* %switchVar
  br label %loopEnd

originalBB6391alteredBB:                          ; preds = %loopEntry
  %20228 = load i32, i32* %s, align 4
  %20229 = add i32 %20228, -1531420524
  %20230 = sub i32 %20229, 30
  %20231 = sub i32 %20230, -1531420524
  %_6392 = sub i32 %20228, 30
  %gen6393 = mul i32 %20231, 30
  %20232 = add i32 %20228, -970235075
  %20233 = sub i32 %20232, 30
  %20234 = sub i32 %20233, -970235075
  %_6394 = sub i32 %20228, 30
  %gen6395 = mul i32 %20234, 30
  %_6396 = shl i32 %20228, 30
  %20235 = add i32 0, 1064385518
  %20236 = sub i32 %20235, %20228
  %20237 = sub i32 %20236, 1064385518
  %_6397 = sub i32 0, %20228
  %20238 = add i32 %20237, 252306460
  %20239 = add i32 %20238, 30
  %20240 = sub i32 %20239, 252306460
  %gen6398 = add i32 %20237, 30
  %20241 = sub i32 %20228, -749178566
  %20242 = add i32 %20241, 30
  %20243 = add i32 %20242, -749178566
  %add2410alteredBB = add nsw i32 %20228, 30
  %_6399 = shl i32 %20243, 31
  %20244 = sub i32 0, 31
  %20245 = add i32 %20243, %20244
  %_6400 = sub i32 %20243, 31
  %gen6401 = mul i32 %20245, 31
  %20246 = sub i32 0, 66184281
  %20247 = sub i32 %20246, %20243
  %20248 = add i32 %20247, 66184281
  %_6402 = sub i32 0, %20243
  %20249 = sub i32 %20248, -832941707
  %20250 = add i32 %20249, 31
  %20251 = add i32 %20250, -832941707
  %gen6403 = add i32 %20248, 31
  %20252 = sub i32 0, %20243
  %20253 = add i32 0, %20252
  %_6404 = sub i32 0, %20243
  %20254 = sub i32 0, %20253
  %20255 = sub i32 0, 31
  %20256 = add i32 %20254, %20255
  %20257 = sub i32 0, %20256
  %gen6405 = add i32 %20253, 31
  %20258 = sub i32 0, 31
  %20259 = add i32 %20243, %20258
  %_6406 = sub i32 %20243, 31
  %gen6407 = mul i32 %20259, 31
  %20260 = sub i32 0, 31
  %20261 = sub i32 %20243, %20260
  %add2411alteredBB = add nsw i32 %20243, 31
  %_6408 = shl i32 %20261, 30
  %20262 = add i32 %20261, -472146685
  %20263 = sub i32 %20262, 30
  %20264 = sub i32 %20263, -472146685
  %_6409 = sub i32 %20261, 30
  %gen6410 = mul i32 %20264, 30
  %_6411 = shl i32 %20261, 30
  %_6412 = shl i32 %20261, 30
  %20265 = sub i32 0, %20261
  %20266 = add i32 0, %20265
  %_6413 = sub i32 0, %20261
  %20267 = sub i32 %20266, -884703003
  %20268 = add i32 %20267, 30
  %20269 = add i32 %20268, -884703003
  %gen6414 = add i32 %20266, 30
  %20270 = sub i32 %20261, 638423545
  %20271 = add i32 %20270, 30
  %20272 = add i32 %20271, 638423545
  %add2412alteredBB = add nsw i32 %20261, 30
  %20273 = load i32, i32* %f, align 4
  %20274 = add i32 0, 1994523173
  %20275 = sub i32 %20274, %20272
  %20276 = sub i32 %20275, 1994523173
  %_6415 = sub i32 0, %20272
  %20277 = sub i32 0, %20273
  %20278 = sub i32 %20276, %20277
  %gen6416 = add i32 %20276, %20273
  %20279 = sub i32 0, %20272
  %20280 = add i32 0, %20279
  %_6417 = sub i32 0, %20272
  %20281 = sub i32 %20280, -1338548470
  %20282 = add i32 %20281, %20273
  %20283 = add i32 %20282, -1338548470
  %gen6418 = add i32 %20280, %20273
  %20284 = sub i32 %20272, -1222200595
  %20285 = add i32 %20284, %20273
  %20286 = add i32 %20285, -1222200595
  %add2413alteredBB = add nsw i32 %20272, %20273
  %20287 = load i32, i32* %c, align 4
  %20288 = sub i32 0, %20287
  %20289 = add i32 %20286, %20288
  %_6419 = sub i32 %20286, %20287
  %gen6420 = mul i32 %20289, %20287
  %_6421 = shl i32 %20286, %20287
  %20290 = sub i32 %20286, -180239694
  %20291 = sub i32 %20290, %20287
  %20292 = add i32 %20291, -180239694
  %_6422 = sub i32 %20286, %20287
  %gen6423 = mul i32 %20292, %20287
  %20293 = sub i32 %20286, -1607426770
  %20294 = sub i32 %20293, %20287
  %20295 = add i32 %20294, -1607426770
  %sub2414alteredBB = sub nsw i32 %20286, %20287
  store i32 %20295, i32* %s, align 4
  %20296 = load i32, i32* %s, align 4
  %call2415alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20296)
  store i32 -1425410747, i32* %switchVar
  br label %loopEnd

originalBB6427alteredBB:                          ; preds = %loopEntry
  %20297 = load i32, i32* %s, align 4
  %20298 = add i32 0, 980858139
  %20299 = sub i32 %20298, %20297
  %20300 = sub i32 %20299, 980858139
  %_6428 = sub i32 0, %20297
  %20301 = sub i32 0, %20300
  %20302 = sub i32 0, 30
  %20303 = add i32 %20301, %20302
  %20304 = sub i32 0, %20303
  %gen6429 = add i32 %20300, 30
  %20305 = sub i32 %20297, -930102221
  %20306 = sub i32 %20305, 30
  %20307 = add i32 %20306, -930102221
  %_6430 = sub i32 %20297, 30
  %gen6431 = mul i32 %20307, 30
  %_6432 = shl i32 %20297, 30
  %_6433 = shl i32 %20297, 30
  %_6434 = shl i32 %20297, 30
  %20308 = sub i32 0, 30
  %20309 = add i32 %20297, %20308
  %sub2420alteredBB = sub nsw i32 %20297, 30
  %20310 = sub i32 0, 31
  %20311 = add i32 %20309, %20310
  %_6435 = sub i32 %20309, 31
  %gen6436 = mul i32 %20311, 31
  %20312 = sub i32 0, 252786579
  %20313 = sub i32 %20312, %20309
  %20314 = add i32 %20313, 252786579
  %_6437 = sub i32 0, %20309
  %20315 = sub i32 0, %20314
  %20316 = sub i32 0, 31
  %20317 = add i32 %20315, %20316
  %20318 = sub i32 0, %20317
  %gen6438 = add i32 %20314, 31
  %20319 = sub i32 0, 1456762478
  %20320 = sub i32 %20319, %20309
  %20321 = add i32 %20320, 1456762478
  %_6439 = sub i32 0, %20309
  %20322 = add i32 %20321, -284768296
  %20323 = add i32 %20322, 31
  %20324 = sub i32 %20323, -284768296
  %gen6440 = add i32 %20321, 31
  %20325 = sub i32 0, %20309
  %20326 = add i32 0, %20325
  %_6441 = sub i32 0, %20309
  %20327 = sub i32 %20326, 1202549867
  %20328 = add i32 %20327, 31
  %20329 = add i32 %20328, 1202549867
  %gen6442 = add i32 %20326, 31
  %20330 = sub i32 0, 31
  %20331 = add i32 %20309, %20330
  %_6443 = sub i32 %20309, 31
  %gen6444 = mul i32 %20331, 31
  %20332 = sub i32 0, 31
  %20333 = add i32 %20309, %20332
  %_6445 = sub i32 %20309, 31
  %gen6446 = mul i32 %20333, 31
  %20334 = sub i32 %20309, -99523381
  %20335 = sub i32 %20334, 31
  %20336 = add i32 %20335, -99523381
  %sub2421alteredBB = sub nsw i32 %20309, 31
  %20337 = add i32 0, 450457880
  %20338 = sub i32 %20337, %20336
  %20339 = sub i32 %20338, 450457880
  %_6447 = sub i32 0, %20336
  %20340 = sub i32 %20339, -2105547475
  %20341 = add i32 %20340, 31
  %20342 = add i32 %20341, -2105547475
  %gen6448 = add i32 %20339, 31
  %_6449 = shl i32 %20336, 31
  %20343 = add i32 0, 2097189500
  %20344 = sub i32 %20343, %20336
  %20345 = sub i32 %20344, 2097189500
  %_6450 = sub i32 0, %20336
  %20346 = add i32 %20345, -1847824598
  %20347 = add i32 %20346, 31
  %20348 = sub i32 %20347, -1847824598
  %gen6451 = add i32 %20345, 31
  %_6452 = shl i32 %20336, 31
  %20349 = sub i32 %20336, -1373446280
  %20350 = sub i32 %20349, 31
  %20351 = add i32 %20350, -1373446280
  %sub2422alteredBB = sub nsw i32 %20336, 31
  %20352 = sub i32 0, 30
  %20353 = add i32 %20351, %20352
  %_6453 = sub i32 %20351, 30
  %gen6454 = mul i32 %20353, 30
  %_6455 = shl i32 %20351, 30
  %_6456 = shl i32 %20351, 30
  %20354 = sub i32 %20351, 1729773501
  %20355 = sub i32 %20354, 30
  %20356 = add i32 %20355, 1729773501
  %_6457 = sub i32 %20351, 30
  %gen6458 = mul i32 %20356, 30
  %20357 = sub i32 0, 30
  %20358 = add i32 %20351, %20357
  %_6459 = sub i32 %20351, 30
  %gen6460 = mul i32 %20358, 30
  %_6461 = shl i32 %20351, 30
  %20359 = add i32 %20351, 1162033054
  %20360 = sub i32 %20359, 30
  %20361 = sub i32 %20360, 1162033054
  %sub2423alteredBB = sub nsw i32 %20351, 30
  %20362 = sub i32 0, %20361
  %20363 = add i32 0, %20362
  %_6462 = sub i32 0, %20361
  %20364 = sub i32 0, 31
  %20365 = sub i32 %20363, %20364
  %gen6463 = add i32 %20363, 31
  %20366 = add i32 0, -1527477427
  %20367 = sub i32 %20366, %20361
  %20368 = sub i32 %20367, -1527477427
  %_6464 = sub i32 0, %20361
  %20369 = add i32 %20368, 213377260
  %20370 = add i32 %20369, 31
  %20371 = sub i32 %20370, 213377260
  %gen6465 = add i32 %20368, 31
  %20372 = sub i32 0, %20361
  %20373 = add i32 0, %20372
  %_6466 = sub i32 0, %20361
  %20374 = sub i32 0, %20373
  %20375 = sub i32 0, 31
  %20376 = add i32 %20374, %20375
  %20377 = sub i32 0, %20376
  %gen6467 = add i32 %20373, 31
  %_6468 = shl i32 %20361, 31
  %20378 = add i32 0, -123098283
  %20379 = sub i32 %20378, %20361
  %20380 = sub i32 %20379, -123098283
  %_6469 = sub i32 0, %20361
  %20381 = sub i32 0, 31
  %20382 = sub i32 %20380, %20381
  %gen6470 = add i32 %20380, 31
  %20383 = add i32 0, 558940619
  %20384 = sub i32 %20383, %20361
  %20385 = sub i32 %20384, 558940619
  %_6471 = sub i32 0, %20361
  %20386 = sub i32 0, %20385
  %20387 = sub i32 0, 31
  %20388 = add i32 %20386, %20387
  %20389 = sub i32 0, %20388
  %gen6472 = add i32 %20385, 31
  %20390 = sub i32 0, 31
  %20391 = add i32 %20361, %20390
  %sub2424alteredBB = sub nsw i32 %20361, 31
  %_6473 = shl i32 %20391, 30
  %20392 = sub i32 0, 30
  %20393 = add i32 %20391, %20392
  %_6474 = sub i32 %20391, 30
  %gen6475 = mul i32 %20393, 30
  %20394 = add i32 0, -2142778148
  %20395 = sub i32 %20394, %20391
  %20396 = sub i32 %20395, -2142778148
  %_6476 = sub i32 0, %20391
  %20397 = sub i32 %20396, -1104990715
  %20398 = add i32 %20397, 30
  %20399 = add i32 %20398, -1104990715
  %gen6477 = add i32 %20396, 30
  %20400 = add i32 0, 1444634759
  %20401 = sub i32 %20400, %20391
  %20402 = sub i32 %20401, 1444634759
  %_6478 = sub i32 0, %20391
  %20403 = sub i32 0, 30
  %20404 = sub i32 %20402, %20403
  %gen6479 = add i32 %20402, 30
  %20405 = sub i32 0, 30
  %20406 = add i32 %20391, %20405
  %_6480 = sub i32 %20391, 30
  %gen6481 = mul i32 %20406, 30
  %20407 = sub i32 0, 30
  %20408 = add i32 %20391, %20407
  %_6482 = sub i32 %20391, 30
  %gen6483 = mul i32 %20408, 30
  %20409 = add i32 0, -975732340
  %20410 = sub i32 %20409, %20391
  %20411 = sub i32 %20410, -975732340
  %_6484 = sub i32 0, %20391
  %20412 = sub i32 %20411, -2050545838
  %20413 = add i32 %20412, 30
  %20414 = add i32 %20413, -2050545838
  %gen6485 = add i32 %20411, 30
  %20415 = sub i32 0, 30
  %20416 = add i32 %20391, %20415
  %sub2425alteredBB = sub nsw i32 %20391, 30
  %_6486 = shl i32 %20416, 31
  %20417 = sub i32 0, 31
  %20418 = add i32 %20416, %20417
  %sub2426alteredBB = sub nsw i32 %20416, 31
  %_6487 = shl i32 %20418, 28
  %20419 = sub i32 0, 28
  %20420 = add i32 %20418, %20419
  %sub2427alteredBB = sub nsw i32 %20418, 28
  %20421 = sub i32 0, 31
  %20422 = add i32 %20420, %20421
  %_6488 = sub i32 %20420, 31
  %gen6489 = mul i32 %20422, 31
  %20423 = add i32 %20420, 2072209514
  %20424 = sub i32 %20423, 31
  %20425 = sub i32 %20424, 2072209514
  %_6490 = sub i32 %20420, 31
  %gen6491 = mul i32 %20425, 31
  %20426 = add i32 %20420, 2073270161
  %20427 = sub i32 %20426, 31
  %20428 = sub i32 %20427, 2073270161
  %sub2428alteredBB = sub nsw i32 %20420, 31
  %20429 = load i32, i32* %f, align 4
  %20430 = add i32 %20428, -1448590226
  %20431 = sub i32 %20430, %20429
  %20432 = sub i32 %20431, -1448590226
  %_6492 = sub i32 %20428, %20429
  %gen6493 = mul i32 %20432, %20429
  %20433 = sub i32 0, %20429
  %20434 = add i32 %20428, %20433
  %_6494 = sub i32 %20428, %20429
  %gen6495 = mul i32 %20434, %20429
  %20435 = sub i32 0, %20428
  %20436 = add i32 0, %20435
  %_6496 = sub i32 0, %20428
  %20437 = sub i32 0, %20436
  %20438 = sub i32 0, %20429
  %20439 = add i32 %20437, %20438
  %20440 = sub i32 0, %20439
  %gen6497 = add i32 %20436, %20429
  %20441 = sub i32 %20428, -200875064
  %20442 = sub i32 %20441, %20429
  %20443 = add i32 %20442, -200875064
  %_6498 = sub i32 %20428, %20429
  %gen6499 = mul i32 %20443, %20429
  %20444 = sub i32 0, %20429
  %20445 = add i32 %20428, %20444
  %_6500 = sub i32 %20428, %20429
  %gen6501 = mul i32 %20445, %20429
  %_6502 = shl i32 %20428, %20429
  %20446 = sub i32 0, %20429
  %20447 = sub i32 %20428, %20446
  %add2429alteredBB = add nsw i32 %20428, %20429
  %20448 = load i32, i32* %c, align 4
  %20449 = sub i32 0, -152212109
  %20450 = sub i32 %20449, %20447
  %20451 = add i32 %20450, -152212109
  %_6503 = sub i32 0, %20447
  %20452 = sub i32 %20451, 1498080835
  %20453 = add i32 %20452, %20448
  %20454 = add i32 %20453, 1498080835
  %gen6504 = add i32 %20451, %20448
  %20455 = add i32 %20447, 103429911
  %20456 = sub i32 %20455, %20448
  %20457 = sub i32 %20456, 103429911
  %sub2430alteredBB = sub nsw i32 %20447, %20448
  store i32 %20457, i32* %s, align 4
  %20458 = load i32, i32* %s, align 4
  %call2431alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20458)
  store i32 -2001560270, i32* %switchVar
  br label %loopEnd

originalBB6508alteredBB:                          ; preds = %loopEntry
  %20459 = load i32, i32* %s, align 4
  %20460 = sub i32 0, %20459
  %20461 = add i32 0, %20460
  %_6509 = sub i32 0, %20459
  %20462 = sub i32 0, %20461
  %20463 = sub i32 0, 30
  %20464 = add i32 %20462, %20463
  %20465 = sub i32 0, %20464
  %gen6510 = add i32 %20461, 30
  %20466 = add i32 %20459, 1423570967
  %20467 = sub i32 %20466, 30
  %20468 = sub i32 %20467, 1423570967
  %_6511 = sub i32 %20459, 30
  %gen6512 = mul i32 %20468, 30
  %_6513 = shl i32 %20459, 30
  %20469 = sub i32 0, 30
  %20470 = add i32 %20459, %20469
  %_6514 = sub i32 %20459, 30
  %gen6515 = mul i32 %20470, 30
  %_6516 = shl i32 %20459, 30
  %_6517 = shl i32 %20459, 30
  %20471 = sub i32 0, 30
  %20472 = add i32 %20459, %20471
  %sub2435alteredBB = sub nsw i32 %20459, 30
  %20473 = sub i32 %20472, -516307474
  %20474 = sub i32 %20473, 31
  %20475 = add i32 %20474, -516307474
  %_6518 = sub i32 %20472, 31
  %gen6519 = mul i32 %20475, 31
  %20476 = sub i32 0, 1923143097
  %20477 = sub i32 %20476, %20472
  %20478 = add i32 %20477, 1923143097
  %_6520 = sub i32 0, %20472
  %20479 = add i32 %20478, 734552361
  %20480 = add i32 %20479, 31
  %20481 = sub i32 %20480, 734552361
  %gen6521 = add i32 %20478, 31
  %20482 = sub i32 %20472, 24509663
  %20483 = sub i32 %20482, 31
  %20484 = add i32 %20483, 24509663
  %_6522 = sub i32 %20472, 31
  %gen6523 = mul i32 %20484, 31
  %20485 = add i32 0, -662305100
  %20486 = sub i32 %20485, %20472
  %20487 = sub i32 %20486, -662305100
  %_6524 = sub i32 0, %20472
  %20488 = sub i32 0, %20487
  %20489 = sub i32 0, 31
  %20490 = add i32 %20488, %20489
  %20491 = sub i32 0, %20490
  %gen6525 = add i32 %20487, 31
  %20492 = add i32 %20472, -840714726
  %20493 = sub i32 %20492, 31
  %20494 = sub i32 %20493, -840714726
  %_6526 = sub i32 %20472, 31
  %gen6527 = mul i32 %20494, 31
  %20495 = sub i32 %20472, 1657166555
  %20496 = sub i32 %20495, 31
  %20497 = add i32 %20496, 1657166555
  %_6528 = sub i32 %20472, 31
  %gen6529 = mul i32 %20497, 31
  %_6530 = shl i32 %20472, 31
  %20498 = add i32 0, 671388462
  %20499 = sub i32 %20498, %20472
  %20500 = sub i32 %20499, 671388462
  %_6531 = sub i32 0, %20472
  %20501 = sub i32 0, %20500
  %20502 = sub i32 0, 31
  %20503 = add i32 %20501, %20502
  %20504 = sub i32 0, %20503
  %gen6532 = add i32 %20500, 31
  %_6533 = shl i32 %20472, 31
  %20505 = sub i32 0, 31
  %20506 = add i32 %20472, %20505
  %sub2436alteredBB = sub nsw i32 %20472, 31
  %20507 = sub i32 0, -573067746
  %20508 = sub i32 %20507, %20506
  %20509 = add i32 %20508, -573067746
  %_6534 = sub i32 0, %20506
  %20510 = sub i32 %20509, 1028598408
  %20511 = add i32 %20510, 31
  %20512 = add i32 %20511, 1028598408
  %gen6535 = add i32 %20509, 31
  %_6536 = shl i32 %20506, 31
  %_6537 = shl i32 %20506, 31
  %20513 = sub i32 0, %20506
  %20514 = add i32 0, %20513
  %_6538 = sub i32 0, %20506
  %20515 = add i32 %20514, -1974936592
  %20516 = add i32 %20515, 31
  %20517 = sub i32 %20516, -1974936592
  %gen6539 = add i32 %20514, 31
  %_6540 = shl i32 %20506, 31
  %20518 = sub i32 0, 31
  %20519 = add i32 %20506, %20518
  %sub2437alteredBB = sub nsw i32 %20506, 31
  %20520 = sub i32 0, %20519
  %20521 = add i32 0, %20520
  %_6541 = sub i32 0, %20519
  %20522 = add i32 %20521, -476757794
  %20523 = add i32 %20522, 30
  %20524 = sub i32 %20523, -476757794
  %gen6542 = add i32 %20521, 30
  %20525 = sub i32 0, 30
  %20526 = add i32 %20519, %20525
  %sub2438alteredBB = sub nsw i32 %20519, 30
  %20527 = add i32 %20526, -1879096123
  %20528 = sub i32 %20527, 31
  %20529 = sub i32 %20528, -1879096123
  %_6543 = sub i32 %20526, 31
  %gen6544 = mul i32 %20529, 31
  %20530 = add i32 %20526, -841401483
  %20531 = sub i32 %20530, 31
  %20532 = sub i32 %20531, -841401483
  %sub2439alteredBB = sub nsw i32 %20526, 31
  %_6545 = shl i32 %20532, 30
  %20533 = sub i32 %20532, 229280507
  %20534 = sub i32 %20533, 30
  %20535 = add i32 %20534, 229280507
  %_6546 = sub i32 %20532, 30
  %gen6547 = mul i32 %20535, 30
  %20536 = sub i32 %20532, -111408029
  %20537 = sub i32 %20536, 30
  %20538 = add i32 %20537, -111408029
  %_6548 = sub i32 %20532, 30
  %gen6549 = mul i32 %20538, 30
  %20539 = add i32 0, 478815748
  %20540 = sub i32 %20539, %20532
  %20541 = sub i32 %20540, 478815748
  %_6550 = sub i32 0, %20532
  %20542 = sub i32 0, %20541
  %20543 = sub i32 0, 30
  %20544 = add i32 %20542, %20543
  %20545 = sub i32 0, %20544
  %gen6551 = add i32 %20541, 30
  %20546 = sub i32 %20532, 470313813
  %20547 = sub i32 %20546, 30
  %20548 = add i32 %20547, 470313813
  %sub2440alteredBB = sub nsw i32 %20532, 30
  %_6552 = shl i32 %20548, 31
  %20549 = sub i32 0, 92640299
  %20550 = sub i32 %20549, %20548
  %20551 = add i32 %20550, 92640299
  %_6553 = sub i32 0, %20548
  %20552 = sub i32 0, 31
  %20553 = sub i32 %20551, %20552
  %gen6554 = add i32 %20551, 31
  %20554 = sub i32 0, 31
  %20555 = add i32 %20548, %20554
  %_6555 = sub i32 %20548, 31
  %gen6556 = mul i32 %20555, 31
  %_6557 = shl i32 %20548, 31
  %20556 = sub i32 %20548, -1175002234
  %20557 = sub i32 %20556, 31
  %20558 = add i32 %20557, -1175002234
  %_6558 = sub i32 %20548, 31
  %gen6559 = mul i32 %20558, 31
  %20559 = add i32 %20548, 2079169795
  %20560 = sub i32 %20559, 31
  %20561 = sub i32 %20560, 2079169795
  %sub2441alteredBB = sub nsw i32 %20548, 31
  %20562 = sub i32 0, -2023703018
  %20563 = sub i32 %20562, %20561
  %20564 = add i32 %20563, -2023703018
  %_6560 = sub i32 0, %20561
  %20565 = sub i32 0, %20564
  %20566 = sub i32 0, 28
  %20567 = add i32 %20565, %20566
  %20568 = sub i32 0, %20567
  %gen6561 = add i32 %20564, 28
  %_6562 = shl i32 %20561, 28
  %20569 = add i32 %20561, 1657376706
  %20570 = sub i32 %20569, 28
  %20571 = sub i32 %20570, 1657376706
  %_6563 = sub i32 %20561, 28
  %gen6564 = mul i32 %20571, 28
  %20572 = add i32 %20561, -1136991468
  %20573 = sub i32 %20572, 28
  %20574 = sub i32 %20573, -1136991468
  %_6565 = sub i32 %20561, 28
  %gen6566 = mul i32 %20574, 28
  %20575 = sub i32 0, %20561
  %20576 = add i32 0, %20575
  %_6567 = sub i32 0, %20561
  %20577 = add i32 %20576, -1420238534
  %20578 = add i32 %20577, 28
  %20579 = sub i32 %20578, -1420238534
  %gen6568 = add i32 %20576, 28
  %20580 = sub i32 0, 28
  %20581 = add i32 %20561, %20580
  %sub2442alteredBB = sub nsw i32 %20561, 28
  %20582 = load i32, i32* %f, align 4
  %_6569 = shl i32 %20581, %20582
  %20583 = sub i32 %20581, 1043876823
  %20584 = add i32 %20583, %20582
  %20585 = add i32 %20584, 1043876823
  %add2443alteredBB = add nsw i32 %20581, %20582
  %20586 = load i32, i32* %c, align 4
  %_6570 = shl i32 %20585, %20586
  %20587 = sub i32 0, -1402961268
  %20588 = sub i32 %20587, %20585
  %20589 = add i32 %20588, -1402961268
  %_6571 = sub i32 0, %20585
  %20590 = add i32 %20589, 711557339
  %20591 = add i32 %20590, %20586
  %20592 = sub i32 %20591, 711557339
  %gen6572 = add i32 %20589, %20586
  %20593 = add i32 0, 1407174960
  %20594 = sub i32 %20593, %20585
  %20595 = sub i32 %20594, 1407174960
  %_6573 = sub i32 0, %20585
  %20596 = add i32 %20595, -30476952
  %20597 = add i32 %20596, %20586
  %20598 = sub i32 %20597, -30476952
  %gen6574 = add i32 %20595, %20586
  %20599 = add i32 %20585, 1708011191
  %20600 = sub i32 %20599, %20586
  %20601 = sub i32 %20600, 1708011191
  %_6575 = sub i32 %20585, %20586
  %gen6576 = mul i32 %20601, %20586
  %20602 = add i32 0, 36425781
  %20603 = sub i32 %20602, %20585
  %20604 = sub i32 %20603, 36425781
  %_6577 = sub i32 0, %20585
  %20605 = add i32 %20604, -1307793717
  %20606 = add i32 %20605, %20586
  %20607 = sub i32 %20606, -1307793717
  %gen6578 = add i32 %20604, %20586
  %20608 = sub i32 0, %20586
  %20609 = add i32 %20585, %20608
  %sub2444alteredBB = sub nsw i32 %20585, %20586
  store i32 %20609, i32* %s, align 4
  %20610 = load i32, i32* %s, align 4
  %call2445alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20610)
  store i32 997453074, i32* %switchVar
  br label %loopEnd

originalBB6582alteredBB:                          ; preds = %loopEntry
  %20611 = load i32, i32* %e, align 4
  %cmp2460alteredBB = icmp eq i32 %20611, 4
  store i32 1273421447, i32* %switchVar
  br label %loopEnd

originalBB6586alteredBB:                          ; preds = %loopEntry
  %20612 = load i32, i32* %s, align 4
  %20613 = add i32 0, 1954775807
  %20614 = sub i32 %20613, %20612
  %20615 = sub i32 %20614, 1954775807
  %_6587 = sub i32 0, %20612
  %20616 = add i32 %20615, -1255048120
  %20617 = add i32 %20616, 30
  %20618 = sub i32 %20617, -1255048120
  %gen6588 = add i32 %20615, 30
  %_6589 = shl i32 %20612, 30
  %20619 = sub i32 0, -2113707734
  %20620 = sub i32 %20619, %20612
  %20621 = add i32 %20620, -2113707734
  %_6590 = sub i32 0, %20612
  %20622 = sub i32 0, 30
  %20623 = sub i32 %20621, %20622
  %gen6591 = add i32 %20621, 30
  %20624 = add i32 0, 1795891912
  %20625 = sub i32 %20624, %20612
  %20626 = sub i32 %20625, 1795891912
  %_6592 = sub i32 0, %20612
  %20627 = sub i32 %20626, -1608006950
  %20628 = add i32 %20627, 30
  %20629 = add i32 %20628, -1608006950
  %gen6593 = add i32 %20626, 30
  %20630 = sub i32 %20612, 1108113963
  %20631 = sub i32 %20630, 30
  %20632 = add i32 %20631, 1108113963
  %sub2495alteredBB = sub nsw i32 %20612, 30
  %20633 = add i32 %20632, -1153043650
  %20634 = sub i32 %20633, 31
  %20635 = sub i32 %20634, -1153043650
  %_6594 = sub i32 %20632, 31
  %gen6595 = mul i32 %20635, 31
  %20636 = add i32 %20632, 828953532
  %20637 = sub i32 %20636, 31
  %20638 = sub i32 %20637, 828953532
  %_6596 = sub i32 %20632, 31
  %gen6597 = mul i32 %20638, 31
  %20639 = sub i32 0, 952540885
  %20640 = sub i32 %20639, %20632
  %20641 = add i32 %20640, 952540885
  %_6598 = sub i32 0, %20632
  %20642 = sub i32 %20641, -1658719312
  %20643 = add i32 %20642, 31
  %20644 = add i32 %20643, -1658719312
  %gen6599 = add i32 %20641, 31
  %20645 = sub i32 %20632, -901859074
  %20646 = sub i32 %20645, 31
  %20647 = add i32 %20646, -901859074
  %_6600 = sub i32 %20632, 31
  %gen6601 = mul i32 %20647, 31
  %20648 = sub i32 0, %20632
  %20649 = add i32 0, %20648
  %_6602 = sub i32 0, %20632
  %20650 = add i32 %20649, -1317290516
  %20651 = add i32 %20650, 31
  %20652 = sub i32 %20651, -1317290516
  %gen6603 = add i32 %20649, 31
  %20653 = sub i32 0, 31
  %20654 = add i32 %20632, %20653
  %sub2496alteredBB = sub nsw i32 %20632, 31
  %_6604 = shl i32 %20654, 31
  %20655 = add i32 %20654, 252921733
  %20656 = sub i32 %20655, 31
  %20657 = sub i32 %20656, 252921733
  %_6605 = sub i32 %20654, 31
  %gen6606 = mul i32 %20657, 31
  %20658 = add i32 %20654, 763799764
  %20659 = sub i32 %20658, 31
  %20660 = sub i32 %20659, 763799764
  %sub2497alteredBB = sub nsw i32 %20654, 31
  %20661 = load i32, i32* %f, align 4
  %20662 = sub i32 %20660, -151325014
  %20663 = sub i32 %20662, %20661
  %20664 = add i32 %20663, -151325014
  %_6607 = sub i32 %20660, %20661
  %gen6608 = mul i32 %20664, %20661
  %_6609 = shl i32 %20660, %20661
  %20665 = sub i32 0, %20660
  %20666 = add i32 0, %20665
  %_6610 = sub i32 0, %20660
  %20667 = sub i32 %20666, 563378348
  %20668 = add i32 %20667, %20661
  %20669 = add i32 %20668, 563378348
  %gen6611 = add i32 %20666, %20661
  %20670 = sub i32 %20660, 1151805705
  %20671 = sub i32 %20670, %20661
  %20672 = add i32 %20671, 1151805705
  %_6612 = sub i32 %20660, %20661
  %gen6613 = mul i32 %20672, %20661
  %20673 = sub i32 0, %20661
  %20674 = add i32 %20660, %20673
  %_6614 = sub i32 %20660, %20661
  %gen6615 = mul i32 %20674, %20661
  %20675 = sub i32 0, -2037427979
  %20676 = sub i32 %20675, %20660
  %20677 = add i32 %20676, -2037427979
  %_6616 = sub i32 0, %20660
  %20678 = sub i32 %20677, 404778544
  %20679 = add i32 %20678, %20661
  %20680 = add i32 %20679, 404778544
  %gen6617 = add i32 %20677, %20661
  %20681 = add i32 %20660, 1824583224
  %20682 = add i32 %20681, %20661
  %20683 = sub i32 %20682, 1824583224
  %add2498alteredBB = add nsw i32 %20660, %20661
  %20684 = load i32, i32* %c, align 4
  %20685 = add i32 0, 1581218640
  %20686 = sub i32 %20685, %20683
  %20687 = sub i32 %20686, 1581218640
  %_6618 = sub i32 0, %20683
  %20688 = add i32 %20687, 1433846088
  %20689 = add i32 %20688, %20684
  %20690 = sub i32 %20689, 1433846088
  %gen6619 = add i32 %20687, %20684
  %20691 = add i32 0, -2131684112
  %20692 = sub i32 %20691, %20683
  %20693 = sub i32 %20692, -2131684112
  %_6620 = sub i32 0, %20683
  %20694 = sub i32 %20693, -1900191903
  %20695 = add i32 %20694, %20684
  %20696 = add i32 %20695, -1900191903
  %gen6621 = add i32 %20693, %20684
  %20697 = add i32 %20683, -315434784
  %20698 = sub i32 %20697, %20684
  %20699 = sub i32 %20698, -315434784
  %_6622 = sub i32 %20683, %20684
  %gen6623 = mul i32 %20699, %20684
  %20700 = sub i32 0, %20684
  %20701 = add i32 %20683, %20700
  %sub2499alteredBB = sub nsw i32 %20683, %20684
  store i32 %20701, i32* %s, align 4
  %20702 = load i32, i32* %s, align 4
  %call2500alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20702)
  store i32 1786581484, i32* %switchVar
  br label %loopEnd

originalBB6627alteredBB:                          ; preds = %loopEntry
  %20703 = load i32, i32* %s, align 4
  %_6628 = shl i32 %20703, 30
  %20704 = add i32 0, -516324147
  %20705 = sub i32 %20704, %20703
  %20706 = sub i32 %20705, -516324147
  %_6629 = sub i32 0, %20703
  %20707 = sub i32 0, 30
  %20708 = sub i32 %20706, %20707
  %gen6630 = add i32 %20706, 30
  %20709 = sub i32 0, 30
  %20710 = add i32 %20703, %20709
  %_6631 = sub i32 %20703, 30
  %gen6632 = mul i32 %20710, 30
  %20711 = sub i32 %20703, -1524295371
  %20712 = sub i32 %20711, 30
  %20713 = add i32 %20712, -1524295371
  %sub2512alteredBB = sub nsw i32 %20703, 30
  %20714 = load i32, i32* %f, align 4
  %_6633 = shl i32 %20713, %20714
  %20715 = add i32 %20713, -1620810240
  %20716 = sub i32 %20715, %20714
  %20717 = sub i32 %20716, -1620810240
  %_6634 = sub i32 %20713, %20714
  %gen6635 = mul i32 %20717, %20714
  %20718 = sub i32 0, -1119592504
  %20719 = sub i32 %20718, %20713
  %20720 = add i32 %20719, -1119592504
  %_6636 = sub i32 0, %20713
  %20721 = sub i32 0, %20720
  %20722 = sub i32 0, %20714
  %20723 = add i32 %20721, %20722
  %20724 = sub i32 0, %20723
  %gen6637 = add i32 %20720, %20714
  %20725 = add i32 0, 806213043
  %20726 = sub i32 %20725, %20713
  %20727 = sub i32 %20726, 806213043
  %_6638 = sub i32 0, %20713
  %20728 = sub i32 0, %20727
  %20729 = sub i32 0, %20714
  %20730 = add i32 %20728, %20729
  %20731 = sub i32 0, %20730
  %gen6639 = add i32 %20727, %20714
  %20732 = sub i32 0, %20713
  %20733 = add i32 0, %20732
  %_6640 = sub i32 0, %20713
  %20734 = sub i32 0, %20714
  %20735 = sub i32 %20733, %20734
  %gen6641 = add i32 %20733, %20714
  %20736 = sub i32 0, -224327162
  %20737 = sub i32 %20736, %20713
  %20738 = add i32 %20737, -224327162
  %_6642 = sub i32 0, %20713
  %20739 = sub i32 %20738, 1525050319
  %20740 = add i32 %20739, %20714
  %20741 = add i32 %20740, 1525050319
  %gen6643 = add i32 %20738, %20714
  %20742 = sub i32 0, -2122579308
  %20743 = sub i32 %20742, %20713
  %20744 = add i32 %20743, -2122579308
  %_6644 = sub i32 0, %20713
  %20745 = sub i32 0, %20714
  %20746 = sub i32 %20744, %20745
  %gen6645 = add i32 %20744, %20714
  %20747 = add i32 0, 2071041301
  %20748 = sub i32 %20747, %20713
  %20749 = sub i32 %20748, 2071041301
  %_6646 = sub i32 0, %20713
  %20750 = sub i32 %20749, -390357449
  %20751 = add i32 %20750, %20714
  %20752 = add i32 %20751, -390357449
  %gen6647 = add i32 %20749, %20714
  %20753 = sub i32 %20713, -1293684213
  %20754 = add i32 %20753, %20714
  %20755 = add i32 %20754, -1293684213
  %add2513alteredBB = add nsw i32 %20713, %20714
  %20756 = load i32, i32* %c, align 4
  %20757 = add i32 %20755, 1502219757
  %20758 = sub i32 %20757, %20756
  %20759 = sub i32 %20758, 1502219757
  %_6648 = sub i32 %20755, %20756
  %gen6649 = mul i32 %20759, %20756
  %20760 = sub i32 0, 186857108
  %20761 = sub i32 %20760, %20755
  %20762 = add i32 %20761, 186857108
  %_6650 = sub i32 0, %20755
  %20763 = sub i32 0, %20756
  %20764 = sub i32 %20762, %20763
  %gen6651 = add i32 %20762, %20756
  %20765 = sub i32 %20755, -865972174
  %20766 = sub i32 %20765, %20756
  %20767 = add i32 %20766, -865972174
  %_6652 = sub i32 %20755, %20756
  %gen6653 = mul i32 %20767, %20756
  %20768 = add i32 %20755, -720956265
  %20769 = sub i32 %20768, %20756
  %20770 = sub i32 %20769, -720956265
  %_6654 = sub i32 %20755, %20756
  %gen6655 = mul i32 %20770, %20756
  %20771 = sub i32 %20755, -1044853353
  %20772 = sub i32 %20771, %20756
  %20773 = add i32 %20772, -1044853353
  %sub2514alteredBB = sub nsw i32 %20755, %20756
  store i32 %20773, i32* %s, align 4
  %20774 = load i32, i32* %s, align 4
  %call2515alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20774)
  store i32 2064062062, i32* %switchVar
  br label %loopEnd

originalBB6659alteredBB:                          ; preds = %loopEntry
  %20775 = load i32, i32* %e, align 4
  %cmp2524alteredBB = icmp eq i32 %20775, 12
  store i32 -1029749679, i32* %switchVar
  br label %loopEnd

originalBB6663alteredBB:                          ; preds = %loopEntry
  %20776 = load i32, i32* %s, align 4
  %20777 = sub i32 %20776, 1781539556
  %20778 = sub i32 %20777, 31
  %20779 = add i32 %20778, 1781539556
  %_6664 = sub i32 %20776, 31
  %gen6665 = mul i32 %20779, 31
  %20780 = sub i32 0, %20776
  %20781 = add i32 0, %20780
  %_6666 = sub i32 0, %20776
  %20782 = sub i32 0, 31
  %20783 = sub i32 %20781, %20782
  %gen6667 = add i32 %20781, 31
  %20784 = add i32 %20776, -1602760618
  %20785 = sub i32 %20784, 31
  %20786 = sub i32 %20785, -1602760618
  %_6668 = sub i32 %20776, 31
  %gen6669 = mul i32 %20786, 31
  %20787 = add i32 %20776, 1090726896
  %20788 = sub i32 %20787, 31
  %20789 = sub i32 %20788, 1090726896
  %_6670 = sub i32 %20776, 31
  %gen6671 = mul i32 %20789, 31
  %20790 = add i32 %20776, 566719083
  %20791 = sub i32 %20790, 31
  %20792 = sub i32 %20791, 566719083
  %_6672 = sub i32 %20776, 31
  %gen6673 = mul i32 %20792, 31
  %20793 = sub i32 %20776, 1496419699
  %20794 = sub i32 %20793, 31
  %20795 = add i32 %20794, 1496419699
  %sub2580alteredBB = sub nsw i32 %20776, 31
  %20796 = add i32 %20795, -730273850
  %20797 = sub i32 %20796, 30
  %20798 = sub i32 %20797, -730273850
  %_6674 = sub i32 %20795, 30
  %gen6675 = mul i32 %20798, 30
  %_6676 = shl i32 %20795, 30
  %20799 = sub i32 0, -2055138606
  %20800 = sub i32 %20799, %20795
  %20801 = add i32 %20800, -2055138606
  %_6677 = sub i32 0, %20795
  %20802 = sub i32 0, 30
  %20803 = sub i32 %20801, %20802
  %gen6678 = add i32 %20801, 30
  %20804 = sub i32 %20795, 1802865388
  %20805 = sub i32 %20804, 30
  %20806 = add i32 %20805, 1802865388
  %_6679 = sub i32 %20795, 30
  %gen6680 = mul i32 %20806, 30
  %20807 = sub i32 0, 30
  %20808 = add i32 %20795, %20807
  %_6681 = sub i32 %20795, 30
  %gen6682 = mul i32 %20808, 30
  %20809 = add i32 0, 45045893
  %20810 = sub i32 %20809, %20795
  %20811 = sub i32 %20810, 45045893
  %_6683 = sub i32 0, %20795
  %20812 = sub i32 0, 30
  %20813 = sub i32 %20811, %20812
  %gen6684 = add i32 %20811, 30
  %20814 = add i32 %20795, -995583705
  %20815 = sub i32 %20814, 30
  %20816 = sub i32 %20815, -995583705
  %sub2581alteredBB = sub nsw i32 %20795, 30
  %20817 = sub i32 0, -1629747397
  %20818 = sub i32 %20817, %20816
  %20819 = add i32 %20818, -1629747397
  %_6685 = sub i32 0, %20816
  %20820 = sub i32 %20819, 2055767477
  %20821 = add i32 %20820, 31
  %20822 = add i32 %20821, 2055767477
  %gen6686 = add i32 %20819, 31
  %20823 = sub i32 0, %20816
  %20824 = add i32 0, %20823
  %_6687 = sub i32 0, %20816
  %20825 = sub i32 %20824, 660498278
  %20826 = add i32 %20825, 31
  %20827 = add i32 %20826, 660498278
  %gen6688 = add i32 %20824, 31
  %_6689 = shl i32 %20816, 31
  %_6690 = shl i32 %20816, 31
  %20828 = add i32 0, -1029947828
  %20829 = sub i32 %20828, %20816
  %20830 = sub i32 %20829, -1029947828
  %_6691 = sub i32 0, %20816
  %20831 = sub i32 0, 31
  %20832 = sub i32 %20830, %20831
  %gen6692 = add i32 %20830, 31
  %20833 = sub i32 0, 31
  %20834 = add i32 %20816, %20833
  %_6693 = sub i32 %20816, 31
  %gen6694 = mul i32 %20834, 31
  %_6695 = shl i32 %20816, 31
  %_6696 = shl i32 %20816, 31
  %20835 = sub i32 %20816, -1330160917
  %20836 = sub i32 %20835, 31
  %20837 = add i32 %20836, -1330160917
  %sub2582alteredBB = sub nsw i32 %20816, 31
  %20838 = sub i32 %20837, -468879529
  %20839 = sub i32 %20838, 31
  %20840 = add i32 %20839, -468879529
  %_6697 = sub i32 %20837, 31
  %gen6698 = mul i32 %20840, 31
  %20841 = sub i32 0, 31
  %20842 = add i32 %20837, %20841
  %sub2583alteredBB = sub nsw i32 %20837, 31
  %_6699 = shl i32 %20842, 30
  %_6700 = shl i32 %20842, 30
  %_6701 = shl i32 %20842, 30
  %20843 = sub i32 0, 30
  %20844 = add i32 %20842, %20843
  %_6702 = sub i32 %20842, 30
  %gen6703 = mul i32 %20844, 30
  %20845 = sub i32 %20842, -1018467383
  %20846 = sub i32 %20845, 30
  %20847 = add i32 %20846, -1018467383
  %_6704 = sub i32 %20842, 30
  %gen6705 = mul i32 %20847, 30
  %20848 = sub i32 %20842, -628110256
  %20849 = sub i32 %20848, 30
  %20850 = add i32 %20849, -628110256
  %_6706 = sub i32 %20842, 30
  %gen6707 = mul i32 %20850, 30
  %20851 = sub i32 0, 30
  %20852 = add i32 %20842, %20851
  %sub2584alteredBB = sub nsw i32 %20842, 30
  %_6708 = shl i32 %20852, 31
  %20853 = sub i32 0, 31
  %20854 = add i32 %20852, %20853
  %_6709 = sub i32 %20852, 31
  %gen6710 = mul i32 %20854, 31
  %20855 = sub i32 %20852, 1811858064
  %20856 = sub i32 %20855, 31
  %20857 = add i32 %20856, 1811858064
  %_6711 = sub i32 %20852, 31
  %gen6712 = mul i32 %20857, 31
  %20858 = sub i32 %20852, -380734567
  %20859 = sub i32 %20858, 31
  %20860 = add i32 %20859, -380734567
  %sub2585alteredBB = sub nsw i32 %20852, 31
  %_6713 = shl i32 %20860, 30
  %20861 = sub i32 0, %20860
  %20862 = add i32 0, %20861
  %_6714 = sub i32 0, %20860
  %20863 = add i32 %20862, -1718198155
  %20864 = add i32 %20863, 30
  %20865 = sub i32 %20864, -1718198155
  %gen6715 = add i32 %20862, 30
  %_6716 = shl i32 %20860, 30
  %20866 = add i32 0, -1341346583
  %20867 = sub i32 %20866, %20860
  %20868 = sub i32 %20867, -1341346583
  %_6717 = sub i32 0, %20860
  %20869 = sub i32 %20868, -1740357726
  %20870 = add i32 %20869, 30
  %20871 = add i32 %20870, -1740357726
  %gen6718 = add i32 %20868, 30
  %20872 = add i32 0, 992851466
  %20873 = sub i32 %20872, %20860
  %20874 = sub i32 %20873, 992851466
  %_6719 = sub i32 0, %20860
  %20875 = sub i32 0, 30
  %20876 = sub i32 %20874, %20875
  %gen6720 = add i32 %20874, 30
  %20877 = add i32 %20860, -1055127452
  %20878 = sub i32 %20877, 30
  %20879 = sub i32 %20878, -1055127452
  %sub2586alteredBB = sub nsw i32 %20860, 30
  %20880 = load i32, i32* %f, align 4
  %_6721 = shl i32 %20879, %20880
  %20881 = add i32 %20879, -595258254
  %20882 = sub i32 %20881, %20880
  %20883 = sub i32 %20882, -595258254
  %_6722 = sub i32 %20879, %20880
  %gen6723 = mul i32 %20883, %20880
  %20884 = sub i32 0, %20880
  %20885 = sub i32 %20879, %20884
  %add2587alteredBB = add nsw i32 %20879, %20880
  %20886 = load i32, i32* %c, align 4
  %20887 = sub i32 0, %20886
  %20888 = add i32 %20885, %20887
  %_6724 = sub i32 %20885, %20886
  %gen6725 = mul i32 %20888, %20886
  %20889 = sub i32 %20885, -1352095936
  %20890 = sub i32 %20889, %20886
  %20891 = add i32 %20890, -1352095936
  %sub2588alteredBB = sub nsw i32 %20885, %20886
  store i32 %20891, i32* %s, align 4
  %20892 = load i32, i32* %s, align 4
  %call2589alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %20892)
  store i32 -1052197482, i32* %switchVar
  br label %loopEnd

originalBB6729alteredBB:                          ; preds = %loopEntry
  %20893 = load i32, i32* %s, align 4
  %_6730 = shl i32 %20893, 31
  %_6731 = shl i32 %20893, 31
  %_6732 = shl i32 %20893, 31
  %20894 = sub i32 %20893, -1921256100
  %20895 = sub i32 %20894, 31
  %20896 = add i32 %20895, -1921256100
  %_6733 = sub i32 %20893, 31
  %gen6734 = mul i32 %20896, 31
  %20897 = sub i32 %20893, 101353773
  %20898 = sub i32 %20897, 31
  %20899 = add i32 %20898, 101353773
  %sub2593alteredBB = sub nsw i32 %20893, 31
  %20900 = add i32 %20899, -399177575
  %20901 = sub i32 %20900, 30
  %20902 = sub i32 %20901, -399177575
  %_6735 = sub i32 %20899, 30
  %gen6736 = mul i32 %20902, 30
  %20903 = add i32 %20899, 1389051621
  %20904 = sub i32 %20903, 30
  %20905 = sub i32 %20904, 1389051621
  %sub2594alteredBB = sub nsw i32 %20899, 30
  %20906 = add i32 0, -1888011850
  %20907 = sub i32 %20906, %20905
  %20908 = sub i32 %20907, -1888011850
  %_6737 = sub i32 0, %20905
  %20909 = sub i32 0, %20908
  %20910 = sub i32 0, 31
  %20911 = add i32 %20909, %20910
  %20912 = sub i32 0, %20911
  %gen6738 = add i32 %20908, 31
  %20913 = sub i32 0, %20905
  %20914 = add i32 0, %20913
  %_6739 = sub i32 0, %20905
  %20915 = sub i32 0, %20914
  %20916 = sub i32 0, 31
  %20917 = add i32 %20915, %20916
  %20918 = sub i32 0, %20917
  %gen6740 = add i32 %20914, 31
  %20919 = sub i32 %20905, -1667484106
  %20920 = sub i32 %20919, 31
  %20921 = add i32 %20920, -1667484106
  %_6741 = sub i32 %20905, 31
  %gen6742 = mul i32 %20921, 31
  %_6743 = shl i32 %20905, 31
  %20922 = sub i32 0, %20905
  %20923 = add i32 0, %20922
  %_6744 = sub i32 0, %20905
  %20924 = sub i32 %20923, 514054080
  %20925 = add i32 %20924, 31
  %20926 = add i32 %20925, 514054080
  %gen6745 = add i32 %20923, 31
  %20927 = add i32 %20905, 1925336520
  %20928 = sub i32 %20927, 31
  %20929 = sub i32 %20928, 1925336520
  %sub2595alteredBB = sub nsw i32 %20905, 31
  %20930 = sub i32 %20929, -446520899
  %20931 = sub i32 %20930, 31
  %20932 = add i32 %20931, -446520899
  %sub2596alteredBB = sub nsw i32 %20929, 31
  %20933 = add i32 0, -2021602461
  %20934 = sub i32 %20933, %20932
  %20935 = sub i32 %20934, -2021602461
  %_6746 = sub i32 0, %20932
  %20936 = sub i32 0, 30
  %20937 = sub i32 %20935, %20936
  %gen6747 = add i32 %20935, 30
  %_6748 = shl i32 %20932, 30
  %_6749 = shl i32 %20932, 30
  %_6750 = shl i32 %20932, 30
  %20938 = sub i32 %20932, 895522717
  %20939 = sub i32 %20938, 30
  %20940 = add i32 %20939, 895522717
  %_6751 = sub i32 %20932, 30
  %gen6752 = mul i32 %20940, 30
  %_6753 = shl i32 %20932, 30
  %20941 = sub i32 %20932, -1097149503
  %20942 = sub i32 %20941, 30
  %20943 = add i32 %20942, -1097149503
  %sub2597alteredBB = sub nsw i32 %20932, 30
  %20944 = add i32 0, -173783522
  %20945 = sub i32 %20944, %20943
  %20946 = sub i32 %20945, -173783522
  %_6754 = sub i32 0, %20943
  %20947 = sub i32 0, %20946
  %20948 = sub i32 0, 31
  %20949 = add i32 %20947, %20948
  %20950 = sub i32 0, %20949
  %gen6755 = add i32 %20946, 31
  %20951 = sub i32 %20943, -795236235
  %20952 = sub i32 %20951, 31
  %20953 = add i32 %20952, -795236235
  %sub2598alteredBB = sub nsw i32 %20943, 31
  %20954 = load i32, i32* %f, align 4
  %20955 = add i32 %20953, -1615934867
  %20956 = sub i32 %20955, %20954
  %20957 = sub i32 %20956, -1615934867
  %_6756 = sub i32 %20953, %20954
  %gen6757 = mul i32 %20957, %20954
  %20958 = sub i32 0, -247071561
  %20959 = sub i32 %20958, %20953
  %20960 = add i32 %20959, -247071561
  %_6758 = sub i32 0, %20953
  %20961 = add i32 %20960, -1437602585
  %20962 = add i32 %20961, %20954
  %20963 = sub i32 %20962, -1437602585
  %gen6759 = add i32 %20960, %20954
  %20964 = sub i32 0, -1783636924
  %20965 = sub i32 %20964, %20953
  %20966 = add i32 %20965, -1783636924
  %_6760 = sub i32 0, %20953
  %20967 = add i32 %20966, 249419837
  %20968 = add i32 %20967, %20954
  %20969 = sub i32 %20968, 249419837
  %gen6761 = add i32 %20966, %20954
  %20970 = sub i32 0, %20954
  %20971 = add i32 %20953, %20970
  %_6762 = sub i32 %20953, %20954
  %gen6763 = mul i32 %20971, %20954
  %20972 = sub i32 0, %20953
  %20973 = add i32 0, %20972
  %_6764 = sub i32 0, %20953
  %20974 = add i32 %20973, 972434426
  %20975 = add i32 %20974, %20954
  %20976 = sub i32 %20975, 972434426
  %gen6765 = add i32 %20973, %20954
  %20977 = add i32 %20953, 1572330662
  %20978 = add i32 %20977, %20954
  %20979 = sub i32 %20978, 1572330662
  %add2599alteredBB = add nsw i32 %20953, %20954
  %20980 = load i32, i32* %c, align 4
  %20981 = sub i32 %20979, 43346222
  %20982 = sub i32 %20981, %20980
  %20983 = add i32 %20982, 43346222
  %_6766 = sub i32 %20979, %20980
  %gen6767 = mul i32 %20983, %20980
  %20984 = sub i32 0, 461718844
  %20985 = sub i32 %20984, %20979
  %20986 = add i32 %20985, 461718844
  %_6768 = sub i32 0, %20979
  %20987 = sub i32 0, %20986
  %20988 = sub i32 0, %20980
  %20989 = add i32 %20987, %20988
  %20990 = sub i32 0, %20989
  %gen6769 = add i32 %20986, %20980
  %_6770 = shl i32 %20979, %20980
  %20991 = sub i32 0, -1581892267
  %20992 = sub i32 %20991, %20979
  %20993 = add i32 %20992, -1581892267
  %_6771 = sub i32 0, %20979
  %20994 = sub i32 0, %20993
  %20995 = sub i32 0, %20980
  %20996 = add i32 %20994, %20995
  %20997 = sub i32 0, %20996
  %gen6772 = add i32 %20993, %20980
  %20998 = sub i32 0, %20980
  %20999 = add i32 %20979, %20998
  %sub2600alteredBB = sub nsw i32 %20979, %20980
  store i32 %20999, i32* %s, align 4
  %21000 = load i32, i32* %s, align 4
  %call2601alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %21000)
  store i32 -2074106340, i32* %switchVar
  br label %loopEnd

originalBB6776alteredBB:                          ; preds = %loopEntry
  %21001 = load i32, i32* %e, align 4
  %cmp2656alteredBB = icmp eq i32 %21001, 1
  store i32 735805603, i32* %switchVar
  br label %loopEnd

originalBB6780alteredBB:                          ; preds = %loopEntry
  %21002 = load i32, i32* %e, align 4
  %cmp2731alteredBB = icmp eq i32 %21002, 6
  store i32 584069336, i32* %switchVar
  br label %loopEnd

originalBB6784alteredBB:                          ; preds = %loopEntry
  %21003 = load i32, i32* %s, align 4
  %21004 = sub i32 0, 1190850090
  %21005 = sub i32 %21004, %21003
  %21006 = add i32 %21005, 1190850090
  %_6785 = sub i32 0, %21003
  %21007 = sub i32 0, 30
  %21008 = sub i32 %21006, %21007
  %gen6786 = add i32 %21006, 30
  %21009 = sub i32 %21003, -464625481
  %21010 = sub i32 %21009, 30
  %21011 = add i32 %21010, -464625481
  %sub2756alteredBB = sub nsw i32 %21003, 30
  %_6787 = shl i32 %21011, 31
  %_6788 = shl i32 %21011, 31
  %21012 = sub i32 0, %21011
  %21013 = add i32 0, %21012
  %_6789 = sub i32 0, %21011
  %21014 = sub i32 %21013, -731500738
  %21015 = add i32 %21014, 31
  %21016 = add i32 %21015, -731500738
  %gen6790 = add i32 %21013, 31
  %_6791 = shl i32 %21011, 31
  %_6792 = shl i32 %21011, 31
  %21017 = sub i32 0, %21011
  %21018 = add i32 0, %21017
  %_6793 = sub i32 0, %21011
  %21019 = sub i32 0, %21018
  %21020 = sub i32 0, 31
  %21021 = add i32 %21019, %21020
  %21022 = sub i32 0, %21021
  %gen6794 = add i32 %21018, 31
  %21023 = sub i32 0, %21011
  %21024 = add i32 0, %21023
  %_6795 = sub i32 0, %21011
  %21025 = sub i32 0, 31
  %21026 = sub i32 %21024, %21025
  %gen6796 = add i32 %21024, 31
  %21027 = sub i32 0, %21011
  %21028 = add i32 0, %21027
  %_6797 = sub i32 0, %21011
  %21029 = sub i32 0, %21028
  %21030 = sub i32 0, 31
  %21031 = add i32 %21029, %21030
  %21032 = sub i32 0, %21031
  %gen6798 = add i32 %21028, 31
  %21033 = sub i32 0, 383882726
  %21034 = sub i32 %21033, %21011
  %21035 = add i32 %21034, 383882726
  %_6799 = sub i32 0, %21011
  %21036 = sub i32 0, %21035
  %21037 = sub i32 0, 31
  %21038 = add i32 %21036, %21037
  %21039 = sub i32 0, %21038
  %gen6800 = add i32 %21035, 31
  %21040 = add i32 %21011, -619782740
  %21041 = sub i32 %21040, 31
  %21042 = sub i32 %21041, -619782740
  %sub2757alteredBB = sub nsw i32 %21011, 31
  %21043 = add i32 %21042, -132301422
  %21044 = sub i32 %21043, 30
  %21045 = sub i32 %21044, -132301422
  %_6801 = sub i32 %21042, 30
  %gen6802 = mul i32 %21045, 30
  %21046 = sub i32 0, 30
  %21047 = add i32 %21042, %21046
  %_6803 = sub i32 %21042, 30
  %gen6804 = mul i32 %21047, 30
  %21048 = sub i32 %21042, 217295570
  %21049 = sub i32 %21048, 30
  %21050 = add i32 %21049, 217295570
  %_6805 = sub i32 %21042, 30
  %gen6806 = mul i32 %21050, 30
  %21051 = sub i32 0, 30
  %21052 = add i32 %21042, %21051
  %_6807 = sub i32 %21042, 30
  %gen6808 = mul i32 %21052, 30
  %21053 = add i32 0, -741850786
  %21054 = sub i32 %21053, %21042
  %21055 = sub i32 %21054, -741850786
  %_6809 = sub i32 0, %21042
  %21056 = add i32 %21055, 967346619
  %21057 = add i32 %21056, 30
  %21058 = sub i32 %21057, 967346619
  %gen6810 = add i32 %21055, 30
  %_6811 = shl i32 %21042, 30
  %_6812 = shl i32 %21042, 30
  %21059 = sub i32 %21042, 350793352
  %21060 = sub i32 %21059, 30
  %21061 = add i32 %21060, 350793352
  %sub2758alteredBB = sub nsw i32 %21042, 30
  %21062 = sub i32 0, %21061
  %21063 = add i32 0, %21062
  %_6813 = sub i32 0, %21061
  %21064 = sub i32 0, %21063
  %21065 = sub i32 0, 31
  %21066 = add i32 %21064, %21065
  %21067 = sub i32 0, %21066
  %gen6814 = add i32 %21063, 31
  %_6815 = shl i32 %21061, 31
  %_6816 = shl i32 %21061, 31
  %21068 = sub i32 0, %21061
  %21069 = add i32 0, %21068
  %_6817 = sub i32 0, %21061
  %21070 = sub i32 0, %21069
  %21071 = sub i32 0, 31
  %21072 = add i32 %21070, %21071
  %21073 = sub i32 0, %21072
  %gen6818 = add i32 %21069, 31
  %21074 = sub i32 0, 31
  %21075 = add i32 %21061, %21074
  %_6819 = sub i32 %21061, 31
  %gen6820 = mul i32 %21075, 31
  %21076 = sub i32 %21061, 259759313
  %21077 = sub i32 %21076, 31
  %21078 = add i32 %21077, 259759313
  %_6821 = sub i32 %21061, 31
  %gen6822 = mul i32 %21078, 31
  %_6823 = shl i32 %21061, 31
  %21079 = sub i32 0, 31
  %21080 = add i32 %21061, %21079
  %sub2759alteredBB = sub nsw i32 %21061, 31
  %21081 = load i32, i32* %f, align 4
  %_6824 = shl i32 %21080, %21081
  %21082 = add i32 %21080, -935866644
  %21083 = add i32 %21082, %21081
  %21084 = sub i32 %21083, -935866644
  %add2760alteredBB = add nsw i32 %21080, %21081
  %21085 = load i32, i32* %c, align 4
  %_6825 = shl i32 %21084, %21085
  %_6826 = shl i32 %21084, %21085
  %21086 = sub i32 0, %21084
  %21087 = add i32 0, %21086
  %_6827 = sub i32 0, %21084
  %21088 = sub i32 %21087, 1282220258
  %21089 = add i32 %21088, %21085
  %21090 = add i32 %21089, 1282220258
  %gen6828 = add i32 %21087, %21085
  %_6829 = shl i32 %21084, %21085
  %21091 = sub i32 0, %21085
  %21092 = add i32 %21084, %21091
  %_6830 = sub i32 %21084, %21085
  %gen6831 = mul i32 %21092, %21085
  %21093 = sub i32 %21084, -1752532510
  %21094 = sub i32 %21093, %21085
  %21095 = add i32 %21094, -1752532510
  %_6832 = sub i32 %21084, %21085
  %gen6833 = mul i32 %21095, %21085
  %21096 = sub i32 0, %21085
  %21097 = add i32 %21084, %21096
  %sub2761alteredBB = sub nsw i32 %21084, %21085
  store i32 %21097, i32* %s, align 4
  %21098 = load i32, i32* %s, align 4
  %call2762alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %21098)
  store i32 -773330413, i32* %switchVar
  br label %loopEnd

originalBB6837alteredBB:                          ; preds = %loopEntry
  %21099 = load i32, i32* %e, align 4
  %cmp2764alteredBB = icmp eq i32 %21099, 9
  store i32 -1826121561, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB6837alteredBB, %originalBB6784alteredBB, %originalBB6780alteredBB, %originalBB6776alteredBB, %originalBB6729alteredBB, %originalBB6663alteredBB, %originalBB6659alteredBB, %originalBB6627alteredBB, %originalBB6586alteredBB, %originalBB6582alteredBB, %originalBB6508alteredBB, %originalBB6427alteredBB, %originalBB6391alteredBB, %originalBB6387alteredBB, %originalBB6363alteredBB, %originalBB6359alteredBB, %originalBB6355alteredBB, %originalBB6351alteredBB, %originalBB6321alteredBB, %originalBB6317alteredBB, %originalBB6298alteredBB, %originalBB6294alteredBB, %originalBB6290alteredBB, %originalBB6239alteredBB, %originalBB6235alteredBB, %originalBB6181alteredBB, %originalBB6111alteredBB, %originalBB6107alteredBB, %originalBB6072alteredBB, %originalBB6068alteredBB, %originalBB6037alteredBB, %originalBB6004alteredBB, %originalBB5976alteredBB, %originalBB5932alteredBB, %originalBB5928alteredBB, %originalBB5883alteredBB, %originalBB5813alteredBB, %originalBB5809alteredBB, %originalBB5769alteredBB, %originalBB5765alteredBB, %originalBB5761alteredBB, %originalBB5726alteredBB, %originalBB5722alteredBB, %originalBB5712alteredBB, %originalBB5708alteredBB, %originalBB5642alteredBB, %originalBB5638alteredBB, %originalBB5634alteredBB, %originalBB5600alteredBB, %originalBB5596alteredBB, %originalBB5592alteredBB, %originalBB5588alteredBB, %originalBB5584alteredBB, %originalBB5530alteredBB, %originalBB5526alteredBB, %originalBB5484alteredBB, %originalBB5480alteredBB, %originalBB5446alteredBB, %originalBB5419alteredBB, %originalBB5382alteredBB, %originalBB5344alteredBB, %originalBB5340alteredBB, %originalBB5273alteredBB, %originalBB5269alteredBB, %originalBB5205alteredBB, %originalBB5201alteredBB, %originalBB5173alteredBB, %originalBB5169alteredBB, %originalBB5138alteredBB, %originalBB5120alteredBB, %originalBB5116alteredBB, %originalBB5112alteredBB, %originalBB5016alteredBB, %originalBB4950alteredBB, %originalBB4946alteredBB, %originalBB4942alteredBB, %originalBB4848alteredBB, %originalBB4844alteredBB, %originalBB4840alteredBB, %originalBB4799alteredBB, %originalBB4748alteredBB, %originalBB4744alteredBB, %originalBB4740alteredBB, %originalBB4736alteredBB, %originalBB4732alteredBB, %originalBB4724alteredBB, %originalBB4720alteredBB, %originalBB4716alteredBB, %originalBB4712alteredBB, %originalBB4684alteredBB, %originalBB4680alteredBB, %originalBB4628alteredBB, %originalBB4624alteredBB, %originalBB4562alteredBB, %originalBB4541alteredBB, %originalBB4516alteredBB, %originalBB4512alteredBB, %originalBB4508alteredBB, %originalBB4504alteredBB, %originalBB4500alteredBB, %originalBB4476alteredBB, %originalBB4433alteredBB, %originalBB4429alteredBB, %originalBB4371alteredBB, %originalBB4367alteredBB, %originalBB4363alteredBB, %originalBB4359alteredBB, %originalBB4344alteredBB, %originalBB4297alteredBB, %originalBB4293alteredBB, %originalBB4289alteredBB, %originalBB4285alteredBB, %originalBB4252alteredBB, %originalBB4227alteredBB, %originalBB4201alteredBB, %originalBB4172alteredBB, %originalBB4115alteredBB, %originalBB4111alteredBB, %originalBB4107alteredBB, %originalBB4059alteredBB, %originalBB4055alteredBB, %originalBB4012alteredBB, %originalBB3989alteredBB, %originalBB3962alteredBB, %originalBB3958alteredBB, %originalBB3930alteredBB, %originalBB3900alteredBB, %originalBB3896alteredBB, %originalBB3866alteredBB, %originalBB3837alteredBB, %originalBB3833alteredBB, %originalBB3800alteredBB, %originalBB3796alteredBB, %originalBB3792alteredBB, %originalBB3788alteredBB, %originalBB3784alteredBB, %originalBB3724alteredBB, %originalBB3694alteredBB, %originalBB3668alteredBB, %originalBB3664alteredBB, %originalBB3645alteredBB, %originalBB3641alteredBB, %originalBB3585alteredBB, %originalBB3581alteredBB, %originalBB3528alteredBB, %originalBB3524alteredBB, %originalBB3487alteredBB, %originalBB3447alteredBB, %originalBB3414alteredBB, %originalBB3326alteredBB, %originalBB3322alteredBB, %originalBB3318alteredBB, %originalBB3314alteredBB, %originalBB3293alteredBB, %originalBB3264alteredBB, %originalBB3260alteredBB, %originalBB3174alteredBB, %originalBB3170alteredBB, %originalBB3166alteredBB, %originalBB3119alteredBB, %originalBB3115alteredBB, %originalBB3079alteredBB, %originalBB3049alteredBB, %originalBB3045alteredBB, %originalBB2949alteredBB, %originalBB2945alteredBB, %originalBB2941alteredBB, %originalBB2876alteredBB, %originalBB2839alteredBB, %originalBB2835alteredBB, %originalBB2804alteredBB, %originalBB2800alteredBB, %originalBB2794alteredBB, %originalBB2789alteredBB, %originalBBalteredBB, %NewDefault6870, %if.end2787, %if.then2782, %if.end2780, %if.then2774, %if.end2772, %if.then2765, %originalBBpart26839, %originalBB6837, %if.end2763, %originalBBpart26835, %originalBB6784, %if.then2755, %if.end2753, %if.then2744, %if.end2742, %if.then2732, %originalBBpart26782, %originalBB6780, %if.end2730, %if.then2719, %if.end2717, %if.then2705, %if.end2703, %if.then2690, %if.end2688, %if.then2674, %if.end2672, %if.then2657, %originalBBpart26778, %originalBB6776, %sw.bb2655, %if.end2654, %if.then2649, %if.end2647, %if.then2642, %if.end2640, %if.then2634, %if.end2632, %if.then2625, %if.end2623, %if.then2615, %if.end2613, %if.then2604, %if.end2602, %originalBBpart26774, %originalBB6729, %if.then2592, %if.end2590, %originalBBpart26727, %originalBB6663, %if.then2579, %if.end2577, %if.then2565, %if.end2563, %if.then2550, %if.end2548, %if.then2534, %sw.bb2532, %if.end2531, %if.then2525, %originalBBpart26661, %originalBB6659, %if.end2523, %if.then2518, %if.end2516, %originalBBpart26657, %originalBB6627, %if.then2511, %if.end2509, %if.then2503, %if.end2501, %originalBBpart26625, %originalBB6586, %if.then2494, %if.end2492, %if.then2484, %if.end2482, %if.then2473, %if.end2471, %if.then2461, %originalBBpart26584, %originalBB6582, %if.end2459, %if.then2448, %if.end2446, %originalBBpart26580, %originalBB6508, %if.then2434, %if.end2432, %originalBBpart26506, %originalBB6427, %if.then2419, %sw.bb2417, %if.end2416, %originalBBpart26425, %originalBB6391, %if.then2409, %originalBBpart26389, %originalBB6387, %if.end2407, %originalBBpart26385, %originalBB6363, %if.then2401, %originalBBpart26361, %originalBB6359, %if.end2399, %if.then2394, %originalBBpart26357, %originalBB6355, %if.end2392, %if.then2387, %if.end2385, %if.then2379, %if.end2377, %if.then2370, %if.end2368, %if.then2360, %if.end2358, %if.then2349, %if.end2347, %if.then2337, %if.end2335, %if.then2324, %if.end2322, %if.then2310, %sw.bb2308, %originalBBpart26353, %originalBB6351, %if.end2307, %originalBBpart26349, %originalBB6321, %if.then2299, %originalBBpart26319, %originalBB6317, %if.end2297, %if.then2290, %if.end2288, %if.then2282, %if.end2280, %if.then2275, %if.end2273, %originalBBpart26315, %originalBB6298, %if.then2268, %originalBBpart26296, %originalBB6294, %if.end2266, %if.then2260, %originalBBpart26292, %originalBB6290, %if.end2258, %if.then2251, %if.end2249, %originalBBpart26288, %originalBB6239, %if.then2241, %if.end2239, %if.then2230, %originalBBpart26237, %originalBB6235, %if.end2228, %if.then2218, %if.end2216, %originalBBpart26233, %originalBB6181, %if.then2205, %sw.bb2203, %if.end2202, %if.then2193, %if.end2191, %originalBBpart26179, %originalBB6111, %if.then2183, %if.end2181, %if.then2174, %originalBBpart26109, %originalBB6107, %if.end2172, %originalBBpart26105, %originalBB6072, %if.then2166, %originalBBpart26070, %originalBB6068, %if.end2164, %originalBBpart26066, %originalBB6037, %if.then2159, %if.end2157, %originalBBpart26035, %originalBB6004, %if.then2152, %if.end2150, %originalBBpart26002, %originalBB5976, %if.then2144, %if.end2142, %originalBBpart25974, %originalBB5932, %if.then2135, %if.end2133, %if.then2125, %if.end2123, %if.then2114, %originalBBpart25930, %originalBB5928, %if.end2112, %originalBBpart25926, %originalBB5883, %if.then2102, %sw.bb2100, %if.end2099, %originalBBpart25881, %originalBB5813, %if.then2089, %originalBBpart25811, %originalBB5809, %if.end2087, %originalBBpart25807, %originalBB5769, %if.then2078, %originalBBpart25767, %originalBB5765, %if.end2076, %if.then2068, %originalBBpart25763, %originalBB5761, %if.end2066, %if.then2059, %if.end2057, %originalBBpart25759, %originalBB5726, %if.then2051, %if.end2049, %if.then2044, %originalBBpart25724, %originalBB5722, %if.end2042, %originalBBpart25720, %originalBB5712, %if.then2037, %if.end2035, %if.then2029, %if.end2027, %if.then2020, %if.end2018, %if.then2010, %originalBBpart25710, %originalBB5708, %if.end2008, %if.then1999, %sw.bb1997, %if.end1996, %if.then1985, %if.end1983, %if.then1973, %if.end1971, %originalBBpart25706, %originalBB5642, %if.then1962, %originalBBpart25640, %originalBB5638, %if.end1960, %if.then1952, %if.end1950, %if.then1943, %if.end1941, %if.then1935, %if.end1933, %if.then1928, %if.end1926, %if.then1921, %originalBBpart25636, %originalBB5634, %if.end1919, %originalBBpart25632, %originalBB5600, %if.then1913, %if.end1911, %if.then1904, %if.end1902, %if.then1894, %originalBBpart25598, %originalBB5596, %sw.bb1892, %originalBBpart25594, %originalBB5592, %if.end1891, %if.then1879, %originalBBpart25590, %originalBB5588, %if.end1877, %if.then1866, %if.end1864, %if.then1854, %originalBBpart25586, %originalBB5584, %if.end1852, %originalBBpart25582, %originalBB5530, %if.then1843, %originalBBpart25528, %originalBB5526, %if.end1841, %originalBBpart25524, %originalBB5484, %if.then1833, %originalBBpart25482, %originalBB5480, %if.end1831, %originalBBpart25478, %originalBB5446, %if.then1824, %if.end1822, %originalBBpart25444, %originalBB5419, %if.then1816, %if.end1814, %if.then1809, %if.end1807, %originalBBpart25417, %originalBB5382, %if.then1802, %if.end1800, %if.then1794, %if.end1792, %originalBBpart25380, %originalBB5344, %if.then1785, %originalBBpart25342, %originalBB5340, %sw.bb1783, %if.end1782, %if.then1769, %if.end1767, %originalBBpart25338, %originalBB5273, %if.then1755, %if.end1753, %if.then1742, %if.end1740, %if.then1730, %if.end1728, %if.then1719, %originalBBpart25271, %originalBB5269, %if.end1717, %originalBBpart25267, %originalBB5205, %if.then1709, %if.end1707, %if.then1700, %originalBBpart25203, %originalBB5201, %if.end1698, %originalBBpart25199, %originalBB5173, %if.then1692, %originalBBpart25171, %originalBB5169, %if.end1690, %originalBBpart25167, %originalBB5138, %if.then1685, %if.end1683, %if.then1678, %if.end1676, %originalBBpart25136, %originalBB5120, %if.then1670, %originalBBpart25118, %originalBB5116, %sw.bb1668, %LeafBlock6871, %NodeBlock6873, %NodeBlock6875, %NodeBlock6877, %NodeBlock6879, %NodeBlock6881, %LeafBlock6883, %NodeBlock6885, %NodeBlock6887, %NodeBlock6889, %NodeBlock6891, %if.end1667, %if.end1666, %originalBBpart25114, %originalBB5112, %sw.epilog1665, %NewDefault6863, %if.end1664, %originalBBpart25110, %originalBB5016, %if.then1650, %if.end1648, %originalBBpart25014, %originalBB4950, %if.then1635, %if.end1633, %if.then1621, %if.end1619, %if.then1608, %originalBBpart24948, %originalBB4946, %if.end1606, %if.then1596, %if.end1594, %if.then1585, %if.end1583, %if.then1575, %if.end1573, %if.then1566, %if.end1564, %if.then1558, %if.end1556, %if.then1551, %originalBBpart24944, %originalBB4942, %if.end1549, %if.then1544, %sw.bb1542, %if.end1541, %if.then1526, %if.end1524, %if.then1510, %if.end1508, %originalBBpart24940, %originalBB4848, %if.then1495, %originalBBpart24846, %originalBB4844, %if.end1493, %if.then1481, %originalBBpart24842, %originalBB4840, %if.end1479, %if.then1468, %if.end1466, %originalBBpart24838, %originalBB4799, %if.then1456, %if.end1454, %if.then1445, %if.end1443, %originalBBpart24797, %originalBB4748, %if.then1435, %originalBBpart24746, %originalBB4744, %if.end1433, %if.then1426, %originalBBpart24742, %originalBB4740, %if.end1424, %if.then1418, %if.end1416, %if.then1411, %originalBBpart24738, %originalBB4736, %sw.bb1409, %LeafBlock6864, %LeafBlock6866, %NodeBlock6868, %originalBBpart24734, %originalBB4732, %if.else1408, %originalBBpart24730, %originalBB4724, %if.then1404, %originalBBpart24722, %originalBB4720, %if.else1402, %if.end1401, %sw.epilog, %NewDefault, %originalBBpart24718, %originalBB4716, %if.end1400, %if.then1395, %originalBBpart24714, %originalBB4712, %if.end1393, %if.then1387, %if.end1385, %originalBBpart24710, %originalBB4684, %if.then1378, %if.end1376, %if.then1368, %originalBBpart24682, %originalBB4680, %if.end1366, %if.then1357, %if.end1355, %if.then1345, %if.end1343, %originalBBpart24678, %originalBB4628, %if.then1332, %originalBBpart24626, %originalBB4624, %if.end1330, %originalBBpart24622, %originalBB4562, %if.then1318, %if.end1316, %if.then1303, %if.end1301, %if.then1287, %if.end1285, %if.then1270, %sw.bb1268, %if.end1267, %originalBBpart24560, %originalBB4541, %if.then1262, %if.end1260, %if.then1255, %if.end1253, %if.then1247, %if.end1245, %originalBBpart24539, %originalBB4516, %if.then1238, %if.end1236, %if.then1228, %originalBBpart24514, %originalBB4512, %if.end1226, %if.then1217, %if.end1215, %if.then1205, %originalBBpart24510, %originalBB4508, %if.end1203, %if.then1192, %if.end1190, %if.then1178, %if.end1176, %if.then1163, %originalBBpart24506, %originalBB4504, %if.end1161, %if.then1147, %sw.bb1145, %originalBBpart24502, %originalBB4500, %if.end1144, %if.then1138, %if.end1136, %if.then1131, %if.end1129, %originalBBpart24498, %originalBB4476, %if.then1124, %if.end1122, %originalBBpart24474, %originalBB4433, %if.then1116, %if.end1114, %if.then1107, %if.end1105, %if.then1097, %originalBBpart24431, %originalBB4429, %if.end1095, %originalBBpart24427, %originalBB4371, %if.then1086, %originalBBpart24369, %originalBB4367, %if.end1084, %if.then1074, %if.end1072, %if.then1061, %if.end1059, %if.then1047, %if.end1045, %if.then1032, %originalBBpart24365, %originalBB4363, %sw.bb1030, %if.end1029, %if.then1022, %if.end1020, %if.then1014, %originalBBpart24361, %originalBB4359, %if.end1012, %if.then1007, %if.end1005, %originalBBpart24357, %originalBB4344, %if.then1000, %if.end998, %if.then992, %if.end990, %originalBBpart24342, %originalBB4297, %if.then983, %if.end981, %if.then973, %if.end971, %if.then962, %originalBBpart24295, %originalBB4293, %if.end960, %if.then950, %originalBBpart24291, %originalBB4289, %if.end948, %if.then937, %originalBBpart24287, %originalBB4285, %if.end935, %if.then923, %sw.bb921, %if.end920, %if.then912, %if.end910, %if.then903, %if.end901, %originalBBpart24283, %originalBB4252, %if.then895, %if.end893, %originalBBpart24250, %originalBB4227, %if.then888, %if.end886, %originalBBpart24225, %originalBB4201, %if.then881, %if.end879, %originalBBpart24199, %originalBB4172, %if.then873, %if.end871, %if.then864, %if.end862, %if.then854, %if.end852, %if.then843, %if.end841, %originalBBpart24170, %originalBB4115, %if.then831, %if.end829, %if.then818, %originalBBpart24113, %originalBB4111, %sw.bb816, %originalBBpart24109, %originalBB4107, %if.end815, %originalBBpart24105, %originalBB4059, %if.then806, %originalBBpart24057, %originalBB4055, %if.end804, %originalBBpart24053, %originalBB4012, %if.then796, %if.end794, %originalBBpart24010, %originalBB3989, %if.then787, %if.end785, %originalBBpart23987, %originalBB3962, %if.then779, %originalBBpart23960, %originalBB3958, %if.end777, %originalBBpart23956, %originalBB3930, %if.then772, %if.end770, %if.then765, %if.end763, %originalBBpart23928, %originalBB3900, %if.then757, %if.end755, %if.then748, %if.end746, %if.then738, %if.end736, %if.then727, %originalBBpart23898, %originalBB3896, %if.end725, %if.then715, %sw.bb713, %if.end712, %if.then702, %if.end700, %if.then691, %if.end689, %if.then681, %if.end679, %originalBBpart23894, %originalBB3866, %if.then672, %if.end670, %if.then664, %if.end662, %if.then657, %if.end655, %if.then650, %if.end648, %originalBBpart23864, %originalBB3837, %if.then642, %originalBBpart23835, %originalBB3833, %if.end640, %originalBBpart23831, %originalBB3800, %if.then633, %originalBBpart23798, %originalBB3796, %if.end631, %if.then623, %originalBBpart23794, %originalBB3792, %if.end621, %if.then612, %sw.bb610, %originalBBpart23790, %originalBB3788, %if.end609, %if.then598, %originalBBpart23786, %originalBB3784, %if.end596, %if.then586, %if.end584, %originalBBpart23782, %originalBB3724, %if.then575, %if.end573, %if.then565, %if.end563, %originalBBpart23722, %originalBB3694, %if.then556, %if.end554, %originalBBpart23692, %originalBB3668, %if.then548, %originalBBpart23666, %originalBB3664, %if.end546, %originalBBpart23662, %originalBB3645, %if.then541, %if.end539, %if.then534, %if.end532, %if.then526, %originalBBpart23643, %originalBB3641, %if.end524, %if.then517, %if.end515, %originalBBpart23639, %originalBB3585, %if.then507, %originalBBpart23583, %originalBB3581, %sw.bb505, %if.end504, %if.then492, %if.end490, %if.then479, %if.end477, %if.then467, %if.end465, %if.then456, %if.end454, %originalBBpart23579, %originalBB3528, %if.then446, %originalBBpart23526, %originalBB3524, %if.end444, %originalBBpart23522, %originalBB3487, %if.then437, %if.end435, %originalBBpart23485, %originalBB3447, %if.then429, %if.end427, %originalBBpart23445, %originalBB3414, %if.then422, %if.end420, %if.then415, %if.end413, %if.then407, %if.end405, %if.then398, %sw.bb396, %if.end395, %originalBBpart23412, %originalBB3326, %if.then382, %if.end380, %if.then368, %originalBBpart23324, %originalBB3322, %if.end366, %if.then355, %if.end353, %if.then343, %if.end341, %if.then332, %if.end330, %if.then322, %originalBBpart23320, %originalBB3318, %if.end320, %if.then313, %originalBBpart23316, %originalBB3314, %if.end311, %if.then305, %if.end303, %if.then298, %if.end296, %originalBBpart23312, %originalBB3293, %if.then291, %if.end289, %originalBBpart23291, %originalBB3264, %if.then283, %sw.bb281, %originalBBpart23262, %originalBB3260, %if.end280, %originalBBpart23258, %originalBB3174, %if.then266, %originalBBpart23172, %originalBB3170, %if.end264, %if.then251, %originalBBpart23168, %originalBB3166, %if.end249, %originalBBpart23164, %originalBB3119, %if.then237, %if.end235, %if.then224, %if.end222, %if.then212, %originalBBpart23117, %originalBB3115, %if.end210, %if.then201, %if.end199, %if.then191, %if.end189, %originalBBpart23113, %originalBB3079, %if.then182, %if.end180, %originalBBpart23077, %originalBB3049, %if.then174, %if.end172, %if.then167, %if.end165, %if.then160, %originalBBpart23047, %originalBB3045, %sw.bb158, %if.end157, %originalBBpart23043, %originalBB2949, %if.then142, %originalBBpart22947, %originalBB2945, %if.end140, %if.then126, %if.end124, %if.then111, %originalBBpart22943, %originalBB2941, %if.end109, %if.then97, %if.end95, %originalBBpart22939, %originalBB2876, %if.then84, %if.end82, %if.then72, %if.end70, %if.then61, %if.end59, %originalBBpart22874, %originalBB2839, %if.then51, %if.end49, %if.then42, %originalBBpart22837, %originalBB2835, %if.end40, %if.then34, %if.end32, %originalBBpart22833, %originalBB2804, %if.then27, %sw.bb, %LeafBlock, %NodeBlock, %NodeBlock6841, %NodeBlock6843, %NodeBlock6845, %NodeBlock6847, %NodeBlock6849, %NodeBlock6851, %LeafBlock6853, %NodeBlock6855, %NodeBlock6857, %NodeBlock6859, %NodeBlock6861, %if.else25, %if.then21, %if.then19, %lor.lhs.false16, %land.lhs.true13, %if.end10, %if.else9, %for.end, %for.inc, %originalBBpart22802, %originalBB2800, %if.end, %if.else, %if.then7, %originalBBpart22798, %originalBB2794, %lor.lhs.false, %originalBBpart22792, %originalBB2789, %land.lhs.true, %for.body, %originalBBpart2, %originalBB, %for.cond, %if.then, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
