; ModuleID = 'source-C-CXX/79/227.c'
source_filename = "source-C-CXX/79/227.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %cmp132.reg2mem = alloca i1
  %cmp47.reg2mem = alloca i1
  %cmp19.reg2mem = alloca i1
  %retval = alloca i32, align 4
  %x = alloca [2 x [4 x i64]], align 16
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %m = alloca i32, align 4
  %d = alloca i32, align 4
  %minus = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 0, i32* %i, align 4
  %switchVar = alloca i32
  store i32 734571229, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar829 = load i32, i32* %switchVar
  switch i32 %switchVar829, label %switchDefault [
    i32 734571229, label %for.cond
    i32 -591827582, label %for.body
    i32 1376213157, label %originalBB
    i32 766033031, label %originalBBpart2
    i32 -1795849292, label %land.lhs.true
    i32 -1093402141, label %lor.lhs.false
    i32 1107020417, label %if.then
    i32 1004031745, label %if.then29
    i32 163362463, label %originalBB202
    i32 -680260648, label %originalBBpart2323
    i32 466674637, label %if.else
    i32 -203151868, label %originalBB325
    i32 2017586509, label %originalBBpart2327
    i32 2021469219, label %if.then49
    i32 -2047067599, label %originalBB329
    i32 1305647756, label %originalBBpart2489
    i32 -1683640657, label %if.else77
    i32 -285668672, label %originalBB491
    i32 665587819, label %originalBBpart2668
    i32 -255988784, label %if.end
    i32 172491600, label %if.end105
    i32 2043018837, label %if.else106
    i32 -1839870046, label %if.then109
    i32 -1661880286, label %if.else131
    i32 -486562894, label %originalBB670
    i32 88085569, label %originalBBpart2672
    i32 -229965124, label %if.then134
    i32 1331842305, label %originalBB674
    i32 269327789, label %originalBBpart2819
    i32 1446151964, label %if.else162
    i32 -1113535073, label %if.end190
    i32 153786382, label %originalBB821
    i32 1062438581, label %originalBBpart2823
    i32 9323972, label %if.end191
    i32 -736229446, label %originalBB825
    i32 -229778815, label %originalBBpart2827
    i32 -1011682801, label %if.end192
    i32 -716287701, label %for.inc
    i32 -556082508, label %for.end
    i32 -544466254, label %originalBBalteredBB
    i32 1505274153, label %originalBB202alteredBB
    i32 -940969519, label %originalBB325alteredBB
    i32 35612696, label %originalBB329alteredBB
    i32 873136344, label %originalBB491alteredBB
    i32 -1992452947, label %originalBB670alteredBB
    i32 -181351636, label %originalBB674alteredBB
    i32 1316827107, label %originalBB821alteredBB
    i32 1490529797, label %originalBB825alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

for.cond:                                         ; preds = %loopEntry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp sle i32 %0, 1
  %1 = select i1 %cmp, i32 -591827582, i32 -556082508
  store i32 %1, i32* %switchVar
  br label %loopEnd

for.body:                                         ; preds = %loopEntry
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  %15 = select i1 %13, i32 1376213157, i32 -544466254
  store i32 %15, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %16 = load i32, i32* %i, align 4
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx, i64 0, i64 0
  %17 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %17 to i64
  %arrayidx3 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom2
  %arrayidx4 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx3, i64 0, i64 1
  %18 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %18 to i64
  %arrayidx6 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom5
  %arrayidx7 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx6, i64 0, i64 2
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i64* %arrayidx1, i64* %arrayidx4, i64* %arrayidx7)
  %19 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %19 to i64
  %arrayidx9 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom8
  %arrayidx10 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx9, i64 0, i64 0
  %20 = load i64, i64* %arrayidx10, align 16
  %conv = trunc i64 %20 to i32
  store i32 %conv, i32* %y, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %21 to i64
  %arrayidx12 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom11
  %arrayidx13 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx12, i64 0, i64 1
  %22 = load i64, i64* %arrayidx13, align 8
  %conv14 = trunc i64 %22 to i32
  store i32 %conv14, i32* %m, align 4
  %23 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %23 to i64
  %arrayidx16 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom15
  %arrayidx17 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx16, i64 0, i64 2
  %24 = load i64, i64* %arrayidx17, align 16
  %conv18 = trunc i64 %24 to i32
  store i32 %conv18, i32* %d, align 4
  %25 = load i32, i32* %y, align 4
  %rem = srem i32 %25, 4
  %cmp19 = icmp eq i32 %rem, 0
  store i1 %cmp19, i1* %cmp19.reg2mem
  %26 = load i32, i32* @x
  %27 = load i32, i32* @y
  %28 = sub i32 %26, -1548578002
  %29 = sub i32 %28, 1
  %30 = add i32 %29, -1548578002
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 766033031, i32 -544466254
  store i32 %40, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  %cmp19.reload = load volatile i1, i1* %cmp19.reg2mem
  %41 = select i1 %cmp19.reload, i32 -1795849292, i32 -1093402141
  store i32 %41, i32* %switchVar
  br label %loopEnd

land.lhs.true:                                    ; preds = %loopEntry
  %42 = load i32, i32* %y, align 4
  %rem21 = srem i32 %42, 100
  %cmp22 = icmp ne i32 %rem21, 0
  %43 = select i1 %cmp22, i32 1107020417, i32 -1093402141
  store i32 %43, i32* %switchVar
  br label %loopEnd

lor.lhs.false:                                    ; preds = %loopEntry
  %44 = load i32, i32* %y, align 4
  %rem24 = srem i32 %44, 400
  %cmp25 = icmp eq i32 %rem24, 0
  %45 = select i1 %cmp25, i32 1107020417, i32 2043018837
  store i32 %45, i32* %switchVar
  br label %loopEnd

if.then:                                          ; preds = %loopEntry
  %46 = load i32, i32* %m, align 4
  %cmp27 = icmp sle i32 %46, 2
  %47 = select i1 %cmp27, i32 1004031745, i32 466674637
  store i32 %47, i32* %switchVar
  br label %loopEnd

if.then29:                                        ; preds = %loopEntry
  %48 = load i32, i32* @x
  %49 = load i32, i32* @y
  %50 = add i32 %48, -517246882
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -517246882
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 163362463, i32 1505274153
  store i32 %62, i32* %switchVar
  br label %loopEnd

originalBB202:                                    ; preds = %loopEntry
  %63 = load i32, i32* %y, align 4
  %64 = sub i32 %63, 576462399
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 576462399
  %sub = sub nsw i32 %63, 1
  %div = sdiv i32 %66, 4
  %mul = mul nsw i32 %div, 1461
  %67 = load i32, i32* %y, align 4
  %68 = add i32 %67, 828649609
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, 828649609
  %sub30 = sub nsw i32 %67, 1
  %rem31 = srem i32 %70, 4
  %mul32 = mul nsw i32 %rem31, 365
  %71 = sub i32 0, %mul32
  %72 = sub i32 %mul, %71
  %add = add nsw i32 %mul, %mul32
  %73 = load i32, i32* %y, align 4
  %74 = sub i32 0, 1
  %75 = add i32 %73, %74
  %sub33 = sub nsw i32 %73, 1
  %div34 = sdiv i32 %75, 100
  %76 = add i32 %72, -271509139
  %77 = sub i32 %76, %div34
  %78 = sub i32 %77, -271509139
  %sub35 = sub nsw i32 %72, %div34
  %79 = load i32, i32* %y, align 4
  %80 = add i32 %79, 281790485
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 281790485
  %sub36 = sub nsw i32 %79, 1
  %div37 = sdiv i32 %82, 400
  %83 = sub i32 0, %78
  %84 = sub i32 0, %div37
  %85 = add i32 %83, %84
  %86 = sub i32 0, %85
  %add38 = add nsw i32 %78, %div37
  %87 = load i32, i32* %m, align 4
  %88 = sub i32 %87, 1072660133
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 1072660133
  %sub39 = sub nsw i32 %87, 1
  %mul40 = mul nsw i32 %90, 31
  %91 = sub i32 0, %86
  %92 = sub i32 0, %mul40
  %93 = add i32 %91, %92
  %94 = sub i32 0, %93
  %add41 = add nsw i32 %86, %mul40
  %95 = load i32, i32* %d, align 4
  %96 = sub i32 0, %94
  %97 = sub i32 0, %95
  %98 = add i32 %96, %97
  %99 = sub i32 0, %98
  %add42 = add nsw i32 %94, %95
  %conv43 = sext i32 %99 to i64
  %100 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %100 to i64
  %arrayidx45 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom44
  %arrayidx46 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx45, i64 0, i64 3
  store i64 %conv43, i64* %arrayidx46, align 8
  %101 = load i32, i32* @x
  %102 = load i32, i32* @y
  %103 = sub i32 0, 1
  %104 = add i32 %101, %103
  %105 = sub i32 %101, 1
  %106 = mul i32 %101, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %102, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 -680260648, i32 1505274153
  store i32 %114, i32* %switchVar
  br label %loopEnd

originalBBpart2323:                               ; preds = %loopEntry
  store i32 172491600, i32* %switchVar
  br label %loopEnd

if.else:                                          ; preds = %loopEntry
  %115 = load i32, i32* @x
  %116 = load i32, i32* @y
  %117 = add i32 %115, 1152993123
  %118 = sub i32 %117, 1
  %119 = sub i32 %118, 1152993123
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 true, true
  %128 = and i1 %125, true
  %129 = and i1 %123, %127
  %130 = and i1 %126, true
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 true, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  %141 = select i1 %139, i32 -203151868, i32 -940969519
  store i32 %141, i32* %switchVar
  br label %loopEnd

originalBB325:                                    ; preds = %loopEntry
  %142 = load i32, i32* %m, align 4
  %cmp47 = icmp sle i32 %142, 8
  store i1 %cmp47, i1* %cmp47.reg2mem
  %143 = load i32, i32* @x
  %144 = load i32, i32* @y
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  %156 = select i1 %154, i32 2017586509, i32 -940969519
  store i32 %156, i32* %switchVar
  br label %loopEnd

originalBBpart2327:                               ; preds = %loopEntry
  %cmp47.reload = load volatile i1, i1* %cmp47.reg2mem
  %157 = select i1 %cmp47.reload, i32 2021469219, i32 -1683640657
  store i32 %157, i32* %switchVar
  br label %loopEnd

if.then49:                                        ; preds = %loopEntry
  %158 = load i32, i32* @x
  %159 = load i32, i32* @y
  %160 = add i32 %158, -1921958481
  %161 = sub i32 %160, 1
  %162 = sub i32 %161, -1921958481
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 true, true
  %171 = and i1 %168, true
  %172 = and i1 %166, %170
  %173 = and i1 %169, true
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 true, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  %184 = select i1 %182, i32 -2047067599, i32 35612696
  store i32 %184, i32* %switchVar
  br label %loopEnd

originalBB329:                                    ; preds = %loopEntry
  %185 = load i32, i32* %y, align 4
  %186 = sub i32 %185, -349937293
  %187 = sub i32 %186, 1
  %188 = add i32 %187, -349937293
  %sub50 = sub nsw i32 %185, 1
  %div51 = sdiv i32 %188, 4
  %mul52 = mul nsw i32 %div51, 1461
  %189 = load i32, i32* %y, align 4
  %190 = sub i32 0, 1
  %191 = add i32 %189, %190
  %sub53 = sub nsw i32 %189, 1
  %rem54 = srem i32 %191, 4
  %mul55 = mul nsw i32 %rem54, 365
  %192 = sub i32 0, %mul52
  %193 = sub i32 0, %mul55
  %194 = add i32 %192, %193
  %195 = sub i32 0, %194
  %add56 = add nsw i32 %mul52, %mul55
  %196 = load i32, i32* %y, align 4
  %197 = add i32 %196, -174726125
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, -174726125
  %sub57 = sub nsw i32 %196, 1
  %div58 = sdiv i32 %199, 100
  %200 = sub i32 0, %div58
  %201 = add i32 %195, %200
  %sub59 = sub nsw i32 %195, %div58
  %202 = load i32, i32* %y, align 4
  %203 = sub i32 0, 1
  %204 = add i32 %202, %203
  %sub60 = sub nsw i32 %202, 1
  %div61 = sdiv i32 %204, 400
  %205 = sub i32 0, %div61
  %206 = sub i32 %201, %205
  %add62 = add nsw i32 %201, %div61
  %207 = load i32, i32* %m, align 4
  %208 = sub i32 0, 1
  %209 = add i32 %207, %208
  %sub63 = sub nsw i32 %207, 1
  %div64 = sdiv i32 %209, 2
  %mul65 = mul nsw i32 %div64, 61
  %210 = add i32 %206, -934356858
  %211 = add i32 %210, %mul65
  %212 = sub i32 %211, -934356858
  %add66 = add nsw i32 %206, %mul65
  %213 = load i32, i32* %m, align 4
  %214 = sub i32 0, 1
  %215 = add i32 %213, %214
  %sub67 = sub nsw i32 %213, 1
  %rem68 = srem i32 %215, 2
  %mul69 = mul nsw i32 %rem68, 31
  %216 = sub i32 0, %212
  %217 = sub i32 0, %mul69
  %218 = add i32 %216, %217
  %219 = sub i32 0, %218
  %add70 = add nsw i32 %212, %mul69
  %220 = sub i32 %219, 945806366
  %221 = sub i32 %220, 1
  %222 = add i32 %221, 945806366
  %sub71 = sub nsw i32 %219, 1
  %223 = load i32, i32* %d, align 4
  %224 = sub i32 %222, 83669473
  %225 = add i32 %224, %223
  %226 = add i32 %225, 83669473
  %add72 = add nsw i32 %222, %223
  %conv73 = sext i32 %226 to i64
  %227 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %227 to i64
  %arrayidx75 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom74
  %arrayidx76 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx75, i64 0, i64 3
  store i64 %conv73, i64* %arrayidx76, align 8
  %228 = load i32, i32* @x
  %229 = load i32, i32* @y
  %230 = add i32 %228, 1256806158
  %231 = sub i32 %230, 1
  %232 = sub i32 %231, 1256806158
  %233 = sub i32 %228, 1
  %234 = mul i32 %228, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %229, 10
  %238 = and i1 %236, %237
  %239 = xor i1 %236, %237
  %240 = or i1 %238, %239
  %241 = or i1 %236, %237
  %242 = select i1 %240, i32 1305647756, i32 35612696
  store i32 %242, i32* %switchVar
  br label %loopEnd

originalBBpart2489:                               ; preds = %loopEntry
  store i32 -255988784, i32* %switchVar
  br label %loopEnd

if.else77:                                        ; preds = %loopEntry
  %243 = load i32, i32* @x
  %244 = load i32, i32* @y
  %245 = add i32 %243, -883809240
  %246 = sub i32 %245, 1
  %247 = sub i32 %246, -883809240
  %248 = sub i32 %243, 1
  %249 = mul i32 %243, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %244, 10
  %253 = and i1 %251, %252
  %254 = xor i1 %251, %252
  %255 = or i1 %253, %254
  %256 = or i1 %251, %252
  %257 = select i1 %255, i32 -285668672, i32 873136344
  store i32 %257, i32* %switchVar
  br label %loopEnd

originalBB491:                                    ; preds = %loopEntry
  %258 = load i32, i32* %y, align 4
  %259 = add i32 %258, -1855562517
  %260 = sub i32 %259, 1
  %261 = sub i32 %260, -1855562517
  %sub78 = sub nsw i32 %258, 1
  %div79 = sdiv i32 %261, 4
  %mul80 = mul nsw i32 %div79, 1461
  %262 = load i32, i32* %y, align 4
  %263 = add i32 %262, 1324038442
  %264 = sub i32 %263, 1
  %265 = sub i32 %264, 1324038442
  %sub81 = sub nsw i32 %262, 1
  %rem82 = srem i32 %265, 4
  %mul83 = mul nsw i32 %rem82, 365
  %266 = add i32 %mul80, -982601042
  %267 = add i32 %266, %mul83
  %268 = sub i32 %267, -982601042
  %add84 = add nsw i32 %mul80, %mul83
  %269 = load i32, i32* %y, align 4
  %270 = add i32 %269, 1732333169
  %271 = sub i32 %270, 1
  %272 = sub i32 %271, 1732333169
  %sub85 = sub nsw i32 %269, 1
  %div86 = sdiv i32 %272, 100
  %273 = add i32 %268, 30319816
  %274 = sub i32 %273, %div86
  %275 = sub i32 %274, 30319816
  %sub87 = sub nsw i32 %268, %div86
  %276 = load i32, i32* %y, align 4
  %277 = add i32 %276, -1280821109
  %278 = sub i32 %277, 1
  %279 = sub i32 %278, -1280821109
  %sub88 = sub nsw i32 %276, 1
  %div89 = sdiv i32 %279, 400
  %280 = sub i32 %275, 914578668
  %281 = add i32 %280, %div89
  %282 = add i32 %281, 914578668
  %add90 = add nsw i32 %275, %div89
  %283 = sub i32 0, %282
  %284 = sub i32 0, 213
  %285 = add i32 %283, %284
  %286 = sub i32 0, %285
  %add91 = add nsw i32 %282, 213
  %287 = load i32, i32* %m, align 4
  %288 = sub i32 %287, -438300780
  %289 = sub i32 %288, 8
  %290 = add i32 %289, -438300780
  %sub92 = sub nsw i32 %287, 8
  %div93 = sdiv i32 %290, 2
  %mul94 = mul nsw i32 %div93, 61
  %291 = add i32 %286, 2017703892
  %292 = add i32 %291, %mul94
  %293 = sub i32 %292, 2017703892
  %add95 = add nsw i32 %286, %mul94
  %294 = load i32, i32* %m, align 4
  %295 = sub i32 %294, -2121074100
  %296 = sub i32 %295, 8
  %297 = add i32 %296, -2121074100
  %sub96 = sub nsw i32 %294, 8
  %rem97 = srem i32 %297, 2
  %mul98 = mul nsw i32 %rem97, 31
  %298 = sub i32 0, %293
  %299 = sub i32 0, %mul98
  %300 = add i32 %298, %299
  %301 = sub i32 0, %300
  %add99 = add nsw i32 %293, %mul98
  %302 = load i32, i32* %d, align 4
  %303 = add i32 %301, 385402523
  %304 = add i32 %303, %302
  %305 = sub i32 %304, 385402523
  %add100 = add nsw i32 %301, %302
  %conv101 = sext i32 %305 to i64
  %306 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %306 to i64
  %arrayidx103 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom102
  %arrayidx104 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx103, i64 0, i64 3
  store i64 %conv101, i64* %arrayidx104, align 8
  %307 = load i32, i32* @x
  %308 = load i32, i32* @y
  %309 = sub i32 0, 1
  %310 = add i32 %307, %309
  %311 = sub i32 %307, 1
  %312 = mul i32 %307, %310
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %308, 10
  %316 = xor i1 %314, true
  %317 = xor i1 %315, true
  %318 = xor i1 false, true
  %319 = and i1 %316, false
  %320 = and i1 %314, %318
  %321 = and i1 %317, false
  %322 = and i1 %315, %318
  %323 = or i1 %319, %320
  %324 = or i1 %321, %322
  %325 = xor i1 %323, %324
  %326 = or i1 %316, %317
  %327 = xor i1 %326, true
  %328 = or i1 false, %318
  %329 = and i1 %327, %328
  %330 = or i1 %325, %329
  %331 = or i1 %314, %315
  %332 = select i1 %330, i32 665587819, i32 873136344
  store i32 %332, i32* %switchVar
  br label %loopEnd

originalBBpart2668:                               ; preds = %loopEntry
  store i32 -255988784, i32* %switchVar
  br label %loopEnd

if.end:                                           ; preds = %loopEntry
  store i32 172491600, i32* %switchVar
  br label %loopEnd

if.end105:                                        ; preds = %loopEntry
  store i32 -1011682801, i32* %switchVar
  br label %loopEnd

if.else106:                                       ; preds = %loopEntry
  %333 = load i32, i32* %m, align 4
  %cmp107 = icmp sle i32 %333, 2
  %334 = select i1 %cmp107, i32 -1839870046, i32 -1661880286
  store i32 %334, i32* %switchVar
  br label %loopEnd

if.then109:                                       ; preds = %loopEntry
  %335 = load i32, i32* %y, align 4
  %336 = sub i32 %335, 1267474065
  %337 = sub i32 %336, 1
  %338 = add i32 %337, 1267474065
  %sub110 = sub nsw i32 %335, 1
  %div111 = sdiv i32 %338, 4
  %mul112 = mul nsw i32 %div111, 1461
  %339 = load i32, i32* %y, align 4
  %340 = add i32 %339, -701186552
  %341 = sub i32 %340, 1
  %342 = sub i32 %341, -701186552
  %sub113 = sub nsw i32 %339, 1
  %rem114 = srem i32 %342, 4
  %mul115 = mul nsw i32 %rem114, 365
  %343 = sub i32 0, %mul115
  %344 = sub i32 %mul112, %343
  %add116 = add nsw i32 %mul112, %mul115
  %345 = load i32, i32* %y, align 4
  %346 = add i32 %345, 992991401
  %347 = sub i32 %346, 1
  %348 = sub i32 %347, 992991401
  %sub117 = sub nsw i32 %345, 1
  %div118 = sdiv i32 %348, 100
  %349 = sub i32 0, %div118
  %350 = add i32 %344, %349
  %sub119 = sub nsw i32 %344, %div118
  %351 = load i32, i32* %y, align 4
  %352 = sub i32 0, 1
  %353 = add i32 %351, %352
  %sub120 = sub nsw i32 %351, 1
  %div121 = sdiv i32 %353, 400
  %354 = add i32 %350, 1268632841
  %355 = add i32 %354, %div121
  %356 = sub i32 %355, 1268632841
  %add122 = add nsw i32 %350, %div121
  %357 = load i32, i32* %m, align 4
  %358 = sub i32 0, 1
  %359 = add i32 %357, %358
  %sub123 = sub nsw i32 %357, 1
  %mul124 = mul nsw i32 %359, 31
  %360 = add i32 %356, -162706231
  %361 = add i32 %360, %mul124
  %362 = sub i32 %361, -162706231
  %add125 = add nsw i32 %356, %mul124
  %363 = load i32, i32* %d, align 4
  %364 = sub i32 %362, 60323194
  %365 = add i32 %364, %363
  %366 = add i32 %365, 60323194
  %add126 = add nsw i32 %362, %363
  %conv127 = sext i32 %366 to i64
  %367 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %367 to i64
  %arrayidx129 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom128
  %arrayidx130 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx129, i64 0, i64 3
  store i64 %conv127, i64* %arrayidx130, align 8
  store i32 9323972, i32* %switchVar
  br label %loopEnd

if.else131:                                       ; preds = %loopEntry
  %368 = load i32, i32* @x
  %369 = load i32, i32* @y
  %370 = sub i32 %368, 326708029
  %371 = sub i32 %370, 1
  %372 = add i32 %371, 326708029
  %373 = sub i32 %368, 1
  %374 = mul i32 %368, %372
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %369, 10
  %378 = and i1 %376, %377
  %379 = xor i1 %376, %377
  %380 = or i1 %378, %379
  %381 = or i1 %376, %377
  %382 = select i1 %380, i32 -486562894, i32 -1992452947
  store i32 %382, i32* %switchVar
  br label %loopEnd

originalBB670:                                    ; preds = %loopEntry
  %383 = load i32, i32* %m, align 4
  %cmp132 = icmp sle i32 %383, 8
  store i1 %cmp132, i1* %cmp132.reg2mem
  %384 = load i32, i32* @x
  %385 = load i32, i32* @y
  %386 = sub i32 0, 1
  %387 = add i32 %384, %386
  %388 = sub i32 %384, 1
  %389 = mul i32 %384, %387
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %385, 10
  %393 = and i1 %391, %392
  %394 = xor i1 %391, %392
  %395 = or i1 %393, %394
  %396 = or i1 %391, %392
  %397 = select i1 %395, i32 88085569, i32 -1992452947
  store i32 %397, i32* %switchVar
  br label %loopEnd

originalBBpart2672:                               ; preds = %loopEntry
  %cmp132.reload = load volatile i1, i1* %cmp132.reg2mem
  %398 = select i1 %cmp132.reload, i32 -229965124, i32 1446151964
  store i32 %398, i32* %switchVar
  br label %loopEnd

if.then134:                                       ; preds = %loopEntry
  %399 = load i32, i32* @x
  %400 = load i32, i32* @y
  %401 = sub i32 0, 1
  %402 = add i32 %399, %401
  %403 = sub i32 %399, 1
  %404 = mul i32 %399, %402
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %400, 10
  %408 = and i1 %406, %407
  %409 = xor i1 %406, %407
  %410 = or i1 %408, %409
  %411 = or i1 %406, %407
  %412 = select i1 %410, i32 1331842305, i32 -181351636
  store i32 %412, i32* %switchVar
  br label %loopEnd

originalBB674:                                    ; preds = %loopEntry
  %413 = load i32, i32* %y, align 4
  %414 = add i32 %413, 1376827603
  %415 = sub i32 %414, 1
  %416 = sub i32 %415, 1376827603
  %sub135 = sub nsw i32 %413, 1
  %div136 = sdiv i32 %416, 4
  %mul137 = mul nsw i32 %div136, 1461
  %417 = load i32, i32* %y, align 4
  %418 = sub i32 %417, -175615169
  %419 = sub i32 %418, 1
  %420 = add i32 %419, -175615169
  %sub138 = sub nsw i32 %417, 1
  %rem139 = srem i32 %420, 4
  %mul140 = mul nsw i32 %rem139, 365
  %421 = sub i32 %mul137, -72072669
  %422 = add i32 %421, %mul140
  %423 = add i32 %422, -72072669
  %add141 = add nsw i32 %mul137, %mul140
  %424 = load i32, i32* %y, align 4
  %425 = add i32 %424, -783331265
  %426 = sub i32 %425, 1
  %427 = sub i32 %426, -783331265
  %sub142 = sub nsw i32 %424, 1
  %div143 = sdiv i32 %427, 100
  %428 = sub i32 %423, -2119111453
  %429 = sub i32 %428, %div143
  %430 = add i32 %429, -2119111453
  %sub144 = sub nsw i32 %423, %div143
  %431 = load i32, i32* %y, align 4
  %432 = sub i32 0, 1
  %433 = add i32 %431, %432
  %sub145 = sub nsw i32 %431, 1
  %div146 = sdiv i32 %433, 400
  %434 = sub i32 0, %div146
  %435 = sub i32 %430, %434
  %add147 = add nsw i32 %430, %div146
  %436 = load i32, i32* %m, align 4
  %437 = sub i32 %436, -569649274
  %438 = sub i32 %437, 1
  %439 = add i32 %438, -569649274
  %sub148 = sub nsw i32 %436, 1
  %div149 = sdiv i32 %439, 2
  %mul150 = mul nsw i32 %div149, 61
  %440 = add i32 %435, 1766295402
  %441 = add i32 %440, %mul150
  %442 = sub i32 %441, 1766295402
  %add151 = add nsw i32 %435, %mul150
  %443 = load i32, i32* %m, align 4
  %444 = sub i32 0, 1
  %445 = add i32 %443, %444
  %sub152 = sub nsw i32 %443, 1
  %rem153 = srem i32 %445, 2
  %mul154 = mul nsw i32 %rem153, 31
  %446 = add i32 %442, 1359943227
  %447 = add i32 %446, %mul154
  %448 = sub i32 %447, 1359943227
  %add155 = add nsw i32 %442, %mul154
  %449 = sub i32 0, 2
  %450 = add i32 %448, %449
  %sub156 = sub nsw i32 %448, 2
  %451 = load i32, i32* %d, align 4
  %452 = sub i32 0, %451
  %453 = sub i32 %450, %452
  %add157 = add nsw i32 %450, %451
  %conv158 = sext i32 %453 to i64
  %454 = load i32, i32* %i, align 4
  %idxprom159 = sext i32 %454 to i64
  %arrayidx160 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom159
  %arrayidx161 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx160, i64 0, i64 3
  store i64 %conv158, i64* %arrayidx161, align 8
  %455 = load i32, i32* @x
  %456 = load i32, i32* @y
  %457 = add i32 %455, -1716878853
  %458 = sub i32 %457, 1
  %459 = sub i32 %458, -1716878853
  %460 = sub i32 %455, 1
  %461 = mul i32 %455, %459
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %456, 10
  %465 = xor i1 %463, true
  %466 = xor i1 %464, true
  %467 = xor i1 false, true
  %468 = and i1 %465, false
  %469 = and i1 %463, %467
  %470 = and i1 %466, false
  %471 = and i1 %464, %467
  %472 = or i1 %468, %469
  %473 = or i1 %470, %471
  %474 = xor i1 %472, %473
  %475 = or i1 %465, %466
  %476 = xor i1 %475, true
  %477 = or i1 false, %467
  %478 = and i1 %476, %477
  %479 = or i1 %474, %478
  %480 = or i1 %463, %464
  %481 = select i1 %479, i32 269327789, i32 -181351636
  store i32 %481, i32* %switchVar
  br label %loopEnd

originalBBpart2819:                               ; preds = %loopEntry
  store i32 -1113535073, i32* %switchVar
  br label %loopEnd

if.else162:                                       ; preds = %loopEntry
  %482 = load i32, i32* %y, align 4
  %483 = sub i32 0, 1
  %484 = add i32 %482, %483
  %sub163 = sub nsw i32 %482, 1
  %div164 = sdiv i32 %484, 4
  %mul165 = mul nsw i32 %div164, 1461
  %485 = load i32, i32* %y, align 4
  %486 = add i32 %485, 408344476
  %487 = sub i32 %486, 1
  %488 = sub i32 %487, 408344476
  %sub166 = sub nsw i32 %485, 1
  %rem167 = srem i32 %488, 4
  %mul168 = mul nsw i32 %rem167, 365
  %489 = add i32 %mul165, -553602347
  %490 = add i32 %489, %mul168
  %491 = sub i32 %490, -553602347
  %add169 = add nsw i32 %mul165, %mul168
  %492 = load i32, i32* %y, align 4
  %493 = sub i32 0, 1
  %494 = add i32 %492, %493
  %sub170 = sub nsw i32 %492, 1
  %div171 = sdiv i32 %494, 100
  %495 = sub i32 %491, -20656892
  %496 = sub i32 %495, %div171
  %497 = add i32 %496, -20656892
  %sub172 = sub nsw i32 %491, %div171
  %498 = load i32, i32* %y, align 4
  %499 = sub i32 %498, 7203605
  %500 = sub i32 %499, 1
  %501 = add i32 %500, 7203605
  %sub173 = sub nsw i32 %498, 1
  %div174 = sdiv i32 %501, 400
  %502 = sub i32 %497, 932429260
  %503 = add i32 %502, %div174
  %504 = add i32 %503, 932429260
  %add175 = add nsw i32 %497, %div174
  %505 = sub i32 0, 212
  %506 = sub i32 %504, %505
  %add176 = add nsw i32 %504, 212
  %507 = load i32, i32* %m, align 4
  %508 = add i32 %507, 1423257269
  %509 = sub i32 %508, 8
  %510 = sub i32 %509, 1423257269
  %sub177 = sub nsw i32 %507, 8
  %div178 = sdiv i32 %510, 2
  %mul179 = mul nsw i32 %div178, 61
  %511 = sub i32 0, %506
  %512 = sub i32 0, %mul179
  %513 = add i32 %511, %512
  %514 = sub i32 0, %513
  %add180 = add nsw i32 %506, %mul179
  %515 = load i32, i32* %m, align 4
  %516 = add i32 %515, -85828294
  %517 = sub i32 %516, 8
  %518 = sub i32 %517, -85828294
  %sub181 = sub nsw i32 %515, 8
  %rem182 = srem i32 %518, 2
  %mul183 = mul nsw i32 %rem182, 31
  %519 = sub i32 %514, -1127581657
  %520 = add i32 %519, %mul183
  %521 = add i32 %520, -1127581657
  %add184 = add nsw i32 %514, %mul183
  %522 = load i32, i32* %d, align 4
  %523 = add i32 %521, 948187541
  %524 = add i32 %523, %522
  %525 = sub i32 %524, 948187541
  %add185 = add nsw i32 %521, %522
  %conv186 = sext i32 %525 to i64
  %526 = load i32, i32* %i, align 4
  %idxprom187 = sext i32 %526 to i64
  %arrayidx188 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom187
  %arrayidx189 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx188, i64 0, i64 3
  store i64 %conv186, i64* %arrayidx189, align 8
  store i32 -1113535073, i32* %switchVar
  br label %loopEnd

if.end190:                                        ; preds = %loopEntry
  %527 = load i32, i32* @x
  %528 = load i32, i32* @y
  %529 = sub i32 0, 1
  %530 = add i32 %527, %529
  %531 = sub i32 %527, 1
  %532 = mul i32 %527, %530
  %533 = urem i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %528, 10
  %536 = xor i1 %534, true
  %537 = xor i1 %535, true
  %538 = xor i1 true, true
  %539 = and i1 %536, true
  %540 = and i1 %534, %538
  %541 = and i1 %537, true
  %542 = and i1 %535, %538
  %543 = or i1 %539, %540
  %544 = or i1 %541, %542
  %545 = xor i1 %543, %544
  %546 = or i1 %536, %537
  %547 = xor i1 %546, true
  %548 = or i1 true, %538
  %549 = and i1 %547, %548
  %550 = or i1 %545, %549
  %551 = or i1 %534, %535
  %552 = select i1 %550, i32 153786382, i32 1316827107
  store i32 %552, i32* %switchVar
  br label %loopEnd

originalBB821:                                    ; preds = %loopEntry
  %553 = load i32, i32* @x
  %554 = load i32, i32* @y
  %555 = add i32 %553, -233357106
  %556 = sub i32 %555, 1
  %557 = sub i32 %556, -233357106
  %558 = sub i32 %553, 1
  %559 = mul i32 %553, %557
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %554, 10
  %563 = and i1 %561, %562
  %564 = xor i1 %561, %562
  %565 = or i1 %563, %564
  %566 = or i1 %561, %562
  %567 = select i1 %565, i32 1062438581, i32 1316827107
  store i32 %567, i32* %switchVar
  br label %loopEnd

originalBBpart2823:                               ; preds = %loopEntry
  store i32 9323972, i32* %switchVar
  br label %loopEnd

if.end191:                                        ; preds = %loopEntry
  %568 = load i32, i32* @x
  %569 = load i32, i32* @y
  %570 = sub i32 %568, -1883295759
  %571 = sub i32 %570, 1
  %572 = add i32 %571, -1883295759
  %573 = sub i32 %568, 1
  %574 = mul i32 %568, %572
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %569, 10
  %578 = xor i1 %576, true
  %579 = xor i1 %577, true
  %580 = xor i1 true, true
  %581 = and i1 %578, true
  %582 = and i1 %576, %580
  %583 = and i1 %579, true
  %584 = and i1 %577, %580
  %585 = or i1 %581, %582
  %586 = or i1 %583, %584
  %587 = xor i1 %585, %586
  %588 = or i1 %578, %579
  %589 = xor i1 %588, true
  %590 = or i1 true, %580
  %591 = and i1 %589, %590
  %592 = or i1 %587, %591
  %593 = or i1 %576, %577
  %594 = select i1 %592, i32 -736229446, i32 1490529797
  store i32 %594, i32* %switchVar
  br label %loopEnd

originalBB825:                                    ; preds = %loopEntry
  %595 = load i32, i32* @x
  %596 = load i32, i32* @y
  %597 = sub i32 0, 1
  %598 = add i32 %595, %597
  %599 = sub i32 %595, 1
  %600 = mul i32 %595, %598
  %601 = urem i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = icmp slt i32 %596, 10
  %604 = xor i1 %602, true
  %605 = xor i1 %603, true
  %606 = xor i1 false, true
  %607 = and i1 %604, false
  %608 = and i1 %602, %606
  %609 = and i1 %605, false
  %610 = and i1 %603, %606
  %611 = or i1 %607, %608
  %612 = or i1 %609, %610
  %613 = xor i1 %611, %612
  %614 = or i1 %604, %605
  %615 = xor i1 %614, true
  %616 = or i1 false, %606
  %617 = and i1 %615, %616
  %618 = or i1 %613, %617
  %619 = or i1 %602, %603
  %620 = select i1 %618, i32 -229778815, i32 1490529797
  store i32 %620, i32* %switchVar
  br label %loopEnd

originalBBpart2827:                               ; preds = %loopEntry
  store i32 -1011682801, i32* %switchVar
  br label %loopEnd

if.end192:                                        ; preds = %loopEntry
  store i32 -716287701, i32* %switchVar
  br label %loopEnd

for.inc:                                          ; preds = %loopEntry
  %621 = load i32, i32* %i, align 4
  %622 = sub i32 %621, 2072860069
  %623 = add i32 %622, 1
  %624 = add i32 %623, 2072860069
  %inc = add nsw i32 %621, 1
  store i32 %624, i32* %i, align 4
  store i32 734571229, i32* %switchVar
  br label %loopEnd

for.end:                                          ; preds = %loopEntry
  %arrayidx193 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 0
  %arrayidx194 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx193, i64 0, i64 3
  %625 = load i64, i64* %arrayidx194, align 8
  %arrayidx195 = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 1
  %arrayidx196 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx195, i64 0, i64 3
  %626 = load i64, i64* %arrayidx196, align 8
  %627 = add i64 %625, -6895117491421045480
  %628 = sub i64 %627, %626
  %629 = sub i64 %628, -6895117491421045480
  %sub197 = sub nsw i64 %625, %626
  %conv198 = trunc i64 %629 to i32
  %call199 = call i32 @abs(i32 %conv198) #3
  store i32 %call199, i32* %minus, align 4
  %630 = load i32, i32* %minus, align 4
  %call200 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %630)
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %631 = load i32, i32* %i, align 4
  %idxpromalteredBB = sext i32 %631 to i64
  %arrayidxalteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxpromalteredBB
  %arrayidx1alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidxalteredBB, i64 0, i64 0
  %632 = load i32, i32* %i, align 4
  %idxprom2alteredBB = sext i32 %632 to i64
  %arrayidx3alteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom2alteredBB
  %arrayidx4alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx3alteredBB, i64 0, i64 1
  %633 = load i32, i32* %i, align 4
  %idxprom5alteredBB = sext i32 %633 to i64
  %arrayidx6alteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom5alteredBB
  %arrayidx7alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx6alteredBB, i64 0, i64 2
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i64* %arrayidx1alteredBB, i64* %arrayidx4alteredBB, i64* %arrayidx7alteredBB)
  %634 = load i32, i32* %i, align 4
  %idxprom8alteredBB = sext i32 %634 to i64
  %arrayidx9alteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom8alteredBB
  %arrayidx10alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx9alteredBB, i64 0, i64 0
  %635 = load i64, i64* %arrayidx10alteredBB, align 16
  %convalteredBB = trunc i64 %635 to i32
  store i32 %convalteredBB, i32* %y, align 4
  %636 = load i32, i32* %i, align 4
  %idxprom11alteredBB = sext i32 %636 to i64
  %arrayidx12alteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom11alteredBB
  %arrayidx13alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx12alteredBB, i64 0, i64 1
  %637 = load i64, i64* %arrayidx13alteredBB, align 8
  %conv14alteredBB = trunc i64 %637 to i32
  store i32 %conv14alteredBB, i32* %m, align 4
  %638 = load i32, i32* %i, align 4
  %idxprom15alteredBB = sext i32 %638 to i64
  %arrayidx16alteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom15alteredBB
  %arrayidx17alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx16alteredBB, i64 0, i64 2
  %639 = load i64, i64* %arrayidx17alteredBB, align 16
  %conv18alteredBB = trunc i64 %639 to i32
  store i32 %conv18alteredBB, i32* %d, align 4
  %640 = load i32, i32* %y, align 4
  %641 = sub i32 0, %640
  %642 = add i32 0, %641
  %_ = sub i32 0, %640
  %643 = sub i32 0, 4
  %644 = sub i32 %642, %643
  %gen = add i32 %642, 4
  %_201 = shl i32 %640, 4
  %remalteredBB = srem i32 %640, 4
  %cmp19alteredBB = icmp eq i32 %remalteredBB, 0
  store i32 1376213157, i32* %switchVar
  br label %loopEnd

originalBB202alteredBB:                           ; preds = %loopEntry
  %645 = load i32, i32* %y, align 4
  %_203 = shl i32 %645, 1
  %_204 = shl i32 %645, 1
  %646 = add i32 0, -906984117
  %647 = sub i32 %646, %645
  %648 = sub i32 %647, -906984117
  %_205 = sub i32 0, %645
  %649 = add i32 %648, 1625665958
  %650 = add i32 %649, 1
  %651 = sub i32 %650, 1625665958
  %gen206 = add i32 %648, 1
  %652 = add i32 %645, 1326866788
  %653 = sub i32 %652, 1
  %654 = sub i32 %653, 1326866788
  %subalteredBB = sub nsw i32 %645, 1
  %655 = sub i32 %654, -32701722
  %656 = sub i32 %655, 4
  %657 = add i32 %656, -32701722
  %_207 = sub i32 %654, 4
  %gen208 = mul i32 %657, 4
  %658 = sub i32 0, 4
  %659 = add i32 %654, %658
  %_209 = sub i32 %654, 4
  %gen210 = mul i32 %659, 4
  %660 = add i32 0, 2055598774
  %661 = sub i32 %660, %654
  %662 = sub i32 %661, 2055598774
  %_211 = sub i32 0, %654
  %663 = sub i32 0, 4
  %664 = sub i32 %662, %663
  %gen212 = add i32 %662, 4
  %665 = sub i32 0, %654
  %666 = add i32 0, %665
  %_213 = sub i32 0, %654
  %667 = sub i32 %666, 234509260
  %668 = add i32 %667, 4
  %669 = add i32 %668, 234509260
  %gen214 = add i32 %666, 4
  %670 = add i32 0, 977261654
  %671 = sub i32 %670, %654
  %672 = sub i32 %671, 977261654
  %_215 = sub i32 0, %654
  %673 = sub i32 0, 4
  %674 = sub i32 %672, %673
  %gen216 = add i32 %672, 4
  %divalteredBB = sdiv i32 %654, 4
  %675 = sub i32 %divalteredBB, -673995677
  %676 = sub i32 %675, 1461
  %677 = add i32 %676, -673995677
  %_217 = sub i32 %divalteredBB, 1461
  %gen218 = mul i32 %677, 1461
  %_219 = shl i32 %divalteredBB, 1461
  %678 = add i32 0, 2095522818
  %679 = sub i32 %678, %divalteredBB
  %680 = sub i32 %679, 2095522818
  %_220 = sub i32 0, %divalteredBB
  %681 = add i32 %680, -81218031
  %682 = add i32 %681, 1461
  %683 = sub i32 %682, -81218031
  %gen221 = add i32 %680, 1461
  %mulalteredBB = mul nsw i32 %divalteredBB, 1461
  %684 = load i32, i32* %y, align 4
  %685 = add i32 0, -838942045
  %686 = sub i32 %685, %684
  %687 = sub i32 %686, -838942045
  %_222 = sub i32 0, %684
  %688 = add i32 %687, 1503348306
  %689 = add i32 %688, 1
  %690 = sub i32 %689, 1503348306
  %gen223 = add i32 %687, 1
  %691 = sub i32 %684, 1288620668
  %692 = sub i32 %691, 1
  %693 = add i32 %692, 1288620668
  %_224 = sub i32 %684, 1
  %gen225 = mul i32 %693, 1
  %694 = add i32 %684, 842550573
  %695 = sub i32 %694, 1
  %696 = sub i32 %695, 842550573
  %_226 = sub i32 %684, 1
  %gen227 = mul i32 %696, 1
  %697 = sub i32 0, 1874980579
  %698 = sub i32 %697, %684
  %699 = add i32 %698, 1874980579
  %_228 = sub i32 0, %684
  %700 = add i32 %699, -262869167
  %701 = add i32 %700, 1
  %702 = sub i32 %701, -262869167
  %gen229 = add i32 %699, 1
  %703 = sub i32 0, 1
  %704 = add i32 %684, %703
  %_230 = sub i32 %684, 1
  %gen231 = mul i32 %704, 1
  %705 = add i32 0, 1071167915
  %706 = sub i32 %705, %684
  %707 = sub i32 %706, 1071167915
  %_232 = sub i32 0, %684
  %708 = add i32 %707, 1982732260
  %709 = add i32 %708, 1
  %710 = sub i32 %709, 1982732260
  %gen233 = add i32 %707, 1
  %711 = sub i32 0, 1716167449
  %712 = sub i32 %711, %684
  %713 = add i32 %712, 1716167449
  %_234 = sub i32 0, %684
  %714 = sub i32 %713, 329344323
  %715 = add i32 %714, 1
  %716 = add i32 %715, 329344323
  %gen235 = add i32 %713, 1
  %717 = sub i32 %684, -2093674888
  %718 = sub i32 %717, 1
  %719 = add i32 %718, -2093674888
  %sub30alteredBB = sub nsw i32 %684, 1
  %720 = sub i32 0, 4
  %721 = add i32 %719, %720
  %_236 = sub i32 %719, 4
  %gen237 = mul i32 %721, 4
  %_238 = shl i32 %719, 4
  %722 = sub i32 0, %719
  %723 = add i32 0, %722
  %_239 = sub i32 0, %719
  %724 = add i32 %723, -1804448497
  %725 = add i32 %724, 4
  %726 = sub i32 %725, -1804448497
  %gen240 = add i32 %723, 4
  %727 = sub i32 0, 4
  %728 = add i32 %719, %727
  %_241 = sub i32 %719, 4
  %gen242 = mul i32 %728, 4
  %_243 = shl i32 %719, 4
  %rem31alteredBB = srem i32 %719, 4
  %729 = sub i32 %rem31alteredBB, 1278501204
  %730 = sub i32 %729, 365
  %731 = add i32 %730, 1278501204
  %_244 = sub i32 %rem31alteredBB, 365
  %gen245 = mul i32 %731, 365
  %732 = add i32 %rem31alteredBB, -310925683
  %733 = sub i32 %732, 365
  %734 = sub i32 %733, -310925683
  %_246 = sub i32 %rem31alteredBB, 365
  %gen247 = mul i32 %734, 365
  %_248 = shl i32 %rem31alteredBB, 365
  %mul32alteredBB = mul nsw i32 %rem31alteredBB, 365
  %735 = add i32 %mulalteredBB, 1960868123
  %736 = sub i32 %735, %mul32alteredBB
  %737 = sub i32 %736, 1960868123
  %_249 = sub i32 %mulalteredBB, %mul32alteredBB
  %gen250 = mul i32 %737, %mul32alteredBB
  %738 = sub i32 0, %mul32alteredBB
  %739 = add i32 %mulalteredBB, %738
  %_251 = sub i32 %mulalteredBB, %mul32alteredBB
  %gen252 = mul i32 %739, %mul32alteredBB
  %_253 = shl i32 %mulalteredBB, %mul32alteredBB
  %_254 = shl i32 %mulalteredBB, %mul32alteredBB
  %_255 = shl i32 %mulalteredBB, %mul32alteredBB
  %_256 = shl i32 %mulalteredBB, %mul32alteredBB
  %740 = sub i32 0, -1136474347
  %741 = sub i32 %740, %mulalteredBB
  %742 = add i32 %741, -1136474347
  %_257 = sub i32 0, %mulalteredBB
  %743 = sub i32 0, %742
  %744 = sub i32 0, %mul32alteredBB
  %745 = add i32 %743, %744
  %746 = sub i32 0, %745
  %gen258 = add i32 %742, %mul32alteredBB
  %_259 = shl i32 %mulalteredBB, %mul32alteredBB
  %747 = sub i32 0, %mul32alteredBB
  %748 = add i32 %mulalteredBB, %747
  %_260 = sub i32 %mulalteredBB, %mul32alteredBB
  %gen261 = mul i32 %748, %mul32alteredBB
  %749 = sub i32 0, %mul32alteredBB
  %750 = sub i32 %mulalteredBB, %749
  %addalteredBB = add nsw i32 %mulalteredBB, %mul32alteredBB
  %751 = load i32, i32* %y, align 4
  %752 = add i32 0, 1263258635
  %753 = sub i32 %752, %751
  %754 = sub i32 %753, 1263258635
  %_262 = sub i32 0, %751
  %755 = add i32 %754, -174068739
  %756 = add i32 %755, 1
  %757 = sub i32 %756, -174068739
  %gen263 = add i32 %754, 1
  %758 = add i32 %751, 1119709139
  %759 = sub i32 %758, 1
  %760 = sub i32 %759, 1119709139
  %_264 = sub i32 %751, 1
  %gen265 = mul i32 %760, 1
  %_266 = shl i32 %751, 1
  %_267 = shl i32 %751, 1
  %761 = sub i32 0, %751
  %762 = add i32 0, %761
  %_268 = sub i32 0, %751
  %763 = sub i32 0, %762
  %764 = sub i32 0, 1
  %765 = add i32 %763, %764
  %766 = sub i32 0, %765
  %gen269 = add i32 %762, 1
  %_270 = shl i32 %751, 1
  %767 = sub i32 0, 1
  %768 = add i32 %751, %767
  %sub33alteredBB = sub nsw i32 %751, 1
  %769 = sub i32 %768, -1862086283
  %770 = sub i32 %769, 100
  %771 = add i32 %770, -1862086283
  %_271 = sub i32 %768, 100
  %gen272 = mul i32 %771, 100
  %_273 = shl i32 %768, 100
  %772 = sub i32 0, %768
  %773 = add i32 0, %772
  %_274 = sub i32 0, %768
  %774 = sub i32 0, 100
  %775 = sub i32 %773, %774
  %gen275 = add i32 %773, 100
  %776 = sub i32 0, %768
  %777 = add i32 0, %776
  %_276 = sub i32 0, %768
  %778 = sub i32 0, 100
  %779 = sub i32 %777, %778
  %gen277 = add i32 %777, 100
  %780 = sub i32 0, -705124994
  %781 = sub i32 %780, %768
  %782 = add i32 %781, -705124994
  %_278 = sub i32 0, %768
  %783 = sub i32 0, 100
  %784 = sub i32 %782, %783
  %gen279 = add i32 %782, 100
  %_280 = shl i32 %768, 100
  %div34alteredBB = sdiv i32 %768, 100
  %785 = sub i32 0, %750
  %786 = add i32 0, %785
  %_281 = sub i32 0, %750
  %787 = sub i32 %786, -800731485
  %788 = add i32 %787, %div34alteredBB
  %789 = add i32 %788, -800731485
  %gen282 = add i32 %786, %div34alteredBB
  %790 = sub i32 %750, 451904730
  %791 = sub i32 %790, %div34alteredBB
  %792 = add i32 %791, 451904730
  %_283 = sub i32 %750, %div34alteredBB
  %gen284 = mul i32 %792, %div34alteredBB
  %793 = sub i32 0, -1958370418
  %794 = sub i32 %793, %750
  %795 = add i32 %794, -1958370418
  %_285 = sub i32 0, %750
  %796 = sub i32 %795, -113829086
  %797 = add i32 %796, %div34alteredBB
  %798 = add i32 %797, -113829086
  %gen286 = add i32 %795, %div34alteredBB
  %799 = sub i32 0, %div34alteredBB
  %800 = add i32 %750, %799
  %_287 = sub i32 %750, %div34alteredBB
  %gen288 = mul i32 %800, %div34alteredBB
  %801 = sub i32 %750, 395820140
  %802 = sub i32 %801, %div34alteredBB
  %803 = add i32 %802, 395820140
  %sub35alteredBB = sub nsw i32 %750, %div34alteredBB
  %804 = load i32, i32* %y, align 4
  %805 = sub i32 %804, -503398299
  %806 = sub i32 %805, 1
  %807 = add i32 %806, -503398299
  %_289 = sub i32 %804, 1
  %gen290 = mul i32 %807, 1
  %808 = add i32 %804, 389061736
  %809 = sub i32 %808, 1
  %810 = sub i32 %809, 389061736
  %_291 = sub i32 %804, 1
  %gen292 = mul i32 %810, 1
  %_293 = shl i32 %804, 1
  %811 = sub i32 %804, -704113491
  %812 = sub i32 %811, 1
  %813 = add i32 %812, -704113491
  %sub36alteredBB = sub nsw i32 %804, 1
  %_294 = shl i32 %813, 400
  %814 = sub i32 0, 400
  %815 = add i32 %813, %814
  %_295 = sub i32 %813, 400
  %gen296 = mul i32 %815, 400
  %816 = sub i32 0, 400
  %817 = add i32 %813, %816
  %_297 = sub i32 %813, 400
  %gen298 = mul i32 %817, 400
  %818 = sub i32 0, %813
  %819 = add i32 0, %818
  %_299 = sub i32 0, %813
  %820 = sub i32 0, %819
  %821 = sub i32 0, 400
  %822 = add i32 %820, %821
  %823 = sub i32 0, %822
  %gen300 = add i32 %819, 400
  %div37alteredBB = sdiv i32 %813, 400
  %_301 = shl i32 %803, %div37alteredBB
  %824 = sub i32 0, -606615878
  %825 = sub i32 %824, %803
  %826 = add i32 %825, -606615878
  %_302 = sub i32 0, %803
  %827 = sub i32 %826, 470031017
  %828 = add i32 %827, %div37alteredBB
  %829 = add i32 %828, 470031017
  %gen303 = add i32 %826, %div37alteredBB
  %830 = sub i32 0, %803
  %831 = sub i32 0, %div37alteredBB
  %832 = add i32 %830, %831
  %833 = sub i32 0, %832
  %add38alteredBB = add nsw i32 %803, %div37alteredBB
  %834 = load i32, i32* %m, align 4
  %_304 = shl i32 %834, 1
  %_305 = shl i32 %834, 1
  %835 = sub i32 0, 1
  %836 = add i32 %834, %835
  %_306 = sub i32 %834, 1
  %gen307 = mul i32 %836, 1
  %837 = add i32 0, 2056700170
  %838 = sub i32 %837, %834
  %839 = sub i32 %838, 2056700170
  %_308 = sub i32 0, %834
  %840 = sub i32 0, 1
  %841 = sub i32 %839, %840
  %gen309 = add i32 %839, 1
  %842 = add i32 %834, 1990191866
  %843 = sub i32 %842, 1
  %844 = sub i32 %843, 1990191866
  %sub39alteredBB = sub nsw i32 %834, 1
  %845 = sub i32 0, 31
  %846 = add i32 %844, %845
  %_310 = sub i32 %844, 31
  %gen311 = mul i32 %846, 31
  %847 = sub i32 0, %844
  %848 = add i32 0, %847
  %_312 = sub i32 0, %844
  %849 = sub i32 0, 31
  %850 = sub i32 %848, %849
  %gen313 = add i32 %848, 31
  %851 = sub i32 0, 31
  %852 = add i32 %844, %851
  %_314 = sub i32 %844, 31
  %gen315 = mul i32 %852, 31
  %_316 = shl i32 %844, 31
  %853 = sub i32 0, %844
  %854 = add i32 0, %853
  %_317 = sub i32 0, %844
  %855 = sub i32 %854, -1131254003
  %856 = add i32 %855, 31
  %857 = add i32 %856, -1131254003
  %gen318 = add i32 %854, 31
  %858 = add i32 0, 1458462974
  %859 = sub i32 %858, %844
  %860 = sub i32 %859, 1458462974
  %_319 = sub i32 0, %844
  %861 = sub i32 0, 31
  %862 = sub i32 %860, %861
  %gen320 = add i32 %860, 31
  %mul40alteredBB = mul nsw i32 %844, 31
  %863 = sub i32 0, %833
  %864 = sub i32 0, %mul40alteredBB
  %865 = add i32 %863, %864
  %866 = sub i32 0, %865
  %add41alteredBB = add nsw i32 %833, %mul40alteredBB
  %867 = load i32, i32* %d, align 4
  %_321 = shl i32 %866, %867
  %868 = sub i32 %866, -1053954324
  %869 = add i32 %868, %867
  %870 = add i32 %869, -1053954324
  %add42alteredBB = add nsw i32 %866, %867
  %conv43alteredBB = sext i32 %870 to i64
  %871 = load i32, i32* %i, align 4
  %idxprom44alteredBB = sext i32 %871 to i64
  %arrayidx45alteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom44alteredBB
  %arrayidx46alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx45alteredBB, i64 0, i64 3
  store i64 %conv43alteredBB, i64* %arrayidx46alteredBB, align 8
  store i32 163362463, i32* %switchVar
  br label %loopEnd

originalBB325alteredBB:                           ; preds = %loopEntry
  %872 = load i32, i32* %m, align 4
  %cmp47alteredBB = icmp sle i32 %872, 8
  store i32 -203151868, i32* %switchVar
  br label %loopEnd

originalBB329alteredBB:                           ; preds = %loopEntry
  %873 = load i32, i32* %y, align 4
  %874 = sub i32 %873, 1641630211
  %875 = sub i32 %874, 1
  %876 = add i32 %875, 1641630211
  %_330 = sub i32 %873, 1
  %gen331 = mul i32 %876, 1
  %_332 = shl i32 %873, 1
  %_333 = shl i32 %873, 1
  %877 = sub i32 0, 1
  %878 = add i32 %873, %877
  %_334 = sub i32 %873, 1
  %gen335 = mul i32 %878, 1
  %_336 = shl i32 %873, 1
  %879 = sub i32 0, 1
  %880 = add i32 %873, %879
  %_337 = sub i32 %873, 1
  %gen338 = mul i32 %880, 1
  %881 = sub i32 %873, 313246970
  %882 = sub i32 %881, 1
  %883 = add i32 %882, 313246970
  %_339 = sub i32 %873, 1
  %gen340 = mul i32 %883, 1
  %884 = sub i32 0, -1547546639
  %885 = sub i32 %884, %873
  %886 = add i32 %885, -1547546639
  %_341 = sub i32 0, %873
  %887 = add i32 %886, -1813767876
  %888 = add i32 %887, 1
  %889 = sub i32 %888, -1813767876
  %gen342 = add i32 %886, 1
  %890 = add i32 %873, 1856151328
  %891 = sub i32 %890, 1
  %892 = sub i32 %891, 1856151328
  %_343 = sub i32 %873, 1
  %gen344 = mul i32 %892, 1
  %_345 = shl i32 %873, 1
  %893 = add i32 %873, 1848553776
  %894 = sub i32 %893, 1
  %895 = sub i32 %894, 1848553776
  %sub50alteredBB = sub nsw i32 %873, 1
  %div51alteredBB = sdiv i32 %895, 4
  %896 = add i32 %div51alteredBB, 1285334051
  %897 = sub i32 %896, 1461
  %898 = sub i32 %897, 1285334051
  %_346 = sub i32 %div51alteredBB, 1461
  %gen347 = mul i32 %898, 1461
  %899 = add i32 0, 1281159136
  %900 = sub i32 %899, %div51alteredBB
  %901 = sub i32 %900, 1281159136
  %_348 = sub i32 0, %div51alteredBB
  %902 = sub i32 %901, -1609176180
  %903 = add i32 %902, 1461
  %904 = add i32 %903, -1609176180
  %gen349 = add i32 %901, 1461
  %_350 = shl i32 %div51alteredBB, 1461
  %905 = sub i32 0, %div51alteredBB
  %906 = add i32 0, %905
  %_351 = sub i32 0, %div51alteredBB
  %907 = add i32 %906, 1462259805
  %908 = add i32 %907, 1461
  %909 = sub i32 %908, 1462259805
  %gen352 = add i32 %906, 1461
  %_353 = shl i32 %div51alteredBB, 1461
  %mul52alteredBB = mul nsw i32 %div51alteredBB, 1461
  %910 = load i32, i32* %y, align 4
  %_354 = shl i32 %910, 1
  %911 = sub i32 0, 1
  %912 = add i32 %910, %911
  %_355 = sub i32 %910, 1
  %gen356 = mul i32 %912, 1
  %913 = sub i32 %910, 290783434
  %914 = sub i32 %913, 1
  %915 = add i32 %914, 290783434
  %_357 = sub i32 %910, 1
  %gen358 = mul i32 %915, 1
  %_359 = shl i32 %910, 1
  %916 = sub i32 %910, -1595866627
  %917 = sub i32 %916, 1
  %918 = add i32 %917, -1595866627
  %_360 = sub i32 %910, 1
  %gen361 = mul i32 %918, 1
  %919 = sub i32 %910, -170699156
  %920 = sub i32 %919, 1
  %921 = add i32 %920, -170699156
  %_362 = sub i32 %910, 1
  %gen363 = mul i32 %921, 1
  %922 = sub i32 %910, -1566714400
  %923 = sub i32 %922, 1
  %924 = add i32 %923, -1566714400
  %_364 = sub i32 %910, 1
  %gen365 = mul i32 %924, 1
  %_366 = shl i32 %910, 1
  %_367 = shl i32 %910, 1
  %925 = sub i32 %910, 1981559081
  %926 = sub i32 %925, 1
  %927 = add i32 %926, 1981559081
  %sub53alteredBB = sub nsw i32 %910, 1
  %_368 = shl i32 %927, 4
  %rem54alteredBB = srem i32 %927, 4
  %928 = sub i32 0, 365
  %929 = add i32 %rem54alteredBB, %928
  %_369 = sub i32 %rem54alteredBB, 365
  %gen370 = mul i32 %929, 365
  %_371 = shl i32 %rem54alteredBB, 365
  %930 = add i32 0, 1766818304
  %931 = sub i32 %930, %rem54alteredBB
  %932 = sub i32 %931, 1766818304
  %_372 = sub i32 0, %rem54alteredBB
  %933 = sub i32 0, %932
  %934 = sub i32 0, 365
  %935 = add i32 %933, %934
  %936 = sub i32 0, %935
  %gen373 = add i32 %932, 365
  %937 = sub i32 0, %rem54alteredBB
  %938 = add i32 0, %937
  %_374 = sub i32 0, %rem54alteredBB
  %939 = sub i32 %938, 869168825
  %940 = add i32 %939, 365
  %941 = add i32 %940, 869168825
  %gen375 = add i32 %938, 365
  %_376 = shl i32 %rem54alteredBB, 365
  %_377 = shl i32 %rem54alteredBB, 365
  %mul55alteredBB = mul nsw i32 %rem54alteredBB, 365
  %_378 = shl i32 %mul52alteredBB, %mul55alteredBB
  %942 = sub i32 0, %mul52alteredBB
  %943 = add i32 0, %942
  %_379 = sub i32 0, %mul52alteredBB
  %944 = add i32 %943, -1601230455
  %945 = add i32 %944, %mul55alteredBB
  %946 = sub i32 %945, -1601230455
  %gen380 = add i32 %943, %mul55alteredBB
  %947 = sub i32 %mul52alteredBB, 1471061343
  %948 = add i32 %947, %mul55alteredBB
  %949 = add i32 %948, 1471061343
  %add56alteredBB = add nsw i32 %mul52alteredBB, %mul55alteredBB
  %950 = load i32, i32* %y, align 4
  %951 = sub i32 0, 770371869
  %952 = sub i32 %951, %950
  %953 = add i32 %952, 770371869
  %_381 = sub i32 0, %950
  %954 = sub i32 0, %953
  %955 = sub i32 0, 1
  %956 = add i32 %954, %955
  %957 = sub i32 0, %956
  %gen382 = add i32 %953, 1
  %958 = sub i32 0, 260291697
  %959 = sub i32 %958, %950
  %960 = add i32 %959, 260291697
  %_383 = sub i32 0, %950
  %961 = sub i32 0, %960
  %962 = sub i32 0, 1
  %963 = add i32 %961, %962
  %964 = sub i32 0, %963
  %gen384 = add i32 %960, 1
  %_385 = shl i32 %950, 1
  %965 = sub i32 0, -77540648
  %966 = sub i32 %965, %950
  %967 = add i32 %966, -77540648
  %_386 = sub i32 0, %950
  %968 = sub i32 0, %967
  %969 = sub i32 0, 1
  %970 = add i32 %968, %969
  %971 = sub i32 0, %970
  %gen387 = add i32 %967, 1
  %972 = add i32 0, 1293902441
  %973 = sub i32 %972, %950
  %974 = sub i32 %973, 1293902441
  %_388 = sub i32 0, %950
  %975 = sub i32 %974, -2077754462
  %976 = add i32 %975, 1
  %977 = add i32 %976, -2077754462
  %gen389 = add i32 %974, 1
  %978 = add i32 %950, 1851009163
  %979 = sub i32 %978, 1
  %980 = sub i32 %979, 1851009163
  %_390 = sub i32 %950, 1
  %gen391 = mul i32 %980, 1
  %_392 = shl i32 %950, 1
  %981 = sub i32 0, -1216558114
  %982 = sub i32 %981, %950
  %983 = add i32 %982, -1216558114
  %_393 = sub i32 0, %950
  %984 = sub i32 0, 1
  %985 = sub i32 %983, %984
  %gen394 = add i32 %983, 1
  %_395 = shl i32 %950, 1
  %986 = sub i32 0, 1
  %987 = add i32 %950, %986
  %sub57alteredBB = sub nsw i32 %950, 1
  %_396 = shl i32 %987, 100
  %_397 = shl i32 %987, 100
  %div58alteredBB = sdiv i32 %987, 100
  %988 = add i32 0, 2126285708
  %989 = sub i32 %988, %949
  %990 = sub i32 %989, 2126285708
  %_398 = sub i32 0, %949
  %991 = sub i32 0, %div58alteredBB
  %992 = sub i32 %990, %991
  %gen399 = add i32 %990, %div58alteredBB
  %_400 = shl i32 %949, %div58alteredBB
  %993 = add i32 %949, 1987215516
  %994 = sub i32 %993, %div58alteredBB
  %995 = sub i32 %994, 1987215516
  %_401 = sub i32 %949, %div58alteredBB
  %gen402 = mul i32 %995, %div58alteredBB
  %996 = sub i32 0, %div58alteredBB
  %997 = add i32 %949, %996
  %sub59alteredBB = sub nsw i32 %949, %div58alteredBB
  %998 = load i32, i32* %y, align 4
  %999 = add i32 0, 1651546921
  %1000 = sub i32 %999, %998
  %1001 = sub i32 %1000, 1651546921
  %_403 = sub i32 0, %998
  %1002 = sub i32 0, %1001
  %1003 = sub i32 0, 1
  %1004 = add i32 %1002, %1003
  %1005 = sub i32 0, %1004
  %gen404 = add i32 %1001, 1
  %1006 = sub i32 0, %998
  %1007 = add i32 0, %1006
  %_405 = sub i32 0, %998
  %1008 = sub i32 %1007, 2023004435
  %1009 = add i32 %1008, 1
  %1010 = add i32 %1009, 2023004435
  %gen406 = add i32 %1007, 1
  %1011 = sub i32 %998, 137694621
  %1012 = sub i32 %1011, 1
  %1013 = add i32 %1012, 137694621
  %_407 = sub i32 %998, 1
  %gen408 = mul i32 %1013, 1
  %1014 = sub i32 0, %998
  %1015 = add i32 0, %1014
  %_409 = sub i32 0, %998
  %1016 = sub i32 0, %1015
  %1017 = sub i32 0, 1
  %1018 = add i32 %1016, %1017
  %1019 = sub i32 0, %1018
  %gen410 = add i32 %1015, 1
  %_411 = shl i32 %998, 1
  %1020 = add i32 %998, -1558061017
  %1021 = sub i32 %1020, 1
  %1022 = sub i32 %1021, -1558061017
  %sub60alteredBB = sub nsw i32 %998, 1
  %div61alteredBB = sdiv i32 %1022, 400
  %1023 = sub i32 0, %div61alteredBB
  %1024 = add i32 %997, %1023
  %_412 = sub i32 %997, %div61alteredBB
  %gen413 = mul i32 %1024, %div61alteredBB
  %_414 = shl i32 %997, %div61alteredBB
  %1025 = sub i32 0, %997
  %1026 = add i32 0, %1025
  %_415 = sub i32 0, %997
  %1027 = sub i32 0, %1026
  %1028 = sub i32 0, %div61alteredBB
  %1029 = add i32 %1027, %1028
  %1030 = sub i32 0, %1029
  %gen416 = add i32 %1026, %div61alteredBB
  %1031 = sub i32 0, %div61alteredBB
  %1032 = sub i32 %997, %1031
  %add62alteredBB = add nsw i32 %997, %div61alteredBB
  %1033 = load i32, i32* %m, align 4
  %1034 = sub i32 0, %1033
  %1035 = add i32 0, %1034
  %_417 = sub i32 0, %1033
  %1036 = sub i32 0, %1035
  %1037 = sub i32 0, 1
  %1038 = add i32 %1036, %1037
  %1039 = sub i32 0, %1038
  %gen418 = add i32 %1035, 1
  %1040 = add i32 %1033, 991015861
  %1041 = sub i32 %1040, 1
  %1042 = sub i32 %1041, 991015861
  %_419 = sub i32 %1033, 1
  %gen420 = mul i32 %1042, 1
  %1043 = sub i32 0, %1033
  %1044 = add i32 0, %1043
  %_421 = sub i32 0, %1033
  %1045 = add i32 %1044, -575953309
  %1046 = add i32 %1045, 1
  %1047 = sub i32 %1046, -575953309
  %gen422 = add i32 %1044, 1
  %1048 = sub i32 0, 1228829252
  %1049 = sub i32 %1048, %1033
  %1050 = add i32 %1049, 1228829252
  %_423 = sub i32 0, %1033
  %1051 = sub i32 0, 1
  %1052 = sub i32 %1050, %1051
  %gen424 = add i32 %1050, 1
  %1053 = sub i32 0, 1
  %1054 = add i32 %1033, %1053
  %sub63alteredBB = sub nsw i32 %1033, 1
  %1055 = sub i32 0, -1058863563
  %1056 = sub i32 %1055, %1054
  %1057 = add i32 %1056, -1058863563
  %_425 = sub i32 0, %1054
  %1058 = sub i32 0, %1057
  %1059 = sub i32 0, 2
  %1060 = add i32 %1058, %1059
  %1061 = sub i32 0, %1060
  %gen426 = add i32 %1057, 2
  %1062 = add i32 0, 1455623436
  %1063 = sub i32 %1062, %1054
  %1064 = sub i32 %1063, 1455623436
  %_427 = sub i32 0, %1054
  %1065 = add i32 %1064, -1185377314
  %1066 = add i32 %1065, 2
  %1067 = sub i32 %1066, -1185377314
  %gen428 = add i32 %1064, 2
  %1068 = add i32 %1054, 1525991878
  %1069 = sub i32 %1068, 2
  %1070 = sub i32 %1069, 1525991878
  %_429 = sub i32 %1054, 2
  %gen430 = mul i32 %1070, 2
  %1071 = sub i32 0, %1054
  %1072 = add i32 0, %1071
  %_431 = sub i32 0, %1054
  %1073 = sub i32 %1072, 176420511
  %1074 = add i32 %1073, 2
  %1075 = add i32 %1074, 176420511
  %gen432 = add i32 %1072, 2
  %1076 = add i32 %1054, -218739806
  %1077 = sub i32 %1076, 2
  %1078 = sub i32 %1077, -218739806
  %_433 = sub i32 %1054, 2
  %gen434 = mul i32 %1078, 2
  %_435 = shl i32 %1054, 2
  %div64alteredBB = sdiv i32 %1054, 2
  %_436 = shl i32 %div64alteredBB, 61
  %1079 = add i32 %div64alteredBB, 1437414510
  %1080 = sub i32 %1079, 61
  %1081 = sub i32 %1080, 1437414510
  %_437 = sub i32 %div64alteredBB, 61
  %gen438 = mul i32 %1081, 61
  %1082 = sub i32 0, %div64alteredBB
  %1083 = add i32 0, %1082
  %_439 = sub i32 0, %div64alteredBB
  %1084 = sub i32 %1083, -492415238
  %1085 = add i32 %1084, 61
  %1086 = add i32 %1085, -492415238
  %gen440 = add i32 %1083, 61
  %mul65alteredBB = mul nsw i32 %div64alteredBB, 61
  %1087 = add i32 %1032, -614372446
  %1088 = sub i32 %1087, %mul65alteredBB
  %1089 = sub i32 %1088, -614372446
  %_441 = sub i32 %1032, %mul65alteredBB
  %gen442 = mul i32 %1089, %mul65alteredBB
  %1090 = sub i32 0, 269652412
  %1091 = sub i32 %1090, %1032
  %1092 = add i32 %1091, 269652412
  %_443 = sub i32 0, %1032
  %1093 = add i32 %1092, -1772694152
  %1094 = add i32 %1093, %mul65alteredBB
  %1095 = sub i32 %1094, -1772694152
  %gen444 = add i32 %1092, %mul65alteredBB
  %1096 = sub i32 0, %1032
  %1097 = add i32 0, %1096
  %_445 = sub i32 0, %1032
  %1098 = sub i32 0, %1097
  %1099 = sub i32 0, %mul65alteredBB
  %1100 = add i32 %1098, %1099
  %1101 = sub i32 0, %1100
  %gen446 = add i32 %1097, %mul65alteredBB
  %_447 = shl i32 %1032, %mul65alteredBB
  %1102 = sub i32 %1032, -1467123080
  %1103 = add i32 %1102, %mul65alteredBB
  %1104 = add i32 %1103, -1467123080
  %add66alteredBB = add nsw i32 %1032, %mul65alteredBB
  %1105 = load i32, i32* %m, align 4
  %1106 = add i32 %1105, 2046625823
  %1107 = sub i32 %1106, 1
  %1108 = sub i32 %1107, 2046625823
  %_448 = sub i32 %1105, 1
  %gen449 = mul i32 %1108, 1
  %1109 = sub i32 %1105, -1158573160
  %1110 = sub i32 %1109, 1
  %1111 = add i32 %1110, -1158573160
  %_450 = sub i32 %1105, 1
  %gen451 = mul i32 %1111, 1
  %_452 = shl i32 %1105, 1
  %1112 = add i32 %1105, -2036877512
  %1113 = sub i32 %1112, 1
  %1114 = sub i32 %1113, -2036877512
  %_453 = sub i32 %1105, 1
  %gen454 = mul i32 %1114, 1
  %1115 = add i32 %1105, -220249488
  %1116 = sub i32 %1115, 1
  %1117 = sub i32 %1116, -220249488
  %sub67alteredBB = sub nsw i32 %1105, 1
  %1118 = sub i32 %1117, -351341263
  %1119 = sub i32 %1118, 2
  %1120 = add i32 %1119, -351341263
  %_455 = sub i32 %1117, 2
  %gen456 = mul i32 %1120, 2
  %rem68alteredBB = srem i32 %1117, 2
  %1121 = sub i32 0, %rem68alteredBB
  %1122 = add i32 0, %1121
  %_457 = sub i32 0, %rem68alteredBB
  %1123 = sub i32 %1122, -363696498
  %1124 = add i32 %1123, 31
  %1125 = add i32 %1124, -363696498
  %gen458 = add i32 %1122, 31
  %1126 = sub i32 0, 31
  %1127 = add i32 %rem68alteredBB, %1126
  %_459 = sub i32 %rem68alteredBB, 31
  %gen460 = mul i32 %1127, 31
  %1128 = sub i32 0, 31
  %1129 = add i32 %rem68alteredBB, %1128
  %_461 = sub i32 %rem68alteredBB, 31
  %gen462 = mul i32 %1129, 31
  %1130 = sub i32 0, 31
  %1131 = add i32 %rem68alteredBB, %1130
  %_463 = sub i32 %rem68alteredBB, 31
  %gen464 = mul i32 %1131, 31
  %1132 = sub i32 %rem68alteredBB, 1309176744
  %1133 = sub i32 %1132, 31
  %1134 = add i32 %1133, 1309176744
  %_465 = sub i32 %rem68alteredBB, 31
  %gen466 = mul i32 %1134, 31
  %mul69alteredBB = mul nsw i32 %rem68alteredBB, 31
  %_467 = shl i32 %1104, %mul69alteredBB
  %_468 = shl i32 %1104, %mul69alteredBB
  %1135 = sub i32 %1104, 1555619942
  %1136 = add i32 %1135, %mul69alteredBB
  %1137 = add i32 %1136, 1555619942
  %add70alteredBB = add nsw i32 %1104, %mul69alteredBB
  %1138 = add i32 0, -958641420
  %1139 = sub i32 %1138, %1137
  %1140 = sub i32 %1139, -958641420
  %_469 = sub i32 0, %1137
  %1141 = add i32 %1140, 832631440
  %1142 = add i32 %1141, 1
  %1143 = sub i32 %1142, 832631440
  %gen470 = add i32 %1140, 1
  %1144 = add i32 0, -2046842546
  %1145 = sub i32 %1144, %1137
  %1146 = sub i32 %1145, -2046842546
  %_471 = sub i32 0, %1137
  %1147 = sub i32 0, %1146
  %1148 = sub i32 0, 1
  %1149 = add i32 %1147, %1148
  %1150 = sub i32 0, %1149
  %gen472 = add i32 %1146, 1
  %1151 = add i32 %1137, 1900129119
  %1152 = sub i32 %1151, 1
  %1153 = sub i32 %1152, 1900129119
  %_473 = sub i32 %1137, 1
  %gen474 = mul i32 %1153, 1
  %1154 = add i32 0, 1459369836
  %1155 = sub i32 %1154, %1137
  %1156 = sub i32 %1155, 1459369836
  %_475 = sub i32 0, %1137
  %1157 = add i32 %1156, 1607313700
  %1158 = add i32 %1157, 1
  %1159 = sub i32 %1158, 1607313700
  %gen476 = add i32 %1156, 1
  %1160 = add i32 %1137, -1499954218
  %1161 = sub i32 %1160, 1
  %1162 = sub i32 %1161, -1499954218
  %sub71alteredBB = sub nsw i32 %1137, 1
  %1163 = load i32, i32* %d, align 4
  %1164 = add i32 0, -1587092899
  %1165 = sub i32 %1164, %1162
  %1166 = sub i32 %1165, -1587092899
  %_477 = sub i32 0, %1162
  %1167 = sub i32 0, %1166
  %1168 = sub i32 0, %1163
  %1169 = add i32 %1167, %1168
  %1170 = sub i32 0, %1169
  %gen478 = add i32 %1166, %1163
  %1171 = sub i32 %1162, 1777744832
  %1172 = sub i32 %1171, %1163
  %1173 = add i32 %1172, 1777744832
  %_479 = sub i32 %1162, %1163
  %gen480 = mul i32 %1173, %1163
  %1174 = sub i32 0, %1163
  %1175 = add i32 %1162, %1174
  %_481 = sub i32 %1162, %1163
  %gen482 = mul i32 %1175, %1163
  %1176 = add i32 0, -235091714
  %1177 = sub i32 %1176, %1162
  %1178 = sub i32 %1177, -235091714
  %_483 = sub i32 0, %1162
  %1179 = add i32 %1178, -1036750151
  %1180 = add i32 %1179, %1163
  %1181 = sub i32 %1180, -1036750151
  %gen484 = add i32 %1178, %1163
  %1182 = add i32 %1162, 1041540585
  %1183 = sub i32 %1182, %1163
  %1184 = sub i32 %1183, 1041540585
  %_485 = sub i32 %1162, %1163
  %gen486 = mul i32 %1184, %1163
  %_487 = shl i32 %1162, %1163
  %1185 = sub i32 %1162, -1788717836
  %1186 = add i32 %1185, %1163
  %1187 = add i32 %1186, -1788717836
  %add72alteredBB = add nsw i32 %1162, %1163
  %conv73alteredBB = sext i32 %1187 to i64
  %1188 = load i32, i32* %i, align 4
  %idxprom74alteredBB = sext i32 %1188 to i64
  %arrayidx75alteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom74alteredBB
  %arrayidx76alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx75alteredBB, i64 0, i64 3
  store i64 %conv73alteredBB, i64* %arrayidx76alteredBB, align 8
  store i32 -2047067599, i32* %switchVar
  br label %loopEnd

originalBB491alteredBB:                           ; preds = %loopEntry
  %1189 = load i32, i32* %y, align 4
  %1190 = add i32 0, 27482510
  %1191 = sub i32 %1190, %1189
  %1192 = sub i32 %1191, 27482510
  %_492 = sub i32 0, %1189
  %1193 = sub i32 0, 1
  %1194 = sub i32 %1192, %1193
  %gen493 = add i32 %1192, 1
  %1195 = sub i32 0, -1263544840
  %1196 = sub i32 %1195, %1189
  %1197 = add i32 %1196, -1263544840
  %_494 = sub i32 0, %1189
  %1198 = sub i32 0, %1197
  %1199 = sub i32 0, 1
  %1200 = add i32 %1198, %1199
  %1201 = sub i32 0, %1200
  %gen495 = add i32 %1197, 1
  %1202 = add i32 %1189, -1876736254
  %1203 = sub i32 %1202, 1
  %1204 = sub i32 %1203, -1876736254
  %_496 = sub i32 %1189, 1
  %gen497 = mul i32 %1204, 1
  %_498 = shl i32 %1189, 1
  %1205 = sub i32 0, -931970719
  %1206 = sub i32 %1205, %1189
  %1207 = add i32 %1206, -931970719
  %_499 = sub i32 0, %1189
  %1208 = add i32 %1207, -1869425571
  %1209 = add i32 %1208, 1
  %1210 = sub i32 %1209, -1869425571
  %gen500 = add i32 %1207, 1
  %1211 = add i32 %1189, 224301645
  %1212 = sub i32 %1211, 1
  %1213 = sub i32 %1212, 224301645
  %_501 = sub i32 %1189, 1
  %gen502 = mul i32 %1213, 1
  %_503 = shl i32 %1189, 1
  %1214 = sub i32 %1189, -551040499
  %1215 = sub i32 %1214, 1
  %1216 = add i32 %1215, -551040499
  %sub78alteredBB = sub nsw i32 %1189, 1
  %1217 = sub i32 %1216, 1871089827
  %1218 = sub i32 %1217, 4
  %1219 = add i32 %1218, 1871089827
  %_504 = sub i32 %1216, 4
  %gen505 = mul i32 %1219, 4
  %1220 = add i32 0, 996681509
  %1221 = sub i32 %1220, %1216
  %1222 = sub i32 %1221, 996681509
  %_506 = sub i32 0, %1216
  %1223 = sub i32 %1222, -1082484036
  %1224 = add i32 %1223, 4
  %1225 = add i32 %1224, -1082484036
  %gen507 = add i32 %1222, 4
  %div79alteredBB = sdiv i32 %1216, 4
  %mul80alteredBB = mul nsw i32 %div79alteredBB, 1461
  %1226 = load i32, i32* %y, align 4
  %_508 = shl i32 %1226, 1
  %1227 = sub i32 0, %1226
  %1228 = add i32 0, %1227
  %_509 = sub i32 0, %1226
  %1229 = add i32 %1228, 1951604113
  %1230 = add i32 %1229, 1
  %1231 = sub i32 %1230, 1951604113
  %gen510 = add i32 %1228, 1
  %1232 = add i32 0, -1994585322
  %1233 = sub i32 %1232, %1226
  %1234 = sub i32 %1233, -1994585322
  %_511 = sub i32 0, %1226
  %1235 = add i32 %1234, -727334138
  %1236 = add i32 %1235, 1
  %1237 = sub i32 %1236, -727334138
  %gen512 = add i32 %1234, 1
  %1238 = sub i32 %1226, -1363112151
  %1239 = sub i32 %1238, 1
  %1240 = add i32 %1239, -1363112151
  %_513 = sub i32 %1226, 1
  %gen514 = mul i32 %1240, 1
  %1241 = add i32 %1226, 1289875976
  %1242 = sub i32 %1241, 1
  %1243 = sub i32 %1242, 1289875976
  %_515 = sub i32 %1226, 1
  %gen516 = mul i32 %1243, 1
  %_517 = shl i32 %1226, 1
  %1244 = add i32 %1226, 1371912215
  %1245 = sub i32 %1244, 1
  %1246 = sub i32 %1245, 1371912215
  %_518 = sub i32 %1226, 1
  %gen519 = mul i32 %1246, 1
  %1247 = add i32 %1226, 1261926141
  %1248 = sub i32 %1247, 1
  %1249 = sub i32 %1248, 1261926141
  %sub81alteredBB = sub nsw i32 %1226, 1
  %1250 = sub i32 0, %1249
  %1251 = add i32 0, %1250
  %_520 = sub i32 0, %1249
  %1252 = sub i32 %1251, 1924773292
  %1253 = add i32 %1252, 4
  %1254 = add i32 %1253, 1924773292
  %gen521 = add i32 %1251, 4
  %_522 = shl i32 %1249, 4
  %_523 = shl i32 %1249, 4
  %1255 = sub i32 0, 553616915
  %1256 = sub i32 %1255, %1249
  %1257 = add i32 %1256, 553616915
  %_524 = sub i32 0, %1249
  %1258 = sub i32 %1257, 1497087036
  %1259 = add i32 %1258, 4
  %1260 = add i32 %1259, 1497087036
  %gen525 = add i32 %1257, 4
  %1261 = add i32 0, 1258690145
  %1262 = sub i32 %1261, %1249
  %1263 = sub i32 %1262, 1258690145
  %_526 = sub i32 0, %1249
  %1264 = sub i32 0, %1263
  %1265 = sub i32 0, 4
  %1266 = add i32 %1264, %1265
  %1267 = sub i32 0, %1266
  %gen527 = add i32 %1263, 4
  %_528 = shl i32 %1249, 4
  %1268 = sub i32 0, %1249
  %1269 = add i32 0, %1268
  %_529 = sub i32 0, %1249
  %1270 = sub i32 0, 4
  %1271 = sub i32 %1269, %1270
  %gen530 = add i32 %1269, 4
  %rem82alteredBB = srem i32 %1249, 4
  %_531 = shl i32 %rem82alteredBB, 365
  %_532 = shl i32 %rem82alteredBB, 365
  %1272 = sub i32 %rem82alteredBB, 2051124963
  %1273 = sub i32 %1272, 365
  %1274 = add i32 %1273, 2051124963
  %_533 = sub i32 %rem82alteredBB, 365
  %gen534 = mul i32 %1274, 365
  %_535 = shl i32 %rem82alteredBB, 365
  %_536 = shl i32 %rem82alteredBB, 365
  %1275 = add i32 0, -792619116
  %1276 = sub i32 %1275, %rem82alteredBB
  %1277 = sub i32 %1276, -792619116
  %_537 = sub i32 0, %rem82alteredBB
  %1278 = sub i32 %1277, 1014366074
  %1279 = add i32 %1278, 365
  %1280 = add i32 %1279, 1014366074
  %gen538 = add i32 %1277, 365
  %_539 = shl i32 %rem82alteredBB, 365
  %1281 = add i32 %rem82alteredBB, 2070154596
  %1282 = sub i32 %1281, 365
  %1283 = sub i32 %1282, 2070154596
  %_540 = sub i32 %rem82alteredBB, 365
  %gen541 = mul i32 %1283, 365
  %mul83alteredBB = mul nsw i32 %rem82alteredBB, 365
  %1284 = sub i32 0, %mul80alteredBB
  %1285 = add i32 0, %1284
  %_542 = sub i32 0, %mul80alteredBB
  %1286 = sub i32 0, %1285
  %1287 = sub i32 0, %mul83alteredBB
  %1288 = add i32 %1286, %1287
  %1289 = sub i32 0, %1288
  %gen543 = add i32 %1285, %mul83alteredBB
  %1290 = add i32 %mul80alteredBB, 1981125092
  %1291 = sub i32 %1290, %mul83alteredBB
  %1292 = sub i32 %1291, 1981125092
  %_544 = sub i32 %mul80alteredBB, %mul83alteredBB
  %gen545 = mul i32 %1292, %mul83alteredBB
  %1293 = sub i32 0, %mul80alteredBB
  %1294 = add i32 0, %1293
  %_546 = sub i32 0, %mul80alteredBB
  %1295 = sub i32 0, %mul83alteredBB
  %1296 = sub i32 %1294, %1295
  %gen547 = add i32 %1294, %mul83alteredBB
  %1297 = sub i32 %mul80alteredBB, 1027372348
  %1298 = add i32 %1297, %mul83alteredBB
  %1299 = add i32 %1298, 1027372348
  %add84alteredBB = add nsw i32 %mul80alteredBB, %mul83alteredBB
  %1300 = load i32, i32* %y, align 4
  %1301 = sub i32 %1300, -316661737
  %1302 = sub i32 %1301, 1
  %1303 = add i32 %1302, -316661737
  %_548 = sub i32 %1300, 1
  %gen549 = mul i32 %1303, 1
  %1304 = add i32 %1300, 368619706
  %1305 = sub i32 %1304, 1
  %1306 = sub i32 %1305, 368619706
  %sub85alteredBB = sub nsw i32 %1300, 1
  %1307 = add i32 %1306, -454974886
  %1308 = sub i32 %1307, 100
  %1309 = sub i32 %1308, -454974886
  %_550 = sub i32 %1306, 100
  %gen551 = mul i32 %1309, 100
  %_552 = shl i32 %1306, 100
  %_553 = shl i32 %1306, 100
  %1310 = sub i32 0, 427660357
  %1311 = sub i32 %1310, %1306
  %1312 = add i32 %1311, 427660357
  %_554 = sub i32 0, %1306
  %1313 = sub i32 %1312, -256425607
  %1314 = add i32 %1313, 100
  %1315 = add i32 %1314, -256425607
  %gen555 = add i32 %1312, 100
  %div86alteredBB = sdiv i32 %1306, 100
  %1316 = sub i32 0, 239535801
  %1317 = sub i32 %1316, %1299
  %1318 = add i32 %1317, 239535801
  %_556 = sub i32 0, %1299
  %1319 = sub i32 %1318, -1077212376
  %1320 = add i32 %1319, %div86alteredBB
  %1321 = add i32 %1320, -1077212376
  %gen557 = add i32 %1318, %div86alteredBB
  %1322 = sub i32 %1299, -142337935
  %1323 = sub i32 %1322, %div86alteredBB
  %1324 = add i32 %1323, -142337935
  %_558 = sub i32 %1299, %div86alteredBB
  %gen559 = mul i32 %1324, %div86alteredBB
  %1325 = add i32 0, 2086781032
  %1326 = sub i32 %1325, %1299
  %1327 = sub i32 %1326, 2086781032
  %_560 = sub i32 0, %1299
  %1328 = sub i32 0, %div86alteredBB
  %1329 = sub i32 %1327, %1328
  %gen561 = add i32 %1327, %div86alteredBB
  %1330 = sub i32 0, %1299
  %1331 = add i32 0, %1330
  %_562 = sub i32 0, %1299
  %1332 = sub i32 0, %div86alteredBB
  %1333 = sub i32 %1331, %1332
  %gen563 = add i32 %1331, %div86alteredBB
  %_564 = shl i32 %1299, %div86alteredBB
  %1334 = sub i32 0, %div86alteredBB
  %1335 = add i32 %1299, %1334
  %_565 = sub i32 %1299, %div86alteredBB
  %gen566 = mul i32 %1335, %div86alteredBB
  %1336 = add i32 0, -1727447832
  %1337 = sub i32 %1336, %1299
  %1338 = sub i32 %1337, -1727447832
  %_567 = sub i32 0, %1299
  %1339 = sub i32 0, %div86alteredBB
  %1340 = sub i32 %1338, %1339
  %gen568 = add i32 %1338, %div86alteredBB
  %1341 = sub i32 0, %div86alteredBB
  %1342 = add i32 %1299, %1341
  %sub87alteredBB = sub nsw i32 %1299, %div86alteredBB
  %1343 = load i32, i32* %y, align 4
  %_569 = shl i32 %1343, 1
  %1344 = add i32 0, -1788096269
  %1345 = sub i32 %1344, %1343
  %1346 = sub i32 %1345, -1788096269
  %_570 = sub i32 0, %1343
  %1347 = add i32 %1346, -2029861573
  %1348 = add i32 %1347, 1
  %1349 = sub i32 %1348, -2029861573
  %gen571 = add i32 %1346, 1
  %1350 = sub i32 0, 1708090583
  %1351 = sub i32 %1350, %1343
  %1352 = add i32 %1351, 1708090583
  %_572 = sub i32 0, %1343
  %1353 = add i32 %1352, 1518686150
  %1354 = add i32 %1353, 1
  %1355 = sub i32 %1354, 1518686150
  %gen573 = add i32 %1352, 1
  %1356 = add i32 %1343, -2056068418
  %1357 = sub i32 %1356, 1
  %1358 = sub i32 %1357, -2056068418
  %sub88alteredBB = sub nsw i32 %1343, 1
  %1359 = sub i32 0, 893361427
  %1360 = sub i32 %1359, %1358
  %1361 = add i32 %1360, 893361427
  %_574 = sub i32 0, %1358
  %1362 = sub i32 0, 400
  %1363 = sub i32 %1361, %1362
  %gen575 = add i32 %1361, 400
  %1364 = sub i32 %1358, -1697164632
  %1365 = sub i32 %1364, 400
  %1366 = add i32 %1365, -1697164632
  %_576 = sub i32 %1358, 400
  %gen577 = mul i32 %1366, 400
  %_578 = shl i32 %1358, 400
  %1367 = sub i32 0, -1454742959
  %1368 = sub i32 %1367, %1358
  %1369 = add i32 %1368, -1454742959
  %_579 = sub i32 0, %1358
  %1370 = sub i32 %1369, 1239723508
  %1371 = add i32 %1370, 400
  %1372 = add i32 %1371, 1239723508
  %gen580 = add i32 %1369, 400
  %_581 = shl i32 %1358, 400
  %div89alteredBB = sdiv i32 %1358, 400
  %1373 = add i32 0, -1283397354
  %1374 = sub i32 %1373, %1342
  %1375 = sub i32 %1374, -1283397354
  %_582 = sub i32 0, %1342
  %1376 = sub i32 %1375, -22440042
  %1377 = add i32 %1376, %div89alteredBB
  %1378 = add i32 %1377, -22440042
  %gen583 = add i32 %1375, %div89alteredBB
  %1379 = sub i32 0, 1623404213
  %1380 = sub i32 %1379, %1342
  %1381 = add i32 %1380, 1623404213
  %_584 = sub i32 0, %1342
  %1382 = sub i32 0, %1381
  %1383 = sub i32 0, %div89alteredBB
  %1384 = add i32 %1382, %1383
  %1385 = sub i32 0, %1384
  %gen585 = add i32 %1381, %div89alteredBB
  %1386 = sub i32 0, %1342
  %1387 = add i32 0, %1386
  %_586 = sub i32 0, %1342
  %1388 = sub i32 %1387, 1576007711
  %1389 = add i32 %1388, %div89alteredBB
  %1390 = add i32 %1389, 1576007711
  %gen587 = add i32 %1387, %div89alteredBB
  %1391 = sub i32 0, %1342
  %1392 = add i32 0, %1391
  %_588 = sub i32 0, %1342
  %1393 = sub i32 0, %div89alteredBB
  %1394 = sub i32 %1392, %1393
  %gen589 = add i32 %1392, %div89alteredBB
  %1395 = sub i32 0, %div89alteredBB
  %1396 = add i32 %1342, %1395
  %_590 = sub i32 %1342, %div89alteredBB
  %gen591 = mul i32 %1396, %div89alteredBB
  %1397 = sub i32 0, 1654461838
  %1398 = sub i32 %1397, %1342
  %1399 = add i32 %1398, 1654461838
  %_592 = sub i32 0, %1342
  %1400 = sub i32 %1399, -529919532
  %1401 = add i32 %1400, %div89alteredBB
  %1402 = add i32 %1401, -529919532
  %gen593 = add i32 %1399, %div89alteredBB
  %1403 = add i32 %1342, -887908150
  %1404 = sub i32 %1403, %div89alteredBB
  %1405 = sub i32 %1404, -887908150
  %_594 = sub i32 %1342, %div89alteredBB
  %gen595 = mul i32 %1405, %div89alteredBB
  %_596 = shl i32 %1342, %div89alteredBB
  %1406 = sub i32 %1342, -596416103
  %1407 = sub i32 %1406, %div89alteredBB
  %1408 = add i32 %1407, -596416103
  %_597 = sub i32 %1342, %div89alteredBB
  %gen598 = mul i32 %1408, %div89alteredBB
  %1409 = sub i32 %1342, 2082678746
  %1410 = add i32 %1409, %div89alteredBB
  %1411 = add i32 %1410, 2082678746
  %add90alteredBB = add nsw i32 %1342, %div89alteredBB
  %1412 = sub i32 0, %1411
  %1413 = add i32 0, %1412
  %_599 = sub i32 0, %1411
  %1414 = sub i32 0, 213
  %1415 = sub i32 %1413, %1414
  %gen600 = add i32 %1413, 213
  %1416 = add i32 %1411, 1953517437
  %1417 = add i32 %1416, 213
  %1418 = sub i32 %1417, 1953517437
  %add91alteredBB = add nsw i32 %1411, 213
  %1419 = load i32, i32* %m, align 4
  %1420 = sub i32 0, 204015415
  %1421 = sub i32 %1420, %1419
  %1422 = add i32 %1421, 204015415
  %_601 = sub i32 0, %1419
  %1423 = sub i32 0, %1422
  %1424 = sub i32 0, 8
  %1425 = add i32 %1423, %1424
  %1426 = sub i32 0, %1425
  %gen602 = add i32 %1422, 8
  %1427 = sub i32 0, -146869377
  %1428 = sub i32 %1427, %1419
  %1429 = add i32 %1428, -146869377
  %_603 = sub i32 0, %1419
  %1430 = add i32 %1429, 962668350
  %1431 = add i32 %1430, 8
  %1432 = sub i32 %1431, 962668350
  %gen604 = add i32 %1429, 8
  %1433 = sub i32 0, 8
  %1434 = add i32 %1419, %1433
  %_605 = sub i32 %1419, 8
  %gen606 = mul i32 %1434, 8
  %_607 = shl i32 %1419, 8
  %1435 = sub i32 %1419, 1835087926
  %1436 = sub i32 %1435, 8
  %1437 = add i32 %1436, 1835087926
  %sub92alteredBB = sub nsw i32 %1419, 8
  %_608 = shl i32 %1437, 2
  %1438 = add i32 0, 447594967
  %1439 = sub i32 %1438, %1437
  %1440 = sub i32 %1439, 447594967
  %_609 = sub i32 0, %1437
  %1441 = sub i32 %1440, 110135362
  %1442 = add i32 %1441, 2
  %1443 = add i32 %1442, 110135362
  %gen610 = add i32 %1440, 2
  %div93alteredBB = sdiv i32 %1437, 2
  %1444 = sub i32 %div93alteredBB, -1251838596
  %1445 = sub i32 %1444, 61
  %1446 = add i32 %1445, -1251838596
  %_611 = sub i32 %div93alteredBB, 61
  %gen612 = mul i32 %1446, 61
  %_613 = shl i32 %div93alteredBB, 61
  %1447 = sub i32 0, -168155710
  %1448 = sub i32 %1447, %div93alteredBB
  %1449 = add i32 %1448, -168155710
  %_614 = sub i32 0, %div93alteredBB
  %1450 = sub i32 0, %1449
  %1451 = sub i32 0, 61
  %1452 = add i32 %1450, %1451
  %1453 = sub i32 0, %1452
  %gen615 = add i32 %1449, 61
  %1454 = sub i32 0, -932736054
  %1455 = sub i32 %1454, %div93alteredBB
  %1456 = add i32 %1455, -932736054
  %_616 = sub i32 0, %div93alteredBB
  %1457 = sub i32 0, %1456
  %1458 = sub i32 0, 61
  %1459 = add i32 %1457, %1458
  %1460 = sub i32 0, %1459
  %gen617 = add i32 %1456, 61
  %1461 = sub i32 %div93alteredBB, -277846696
  %1462 = sub i32 %1461, 61
  %1463 = add i32 %1462, -277846696
  %_618 = sub i32 %div93alteredBB, 61
  %gen619 = mul i32 %1463, 61
  %_620 = shl i32 %div93alteredBB, 61
  %mul94alteredBB = mul nsw i32 %div93alteredBB, 61
  %_621 = shl i32 %1418, %mul94alteredBB
  %1464 = add i32 0, -1685297929
  %1465 = sub i32 %1464, %1418
  %1466 = sub i32 %1465, -1685297929
  %_622 = sub i32 0, %1418
  %1467 = sub i32 %1466, -84180324
  %1468 = add i32 %1467, %mul94alteredBB
  %1469 = add i32 %1468, -84180324
  %gen623 = add i32 %1466, %mul94alteredBB
  %1470 = sub i32 0, %1418
  %1471 = add i32 0, %1470
  %_624 = sub i32 0, %1418
  %1472 = sub i32 0, %mul94alteredBB
  %1473 = sub i32 %1471, %1472
  %gen625 = add i32 %1471, %mul94alteredBB
  %1474 = sub i32 %1418, -1207922136
  %1475 = sub i32 %1474, %mul94alteredBB
  %1476 = add i32 %1475, -1207922136
  %_626 = sub i32 %1418, %mul94alteredBB
  %gen627 = mul i32 %1476, %mul94alteredBB
  %1477 = add i32 %1418, -416786330
  %1478 = sub i32 %1477, %mul94alteredBB
  %1479 = sub i32 %1478, -416786330
  %_628 = sub i32 %1418, %mul94alteredBB
  %gen629 = mul i32 %1479, %mul94alteredBB
  %1480 = add i32 %1418, 1144150941
  %1481 = add i32 %1480, %mul94alteredBB
  %1482 = sub i32 %1481, 1144150941
  %add95alteredBB = add nsw i32 %1418, %mul94alteredBB
  %1483 = load i32, i32* %m, align 4
  %1484 = sub i32 0, 8
  %1485 = add i32 %1483, %1484
  %_630 = sub i32 %1483, 8
  %gen631 = mul i32 %1485, 8
  %1486 = add i32 %1483, -497740292
  %1487 = sub i32 %1486, 8
  %1488 = sub i32 %1487, -497740292
  %_632 = sub i32 %1483, 8
  %gen633 = mul i32 %1488, 8
  %1489 = add i32 %1483, -696960815
  %1490 = sub i32 %1489, 8
  %1491 = sub i32 %1490, -696960815
  %_634 = sub i32 %1483, 8
  %gen635 = mul i32 %1491, 8
  %_636 = shl i32 %1483, 8
  %1492 = sub i32 0, 853592707
  %1493 = sub i32 %1492, %1483
  %1494 = add i32 %1493, 853592707
  %_637 = sub i32 0, %1483
  %1495 = sub i32 0, 8
  %1496 = sub i32 %1494, %1495
  %gen638 = add i32 %1494, 8
  %_639 = shl i32 %1483, 8
  %1497 = sub i32 %1483, 689577089
  %1498 = sub i32 %1497, 8
  %1499 = add i32 %1498, 689577089
  %sub96alteredBB = sub nsw i32 %1483, 8
  %1500 = sub i32 0, %1499
  %1501 = add i32 0, %1500
  %_640 = sub i32 0, %1499
  %1502 = add i32 %1501, 791648522
  %1503 = add i32 %1502, 2
  %1504 = sub i32 %1503, 791648522
  %gen641 = add i32 %1501, 2
  %_642 = shl i32 %1499, 2
  %_643 = shl i32 %1499, 2
  %rem97alteredBB = srem i32 %1499, 2
  %1505 = sub i32 0, 1770762484
  %1506 = sub i32 %1505, %rem97alteredBB
  %1507 = add i32 %1506, 1770762484
  %_644 = sub i32 0, %rem97alteredBB
  %1508 = sub i32 %1507, 1790333663
  %1509 = add i32 %1508, 31
  %1510 = add i32 %1509, 1790333663
  %gen645 = add i32 %1507, 31
  %1511 = sub i32 0, 31
  %1512 = add i32 %rem97alteredBB, %1511
  %_646 = sub i32 %rem97alteredBB, 31
  %gen647 = mul i32 %1512, 31
  %_648 = shl i32 %rem97alteredBB, 31
  %1513 = sub i32 0, 31
  %1514 = add i32 %rem97alteredBB, %1513
  %_649 = sub i32 %rem97alteredBB, 31
  %gen650 = mul i32 %1514, 31
  %1515 = add i32 0, 1514963010
  %1516 = sub i32 %1515, %rem97alteredBB
  %1517 = sub i32 %1516, 1514963010
  %_651 = sub i32 0, %rem97alteredBB
  %1518 = sub i32 %1517, 1015120553
  %1519 = add i32 %1518, 31
  %1520 = add i32 %1519, 1015120553
  %gen652 = add i32 %1517, 31
  %mul98alteredBB = mul nsw i32 %rem97alteredBB, 31
  %1521 = add i32 %1482, 527360059
  %1522 = sub i32 %1521, %mul98alteredBB
  %1523 = sub i32 %1522, 527360059
  %_653 = sub i32 %1482, %mul98alteredBB
  %gen654 = mul i32 %1523, %mul98alteredBB
  %1524 = add i32 %1482, -1797694201
  %1525 = sub i32 %1524, %mul98alteredBB
  %1526 = sub i32 %1525, -1797694201
  %_655 = sub i32 %1482, %mul98alteredBB
  %gen656 = mul i32 %1526, %mul98alteredBB
  %1527 = add i32 %1482, -383028987
  %1528 = sub i32 %1527, %mul98alteredBB
  %1529 = sub i32 %1528, -383028987
  %_657 = sub i32 %1482, %mul98alteredBB
  %gen658 = mul i32 %1529, %mul98alteredBB
  %_659 = shl i32 %1482, %mul98alteredBB
  %_660 = shl i32 %1482, %mul98alteredBB
  %1530 = sub i32 0, 48691065
  %1531 = sub i32 %1530, %1482
  %1532 = add i32 %1531, 48691065
  %_661 = sub i32 0, %1482
  %1533 = sub i32 0, %mul98alteredBB
  %1534 = sub i32 %1532, %1533
  %gen662 = add i32 %1532, %mul98alteredBB
  %1535 = add i32 %1482, -389982075
  %1536 = sub i32 %1535, %mul98alteredBB
  %1537 = sub i32 %1536, -389982075
  %_663 = sub i32 %1482, %mul98alteredBB
  %gen664 = mul i32 %1537, %mul98alteredBB
  %1538 = add i32 %1482, -938515781
  %1539 = add i32 %1538, %mul98alteredBB
  %1540 = sub i32 %1539, -938515781
  %add99alteredBB = add nsw i32 %1482, %mul98alteredBB
  %1541 = load i32, i32* %d, align 4
  %1542 = add i32 0, 768710524
  %1543 = sub i32 %1542, %1540
  %1544 = sub i32 %1543, 768710524
  %_665 = sub i32 0, %1540
  %1545 = sub i32 0, %1544
  %1546 = sub i32 0, %1541
  %1547 = add i32 %1545, %1546
  %1548 = sub i32 0, %1547
  %gen666 = add i32 %1544, %1541
  %1549 = sub i32 %1540, -206544936
  %1550 = add i32 %1549, %1541
  %1551 = add i32 %1550, -206544936
  %add100alteredBB = add nsw i32 %1540, %1541
  %conv101alteredBB = sext i32 %1551 to i64
  %1552 = load i32, i32* %i, align 4
  %idxprom102alteredBB = sext i32 %1552 to i64
  %arrayidx103alteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom102alteredBB
  %arrayidx104alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx103alteredBB, i64 0, i64 3
  store i64 %conv101alteredBB, i64* %arrayidx104alteredBB, align 8
  store i32 -285668672, i32* %switchVar
  br label %loopEnd

originalBB670alteredBB:                           ; preds = %loopEntry
  %1553 = load i32, i32* %m, align 4
  %cmp132alteredBB = icmp sle i32 %1553, 8
  store i32 -486562894, i32* %switchVar
  br label %loopEnd

originalBB674alteredBB:                           ; preds = %loopEntry
  %1554 = load i32, i32* %y, align 4
  %_675 = shl i32 %1554, 1
  %1555 = add i32 %1554, 2146725775
  %1556 = sub i32 %1555, 1
  %1557 = sub i32 %1556, 2146725775
  %_676 = sub i32 %1554, 1
  %gen677 = mul i32 %1557, 1
  %1558 = add i32 0, 681010525
  %1559 = sub i32 %1558, %1554
  %1560 = sub i32 %1559, 681010525
  %_678 = sub i32 0, %1554
  %1561 = sub i32 %1560, -1582066260
  %1562 = add i32 %1561, 1
  %1563 = add i32 %1562, -1582066260
  %gen679 = add i32 %1560, 1
  %1564 = sub i32 0, 1
  %1565 = add i32 %1554, %1564
  %_680 = sub i32 %1554, 1
  %gen681 = mul i32 %1565, 1
  %_682 = shl i32 %1554, 1
  %1566 = sub i32 0, 1
  %1567 = add i32 %1554, %1566
  %_683 = sub i32 %1554, 1
  %gen684 = mul i32 %1567, 1
  %1568 = sub i32 %1554, 95866639
  %1569 = sub i32 %1568, 1
  %1570 = add i32 %1569, 95866639
  %_685 = sub i32 %1554, 1
  %gen686 = mul i32 %1570, 1
  %_687 = shl i32 %1554, 1
  %1571 = add i32 %1554, 42311274
  %1572 = sub i32 %1571, 1
  %1573 = sub i32 %1572, 42311274
  %sub135alteredBB = sub nsw i32 %1554, 1
  %1574 = sub i32 %1573, -532563414
  %1575 = sub i32 %1574, 4
  %1576 = add i32 %1575, -532563414
  %_688 = sub i32 %1573, 4
  %gen689 = mul i32 %1576, 4
  %_690 = shl i32 %1573, 4
  %1577 = sub i32 0, %1573
  %1578 = add i32 0, %1577
  %_691 = sub i32 0, %1573
  %1579 = add i32 %1578, -1250710314
  %1580 = add i32 %1579, 4
  %1581 = sub i32 %1580, -1250710314
  %gen692 = add i32 %1578, 4
  %1582 = sub i32 0, 4
  %1583 = add i32 %1573, %1582
  %_693 = sub i32 %1573, 4
  %gen694 = mul i32 %1583, 4
  %_695 = shl i32 %1573, 4
  %div136alteredBB = sdiv i32 %1573, 4
  %1584 = add i32 %div136alteredBB, 1848502198
  %1585 = sub i32 %1584, 1461
  %1586 = sub i32 %1585, 1848502198
  %_696 = sub i32 %div136alteredBB, 1461
  %gen697 = mul i32 %1586, 1461
  %mul137alteredBB = mul nsw i32 %div136alteredBB, 1461
  %1587 = load i32, i32* %y, align 4
  %1588 = sub i32 %1587, -1512788705
  %1589 = sub i32 %1588, 1
  %1590 = add i32 %1589, -1512788705
  %_698 = sub i32 %1587, 1
  %gen699 = mul i32 %1590, 1
  %_700 = shl i32 %1587, 1
  %1591 = add i32 %1587, -234993961
  %1592 = sub i32 %1591, 1
  %1593 = sub i32 %1592, -234993961
  %_701 = sub i32 %1587, 1
  %gen702 = mul i32 %1593, 1
  %1594 = add i32 0, 531276531
  %1595 = sub i32 %1594, %1587
  %1596 = sub i32 %1595, 531276531
  %_703 = sub i32 0, %1587
  %1597 = add i32 %1596, 894225456
  %1598 = add i32 %1597, 1
  %1599 = sub i32 %1598, 894225456
  %gen704 = add i32 %1596, 1
  %1600 = sub i32 0, 1
  %1601 = add i32 %1587, %1600
  %_705 = sub i32 %1587, 1
  %gen706 = mul i32 %1601, 1
  %_707 = shl i32 %1587, 1
  %1602 = sub i32 0, 1
  %1603 = add i32 %1587, %1602
  %sub138alteredBB = sub nsw i32 %1587, 1
  %1604 = add i32 0, -533776947
  %1605 = sub i32 %1604, %1603
  %1606 = sub i32 %1605, -533776947
  %_708 = sub i32 0, %1603
  %1607 = sub i32 %1606, 749074020
  %1608 = add i32 %1607, 4
  %1609 = add i32 %1608, 749074020
  %gen709 = add i32 %1606, 4
  %1610 = sub i32 0, 4
  %1611 = add i32 %1603, %1610
  %_710 = sub i32 %1603, 4
  %gen711 = mul i32 %1611, 4
  %rem139alteredBB = srem i32 %1603, 4
  %1612 = add i32 %rem139alteredBB, -1470689616
  %1613 = sub i32 %1612, 365
  %1614 = sub i32 %1613, -1470689616
  %_712 = sub i32 %rem139alteredBB, 365
  %gen713 = mul i32 %1614, 365
  %_714 = shl i32 %rem139alteredBB, 365
  %mul140alteredBB = mul nsw i32 %rem139alteredBB, 365
  %1615 = sub i32 0, %mul140alteredBB
  %1616 = add i32 %mul137alteredBB, %1615
  %_715 = sub i32 %mul137alteredBB, %mul140alteredBB
  %gen716 = mul i32 %1616, %mul140alteredBB
  %1617 = sub i32 0, %mul140alteredBB
  %1618 = add i32 %mul137alteredBB, %1617
  %_717 = sub i32 %mul137alteredBB, %mul140alteredBB
  %gen718 = mul i32 %1618, %mul140alteredBB
  %1619 = sub i32 0, %mul140alteredBB
  %1620 = add i32 %mul137alteredBB, %1619
  %_719 = sub i32 %mul137alteredBB, %mul140alteredBB
  %gen720 = mul i32 %1620, %mul140alteredBB
  %1621 = sub i32 0, -1017709998
  %1622 = sub i32 %1621, %mul137alteredBB
  %1623 = add i32 %1622, -1017709998
  %_721 = sub i32 0, %mul137alteredBB
  %1624 = sub i32 0, %1623
  %1625 = sub i32 0, %mul140alteredBB
  %1626 = add i32 %1624, %1625
  %1627 = sub i32 0, %1626
  %gen722 = add i32 %1623, %mul140alteredBB
  %1628 = sub i32 0, %mul137alteredBB
  %1629 = add i32 0, %1628
  %_723 = sub i32 0, %mul137alteredBB
  %1630 = add i32 %1629, -577733585
  %1631 = add i32 %1630, %mul140alteredBB
  %1632 = sub i32 %1631, -577733585
  %gen724 = add i32 %1629, %mul140alteredBB
  %1633 = sub i32 %mul137alteredBB, -1715395538
  %1634 = sub i32 %1633, %mul140alteredBB
  %1635 = add i32 %1634, -1715395538
  %_725 = sub i32 %mul137alteredBB, %mul140alteredBB
  %gen726 = mul i32 %1635, %mul140alteredBB
  %_727 = shl i32 %mul137alteredBB, %mul140alteredBB
  %1636 = add i32 0, 971993007
  %1637 = sub i32 %1636, %mul137alteredBB
  %1638 = sub i32 %1637, 971993007
  %_728 = sub i32 0, %mul137alteredBB
  %1639 = add i32 %1638, 1132260743
  %1640 = add i32 %1639, %mul140alteredBB
  %1641 = sub i32 %1640, 1132260743
  %gen729 = add i32 %1638, %mul140alteredBB
  %1642 = sub i32 %mul137alteredBB, 36272972
  %1643 = add i32 %1642, %mul140alteredBB
  %1644 = add i32 %1643, 36272972
  %add141alteredBB = add nsw i32 %mul137alteredBB, %mul140alteredBB
  %1645 = load i32, i32* %y, align 4
  %1646 = add i32 %1645, 70592256
  %1647 = sub i32 %1646, 1
  %1648 = sub i32 %1647, 70592256
  %_730 = sub i32 %1645, 1
  %gen731 = mul i32 %1648, 1
  %_732 = shl i32 %1645, 1
  %1649 = sub i32 0, 1
  %1650 = add i32 %1645, %1649
  %sub142alteredBB = sub nsw i32 %1645, 1
  %1651 = add i32 0, 1091756390
  %1652 = sub i32 %1651, %1650
  %1653 = sub i32 %1652, 1091756390
  %_733 = sub i32 0, %1650
  %1654 = sub i32 0, 100
  %1655 = sub i32 %1653, %1654
  %gen734 = add i32 %1653, 100
  %1656 = sub i32 0, 57374330
  %1657 = sub i32 %1656, %1650
  %1658 = add i32 %1657, 57374330
  %_735 = sub i32 0, %1650
  %1659 = sub i32 %1658, 114198726
  %1660 = add i32 %1659, 100
  %1661 = add i32 %1660, 114198726
  %gen736 = add i32 %1658, 100
  %1662 = sub i32 0, 883603384
  %1663 = sub i32 %1662, %1650
  %1664 = add i32 %1663, 883603384
  %_737 = sub i32 0, %1650
  %1665 = sub i32 0, %1664
  %1666 = sub i32 0, 100
  %1667 = add i32 %1665, %1666
  %1668 = sub i32 0, %1667
  %gen738 = add i32 %1664, 100
  %_739 = shl i32 %1650, 100
  %1669 = add i32 0, -1482061286
  %1670 = sub i32 %1669, %1650
  %1671 = sub i32 %1670, -1482061286
  %_740 = sub i32 0, %1650
  %1672 = sub i32 0, 100
  %1673 = sub i32 %1671, %1672
  %gen741 = add i32 %1671, 100
  %div143alteredBB = sdiv i32 %1650, 100
  %1674 = add i32 0, -1674717634
  %1675 = sub i32 %1674, %1644
  %1676 = sub i32 %1675, -1674717634
  %_742 = sub i32 0, %1644
  %1677 = add i32 %1676, 1891042909
  %1678 = add i32 %1677, %div143alteredBB
  %1679 = sub i32 %1678, 1891042909
  %gen743 = add i32 %1676, %div143alteredBB
  %_744 = shl i32 %1644, %div143alteredBB
  %1680 = sub i32 0, 1879559850
  %1681 = sub i32 %1680, %1644
  %1682 = add i32 %1681, 1879559850
  %_745 = sub i32 0, %1644
  %1683 = sub i32 0, %1682
  %1684 = sub i32 0, %div143alteredBB
  %1685 = add i32 %1683, %1684
  %1686 = sub i32 0, %1685
  %gen746 = add i32 %1682, %div143alteredBB
  %1687 = sub i32 0, %div143alteredBB
  %1688 = add i32 %1644, %1687
  %_747 = sub i32 %1644, %div143alteredBB
  %gen748 = mul i32 %1688, %div143alteredBB
  %_749 = shl i32 %1644, %div143alteredBB
  %1689 = add i32 0, 94496687
  %1690 = sub i32 %1689, %1644
  %1691 = sub i32 %1690, 94496687
  %_750 = sub i32 0, %1644
  %1692 = sub i32 0, %1691
  %1693 = sub i32 0, %div143alteredBB
  %1694 = add i32 %1692, %1693
  %1695 = sub i32 0, %1694
  %gen751 = add i32 %1691, %div143alteredBB
  %_752 = shl i32 %1644, %div143alteredBB
  %1696 = sub i32 0, %div143alteredBB
  %1697 = add i32 %1644, %1696
  %sub144alteredBB = sub nsw i32 %1644, %div143alteredBB
  %1698 = load i32, i32* %y, align 4
  %1699 = sub i32 0, -2008651791
  %1700 = sub i32 %1699, %1698
  %1701 = add i32 %1700, -2008651791
  %_753 = sub i32 0, %1698
  %1702 = add i32 %1701, -1365334531
  %1703 = add i32 %1702, 1
  %1704 = sub i32 %1703, -1365334531
  %gen754 = add i32 %1701, 1
  %_755 = shl i32 %1698, 1
  %1705 = sub i32 0, %1698
  %1706 = add i32 0, %1705
  %_756 = sub i32 0, %1698
  %1707 = sub i32 0, 1
  %1708 = sub i32 %1706, %1707
  %gen757 = add i32 %1706, 1
  %_758 = shl i32 %1698, 1
  %1709 = add i32 %1698, -1125769570
  %1710 = sub i32 %1709, 1
  %1711 = sub i32 %1710, -1125769570
  %_759 = sub i32 %1698, 1
  %gen760 = mul i32 %1711, 1
  %1712 = sub i32 %1698, -1998777452
  %1713 = sub i32 %1712, 1
  %1714 = add i32 %1713, -1998777452
  %sub145alteredBB = sub nsw i32 %1698, 1
  %1715 = add i32 0, 843010517
  %1716 = sub i32 %1715, %1714
  %1717 = sub i32 %1716, 843010517
  %_761 = sub i32 0, %1714
  %1718 = sub i32 0, 400
  %1719 = sub i32 %1717, %1718
  %gen762 = add i32 %1717, 400
  %div146alteredBB = sdiv i32 %1714, 400
  %_763 = shl i32 %1697, %div146alteredBB
  %_764 = shl i32 %1697, %div146alteredBB
  %1720 = sub i32 0, %div146alteredBB
  %1721 = add i32 %1697, %1720
  %_765 = sub i32 %1697, %div146alteredBB
  %gen766 = mul i32 %1721, %div146alteredBB
  %1722 = sub i32 0, %div146alteredBB
  %1723 = sub i32 %1697, %1722
  %add147alteredBB = add nsw i32 %1697, %div146alteredBB
  %1724 = load i32, i32* %m, align 4
  %_767 = shl i32 %1724, 1
  %_768 = shl i32 %1724, 1
  %1725 = sub i32 %1724, -485686766
  %1726 = sub i32 %1725, 1
  %1727 = add i32 %1726, -485686766
  %_769 = sub i32 %1724, 1
  %gen770 = mul i32 %1727, 1
  %1728 = sub i32 %1724, -687786400
  %1729 = sub i32 %1728, 1
  %1730 = add i32 %1729, -687786400
  %_771 = sub i32 %1724, 1
  %gen772 = mul i32 %1730, 1
  %1731 = sub i32 0, 1160072278
  %1732 = sub i32 %1731, %1724
  %1733 = add i32 %1732, 1160072278
  %_773 = sub i32 0, %1724
  %1734 = sub i32 0, 1
  %1735 = sub i32 %1733, %1734
  %gen774 = add i32 %1733, 1
  %1736 = sub i32 0, 1
  %1737 = add i32 %1724, %1736
  %sub148alteredBB = sub nsw i32 %1724, 1
  %1738 = add i32 0, -1281920107
  %1739 = sub i32 %1738, %1737
  %1740 = sub i32 %1739, -1281920107
  %_775 = sub i32 0, %1737
  %1741 = sub i32 0, %1740
  %1742 = sub i32 0, 2
  %1743 = add i32 %1741, %1742
  %1744 = sub i32 0, %1743
  %gen776 = add i32 %1740, 2
  %1745 = sub i32 0, %1737
  %1746 = add i32 0, %1745
  %_777 = sub i32 0, %1737
  %1747 = add i32 %1746, 340880659
  %1748 = add i32 %1747, 2
  %1749 = sub i32 %1748, 340880659
  %gen778 = add i32 %1746, 2
  %_779 = shl i32 %1737, 2
  %1750 = sub i32 0, 1989495775
  %1751 = sub i32 %1750, %1737
  %1752 = add i32 %1751, 1989495775
  %_780 = sub i32 0, %1737
  %1753 = add i32 %1752, 1995273169
  %1754 = add i32 %1753, 2
  %1755 = sub i32 %1754, 1995273169
  %gen781 = add i32 %1752, 2
  %1756 = add i32 0, 787430501
  %1757 = sub i32 %1756, %1737
  %1758 = sub i32 %1757, 787430501
  %_782 = sub i32 0, %1737
  %1759 = sub i32 %1758, -1599666212
  %1760 = add i32 %1759, 2
  %1761 = add i32 %1760, -1599666212
  %gen783 = add i32 %1758, 2
  %div149alteredBB = sdiv i32 %1737, 2
  %_784 = shl i32 %div149alteredBB, 61
  %1762 = sub i32 0, %div149alteredBB
  %1763 = add i32 0, %1762
  %_785 = sub i32 0, %div149alteredBB
  %1764 = sub i32 %1763, -1666667308
  %1765 = add i32 %1764, 61
  %1766 = add i32 %1765, -1666667308
  %gen786 = add i32 %1763, 61
  %_787 = shl i32 %div149alteredBB, 61
  %_788 = shl i32 %div149alteredBB, 61
  %mul150alteredBB = mul nsw i32 %div149alteredBB, 61
  %_789 = shl i32 %1723, %mul150alteredBB
  %1767 = add i32 %1723, -213305236
  %1768 = sub i32 %1767, %mul150alteredBB
  %1769 = sub i32 %1768, -213305236
  %_790 = sub i32 %1723, %mul150alteredBB
  %gen791 = mul i32 %1769, %mul150alteredBB
  %1770 = sub i32 0, %1723
  %1771 = sub i32 0, %mul150alteredBB
  %1772 = add i32 %1770, %1771
  %1773 = sub i32 0, %1772
  %add151alteredBB = add nsw i32 %1723, %mul150alteredBB
  %1774 = load i32, i32* %m, align 4
  %_792 = shl i32 %1774, 1
  %_793 = shl i32 %1774, 1
  %1775 = add i32 %1774, -1826259076
  %1776 = sub i32 %1775, 1
  %1777 = sub i32 %1776, -1826259076
  %sub152alteredBB = sub nsw i32 %1774, 1
  %_794 = shl i32 %1777, 2
  %rem153alteredBB = srem i32 %1777, 2
  %1778 = sub i32 0, 31
  %1779 = add i32 %rem153alteredBB, %1778
  %_795 = sub i32 %rem153alteredBB, 31
  %gen796 = mul i32 %1779, 31
  %1780 = sub i32 0, 31
  %1781 = add i32 %rem153alteredBB, %1780
  %_797 = sub i32 %rem153alteredBB, 31
  %gen798 = mul i32 %1781, 31
  %mul154alteredBB = mul nsw i32 %rem153alteredBB, 31
  %_799 = shl i32 %1773, %mul154alteredBB
  %1782 = add i32 0, 668543699
  %1783 = sub i32 %1782, %1773
  %1784 = sub i32 %1783, 668543699
  %_800 = sub i32 0, %1773
  %1785 = sub i32 0, %mul154alteredBB
  %1786 = sub i32 %1784, %1785
  %gen801 = add i32 %1784, %mul154alteredBB
  %1787 = add i32 %1773, 1309829707
  %1788 = sub i32 %1787, %mul154alteredBB
  %1789 = sub i32 %1788, 1309829707
  %_802 = sub i32 %1773, %mul154alteredBB
  %gen803 = mul i32 %1789, %mul154alteredBB
  %1790 = sub i32 0, %1773
  %1791 = sub i32 0, %mul154alteredBB
  %1792 = add i32 %1790, %1791
  %1793 = sub i32 0, %1792
  %add155alteredBB = add nsw i32 %1773, %mul154alteredBB
  %1794 = add i32 %1793, 1580624430
  %1795 = sub i32 %1794, 2
  %1796 = sub i32 %1795, 1580624430
  %_804 = sub i32 %1793, 2
  %gen805 = mul i32 %1796, 2
  %1797 = add i32 %1793, -472572128
  %1798 = sub i32 %1797, 2
  %1799 = sub i32 %1798, -472572128
  %_806 = sub i32 %1793, 2
  %gen807 = mul i32 %1799, 2
  %1800 = sub i32 %1793, 157341272
  %1801 = sub i32 %1800, 2
  %1802 = add i32 %1801, 157341272
  %sub156alteredBB = sub nsw i32 %1793, 2
  %1803 = load i32, i32* %d, align 4
  %_808 = shl i32 %1802, %1803
  %_809 = shl i32 %1802, %1803
  %1804 = add i32 %1802, -1429472503
  %1805 = sub i32 %1804, %1803
  %1806 = sub i32 %1805, -1429472503
  %_810 = sub i32 %1802, %1803
  %gen811 = mul i32 %1806, %1803
  %_812 = shl i32 %1802, %1803
  %_813 = shl i32 %1802, %1803
  %1807 = sub i32 %1802, 428036868
  %1808 = sub i32 %1807, %1803
  %1809 = add i32 %1808, 428036868
  %_814 = sub i32 %1802, %1803
  %gen815 = mul i32 %1809, %1803
  %1810 = sub i32 0, %1802
  %1811 = add i32 0, %1810
  %_816 = sub i32 0, %1802
  %1812 = sub i32 0, %1811
  %1813 = sub i32 0, %1803
  %1814 = add i32 %1812, %1813
  %1815 = sub i32 0, %1814
  %gen817 = add i32 %1811, %1803
  %1816 = sub i32 0, %1803
  %1817 = sub i32 %1802, %1816
  %add157alteredBB = add nsw i32 %1802, %1803
  %conv158alteredBB = sext i32 %1817 to i64
  %1818 = load i32, i32* %i, align 4
  %idxprom159alteredBB = sext i32 %1818 to i64
  %arrayidx160alteredBB = getelementptr inbounds [2 x [4 x i64]], [2 x [4 x i64]]* %x, i64 0, i64 %idxprom159alteredBB
  %arrayidx161alteredBB = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx160alteredBB, i64 0, i64 3
  store i64 %conv158alteredBB, i64* %arrayidx161alteredBB, align 8
  store i32 1331842305, i32* %switchVar
  br label %loopEnd

originalBB821alteredBB:                           ; preds = %loopEntry
  store i32 153786382, i32* %switchVar
  br label %loopEnd

originalBB825alteredBB:                           ; preds = %loopEntry
  store i32 -736229446, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB825alteredBB, %originalBB821alteredBB, %originalBB674alteredBB, %originalBB670alteredBB, %originalBB491alteredBB, %originalBB329alteredBB, %originalBB325alteredBB, %originalBB202alteredBB, %originalBBalteredBB, %for.inc, %if.end192, %originalBBpart2827, %originalBB825, %if.end191, %originalBBpart2823, %originalBB821, %if.end190, %if.else162, %originalBBpart2819, %originalBB674, %if.then134, %originalBBpart2672, %originalBB670, %if.else131, %if.then109, %if.else106, %if.end105, %if.end, %originalBBpart2668, %originalBB491, %if.else77, %originalBBpart2489, %originalBB329, %if.then49, %originalBBpart2327, %originalBB325, %if.else, %originalBBpart2323, %originalBB202, %if.then29, %if.then, %lor.lhs.false, %land.lhs.true, %originalBBpart2, %originalBB, %for.body, %for.cond, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #2

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
