; ModuleID = 'source-C-CXX/39/1204.c'
source_filename = "source-C-CXX/39/1204.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [11 x i8] c"%f%f%f%f%f\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%.4f\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"Invalid input\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %cmp.reg2mem = alloca i1
  %s.reg2mem = alloca float*
  %e.reg2mem = alloca float*
  %d.reg2mem = alloca float*
  %c.reg2mem = alloca float*
  %b.reg2mem = alloca float*
  %a.reg2mem = alloca float*
  %.reg2mem620 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = sub i32 0, 1
  %3 = add i32 %0, %2
  %4 = sub i32 %0, 1
  %5 = mul i32 %0, %3
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  store i1 %7, i1* %.reg2mem
  %8 = icmp slt i32 %1, 10
  store i1 %8, i1* %.reg2mem620
  %switchVar = alloca i32
  store i32 80024922, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar619 = load i32, i32* %switchVar
  switch i32 %switchVar619, label %switchDefault [
    i32 80024922, label %first
    i32 -1435999367, label %originalBB
    i32 -1531583, label %originalBBpart2
    i32 -198465447, label %if.then
    i32 2083821893, label %originalBB615
    i32 -905324387, label %originalBBpart2617
    i32 543832205, label %if.end
    i32 -1147794015, label %if.then120
    i32 42367331, label %if.end122
    i32 1265281456, label %originalBBalteredBB
    i32 1893630771, label %originalBB615alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload621 = load volatile i1, i1* %.reg2mem620
  %9 = xor i1 %.reload, true
  %10 = xor i1 %.reload621, true
  %11 = xor i1 false, true
  %12 = and i1 %9, false
  %13 = and i1 %.reload, %11
  %14 = and i1 %10, false
  %15 = and i1 %.reload621, %11
  %16 = or i1 %12, %13
  %17 = or i1 %14, %15
  %18 = xor i1 %16, %17
  %19 = or i1 %9, %10
  %20 = xor i1 %19, true
  %21 = or i1 false, %11
  %22 = and i1 %20, %21
  %23 = or i1 %18, %22
  %24 = or i1 %.reload, %.reload621
  %25 = select i1 %23, i32 -1435999367, i32 1265281456
  store i32 %25, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  %a = alloca float, align 4
  store float* %a, float** %a.reg2mem
  %b = alloca float, align 4
  store float* %b, float** %b.reg2mem
  %c = alloca float, align 4
  store float* %c, float** %c.reg2mem
  %d = alloca float, align 4
  store float* %d, float** %d.reg2mem
  %e = alloca float, align 4
  store float* %e, float** %e.reg2mem
  %s = alloca float, align 4
  store float* %s, float** %s.reg2mem
  store i32 0, i32* %retval, align 4
  %a.reload639 = load volatile float*, float** %a.reg2mem
  %b.reload657 = load volatile float*, float** %b.reg2mem
  %c.reload675 = load volatile float*, float** %c.reg2mem
  %d.reload693 = load volatile float*, float** %d.reg2mem
  %e.reload699 = load volatile float*, float** %e.reg2mem
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), float* %a.reload639, float* %b.reload657, float* %c.reload675, float* %d.reload693, float* %e.reload699)
  %a.reload638 = load volatile float*, float** %a.reg2mem
  %26 = load float, float* %a.reload638, align 4
  %b.reload656 = load volatile float*, float** %b.reg2mem
  %27 = load float, float* %b.reload656, align 4
  %add = fadd float %26, %27
  %c.reload674 = load volatile float*, float** %c.reg2mem
  %28 = load float, float* %c.reload674, align 4
  %add1 = fadd float %add, %28
  %d.reload692 = load volatile float*, float** %d.reg2mem
  %29 = load float, float* %d.reload692, align 4
  %add2 = fadd float %add1, %29
  %div = fdiv float %add2, 2.000000e+00
  %a.reload637 = load volatile float*, float** %a.reg2mem
  %30 = load float, float* %a.reload637, align 4
  %sub = fsub float %div, %30
  %a.reload636 = load volatile float*, float** %a.reg2mem
  %31 = load float, float* %a.reload636, align 4
  %b.reload655 = load volatile float*, float** %b.reg2mem
  %32 = load float, float* %b.reload655, align 4
  %add3 = fadd float %31, %32
  %c.reload673 = load volatile float*, float** %c.reg2mem
  %33 = load float, float* %c.reload673, align 4
  %add4 = fadd float %add3, %33
  %d.reload691 = load volatile float*, float** %d.reg2mem
  %34 = load float, float* %d.reload691, align 4
  %add5 = fadd float %add4, %34
  %div6 = fdiv float %add5, 2.000000e+00
  %b.reload654 = load volatile float*, float** %b.reg2mem
  %35 = load float, float* %b.reload654, align 4
  %sub7 = fsub float %div6, %35
  %mul = fmul float %sub, %sub7
  %a.reload635 = load volatile float*, float** %a.reg2mem
  %36 = load float, float* %a.reload635, align 4
  %b.reload653 = load volatile float*, float** %b.reg2mem
  %37 = load float, float* %b.reload653, align 4
  %add8 = fadd float %36, %37
  %c.reload672 = load volatile float*, float** %c.reg2mem
  %38 = load float, float* %c.reload672, align 4
  %add9 = fadd float %add8, %38
  %d.reload690 = load volatile float*, float** %d.reg2mem
  %39 = load float, float* %d.reload690, align 4
  %add10 = fadd float %add9, %39
  %div11 = fdiv float %add10, 2.000000e+00
  %c.reload671 = load volatile float*, float** %c.reg2mem
  %40 = load float, float* %c.reload671, align 4
  %sub12 = fsub float %div11, %40
  %mul13 = fmul float %mul, %sub12
  %a.reload634 = load volatile float*, float** %a.reg2mem
  %41 = load float, float* %a.reload634, align 4
  %b.reload652 = load volatile float*, float** %b.reg2mem
  %42 = load float, float* %b.reload652, align 4
  %add14 = fadd float %41, %42
  %c.reload670 = load volatile float*, float** %c.reg2mem
  %43 = load float, float* %c.reload670, align 4
  %add15 = fadd float %add14, %43
  %d.reload689 = load volatile float*, float** %d.reg2mem
  %44 = load float, float* %d.reload689, align 4
  %add16 = fadd float %add15, %44
  %div17 = fdiv float %add16, 2.000000e+00
  %d.reload688 = load volatile float*, float** %d.reg2mem
  %45 = load float, float* %d.reload688, align 4
  %sub18 = fsub float %div17, %45
  %mul19 = fmul float %mul13, %sub18
  %conv = fpext float %mul19 to double
  %a.reload633 = load volatile float*, float** %a.reg2mem
  %46 = load float, float* %a.reload633, align 4
  %b.reload651 = load volatile float*, float** %b.reg2mem
  %47 = load float, float* %b.reload651, align 4
  %mul20 = fmul float %46, %47
  %c.reload669 = load volatile float*, float** %c.reg2mem
  %48 = load float, float* %c.reload669, align 4
  %mul21 = fmul float %mul20, %48
  %d.reload687 = load volatile float*, float** %d.reg2mem
  %49 = load float, float* %d.reload687, align 4
  %mul22 = fmul float %mul21, %49
  %conv23 = fpext float %mul22 to double
  %e.reload698 = load volatile float*, float** %e.reg2mem
  %50 = load float, float* %e.reload698, align 4
  %conv24 = fpext float %50 to double
  %mul25 = fmul double %conv24, 0x400921FB4D12D84A
  %div26 = fdiv double %mul25, 3.600000e+02
  %call27 = call double @cos(double %div26) #3
  %mul28 = fmul double %conv23, %call27
  %e.reload697 = load volatile float*, float** %e.reg2mem
  %51 = load float, float* %e.reload697, align 4
  %conv29 = fpext float %51 to double
  %mul30 = fmul double %conv29, 0x400921FB4D12D84A
  %div31 = fdiv double %mul30, 3.600000e+02
  %call32 = call double @cos(double %div31) #3
  %mul33 = fmul double %mul28, %call32
  %sub34 = fsub double %conv, %mul33
  %call35 = call double @sqrt(double %sub34) #3
  %conv36 = fptrunc double %call35 to float
  %s.reload701 = load volatile float*, float** %s.reg2mem
  store float %conv36, float* %s.reload701, align 4
  %a.reload632 = load volatile float*, float** %a.reg2mem
  %52 = load float, float* %a.reload632, align 4
  %b.reload650 = load volatile float*, float** %b.reg2mem
  %53 = load float, float* %b.reload650, align 4
  %add37 = fadd float %52, %53
  %c.reload668 = load volatile float*, float** %c.reg2mem
  %54 = load float, float* %c.reload668, align 4
  %add38 = fadd float %add37, %54
  %d.reload686 = load volatile float*, float** %d.reg2mem
  %55 = load float, float* %d.reload686, align 4
  %add39 = fadd float %add38, %55
  %div40 = fdiv float %add39, 2.000000e+00
  %a.reload631 = load volatile float*, float** %a.reg2mem
  %56 = load float, float* %a.reload631, align 4
  %sub41 = fsub float %div40, %56
  %a.reload630 = load volatile float*, float** %a.reg2mem
  %57 = load float, float* %a.reload630, align 4
  %b.reload649 = load volatile float*, float** %b.reg2mem
  %58 = load float, float* %b.reload649, align 4
  %add42 = fadd float %57, %58
  %c.reload667 = load volatile float*, float** %c.reg2mem
  %59 = load float, float* %c.reload667, align 4
  %add43 = fadd float %add42, %59
  %d.reload685 = load volatile float*, float** %d.reg2mem
  %60 = load float, float* %d.reload685, align 4
  %add44 = fadd float %add43, %60
  %div45 = fdiv float %add44, 2.000000e+00
  %b.reload648 = load volatile float*, float** %b.reg2mem
  %61 = load float, float* %b.reload648, align 4
  %sub46 = fsub float %div45, %61
  %mul47 = fmul float %sub41, %sub46
  %a.reload629 = load volatile float*, float** %a.reg2mem
  %62 = load float, float* %a.reload629, align 4
  %b.reload647 = load volatile float*, float** %b.reg2mem
  %63 = load float, float* %b.reload647, align 4
  %add48 = fadd float %62, %63
  %c.reload666 = load volatile float*, float** %c.reg2mem
  %64 = load float, float* %c.reload666, align 4
  %add49 = fadd float %add48, %64
  %d.reload684 = load volatile float*, float** %d.reg2mem
  %65 = load float, float* %d.reload684, align 4
  %add50 = fadd float %add49, %65
  %div51 = fdiv float %add50, 2.000000e+00
  %c.reload665 = load volatile float*, float** %c.reg2mem
  %66 = load float, float* %c.reload665, align 4
  %sub52 = fsub float %div51, %66
  %mul53 = fmul float %mul47, %sub52
  %a.reload628 = load volatile float*, float** %a.reg2mem
  %67 = load float, float* %a.reload628, align 4
  %b.reload646 = load volatile float*, float** %b.reg2mem
  %68 = load float, float* %b.reload646, align 4
  %add54 = fadd float %67, %68
  %c.reload664 = load volatile float*, float** %c.reg2mem
  %69 = load float, float* %c.reload664, align 4
  %add55 = fadd float %add54, %69
  %d.reload683 = load volatile float*, float** %d.reg2mem
  %70 = load float, float* %d.reload683, align 4
  %add56 = fadd float %add55, %70
  %div57 = fdiv float %add56, 2.000000e+00
  %d.reload682 = load volatile float*, float** %d.reg2mem
  %71 = load float, float* %d.reload682, align 4
  %sub58 = fsub float %div57, %71
  %mul59 = fmul float %mul53, %sub58
  %conv60 = fpext float %mul59 to double
  %a.reload627 = load volatile float*, float** %a.reg2mem
  %72 = load float, float* %a.reload627, align 4
  %b.reload645 = load volatile float*, float** %b.reg2mem
  %73 = load float, float* %b.reload645, align 4
  %mul61 = fmul float %72, %73
  %c.reload663 = load volatile float*, float** %c.reg2mem
  %74 = load float, float* %c.reload663, align 4
  %mul62 = fmul float %mul61, %74
  %d.reload681 = load volatile float*, float** %d.reg2mem
  %75 = load float, float* %d.reload681, align 4
  %mul63 = fmul float %mul62, %75
  %conv64 = fpext float %mul63 to double
  %e.reload696 = load volatile float*, float** %e.reg2mem
  %76 = load float, float* %e.reload696, align 4
  %conv65 = fpext float %76 to double
  %mul66 = fmul double %conv65, 0x400921FB4D12D84A
  %div67 = fdiv double %mul66, 3.600000e+02
  %call68 = call double @cos(double %div67) #3
  %mul69 = fmul double %conv64, %call68
  %e.reload695 = load volatile float*, float** %e.reg2mem
  %77 = load float, float* %e.reload695, align 4
  %conv70 = fpext float %77 to double
  %mul71 = fmul double %conv70, 0x400921FB4D12D84A
  %div72 = fdiv double %mul71, 3.600000e+02
  %call73 = call double @cos(double %div72) #3
  %mul74 = fmul double %mul69, %call73
  %sub75 = fsub double %conv60, %mul74
  %cmp = fcmp oge double %sub75, 0.000000e+00
  store i1 %cmp, i1* %cmp.reg2mem
  %78 = load i32, i32* @x
  %79 = load i32, i32* @y
  %80 = add i32 %78, -609244304
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -609244304
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -1531583, i32 1265281456
  store i32 %104, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  %cmp.reload = load volatile i1, i1* %cmp.reg2mem
  %105 = select i1 %cmp.reload, i32 -198465447, i32 543832205
  store i32 %105, i32* %switchVar
  br label %loopEnd

if.then:                                          ; preds = %loopEntry
  %106 = load i32, i32* @x
  %107 = load i32, i32* @y
  %108 = add i32 %106, -1768316566
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, -1768316566
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 2083821893, i32 1893630771
  store i32 %132, i32* %switchVar
  br label %loopEnd

originalBB615:                                    ; preds = %loopEntry
  %s.reload700 = load volatile float*, float** %s.reg2mem
  %133 = load float, float* %s.reload700, align 4
  %conv77 = fpext float %133 to double
  %call78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), double %conv77)
  %134 = load i32, i32* @x
  %135 = load i32, i32* @y
  %136 = add i32 %134, -1313331353
  %137 = sub i32 %136, 1
  %138 = sub i32 %137, -1313331353
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  %148 = select i1 %146, i32 -905324387, i32 1893630771
  store i32 %148, i32* %switchVar
  br label %loopEnd

originalBBpart2617:                               ; preds = %loopEntry
  store i32 543832205, i32* %switchVar
  br label %loopEnd

if.end:                                           ; preds = %loopEntry
  %a.reload626 = load volatile float*, float** %a.reg2mem
  %149 = load float, float* %a.reload626, align 4
  %b.reload644 = load volatile float*, float** %b.reg2mem
  %150 = load float, float* %b.reload644, align 4
  %add79 = fadd float %149, %150
  %c.reload662 = load volatile float*, float** %c.reg2mem
  %151 = load float, float* %c.reload662, align 4
  %add80 = fadd float %add79, %151
  %d.reload680 = load volatile float*, float** %d.reg2mem
  %152 = load float, float* %d.reload680, align 4
  %add81 = fadd float %add80, %152
  %div82 = fdiv float %add81, 2.000000e+00
  %a.reload625 = load volatile float*, float** %a.reg2mem
  %153 = load float, float* %a.reload625, align 4
  %sub83 = fsub float %div82, %153
  %a.reload624 = load volatile float*, float** %a.reg2mem
  %154 = load float, float* %a.reload624, align 4
  %b.reload643 = load volatile float*, float** %b.reg2mem
  %155 = load float, float* %b.reload643, align 4
  %add84 = fadd float %154, %155
  %c.reload661 = load volatile float*, float** %c.reg2mem
  %156 = load float, float* %c.reload661, align 4
  %add85 = fadd float %add84, %156
  %d.reload679 = load volatile float*, float** %d.reg2mem
  %157 = load float, float* %d.reload679, align 4
  %add86 = fadd float %add85, %157
  %div87 = fdiv float %add86, 2.000000e+00
  %b.reload642 = load volatile float*, float** %b.reg2mem
  %158 = load float, float* %b.reload642, align 4
  %sub88 = fsub float %div87, %158
  %mul89 = fmul float %sub83, %sub88
  %a.reload623 = load volatile float*, float** %a.reg2mem
  %159 = load float, float* %a.reload623, align 4
  %b.reload641 = load volatile float*, float** %b.reg2mem
  %160 = load float, float* %b.reload641, align 4
  %add90 = fadd float %159, %160
  %c.reload660 = load volatile float*, float** %c.reg2mem
  %161 = load float, float* %c.reload660, align 4
  %add91 = fadd float %add90, %161
  %d.reload678 = load volatile float*, float** %d.reg2mem
  %162 = load float, float* %d.reload678, align 4
  %add92 = fadd float %add91, %162
  %div93 = fdiv float %add92, 2.000000e+00
  %c.reload659 = load volatile float*, float** %c.reg2mem
  %163 = load float, float* %c.reload659, align 4
  %sub94 = fsub float %div93, %163
  %mul95 = fmul float %mul89, %sub94
  %a.reload622 = load volatile float*, float** %a.reg2mem
  %164 = load float, float* %a.reload622, align 4
  %b.reload640 = load volatile float*, float** %b.reg2mem
  %165 = load float, float* %b.reload640, align 4
  %add96 = fadd float %164, %165
  %c.reload658 = load volatile float*, float** %c.reg2mem
  %166 = load float, float* %c.reload658, align 4
  %add97 = fadd float %add96, %166
  %d.reload677 = load volatile float*, float** %d.reg2mem
  %167 = load float, float* %d.reload677, align 4
  %add98 = fadd float %add97, %167
  %div99 = fdiv float %add98, 2.000000e+00
  %d.reload676 = load volatile float*, float** %d.reg2mem
  %168 = load float, float* %d.reload676, align 4
  %sub100 = fsub float %div99, %168
  %mul101 = fmul float %mul95, %sub100
  %conv102 = fpext float %mul101 to double
  %a.reload = load volatile float*, float** %a.reg2mem
  %169 = load float, float* %a.reload, align 4
  %b.reload = load volatile float*, float** %b.reg2mem
  %170 = load float, float* %b.reload, align 4
  %mul103 = fmul float %169, %170
  %c.reload = load volatile float*, float** %c.reg2mem
  %171 = load float, float* %c.reload, align 4
  %mul104 = fmul float %mul103, %171
  %d.reload = load volatile float*, float** %d.reg2mem
  %172 = load float, float* %d.reload, align 4
  %mul105 = fmul float %mul104, %172
  %conv106 = fpext float %mul105 to double
  %e.reload694 = load volatile float*, float** %e.reg2mem
  %173 = load float, float* %e.reload694, align 4
  %conv107 = fpext float %173 to double
  %mul108 = fmul double %conv107, 0x400921FB4D12D84A
  %div109 = fdiv double %mul108, 3.600000e+02
  %call110 = call double @cos(double %div109) #3
  %mul111 = fmul double %conv106, %call110
  %e.reload = load volatile float*, float** %e.reg2mem
  %174 = load float, float* %e.reload, align 4
  %conv112 = fpext float %174 to double
  %mul113 = fmul double %conv112, 0x400921FB4D12D84A
  %div114 = fdiv double %mul113, 3.600000e+02
  %call115 = call double @cos(double %div114) #3
  %mul116 = fmul double %mul111, %call115
  %sub117 = fsub double %conv102, %mul116
  %cmp118 = fcmp olt double %sub117, 0.000000e+00
  %175 = select i1 %cmp118, i32 -1147794015, i32 42367331
  store i32 %175, i32* %switchVar
  br label %loopEnd

if.then120:                                       ; preds = %loopEntry
  %call121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0))
  store i32 42367331, i32* %switchVar
  br label %loopEnd

if.end122:                                        ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %aalteredBB = alloca float, align 4
  %balteredBB = alloca float, align 4
  %calteredBB = alloca float, align 4
  %dalteredBB = alloca float, align 4
  %ealteredBB = alloca float, align 4
  %salteredBB = alloca float, align 4
  store i32 0, i32* %retvalalteredBB, align 4
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), float* %aalteredBB, float* %balteredBB, float* %calteredBB, float* %dalteredBB, float* %ealteredBB)
  %176 = load float, float* %aalteredBB, align 4
  %177 = load float, float* %balteredBB, align 4
  %_ = fsub float -0.000000e+00, %176
  %gen = fadd float %_, %177
  %_123 = fsub float -0.000000e+00, %176
  %gen124 = fadd float %_123, %177
  %_125 = fsub float %176, %177
  %gen126 = fmul float %_125, %177
  %_127 = fsub float %176, %177
  %gen128 = fmul float %_127, %177
  %addalteredBB = fadd float %176, %177
  %178 = load float, float* %calteredBB, align 4
  %_129 = fsub float -0.000000e+00, %addalteredBB
  %gen130 = fadd float %_129, %178
  %add1alteredBB = fadd float %addalteredBB, %178
  %179 = load float, float* %dalteredBB, align 4
  %_131 = fsub float %add1alteredBB, %179
  %gen132 = fmul float %_131, %179
  %_133 = fsub float %add1alteredBB, %179
  %gen134 = fmul float %_133, %179
  %_135 = fsub float -0.000000e+00, %add1alteredBB
  %gen136 = fadd float %_135, %179
  %_137 = fsub float -0.000000e+00, %add1alteredBB
  %gen138 = fadd float %_137, %179
  %add2alteredBB = fadd float %add1alteredBB, %179
  %_139 = fsub float -0.000000e+00, %add2alteredBB
  %gen140 = fadd float %_139, 2.000000e+00
  %_141 = fsub float %add2alteredBB, 2.000000e+00
  %gen142 = fmul float %_141, 2.000000e+00
  %_143 = fsub float %add2alteredBB, 2.000000e+00
  %gen144 = fmul float %_143, 2.000000e+00
  %divalteredBB = fdiv float %add2alteredBB, 2.000000e+00
  %180 = load float, float* %aalteredBB, align 4
  %_145 = fsub float -0.000000e+00, %divalteredBB
  %gen146 = fadd float %_145, %180
  %_147 = fsub float -0.000000e+00, %divalteredBB
  %gen148 = fadd float %_147, %180
  %_149 = fsub float %divalteredBB, %180
  %gen150 = fmul float %_149, %180
  %subalteredBB = fsub float %divalteredBB, %180
  %181 = load float, float* %aalteredBB, align 4
  %182 = load float, float* %balteredBB, align 4
  %_151 = fsub float %181, %182
  %gen152 = fmul float %_151, %182
  %_153 = fsub float %181, %182
  %gen154 = fmul float %_153, %182
  %_155 = fsub float -0.000000e+00, %181
  %gen156 = fadd float %_155, %182
  %add3alteredBB = fadd float %181, %182
  %183 = load float, float* %calteredBB, align 4
  %_157 = fsub float %add3alteredBB, %183
  %gen158 = fmul float %_157, %183
  %add4alteredBB = fadd float %add3alteredBB, %183
  %184 = load float, float* %dalteredBB, align 4
  %_159 = fsub float %add4alteredBB, %184
  %gen160 = fmul float %_159, %184
  %_161 = fsub float %add4alteredBB, %184
  %gen162 = fmul float %_161, %184
  %_163 = fsub float -0.000000e+00, %add4alteredBB
  %gen164 = fadd float %_163, %184
  %_165 = fsub float %add4alteredBB, %184
  %gen166 = fmul float %_165, %184
  %_167 = fsub float %add4alteredBB, %184
  %gen168 = fmul float %_167, %184
  %_169 = fsub float -0.000000e+00, %add4alteredBB
  %gen170 = fadd float %_169, %184
  %_171 = fsub float -0.000000e+00, %add4alteredBB
  %gen172 = fadd float %_171, %184
  %add5alteredBB = fadd float %add4alteredBB, %184
  %_173 = fsub float -0.000000e+00, %add5alteredBB
  %gen174 = fadd float %_173, 2.000000e+00
  %_175 = fsub float -0.000000e+00, %add5alteredBB
  %gen176 = fadd float %_175, 2.000000e+00
  %_177 = fsub float -0.000000e+00, %add5alteredBB
  %gen178 = fadd float %_177, 2.000000e+00
  %_179 = fsub float %add5alteredBB, 2.000000e+00
  %gen180 = fmul float %_179, 2.000000e+00
  %_181 = fsub float -0.000000e+00, %add5alteredBB
  %gen182 = fadd float %_181, 2.000000e+00
  %_183 = fsub float -0.000000e+00, %add5alteredBB
  %gen184 = fadd float %_183, 2.000000e+00
  %_185 = fsub float -0.000000e+00, %add5alteredBB
  %gen186 = fadd float %_185, 2.000000e+00
  %div6alteredBB = fdiv float %add5alteredBB, 2.000000e+00
  %185 = load float, float* %balteredBB, align 4
  %_187 = fsub float %div6alteredBB, %185
  %gen188 = fmul float %_187, %185
  %_189 = fsub float %div6alteredBB, %185
  %gen190 = fmul float %_189, %185
  %_191 = fsub float -0.000000e+00, %div6alteredBB
  %gen192 = fadd float %_191, %185
  %sub7alteredBB = fsub float %div6alteredBB, %185
  %_193 = fsub float %subalteredBB, %sub7alteredBB
  %gen194 = fmul float %_193, %sub7alteredBB
  %_195 = fsub float %subalteredBB, %sub7alteredBB
  %gen196 = fmul float %_195, %sub7alteredBB
  %_197 = fsub float %subalteredBB, %sub7alteredBB
  %gen198 = fmul float %_197, %sub7alteredBB
  %_199 = fsub float -0.000000e+00, %subalteredBB
  %gen200 = fadd float %_199, %sub7alteredBB
  %_201 = fsub float -0.000000e+00, %subalteredBB
  %gen202 = fadd float %_201, %sub7alteredBB
  %_203 = fsub float -0.000000e+00, %subalteredBB
  %gen204 = fadd float %_203, %sub7alteredBB
  %mulalteredBB = fmul float %subalteredBB, %sub7alteredBB
  %186 = load float, float* %aalteredBB, align 4
  %187 = load float, float* %balteredBB, align 4
  %_205 = fsub float -0.000000e+00, %186
  %gen206 = fadd float %_205, %187
  %_207 = fsub float -0.000000e+00, %186
  %gen208 = fadd float %_207, %187
  %add8alteredBB = fadd float %186, %187
  %188 = load float, float* %calteredBB, align 4
  %_209 = fsub float -0.000000e+00, %add8alteredBB
  %gen210 = fadd float %_209, %188
  %_211 = fsub float %add8alteredBB, %188
  %gen212 = fmul float %_211, %188
  %_213 = fsub float %add8alteredBB, %188
  %gen214 = fmul float %_213, %188
  %_215 = fsub float %add8alteredBB, %188
  %gen216 = fmul float %_215, %188
  %add9alteredBB = fadd float %add8alteredBB, %188
  %189 = load float, float* %dalteredBB, align 4
  %_217 = fsub float %add9alteredBB, %189
  %gen218 = fmul float %_217, %189
  %_219 = fsub float %add9alteredBB, %189
  %gen220 = fmul float %_219, %189
  %_221 = fsub float %add9alteredBB, %189
  %gen222 = fmul float %_221, %189
  %_223 = fsub float -0.000000e+00, %add9alteredBB
  %gen224 = fadd float %_223, %189
  %_225 = fsub float -0.000000e+00, %add9alteredBB
  %gen226 = fadd float %_225, %189
  %add10alteredBB = fadd float %add9alteredBB, %189
  %_227 = fsub float %add10alteredBB, 2.000000e+00
  %gen228 = fmul float %_227, 2.000000e+00
  %_229 = fsub float -0.000000e+00, %add10alteredBB
  %gen230 = fadd float %_229, 2.000000e+00
  %_231 = fsub float -0.000000e+00, %add10alteredBB
  %gen232 = fadd float %_231, 2.000000e+00
  %div11alteredBB = fdiv float %add10alteredBB, 2.000000e+00
  %190 = load float, float* %calteredBB, align 4
  %_233 = fsub float %div11alteredBB, %190
  %gen234 = fmul float %_233, %190
  %_235 = fsub float %div11alteredBB, %190
  %gen236 = fmul float %_235, %190
  %_237 = fsub float -0.000000e+00, %div11alteredBB
  %gen238 = fadd float %_237, %190
  %_239 = fsub float -0.000000e+00, %div11alteredBB
  %gen240 = fadd float %_239, %190
  %_241 = fsub float -0.000000e+00, %div11alteredBB
  %gen242 = fadd float %_241, %190
  %sub12alteredBB = fsub float %div11alteredBB, %190
  %_243 = fsub float -0.000000e+00, %mulalteredBB
  %gen244 = fadd float %_243, %sub12alteredBB
  %_245 = fsub float -0.000000e+00, %mulalteredBB
  %gen246 = fadd float %_245, %sub12alteredBB
  %_247 = fsub float %mulalteredBB, %sub12alteredBB
  %gen248 = fmul float %_247, %sub12alteredBB
  %_249 = fsub float -0.000000e+00, %mulalteredBB
  %gen250 = fadd float %_249, %sub12alteredBB
  %_251 = fsub float %mulalteredBB, %sub12alteredBB
  %gen252 = fmul float %_251, %sub12alteredBB
  %_253 = fsub float -0.000000e+00, %mulalteredBB
  %gen254 = fadd float %_253, %sub12alteredBB
  %mul13alteredBB = fmul float %mulalteredBB, %sub12alteredBB
  %191 = load float, float* %aalteredBB, align 4
  %192 = load float, float* %balteredBB, align 4
  %_255 = fsub float -0.000000e+00, %191
  %gen256 = fadd float %_255, %192
  %add14alteredBB = fadd float %191, %192
  %193 = load float, float* %calteredBB, align 4
  %_257 = fsub float %add14alteredBB, %193
  %gen258 = fmul float %_257, %193
  %_259 = fsub float -0.000000e+00, %add14alteredBB
  %gen260 = fadd float %_259, %193
  %_261 = fsub float -0.000000e+00, %add14alteredBB
  %gen262 = fadd float %_261, %193
  %_263 = fsub float %add14alteredBB, %193
  %gen264 = fmul float %_263, %193
  %_265 = fsub float -0.000000e+00, %add14alteredBB
  %gen266 = fadd float %_265, %193
  %add15alteredBB = fadd float %add14alteredBB, %193
  %194 = load float, float* %dalteredBB, align 4
  %_267 = fsub float -0.000000e+00, %add15alteredBB
  %gen268 = fadd float %_267, %194
  %add16alteredBB = fadd float %add15alteredBB, %194
  %_269 = fsub float -0.000000e+00, %add16alteredBB
  %gen270 = fadd float %_269, 2.000000e+00
  %_271 = fsub float %add16alteredBB, 2.000000e+00
  %gen272 = fmul float %_271, 2.000000e+00
  %_273 = fsub float %add16alteredBB, 2.000000e+00
  %gen274 = fmul float %_273, 2.000000e+00
  %_275 = fsub float -0.000000e+00, %add16alteredBB
  %gen276 = fadd float %_275, 2.000000e+00
  %div17alteredBB = fdiv float %add16alteredBB, 2.000000e+00
  %195 = load float, float* %dalteredBB, align 4
  %_277 = fsub float %div17alteredBB, %195
  %gen278 = fmul float %_277, %195
  %_279 = fsub float %div17alteredBB, %195
  %gen280 = fmul float %_279, %195
  %_281 = fsub float %div17alteredBB, %195
  %gen282 = fmul float %_281, %195
  %_283 = fsub float -0.000000e+00, %div17alteredBB
  %gen284 = fadd float %_283, %195
  %sub18alteredBB = fsub float %div17alteredBB, %195
  %_285 = fsub float %mul13alteredBB, %sub18alteredBB
  %gen286 = fmul float %_285, %sub18alteredBB
  %mul19alteredBB = fmul float %mul13alteredBB, %sub18alteredBB
  %convalteredBB = fpext float %mul19alteredBB to double
  %196 = load float, float* %aalteredBB, align 4
  %197 = load float, float* %balteredBB, align 4
  %_287 = fsub float %196, %197
  %gen288 = fmul float %_287, %197
  %_289 = fsub float -0.000000e+00, %196
  %gen290 = fadd float %_289, %197
  %_291 = fsub float %196, %197
  %gen292 = fmul float %_291, %197
  %_293 = fsub float -0.000000e+00, %196
  %gen294 = fadd float %_293, %197
  %mul20alteredBB = fmul float %196, %197
  %198 = load float, float* %calteredBB, align 4
  %_295 = fsub float -0.000000e+00, %mul20alteredBB
  %gen296 = fadd float %_295, %198
  %_297 = fsub float %mul20alteredBB, %198
  %gen298 = fmul float %_297, %198
  %_299 = fsub float -0.000000e+00, %mul20alteredBB
  %gen300 = fadd float %_299, %198
  %_301 = fsub float -0.000000e+00, %mul20alteredBB
  %gen302 = fadd float %_301, %198
  %mul21alteredBB = fmul float %mul20alteredBB, %198
  %199 = load float, float* %dalteredBB, align 4
  %_303 = fsub float %mul21alteredBB, %199
  %gen304 = fmul float %_303, %199
  %_305 = fsub float %mul21alteredBB, %199
  %gen306 = fmul float %_305, %199
  %_307 = fsub float -0.000000e+00, %mul21alteredBB
  %gen308 = fadd float %_307, %199
  %_309 = fsub float %mul21alteredBB, %199
  %gen310 = fmul float %_309, %199
  %_311 = fsub float -0.000000e+00, %mul21alteredBB
  %gen312 = fadd float %_311, %199
  %_313 = fsub float %mul21alteredBB, %199
  %gen314 = fmul float %_313, %199
  %mul22alteredBB = fmul float %mul21alteredBB, %199
  %conv23alteredBB = fpext float %mul22alteredBB to double
  %200 = load float, float* %ealteredBB, align 4
  %conv24alteredBB = fpext float %200 to double
  %mul25alteredBB = fmul double %conv24alteredBB, 0x400921FB4D12D84A
  %_315 = fsub double -0.000000e+00, %mul25alteredBB
  %gen316 = fadd double %_315, 3.600000e+02
  %_317 = fsub double -0.000000e+00, %mul25alteredBB
  %gen318 = fadd double %_317, 3.600000e+02
  %_319 = fsub double -0.000000e+00, %mul25alteredBB
  %gen320 = fadd double %_319, 3.600000e+02
  %_321 = fsub double %mul25alteredBB, 3.600000e+02
  %gen322 = fmul double %_321, 3.600000e+02
  %div26alteredBB = fdiv double %mul25alteredBB, 3.600000e+02
  %call27alteredBB = call double @cos(double %div26alteredBB) #3
  %_323 = fsub double -0.000000e+00, %conv23alteredBB
  %gen324 = fadd double %_323, %call27alteredBB
  %_325 = fsub double -0.000000e+00, %conv23alteredBB
  %gen326 = fadd double %_325, %call27alteredBB
  %_327 = fsub double %conv23alteredBB, %call27alteredBB
  %gen328 = fmul double %_327, %call27alteredBB
  %_329 = fsub double -0.000000e+00, %conv23alteredBB
  %gen330 = fadd double %_329, %call27alteredBB
  %_331 = fsub double -0.000000e+00, %conv23alteredBB
  %gen332 = fadd double %_331, %call27alteredBB
  %mul28alteredBB = fmul double %conv23alteredBB, %call27alteredBB
  %201 = load float, float* %ealteredBB, align 4
  %conv29alteredBB = fpext float %201 to double
  %_333 = fsub double -0.000000e+00, %conv29alteredBB
  %gen334 = fadd double %_333, 0x400921FB4D12D84A
  %_335 = fsub double %conv29alteredBB, 0x400921FB4D12D84A
  %gen336 = fmul double %_335, 0x400921FB4D12D84A
  %_337 = fsub double %conv29alteredBB, 0x400921FB4D12D84A
  %gen338 = fmul double %_337, 0x400921FB4D12D84A
  %_339 = fsub double %conv29alteredBB, 0x400921FB4D12D84A
  %gen340 = fmul double %_339, 0x400921FB4D12D84A
  %_341 = fsub double %conv29alteredBB, 0x400921FB4D12D84A
  %gen342 = fmul double %_341, 0x400921FB4D12D84A
  %mul30alteredBB = fmul double %conv29alteredBB, 0x400921FB4D12D84A
  %_343 = fsub double %mul30alteredBB, 3.600000e+02
  %gen344 = fmul double %_343, 3.600000e+02
  %_345 = fsub double -0.000000e+00, %mul30alteredBB
  %gen346 = fadd double %_345, 3.600000e+02
  %_347 = fsub double -0.000000e+00, %mul30alteredBB
  %gen348 = fadd double %_347, 3.600000e+02
  %_349 = fsub double -0.000000e+00, %mul30alteredBB
  %gen350 = fadd double %_349, 3.600000e+02
  %_351 = fsub double -0.000000e+00, %mul30alteredBB
  %gen352 = fadd double %_351, 3.600000e+02
  %_353 = fsub double %mul30alteredBB, 3.600000e+02
  %gen354 = fmul double %_353, 3.600000e+02
  %div31alteredBB = fdiv double %mul30alteredBB, 3.600000e+02
  %call32alteredBB = call double @cos(double %div31alteredBB) #3
  %_355 = fsub double %mul28alteredBB, %call32alteredBB
  %gen356 = fmul double %_355, %call32alteredBB
  %_357 = fsub double -0.000000e+00, %mul28alteredBB
  %gen358 = fadd double %_357, %call32alteredBB
  %_359 = fsub double -0.000000e+00, %mul28alteredBB
  %gen360 = fadd double %_359, %call32alteredBB
  %_361 = fsub double -0.000000e+00, %mul28alteredBB
  %gen362 = fadd double %_361, %call32alteredBB
  %_363 = fsub double -0.000000e+00, %mul28alteredBB
  %gen364 = fadd double %_363, %call32alteredBB
  %mul33alteredBB = fmul double %mul28alteredBB, %call32alteredBB
  %_365 = fsub double %convalteredBB, %mul33alteredBB
  %gen366 = fmul double %_365, %mul33alteredBB
  %sub34alteredBB = fsub double %convalteredBB, %mul33alteredBB
  %call35alteredBB = call double @sqrt(double %sub34alteredBB) #3
  %conv36alteredBB = fptrunc double %call35alteredBB to float
  store float %conv36alteredBB, float* %salteredBB, align 4
  %202 = load float, float* %aalteredBB, align 4
  %203 = load float, float* %balteredBB, align 4
  %_367 = fsub float -0.000000e+00, %202
  %gen368 = fadd float %_367, %203
  %add37alteredBB = fadd float %202, %203
  %204 = load float, float* %calteredBB, align 4
  %_369 = fsub float %add37alteredBB, %204
  %gen370 = fmul float %_369, %204
  %_371 = fsub float %add37alteredBB, %204
  %gen372 = fmul float %_371, %204
  %_373 = fsub float %add37alteredBB, %204
  %gen374 = fmul float %_373, %204
  %_375 = fsub float -0.000000e+00, %add37alteredBB
  %gen376 = fadd float %_375, %204
  %_377 = fsub float -0.000000e+00, %add37alteredBB
  %gen378 = fadd float %_377, %204
  %_379 = fsub float %add37alteredBB, %204
  %gen380 = fmul float %_379, %204
  %add38alteredBB = fadd float %add37alteredBB, %204
  %205 = load float, float* %dalteredBB, align 4
  %_381 = fsub float -0.000000e+00, %add38alteredBB
  %gen382 = fadd float %_381, %205
  %_383 = fsub float %add38alteredBB, %205
  %gen384 = fmul float %_383, %205
  %_385 = fsub float %add38alteredBB, %205
  %gen386 = fmul float %_385, %205
  %_387 = fsub float %add38alteredBB, %205
  %gen388 = fmul float %_387, %205
  %_389 = fsub float -0.000000e+00, %add38alteredBB
  %gen390 = fadd float %_389, %205
  %add39alteredBB = fadd float %add38alteredBB, %205
  %_391 = fsub float %add39alteredBB, 2.000000e+00
  %gen392 = fmul float %_391, 2.000000e+00
  %_393 = fsub float %add39alteredBB, 2.000000e+00
  %gen394 = fmul float %_393, 2.000000e+00
  %_395 = fsub float %add39alteredBB, 2.000000e+00
  %gen396 = fmul float %_395, 2.000000e+00
  %div40alteredBB = fdiv float %add39alteredBB, 2.000000e+00
  %206 = load float, float* %aalteredBB, align 4
  %_397 = fsub float -0.000000e+00, %div40alteredBB
  %gen398 = fadd float %_397, %206
  %_399 = fsub float %div40alteredBB, %206
  %gen400 = fmul float %_399, %206
  %sub41alteredBB = fsub float %div40alteredBB, %206
  %207 = load float, float* %aalteredBB, align 4
  %208 = load float, float* %balteredBB, align 4
  %_401 = fsub float %207, %208
  %gen402 = fmul float %_401, %208
  %_403 = fsub float %207, %208
  %gen404 = fmul float %_403, %208
  %_405 = fsub float -0.000000e+00, %207
  %gen406 = fadd float %_405, %208
  %_407 = fsub float %207, %208
  %gen408 = fmul float %_407, %208
  %add42alteredBB = fadd float %207, %208
  %209 = load float, float* %calteredBB, align 4
  %add43alteredBB = fadd float %add42alteredBB, %209
  %210 = load float, float* %dalteredBB, align 4
  %_409 = fsub float -0.000000e+00, %add43alteredBB
  %gen410 = fadd float %_409, %210
  %_411 = fsub float -0.000000e+00, %add43alteredBB
  %gen412 = fadd float %_411, %210
  %_413 = fsub float -0.000000e+00, %add43alteredBB
  %gen414 = fadd float %_413, %210
  %_415 = fsub float %add43alteredBB, %210
  %gen416 = fmul float %_415, %210
  %_417 = fsub float -0.000000e+00, %add43alteredBB
  %gen418 = fadd float %_417, %210
  %add44alteredBB = fadd float %add43alteredBB, %210
  %_419 = fsub float -0.000000e+00, %add44alteredBB
  %gen420 = fadd float %_419, 2.000000e+00
  %div45alteredBB = fdiv float %add44alteredBB, 2.000000e+00
  %211 = load float, float* %balteredBB, align 4
  %_421 = fsub float -0.000000e+00, %div45alteredBB
  %gen422 = fadd float %_421, %211
  %_423 = fsub float -0.000000e+00, %div45alteredBB
  %gen424 = fadd float %_423, %211
  %_425 = fsub float %div45alteredBB, %211
  %gen426 = fmul float %_425, %211
  %_427 = fsub float -0.000000e+00, %div45alteredBB
  %gen428 = fadd float %_427, %211
  %_429 = fsub float -0.000000e+00, %div45alteredBB
  %gen430 = fadd float %_429, %211
  %sub46alteredBB = fsub float %div45alteredBB, %211
  %_431 = fsub float -0.000000e+00, %sub41alteredBB
  %gen432 = fadd float %_431, %sub46alteredBB
  %_433 = fsub float %sub41alteredBB, %sub46alteredBB
  %gen434 = fmul float %_433, %sub46alteredBB
  %_435 = fsub float %sub41alteredBB, %sub46alteredBB
  %gen436 = fmul float %_435, %sub46alteredBB
  %_437 = fsub float -0.000000e+00, %sub41alteredBB
  %gen438 = fadd float %_437, %sub46alteredBB
  %mul47alteredBB = fmul float %sub41alteredBB, %sub46alteredBB
  %212 = load float, float* %aalteredBB, align 4
  %213 = load float, float* %balteredBB, align 4
  %_439 = fsub float -0.000000e+00, %212
  %gen440 = fadd float %_439, %213
  %_441 = fsub float %212, %213
  %gen442 = fmul float %_441, %213
  %_443 = fsub float %212, %213
  %gen444 = fmul float %_443, %213
  %add48alteredBB = fadd float %212, %213
  %214 = load float, float* %calteredBB, align 4
  %_445 = fsub float %add48alteredBB, %214
  %gen446 = fmul float %_445, %214
  %_447 = fsub float %add48alteredBB, %214
  %gen448 = fmul float %_447, %214
  %_449 = fsub float -0.000000e+00, %add48alteredBB
  %gen450 = fadd float %_449, %214
  %_451 = fsub float %add48alteredBB, %214
  %gen452 = fmul float %_451, %214
  %_453 = fsub float %add48alteredBB, %214
  %gen454 = fmul float %_453, %214
  %_455 = fsub float -0.000000e+00, %add48alteredBB
  %gen456 = fadd float %_455, %214
  %add49alteredBB = fadd float %add48alteredBB, %214
  %215 = load float, float* %dalteredBB, align 4
  %_457 = fsub float %add49alteredBB, %215
  %gen458 = fmul float %_457, %215
  %_459 = fsub float -0.000000e+00, %add49alteredBB
  %gen460 = fadd float %_459, %215
  %_461 = fsub float -0.000000e+00, %add49alteredBB
  %gen462 = fadd float %_461, %215
  %_463 = fsub float -0.000000e+00, %add49alteredBB
  %gen464 = fadd float %_463, %215
  %_465 = fsub float %add49alteredBB, %215
  %gen466 = fmul float %_465, %215
  %_467 = fsub float %add49alteredBB, %215
  %gen468 = fmul float %_467, %215
  %_469 = fsub float %add49alteredBB, %215
  %gen470 = fmul float %_469, %215
  %add50alteredBB = fadd float %add49alteredBB, %215
  %_471 = fsub float -0.000000e+00, %add50alteredBB
  %gen472 = fadd float %_471, 2.000000e+00
  %_473 = fsub float %add50alteredBB, 2.000000e+00
  %gen474 = fmul float %_473, 2.000000e+00
  %_475 = fsub float -0.000000e+00, %add50alteredBB
  %gen476 = fadd float %_475, 2.000000e+00
  %_477 = fsub float %add50alteredBB, 2.000000e+00
  %gen478 = fmul float %_477, 2.000000e+00
  %div51alteredBB = fdiv float %add50alteredBB, 2.000000e+00
  %216 = load float, float* %calteredBB, align 4
  %_479 = fsub float -0.000000e+00, %div51alteredBB
  %gen480 = fadd float %_479, %216
  %_481 = fsub float -0.000000e+00, %div51alteredBB
  %gen482 = fadd float %_481, %216
  %_483 = fsub float -0.000000e+00, %div51alteredBB
  %gen484 = fadd float %_483, %216
  %_485 = fsub float -0.000000e+00, %div51alteredBB
  %gen486 = fadd float %_485, %216
  %_487 = fsub float -0.000000e+00, %div51alteredBB
  %gen488 = fadd float %_487, %216
  %_489 = fsub float -0.000000e+00, %div51alteredBB
  %gen490 = fadd float %_489, %216
  %sub52alteredBB = fsub float %div51alteredBB, %216
  %_491 = fsub float -0.000000e+00, %mul47alteredBB
  %gen492 = fadd float %_491, %sub52alteredBB
  %mul53alteredBB = fmul float %mul47alteredBB, %sub52alteredBB
  %217 = load float, float* %aalteredBB, align 4
  %218 = load float, float* %balteredBB, align 4
  %_493 = fsub float %217, %218
  %gen494 = fmul float %_493, %218
  %_495 = fsub float %217, %218
  %gen496 = fmul float %_495, %218
  %_497 = fsub float %217, %218
  %gen498 = fmul float %_497, %218
  %_499 = fsub float -0.000000e+00, %217
  %gen500 = fadd float %_499, %218
  %_501 = fsub float -0.000000e+00, %217
  %gen502 = fadd float %_501, %218
  %add54alteredBB = fadd float %217, %218
  %219 = load float, float* %calteredBB, align 4
  %_503 = fsub float -0.000000e+00, %add54alteredBB
  %gen504 = fadd float %_503, %219
  %_505 = fsub float -0.000000e+00, %add54alteredBB
  %gen506 = fadd float %_505, %219
  %_507 = fsub float %add54alteredBB, %219
  %gen508 = fmul float %_507, %219
  %_509 = fsub float %add54alteredBB, %219
  %gen510 = fmul float %_509, %219
  %_511 = fsub float %add54alteredBB, %219
  %gen512 = fmul float %_511, %219
  %_513 = fsub float %add54alteredBB, %219
  %gen514 = fmul float %_513, %219
  %add55alteredBB = fadd float %add54alteredBB, %219
  %220 = load float, float* %dalteredBB, align 4
  %_515 = fsub float -0.000000e+00, %add55alteredBB
  %gen516 = fadd float %_515, %220
  %_517 = fsub float -0.000000e+00, %add55alteredBB
  %gen518 = fadd float %_517, %220
  %_519 = fsub float %add55alteredBB, %220
  %gen520 = fmul float %_519, %220
  %_521 = fsub float -0.000000e+00, %add55alteredBB
  %gen522 = fadd float %_521, %220
  %_523 = fsub float -0.000000e+00, %add55alteredBB
  %gen524 = fadd float %_523, %220
  %_525 = fsub float %add55alteredBB, %220
  %gen526 = fmul float %_525, %220
  %add56alteredBB = fadd float %add55alteredBB, %220
  %_527 = fsub float %add56alteredBB, 2.000000e+00
  %gen528 = fmul float %_527, 2.000000e+00
  %_529 = fsub float -0.000000e+00, %add56alteredBB
  %gen530 = fadd float %_529, 2.000000e+00
  %div57alteredBB = fdiv float %add56alteredBB, 2.000000e+00
  %221 = load float, float* %dalteredBB, align 4
  %_531 = fsub float %div57alteredBB, %221
  %gen532 = fmul float %_531, %221
  %sub58alteredBB = fsub float %div57alteredBB, %221
  %_533 = fsub float %mul53alteredBB, %sub58alteredBB
  %gen534 = fmul float %_533, %sub58alteredBB
  %_535 = fsub float %mul53alteredBB, %sub58alteredBB
  %gen536 = fmul float %_535, %sub58alteredBB
  %_537 = fsub float %mul53alteredBB, %sub58alteredBB
  %gen538 = fmul float %_537, %sub58alteredBB
  %_539 = fsub float %mul53alteredBB, %sub58alteredBB
  %gen540 = fmul float %_539, %sub58alteredBB
  %_541 = fsub float %mul53alteredBB, %sub58alteredBB
  %gen542 = fmul float %_541, %sub58alteredBB
  %_543 = fsub float %mul53alteredBB, %sub58alteredBB
  %gen544 = fmul float %_543, %sub58alteredBB
  %_545 = fsub float %mul53alteredBB, %sub58alteredBB
  %gen546 = fmul float %_545, %sub58alteredBB
  %_547 = fsub float %mul53alteredBB, %sub58alteredBB
  %gen548 = fmul float %_547, %sub58alteredBB
  %mul59alteredBB = fmul float %mul53alteredBB, %sub58alteredBB
  %conv60alteredBB = fpext float %mul59alteredBB to double
  %222 = load float, float* %aalteredBB, align 4
  %223 = load float, float* %balteredBB, align 4
  %_549 = fsub float %222, %223
  %gen550 = fmul float %_549, %223
  %_551 = fsub float %222, %223
  %gen552 = fmul float %_551, %223
  %_553 = fsub float -0.000000e+00, %222
  %gen554 = fadd float %_553, %223
  %_555 = fsub float -0.000000e+00, %222
  %gen556 = fadd float %_555, %223
  %mul61alteredBB = fmul float %222, %223
  %224 = load float, float* %calteredBB, align 4
  %_557 = fsub float -0.000000e+00, %mul61alteredBB
  %gen558 = fadd float %_557, %224
  %_559 = fsub float %mul61alteredBB, %224
  %gen560 = fmul float %_559, %224
  %_561 = fsub float %mul61alteredBB, %224
  %gen562 = fmul float %_561, %224
  %_563 = fsub float %mul61alteredBB, %224
  %gen564 = fmul float %_563, %224
  %_565 = fsub float -0.000000e+00, %mul61alteredBB
  %gen566 = fadd float %_565, %224
  %mul62alteredBB = fmul float %mul61alteredBB, %224
  %225 = load float, float* %dalteredBB, align 4
  %_567 = fsub float -0.000000e+00, %mul62alteredBB
  %gen568 = fadd float %_567, %225
  %_569 = fsub float -0.000000e+00, %mul62alteredBB
  %gen570 = fadd float %_569, %225
  %_571 = fsub float %mul62alteredBB, %225
  %gen572 = fmul float %_571, %225
  %_573 = fsub float -0.000000e+00, %mul62alteredBB
  %gen574 = fadd float %_573, %225
  %_575 = fsub float %mul62alteredBB, %225
  %gen576 = fmul float %_575, %225
  %_577 = fsub float -0.000000e+00, %mul62alteredBB
  %gen578 = fadd float %_577, %225
  %mul63alteredBB = fmul float %mul62alteredBB, %225
  %conv64alteredBB = fpext float %mul63alteredBB to double
  %226 = load float, float* %ealteredBB, align 4
  %conv65alteredBB = fpext float %226 to double
  %_579 = fsub double -0.000000e+00, %conv65alteredBB
  %gen580 = fadd double %_579, 0x400921FB4D12D84A
  %_581 = fsub double %conv65alteredBB, 0x400921FB4D12D84A
  %gen582 = fmul double %_581, 0x400921FB4D12D84A
  %mul66alteredBB = fmul double %conv65alteredBB, 0x400921FB4D12D84A
  %_583 = fsub double %mul66alteredBB, 3.600000e+02
  %gen584 = fmul double %_583, 3.600000e+02
  %div67alteredBB = fdiv double %mul66alteredBB, 3.600000e+02
  %call68alteredBB = call double @cos(double %div67alteredBB) #3
  %_585 = fsub double %conv64alteredBB, %call68alteredBB
  %gen586 = fmul double %_585, %call68alteredBB
  %_587 = fsub double %conv64alteredBB, %call68alteredBB
  %gen588 = fmul double %_587, %call68alteredBB
  %mul69alteredBB = fmul double %conv64alteredBB, %call68alteredBB
  %227 = load float, float* %ealteredBB, align 4
  %conv70alteredBB = fpext float %227 to double
  %_589 = fsub double %conv70alteredBB, 0x400921FB4D12D84A
  %gen590 = fmul double %_589, 0x400921FB4D12D84A
  %_591 = fsub double -0.000000e+00, %conv70alteredBB
  %gen592 = fadd double %_591, 0x400921FB4D12D84A
  %_593 = fsub double %conv70alteredBB, 0x400921FB4D12D84A
  %gen594 = fmul double %_593, 0x400921FB4D12D84A
  %mul71alteredBB = fmul double %conv70alteredBB, 0x400921FB4D12D84A
  %_595 = fsub double -0.000000e+00, %mul71alteredBB
  %gen596 = fadd double %_595, 3.600000e+02
  %_597 = fsub double %mul71alteredBB, 3.600000e+02
  %gen598 = fmul double %_597, 3.600000e+02
  %_599 = fsub double -0.000000e+00, %mul71alteredBB
  %gen600 = fadd double %_599, 3.600000e+02
  %_601 = fsub double %mul71alteredBB, 3.600000e+02
  %gen602 = fmul double %_601, 3.600000e+02
  %_603 = fsub double %mul71alteredBB, 3.600000e+02
  %gen604 = fmul double %_603, 3.600000e+02
  %_605 = fsub double -0.000000e+00, %mul71alteredBB
  %gen606 = fadd double %_605, 3.600000e+02
  %_607 = fsub double -0.000000e+00, %mul71alteredBB
  %gen608 = fadd double %_607, 3.600000e+02
  %div72alteredBB = fdiv double %mul71alteredBB, 3.600000e+02
  %call73alteredBB = call double @cos(double %div72alteredBB) #3
  %_609 = fsub double -0.000000e+00, %mul69alteredBB
  %gen610 = fadd double %_609, %call73alteredBB
  %_611 = fsub double -0.000000e+00, %mul69alteredBB
  %gen612 = fadd double %_611, %call73alteredBB
  %_613 = fsub double -0.000000e+00, %mul69alteredBB
  %gen614 = fadd double %_613, %call73alteredBB
  %mul74alteredBB = fmul double %mul69alteredBB, %call73alteredBB
  %sub75alteredBB = fsub double %conv60alteredBB, %mul74alteredBB
  %cmpalteredBB = fcmp oge double %sub75alteredBB, 0.000000e+00
  store i32 -1435999367, i32* %switchVar
  br label %loopEnd

originalBB615alteredBB:                           ; preds = %loopEntry
  %s.reload = load volatile float*, float** %s.reg2mem
  %228 = load float, float* %s.reload, align 4
  %conv77alteredBB = fpext float %228 to double
  %call78alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), double %conv77alteredBB)
  store i32 2083821893, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB615alteredBB, %originalBBalteredBB, %if.then120, %if.end, %originalBBpart2617, %originalBB615, %if.then, %originalBBpart2, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

; Function Attrs: nounwind
declare double @sqrt(double) #2

; Function Attrs: nounwind
declare double @cos(double) #2

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
