; ModuleID = 'source-C-CXX/55/588.c'
source_filename = "source-C-CXX/55/588.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %cmp24.reg2mem = alloca i1
  %cmp4.reg2mem = alloca i1
  %cmp1.reg2mem = alloca i1
  %.reg2mem = alloca i32
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %shu = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  %g = alloca i32, align 4
  %h = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %shu)
  %0 = load i32, i32* %shu, align 4
  store i32 %0, i32* %.reg2mem
  %switchVar = alloca i32
  store i32 -1076140928, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar437 = load i32, i32* %switchVar
  switch i32 %switchVar437, label %switchDefault [
    i32 -1076140928, label %first
    i32 -1482097989, label %land.lhs.true
    i32 1332365740, label %originalBB
    i32 -1832811818, label %originalBBpart2
    i32 -1937883200, label %if.then
    i32 -945035524, label %if.end
    i32 -1026102414, label %originalBB87
    i32 221775781, label %originalBBpart289
    i32 -2030574725, label %land.lhs.true5
    i32 -355146059, label %if.then7
    i32 -293357904, label %originalBB91
    i32 1440936782, label %originalBBpart2177
    i32 95000376, label %if.end21
    i32 -1030007939, label %land.lhs.true23
    i32 721840890, label %originalBB179
    i32 -1904281369, label %originalBBpart2181
    i32 735484304, label %if.then25
    i32 559471785, label %if.end48
    i32 -901426163, label %land.lhs.true50
    i32 1225974314, label %if.then52
    i32 -1842006774, label %originalBB183
    i32 -2101986506, label %originalBBpart2435
    i32 -1535413102, label %if.end86
    i32 -921359407, label %originalBBalteredBB
    i32 992768296, label %originalBB87alteredBB
    i32 -365504490, label %originalBB91alteredBB
    i32 1174176354, label %originalBB179alteredBB
    i32 904153767, label %originalBB183alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i32, i32* %.reg2mem
  %cmp = icmp sle i32 11, %.reload
  %1 = select i1 %cmp, i32 -1482097989, i32 -945035524
  store i32 %1, i32* %switchVar
  br label %loopEnd

land.lhs.true:                                    ; preds = %loopEntry
  %2 = load i32, i32* @x
  %3 = load i32, i32* @y
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  %27 = select i1 %25, i32 1332365740, i32 -921359407
  store i32 %27, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %28 = load i32, i32* %shu, align 4
  %cmp1 = icmp sle i32 %28, 99
  store i1 %cmp1, i1* %cmp1.reg2mem
  %29 = load i32, i32* @x
  %30 = load i32, i32* @y
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1832811818, i32 -921359407
  store i32 %54, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  %cmp1.reload = load volatile i1, i1* %cmp1.reg2mem
  %55 = select i1 %cmp1.reload, i32 -1937883200, i32 -945035524
  store i32 %55, i32* %switchVar
  br label %loopEnd

if.then:                                          ; preds = %loopEntry
  %56 = load i32, i32* %shu, align 4
  %div = sdiv i32 %56, 10
  store i32 %div, i32* %a, align 4
  %57 = load i32, i32* %shu, align 4
  %58 = load i32, i32* %a, align 4
  %mul = mul nsw i32 10, %58
  %59 = sub i32 0, %mul
  %60 = add i32 %57, %59
  %sub = sub nsw i32 %57, %mul
  store i32 %60, i32* %b, align 4
  %61 = load i32, i32* %b, align 4
  %mul2 = mul nsw i32 10, %61
  %62 = load i32, i32* %a, align 4
  %63 = sub i32 %mul2, 2038664745
  %64 = add i32 %63, %62
  %65 = add i32 %64, 2038664745
  %add = add nsw i32 %mul2, %62
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %65)
  store i32 -945035524, i32* %switchVar
  br label %loopEnd

if.end:                                           ; preds = %loopEntry
  %66 = load i32, i32* @x
  %67 = load i32, i32* @y
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 -1026102414, i32 992768296
  store i32 %79, i32* %switchVar
  br label %loopEnd

originalBB87:                                     ; preds = %loopEntry
  %80 = load i32, i32* %shu, align 4
  %cmp4 = icmp sge i32 %80, 111
  store i1 %cmp4, i1* %cmp4.reg2mem
  %81 = load i32, i32* @x
  %82 = load i32, i32* @y
  %83 = add i32 %81, 1227056972
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 1227056972
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 221775781, i32 992768296
  store i32 %107, i32* %switchVar
  br label %loopEnd

originalBBpart289:                                ; preds = %loopEntry
  %cmp4.reload = load volatile i1, i1* %cmp4.reg2mem
  %108 = select i1 %cmp4.reload, i32 -2030574725, i32 95000376
  store i32 %108, i32* %switchVar
  br label %loopEnd

land.lhs.true5:                                   ; preds = %loopEntry
  %109 = load i32, i32* %shu, align 4
  %cmp6 = icmp sle i32 %109, 999
  %110 = select i1 %cmp6, i32 -355146059, i32 95000376
  store i32 %110, i32* %switchVar
  br label %loopEnd

if.then7:                                         ; preds = %loopEntry
  %111 = load i32, i32* @x
  %112 = load i32, i32* @y
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -293357904, i32 -365504490
  store i32 %124, i32* %switchVar
  br label %loopEnd

originalBB91:                                     ; preds = %loopEntry
  %125 = load i32, i32* %shu, align 4
  %div8 = sdiv i32 %125, 100
  store i32 %div8, i32* %c, align 4
  %126 = load i32, i32* %shu, align 4
  %127 = load i32, i32* %c, align 4
  %mul9 = mul nsw i32 100, %127
  %128 = sub i32 %126, -895126175
  %129 = sub i32 %128, %mul9
  %130 = add i32 %129, -895126175
  %sub10 = sub nsw i32 %126, %mul9
  %div11 = sdiv i32 %130, 10
  store i32 %div11, i32* %d, align 4
  %131 = load i32, i32* %shu, align 4
  %132 = load i32, i32* %c, align 4
  %mul12 = mul nsw i32 100, %132
  %133 = sub i32 %131, 523319939
  %134 = sub i32 %133, %mul12
  %135 = add i32 %134, 523319939
  %sub13 = sub nsw i32 %131, %mul12
  %136 = load i32, i32* %d, align 4
  %mul14 = mul nsw i32 10, %136
  %137 = sub i32 %135, -1837069949
  %138 = sub i32 %137, %mul14
  %139 = add i32 %138, -1837069949
  %sub15 = sub nsw i32 %135, %mul14
  store i32 %139, i32* %e, align 4
  %140 = load i32, i32* %e, align 4
  %mul16 = mul nsw i32 100, %140
  %141 = load i32, i32* %d, align 4
  %mul17 = mul nsw i32 10, %141
  %142 = sub i32 0, %mul16
  %143 = sub i32 0, %mul17
  %144 = add i32 %142, %143
  %145 = sub i32 0, %144
  %add18 = add nsw i32 %mul16, %mul17
  %146 = load i32, i32* %c, align 4
  %147 = sub i32 0, %145
  %148 = sub i32 0, %146
  %149 = add i32 %147, %148
  %150 = sub i32 0, %149
  %add19 = add nsw i32 %145, %146
  %call20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %150)
  %151 = load i32, i32* @x
  %152 = load i32, i32* @y
  %153 = sub i32 %151, 260093564
  %154 = sub i32 %153, 1
  %155 = add i32 %154, 260093564
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  %177 = select i1 %175, i32 1440936782, i32 -365504490
  store i32 %177, i32* %switchVar
  br label %loopEnd

originalBBpart2177:                               ; preds = %loopEntry
  store i32 95000376, i32* %switchVar
  br label %loopEnd

if.end21:                                         ; preds = %loopEntry
  %178 = load i32, i32* %shu, align 4
  %cmp22 = icmp sge i32 %178, 1111
  %179 = select i1 %cmp22, i32 -1030007939, i32 559471785
  store i32 %179, i32* %switchVar
  br label %loopEnd

land.lhs.true23:                                  ; preds = %loopEntry
  %180 = load i32, i32* @x
  %181 = load i32, i32* @y
  %182 = sub i32 %180, 1271804607
  %183 = sub i32 %182, 1
  %184 = add i32 %183, 1271804607
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = and i1 %188, %189
  %191 = xor i1 %188, %189
  %192 = or i1 %190, %191
  %193 = or i1 %188, %189
  %194 = select i1 %192, i32 721840890, i32 1174176354
  store i32 %194, i32* %switchVar
  br label %loopEnd

originalBB179:                                    ; preds = %loopEntry
  %195 = load i32, i32* %shu, align 4
  %cmp24 = icmp sle i32 %195, 9999
  store i1 %cmp24, i1* %cmp24.reg2mem
  %196 = load i32, i32* @x
  %197 = load i32, i32* @y
  %198 = sub i32 0, 1
  %199 = add i32 %196, %198
  %200 = sub i32 %196, 1
  %201 = mul i32 %196, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %197, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 false, true
  %208 = and i1 %205, false
  %209 = and i1 %203, %207
  %210 = and i1 %206, false
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 false, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  %221 = select i1 %219, i32 -1904281369, i32 1174176354
  store i32 %221, i32* %switchVar
  br label %loopEnd

originalBBpart2181:                               ; preds = %loopEntry
  %cmp24.reload = load volatile i1, i1* %cmp24.reg2mem
  %222 = select i1 %cmp24.reload, i32 735484304, i32 559471785
  store i32 %222, i32* %switchVar
  br label %loopEnd

if.then25:                                        ; preds = %loopEntry
  %223 = load i32, i32* %shu, align 4
  %div26 = sdiv i32 %223, 1000
  store i32 %div26, i32* %f, align 4
  %224 = load i32, i32* %shu, align 4
  %225 = load i32, i32* %f, align 4
  %mul27 = mul nsw i32 %225, 1000
  %226 = sub i32 0, %mul27
  %227 = add i32 %224, %226
  %sub28 = sub nsw i32 %224, %mul27
  %div29 = sdiv i32 %227, 100
  store i32 %div29, i32* %g, align 4
  %228 = load i32, i32* %shu, align 4
  %229 = load i32, i32* %f, align 4
  %mul30 = mul nsw i32 %229, 1000
  %230 = sub i32 %228, -626549867
  %231 = sub i32 %230, %mul30
  %232 = add i32 %231, -626549867
  %sub31 = sub nsw i32 %228, %mul30
  %233 = load i32, i32* %g, align 4
  %mul32 = mul nsw i32 %233, 100
  %234 = sub i32 0, %mul32
  %235 = add i32 %232, %234
  %sub33 = sub nsw i32 %232, %mul32
  %div34 = sdiv i32 %235, 10
  store i32 %div34, i32* %h, align 4
  %236 = load i32, i32* %shu, align 4
  %237 = load i32, i32* %f, align 4
  %mul35 = mul nsw i32 %237, 1000
  %238 = sub i32 0, %mul35
  %239 = add i32 %236, %238
  %sub36 = sub nsw i32 %236, %mul35
  %240 = load i32, i32* %g, align 4
  %mul37 = mul nsw i32 %240, 100
  %241 = sub i32 0, %mul37
  %242 = add i32 %239, %241
  %sub38 = sub nsw i32 %239, %mul37
  %243 = load i32, i32* %h, align 4
  %mul39 = mul nsw i32 %243, 10
  %244 = add i32 %242, -843694580
  %245 = sub i32 %244, %mul39
  %246 = sub i32 %245, -843694580
  %sub40 = sub nsw i32 %242, %mul39
  store i32 %246, i32* %i, align 4
  %247 = load i32, i32* %i, align 4
  %mul41 = mul nsw i32 1000, %247
  %248 = load i32, i32* %h, align 4
  %mul42 = mul nsw i32 100, %248
  %249 = sub i32 0, %mul42
  %250 = sub i32 %mul41, %249
  %add43 = add nsw i32 %mul41, %mul42
  %251 = load i32, i32* %g, align 4
  %mul44 = mul nsw i32 10, %251
  %252 = add i32 %250, 1150857920
  %253 = add i32 %252, %mul44
  %254 = sub i32 %253, 1150857920
  %add45 = add nsw i32 %250, %mul44
  %255 = load i32, i32* %f, align 4
  %256 = sub i32 %254, -897488775
  %257 = add i32 %256, %255
  %258 = add i32 %257, -897488775
  %add46 = add nsw i32 %254, %255
  %call47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %258)
  store i32 559471785, i32* %switchVar
  br label %loopEnd

if.end48:                                         ; preds = %loopEntry
  %259 = load i32, i32* %shu, align 4
  %cmp49 = icmp sge i32 %259, 11111
  %260 = select i1 %cmp49, i32 -901426163, i32 -1535413102
  store i32 %260, i32* %switchVar
  br label %loopEnd

land.lhs.true50:                                  ; preds = %loopEntry
  %261 = load i32, i32* %shu, align 4
  %cmp51 = icmp sle i32 %261, 99999
  %262 = select i1 %cmp51, i32 1225974314, i32 -1535413102
  store i32 %262, i32* %switchVar
  br label %loopEnd

if.then52:                                        ; preds = %loopEntry
  %263 = load i32, i32* @x
  %264 = load i32, i32* @y
  %265 = sub i32 0, 1
  %266 = add i32 %263, %265
  %267 = sub i32 %263, 1
  %268 = mul i32 %263, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %264, 10
  %272 = and i1 %270, %271
  %273 = xor i1 %270, %271
  %274 = or i1 %272, %273
  %275 = or i1 %270, %271
  %276 = select i1 %274, i32 -1842006774, i32 904153767
  store i32 %276, i32* %switchVar
  br label %loopEnd

originalBB183:                                    ; preds = %loopEntry
  %277 = load i32, i32* %shu, align 4
  %div53 = sdiv i32 %277, 10000
  store i32 %div53, i32* %j, align 4
  %278 = load i32, i32* %shu, align 4
  %279 = load i32, i32* %j, align 4
  %mul54 = mul nsw i32 %279, 10000
  %280 = add i32 %278, 738959253
  %281 = sub i32 %280, %mul54
  %282 = sub i32 %281, 738959253
  %sub55 = sub nsw i32 %278, %mul54
  %div56 = sdiv i32 %282, 1000
  store i32 %div56, i32* %k, align 4
  %283 = load i32, i32* %shu, align 4
  %284 = load i32, i32* %j, align 4
  %mul57 = mul nsw i32 %284, 10000
  %285 = sub i32 0, %mul57
  %286 = add i32 %283, %285
  %sub58 = sub nsw i32 %283, %mul57
  %287 = load i32, i32* %k, align 4
  %mul59 = mul nsw i32 %287, 1000
  %288 = sub i32 %286, 1181687288
  %289 = sub i32 %288, %mul59
  %290 = add i32 %289, 1181687288
  %sub60 = sub nsw i32 %286, %mul59
  %div61 = sdiv i32 %290, 100
  store i32 %div61, i32* %l, align 4
  %291 = load i32, i32* %shu, align 4
  %292 = load i32, i32* %j, align 4
  %mul62 = mul nsw i32 %292, 10000
  %293 = sub i32 %291, 672661151
  %294 = sub i32 %293, %mul62
  %295 = add i32 %294, 672661151
  %sub63 = sub nsw i32 %291, %mul62
  %296 = load i32, i32* %k, align 4
  %mul64 = mul nsw i32 %296, 1000
  %297 = add i32 %295, -2136673588
  %298 = sub i32 %297, %mul64
  %299 = sub i32 %298, -2136673588
  %sub65 = sub nsw i32 %295, %mul64
  %300 = load i32, i32* %l, align 4
  %mul66 = mul nsw i32 %300, 100
  %301 = sub i32 %299, 844187221
  %302 = sub i32 %301, %mul66
  %303 = add i32 %302, 844187221
  %sub67 = sub nsw i32 %299, %mul66
  %div68 = sdiv i32 %303, 10
  store i32 %div68, i32* %m, align 4
  %304 = load i32, i32* %shu, align 4
  %305 = load i32, i32* %j, align 4
  %mul69 = mul nsw i32 %305, 10000
  %306 = sub i32 %304, -1728493767
  %307 = sub i32 %306, %mul69
  %308 = add i32 %307, -1728493767
  %sub70 = sub nsw i32 %304, %mul69
  %309 = load i32, i32* %k, align 4
  %mul71 = mul nsw i32 %309, 1000
  %310 = sub i32 0, %mul71
  %311 = add i32 %308, %310
  %sub72 = sub nsw i32 %308, %mul71
  %312 = load i32, i32* %l, align 4
  %mul73 = mul nsw i32 %312, 100
  %313 = sub i32 0, %mul73
  %314 = add i32 %311, %313
  %sub74 = sub nsw i32 %311, %mul73
  %315 = load i32, i32* %m, align 4
  %mul75 = mul nsw i32 %315, 10
  %316 = sub i32 0, %mul75
  %317 = add i32 %314, %316
  %sub76 = sub nsw i32 %314, %mul75
  store i32 %317, i32* %n, align 4
  %318 = load i32, i32* %n, align 4
  %mul77 = mul nsw i32 %318, 10000
  %319 = load i32, i32* %m, align 4
  %mul78 = mul nsw i32 %319, 1000
  %320 = add i32 %mul77, -1860417140
  %321 = add i32 %320, %mul78
  %322 = sub i32 %321, -1860417140
  %add79 = add nsw i32 %mul77, %mul78
  %323 = load i32, i32* %l, align 4
  %mul80 = mul nsw i32 %323, 100
  %324 = add i32 %322, -408781528
  %325 = add i32 %324, %mul80
  %326 = sub i32 %325, -408781528
  %add81 = add nsw i32 %322, %mul80
  %327 = load i32, i32* %k, align 4
  %mul82 = mul nsw i32 %327, 10
  %328 = add i32 %326, 508646603
  %329 = add i32 %328, %mul82
  %330 = sub i32 %329, 508646603
  %add83 = add nsw i32 %326, %mul82
  %331 = load i32, i32* %j, align 4
  %332 = sub i32 %330, 1150240658
  %333 = add i32 %332, %331
  %334 = add i32 %333, 1150240658
  %add84 = add nsw i32 %330, %331
  %call85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %334)
  %335 = load i32, i32* @x
  %336 = load i32, i32* @y
  %337 = add i32 %335, -370596564
  %338 = sub i32 %337, 1
  %339 = sub i32 %338, -370596564
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = and i1 %343, %344
  %346 = xor i1 %343, %344
  %347 = or i1 %345, %346
  %348 = or i1 %343, %344
  %349 = select i1 %347, i32 -2101986506, i32 904153767
  store i32 %349, i32* %switchVar
  br label %loopEnd

originalBBpart2435:                               ; preds = %loopEntry
  store i32 -1535413102, i32* %switchVar
  br label %loopEnd

if.end86:                                         ; preds = %loopEntry
  ret i32 0

originalBBalteredBB:                              ; preds = %loopEntry
  %350 = load i32, i32* %shu, align 4
  %cmp1alteredBB = icmp sle i32 %350, 99
  store i32 1332365740, i32* %switchVar
  br label %loopEnd

originalBB87alteredBB:                            ; preds = %loopEntry
  %351 = load i32, i32* %shu, align 4
  %cmp4alteredBB = icmp sge i32 %351, 111
  store i32 -1026102414, i32* %switchVar
  br label %loopEnd

originalBB91alteredBB:                            ; preds = %loopEntry
  %352 = load i32, i32* %shu, align 4
  %_ = shl i32 %352, 100
  %div8alteredBB = sdiv i32 %352, 100
  store i32 %div8alteredBB, i32* %c, align 4
  %353 = load i32, i32* %shu, align 4
  %354 = load i32, i32* %c, align 4
  %355 = add i32 100, -1837031634
  %356 = sub i32 %355, %354
  %357 = sub i32 %356, -1837031634
  %_92 = sub i32 100, %354
  %gen = mul i32 %357, %354
  %_93 = shl i32 100, %354
  %358 = sub i32 0, 390145700
  %359 = sub i32 %358, 100
  %360 = add i32 %359, 390145700
  %_94 = sub i32 0, 100
  %361 = sub i32 %360, -160234979
  %362 = add i32 %361, %354
  %363 = add i32 %362, -160234979
  %gen95 = add i32 %360, %354
  %mul9alteredBB = mul nsw i32 100, %354
  %_96 = shl i32 %353, %mul9alteredBB
  %364 = add i32 0, 932098200
  %365 = sub i32 %364, %353
  %366 = sub i32 %365, 932098200
  %_97 = sub i32 0, %353
  %367 = sub i32 0, %366
  %368 = sub i32 0, %mul9alteredBB
  %369 = add i32 %367, %368
  %370 = sub i32 0, %369
  %gen98 = add i32 %366, %mul9alteredBB
  %371 = sub i32 0, %353
  %372 = add i32 0, %371
  %_99 = sub i32 0, %353
  %373 = sub i32 0, %372
  %374 = sub i32 0, %mul9alteredBB
  %375 = add i32 %373, %374
  %376 = sub i32 0, %375
  %gen100 = add i32 %372, %mul9alteredBB
  %377 = sub i32 0, %mul9alteredBB
  %378 = add i32 %353, %377
  %sub10alteredBB = sub nsw i32 %353, %mul9alteredBB
  %_101 = shl i32 %378, 10
  %_102 = shl i32 %378, 10
  %_103 = shl i32 %378, 10
  %379 = sub i32 %378, -900657473
  %380 = sub i32 %379, 10
  %381 = add i32 %380, -900657473
  %_104 = sub i32 %378, 10
  %gen105 = mul i32 %381, 10
  %div11alteredBB = sdiv i32 %378, 10
  store i32 %div11alteredBB, i32* %d, align 4
  %382 = load i32, i32* %shu, align 4
  %383 = load i32, i32* %c, align 4
  %384 = sub i32 100, -391481167
  %385 = sub i32 %384, %383
  %386 = add i32 %385, -391481167
  %_106 = sub i32 100, %383
  %gen107 = mul i32 %386, %383
  %387 = add i32 0, -1596845401
  %388 = sub i32 %387, 100
  %389 = sub i32 %388, -1596845401
  %_108 = sub i32 0, 100
  %390 = sub i32 %389, -487822294
  %391 = add i32 %390, %383
  %392 = add i32 %391, -487822294
  %gen109 = add i32 %389, %383
  %393 = sub i32 100, 1322887291
  %394 = sub i32 %393, %383
  %395 = add i32 %394, 1322887291
  %_110 = sub i32 100, %383
  %gen111 = mul i32 %395, %383
  %396 = sub i32 0, %383
  %397 = add i32 100, %396
  %_112 = sub i32 100, %383
  %gen113 = mul i32 %397, %383
  %_114 = shl i32 100, %383
  %_115 = shl i32 100, %383
  %mul12alteredBB = mul nsw i32 100, %383
  %398 = sub i32 %382, -830128354
  %399 = sub i32 %398, %mul12alteredBB
  %400 = add i32 %399, -830128354
  %_116 = sub i32 %382, %mul12alteredBB
  %gen117 = mul i32 %400, %mul12alteredBB
  %401 = add i32 0, 1371187882
  %402 = sub i32 %401, %382
  %403 = sub i32 %402, 1371187882
  %_118 = sub i32 0, %382
  %404 = sub i32 0, %mul12alteredBB
  %405 = sub i32 %403, %404
  %gen119 = add i32 %403, %mul12alteredBB
  %406 = sub i32 0, %382
  %407 = add i32 0, %406
  %_120 = sub i32 0, %382
  %408 = sub i32 0, %407
  %409 = sub i32 0, %mul12alteredBB
  %410 = add i32 %408, %409
  %411 = sub i32 0, %410
  %gen121 = add i32 %407, %mul12alteredBB
  %412 = sub i32 0, 1399250669
  %413 = sub i32 %412, %382
  %414 = add i32 %413, 1399250669
  %_122 = sub i32 0, %382
  %415 = sub i32 0, %mul12alteredBB
  %416 = sub i32 %414, %415
  %gen123 = add i32 %414, %mul12alteredBB
  %417 = add i32 0, -143244552
  %418 = sub i32 %417, %382
  %419 = sub i32 %418, -143244552
  %_124 = sub i32 0, %382
  %420 = sub i32 0, %419
  %421 = sub i32 0, %mul12alteredBB
  %422 = add i32 %420, %421
  %423 = sub i32 0, %422
  %gen125 = add i32 %419, %mul12alteredBB
  %424 = sub i32 %382, 584382598
  %425 = sub i32 %424, %mul12alteredBB
  %426 = add i32 %425, 584382598
  %sub13alteredBB = sub nsw i32 %382, %mul12alteredBB
  %427 = load i32, i32* %d, align 4
  %428 = sub i32 0, 10
  %429 = add i32 0, %428
  %_126 = sub i32 0, 10
  %430 = sub i32 0, %427
  %431 = sub i32 %429, %430
  %gen127 = add i32 %429, %427
  %432 = sub i32 0, 10
  %433 = add i32 0, %432
  %_128 = sub i32 0, 10
  %434 = add i32 %433, 1095593040
  %435 = add i32 %434, %427
  %436 = sub i32 %435, 1095593040
  %gen129 = add i32 %433, %427
  %437 = add i32 10, -1505739016
  %438 = sub i32 %437, %427
  %439 = sub i32 %438, -1505739016
  %_130 = sub i32 10, %427
  %gen131 = mul i32 %439, %427
  %440 = sub i32 0, 742131709
  %441 = sub i32 %440, 10
  %442 = add i32 %441, 742131709
  %_132 = sub i32 0, 10
  %443 = sub i32 0, %442
  %444 = sub i32 0, %427
  %445 = add i32 %443, %444
  %446 = sub i32 0, %445
  %gen133 = add i32 %442, %427
  %447 = sub i32 0, 10
  %448 = add i32 0, %447
  %_134 = sub i32 0, 10
  %449 = sub i32 0, %427
  %450 = sub i32 %448, %449
  %gen135 = add i32 %448, %427
  %451 = sub i32 0, 10
  %452 = add i32 0, %451
  %_136 = sub i32 0, 10
  %453 = sub i32 %452, 735927072
  %454 = add i32 %453, %427
  %455 = add i32 %454, 735927072
  %gen137 = add i32 %452, %427
  %mul14alteredBB = mul nsw i32 10, %427
  %456 = add i32 0, 1704741579
  %457 = sub i32 %456, %426
  %458 = sub i32 %457, 1704741579
  %_138 = sub i32 0, %426
  %459 = add i32 %458, -1208269998
  %460 = add i32 %459, %mul14alteredBB
  %461 = sub i32 %460, -1208269998
  %gen139 = add i32 %458, %mul14alteredBB
  %462 = add i32 %426, -1340653887
  %463 = sub i32 %462, %mul14alteredBB
  %464 = sub i32 %463, -1340653887
  %_140 = sub i32 %426, %mul14alteredBB
  %gen141 = mul i32 %464, %mul14alteredBB
  %465 = sub i32 0, %426
  %466 = add i32 0, %465
  %_142 = sub i32 0, %426
  %467 = sub i32 0, %mul14alteredBB
  %468 = sub i32 %466, %467
  %gen143 = add i32 %466, %mul14alteredBB
  %469 = sub i32 %426, 1761985443
  %470 = sub i32 %469, %mul14alteredBB
  %471 = add i32 %470, 1761985443
  %sub15alteredBB = sub nsw i32 %426, %mul14alteredBB
  store i32 %471, i32* %e, align 4
  %472 = load i32, i32* %e, align 4
  %473 = sub i32 0, %472
  %474 = add i32 100, %473
  %_144 = sub i32 100, %472
  %gen145 = mul i32 %474, %472
  %mul16alteredBB = mul nsw i32 100, %472
  %475 = load i32, i32* %d, align 4
  %476 = sub i32 0, -822172397
  %477 = sub i32 %476, 10
  %478 = add i32 %477, -822172397
  %_146 = sub i32 0, 10
  %479 = sub i32 0, %478
  %480 = sub i32 0, %475
  %481 = add i32 %479, %480
  %482 = sub i32 0, %481
  %gen147 = add i32 %478, %475
  %483 = add i32 0, -136647530
  %484 = sub i32 %483, 10
  %485 = sub i32 %484, -136647530
  %_148 = sub i32 0, 10
  %486 = sub i32 0, %475
  %487 = sub i32 %485, %486
  %gen149 = add i32 %485, %475
  %488 = sub i32 10, 1058304608
  %489 = sub i32 %488, %475
  %490 = add i32 %489, 1058304608
  %_150 = sub i32 10, %475
  %gen151 = mul i32 %490, %475
  %mul17alteredBB = mul nsw i32 10, %475
  %491 = sub i32 0, %mul16alteredBB
  %492 = add i32 0, %491
  %_152 = sub i32 0, %mul16alteredBB
  %493 = add i32 %492, 1473117168
  %494 = add i32 %493, %mul17alteredBB
  %495 = sub i32 %494, 1473117168
  %gen153 = add i32 %492, %mul17alteredBB
  %496 = sub i32 %mul16alteredBB, -1990285697
  %497 = sub i32 %496, %mul17alteredBB
  %498 = add i32 %497, -1990285697
  %_154 = sub i32 %mul16alteredBB, %mul17alteredBB
  %gen155 = mul i32 %498, %mul17alteredBB
  %499 = add i32 %mul16alteredBB, -1039976035
  %500 = sub i32 %499, %mul17alteredBB
  %501 = sub i32 %500, -1039976035
  %_156 = sub i32 %mul16alteredBB, %mul17alteredBB
  %gen157 = mul i32 %501, %mul17alteredBB
  %502 = sub i32 0, %mul16alteredBB
  %503 = add i32 0, %502
  %_158 = sub i32 0, %mul16alteredBB
  %504 = add i32 %503, -1107664257
  %505 = add i32 %504, %mul17alteredBB
  %506 = sub i32 %505, -1107664257
  %gen159 = add i32 %503, %mul17alteredBB
  %507 = add i32 0, 1523076497
  %508 = sub i32 %507, %mul16alteredBB
  %509 = sub i32 %508, 1523076497
  %_160 = sub i32 0, %mul16alteredBB
  %510 = sub i32 %509, -504355221
  %511 = add i32 %510, %mul17alteredBB
  %512 = add i32 %511, -504355221
  %gen161 = add i32 %509, %mul17alteredBB
  %513 = add i32 %mul16alteredBB, -1889247508
  %514 = sub i32 %513, %mul17alteredBB
  %515 = sub i32 %514, -1889247508
  %_162 = sub i32 %mul16alteredBB, %mul17alteredBB
  %gen163 = mul i32 %515, %mul17alteredBB
  %516 = sub i32 0, %mul17alteredBB
  %517 = sub i32 %mul16alteredBB, %516
  %add18alteredBB = add nsw i32 %mul16alteredBB, %mul17alteredBB
  %518 = load i32, i32* %c, align 4
  %519 = sub i32 0, %518
  %520 = add i32 %517, %519
  %_164 = sub i32 %517, %518
  %gen165 = mul i32 %520, %518
  %521 = sub i32 0, -1809536898
  %522 = sub i32 %521, %517
  %523 = add i32 %522, -1809536898
  %_166 = sub i32 0, %517
  %524 = sub i32 0, %523
  %525 = sub i32 0, %518
  %526 = add i32 %524, %525
  %527 = sub i32 0, %526
  %gen167 = add i32 %523, %518
  %528 = add i32 %517, -1775005967
  %529 = sub i32 %528, %518
  %530 = sub i32 %529, -1775005967
  %_168 = sub i32 %517, %518
  %gen169 = mul i32 %530, %518
  %531 = add i32 %517, 849256420
  %532 = sub i32 %531, %518
  %533 = sub i32 %532, 849256420
  %_170 = sub i32 %517, %518
  %gen171 = mul i32 %533, %518
  %534 = sub i32 0, -756970693
  %535 = sub i32 %534, %517
  %536 = add i32 %535, -756970693
  %_172 = sub i32 0, %517
  %537 = add i32 %536, 1033123330
  %538 = add i32 %537, %518
  %539 = sub i32 %538, 1033123330
  %gen173 = add i32 %536, %518
  %540 = sub i32 %517, 7782696
  %541 = sub i32 %540, %518
  %542 = add i32 %541, 7782696
  %_174 = sub i32 %517, %518
  %gen175 = mul i32 %542, %518
  %543 = sub i32 %517, -101981982
  %544 = add i32 %543, %518
  %545 = add i32 %544, -101981982
  %add19alteredBB = add nsw i32 %517, %518
  %call20alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %545)
  store i32 -293357904, i32* %switchVar
  br label %loopEnd

originalBB179alteredBB:                           ; preds = %loopEntry
  %546 = load i32, i32* %shu, align 4
  %cmp24alteredBB = icmp sle i32 %546, 9999
  store i32 721840890, i32* %switchVar
  br label %loopEnd

originalBB183alteredBB:                           ; preds = %loopEntry
  %547 = load i32, i32* %shu, align 4
  %548 = sub i32 %547, 1074383758
  %549 = sub i32 %548, 10000
  %550 = add i32 %549, 1074383758
  %_184 = sub i32 %547, 10000
  %gen185 = mul i32 %550, 10000
  %_186 = shl i32 %547, 10000
  %_187 = shl i32 %547, 10000
  %551 = sub i32 %547, -335335413
  %552 = sub i32 %551, 10000
  %553 = add i32 %552, -335335413
  %_188 = sub i32 %547, 10000
  %gen189 = mul i32 %553, 10000
  %div53alteredBB = sdiv i32 %547, 10000
  store i32 %div53alteredBB, i32* %j, align 4
  %554 = load i32, i32* %shu, align 4
  %555 = load i32, i32* %j, align 4
  %556 = sub i32 %555, -1156151620
  %557 = sub i32 %556, 10000
  %558 = add i32 %557, -1156151620
  %_190 = sub i32 %555, 10000
  %gen191 = mul i32 %558, 10000
  %_192 = shl i32 %555, 10000
  %559 = add i32 %555, -282516285
  %560 = sub i32 %559, 10000
  %561 = sub i32 %560, -282516285
  %_193 = sub i32 %555, 10000
  %gen194 = mul i32 %561, 10000
  %562 = sub i32 0, -384510272
  %563 = sub i32 %562, %555
  %564 = add i32 %563, -384510272
  %_195 = sub i32 0, %555
  %565 = sub i32 0, %564
  %566 = sub i32 0, 10000
  %567 = add i32 %565, %566
  %568 = sub i32 0, %567
  %gen196 = add i32 %564, 10000
  %_197 = shl i32 %555, 10000
  %569 = sub i32 %555, 97168657
  %570 = sub i32 %569, 10000
  %571 = add i32 %570, 97168657
  %_198 = sub i32 %555, 10000
  %gen199 = mul i32 %571, 10000
  %572 = add i32 0, 1067544623
  %573 = sub i32 %572, %555
  %574 = sub i32 %573, 1067544623
  %_200 = sub i32 0, %555
  %575 = sub i32 0, %574
  %576 = sub i32 0, 10000
  %577 = add i32 %575, %576
  %578 = sub i32 0, %577
  %gen201 = add i32 %574, 10000
  %mul54alteredBB = mul nsw i32 %555, 10000
  %_202 = shl i32 %554, %mul54alteredBB
  %_203 = shl i32 %554, %mul54alteredBB
  %579 = sub i32 0, -605319124
  %580 = sub i32 %579, %554
  %581 = add i32 %580, -605319124
  %_204 = sub i32 0, %554
  %582 = sub i32 %581, -1755751458
  %583 = add i32 %582, %mul54alteredBB
  %584 = add i32 %583, -1755751458
  %gen205 = add i32 %581, %mul54alteredBB
  %585 = sub i32 0, %554
  %586 = add i32 0, %585
  %_206 = sub i32 0, %554
  %587 = sub i32 0, %mul54alteredBB
  %588 = sub i32 %586, %587
  %gen207 = add i32 %586, %mul54alteredBB
  %589 = add i32 0, -296861958
  %590 = sub i32 %589, %554
  %591 = sub i32 %590, -296861958
  %_208 = sub i32 0, %554
  %592 = sub i32 0, %mul54alteredBB
  %593 = sub i32 %591, %592
  %gen209 = add i32 %591, %mul54alteredBB
  %594 = sub i32 %554, 1520106547
  %595 = sub i32 %594, %mul54alteredBB
  %596 = add i32 %595, 1520106547
  %_210 = sub i32 %554, %mul54alteredBB
  %gen211 = mul i32 %596, %mul54alteredBB
  %597 = add i32 0, 1253067574
  %598 = sub i32 %597, %554
  %599 = sub i32 %598, 1253067574
  %_212 = sub i32 0, %554
  %600 = sub i32 0, %mul54alteredBB
  %601 = sub i32 %599, %600
  %gen213 = add i32 %599, %mul54alteredBB
  %602 = add i32 0, -1577138474
  %603 = sub i32 %602, %554
  %604 = sub i32 %603, -1577138474
  %_214 = sub i32 0, %554
  %605 = sub i32 0, %604
  %606 = sub i32 0, %mul54alteredBB
  %607 = add i32 %605, %606
  %608 = sub i32 0, %607
  %gen215 = add i32 %604, %mul54alteredBB
  %_216 = shl i32 %554, %mul54alteredBB
  %609 = sub i32 %554, 1209435348
  %610 = sub i32 %609, %mul54alteredBB
  %611 = add i32 %610, 1209435348
  %sub55alteredBB = sub nsw i32 %554, %mul54alteredBB
  %612 = sub i32 0, -798110751
  %613 = sub i32 %612, %611
  %614 = add i32 %613, -798110751
  %_217 = sub i32 0, %611
  %615 = sub i32 %614, 1449167137
  %616 = add i32 %615, 1000
  %617 = add i32 %616, 1449167137
  %gen218 = add i32 %614, 1000
  %618 = add i32 %611, -1640453234
  %619 = sub i32 %618, 1000
  %620 = sub i32 %619, -1640453234
  %_219 = sub i32 %611, 1000
  %gen220 = mul i32 %620, 1000
  %621 = add i32 %611, 1426214609
  %622 = sub i32 %621, 1000
  %623 = sub i32 %622, 1426214609
  %_221 = sub i32 %611, 1000
  %gen222 = mul i32 %623, 1000
  %_223 = shl i32 %611, 1000
  %624 = sub i32 0, 1000
  %625 = add i32 %611, %624
  %_224 = sub i32 %611, 1000
  %gen225 = mul i32 %625, 1000
  %626 = sub i32 0, 1000
  %627 = add i32 %611, %626
  %_226 = sub i32 %611, 1000
  %gen227 = mul i32 %627, 1000
  %_228 = shl i32 %611, 1000
  %628 = sub i32 %611, -108531207
  %629 = sub i32 %628, 1000
  %630 = add i32 %629, -108531207
  %_229 = sub i32 %611, 1000
  %gen230 = mul i32 %630, 1000
  %div56alteredBB = sdiv i32 %611, 1000
  store i32 %div56alteredBB, i32* %k, align 4
  %631 = load i32, i32* %shu, align 4
  %632 = load i32, i32* %j, align 4
  %_231 = shl i32 %632, 10000
  %mul57alteredBB = mul nsw i32 %632, 10000
  %633 = sub i32 0, %mul57alteredBB
  %634 = add i32 %631, %633
  %_232 = sub i32 %631, %mul57alteredBB
  %gen233 = mul i32 %634, %mul57alteredBB
  %635 = sub i32 0, %mul57alteredBB
  %636 = add i32 %631, %635
  %sub58alteredBB = sub nsw i32 %631, %mul57alteredBB
  %637 = load i32, i32* %k, align 4
  %638 = sub i32 %637, 1746929549
  %639 = sub i32 %638, 1000
  %640 = add i32 %639, 1746929549
  %_234 = sub i32 %637, 1000
  %gen235 = mul i32 %640, 1000
  %_236 = shl i32 %637, 1000
  %641 = sub i32 0, -350022468
  %642 = sub i32 %641, %637
  %643 = add i32 %642, -350022468
  %_237 = sub i32 0, %637
  %644 = sub i32 0, %643
  %645 = sub i32 0, 1000
  %646 = add i32 %644, %645
  %647 = sub i32 0, %646
  %gen238 = add i32 %643, 1000
  %648 = add i32 %637, 1331689825
  %649 = sub i32 %648, 1000
  %650 = sub i32 %649, 1331689825
  %_239 = sub i32 %637, 1000
  %gen240 = mul i32 %650, 1000
  %651 = add i32 0, -185204485
  %652 = sub i32 %651, %637
  %653 = sub i32 %652, -185204485
  %_241 = sub i32 0, %637
  %654 = sub i32 %653, 1002399729
  %655 = add i32 %654, 1000
  %656 = add i32 %655, 1002399729
  %gen242 = add i32 %653, 1000
  %657 = sub i32 0, 1000
  %658 = add i32 %637, %657
  %_243 = sub i32 %637, 1000
  %gen244 = mul i32 %658, 1000
  %659 = add i32 0, 1951061303
  %660 = sub i32 %659, %637
  %661 = sub i32 %660, 1951061303
  %_245 = sub i32 0, %637
  %662 = sub i32 0, %661
  %663 = sub i32 0, 1000
  %664 = add i32 %662, %663
  %665 = sub i32 0, %664
  %gen246 = add i32 %661, 1000
  %666 = sub i32 0, 1527796649
  %667 = sub i32 %666, %637
  %668 = add i32 %667, 1527796649
  %_247 = sub i32 0, %637
  %669 = sub i32 0, %668
  %670 = sub i32 0, 1000
  %671 = add i32 %669, %670
  %672 = sub i32 0, %671
  %gen248 = add i32 %668, 1000
  %mul59alteredBB = mul nsw i32 %637, 1000
  %_249 = shl i32 %636, %mul59alteredBB
  %673 = sub i32 0, %mul59alteredBB
  %674 = add i32 %636, %673
  %_250 = sub i32 %636, %mul59alteredBB
  %gen251 = mul i32 %674, %mul59alteredBB
  %675 = add i32 %636, -287719275
  %676 = sub i32 %675, %mul59alteredBB
  %677 = sub i32 %676, -287719275
  %_252 = sub i32 %636, %mul59alteredBB
  %gen253 = mul i32 %677, %mul59alteredBB
  %678 = sub i32 0, %636
  %679 = add i32 0, %678
  %_254 = sub i32 0, %636
  %680 = sub i32 %679, 447003720
  %681 = add i32 %680, %mul59alteredBB
  %682 = add i32 %681, 447003720
  %gen255 = add i32 %679, %mul59alteredBB
  %683 = sub i32 %636, -837298576
  %684 = sub i32 %683, %mul59alteredBB
  %685 = add i32 %684, -837298576
  %_256 = sub i32 %636, %mul59alteredBB
  %gen257 = mul i32 %685, %mul59alteredBB
  %686 = sub i32 0, %mul59alteredBB
  %687 = add i32 %636, %686
  %_258 = sub i32 %636, %mul59alteredBB
  %gen259 = mul i32 %687, %mul59alteredBB
  %688 = add i32 %636, -1801233848
  %689 = sub i32 %688, %mul59alteredBB
  %690 = sub i32 %689, -1801233848
  %_260 = sub i32 %636, %mul59alteredBB
  %gen261 = mul i32 %690, %mul59alteredBB
  %691 = add i32 %636, -1772442651
  %692 = sub i32 %691, %mul59alteredBB
  %693 = sub i32 %692, -1772442651
  %sub60alteredBB = sub nsw i32 %636, %mul59alteredBB
  %694 = add i32 0, -748310375
  %695 = sub i32 %694, %693
  %696 = sub i32 %695, -748310375
  %_262 = sub i32 0, %693
  %697 = sub i32 %696, 227749429
  %698 = add i32 %697, 100
  %699 = add i32 %698, 227749429
  %gen263 = add i32 %696, 100
  %700 = add i32 %693, -2039495000
  %701 = sub i32 %700, 100
  %702 = sub i32 %701, -2039495000
  %_264 = sub i32 %693, 100
  %gen265 = mul i32 %702, 100
  %703 = sub i32 0, %693
  %704 = add i32 0, %703
  %_266 = sub i32 0, %693
  %705 = add i32 %704, 322103915
  %706 = add i32 %705, 100
  %707 = sub i32 %706, 322103915
  %gen267 = add i32 %704, 100
  %_268 = shl i32 %693, 100
  %708 = add i32 %693, -1721430058
  %709 = sub i32 %708, 100
  %710 = sub i32 %709, -1721430058
  %_269 = sub i32 %693, 100
  %gen270 = mul i32 %710, 100
  %711 = sub i32 0, 100
  %712 = add i32 %693, %711
  %_271 = sub i32 %693, 100
  %gen272 = mul i32 %712, 100
  %713 = sub i32 0, -1236215668
  %714 = sub i32 %713, %693
  %715 = add i32 %714, -1236215668
  %_273 = sub i32 0, %693
  %716 = sub i32 0, %715
  %717 = sub i32 0, 100
  %718 = add i32 %716, %717
  %719 = sub i32 0, %718
  %gen274 = add i32 %715, 100
  %720 = sub i32 0, -1818257715
  %721 = sub i32 %720, %693
  %722 = add i32 %721, -1818257715
  %_275 = sub i32 0, %693
  %723 = sub i32 %722, -127761668
  %724 = add i32 %723, 100
  %725 = add i32 %724, -127761668
  %gen276 = add i32 %722, 100
  %div61alteredBB = sdiv i32 %693, 100
  store i32 %div61alteredBB, i32* %l, align 4
  %726 = load i32, i32* %shu, align 4
  %727 = load i32, i32* %j, align 4
  %728 = add i32 %727, 473965262
  %729 = sub i32 %728, 10000
  %730 = sub i32 %729, 473965262
  %_277 = sub i32 %727, 10000
  %gen278 = mul i32 %730, 10000
  %_279 = shl i32 %727, 10000
  %731 = sub i32 %727, 422732087
  %732 = sub i32 %731, 10000
  %733 = add i32 %732, 422732087
  %_280 = sub i32 %727, 10000
  %gen281 = mul i32 %733, 10000
  %mul62alteredBB = mul nsw i32 %727, 10000
  %734 = sub i32 0, %726
  %735 = add i32 0, %734
  %_282 = sub i32 0, %726
  %736 = sub i32 0, %mul62alteredBB
  %737 = sub i32 %735, %736
  %gen283 = add i32 %735, %mul62alteredBB
  %738 = sub i32 0, %mul62alteredBB
  %739 = add i32 %726, %738
  %_284 = sub i32 %726, %mul62alteredBB
  %gen285 = mul i32 %739, %mul62alteredBB
  %740 = sub i32 %726, 183570181
  %741 = sub i32 %740, %mul62alteredBB
  %742 = add i32 %741, 183570181
  %sub63alteredBB = sub nsw i32 %726, %mul62alteredBB
  %743 = load i32, i32* %k, align 4
  %744 = sub i32 0, -1348591643
  %745 = sub i32 %744, %743
  %746 = add i32 %745, -1348591643
  %_286 = sub i32 0, %743
  %747 = add i32 %746, -1762818236
  %748 = add i32 %747, 1000
  %749 = sub i32 %748, -1762818236
  %gen287 = add i32 %746, 1000
  %750 = add i32 0, 1627899262
  %751 = sub i32 %750, %743
  %752 = sub i32 %751, 1627899262
  %_288 = sub i32 0, %743
  %753 = sub i32 0, 1000
  %754 = sub i32 %752, %753
  %gen289 = add i32 %752, 1000
  %_290 = shl i32 %743, 1000
  %755 = add i32 %743, 485741730
  %756 = sub i32 %755, 1000
  %757 = sub i32 %756, 485741730
  %_291 = sub i32 %743, 1000
  %gen292 = mul i32 %757, 1000
  %mul64alteredBB = mul nsw i32 %743, 1000
  %758 = sub i32 0, %mul64alteredBB
  %759 = add i32 %742, %758
  %_293 = sub i32 %742, %mul64alteredBB
  %gen294 = mul i32 %759, %mul64alteredBB
  %_295 = shl i32 %742, %mul64alteredBB
  %760 = sub i32 0, %742
  %761 = add i32 0, %760
  %_296 = sub i32 0, %742
  %762 = add i32 %761, 1533666518
  %763 = add i32 %762, %mul64alteredBB
  %764 = sub i32 %763, 1533666518
  %gen297 = add i32 %761, %mul64alteredBB
  %765 = add i32 %742, 741190760
  %766 = sub i32 %765, %mul64alteredBB
  %767 = sub i32 %766, 741190760
  %_298 = sub i32 %742, %mul64alteredBB
  %gen299 = mul i32 %767, %mul64alteredBB
  %768 = add i32 0, 2020663545
  %769 = sub i32 %768, %742
  %770 = sub i32 %769, 2020663545
  %_300 = sub i32 0, %742
  %771 = sub i32 0, %770
  %772 = sub i32 0, %mul64alteredBB
  %773 = add i32 %771, %772
  %774 = sub i32 0, %773
  %gen301 = add i32 %770, %mul64alteredBB
  %775 = sub i32 %742, 1880771427
  %776 = sub i32 %775, %mul64alteredBB
  %777 = add i32 %776, 1880771427
  %_302 = sub i32 %742, %mul64alteredBB
  %gen303 = mul i32 %777, %mul64alteredBB
  %778 = sub i32 0, -1954752129
  %779 = sub i32 %778, %742
  %780 = add i32 %779, -1954752129
  %_304 = sub i32 0, %742
  %781 = sub i32 %780, -398732431
  %782 = add i32 %781, %mul64alteredBB
  %783 = add i32 %782, -398732431
  %gen305 = add i32 %780, %mul64alteredBB
  %784 = sub i32 %742, 1524398967
  %785 = sub i32 %784, %mul64alteredBB
  %786 = add i32 %785, 1524398967
  %_306 = sub i32 %742, %mul64alteredBB
  %gen307 = mul i32 %786, %mul64alteredBB
  %787 = sub i32 0, %mul64alteredBB
  %788 = add i32 %742, %787
  %sub65alteredBB = sub nsw i32 %742, %mul64alteredBB
  %789 = load i32, i32* %l, align 4
  %790 = sub i32 0, 1338287654
  %791 = sub i32 %790, %789
  %792 = add i32 %791, 1338287654
  %_308 = sub i32 0, %789
  %793 = add i32 %792, 1438274002
  %794 = add i32 %793, 100
  %795 = sub i32 %794, 1438274002
  %gen309 = add i32 %792, 100
  %_310 = shl i32 %789, 100
  %mul66alteredBB = mul nsw i32 %789, 100
  %796 = sub i32 0, %788
  %797 = add i32 0, %796
  %_311 = sub i32 0, %788
  %798 = sub i32 %797, -1584727169
  %799 = add i32 %798, %mul66alteredBB
  %800 = add i32 %799, -1584727169
  %gen312 = add i32 %797, %mul66alteredBB
  %_313 = shl i32 %788, %mul66alteredBB
  %801 = sub i32 0, %mul66alteredBB
  %802 = add i32 %788, %801
  %_314 = sub i32 %788, %mul66alteredBB
  %gen315 = mul i32 %802, %mul66alteredBB
  %803 = sub i32 %788, -1250245985
  %804 = sub i32 %803, %mul66alteredBB
  %805 = add i32 %804, -1250245985
  %_316 = sub i32 %788, %mul66alteredBB
  %gen317 = mul i32 %805, %mul66alteredBB
  %806 = sub i32 0, -2145062548
  %807 = sub i32 %806, %788
  %808 = add i32 %807, -2145062548
  %_318 = sub i32 0, %788
  %809 = sub i32 0, %808
  %810 = sub i32 0, %mul66alteredBB
  %811 = add i32 %809, %810
  %812 = sub i32 0, %811
  %gen319 = add i32 %808, %mul66alteredBB
  %813 = sub i32 0, %mul66alteredBB
  %814 = add i32 %788, %813
  %sub67alteredBB = sub nsw i32 %788, %mul66alteredBB
  %815 = sub i32 0, -1322805674
  %816 = sub i32 %815, %814
  %817 = add i32 %816, -1322805674
  %_320 = sub i32 0, %814
  %818 = add i32 %817, 580169910
  %819 = add i32 %818, 10
  %820 = sub i32 %819, 580169910
  %gen321 = add i32 %817, 10
  %821 = add i32 0, -1663501771
  %822 = sub i32 %821, %814
  %823 = sub i32 %822, -1663501771
  %_322 = sub i32 0, %814
  %824 = sub i32 %823, 330495411
  %825 = add i32 %824, 10
  %826 = add i32 %825, 330495411
  %gen323 = add i32 %823, 10
  %div68alteredBB = sdiv i32 %814, 10
  store i32 %div68alteredBB, i32* %m, align 4
  %827 = load i32, i32* %shu, align 4
  %828 = load i32, i32* %j, align 4
  %829 = sub i32 0, %828
  %830 = add i32 0, %829
  %_324 = sub i32 0, %828
  %831 = sub i32 %830, -397836471
  %832 = add i32 %831, 10000
  %833 = add i32 %832, -397836471
  %gen325 = add i32 %830, 10000
  %834 = sub i32 %828, -1268072467
  %835 = sub i32 %834, 10000
  %836 = add i32 %835, -1268072467
  %_326 = sub i32 %828, 10000
  %gen327 = mul i32 %836, 10000
  %837 = sub i32 0, 10000
  %838 = add i32 %828, %837
  %_328 = sub i32 %828, 10000
  %gen329 = mul i32 %838, 10000
  %mul69alteredBB = mul nsw i32 %828, 10000
  %839 = sub i32 0, %827
  %840 = add i32 0, %839
  %_330 = sub i32 0, %827
  %841 = sub i32 0, %840
  %842 = sub i32 0, %mul69alteredBB
  %843 = add i32 %841, %842
  %844 = sub i32 0, %843
  %gen331 = add i32 %840, %mul69alteredBB
  %845 = sub i32 0, %mul69alteredBB
  %846 = add i32 %827, %845
  %sub70alteredBB = sub nsw i32 %827, %mul69alteredBB
  %847 = load i32, i32* %k, align 4
  %848 = sub i32 0, %847
  %849 = add i32 0, %848
  %_332 = sub i32 0, %847
  %850 = sub i32 0, %849
  %851 = sub i32 0, 1000
  %852 = add i32 %850, %851
  %853 = sub i32 0, %852
  %gen333 = add i32 %849, 1000
  %_334 = shl i32 %847, 1000
  %854 = sub i32 %847, 608421254
  %855 = sub i32 %854, 1000
  %856 = add i32 %855, 608421254
  %_335 = sub i32 %847, 1000
  %gen336 = mul i32 %856, 1000
  %mul71alteredBB = mul nsw i32 %847, 1000
  %_337 = shl i32 %846, %mul71alteredBB
  %857 = sub i32 0, %mul71alteredBB
  %858 = add i32 %846, %857
  %_338 = sub i32 %846, %mul71alteredBB
  %gen339 = mul i32 %858, %mul71alteredBB
  %859 = sub i32 0, 132245626
  %860 = sub i32 %859, %846
  %861 = add i32 %860, 132245626
  %_340 = sub i32 0, %846
  %862 = sub i32 0, %861
  %863 = sub i32 0, %mul71alteredBB
  %864 = add i32 %862, %863
  %865 = sub i32 0, %864
  %gen341 = add i32 %861, %mul71alteredBB
  %866 = sub i32 0, %846
  %867 = add i32 0, %866
  %_342 = sub i32 0, %846
  %868 = sub i32 %867, -472602771
  %869 = add i32 %868, %mul71alteredBB
  %870 = add i32 %869, -472602771
  %gen343 = add i32 %867, %mul71alteredBB
  %_344 = shl i32 %846, %mul71alteredBB
  %871 = add i32 0, 1703104259
  %872 = sub i32 %871, %846
  %873 = sub i32 %872, 1703104259
  %_345 = sub i32 0, %846
  %874 = add i32 %873, 1026865594
  %875 = add i32 %874, %mul71alteredBB
  %876 = sub i32 %875, 1026865594
  %gen346 = add i32 %873, %mul71alteredBB
  %877 = add i32 %846, 1695272155
  %878 = sub i32 %877, %mul71alteredBB
  %879 = sub i32 %878, 1695272155
  %sub72alteredBB = sub nsw i32 %846, %mul71alteredBB
  %880 = load i32, i32* %l, align 4
  %881 = sub i32 0, 100
  %882 = add i32 %880, %881
  %_347 = sub i32 %880, 100
  %gen348 = mul i32 %882, 100
  %mul73alteredBB = mul nsw i32 %880, 100
  %883 = add i32 0, -1205591000
  %884 = sub i32 %883, %879
  %885 = sub i32 %884, -1205591000
  %_349 = sub i32 0, %879
  %886 = add i32 %885, 363174686
  %887 = add i32 %886, %mul73alteredBB
  %888 = sub i32 %887, 363174686
  %gen350 = add i32 %885, %mul73alteredBB
  %889 = add i32 %879, -1952581790
  %890 = sub i32 %889, %mul73alteredBB
  %891 = sub i32 %890, -1952581790
  %_351 = sub i32 %879, %mul73alteredBB
  %gen352 = mul i32 %891, %mul73alteredBB
  %892 = add i32 %879, -449497521
  %893 = sub i32 %892, %mul73alteredBB
  %894 = sub i32 %893, -449497521
  %sub74alteredBB = sub nsw i32 %879, %mul73alteredBB
  %895 = load i32, i32* %m, align 4
  %896 = add i32 0, -1912872947
  %897 = sub i32 %896, %895
  %898 = sub i32 %897, -1912872947
  %_353 = sub i32 0, %895
  %899 = add i32 %898, -1431031129
  %900 = add i32 %899, 10
  %901 = sub i32 %900, -1431031129
  %gen354 = add i32 %898, 10
  %902 = add i32 %895, 1854735191
  %903 = sub i32 %902, 10
  %904 = sub i32 %903, 1854735191
  %_355 = sub i32 %895, 10
  %gen356 = mul i32 %904, 10
  %_357 = shl i32 %895, 10
  %_358 = shl i32 %895, 10
  %905 = sub i32 0, -1365615577
  %906 = sub i32 %905, %895
  %907 = add i32 %906, -1365615577
  %_359 = sub i32 0, %895
  %908 = sub i32 0, %907
  %909 = sub i32 0, 10
  %910 = add i32 %908, %909
  %911 = sub i32 0, %910
  %gen360 = add i32 %907, 10
  %912 = sub i32 0, %895
  %913 = add i32 0, %912
  %_361 = sub i32 0, %895
  %914 = add i32 %913, -882958733
  %915 = add i32 %914, 10
  %916 = sub i32 %915, -882958733
  %gen362 = add i32 %913, 10
  %_363 = shl i32 %895, 10
  %917 = add i32 %895, -650788724
  %918 = sub i32 %917, 10
  %919 = sub i32 %918, -650788724
  %_364 = sub i32 %895, 10
  %gen365 = mul i32 %919, 10
  %mul75alteredBB = mul nsw i32 %895, 10
  %_366 = shl i32 %894, %mul75alteredBB
  %920 = sub i32 0, %894
  %921 = add i32 0, %920
  %_367 = sub i32 0, %894
  %922 = sub i32 0, %921
  %923 = sub i32 0, %mul75alteredBB
  %924 = add i32 %922, %923
  %925 = sub i32 0, %924
  %gen368 = add i32 %921, %mul75alteredBB
  %926 = sub i32 0, 2005173896
  %927 = sub i32 %926, %894
  %928 = add i32 %927, 2005173896
  %_369 = sub i32 0, %894
  %929 = add i32 %928, 2000760992
  %930 = add i32 %929, %mul75alteredBB
  %931 = sub i32 %930, 2000760992
  %gen370 = add i32 %928, %mul75alteredBB
  %932 = sub i32 %894, -1876405865
  %933 = sub i32 %932, %mul75alteredBB
  %934 = add i32 %933, -1876405865
  %_371 = sub i32 %894, %mul75alteredBB
  %gen372 = mul i32 %934, %mul75alteredBB
  %935 = sub i32 0, %mul75alteredBB
  %936 = add i32 %894, %935
  %_373 = sub i32 %894, %mul75alteredBB
  %gen374 = mul i32 %936, %mul75alteredBB
  %937 = sub i32 0, %894
  %938 = add i32 0, %937
  %_375 = sub i32 0, %894
  %939 = add i32 %938, 1667004448
  %940 = add i32 %939, %mul75alteredBB
  %941 = sub i32 %940, 1667004448
  %gen376 = add i32 %938, %mul75alteredBB
  %942 = sub i32 0, 1621024775
  %943 = sub i32 %942, %894
  %944 = add i32 %943, 1621024775
  %_377 = sub i32 0, %894
  %945 = sub i32 %944, -1002731277
  %946 = add i32 %945, %mul75alteredBB
  %947 = add i32 %946, -1002731277
  %gen378 = add i32 %944, %mul75alteredBB
  %948 = add i32 %894, -936898421
  %949 = sub i32 %948, %mul75alteredBB
  %950 = sub i32 %949, -936898421
  %sub76alteredBB = sub nsw i32 %894, %mul75alteredBB
  store i32 %950, i32* %n, align 4
  %951 = load i32, i32* %n, align 4
  %952 = sub i32 0, %951
  %953 = add i32 0, %952
  %_379 = sub i32 0, %951
  %954 = add i32 %953, 255991642
  %955 = add i32 %954, 10000
  %956 = sub i32 %955, 255991642
  %gen380 = add i32 %953, 10000
  %mul77alteredBB = mul nsw i32 %951, 10000
  %957 = load i32, i32* %m, align 4
  %_381 = shl i32 %957, 1000
  %958 = sub i32 0, %957
  %959 = add i32 0, %958
  %_382 = sub i32 0, %957
  %960 = sub i32 %959, 480641120
  %961 = add i32 %960, 1000
  %962 = add i32 %961, 480641120
  %gen383 = add i32 %959, 1000
  %963 = sub i32 %957, 1375603862
  %964 = sub i32 %963, 1000
  %965 = add i32 %964, 1375603862
  %_384 = sub i32 %957, 1000
  %gen385 = mul i32 %965, 1000
  %mul78alteredBB = mul nsw i32 %957, 1000
  %966 = sub i32 0, -1450889701
  %967 = sub i32 %966, %mul77alteredBB
  %968 = add i32 %967, -1450889701
  %_386 = sub i32 0, %mul77alteredBB
  %969 = sub i32 0, %968
  %970 = sub i32 0, %mul78alteredBB
  %971 = add i32 %969, %970
  %972 = sub i32 0, %971
  %gen387 = add i32 %968, %mul78alteredBB
  %973 = add i32 %mul77alteredBB, -1432045211
  %974 = sub i32 %973, %mul78alteredBB
  %975 = sub i32 %974, -1432045211
  %_388 = sub i32 %mul77alteredBB, %mul78alteredBB
  %gen389 = mul i32 %975, %mul78alteredBB
  %_390 = shl i32 %mul77alteredBB, %mul78alteredBB
  %_391 = shl i32 %mul77alteredBB, %mul78alteredBB
  %976 = sub i32 %mul77alteredBB, -1005981228
  %977 = sub i32 %976, %mul78alteredBB
  %978 = add i32 %977, -1005981228
  %_392 = sub i32 %mul77alteredBB, %mul78alteredBB
  %gen393 = mul i32 %978, %mul78alteredBB
  %979 = sub i32 0, -38233500
  %980 = sub i32 %979, %mul77alteredBB
  %981 = add i32 %980, -38233500
  %_394 = sub i32 0, %mul77alteredBB
  %982 = add i32 %981, -410243447
  %983 = add i32 %982, %mul78alteredBB
  %984 = sub i32 %983, -410243447
  %gen395 = add i32 %981, %mul78alteredBB
  %985 = sub i32 0, -845122375
  %986 = sub i32 %985, %mul77alteredBB
  %987 = add i32 %986, -845122375
  %_396 = sub i32 0, %mul77alteredBB
  %988 = sub i32 %987, 506979926
  %989 = add i32 %988, %mul78alteredBB
  %990 = add i32 %989, 506979926
  %gen397 = add i32 %987, %mul78alteredBB
  %_398 = shl i32 %mul77alteredBB, %mul78alteredBB
  %991 = sub i32 0, %mul78alteredBB
  %992 = add i32 %mul77alteredBB, %991
  %_399 = sub i32 %mul77alteredBB, %mul78alteredBB
  %gen400 = mul i32 %992, %mul78alteredBB
  %993 = sub i32 0, %mul78alteredBB
  %994 = sub i32 %mul77alteredBB, %993
  %add79alteredBB = add nsw i32 %mul77alteredBB, %mul78alteredBB
  %995 = load i32, i32* %l, align 4
  %996 = add i32 %995, 1844895535
  %997 = sub i32 %996, 100
  %998 = sub i32 %997, 1844895535
  %_401 = sub i32 %995, 100
  %gen402 = mul i32 %998, 100
  %_403 = shl i32 %995, 100
  %999 = sub i32 %995, -1926234187
  %1000 = sub i32 %999, 100
  %1001 = add i32 %1000, -1926234187
  %_404 = sub i32 %995, 100
  %gen405 = mul i32 %1001, 100
  %_406 = shl i32 %995, 100
  %1002 = sub i32 0, 1550540156
  %1003 = sub i32 %1002, %995
  %1004 = add i32 %1003, 1550540156
  %_407 = sub i32 0, %995
  %1005 = add i32 %1004, -960105849
  %1006 = add i32 %1005, 100
  %1007 = sub i32 %1006, -960105849
  %gen408 = add i32 %1004, 100
  %mul80alteredBB = mul nsw i32 %995, 100
  %1008 = add i32 0, 773883618
  %1009 = sub i32 %1008, %994
  %1010 = sub i32 %1009, 773883618
  %_409 = sub i32 0, %994
  %1011 = sub i32 0, %1010
  %1012 = sub i32 0, %mul80alteredBB
  %1013 = add i32 %1011, %1012
  %1014 = sub i32 0, %1013
  %gen410 = add i32 %1010, %mul80alteredBB
  %_411 = shl i32 %994, %mul80alteredBB
  %1015 = sub i32 0, -2142261595
  %1016 = sub i32 %1015, %994
  %1017 = add i32 %1016, -2142261595
  %_412 = sub i32 0, %994
  %1018 = add i32 %1017, -483965466
  %1019 = add i32 %1018, %mul80alteredBB
  %1020 = sub i32 %1019, -483965466
  %gen413 = add i32 %1017, %mul80alteredBB
  %1021 = add i32 0, -366229441
  %1022 = sub i32 %1021, %994
  %1023 = sub i32 %1022, -366229441
  %_414 = sub i32 0, %994
  %1024 = sub i32 0, %1023
  %1025 = sub i32 0, %mul80alteredBB
  %1026 = add i32 %1024, %1025
  %1027 = sub i32 0, %1026
  %gen415 = add i32 %1023, %mul80alteredBB
  %_416 = shl i32 %994, %mul80alteredBB
  %1028 = add i32 %994, -1618525746
  %1029 = sub i32 %1028, %mul80alteredBB
  %1030 = sub i32 %1029, -1618525746
  %_417 = sub i32 %994, %mul80alteredBB
  %gen418 = mul i32 %1030, %mul80alteredBB
  %1031 = sub i32 0, %mul80alteredBB
  %1032 = sub i32 %994, %1031
  %add81alteredBB = add nsw i32 %994, %mul80alteredBB
  %1033 = load i32, i32* %k, align 4
  %1034 = add i32 %1033, -1511524530
  %1035 = sub i32 %1034, 10
  %1036 = sub i32 %1035, -1511524530
  %_419 = sub i32 %1033, 10
  %gen420 = mul i32 %1036, 10
  %1037 = sub i32 0, 404618481
  %1038 = sub i32 %1037, %1033
  %1039 = add i32 %1038, 404618481
  %_421 = sub i32 0, %1033
  %1040 = sub i32 0, %1039
  %1041 = sub i32 0, 10
  %1042 = add i32 %1040, %1041
  %1043 = sub i32 0, %1042
  %gen422 = add i32 %1039, 10
  %_423 = shl i32 %1033, 10
  %1044 = sub i32 0, -1959940844
  %1045 = sub i32 %1044, %1033
  %1046 = add i32 %1045, -1959940844
  %_424 = sub i32 0, %1033
  %1047 = sub i32 0, 10
  %1048 = sub i32 %1046, %1047
  %gen425 = add i32 %1046, 10
  %_426 = shl i32 %1033, 10
  %mul82alteredBB = mul nsw i32 %1033, 10
  %1049 = add i32 %1032, -451411399
  %1050 = sub i32 %1049, %mul82alteredBB
  %1051 = sub i32 %1050, -451411399
  %_427 = sub i32 %1032, %mul82alteredBB
  %gen428 = mul i32 %1051, %mul82alteredBB
  %1052 = sub i32 0, %1032
  %1053 = sub i32 0, %mul82alteredBB
  %1054 = add i32 %1052, %1053
  %1055 = sub i32 0, %1054
  %add83alteredBB = add nsw i32 %1032, %mul82alteredBB
  %1056 = load i32, i32* %j, align 4
  %1057 = add i32 %1055, -1937698871
  %1058 = sub i32 %1057, %1056
  %1059 = sub i32 %1058, -1937698871
  %_429 = sub i32 %1055, %1056
  %gen430 = mul i32 %1059, %1056
  %_431 = shl i32 %1055, %1056
  %1060 = sub i32 0, %1056
  %1061 = add i32 %1055, %1060
  %_432 = sub i32 %1055, %1056
  %gen433 = mul i32 %1061, %1056
  %1062 = sub i32 0, %1055
  %1063 = sub i32 0, %1056
  %1064 = add i32 %1062, %1063
  %1065 = sub i32 0, %1064
  %add84alteredBB = add nsw i32 %1055, %1056
  %call85alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %1065)
  store i32 -1842006774, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB183alteredBB, %originalBB179alteredBB, %originalBB91alteredBB, %originalBB87alteredBB, %originalBBalteredBB, %originalBBpart2435, %originalBB183, %if.then52, %land.lhs.true50, %if.end48, %if.then25, %originalBBpart2181, %originalBB179, %land.lhs.true23, %if.end21, %originalBBpart2177, %originalBB91, %if.then7, %land.lhs.true5, %originalBBpart289, %originalBB87, %if.end, %if.then, %originalBBpart2, %originalBB, %land.lhs.true, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
