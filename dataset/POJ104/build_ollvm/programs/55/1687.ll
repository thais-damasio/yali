; ModuleID = 'source-C-CXX/55/1687.c'
source_filename = "source-C-CXX/55/1687.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define i32 @main() #0 {
entry:
  %cmp.reg2mem = alloca i1
  %e.reg2mem = alloca i32*
  %d.reg2mem = alloca i32*
  %c.reg2mem = alloca i32*
  %b.reg2mem = alloca i32*
  %a.reg2mem = alloca i32*
  %m.reg2mem = alloca i32*
  %retval.reg2mem = alloca i32*
  %.reg2mem397 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = sub i32 %0, -849738680
  %3 = sub i32 %2, 1
  %4 = add i32 %3, -849738680
  %5 = sub i32 %0, 1
  %6 = mul i32 %0, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %.reg2mem
  %9 = icmp slt i32 %1, 10
  store i1 %9, i1* %.reg2mem397
  %switchVar = alloca i32
  store i32 1758815618, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar396 = load i32, i32* %switchVar
  switch i32 %switchVar396, label %switchDefault [
    i32 1758815618, label %first
    i32 203793944, label %originalBB
    i32 824155371, label %originalBBpart2
    i32 -1570413608, label %if.then
    i32 -1041912661, label %originalBB84
    i32 -928974585, label %originalBBpart2279
    i32 -1942508376, label %if.else
    i32 800245430, label %if.then31
    i32 -569312536, label %if.else54
    i32 950776705, label %if.then56
    i32 1933407881, label %originalBB281
    i32 1879048187, label %originalBBpart2394
    i32 495001190, label %if.else70
    i32 974450971, label %if.then72
    i32 -155516568, label %if.else79
    i32 -2013569138, label %if.end
    i32 -1049313681, label %if.end81
    i32 -189900533, label %if.end82
    i32 2146262693, label %if.end83
    i32 140127851, label %originalBBalteredBB
    i32 79921463, label %originalBB84alteredBB
    i32 -1293509947, label %originalBB281alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload398 = load volatile i1, i1* %.reg2mem397
  %10 = xor i1 %.reload, true
  %11 = xor i1 %.reload398, true
  %12 = xor i1 false, true
  %13 = and i1 %10, false
  %14 = and i1 %.reload, %12
  %15 = and i1 %11, false
  %16 = and i1 %.reload398, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 false, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %.reload, %.reload398
  %26 = select i1 %24, i32 203793944, i32 140127851
  store i32 %26, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %retval = alloca i32, align 4
  store i32* %retval, i32** %retval.reg2mem
  %m = alloca i32, align 4
  store i32* %m, i32** %m.reg2mem
  %a = alloca i32, align 4
  store i32* %a, i32** %a.reg2mem
  %b = alloca i32, align 4
  store i32* %b, i32** %b.reg2mem
  %c = alloca i32, align 4
  store i32* %c, i32** %c.reg2mem
  %d = alloca i32, align 4
  store i32* %d, i32** %d.reg2mem
  %e = alloca i32, align 4
  store i32* %e, i32** %e.reg2mem
  %retval.reload399 = load volatile i32*, i32** %retval.reg2mem
  store i32 0, i32* %retval.reload399, align 4
  %m.reload426 = load volatile i32*, i32** %m.reg2mem
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %m.reload426)
  %m.reload425 = load volatile i32*, i32** %m.reg2mem
  %27 = load i32, i32* %m.reload425, align 4
  %cmp = icmp sgt i32 %27, 9999
  store i1 %cmp, i1* %cmp.reg2mem
  %28 = load i32, i32* @x
  %29 = load i32, i32* @y
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 824155371, i32 140127851
  store i32 %41, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  %cmp.reload = load volatile i1, i1* %cmp.reg2mem
  %42 = select i1 %cmp.reload, i32 -1570413608, i32 -1942508376
  store i32 %42, i32* %switchVar
  br label %loopEnd

if.then:                                          ; preds = %loopEntry
  %43 = load i32, i32* @x
  %44 = load i32, i32* @y
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1041912661, i32 79921463
  store i32 %56, i32* %switchVar
  br label %loopEnd

originalBB84:                                     ; preds = %loopEntry
  %m.reload424 = load volatile i32*, i32** %m.reg2mem
  %57 = load i32, i32* %m.reload424, align 4
  %div = sdiv i32 %57, 10000
  %a.reload453 = load volatile i32*, i32** %a.reg2mem
  store i32 %div, i32* %a.reload453, align 4
  %m.reload423 = load volatile i32*, i32** %m.reg2mem
  %58 = load i32, i32* %m.reload423, align 4
  %a.reload452 = load volatile i32*, i32** %a.reg2mem
  %59 = load i32, i32* %a.reload452, align 4
  %mul = mul nsw i32 %59, 10000
  %60 = sub i32 0, %mul
  %61 = add i32 %58, %60
  %sub = sub nsw i32 %58, %mul
  %div1 = sdiv i32 %61, 1000
  %b.reload474 = load volatile i32*, i32** %b.reg2mem
  store i32 %div1, i32* %b.reload474, align 4
  %m.reload422 = load volatile i32*, i32** %m.reg2mem
  %62 = load i32, i32* %m.reload422, align 4
  %a.reload451 = load volatile i32*, i32** %a.reg2mem
  %63 = load i32, i32* %a.reload451, align 4
  %mul2 = mul nsw i32 %63, 10000
  %64 = sub i32 %62, -2114023188
  %65 = sub i32 %64, %mul2
  %66 = add i32 %65, -2114023188
  %sub3 = sub nsw i32 %62, %mul2
  %b.reload473 = load volatile i32*, i32** %b.reg2mem
  %67 = load i32, i32* %b.reload473, align 4
  %mul4 = mul nsw i32 %67, 1000
  %68 = sub i32 0, %mul4
  %69 = add i32 %66, %68
  %sub5 = sub nsw i32 %66, %mul4
  %div6 = sdiv i32 %69, 100
  %c.reload488 = load volatile i32*, i32** %c.reg2mem
  store i32 %div6, i32* %c.reload488, align 4
  %m.reload421 = load volatile i32*, i32** %m.reg2mem
  %70 = load i32, i32* %m.reload421, align 4
  %a.reload450 = load volatile i32*, i32** %a.reg2mem
  %71 = load i32, i32* %a.reload450, align 4
  %mul7 = mul nsw i32 %71, 10000
  %72 = sub i32 0, %mul7
  %73 = add i32 %70, %72
  %sub8 = sub nsw i32 %70, %mul7
  %b.reload472 = load volatile i32*, i32** %b.reg2mem
  %74 = load i32, i32* %b.reload472, align 4
  %mul9 = mul nsw i32 %74, 1000
  %75 = add i32 %73, -1422999884
  %76 = sub i32 %75, %mul9
  %77 = sub i32 %76, -1422999884
  %sub10 = sub nsw i32 %73, %mul9
  %c.reload487 = load volatile i32*, i32** %c.reg2mem
  %78 = load i32, i32* %c.reload487, align 4
  %mul11 = mul nsw i32 %78, 100
  %79 = add i32 %77, 882386427
  %80 = sub i32 %79, %mul11
  %81 = sub i32 %80, 882386427
  %sub12 = sub nsw i32 %77, %mul11
  %div13 = sdiv i32 %81, 10
  %d.reload495 = load volatile i32*, i32** %d.reg2mem
  store i32 %div13, i32* %d.reload495, align 4
  %m.reload420 = load volatile i32*, i32** %m.reg2mem
  %82 = load i32, i32* %m.reload420, align 4
  %a.reload449 = load volatile i32*, i32** %a.reg2mem
  %83 = load i32, i32* %a.reload449, align 4
  %mul14 = mul nsw i32 %83, 10000
  %84 = sub i32 0, %mul14
  %85 = add i32 %82, %84
  %sub15 = sub nsw i32 %82, %mul14
  %b.reload471 = load volatile i32*, i32** %b.reg2mem
  %86 = load i32, i32* %b.reload471, align 4
  %mul16 = mul nsw i32 %86, 1000
  %87 = add i32 %85, 1986967451
  %88 = sub i32 %87, %mul16
  %89 = sub i32 %88, 1986967451
  %sub17 = sub nsw i32 %85, %mul16
  %c.reload486 = load volatile i32*, i32** %c.reg2mem
  %90 = load i32, i32* %c.reload486, align 4
  %mul18 = mul nsw i32 %90, 100
  %91 = sub i32 %89, -750318299
  %92 = sub i32 %91, %mul18
  %93 = add i32 %92, -750318299
  %sub19 = sub nsw i32 %89, %mul18
  %d.reload494 = load volatile i32*, i32** %d.reg2mem
  %94 = load i32, i32* %d.reload494, align 4
  %mul20 = mul nsw i32 %94, 10
  %95 = add i32 %93, 926949427
  %96 = sub i32 %95, %mul20
  %97 = sub i32 %96, 926949427
  %sub21 = sub nsw i32 %93, %mul20
  %e.reload498 = load volatile i32*, i32** %e.reg2mem
  store i32 %97, i32* %e.reload498, align 4
  %e.reload497 = load volatile i32*, i32** %e.reg2mem
  %98 = load i32, i32* %e.reload497, align 4
  %mul22 = mul nsw i32 %98, 10000
  %d.reload493 = load volatile i32*, i32** %d.reg2mem
  %99 = load i32, i32* %d.reload493, align 4
  %mul23 = mul nsw i32 %99, 1000
  %100 = sub i32 0, %mul22
  %101 = sub i32 0, %mul23
  %102 = add i32 %100, %101
  %103 = sub i32 0, %102
  %add = add nsw i32 %mul22, %mul23
  %c.reload485 = load volatile i32*, i32** %c.reg2mem
  %104 = load i32, i32* %c.reload485, align 4
  %mul24 = mul nsw i32 %104, 100
  %105 = add i32 %103, -1390514631
  %106 = add i32 %105, %mul24
  %107 = sub i32 %106, -1390514631
  %add25 = add nsw i32 %103, %mul24
  %b.reload470 = load volatile i32*, i32** %b.reg2mem
  %108 = load i32, i32* %b.reload470, align 4
  %mul26 = mul nsw i32 %108, 10
  %109 = sub i32 0, %107
  %110 = sub i32 0, %mul26
  %111 = add i32 %109, %110
  %112 = sub i32 0, %111
  %add27 = add nsw i32 %107, %mul26
  %a.reload448 = load volatile i32*, i32** %a.reg2mem
  %113 = load i32, i32* %a.reload448, align 4
  %114 = sub i32 0, %113
  %115 = sub i32 %112, %114
  %add28 = add nsw i32 %112, %113
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %115)
  %116 = load i32, i32* @x
  %117 = load i32, i32* @y
  %118 = sub i32 %116, 914323801
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 914323801
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 -928974585, i32 79921463
  store i32 %130, i32* %switchVar
  br label %loopEnd

originalBBpart2279:                               ; preds = %loopEntry
  store i32 2146262693, i32* %switchVar
  br label %loopEnd

if.else:                                          ; preds = %loopEntry
  %m.reload419 = load volatile i32*, i32** %m.reg2mem
  %131 = load i32, i32* %m.reload419, align 4
  %cmp30 = icmp sgt i32 %131, 999
  %132 = select i1 %cmp30, i32 800245430, i32 -569312536
  store i32 %132, i32* %switchVar
  br label %loopEnd

if.then31:                                        ; preds = %loopEntry
  %m.reload418 = load volatile i32*, i32** %m.reg2mem
  %133 = load i32, i32* %m.reload418, align 4
  %div32 = sdiv i32 %133, 1000
  %a.reload447 = load volatile i32*, i32** %a.reg2mem
  store i32 %div32, i32* %a.reload447, align 4
  %m.reload417 = load volatile i32*, i32** %m.reg2mem
  %134 = load i32, i32* %m.reload417, align 4
  %a.reload446 = load volatile i32*, i32** %a.reg2mem
  %135 = load i32, i32* %a.reload446, align 4
  %mul33 = mul nsw i32 %135, 1000
  %136 = sub i32 %134, -1944586241
  %137 = sub i32 %136, %mul33
  %138 = add i32 %137, -1944586241
  %sub34 = sub nsw i32 %134, %mul33
  %div35 = sdiv i32 %138, 100
  %b.reload469 = load volatile i32*, i32** %b.reg2mem
  store i32 %div35, i32* %b.reload469, align 4
  %m.reload416 = load volatile i32*, i32** %m.reg2mem
  %139 = load i32, i32* %m.reload416, align 4
  %a.reload445 = load volatile i32*, i32** %a.reg2mem
  %140 = load i32, i32* %a.reload445, align 4
  %mul36 = mul nsw i32 %140, 1000
  %141 = sub i32 0, %mul36
  %142 = add i32 %139, %141
  %sub37 = sub nsw i32 %139, %mul36
  %b.reload468 = load volatile i32*, i32** %b.reg2mem
  %143 = load i32, i32* %b.reload468, align 4
  %mul38 = mul nsw i32 %143, 100
  %144 = sub i32 %142, 1727843268
  %145 = sub i32 %144, %mul38
  %146 = add i32 %145, 1727843268
  %sub39 = sub nsw i32 %142, %mul38
  %div40 = sdiv i32 %146, 10
  %c.reload484 = load volatile i32*, i32** %c.reg2mem
  store i32 %div40, i32* %c.reload484, align 4
  %m.reload415 = load volatile i32*, i32** %m.reg2mem
  %147 = load i32, i32* %m.reload415, align 4
  %a.reload444 = load volatile i32*, i32** %a.reg2mem
  %148 = load i32, i32* %a.reload444, align 4
  %mul41 = mul nsw i32 %148, 1000
  %149 = sub i32 %147, 744409880
  %150 = sub i32 %149, %mul41
  %151 = add i32 %150, 744409880
  %sub42 = sub nsw i32 %147, %mul41
  %b.reload467 = load volatile i32*, i32** %b.reg2mem
  %152 = load i32, i32* %b.reload467, align 4
  %mul43 = mul nsw i32 %152, 100
  %153 = sub i32 %151, 482388201
  %154 = sub i32 %153, %mul43
  %155 = add i32 %154, 482388201
  %sub44 = sub nsw i32 %151, %mul43
  %c.reload483 = load volatile i32*, i32** %c.reg2mem
  %156 = load i32, i32* %c.reload483, align 4
  %mul45 = mul nsw i32 %156, 10
  %157 = sub i32 0, %mul45
  %158 = add i32 %155, %157
  %sub46 = sub nsw i32 %155, %mul45
  %d.reload492 = load volatile i32*, i32** %d.reg2mem
  store i32 %158, i32* %d.reload492, align 4
  %d.reload491 = load volatile i32*, i32** %d.reg2mem
  %159 = load i32, i32* %d.reload491, align 4
  %mul47 = mul nsw i32 %159, 1000
  %c.reload482 = load volatile i32*, i32** %c.reg2mem
  %160 = load i32, i32* %c.reload482, align 4
  %mul48 = mul nsw i32 %160, 100
  %161 = sub i32 %mul47, -1604849886
  %162 = add i32 %161, %mul48
  %163 = add i32 %162, -1604849886
  %add49 = add nsw i32 %mul47, %mul48
  %b.reload466 = load volatile i32*, i32** %b.reg2mem
  %164 = load i32, i32* %b.reload466, align 4
  %mul50 = mul nsw i32 %164, 10
  %165 = add i32 %163, -1136581389
  %166 = add i32 %165, %mul50
  %167 = sub i32 %166, -1136581389
  %add51 = add nsw i32 %163, %mul50
  %a.reload443 = load volatile i32*, i32** %a.reg2mem
  %168 = load i32, i32* %a.reload443, align 4
  %169 = add i32 %167, -1727812797
  %170 = add i32 %169, %168
  %171 = sub i32 %170, -1727812797
  %add52 = add nsw i32 %167, %168
  %call53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %171)
  store i32 -189900533, i32* %switchVar
  br label %loopEnd

if.else54:                                        ; preds = %loopEntry
  %m.reload414 = load volatile i32*, i32** %m.reg2mem
  %172 = load i32, i32* %m.reload414, align 4
  %cmp55 = icmp sgt i32 %172, 99
  %173 = select i1 %cmp55, i32 950776705, i32 495001190
  store i32 %173, i32* %switchVar
  br label %loopEnd

if.then56:                                        ; preds = %loopEntry
  %174 = load i32, i32* @x
  %175 = load i32, i32* @y
  %176 = add i32 %174, -918804393
  %177 = sub i32 %176, 1
  %178 = sub i32 %177, -918804393
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = and i1 %182, %183
  %185 = xor i1 %182, %183
  %186 = or i1 %184, %185
  %187 = or i1 %182, %183
  %188 = select i1 %186, i32 1933407881, i32 -1293509947
  store i32 %188, i32* %switchVar
  br label %loopEnd

originalBB281:                                    ; preds = %loopEntry
  %m.reload413 = load volatile i32*, i32** %m.reg2mem
  %189 = load i32, i32* %m.reload413, align 4
  %div57 = sdiv i32 %189, 100
  %a.reload442 = load volatile i32*, i32** %a.reg2mem
  store i32 %div57, i32* %a.reload442, align 4
  %m.reload412 = load volatile i32*, i32** %m.reg2mem
  %190 = load i32, i32* %m.reload412, align 4
  %a.reload441 = load volatile i32*, i32** %a.reg2mem
  %191 = load i32, i32* %a.reload441, align 4
  %mul58 = mul nsw i32 %191, 100
  %192 = add i32 %190, 1898290755
  %193 = sub i32 %192, %mul58
  %194 = sub i32 %193, 1898290755
  %sub59 = sub nsw i32 %190, %mul58
  %div60 = sdiv i32 %194, 10
  %b.reload465 = load volatile i32*, i32** %b.reg2mem
  store i32 %div60, i32* %b.reload465, align 4
  %m.reload411 = load volatile i32*, i32** %m.reg2mem
  %195 = load i32, i32* %m.reload411, align 4
  %a.reload440 = load volatile i32*, i32** %a.reg2mem
  %196 = load i32, i32* %a.reload440, align 4
  %mul61 = mul nsw i32 %196, 100
  %197 = sub i32 0, %mul61
  %198 = add i32 %195, %197
  %sub62 = sub nsw i32 %195, %mul61
  %b.reload464 = load volatile i32*, i32** %b.reg2mem
  %199 = load i32, i32* %b.reload464, align 4
  %mul63 = mul nsw i32 %199, 10
  %200 = sub i32 0, %mul63
  %201 = add i32 %198, %200
  %sub64 = sub nsw i32 %198, %mul63
  %c.reload481 = load volatile i32*, i32** %c.reg2mem
  store i32 %201, i32* %c.reload481, align 4
  %c.reload480 = load volatile i32*, i32** %c.reg2mem
  %202 = load i32, i32* %c.reload480, align 4
  %mul65 = mul nsw i32 %202, 100
  %b.reload463 = load volatile i32*, i32** %b.reg2mem
  %203 = load i32, i32* %b.reload463, align 4
  %mul66 = mul nsw i32 %203, 10
  %204 = sub i32 %mul65, -813741946
  %205 = add i32 %204, %mul66
  %206 = add i32 %205, -813741946
  %add67 = add nsw i32 %mul65, %mul66
  %a.reload439 = load volatile i32*, i32** %a.reg2mem
  %207 = load i32, i32* %a.reload439, align 4
  %208 = add i32 %206, 1602267903
  %209 = add i32 %208, %207
  %210 = sub i32 %209, 1602267903
  %add68 = add nsw i32 %206, %207
  %call69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %210)
  %211 = load i32, i32* @x
  %212 = load i32, i32* @y
  %213 = sub i32 %211, -1561631263
  %214 = sub i32 %213, 1
  %215 = add i32 %214, -1561631263
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = xor i1 %219, true
  %222 = xor i1 %220, true
  %223 = xor i1 false, true
  %224 = and i1 %221, false
  %225 = and i1 %219, %223
  %226 = and i1 %222, false
  %227 = and i1 %220, %223
  %228 = or i1 %224, %225
  %229 = or i1 %226, %227
  %230 = xor i1 %228, %229
  %231 = or i1 %221, %222
  %232 = xor i1 %231, true
  %233 = or i1 false, %223
  %234 = and i1 %232, %233
  %235 = or i1 %230, %234
  %236 = or i1 %219, %220
  %237 = select i1 %235, i32 1879048187, i32 -1293509947
  store i32 %237, i32* %switchVar
  br label %loopEnd

originalBBpart2394:                               ; preds = %loopEntry
  store i32 -1049313681, i32* %switchVar
  br label %loopEnd

if.else70:                                        ; preds = %loopEntry
  %m.reload410 = load volatile i32*, i32** %m.reg2mem
  %238 = load i32, i32* %m.reload410, align 4
  %cmp71 = icmp sgt i32 %238, 9
  %239 = select i1 %cmp71, i32 974450971, i32 -155516568
  store i32 %239, i32* %switchVar
  br label %loopEnd

if.then72:                                        ; preds = %loopEntry
  %m.reload409 = load volatile i32*, i32** %m.reg2mem
  %240 = load i32, i32* %m.reload409, align 4
  %div73 = sdiv i32 %240, 10
  %a.reload438 = load volatile i32*, i32** %a.reg2mem
  store i32 %div73, i32* %a.reload438, align 4
  %m.reload408 = load volatile i32*, i32** %m.reg2mem
  %241 = load i32, i32* %m.reload408, align 4
  %a.reload437 = load volatile i32*, i32** %a.reg2mem
  %242 = load i32, i32* %a.reload437, align 4
  %mul74 = mul nsw i32 %242, 10
  %243 = sub i32 0, %mul74
  %244 = add i32 %241, %243
  %sub75 = sub nsw i32 %241, %mul74
  %b.reload462 = load volatile i32*, i32** %b.reg2mem
  store i32 %244, i32* %b.reload462, align 4
  %b.reload461 = load volatile i32*, i32** %b.reg2mem
  %245 = load i32, i32* %b.reload461, align 4
  %mul76 = mul nsw i32 %245, 10
  %a.reload436 = load volatile i32*, i32** %a.reg2mem
  %246 = load i32, i32* %a.reload436, align 4
  %247 = sub i32 0, %246
  %248 = sub i32 %mul76, %247
  %add77 = add nsw i32 %mul76, %246
  %call78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %248)
  store i32 -2013569138, i32* %switchVar
  br label %loopEnd

if.else79:                                        ; preds = %loopEntry
  %m.reload407 = load volatile i32*, i32** %m.reg2mem
  %249 = load i32, i32* %m.reload407, align 4
  %call80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %249)
  store i32 -2013569138, i32* %switchVar
  br label %loopEnd

if.end:                                           ; preds = %loopEntry
  store i32 -1049313681, i32* %switchVar
  br label %loopEnd

if.end81:                                         ; preds = %loopEntry
  store i32 -189900533, i32* %switchVar
  br label %loopEnd

if.end82:                                         ; preds = %loopEntry
  store i32 2146262693, i32* %switchVar
  br label %loopEnd

if.end83:                                         ; preds = %loopEntry
  %retval.reload = load volatile i32*, i32** %retval.reg2mem
  %250 = load i32, i32* %retval.reload, align 4
  ret i32 %250

originalBBalteredBB:                              ; preds = %loopEntry
  %retvalalteredBB = alloca i32, align 4
  %malteredBB = alloca i32, align 4
  %aalteredBB = alloca i32, align 4
  %balteredBB = alloca i32, align 4
  %calteredBB = alloca i32, align 4
  %dalteredBB = alloca i32, align 4
  %ealteredBB = alloca i32, align 4
  store i32 0, i32* %retvalalteredBB, align 4
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %malteredBB)
  %251 = load i32, i32* %malteredBB, align 4
  %cmpalteredBB = icmp sgt i32 %251, 9999
  store i32 203793944, i32* %switchVar
  br label %loopEnd

originalBB84alteredBB:                            ; preds = %loopEntry
  %m.reload406 = load volatile i32*, i32** %m.reg2mem
  %252 = load i32, i32* %m.reload406, align 4
  %253 = add i32 0, -487070600
  %254 = sub i32 %253, %252
  %255 = sub i32 %254, -487070600
  %_ = sub i32 0, %252
  %256 = sub i32 0, %255
  %257 = sub i32 0, 10000
  %258 = add i32 %256, %257
  %259 = sub i32 0, %258
  %gen = add i32 %255, 10000
  %260 = sub i32 0, 10000
  %261 = add i32 %252, %260
  %_85 = sub i32 %252, 10000
  %gen86 = mul i32 %261, 10000
  %_87 = shl i32 %252, 10000
  %_88 = shl i32 %252, 10000
  %_89 = shl i32 %252, 10000
  %262 = sub i32 0, 10000
  %263 = add i32 %252, %262
  %_90 = sub i32 %252, 10000
  %gen91 = mul i32 %263, 10000
  %divalteredBB = sdiv i32 %252, 10000
  %a.reload435 = load volatile i32*, i32** %a.reg2mem
  store i32 %divalteredBB, i32* %a.reload435, align 4
  %m.reload405 = load volatile i32*, i32** %m.reg2mem
  %264 = load i32, i32* %m.reload405, align 4
  %a.reload434 = load volatile i32*, i32** %a.reg2mem
  %265 = load i32, i32* %a.reload434, align 4
  %mulalteredBB = mul nsw i32 %265, 10000
  %266 = sub i32 0, %mulalteredBB
  %267 = add i32 %264, %266
  %_92 = sub i32 %264, %mulalteredBB
  %gen93 = mul i32 %267, %mulalteredBB
  %_94 = shl i32 %264, %mulalteredBB
  %_95 = shl i32 %264, %mulalteredBB
  %_96 = shl i32 %264, %mulalteredBB
  %268 = sub i32 0, -1127050683
  %269 = sub i32 %268, %264
  %270 = add i32 %269, -1127050683
  %_97 = sub i32 0, %264
  %271 = sub i32 %270, 703142628
  %272 = add i32 %271, %mulalteredBB
  %273 = add i32 %272, 703142628
  %gen98 = add i32 %270, %mulalteredBB
  %_99 = shl i32 %264, %mulalteredBB
  %274 = sub i32 %264, -926382284
  %275 = sub i32 %274, %mulalteredBB
  %276 = add i32 %275, -926382284
  %subalteredBB = sub nsw i32 %264, %mulalteredBB
  %277 = add i32 0, 1651999372
  %278 = sub i32 %277, %276
  %279 = sub i32 %278, 1651999372
  %_100 = sub i32 0, %276
  %280 = sub i32 0, %279
  %281 = sub i32 0, 1000
  %282 = add i32 %280, %281
  %283 = sub i32 0, %282
  %gen101 = add i32 %279, 1000
  %284 = sub i32 %276, 2034368552
  %285 = sub i32 %284, 1000
  %286 = add i32 %285, 2034368552
  %_102 = sub i32 %276, 1000
  %gen103 = mul i32 %286, 1000
  %div1alteredBB = sdiv i32 %276, 1000
  %b.reload460 = load volatile i32*, i32** %b.reg2mem
  store i32 %div1alteredBB, i32* %b.reload460, align 4
  %m.reload404 = load volatile i32*, i32** %m.reg2mem
  %287 = load i32, i32* %m.reload404, align 4
  %a.reload433 = load volatile i32*, i32** %a.reg2mem
  %288 = load i32, i32* %a.reload433, align 4
  %289 = sub i32 0, 10000
  %290 = add i32 %288, %289
  %_104 = sub i32 %288, 10000
  %gen105 = mul i32 %290, 10000
  %_106 = shl i32 %288, 10000
  %mul2alteredBB = mul nsw i32 %288, 10000
  %291 = sub i32 0, %287
  %292 = add i32 0, %291
  %_107 = sub i32 0, %287
  %293 = sub i32 0, %mul2alteredBB
  %294 = sub i32 %292, %293
  %gen108 = add i32 %292, %mul2alteredBB
  %_109 = shl i32 %287, %mul2alteredBB
  %_110 = shl i32 %287, %mul2alteredBB
  %295 = sub i32 0, %mul2alteredBB
  %296 = add i32 %287, %295
  %sub3alteredBB = sub nsw i32 %287, %mul2alteredBB
  %b.reload459 = load volatile i32*, i32** %b.reg2mem
  %297 = load i32, i32* %b.reload459, align 4
  %_111 = shl i32 %297, 1000
  %_112 = shl i32 %297, 1000
  %mul4alteredBB = mul nsw i32 %297, 1000
  %298 = sub i32 %296, 1217364727
  %299 = sub i32 %298, %mul4alteredBB
  %300 = add i32 %299, 1217364727
  %_113 = sub i32 %296, %mul4alteredBB
  %gen114 = mul i32 %300, %mul4alteredBB
  %301 = add i32 0, -1770220242
  %302 = sub i32 %301, %296
  %303 = sub i32 %302, -1770220242
  %_115 = sub i32 0, %296
  %304 = sub i32 %303, 175286524
  %305 = add i32 %304, %mul4alteredBB
  %306 = add i32 %305, 175286524
  %gen116 = add i32 %303, %mul4alteredBB
  %307 = sub i32 %296, 843927107
  %308 = sub i32 %307, %mul4alteredBB
  %309 = add i32 %308, 843927107
  %sub5alteredBB = sub nsw i32 %296, %mul4alteredBB
  %_117 = shl i32 %309, 100
  %div6alteredBB = sdiv i32 %309, 100
  %c.reload479 = load volatile i32*, i32** %c.reg2mem
  store i32 %div6alteredBB, i32* %c.reload479, align 4
  %m.reload403 = load volatile i32*, i32** %m.reg2mem
  %310 = load i32, i32* %m.reload403, align 4
  %a.reload432 = load volatile i32*, i32** %a.reg2mem
  %311 = load i32, i32* %a.reload432, align 4
  %312 = sub i32 0, %311
  %313 = add i32 0, %312
  %_118 = sub i32 0, %311
  %314 = sub i32 0, %313
  %315 = sub i32 0, 10000
  %316 = add i32 %314, %315
  %317 = sub i32 0, %316
  %gen119 = add i32 %313, 10000
  %318 = sub i32 0, %311
  %319 = add i32 0, %318
  %_120 = sub i32 0, %311
  %320 = sub i32 %319, -116049357
  %321 = add i32 %320, 10000
  %322 = add i32 %321, -116049357
  %gen121 = add i32 %319, 10000
  %_122 = shl i32 %311, 10000
  %323 = sub i32 0, %311
  %324 = add i32 0, %323
  %_123 = sub i32 0, %311
  %325 = sub i32 0, 10000
  %326 = sub i32 %324, %325
  %gen124 = add i32 %324, 10000
  %mul7alteredBB = mul nsw i32 %311, 10000
  %327 = sub i32 0, %mul7alteredBB
  %328 = add i32 %310, %327
  %_125 = sub i32 %310, %mul7alteredBB
  %gen126 = mul i32 %328, %mul7alteredBB
  %_127 = shl i32 %310, %mul7alteredBB
  %_128 = shl i32 %310, %mul7alteredBB
  %329 = add i32 %310, -1714712613
  %330 = sub i32 %329, %mul7alteredBB
  %331 = sub i32 %330, -1714712613
  %_129 = sub i32 %310, %mul7alteredBB
  %gen130 = mul i32 %331, %mul7alteredBB
  %_131 = shl i32 %310, %mul7alteredBB
  %_132 = shl i32 %310, %mul7alteredBB
  %_133 = shl i32 %310, %mul7alteredBB
  %_134 = shl i32 %310, %mul7alteredBB
  %332 = sub i32 %310, -1459942196
  %333 = sub i32 %332, %mul7alteredBB
  %334 = add i32 %333, -1459942196
  %sub8alteredBB = sub nsw i32 %310, %mul7alteredBB
  %b.reload458 = load volatile i32*, i32** %b.reg2mem
  %335 = load i32, i32* %b.reload458, align 4
  %_135 = shl i32 %335, 1000
  %336 = sub i32 0, 1000
  %337 = add i32 %335, %336
  %_136 = sub i32 %335, 1000
  %gen137 = mul i32 %337, 1000
  %338 = sub i32 %335, -557597828
  %339 = sub i32 %338, 1000
  %340 = add i32 %339, -557597828
  %_138 = sub i32 %335, 1000
  %gen139 = mul i32 %340, 1000
  %341 = sub i32 %335, -1735768546
  %342 = sub i32 %341, 1000
  %343 = add i32 %342, -1735768546
  %_140 = sub i32 %335, 1000
  %gen141 = mul i32 %343, 1000
  %mul9alteredBB = mul nsw i32 %335, 1000
  %344 = sub i32 0, %mul9alteredBB
  %345 = add i32 %334, %344
  %_142 = sub i32 %334, %mul9alteredBB
  %gen143 = mul i32 %345, %mul9alteredBB
  %346 = add i32 %334, 1442332366
  %347 = sub i32 %346, %mul9alteredBB
  %348 = sub i32 %347, 1442332366
  %sub10alteredBB = sub nsw i32 %334, %mul9alteredBB
  %c.reload478 = load volatile i32*, i32** %c.reg2mem
  %349 = load i32, i32* %c.reload478, align 4
  %350 = add i32 0, 1183716375
  %351 = sub i32 %350, %349
  %352 = sub i32 %351, 1183716375
  %_144 = sub i32 0, %349
  %353 = sub i32 0, 100
  %354 = sub i32 %352, %353
  %gen145 = add i32 %352, 100
  %_146 = shl i32 %349, 100
  %355 = add i32 0, -521168140
  %356 = sub i32 %355, %349
  %357 = sub i32 %356, -521168140
  %_147 = sub i32 0, %349
  %358 = sub i32 0, %357
  %359 = sub i32 0, 100
  %360 = add i32 %358, %359
  %361 = sub i32 0, %360
  %gen148 = add i32 %357, 100
  %362 = sub i32 0, 100
  %363 = add i32 %349, %362
  %_149 = sub i32 %349, 100
  %gen150 = mul i32 %363, 100
  %364 = add i32 %349, 1348707337
  %365 = sub i32 %364, 100
  %366 = sub i32 %365, 1348707337
  %_151 = sub i32 %349, 100
  %gen152 = mul i32 %366, 100
  %367 = add i32 0, 194900446
  %368 = sub i32 %367, %349
  %369 = sub i32 %368, 194900446
  %_153 = sub i32 0, %349
  %370 = sub i32 0, %369
  %371 = sub i32 0, 100
  %372 = add i32 %370, %371
  %373 = sub i32 0, %372
  %gen154 = add i32 %369, 100
  %374 = add i32 %349, 146966112
  %375 = sub i32 %374, 100
  %376 = sub i32 %375, 146966112
  %_155 = sub i32 %349, 100
  %gen156 = mul i32 %376, 100
  %mul11alteredBB = mul nsw i32 %349, 100
  %377 = sub i32 %348, -712957877
  %378 = sub i32 %377, %mul11alteredBB
  %379 = add i32 %378, -712957877
  %_157 = sub i32 %348, %mul11alteredBB
  %gen158 = mul i32 %379, %mul11alteredBB
  %380 = add i32 0, -446189616
  %381 = sub i32 %380, %348
  %382 = sub i32 %381, -446189616
  %_159 = sub i32 0, %348
  %383 = sub i32 %382, 1821624769
  %384 = add i32 %383, %mul11alteredBB
  %385 = add i32 %384, 1821624769
  %gen160 = add i32 %382, %mul11alteredBB
  %386 = add i32 %348, -2066636486
  %387 = sub i32 %386, %mul11alteredBB
  %388 = sub i32 %387, -2066636486
  %sub12alteredBB = sub nsw i32 %348, %mul11alteredBB
  %_161 = shl i32 %388, 10
  %389 = sub i32 0, 10
  %390 = add i32 %388, %389
  %_162 = sub i32 %388, 10
  %gen163 = mul i32 %390, 10
  %391 = add i32 0, -1217309008
  %392 = sub i32 %391, %388
  %393 = sub i32 %392, -1217309008
  %_164 = sub i32 0, %388
  %394 = sub i32 0, %393
  %395 = sub i32 0, 10
  %396 = add i32 %394, %395
  %397 = sub i32 0, %396
  %gen165 = add i32 %393, 10
  %div13alteredBB = sdiv i32 %388, 10
  %d.reload490 = load volatile i32*, i32** %d.reg2mem
  store i32 %div13alteredBB, i32* %d.reload490, align 4
  %m.reload402 = load volatile i32*, i32** %m.reg2mem
  %398 = load i32, i32* %m.reload402, align 4
  %a.reload431 = load volatile i32*, i32** %a.reg2mem
  %399 = load i32, i32* %a.reload431, align 4
  %400 = add i32 %399, 748050342
  %401 = sub i32 %400, 10000
  %402 = sub i32 %401, 748050342
  %_166 = sub i32 %399, 10000
  %gen167 = mul i32 %402, 10000
  %403 = sub i32 0, -1954845374
  %404 = sub i32 %403, %399
  %405 = add i32 %404, -1954845374
  %_168 = sub i32 0, %399
  %406 = sub i32 0, 10000
  %407 = sub i32 %405, %406
  %gen169 = add i32 %405, 10000
  %_170 = shl i32 %399, 10000
  %_171 = shl i32 %399, 10000
  %_172 = shl i32 %399, 10000
  %_173 = shl i32 %399, 10000
  %408 = add i32 %399, -1324420700
  %409 = sub i32 %408, 10000
  %410 = sub i32 %409, -1324420700
  %_174 = sub i32 %399, 10000
  %gen175 = mul i32 %410, 10000
  %mul14alteredBB = mul nsw i32 %399, 10000
  %411 = add i32 0, -1401931147
  %412 = sub i32 %411, %398
  %413 = sub i32 %412, -1401931147
  %_176 = sub i32 0, %398
  %414 = add i32 %413, -1559936256
  %415 = add i32 %414, %mul14alteredBB
  %416 = sub i32 %415, -1559936256
  %gen177 = add i32 %413, %mul14alteredBB
  %_178 = shl i32 %398, %mul14alteredBB
  %_179 = shl i32 %398, %mul14alteredBB
  %417 = add i32 0, 711129437
  %418 = sub i32 %417, %398
  %419 = sub i32 %418, 711129437
  %_180 = sub i32 0, %398
  %420 = sub i32 0, %419
  %421 = sub i32 0, %mul14alteredBB
  %422 = add i32 %420, %421
  %423 = sub i32 0, %422
  %gen181 = add i32 %419, %mul14alteredBB
  %424 = add i32 %398, 1237406002
  %425 = sub i32 %424, %mul14alteredBB
  %426 = sub i32 %425, 1237406002
  %sub15alteredBB = sub nsw i32 %398, %mul14alteredBB
  %b.reload457 = load volatile i32*, i32** %b.reg2mem
  %427 = load i32, i32* %b.reload457, align 4
  %_182 = shl i32 %427, 1000
  %_183 = shl i32 %427, 1000
  %428 = sub i32 0, 1000
  %429 = add i32 %427, %428
  %_184 = sub i32 %427, 1000
  %gen185 = mul i32 %429, 1000
  %430 = add i32 0, -233280870
  %431 = sub i32 %430, %427
  %432 = sub i32 %431, -233280870
  %_186 = sub i32 0, %427
  %433 = sub i32 0, %432
  %434 = sub i32 0, 1000
  %435 = add i32 %433, %434
  %436 = sub i32 0, %435
  %gen187 = add i32 %432, 1000
  %mul16alteredBB = mul nsw i32 %427, 1000
  %_188 = shl i32 %426, %mul16alteredBB
  %437 = sub i32 0, 2059775429
  %438 = sub i32 %437, %426
  %439 = add i32 %438, 2059775429
  %_189 = sub i32 0, %426
  %440 = sub i32 0, %mul16alteredBB
  %441 = sub i32 %439, %440
  %gen190 = add i32 %439, %mul16alteredBB
  %_191 = shl i32 %426, %mul16alteredBB
  %_192 = shl i32 %426, %mul16alteredBB
  %_193 = shl i32 %426, %mul16alteredBB
  %442 = sub i32 0, %mul16alteredBB
  %443 = add i32 %426, %442
  %sub17alteredBB = sub nsw i32 %426, %mul16alteredBB
  %c.reload477 = load volatile i32*, i32** %c.reg2mem
  %444 = load i32, i32* %c.reload477, align 4
  %445 = sub i32 0, %444
  %446 = add i32 0, %445
  %_194 = sub i32 0, %444
  %447 = add i32 %446, -1013859837
  %448 = add i32 %447, 100
  %449 = sub i32 %448, -1013859837
  %gen195 = add i32 %446, 100
  %mul18alteredBB = mul nsw i32 %444, 100
  %_196 = shl i32 %443, %mul18alteredBB
  %_197 = shl i32 %443, %mul18alteredBB
  %_198 = shl i32 %443, %mul18alteredBB
  %_199 = shl i32 %443, %mul18alteredBB
  %_200 = shl i32 %443, %mul18alteredBB
  %_201 = shl i32 %443, %mul18alteredBB
  %450 = add i32 %443, -425512755
  %451 = sub i32 %450, %mul18alteredBB
  %452 = sub i32 %451, -425512755
  %_202 = sub i32 %443, %mul18alteredBB
  %gen203 = mul i32 %452, %mul18alteredBB
  %453 = sub i32 %443, -1795711801
  %454 = sub i32 %453, %mul18alteredBB
  %455 = add i32 %454, -1795711801
  %sub19alteredBB = sub nsw i32 %443, %mul18alteredBB
  %d.reload489 = load volatile i32*, i32** %d.reg2mem
  %456 = load i32, i32* %d.reload489, align 4
  %457 = sub i32 0, 1401651643
  %458 = sub i32 %457, %456
  %459 = add i32 %458, 1401651643
  %_204 = sub i32 0, %456
  %460 = add i32 %459, 1125667558
  %461 = add i32 %460, 10
  %462 = sub i32 %461, 1125667558
  %gen205 = add i32 %459, 10
  %_206 = shl i32 %456, 10
  %mul20alteredBB = mul nsw i32 %456, 10
  %_207 = shl i32 %455, %mul20alteredBB
  %463 = sub i32 %455, -463916860
  %464 = sub i32 %463, %mul20alteredBB
  %465 = add i32 %464, -463916860
  %_208 = sub i32 %455, %mul20alteredBB
  %gen209 = mul i32 %465, %mul20alteredBB
  %466 = sub i32 0, %mul20alteredBB
  %467 = add i32 %455, %466
  %_210 = sub i32 %455, %mul20alteredBB
  %gen211 = mul i32 %467, %mul20alteredBB
  %468 = sub i32 0, %mul20alteredBB
  %469 = add i32 %455, %468
  %sub21alteredBB = sub nsw i32 %455, %mul20alteredBB
  %e.reload496 = load volatile i32*, i32** %e.reg2mem
  store i32 %469, i32* %e.reload496, align 4
  %e.reload = load volatile i32*, i32** %e.reg2mem
  %470 = load i32, i32* %e.reload, align 4
  %471 = add i32 %470, 2104033673
  %472 = sub i32 %471, 10000
  %473 = sub i32 %472, 2104033673
  %_212 = sub i32 %470, 10000
  %gen213 = mul i32 %473, 10000
  %474 = sub i32 0, 10000
  %475 = add i32 %470, %474
  %_214 = sub i32 %470, 10000
  %gen215 = mul i32 %475, 10000
  %476 = sub i32 0, 287289616
  %477 = sub i32 %476, %470
  %478 = add i32 %477, 287289616
  %_216 = sub i32 0, %470
  %479 = add i32 %478, 1373389906
  %480 = add i32 %479, 10000
  %481 = sub i32 %480, 1373389906
  %gen217 = add i32 %478, 10000
  %482 = add i32 %470, -1946215700
  %483 = sub i32 %482, 10000
  %484 = sub i32 %483, -1946215700
  %_218 = sub i32 %470, 10000
  %gen219 = mul i32 %484, 10000
  %485 = sub i32 0, %470
  %486 = add i32 0, %485
  %_220 = sub i32 0, %470
  %487 = sub i32 0, 10000
  %488 = sub i32 %486, %487
  %gen221 = add i32 %486, 10000
  %mul22alteredBB = mul nsw i32 %470, 10000
  %d.reload = load volatile i32*, i32** %d.reg2mem
  %489 = load i32, i32* %d.reload, align 4
  %_222 = shl i32 %489, 1000
  %490 = sub i32 0, %489
  %491 = add i32 0, %490
  %_223 = sub i32 0, %489
  %492 = sub i32 %491, -1322292437
  %493 = add i32 %492, 1000
  %494 = add i32 %493, -1322292437
  %gen224 = add i32 %491, 1000
  %495 = add i32 0, 1066590181
  %496 = sub i32 %495, %489
  %497 = sub i32 %496, 1066590181
  %_225 = sub i32 0, %489
  %498 = sub i32 %497, 1456178024
  %499 = add i32 %498, 1000
  %500 = add i32 %499, 1456178024
  %gen226 = add i32 %497, 1000
  %_227 = shl i32 %489, 1000
  %501 = sub i32 0, -376693614
  %502 = sub i32 %501, %489
  %503 = add i32 %502, -376693614
  %_228 = sub i32 0, %489
  %504 = add i32 %503, 531267858
  %505 = add i32 %504, 1000
  %506 = sub i32 %505, 531267858
  %gen229 = add i32 %503, 1000
  %507 = sub i32 0, %489
  %508 = add i32 0, %507
  %_230 = sub i32 0, %489
  %509 = sub i32 %508, -840785015
  %510 = add i32 %509, 1000
  %511 = add i32 %510, -840785015
  %gen231 = add i32 %508, 1000
  %512 = add i32 %489, 1319210060
  %513 = sub i32 %512, 1000
  %514 = sub i32 %513, 1319210060
  %_232 = sub i32 %489, 1000
  %gen233 = mul i32 %514, 1000
  %mul23alteredBB = mul nsw i32 %489, 1000
  %515 = sub i32 %mul22alteredBB, -541921699
  %516 = sub i32 %515, %mul23alteredBB
  %517 = add i32 %516, -541921699
  %_234 = sub i32 %mul22alteredBB, %mul23alteredBB
  %gen235 = mul i32 %517, %mul23alteredBB
  %518 = add i32 %mul22alteredBB, 1745232307
  %519 = sub i32 %518, %mul23alteredBB
  %520 = sub i32 %519, 1745232307
  %_236 = sub i32 %mul22alteredBB, %mul23alteredBB
  %gen237 = mul i32 %520, %mul23alteredBB
  %_238 = shl i32 %mul22alteredBB, %mul23alteredBB
  %521 = sub i32 0, %mul23alteredBB
  %522 = add i32 %mul22alteredBB, %521
  %_239 = sub i32 %mul22alteredBB, %mul23alteredBB
  %gen240 = mul i32 %522, %mul23alteredBB
  %523 = sub i32 %mul22alteredBB, 380711938
  %524 = sub i32 %523, %mul23alteredBB
  %525 = add i32 %524, 380711938
  %_241 = sub i32 %mul22alteredBB, %mul23alteredBB
  %gen242 = mul i32 %525, %mul23alteredBB
  %526 = sub i32 0, %mul22alteredBB
  %527 = sub i32 0, %mul23alteredBB
  %528 = add i32 %526, %527
  %529 = sub i32 0, %528
  %addalteredBB = add nsw i32 %mul22alteredBB, %mul23alteredBB
  %c.reload476 = load volatile i32*, i32** %c.reg2mem
  %530 = load i32, i32* %c.reload476, align 4
  %_243 = shl i32 %530, 100
  %mul24alteredBB = mul nsw i32 %530, 100
  %531 = sub i32 %529, -1272194689
  %532 = sub i32 %531, %mul24alteredBB
  %533 = add i32 %532, -1272194689
  %_244 = sub i32 %529, %mul24alteredBB
  %gen245 = mul i32 %533, %mul24alteredBB
  %534 = sub i32 0, %529
  %535 = add i32 0, %534
  %_246 = sub i32 0, %529
  %536 = sub i32 %535, -1811857331
  %537 = add i32 %536, %mul24alteredBB
  %538 = add i32 %537, -1811857331
  %gen247 = add i32 %535, %mul24alteredBB
  %539 = add i32 %529, -1276825629
  %540 = sub i32 %539, %mul24alteredBB
  %541 = sub i32 %540, -1276825629
  %_248 = sub i32 %529, %mul24alteredBB
  %gen249 = mul i32 %541, %mul24alteredBB
  %542 = sub i32 0, 1225338371
  %543 = sub i32 %542, %529
  %544 = add i32 %543, 1225338371
  %_250 = sub i32 0, %529
  %545 = sub i32 0, %544
  %546 = sub i32 0, %mul24alteredBB
  %547 = add i32 %545, %546
  %548 = sub i32 0, %547
  %gen251 = add i32 %544, %mul24alteredBB
  %_252 = shl i32 %529, %mul24alteredBB
  %_253 = shl i32 %529, %mul24alteredBB
  %549 = add i32 %529, -638285900
  %550 = add i32 %549, %mul24alteredBB
  %551 = sub i32 %550, -638285900
  %add25alteredBB = add nsw i32 %529, %mul24alteredBB
  %b.reload456 = load volatile i32*, i32** %b.reg2mem
  %552 = load i32, i32* %b.reload456, align 4
  %553 = sub i32 %552, -1723825937
  %554 = sub i32 %553, 10
  %555 = add i32 %554, -1723825937
  %_254 = sub i32 %552, 10
  %gen255 = mul i32 %555, 10
  %556 = sub i32 0, 171428678
  %557 = sub i32 %556, %552
  %558 = add i32 %557, 171428678
  %_256 = sub i32 0, %552
  %559 = sub i32 0, 10
  %560 = sub i32 %558, %559
  %gen257 = add i32 %558, 10
  %561 = add i32 %552, -1767021027
  %562 = sub i32 %561, 10
  %563 = sub i32 %562, -1767021027
  %_258 = sub i32 %552, 10
  %gen259 = mul i32 %563, 10
  %_260 = shl i32 %552, 10
  %564 = sub i32 0, -390976976
  %565 = sub i32 %564, %552
  %566 = add i32 %565, -390976976
  %_261 = sub i32 0, %552
  %567 = sub i32 0, 10
  %568 = sub i32 %566, %567
  %gen262 = add i32 %566, 10
  %_263 = shl i32 %552, 10
  %569 = sub i32 %552, 1127480936
  %570 = sub i32 %569, 10
  %571 = add i32 %570, 1127480936
  %_264 = sub i32 %552, 10
  %gen265 = mul i32 %571, 10
  %mul26alteredBB = mul nsw i32 %552, 10
  %572 = add i32 %551, 2055763712
  %573 = sub i32 %572, %mul26alteredBB
  %574 = sub i32 %573, 2055763712
  %_266 = sub i32 %551, %mul26alteredBB
  %gen267 = mul i32 %574, %mul26alteredBB
  %575 = sub i32 0, -1226366353
  %576 = sub i32 %575, %551
  %577 = add i32 %576, -1226366353
  %_268 = sub i32 0, %551
  %578 = sub i32 0, %mul26alteredBB
  %579 = sub i32 %577, %578
  %gen269 = add i32 %577, %mul26alteredBB
  %580 = add i32 0, -1238793561
  %581 = sub i32 %580, %551
  %582 = sub i32 %581, -1238793561
  %_270 = sub i32 0, %551
  %583 = add i32 %582, 286374896
  %584 = add i32 %583, %mul26alteredBB
  %585 = sub i32 %584, 286374896
  %gen271 = add i32 %582, %mul26alteredBB
  %_272 = shl i32 %551, %mul26alteredBB
  %586 = add i32 0, -424683724
  %587 = sub i32 %586, %551
  %588 = sub i32 %587, -424683724
  %_273 = sub i32 0, %551
  %589 = sub i32 %588, 717005825
  %590 = add i32 %589, %mul26alteredBB
  %591 = add i32 %590, 717005825
  %gen274 = add i32 %588, %mul26alteredBB
  %592 = sub i32 %551, -1293969372
  %593 = add i32 %592, %mul26alteredBB
  %594 = add i32 %593, -1293969372
  %add27alteredBB = add nsw i32 %551, %mul26alteredBB
  %a.reload430 = load volatile i32*, i32** %a.reg2mem
  %595 = load i32, i32* %a.reload430, align 4
  %596 = sub i32 %594, 2061575037
  %597 = sub i32 %596, %595
  %598 = add i32 %597, 2061575037
  %_275 = sub i32 %594, %595
  %gen276 = mul i32 %598, %595
  %_277 = shl i32 %594, %595
  %599 = sub i32 0, %595
  %600 = sub i32 %594, %599
  %add28alteredBB = add nsw i32 %594, %595
  %call29alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %600)
  store i32 -1041912661, i32* %switchVar
  br label %loopEnd

originalBB281alteredBB:                           ; preds = %loopEntry
  %m.reload401 = load volatile i32*, i32** %m.reg2mem
  %601 = load i32, i32* %m.reload401, align 4
  %602 = sub i32 %601, 540696744
  %603 = sub i32 %602, 100
  %604 = add i32 %603, 540696744
  %_282 = sub i32 %601, 100
  %gen283 = mul i32 %604, 100
  %_284 = shl i32 %601, 100
  %_285 = shl i32 %601, 100
  %_286 = shl i32 %601, 100
  %605 = add i32 0, 838300903
  %606 = sub i32 %605, %601
  %607 = sub i32 %606, 838300903
  %_287 = sub i32 0, %601
  %608 = add i32 %607, -1883258725
  %609 = add i32 %608, 100
  %610 = sub i32 %609, -1883258725
  %gen288 = add i32 %607, 100
  %div57alteredBB = sdiv i32 %601, 100
  %a.reload429 = load volatile i32*, i32** %a.reg2mem
  store i32 %div57alteredBB, i32* %a.reload429, align 4
  %m.reload400 = load volatile i32*, i32** %m.reg2mem
  %611 = load i32, i32* %m.reload400, align 4
  %a.reload428 = load volatile i32*, i32** %a.reg2mem
  %612 = load i32, i32* %a.reload428, align 4
  %613 = sub i32 0, %612
  %614 = add i32 0, %613
  %_289 = sub i32 0, %612
  %615 = sub i32 0, %614
  %616 = sub i32 0, 100
  %617 = add i32 %615, %616
  %618 = sub i32 0, %617
  %gen290 = add i32 %614, 100
  %619 = sub i32 0, %612
  %620 = add i32 0, %619
  %_291 = sub i32 0, %612
  %621 = sub i32 %620, 425711031
  %622 = add i32 %621, 100
  %623 = add i32 %622, 425711031
  %gen292 = add i32 %620, 100
  %_293 = shl i32 %612, 100
  %_294 = shl i32 %612, 100
  %_295 = shl i32 %612, 100
  %624 = sub i32 0, -1691973532
  %625 = sub i32 %624, %612
  %626 = add i32 %625, -1691973532
  %_296 = sub i32 0, %612
  %627 = add i32 %626, 86664522
  %628 = add i32 %627, 100
  %629 = sub i32 %628, 86664522
  %gen297 = add i32 %626, 100
  %mul58alteredBB = mul nsw i32 %612, 100
  %630 = sub i32 0, %611
  %631 = add i32 0, %630
  %_298 = sub i32 0, %611
  %632 = sub i32 0, %mul58alteredBB
  %633 = sub i32 %631, %632
  %gen299 = add i32 %631, %mul58alteredBB
  %634 = add i32 0, 1064500235
  %635 = sub i32 %634, %611
  %636 = sub i32 %635, 1064500235
  %_300 = sub i32 0, %611
  %637 = add i32 %636, 846223766
  %638 = add i32 %637, %mul58alteredBB
  %639 = sub i32 %638, 846223766
  %gen301 = add i32 %636, %mul58alteredBB
  %640 = sub i32 0, 298970057
  %641 = sub i32 %640, %611
  %642 = add i32 %641, 298970057
  %_302 = sub i32 0, %611
  %643 = add i32 %642, -1630436011
  %644 = add i32 %643, %mul58alteredBB
  %645 = sub i32 %644, -1630436011
  %gen303 = add i32 %642, %mul58alteredBB
  %646 = sub i32 0, -708790754
  %647 = sub i32 %646, %611
  %648 = add i32 %647, -708790754
  %_304 = sub i32 0, %611
  %649 = sub i32 0, %648
  %650 = sub i32 0, %mul58alteredBB
  %651 = add i32 %649, %650
  %652 = sub i32 0, %651
  %gen305 = add i32 %648, %mul58alteredBB
  %653 = sub i32 0, %611
  %654 = add i32 0, %653
  %_306 = sub i32 0, %611
  %655 = sub i32 %654, -2013720253
  %656 = add i32 %655, %mul58alteredBB
  %657 = add i32 %656, -2013720253
  %gen307 = add i32 %654, %mul58alteredBB
  %658 = add i32 0, -1210038583
  %659 = sub i32 %658, %611
  %660 = sub i32 %659, -1210038583
  %_308 = sub i32 0, %611
  %661 = sub i32 0, %660
  %662 = sub i32 0, %mul58alteredBB
  %663 = add i32 %661, %662
  %664 = sub i32 0, %663
  %gen309 = add i32 %660, %mul58alteredBB
  %665 = sub i32 0, %mul58alteredBB
  %666 = add i32 %611, %665
  %_310 = sub i32 %611, %mul58alteredBB
  %gen311 = mul i32 %666, %mul58alteredBB
  %667 = sub i32 0, 967914434
  %668 = sub i32 %667, %611
  %669 = add i32 %668, 967914434
  %_312 = sub i32 0, %611
  %670 = sub i32 %669, 1091657887
  %671 = add i32 %670, %mul58alteredBB
  %672 = add i32 %671, 1091657887
  %gen313 = add i32 %669, %mul58alteredBB
  %673 = add i32 %611, -556525017
  %674 = sub i32 %673, %mul58alteredBB
  %675 = sub i32 %674, -556525017
  %sub59alteredBB = sub nsw i32 %611, %mul58alteredBB
  %676 = sub i32 0, 10
  %677 = add i32 %675, %676
  %_314 = sub i32 %675, 10
  %gen315 = mul i32 %677, 10
  %678 = add i32 0, 327155887
  %679 = sub i32 %678, %675
  %680 = sub i32 %679, 327155887
  %_316 = sub i32 0, %675
  %681 = sub i32 0, %680
  %682 = sub i32 0, 10
  %683 = add i32 %681, %682
  %684 = sub i32 0, %683
  %gen317 = add i32 %680, 10
  %_318 = shl i32 %675, 10
  %685 = add i32 %675, 1039086003
  %686 = sub i32 %685, 10
  %687 = sub i32 %686, 1039086003
  %_319 = sub i32 %675, 10
  %gen320 = mul i32 %687, 10
  %688 = add i32 %675, -1689065752
  %689 = sub i32 %688, 10
  %690 = sub i32 %689, -1689065752
  %_321 = sub i32 %675, 10
  %gen322 = mul i32 %690, 10
  %div60alteredBB = sdiv i32 %675, 10
  %b.reload455 = load volatile i32*, i32** %b.reg2mem
  store i32 %div60alteredBB, i32* %b.reload455, align 4
  %m.reload = load volatile i32*, i32** %m.reg2mem
  %691 = load i32, i32* %m.reload, align 4
  %a.reload427 = load volatile i32*, i32** %a.reg2mem
  %692 = load i32, i32* %a.reload427, align 4
  %_323 = shl i32 %692, 100
  %693 = sub i32 0, -2103953916
  %694 = sub i32 %693, %692
  %695 = add i32 %694, -2103953916
  %_324 = sub i32 0, %692
  %696 = sub i32 %695, -277657793
  %697 = add i32 %696, 100
  %698 = add i32 %697, -277657793
  %gen325 = add i32 %695, 100
  %699 = sub i32 %692, 527031149
  %700 = sub i32 %699, 100
  %701 = add i32 %700, 527031149
  %_326 = sub i32 %692, 100
  %gen327 = mul i32 %701, 100
  %_328 = shl i32 %692, 100
  %702 = sub i32 0, 100
  %703 = add i32 %692, %702
  %_329 = sub i32 %692, 100
  %gen330 = mul i32 %703, 100
  %mul61alteredBB = mul nsw i32 %692, 100
  %704 = sub i32 0, %691
  %705 = add i32 0, %704
  %_331 = sub i32 0, %691
  %706 = sub i32 0, %mul61alteredBB
  %707 = sub i32 %705, %706
  %gen332 = add i32 %705, %mul61alteredBB
  %_333 = shl i32 %691, %mul61alteredBB
  %708 = sub i32 0, -921081701
  %709 = sub i32 %708, %691
  %710 = add i32 %709, -921081701
  %_334 = sub i32 0, %691
  %711 = add i32 %710, -2027516201
  %712 = add i32 %711, %mul61alteredBB
  %713 = sub i32 %712, -2027516201
  %gen335 = add i32 %710, %mul61alteredBB
  %_336 = shl i32 %691, %mul61alteredBB
  %714 = add i32 %691, -592947219
  %715 = sub i32 %714, %mul61alteredBB
  %716 = sub i32 %715, -592947219
  %sub62alteredBB = sub nsw i32 %691, %mul61alteredBB
  %b.reload454 = load volatile i32*, i32** %b.reg2mem
  %717 = load i32, i32* %b.reload454, align 4
  %_337 = shl i32 %717, 10
  %718 = sub i32 0, %717
  %719 = add i32 0, %718
  %_338 = sub i32 0, %717
  %720 = add i32 %719, -1580657344
  %721 = add i32 %720, 10
  %722 = sub i32 %721, -1580657344
  %gen339 = add i32 %719, 10
  %_340 = shl i32 %717, 10
  %723 = sub i32 0, -428972698
  %724 = sub i32 %723, %717
  %725 = add i32 %724, -428972698
  %_341 = sub i32 0, %717
  %726 = sub i32 0, 10
  %727 = sub i32 %725, %726
  %gen342 = add i32 %725, 10
  %mul63alteredBB = mul nsw i32 %717, 10
  %728 = add i32 0, -2030403759
  %729 = sub i32 %728, %716
  %730 = sub i32 %729, -2030403759
  %_343 = sub i32 0, %716
  %731 = sub i32 0, %mul63alteredBB
  %732 = sub i32 %730, %731
  %gen344 = add i32 %730, %mul63alteredBB
  %733 = add i32 %716, 309036112
  %734 = sub i32 %733, %mul63alteredBB
  %735 = sub i32 %734, 309036112
  %_345 = sub i32 %716, %mul63alteredBB
  %gen346 = mul i32 %735, %mul63alteredBB
  %736 = sub i32 0, %mul63alteredBB
  %737 = add i32 %716, %736
  %_347 = sub i32 %716, %mul63alteredBB
  %gen348 = mul i32 %737, %mul63alteredBB
  %738 = sub i32 0, -296316203
  %739 = sub i32 %738, %716
  %740 = add i32 %739, -296316203
  %_349 = sub i32 0, %716
  %741 = add i32 %740, 1067504513
  %742 = add i32 %741, %mul63alteredBB
  %743 = sub i32 %742, 1067504513
  %gen350 = add i32 %740, %mul63alteredBB
  %744 = sub i32 0, -598776499
  %745 = sub i32 %744, %716
  %746 = add i32 %745, -598776499
  %_351 = sub i32 0, %716
  %747 = sub i32 0, %mul63alteredBB
  %748 = sub i32 %746, %747
  %gen352 = add i32 %746, %mul63alteredBB
  %_353 = shl i32 %716, %mul63alteredBB
  %_354 = shl i32 %716, %mul63alteredBB
  %749 = sub i32 %716, 889685352
  %750 = sub i32 %749, %mul63alteredBB
  %751 = add i32 %750, 889685352
  %_355 = sub i32 %716, %mul63alteredBB
  %gen356 = mul i32 %751, %mul63alteredBB
  %752 = sub i32 0, %mul63alteredBB
  %753 = add i32 %716, %752
  %sub64alteredBB = sub nsw i32 %716, %mul63alteredBB
  %c.reload475 = load volatile i32*, i32** %c.reg2mem
  store i32 %753, i32* %c.reload475, align 4
  %c.reload = load volatile i32*, i32** %c.reg2mem
  %754 = load i32, i32* %c.reload, align 4
  %755 = add i32 %754, -508152503
  %756 = sub i32 %755, 100
  %757 = sub i32 %756, -508152503
  %_357 = sub i32 %754, 100
  %gen358 = mul i32 %757, 100
  %758 = sub i32 0, 100
  %759 = add i32 %754, %758
  %_359 = sub i32 %754, 100
  %gen360 = mul i32 %759, 100
  %_361 = shl i32 %754, 100
  %760 = sub i32 0, %754
  %761 = add i32 0, %760
  %_362 = sub i32 0, %754
  %762 = add i32 %761, -682793653
  %763 = add i32 %762, 100
  %764 = sub i32 %763, -682793653
  %gen363 = add i32 %761, 100
  %_364 = shl i32 %754, 100
  %765 = sub i32 %754, 380864922
  %766 = sub i32 %765, 100
  %767 = add i32 %766, 380864922
  %_365 = sub i32 %754, 100
  %gen366 = mul i32 %767, 100
  %mul65alteredBB = mul nsw i32 %754, 100
  %b.reload = load volatile i32*, i32** %b.reg2mem
  %768 = load i32, i32* %b.reload, align 4
  %_367 = shl i32 %768, 10
  %769 = sub i32 0, -1251024864
  %770 = sub i32 %769, %768
  %771 = add i32 %770, -1251024864
  %_368 = sub i32 0, %768
  %772 = sub i32 %771, -1010736648
  %773 = add i32 %772, 10
  %774 = add i32 %773, -1010736648
  %gen369 = add i32 %771, 10
  %775 = sub i32 0, 10
  %776 = add i32 %768, %775
  %_370 = sub i32 %768, 10
  %gen371 = mul i32 %776, 10
  %_372 = shl i32 %768, 10
  %_373 = shl i32 %768, 10
  %mul66alteredBB = mul nsw i32 %768, 10
  %777 = sub i32 0, %mul65alteredBB
  %778 = add i32 0, %777
  %_374 = sub i32 0, %mul65alteredBB
  %779 = sub i32 %778, -760413489
  %780 = add i32 %779, %mul66alteredBB
  %781 = add i32 %780, -760413489
  %gen375 = add i32 %778, %mul66alteredBB
  %_376 = shl i32 %mul65alteredBB, %mul66alteredBB
  %782 = sub i32 0, %mul65alteredBB
  %783 = add i32 0, %782
  %_377 = sub i32 0, %mul65alteredBB
  %784 = sub i32 0, %783
  %785 = sub i32 0, %mul66alteredBB
  %786 = add i32 %784, %785
  %787 = sub i32 0, %786
  %gen378 = add i32 %783, %mul66alteredBB
  %_379 = shl i32 %mul65alteredBB, %mul66alteredBB
  %_380 = shl i32 %mul65alteredBB, %mul66alteredBB
  %_381 = shl i32 %mul65alteredBB, %mul66alteredBB
  %788 = sub i32 0, %mul65alteredBB
  %789 = sub i32 0, %mul66alteredBB
  %790 = add i32 %788, %789
  %791 = sub i32 0, %790
  %add67alteredBB = add nsw i32 %mul65alteredBB, %mul66alteredBB
  %a.reload = load volatile i32*, i32** %a.reg2mem
  %792 = load i32, i32* %a.reload, align 4
  %793 = sub i32 0, %791
  %794 = add i32 0, %793
  %_382 = sub i32 0, %791
  %795 = sub i32 0, %794
  %796 = sub i32 0, %792
  %797 = add i32 %795, %796
  %798 = sub i32 0, %797
  %gen383 = add i32 %794, %792
  %_384 = shl i32 %791, %792
  %_385 = shl i32 %791, %792
  %799 = sub i32 0, 917282153
  %800 = sub i32 %799, %791
  %801 = add i32 %800, 917282153
  %_386 = sub i32 0, %791
  %802 = sub i32 %801, -1819121091
  %803 = add i32 %802, %792
  %804 = add i32 %803, -1819121091
  %gen387 = add i32 %801, %792
  %805 = sub i32 0, %792
  %806 = add i32 %791, %805
  %_388 = sub i32 %791, %792
  %gen389 = mul i32 %806, %792
  %_390 = shl i32 %791, %792
  %807 = add i32 0, 385006555
  %808 = sub i32 %807, %791
  %809 = sub i32 %808, 385006555
  %_391 = sub i32 0, %791
  %810 = sub i32 %809, -1755826573
  %811 = add i32 %810, %792
  %812 = add i32 %811, -1755826573
  %gen392 = add i32 %809, %792
  %813 = sub i32 0, %791
  %814 = sub i32 0, %792
  %815 = add i32 %813, %814
  %816 = sub i32 0, %815
  %add68alteredBB = add nsw i32 %791, %792
  %call69alteredBB = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %816)
  store i32 1933407881, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB281alteredBB, %originalBB84alteredBB, %originalBBalteredBB, %if.end82, %if.end81, %if.end, %if.else79, %if.then72, %if.else70, %originalBBpart2394, %originalBB281, %if.then56, %if.else54, %if.then31, %if.else, %originalBBpart2279, %originalBB84, %if.then, %originalBBpart2, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
