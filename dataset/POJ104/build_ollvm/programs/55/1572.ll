; ModuleID = 'source-C-CXX/55/1572.c'
source_filename = "source-C-CXX/55/1572.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define void @main() #0 {
entry:
  %.reg2mem = alloca i32
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  %s = alloca i32, align 4
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %a)
  %0 = load i32, i32* %a, align 4
  store i32 %0, i32* %.reg2mem
  %switchVar = alloca i32
  store i32 68953527, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar385 = load i32, i32* %switchVar
  switch i32 %switchVar385, label %switchDefault [
    i32 68953527, label %first
    i32 -1367625358, label %if.then
    i32 549047982, label %if.else
    i32 1959174866, label %if.then2
    i32 -105974986, label %if.else3
    i32 -1867122909, label %if.then5
    i32 -993396169, label %originalBB
    i32 1974240461, label %originalBBpart2
    i32 600278084, label %if.else18
    i32 -1202518384, label %if.then20
    i32 -896439061, label %if.else42
    i32 211396220, label %if.then44
    i32 845284111, label %originalBB166
    i32 2056801919, label %originalBBpart2383
    i32 -453468443, label %if.end
    i32 -1306362256, label %if.end77
    i32 -1667640895, label %if.end78
    i32 1955351648, label %if.end79
    i32 -2103525498, label %if.end80
    i32 1456599925, label %originalBBalteredBB
    i32 -1676046288, label %originalBB166alteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i32, i32* %.reg2mem
  %cmp = icmp slt i32 %.reload, 10
  %1 = select i1 %cmp, i32 -1367625358, i32 549047982
  store i32 %1, i32* %switchVar
  br label %loopEnd

if.then:                                          ; preds = %loopEntry
  %2 = load i32, i32* %a, align 4
  store i32 %2, i32* %s, align 4
  store i32 -2103525498, i32* %switchVar
  br label %loopEnd

if.else:                                          ; preds = %loopEntry
  %3 = load i32, i32* %a, align 4
  %cmp1 = icmp slt i32 %3, 100
  %4 = select i1 %cmp1, i32 1959174866, i32 -105974986
  store i32 %4, i32* %switchVar
  br label %loopEnd

if.then2:                                         ; preds = %loopEntry
  %5 = load i32, i32* %a, align 4
  %rem = srem i32 %5, 10
  store i32 %rem, i32* %b, align 4
  %6 = load i32, i32* %a, align 4
  %7 = load i32, i32* %b, align 4
  %8 = sub i32 %6, -1289773419
  %9 = sub i32 %8, %7
  %10 = add i32 %9, -1289773419
  %sub = sub nsw i32 %6, %7
  %div = sdiv i32 %10, 10
  store i32 %div, i32* %c, align 4
  %11 = load i32, i32* %b, align 4
  %mul = mul nsw i32 %11, 10
  %12 = load i32, i32* %c, align 4
  %13 = sub i32 0, %mul
  %14 = sub i32 0, %12
  %15 = add i32 %13, %14
  %16 = sub i32 0, %15
  %add = add nsw i32 %mul, %12
  store i32 %16, i32* %s, align 4
  store i32 1955351648, i32* %switchVar
  br label %loopEnd

if.else3:                                         ; preds = %loopEntry
  %17 = load i32, i32* %a, align 4
  %cmp4 = icmp slt i32 %17, 1000
  %18 = select i1 %cmp4, i32 -1867122909, i32 600278084
  store i32 %18, i32* %switchVar
  br label %loopEnd

if.then5:                                         ; preds = %loopEntry
  %19 = load i32, i32* @x
  %20 = load i32, i32* @y
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 -993396169, i32 1456599925
  store i32 %32, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %33 = load i32, i32* %a, align 4
  %rem6 = srem i32 %33, 10
  store i32 %rem6, i32* %b, align 4
  %34 = load i32, i32* %a, align 4
  %35 = load i32, i32* %b, align 4
  %36 = sub i32 %34, -1694277280
  %37 = sub i32 %36, %35
  %38 = add i32 %37, -1694277280
  %sub7 = sub nsw i32 %34, %35
  %div8 = sdiv i32 %38, 10
  %rem9 = srem i32 %div8, 10
  store i32 %rem9, i32* %c, align 4
  %39 = load i32, i32* %a, align 4
  %40 = load i32, i32* %b, align 4
  %41 = add i32 %39, -851997946
  %42 = sub i32 %41, %40
  %43 = sub i32 %42, -851997946
  %sub10 = sub nsw i32 %39, %40
  %44 = load i32, i32* %c, align 4
  %mul11 = mul nsw i32 %44, 10
  %45 = add i32 %43, -2113248463
  %46 = sub i32 %45, %mul11
  %47 = sub i32 %46, -2113248463
  %sub12 = sub nsw i32 %43, %mul11
  %div13 = sdiv i32 %47, 100
  store i32 %div13, i32* %d, align 4
  %48 = load i32, i32* %b, align 4
  %mul14 = mul nsw i32 %48, 100
  %49 = load i32, i32* %c, align 4
  %mul15 = mul nsw i32 %49, 10
  %50 = sub i32 %mul14, 2039375693
  %51 = add i32 %50, %mul15
  %52 = add i32 %51, 2039375693
  %add16 = add nsw i32 %mul14, %mul15
  %53 = load i32, i32* %d, align 4
  %54 = add i32 %52, 807345241
  %55 = add i32 %54, %53
  %56 = sub i32 %55, 807345241
  %add17 = add nsw i32 %52, %53
  store i32 %56, i32* %s, align 4
  %57 = load i32, i32* @x
  %58 = load i32, i32* @y
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 1974240461, i32 1456599925
  store i32 %82, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  store i32 -1667640895, i32* %switchVar
  br label %loopEnd

if.else18:                                        ; preds = %loopEntry
  %83 = load i32, i32* %a, align 4
  %cmp19 = icmp slt i32 %83, 10000
  %84 = select i1 %cmp19, i32 -1202518384, i32 -896439061
  store i32 %84, i32* %switchVar
  br label %loopEnd

if.then20:                                        ; preds = %loopEntry
  %85 = load i32, i32* %a, align 4
  %rem21 = srem i32 %85, 10
  store i32 %rem21, i32* %b, align 4
  %86 = load i32, i32* %a, align 4
  %87 = load i32, i32* %b, align 4
  %88 = sub i32 %86, 602974754
  %89 = sub i32 %88, %87
  %90 = add i32 %89, 602974754
  %sub22 = sub nsw i32 %86, %87
  %div23 = sdiv i32 %90, 10
  %rem24 = srem i32 %div23, 10
  store i32 %rem24, i32* %c, align 4
  %91 = load i32, i32* %a, align 4
  %92 = load i32, i32* %b, align 4
  %93 = add i32 %91, -1777355736
  %94 = sub i32 %93, %92
  %95 = sub i32 %94, -1777355736
  %sub25 = sub nsw i32 %91, %92
  %96 = load i32, i32* %c, align 4
  %mul26 = mul nsw i32 %96, 10
  %97 = sub i32 %95, -126721862
  %98 = sub i32 %97, %mul26
  %99 = add i32 %98, -126721862
  %sub27 = sub nsw i32 %95, %mul26
  %div28 = sdiv i32 %99, 100
  %rem29 = srem i32 %div28, 10
  store i32 %rem29, i32* %d, align 4
  %100 = load i32, i32* %a, align 4
  %101 = load i32, i32* %b, align 4
  %102 = sub i32 0, %101
  %103 = add i32 %100, %102
  %sub30 = sub nsw i32 %100, %101
  %104 = load i32, i32* %c, align 4
  %mul31 = mul nsw i32 %104, 10
  %105 = sub i32 0, %mul31
  %106 = add i32 %103, %105
  %sub32 = sub nsw i32 %103, %mul31
  %107 = load i32, i32* %d, align 4
  %mul33 = mul nsw i32 %107, 100
  %108 = sub i32 0, %mul33
  %109 = add i32 %106, %108
  %sub34 = sub nsw i32 %106, %mul33
  %div35 = sdiv i32 %109, 1000
  store i32 %div35, i32* %e, align 4
  %110 = load i32, i32* %b, align 4
  %mul36 = mul nsw i32 %110, 1000
  %111 = load i32, i32* %c, align 4
  %mul37 = mul nsw i32 %111, 100
  %112 = sub i32 0, %mul36
  %113 = sub i32 0, %mul37
  %114 = add i32 %112, %113
  %115 = sub i32 0, %114
  %add38 = add nsw i32 %mul36, %mul37
  %116 = load i32, i32* %d, align 4
  %mul39 = mul nsw i32 %116, 10
  %117 = sub i32 %115, -1502056877
  %118 = add i32 %117, %mul39
  %119 = add i32 %118, -1502056877
  %add40 = add nsw i32 %115, %mul39
  %120 = load i32, i32* %e, align 4
  %121 = sub i32 0, %120
  %122 = sub i32 %119, %121
  %add41 = add nsw i32 %119, %120
  store i32 %122, i32* %s, align 4
  store i32 -1306362256, i32* %switchVar
  br label %loopEnd

if.else42:                                        ; preds = %loopEntry
  %123 = load i32, i32* %a, align 4
  %cmp43 = icmp slt i32 %123, 100000
  %124 = select i1 %cmp43, i32 211396220, i32 -453468443
  store i32 %124, i32* %switchVar
  br label %loopEnd

if.then44:                                        ; preds = %loopEntry
  %125 = load i32, i32* @x
  %126 = load i32, i32* @y
  %127 = add i32 %125, 1404743791
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, 1404743791
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  %151 = select i1 %149, i32 845284111, i32 -1676046288
  store i32 %151, i32* %switchVar
  br label %loopEnd

originalBB166:                                    ; preds = %loopEntry
  %152 = load i32, i32* %a, align 4
  %rem45 = srem i32 %152, 10
  store i32 %rem45, i32* %b, align 4
  %153 = load i32, i32* %a, align 4
  %154 = load i32, i32* %b, align 4
  %155 = sub i32 0, %154
  %156 = add i32 %153, %155
  %sub46 = sub nsw i32 %153, %154
  %div47 = sdiv i32 %156, 10
  %rem48 = srem i32 %div47, 10
  store i32 %rem48, i32* %c, align 4
  %157 = load i32, i32* %a, align 4
  %158 = load i32, i32* %b, align 4
  %159 = sub i32 %157, -1057827989
  %160 = sub i32 %159, %158
  %161 = add i32 %160, -1057827989
  %sub49 = sub nsw i32 %157, %158
  %162 = load i32, i32* %c, align 4
  %mul50 = mul nsw i32 %162, 10
  %163 = add i32 %161, 1583343825
  %164 = sub i32 %163, %mul50
  %165 = sub i32 %164, 1583343825
  %sub51 = sub nsw i32 %161, %mul50
  %div52 = sdiv i32 %165, 100
  %rem53 = srem i32 %div52, 10
  store i32 %rem53, i32* %d, align 4
  %166 = load i32, i32* %a, align 4
  %167 = load i32, i32* %b, align 4
  %168 = sub i32 %166, 1566643878
  %169 = sub i32 %168, %167
  %170 = add i32 %169, 1566643878
  %sub54 = sub nsw i32 %166, %167
  %171 = load i32, i32* %c, align 4
  %mul55 = mul nsw i32 %171, 10
  %172 = sub i32 0, %mul55
  %173 = add i32 %170, %172
  %sub56 = sub nsw i32 %170, %mul55
  %174 = load i32, i32* %d, align 4
  %mul57 = mul nsw i32 %174, 100
  %175 = sub i32 0, %mul57
  %176 = add i32 %173, %175
  %sub58 = sub nsw i32 %173, %mul57
  %div59 = sdiv i32 %176, 1000
  %rem60 = srem i32 %div59, 10
  store i32 %rem60, i32* %e, align 4
  %177 = load i32, i32* %a, align 4
  %178 = load i32, i32* %b, align 4
  %179 = sub i32 0, %178
  %180 = add i32 %177, %179
  %sub61 = sub nsw i32 %177, %178
  %181 = load i32, i32* %c, align 4
  %mul62 = mul nsw i32 %181, 10
  %182 = sub i32 0, %mul62
  %183 = add i32 %180, %182
  %sub63 = sub nsw i32 %180, %mul62
  %184 = load i32, i32* %d, align 4
  %mul64 = mul nsw i32 %184, 100
  %185 = add i32 %183, -1013641409
  %186 = sub i32 %185, %mul64
  %187 = sub i32 %186, -1013641409
  %sub65 = sub nsw i32 %183, %mul64
  %188 = load i32, i32* %e, align 4
  %mul66 = mul nsw i32 %188, 1000
  %189 = add i32 %187, 1803172620
  %190 = sub i32 %189, %mul66
  %191 = sub i32 %190, 1803172620
  %sub67 = sub nsw i32 %187, %mul66
  %div68 = sdiv i32 %191, 10000
  store i32 %div68, i32* %f, align 4
  %192 = load i32, i32* %b, align 4
  %mul69 = mul nsw i32 %192, 10000
  %193 = load i32, i32* %c, align 4
  %mul70 = mul nsw i32 %193, 1000
  %194 = sub i32 0, %mul70
  %195 = sub i32 %mul69, %194
  %add71 = add nsw i32 %mul69, %mul70
  %196 = load i32, i32* %d, align 4
  %mul72 = mul nsw i32 %196, 100
  %197 = sub i32 %195, 2102900431
  %198 = add i32 %197, %mul72
  %199 = add i32 %198, 2102900431
  %add73 = add nsw i32 %195, %mul72
  %200 = load i32, i32* %e, align 4
  %mul74 = mul nsw i32 %200, 10
  %201 = sub i32 0, %199
  %202 = sub i32 0, %mul74
  %203 = add i32 %201, %202
  %204 = sub i32 0, %203
  %add75 = add nsw i32 %199, %mul74
  %205 = load i32, i32* %f, align 4
  %206 = sub i32 0, %204
  %207 = sub i32 0, %205
  %208 = add i32 %206, %207
  %209 = sub i32 0, %208
  %add76 = add nsw i32 %204, %205
  store i32 %209, i32* %s, align 4
  %210 = load i32, i32* @x
  %211 = load i32, i32* @y
  %212 = sub i32 %210, -1478937543
  %213 = sub i32 %212, 1
  %214 = add i32 %213, -1478937543
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  %224 = select i1 %222, i32 2056801919, i32 -1676046288
  store i32 %224, i32* %switchVar
  br label %loopEnd

originalBBpart2383:                               ; preds = %loopEntry
  store i32 -453468443, i32* %switchVar
  br label %loopEnd

if.end:                                           ; preds = %loopEntry
  store i32 -1306362256, i32* %switchVar
  br label %loopEnd

if.end77:                                         ; preds = %loopEntry
  store i32 -1667640895, i32* %switchVar
  br label %loopEnd

if.end78:                                         ; preds = %loopEntry
  store i32 1955351648, i32* %switchVar
  br label %loopEnd

if.end79:                                         ; preds = %loopEntry
  store i32 -2103525498, i32* %switchVar
  br label %loopEnd

if.end80:                                         ; preds = %loopEntry
  %225 = load i32, i32* %s, align 4
  %call81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %225)
  ret void

originalBBalteredBB:                              ; preds = %loopEntry
  %226 = load i32, i32* %a, align 4
  %227 = sub i32 0, -1784534630
  %228 = sub i32 %227, %226
  %229 = add i32 %228, -1784534630
  %_ = sub i32 0, %226
  %230 = add i32 %229, -1362434905
  %231 = add i32 %230, 10
  %232 = sub i32 %231, -1362434905
  %gen = add i32 %229, 10
  %233 = sub i32 0, 10
  %234 = add i32 %226, %233
  %_82 = sub i32 %226, 10
  %gen83 = mul i32 %234, 10
  %_84 = shl i32 %226, 10
  %235 = sub i32 0, 10
  %236 = add i32 %226, %235
  %_85 = sub i32 %226, 10
  %gen86 = mul i32 %236, 10
  %237 = sub i32 0, %226
  %238 = add i32 0, %237
  %_87 = sub i32 0, %226
  %239 = sub i32 %238, 1602920735
  %240 = add i32 %239, 10
  %241 = add i32 %240, 1602920735
  %gen88 = add i32 %238, 10
  %_89 = shl i32 %226, 10
  %242 = sub i32 0, %226
  %243 = add i32 0, %242
  %_90 = sub i32 0, %226
  %244 = sub i32 0, %243
  %245 = sub i32 0, 10
  %246 = add i32 %244, %245
  %247 = sub i32 0, %246
  %gen91 = add i32 %243, 10
  %rem6alteredBB = srem i32 %226, 10
  store i32 %rem6alteredBB, i32* %b, align 4
  %248 = load i32, i32* %a, align 4
  %249 = load i32, i32* %b, align 4
  %250 = sub i32 0, %248
  %251 = add i32 0, %250
  %_92 = sub i32 0, %248
  %252 = sub i32 0, %251
  %253 = sub i32 0, %249
  %254 = add i32 %252, %253
  %255 = sub i32 0, %254
  %gen93 = add i32 %251, %249
  %_94 = shl i32 %248, %249
  %_95 = shl i32 %248, %249
  %256 = add i32 0, 1693421652
  %257 = sub i32 %256, %248
  %258 = sub i32 %257, 1693421652
  %_96 = sub i32 0, %248
  %259 = sub i32 0, %249
  %260 = sub i32 %258, %259
  %gen97 = add i32 %258, %249
  %261 = add i32 %248, -83674572
  %262 = sub i32 %261, %249
  %263 = sub i32 %262, -83674572
  %sub7alteredBB = sub nsw i32 %248, %249
  %264 = sub i32 %263, 1024441149
  %265 = sub i32 %264, 10
  %266 = add i32 %265, 1024441149
  %_98 = sub i32 %263, 10
  %gen99 = mul i32 %266, 10
  %267 = sub i32 0, 632404101
  %268 = sub i32 %267, %263
  %269 = add i32 %268, 632404101
  %_100 = sub i32 0, %263
  %270 = sub i32 0, %269
  %271 = sub i32 0, 10
  %272 = add i32 %270, %271
  %273 = sub i32 0, %272
  %gen101 = add i32 %269, 10
  %_102 = shl i32 %263, 10
  %274 = add i32 %263, 2069780395
  %275 = sub i32 %274, 10
  %276 = sub i32 %275, 2069780395
  %_103 = sub i32 %263, 10
  %gen104 = mul i32 %276, 10
  %277 = sub i32 %263, -1650731392
  %278 = sub i32 %277, 10
  %279 = add i32 %278, -1650731392
  %_105 = sub i32 %263, 10
  %gen106 = mul i32 %279, 10
  %280 = sub i32 %263, -1012181982
  %281 = sub i32 %280, 10
  %282 = add i32 %281, -1012181982
  %_107 = sub i32 %263, 10
  %gen108 = mul i32 %282, 10
  %_109 = shl i32 %263, 10
  %_110 = shl i32 %263, 10
  %_111 = shl i32 %263, 10
  %div8alteredBB = sdiv i32 %263, 10
  %283 = sub i32 0, -1660312057
  %284 = sub i32 %283, %div8alteredBB
  %285 = add i32 %284, -1660312057
  %_112 = sub i32 0, %div8alteredBB
  %286 = add i32 %285, 1723074038
  %287 = add i32 %286, 10
  %288 = sub i32 %287, 1723074038
  %gen113 = add i32 %285, 10
  %289 = add i32 %div8alteredBB, -1603797046
  %290 = sub i32 %289, 10
  %291 = sub i32 %290, -1603797046
  %_114 = sub i32 %div8alteredBB, 10
  %gen115 = mul i32 %291, 10
  %292 = sub i32 0, 10
  %293 = add i32 %div8alteredBB, %292
  %_116 = sub i32 %div8alteredBB, 10
  %gen117 = mul i32 %293, 10
  %294 = add i32 0, -1105877365
  %295 = sub i32 %294, %div8alteredBB
  %296 = sub i32 %295, -1105877365
  %_118 = sub i32 0, %div8alteredBB
  %297 = sub i32 0, 10
  %298 = sub i32 %296, %297
  %gen119 = add i32 %296, 10
  %299 = sub i32 0, -135381556
  %300 = sub i32 %299, %div8alteredBB
  %301 = add i32 %300, -135381556
  %_120 = sub i32 0, %div8alteredBB
  %302 = sub i32 0, %301
  %303 = sub i32 0, 10
  %304 = add i32 %302, %303
  %305 = sub i32 0, %304
  %gen121 = add i32 %301, 10
  %rem9alteredBB = srem i32 %div8alteredBB, 10
  store i32 %rem9alteredBB, i32* %c, align 4
  %306 = load i32, i32* %a, align 4
  %307 = load i32, i32* %b, align 4
  %_122 = shl i32 %306, %307
  %308 = sub i32 0, %306
  %309 = add i32 0, %308
  %_123 = sub i32 0, %306
  %310 = sub i32 0, %309
  %311 = sub i32 0, %307
  %312 = add i32 %310, %311
  %313 = sub i32 0, %312
  %gen124 = add i32 %309, %307
  %314 = add i32 %306, 1095523062
  %315 = sub i32 %314, %307
  %316 = sub i32 %315, 1095523062
  %sub10alteredBB = sub nsw i32 %306, %307
  %317 = load i32, i32* %c, align 4
  %318 = add i32 0, 963498879
  %319 = sub i32 %318, %317
  %320 = sub i32 %319, 963498879
  %_125 = sub i32 0, %317
  %321 = sub i32 0, %320
  %322 = sub i32 0, 10
  %323 = add i32 %321, %322
  %324 = sub i32 0, %323
  %gen126 = add i32 %320, 10
  %mul11alteredBB = mul nsw i32 %317, 10
  %325 = add i32 %316, 1807427237
  %326 = sub i32 %325, %mul11alteredBB
  %327 = sub i32 %326, 1807427237
  %_127 = sub i32 %316, %mul11alteredBB
  %gen128 = mul i32 %327, %mul11alteredBB
  %_129 = shl i32 %316, %mul11alteredBB
  %328 = add i32 0, -692629154
  %329 = sub i32 %328, %316
  %330 = sub i32 %329, -692629154
  %_130 = sub i32 0, %316
  %331 = sub i32 0, %mul11alteredBB
  %332 = sub i32 %330, %331
  %gen131 = add i32 %330, %mul11alteredBB
  %_132 = shl i32 %316, %mul11alteredBB
  %333 = sub i32 %316, -1569933912
  %334 = sub i32 %333, %mul11alteredBB
  %335 = add i32 %334, -1569933912
  %_133 = sub i32 %316, %mul11alteredBB
  %gen134 = mul i32 %335, %mul11alteredBB
  %336 = add i32 %316, 1997953534
  %337 = sub i32 %336, %mul11alteredBB
  %338 = sub i32 %337, 1997953534
  %sub12alteredBB = sub nsw i32 %316, %mul11alteredBB
  %_135 = shl i32 %338, 100
  %_136 = shl i32 %338, 100
  %339 = add i32 0, -1929995629
  %340 = sub i32 %339, %338
  %341 = sub i32 %340, -1929995629
  %_137 = sub i32 0, %338
  %342 = sub i32 %341, 237448072
  %343 = add i32 %342, 100
  %344 = add i32 %343, 237448072
  %gen138 = add i32 %341, 100
  %div13alteredBB = sdiv i32 %338, 100
  store i32 %div13alteredBB, i32* %d, align 4
  %345 = load i32, i32* %b, align 4
  %_139 = shl i32 %345, 100
  %346 = sub i32 0, -1618581136
  %347 = sub i32 %346, %345
  %348 = add i32 %347, -1618581136
  %_140 = sub i32 0, %345
  %349 = sub i32 0, %348
  %350 = sub i32 0, 100
  %351 = add i32 %349, %350
  %352 = sub i32 0, %351
  %gen141 = add i32 %348, 100
  %353 = add i32 0, -1426158874
  %354 = sub i32 %353, %345
  %355 = sub i32 %354, -1426158874
  %_142 = sub i32 0, %345
  %356 = sub i32 0, %355
  %357 = sub i32 0, 100
  %358 = add i32 %356, %357
  %359 = sub i32 0, %358
  %gen143 = add i32 %355, 100
  %360 = sub i32 0, %345
  %361 = add i32 0, %360
  %_144 = sub i32 0, %345
  %362 = sub i32 %361, -645664779
  %363 = add i32 %362, 100
  %364 = add i32 %363, -645664779
  %gen145 = add i32 %361, 100
  %_146 = shl i32 %345, 100
  %365 = sub i32 0, 100
  %366 = add i32 %345, %365
  %_147 = sub i32 %345, 100
  %gen148 = mul i32 %366, 100
  %367 = sub i32 0, -2088175639
  %368 = sub i32 %367, %345
  %369 = add i32 %368, -2088175639
  %_149 = sub i32 0, %345
  %370 = sub i32 %369, 109262313
  %371 = add i32 %370, 100
  %372 = add i32 %371, 109262313
  %gen150 = add i32 %369, 100
  %mul14alteredBB = mul nsw i32 %345, 100
  %373 = load i32, i32* %c, align 4
  %374 = add i32 0, -671410841
  %375 = sub i32 %374, %373
  %376 = sub i32 %375, -671410841
  %_151 = sub i32 0, %373
  %377 = sub i32 %376, 1397123863
  %378 = add i32 %377, 10
  %379 = add i32 %378, 1397123863
  %gen152 = add i32 %376, 10
  %_153 = shl i32 %373, 10
  %_154 = shl i32 %373, 10
  %380 = sub i32 0, %373
  %381 = add i32 0, %380
  %_155 = sub i32 0, %373
  %382 = sub i32 %381, -1906532698
  %383 = add i32 %382, 10
  %384 = add i32 %383, -1906532698
  %gen156 = add i32 %381, 10
  %385 = add i32 %373, -401124144
  %386 = sub i32 %385, 10
  %387 = sub i32 %386, -401124144
  %_157 = sub i32 %373, 10
  %gen158 = mul i32 %387, 10
  %mul15alteredBB = mul nsw i32 %373, 10
  %388 = sub i32 %mul14alteredBB, 1771755268
  %389 = sub i32 %388, %mul15alteredBB
  %390 = add i32 %389, 1771755268
  %_159 = sub i32 %mul14alteredBB, %mul15alteredBB
  %gen160 = mul i32 %390, %mul15alteredBB
  %391 = add i32 %mul14alteredBB, 303877485
  %392 = sub i32 %391, %mul15alteredBB
  %393 = sub i32 %392, 303877485
  %_161 = sub i32 %mul14alteredBB, %mul15alteredBB
  %gen162 = mul i32 %393, %mul15alteredBB
  %_163 = shl i32 %mul14alteredBB, %mul15alteredBB
  %394 = sub i32 %mul14alteredBB, -1420277437
  %395 = add i32 %394, %mul15alteredBB
  %396 = add i32 %395, -1420277437
  %add16alteredBB = add nsw i32 %mul14alteredBB, %mul15alteredBB
  %397 = load i32, i32* %d, align 4
  %398 = add i32 %396, 887154496
  %399 = sub i32 %398, %397
  %400 = sub i32 %399, 887154496
  %_164 = sub i32 %396, %397
  %gen165 = mul i32 %400, %397
  %401 = sub i32 %396, -2058300937
  %402 = add i32 %401, %397
  %403 = add i32 %402, -2058300937
  %add17alteredBB = add nsw i32 %396, %397
  store i32 %403, i32* %s, align 4
  store i32 -993396169, i32* %switchVar
  br label %loopEnd

originalBB166alteredBB:                           ; preds = %loopEntry
  %404 = load i32, i32* %a, align 4
  %405 = sub i32 0, -237774333
  %406 = sub i32 %405, %404
  %407 = add i32 %406, -237774333
  %_167 = sub i32 0, %404
  %408 = sub i32 %407, -745178330
  %409 = add i32 %408, 10
  %410 = add i32 %409, -745178330
  %gen168 = add i32 %407, 10
  %rem45alteredBB = srem i32 %404, 10
  store i32 %rem45alteredBB, i32* %b, align 4
  %411 = load i32, i32* %a, align 4
  %412 = load i32, i32* %b, align 4
  %413 = add i32 0, -713693710
  %414 = sub i32 %413, %411
  %415 = sub i32 %414, -713693710
  %_169 = sub i32 0, %411
  %416 = sub i32 0, %415
  %417 = sub i32 0, %412
  %418 = add i32 %416, %417
  %419 = sub i32 0, %418
  %gen170 = add i32 %415, %412
  %420 = add i32 %411, 1875378691
  %421 = sub i32 %420, %412
  %422 = sub i32 %421, 1875378691
  %_171 = sub i32 %411, %412
  %gen172 = mul i32 %422, %412
  %_173 = shl i32 %411, %412
  %_174 = shl i32 %411, %412
  %423 = sub i32 0, %412
  %424 = add i32 %411, %423
  %_175 = sub i32 %411, %412
  %gen176 = mul i32 %424, %412
  %425 = sub i32 0, %412
  %426 = add i32 %411, %425
  %_177 = sub i32 %411, %412
  %gen178 = mul i32 %426, %412
  %427 = sub i32 0, %411
  %428 = add i32 0, %427
  %_179 = sub i32 0, %411
  %429 = sub i32 %428, 1890421755
  %430 = add i32 %429, %412
  %431 = add i32 %430, 1890421755
  %gen180 = add i32 %428, %412
  %432 = sub i32 %411, -1739375062
  %433 = sub i32 %432, %412
  %434 = add i32 %433, -1739375062
  %sub46alteredBB = sub nsw i32 %411, %412
  %_181 = shl i32 %434, 10
  %435 = sub i32 %434, -774705578
  %436 = sub i32 %435, 10
  %437 = add i32 %436, -774705578
  %_182 = sub i32 %434, 10
  %gen183 = mul i32 %437, 10
  %438 = sub i32 0, -312264052
  %439 = sub i32 %438, %434
  %440 = add i32 %439, -312264052
  %_184 = sub i32 0, %434
  %441 = sub i32 0, %440
  %442 = sub i32 0, 10
  %443 = add i32 %441, %442
  %444 = sub i32 0, %443
  %gen185 = add i32 %440, 10
  %445 = sub i32 %434, 1380337305
  %446 = sub i32 %445, 10
  %447 = add i32 %446, 1380337305
  %_186 = sub i32 %434, 10
  %gen187 = mul i32 %447, 10
  %448 = sub i32 0, %434
  %449 = add i32 0, %448
  %_188 = sub i32 0, %434
  %450 = sub i32 0, %449
  %451 = sub i32 0, 10
  %452 = add i32 %450, %451
  %453 = sub i32 0, %452
  %gen189 = add i32 %449, 10
  %div47alteredBB = sdiv i32 %434, 10
  %_190 = shl i32 %div47alteredBB, 10
  %rem48alteredBB = srem i32 %div47alteredBB, 10
  store i32 %rem48alteredBB, i32* %c, align 4
  %454 = load i32, i32* %a, align 4
  %455 = load i32, i32* %b, align 4
  %456 = sub i32 0, %455
  %457 = add i32 %454, %456
  %_191 = sub i32 %454, %455
  %gen192 = mul i32 %457, %455
  %_193 = shl i32 %454, %455
  %458 = sub i32 0, %455
  %459 = add i32 %454, %458
  %sub49alteredBB = sub nsw i32 %454, %455
  %460 = load i32, i32* %c, align 4
  %_194 = shl i32 %460, 10
  %_195 = shl i32 %460, 10
  %461 = sub i32 0, 36503257
  %462 = sub i32 %461, %460
  %463 = add i32 %462, 36503257
  %_196 = sub i32 0, %460
  %464 = sub i32 0, %463
  %465 = sub i32 0, 10
  %466 = add i32 %464, %465
  %467 = sub i32 0, %466
  %gen197 = add i32 %463, 10
  %468 = sub i32 %460, -147153964
  %469 = sub i32 %468, 10
  %470 = add i32 %469, -147153964
  %_198 = sub i32 %460, 10
  %gen199 = mul i32 %470, 10
  %471 = sub i32 0, 69940048
  %472 = sub i32 %471, %460
  %473 = add i32 %472, 69940048
  %_200 = sub i32 0, %460
  %474 = add i32 %473, -1545421106
  %475 = add i32 %474, 10
  %476 = sub i32 %475, -1545421106
  %gen201 = add i32 %473, 10
  %mul50alteredBB = mul nsw i32 %460, 10
  %477 = sub i32 0, %459
  %478 = add i32 0, %477
  %_202 = sub i32 0, %459
  %479 = sub i32 0, %478
  %480 = sub i32 0, %mul50alteredBB
  %481 = add i32 %479, %480
  %482 = sub i32 0, %481
  %gen203 = add i32 %478, %mul50alteredBB
  %483 = sub i32 0, %mul50alteredBB
  %484 = add i32 %459, %483
  %_204 = sub i32 %459, %mul50alteredBB
  %gen205 = mul i32 %484, %mul50alteredBB
  %485 = sub i32 0, %459
  %486 = add i32 0, %485
  %_206 = sub i32 0, %459
  %487 = sub i32 0, %486
  %488 = sub i32 0, %mul50alteredBB
  %489 = add i32 %487, %488
  %490 = sub i32 0, %489
  %gen207 = add i32 %486, %mul50alteredBB
  %491 = sub i32 0, %459
  %492 = add i32 0, %491
  %_208 = sub i32 0, %459
  %493 = sub i32 %492, -1756560517
  %494 = add i32 %493, %mul50alteredBB
  %495 = add i32 %494, -1756560517
  %gen209 = add i32 %492, %mul50alteredBB
  %496 = add i32 0, 394368169
  %497 = sub i32 %496, %459
  %498 = sub i32 %497, 394368169
  %_210 = sub i32 0, %459
  %499 = sub i32 0, %498
  %500 = sub i32 0, %mul50alteredBB
  %501 = add i32 %499, %500
  %502 = sub i32 0, %501
  %gen211 = add i32 %498, %mul50alteredBB
  %503 = sub i32 0, %mul50alteredBB
  %504 = add i32 %459, %503
  %_212 = sub i32 %459, %mul50alteredBB
  %gen213 = mul i32 %504, %mul50alteredBB
  %505 = sub i32 0, %459
  %506 = add i32 0, %505
  %_214 = sub i32 0, %459
  %507 = sub i32 0, %506
  %508 = sub i32 0, %mul50alteredBB
  %509 = add i32 %507, %508
  %510 = sub i32 0, %509
  %gen215 = add i32 %506, %mul50alteredBB
  %_216 = shl i32 %459, %mul50alteredBB
  %511 = sub i32 0, %mul50alteredBB
  %512 = add i32 %459, %511
  %_217 = sub i32 %459, %mul50alteredBB
  %gen218 = mul i32 %512, %mul50alteredBB
  %513 = add i32 %459, 1475894856
  %514 = sub i32 %513, %mul50alteredBB
  %515 = sub i32 %514, 1475894856
  %sub51alteredBB = sub nsw i32 %459, %mul50alteredBB
  %_219 = shl i32 %515, 100
  %516 = add i32 0, -337295877
  %517 = sub i32 %516, %515
  %518 = sub i32 %517, -337295877
  %_220 = sub i32 0, %515
  %519 = sub i32 %518, 1076106948
  %520 = add i32 %519, 100
  %521 = add i32 %520, 1076106948
  %gen221 = add i32 %518, 100
  %div52alteredBB = sdiv i32 %515, 100
  %522 = sub i32 %div52alteredBB, 1532207864
  %523 = sub i32 %522, 10
  %524 = add i32 %523, 1532207864
  %_222 = sub i32 %div52alteredBB, 10
  %gen223 = mul i32 %524, 10
  %525 = sub i32 0, -531093813
  %526 = sub i32 %525, %div52alteredBB
  %527 = add i32 %526, -531093813
  %_224 = sub i32 0, %div52alteredBB
  %528 = sub i32 0, %527
  %529 = sub i32 0, 10
  %530 = add i32 %528, %529
  %531 = sub i32 0, %530
  %gen225 = add i32 %527, 10
  %rem53alteredBB = srem i32 %div52alteredBB, 10
  store i32 %rem53alteredBB, i32* %d, align 4
  %532 = load i32, i32* %a, align 4
  %533 = load i32, i32* %b, align 4
  %534 = sub i32 0, %532
  %535 = add i32 0, %534
  %_226 = sub i32 0, %532
  %536 = sub i32 0, %535
  %537 = sub i32 0, %533
  %538 = add i32 %536, %537
  %539 = sub i32 0, %538
  %gen227 = add i32 %535, %533
  %540 = sub i32 0, %532
  %541 = add i32 0, %540
  %_228 = sub i32 0, %532
  %542 = sub i32 0, %541
  %543 = sub i32 0, %533
  %544 = add i32 %542, %543
  %545 = sub i32 0, %544
  %gen229 = add i32 %541, %533
  %_230 = shl i32 %532, %533
  %_231 = shl i32 %532, %533
  %_232 = shl i32 %532, %533
  %546 = sub i32 %532, -1416021405
  %547 = sub i32 %546, %533
  %548 = add i32 %547, -1416021405
  %sub54alteredBB = sub nsw i32 %532, %533
  %549 = load i32, i32* %c, align 4
  %550 = add i32 %549, -537394561
  %551 = sub i32 %550, 10
  %552 = sub i32 %551, -537394561
  %_233 = sub i32 %549, 10
  %gen234 = mul i32 %552, 10
  %_235 = shl i32 %549, 10
  %mul55alteredBB = mul nsw i32 %549, 10
  %553 = sub i32 0, -842924450
  %554 = sub i32 %553, %548
  %555 = add i32 %554, -842924450
  %_236 = sub i32 0, %548
  %556 = sub i32 %555, 447068930
  %557 = add i32 %556, %mul55alteredBB
  %558 = add i32 %557, 447068930
  %gen237 = add i32 %555, %mul55alteredBB
  %559 = sub i32 0, %548
  %560 = add i32 0, %559
  %_238 = sub i32 0, %548
  %561 = add i32 %560, -271739644
  %562 = add i32 %561, %mul55alteredBB
  %563 = sub i32 %562, -271739644
  %gen239 = add i32 %560, %mul55alteredBB
  %_240 = shl i32 %548, %mul55alteredBB
  %564 = add i32 0, -835277039
  %565 = sub i32 %564, %548
  %566 = sub i32 %565, -835277039
  %_241 = sub i32 0, %548
  %567 = sub i32 0, %mul55alteredBB
  %568 = sub i32 %566, %567
  %gen242 = add i32 %566, %mul55alteredBB
  %569 = sub i32 %548, -851359657
  %570 = sub i32 %569, %mul55alteredBB
  %571 = add i32 %570, -851359657
  %sub56alteredBB = sub nsw i32 %548, %mul55alteredBB
  %572 = load i32, i32* %d, align 4
  %mul57alteredBB = mul nsw i32 %572, 100
  %573 = add i32 0, -1546097401
  %574 = sub i32 %573, %571
  %575 = sub i32 %574, -1546097401
  %_243 = sub i32 0, %571
  %576 = sub i32 %575, -1380048216
  %577 = add i32 %576, %mul57alteredBB
  %578 = add i32 %577, -1380048216
  %gen244 = add i32 %575, %mul57alteredBB
  %579 = sub i32 0, %571
  %580 = add i32 0, %579
  %_245 = sub i32 0, %571
  %581 = add i32 %580, -1227210726
  %582 = add i32 %581, %mul57alteredBB
  %583 = sub i32 %582, -1227210726
  %gen246 = add i32 %580, %mul57alteredBB
  %584 = sub i32 %571, -580457398
  %585 = sub i32 %584, %mul57alteredBB
  %586 = add i32 %585, -580457398
  %sub58alteredBB = sub nsw i32 %571, %mul57alteredBB
  %_247 = shl i32 %586, 1000
  %587 = sub i32 0, 1000
  %588 = add i32 %586, %587
  %_248 = sub i32 %586, 1000
  %gen249 = mul i32 %588, 1000
  %_250 = shl i32 %586, 1000
  %589 = sub i32 0, 646224314
  %590 = sub i32 %589, %586
  %591 = add i32 %590, 646224314
  %_251 = sub i32 0, %586
  %592 = sub i32 %591, -395503051
  %593 = add i32 %592, 1000
  %594 = add i32 %593, -395503051
  %gen252 = add i32 %591, 1000
  %595 = sub i32 %586, 1498519752
  %596 = sub i32 %595, 1000
  %597 = add i32 %596, 1498519752
  %_253 = sub i32 %586, 1000
  %gen254 = mul i32 %597, 1000
  %div59alteredBB = sdiv i32 %586, 1000
  %598 = sub i32 %div59alteredBB, 1528499580
  %599 = sub i32 %598, 10
  %600 = add i32 %599, 1528499580
  %_255 = sub i32 %div59alteredBB, 10
  %gen256 = mul i32 %600, 10
  %rem60alteredBB = srem i32 %div59alteredBB, 10
  store i32 %rem60alteredBB, i32* %e, align 4
  %601 = load i32, i32* %a, align 4
  %602 = load i32, i32* %b, align 4
  %603 = sub i32 0, %602
  %604 = add i32 %601, %603
  %_257 = sub i32 %601, %602
  %gen258 = mul i32 %604, %602
  %605 = sub i32 0, %602
  %606 = add i32 %601, %605
  %_259 = sub i32 %601, %602
  %gen260 = mul i32 %606, %602
  %607 = add i32 %601, 137975943
  %608 = sub i32 %607, %602
  %609 = sub i32 %608, 137975943
  %sub61alteredBB = sub nsw i32 %601, %602
  %610 = load i32, i32* %c, align 4
  %_261 = shl i32 %610, 10
  %611 = add i32 %610, -1047381875
  %612 = sub i32 %611, 10
  %613 = sub i32 %612, -1047381875
  %_262 = sub i32 %610, 10
  %gen263 = mul i32 %613, 10
  %614 = sub i32 0, %610
  %615 = add i32 0, %614
  %_264 = sub i32 0, %610
  %616 = sub i32 %615, 774709160
  %617 = add i32 %616, 10
  %618 = add i32 %617, 774709160
  %gen265 = add i32 %615, 10
  %619 = add i32 %610, -473723861
  %620 = sub i32 %619, 10
  %621 = sub i32 %620, -473723861
  %_266 = sub i32 %610, 10
  %gen267 = mul i32 %621, 10
  %_268 = shl i32 %610, 10
  %_269 = shl i32 %610, 10
  %_270 = shl i32 %610, 10
  %622 = sub i32 0, 10
  %623 = add i32 %610, %622
  %_271 = sub i32 %610, 10
  %gen272 = mul i32 %623, 10
  %mul62alteredBB = mul nsw i32 %610, 10
  %_273 = shl i32 %609, %mul62alteredBB
  %_274 = shl i32 %609, %mul62alteredBB
  %_275 = shl i32 %609, %mul62alteredBB
  %624 = sub i32 0, %609
  %625 = add i32 0, %624
  %_276 = sub i32 0, %609
  %626 = sub i32 0, %mul62alteredBB
  %627 = sub i32 %625, %626
  %gen277 = add i32 %625, %mul62alteredBB
  %_278 = shl i32 %609, %mul62alteredBB
  %628 = sub i32 0, %mul62alteredBB
  %629 = add i32 %609, %628
  %sub63alteredBB = sub nsw i32 %609, %mul62alteredBB
  %630 = load i32, i32* %d, align 4
  %631 = sub i32 0, %630
  %632 = add i32 0, %631
  %_279 = sub i32 0, %630
  %633 = sub i32 0, %632
  %634 = sub i32 0, 100
  %635 = add i32 %633, %634
  %636 = sub i32 0, %635
  %gen280 = add i32 %632, 100
  %_281 = shl i32 %630, 100
  %mul64alteredBB = mul nsw i32 %630, 100
  %637 = add i32 0, 555292246
  %638 = sub i32 %637, %629
  %639 = sub i32 %638, 555292246
  %_282 = sub i32 0, %629
  %640 = sub i32 0, %639
  %641 = sub i32 0, %mul64alteredBB
  %642 = add i32 %640, %641
  %643 = sub i32 0, %642
  %gen283 = add i32 %639, %mul64alteredBB
  %644 = add i32 %629, -433988313
  %645 = sub i32 %644, %mul64alteredBB
  %646 = sub i32 %645, -433988313
  %_284 = sub i32 %629, %mul64alteredBB
  %gen285 = mul i32 %646, %mul64alteredBB
  %_286 = shl i32 %629, %mul64alteredBB
  %647 = sub i32 0, %629
  %648 = add i32 0, %647
  %_287 = sub i32 0, %629
  %649 = sub i32 0, %mul64alteredBB
  %650 = sub i32 %648, %649
  %gen288 = add i32 %648, %mul64alteredBB
  %651 = add i32 %629, -1779459501
  %652 = sub i32 %651, %mul64alteredBB
  %653 = sub i32 %652, -1779459501
  %_289 = sub i32 %629, %mul64alteredBB
  %gen290 = mul i32 %653, %mul64alteredBB
  %654 = sub i32 0, -786974490
  %655 = sub i32 %654, %629
  %656 = add i32 %655, -786974490
  %_291 = sub i32 0, %629
  %657 = sub i32 0, %656
  %658 = sub i32 0, %mul64alteredBB
  %659 = add i32 %657, %658
  %660 = sub i32 0, %659
  %gen292 = add i32 %656, %mul64alteredBB
  %_293 = shl i32 %629, %mul64alteredBB
  %661 = add i32 0, -2134908300
  %662 = sub i32 %661, %629
  %663 = sub i32 %662, -2134908300
  %_294 = sub i32 0, %629
  %664 = sub i32 0, %663
  %665 = sub i32 0, %mul64alteredBB
  %666 = add i32 %664, %665
  %667 = sub i32 0, %666
  %gen295 = add i32 %663, %mul64alteredBB
  %668 = add i32 %629, 1356446651
  %669 = sub i32 %668, %mul64alteredBB
  %670 = sub i32 %669, 1356446651
  %sub65alteredBB = sub nsw i32 %629, %mul64alteredBB
  %671 = load i32, i32* %e, align 4
  %_296 = shl i32 %671, 1000
  %_297 = shl i32 %671, 1000
  %672 = sub i32 %671, -1812657074
  %673 = sub i32 %672, 1000
  %674 = add i32 %673, -1812657074
  %_298 = sub i32 %671, 1000
  %gen299 = mul i32 %674, 1000
  %675 = sub i32 0, 1000
  %676 = add i32 %671, %675
  %_300 = sub i32 %671, 1000
  %gen301 = mul i32 %676, 1000
  %677 = add i32 0, -686068060
  %678 = sub i32 %677, %671
  %679 = sub i32 %678, -686068060
  %_302 = sub i32 0, %671
  %680 = sub i32 0, 1000
  %681 = sub i32 %679, %680
  %gen303 = add i32 %679, 1000
  %682 = sub i32 0, 1000
  %683 = add i32 %671, %682
  %_304 = sub i32 %671, 1000
  %gen305 = mul i32 %683, 1000
  %_306 = shl i32 %671, 1000
  %mul66alteredBB = mul nsw i32 %671, 1000
  %684 = sub i32 0, 1123258240
  %685 = sub i32 %684, %670
  %686 = add i32 %685, 1123258240
  %_307 = sub i32 0, %670
  %687 = sub i32 0, %686
  %688 = sub i32 0, %mul66alteredBB
  %689 = add i32 %687, %688
  %690 = sub i32 0, %689
  %gen308 = add i32 %686, %mul66alteredBB
  %691 = sub i32 0, -57073874
  %692 = sub i32 %691, %670
  %693 = add i32 %692, -57073874
  %_309 = sub i32 0, %670
  %694 = sub i32 0, %mul66alteredBB
  %695 = sub i32 %693, %694
  %gen310 = add i32 %693, %mul66alteredBB
  %696 = sub i32 0, %mul66alteredBB
  %697 = add i32 %670, %696
  %sub67alteredBB = sub nsw i32 %670, %mul66alteredBB
  %698 = sub i32 0, 10000
  %699 = add i32 %697, %698
  %_311 = sub i32 %697, 10000
  %gen312 = mul i32 %699, 10000
  %700 = sub i32 0, 10000
  %701 = add i32 %697, %700
  %_313 = sub i32 %697, 10000
  %gen314 = mul i32 %701, 10000
  %_315 = shl i32 %697, 10000
  %702 = sub i32 %697, -1751134864
  %703 = sub i32 %702, 10000
  %704 = add i32 %703, -1751134864
  %_316 = sub i32 %697, 10000
  %gen317 = mul i32 %704, 10000
  %_318 = shl i32 %697, 10000
  %_319 = shl i32 %697, 10000
  %705 = sub i32 0, 10000
  %706 = add i32 %697, %705
  %_320 = sub i32 %697, 10000
  %gen321 = mul i32 %706, 10000
  %_322 = shl i32 %697, 10000
  %707 = add i32 0, -2031618932
  %708 = sub i32 %707, %697
  %709 = sub i32 %708, -2031618932
  %_323 = sub i32 0, %697
  %710 = sub i32 %709, -936241968
  %711 = add i32 %710, 10000
  %712 = add i32 %711, -936241968
  %gen324 = add i32 %709, 10000
  %div68alteredBB = sdiv i32 %697, 10000
  store i32 %div68alteredBB, i32* %f, align 4
  %713 = load i32, i32* %b, align 4
  %_325 = shl i32 %713, 10000
  %_326 = shl i32 %713, 10000
  %714 = add i32 0, -945090239
  %715 = sub i32 %714, %713
  %716 = sub i32 %715, -945090239
  %_327 = sub i32 0, %713
  %717 = add i32 %716, 1492701360
  %718 = add i32 %717, 10000
  %719 = sub i32 %718, 1492701360
  %gen328 = add i32 %716, 10000
  %_329 = shl i32 %713, 10000
  %720 = sub i32 %713, 1415256804
  %721 = sub i32 %720, 10000
  %722 = add i32 %721, 1415256804
  %_330 = sub i32 %713, 10000
  %gen331 = mul i32 %722, 10000
  %723 = add i32 0, 1874980075
  %724 = sub i32 %723, %713
  %725 = sub i32 %724, 1874980075
  %_332 = sub i32 0, %713
  %726 = sub i32 0, %725
  %727 = sub i32 0, 10000
  %728 = add i32 %726, %727
  %729 = sub i32 0, %728
  %gen333 = add i32 %725, 10000
  %mul69alteredBB = mul nsw i32 %713, 10000
  %730 = load i32, i32* %c, align 4
  %_334 = shl i32 %730, 1000
  %_335 = shl i32 %730, 1000
  %_336 = shl i32 %730, 1000
  %731 = sub i32 0, 1000
  %732 = add i32 %730, %731
  %_337 = sub i32 %730, 1000
  %gen338 = mul i32 %732, 1000
  %733 = sub i32 0, 2063872513
  %734 = sub i32 %733, %730
  %735 = add i32 %734, 2063872513
  %_339 = sub i32 0, %730
  %736 = sub i32 %735, -1773628025
  %737 = add i32 %736, 1000
  %738 = add i32 %737, -1773628025
  %gen340 = add i32 %735, 1000
  %739 = add i32 0, -64680532
  %740 = sub i32 %739, %730
  %741 = sub i32 %740, -64680532
  %_341 = sub i32 0, %730
  %742 = add i32 %741, 1851893515
  %743 = add i32 %742, 1000
  %744 = sub i32 %743, 1851893515
  %gen342 = add i32 %741, 1000
  %745 = sub i32 0, -562810086
  %746 = sub i32 %745, %730
  %747 = add i32 %746, -562810086
  %_343 = sub i32 0, %730
  %748 = add i32 %747, 2116857446
  %749 = add i32 %748, 1000
  %750 = sub i32 %749, 2116857446
  %gen344 = add i32 %747, 1000
  %751 = sub i32 %730, 1493766865
  %752 = sub i32 %751, 1000
  %753 = add i32 %752, 1493766865
  %_345 = sub i32 %730, 1000
  %gen346 = mul i32 %753, 1000
  %754 = sub i32 %730, -317914254
  %755 = sub i32 %754, 1000
  %756 = add i32 %755, -317914254
  %_347 = sub i32 %730, 1000
  %gen348 = mul i32 %756, 1000
  %mul70alteredBB = mul nsw i32 %730, 1000
  %757 = sub i32 0, %mul70alteredBB
  %758 = sub i32 %mul69alteredBB, %757
  %add71alteredBB = add nsw i32 %mul69alteredBB, %mul70alteredBB
  %759 = load i32, i32* %d, align 4
  %760 = add i32 %759, -898466505
  %761 = sub i32 %760, 100
  %762 = sub i32 %761, -898466505
  %_349 = sub i32 %759, 100
  %gen350 = mul i32 %762, 100
  %763 = sub i32 0, -1265949746
  %764 = sub i32 %763, %759
  %765 = add i32 %764, -1265949746
  %_351 = sub i32 0, %759
  %766 = sub i32 0, 100
  %767 = sub i32 %765, %766
  %gen352 = add i32 %765, 100
  %768 = sub i32 0, %759
  %769 = add i32 0, %768
  %_353 = sub i32 0, %759
  %770 = sub i32 %769, -2110091225
  %771 = add i32 %770, 100
  %772 = add i32 %771, -2110091225
  %gen354 = add i32 %769, 100
  %773 = sub i32 0, 100
  %774 = add i32 %759, %773
  %_355 = sub i32 %759, 100
  %gen356 = mul i32 %774, 100
  %_357 = shl i32 %759, 100
  %mul72alteredBB = mul nsw i32 %759, 100
  %775 = sub i32 %758, 1419217689
  %776 = sub i32 %775, %mul72alteredBB
  %777 = add i32 %776, 1419217689
  %_358 = sub i32 %758, %mul72alteredBB
  %gen359 = mul i32 %777, %mul72alteredBB
  %_360 = shl i32 %758, %mul72alteredBB
  %778 = sub i32 0, %mul72alteredBB
  %779 = add i32 %758, %778
  %_361 = sub i32 %758, %mul72alteredBB
  %gen362 = mul i32 %779, %mul72alteredBB
  %780 = sub i32 %758, 535487779
  %781 = sub i32 %780, %mul72alteredBB
  %782 = add i32 %781, 535487779
  %_363 = sub i32 %758, %mul72alteredBB
  %gen364 = mul i32 %782, %mul72alteredBB
  %783 = sub i32 %758, -1503506745
  %784 = sub i32 %783, %mul72alteredBB
  %785 = add i32 %784, -1503506745
  %_365 = sub i32 %758, %mul72alteredBB
  %gen366 = mul i32 %785, %mul72alteredBB
  %786 = add i32 0, -1558473288
  %787 = sub i32 %786, %758
  %788 = sub i32 %787, -1558473288
  %_367 = sub i32 0, %758
  %789 = sub i32 0, %788
  %790 = sub i32 0, %mul72alteredBB
  %791 = add i32 %789, %790
  %792 = sub i32 0, %791
  %gen368 = add i32 %788, %mul72alteredBB
  %793 = sub i32 %758, -1264444531
  %794 = add i32 %793, %mul72alteredBB
  %795 = add i32 %794, -1264444531
  %add73alteredBB = add nsw i32 %758, %mul72alteredBB
  %796 = load i32, i32* %e, align 4
  %_369 = shl i32 %796, 10
  %797 = sub i32 0, 2135018082
  %798 = sub i32 %797, %796
  %799 = add i32 %798, 2135018082
  %_370 = sub i32 0, %796
  %800 = sub i32 0, 10
  %801 = sub i32 %799, %800
  %gen371 = add i32 %799, 10
  %_372 = shl i32 %796, 10
  %802 = add i32 0, 283403545
  %803 = sub i32 %802, %796
  %804 = sub i32 %803, 283403545
  %_373 = sub i32 0, %796
  %805 = sub i32 0, 10
  %806 = sub i32 %804, %805
  %gen374 = add i32 %804, 10
  %807 = add i32 %796, -582233341
  %808 = sub i32 %807, 10
  %809 = sub i32 %808, -582233341
  %_375 = sub i32 %796, 10
  %gen376 = mul i32 %809, 10
  %_377 = shl i32 %796, 10
  %mul74alteredBB = mul nsw i32 %796, 10
  %810 = sub i32 0, %795
  %811 = add i32 0, %810
  %_378 = sub i32 0, %795
  %812 = sub i32 0, %mul74alteredBB
  %813 = sub i32 %811, %812
  %gen379 = add i32 %811, %mul74alteredBB
  %814 = sub i32 0, -1201054323
  %815 = sub i32 %814, %795
  %816 = add i32 %815, -1201054323
  %_380 = sub i32 0, %795
  %817 = sub i32 0, %mul74alteredBB
  %818 = sub i32 %816, %817
  %gen381 = add i32 %816, %mul74alteredBB
  %819 = add i32 %795, 203379894
  %820 = add i32 %819, %mul74alteredBB
  %821 = sub i32 %820, 203379894
  %add75alteredBB = add nsw i32 %795, %mul74alteredBB
  %822 = load i32, i32* %f, align 4
  %823 = sub i32 0, %821
  %824 = sub i32 0, %822
  %825 = add i32 %823, %824
  %826 = sub i32 0, %825
  %add76alteredBB = add nsw i32 %821, %822
  store i32 %826, i32* %s, align 4
  store i32 845284111, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBB166alteredBB, %originalBBalteredBB, %if.end79, %if.end78, %if.end77, %if.end, %originalBBpart2383, %originalBB166, %if.then44, %if.else42, %if.then20, %if.else18, %originalBBpart2, %originalBB, %if.then5, %if.else3, %if.then2, %if.else, %if.then, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
