; ModuleID = 'source-C-CXX/55/671.c'
source_filename = "source-C-CXX/55/671.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@x = common global i32 0
@y = common global i32 0

; Function Attrs: noinline nounwind uwtable
define void @main() #0 {
entry:
  %y.reg2mem = alloca i32*
  %.reg2mem191 = alloca i1
  %.reg2mem = alloca i1
  %0 = load i32, i32* @x
  %1 = load i32, i32* @y
  %2 = add i32 %0, 1324562906
  %3 = sub i32 %2, 1
  %4 = sub i32 %3, 1324562906
  %5 = sub i32 %0, 1
  %6 = mul i32 %0, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %.reg2mem
  %9 = icmp slt i32 %1, 10
  store i1 %9, i1* %.reg2mem191
  %switchVar = alloca i32
  store i32 1898094837, i32* %switchVar
  br label %loopEntry

loopEntry:                                        ; preds = %entry, %loopEnd
  %switchVar190 = load i32, i32* %switchVar
  switch i32 %switchVar190, label %switchDefault [
    i32 1898094837, label %first
    i32 1041846671, label %originalBB
    i32 -1030633230, label %originalBBpart2
    i32 1638962011, label %loop
    i32 -779580020, label %if.then
    i32 251604592, label %if.else
    i32 1663184300, label %if.end
    i32 1686881136, label %originalBBalteredBB
  ]

switchDefault:                                    ; preds = %loopEntry
  br label %loopEnd

first:                                            ; preds = %loopEntry
  %.reload = load volatile i1, i1* %.reg2mem
  %.reload192 = load volatile i1, i1* %.reg2mem191
  %10 = xor i1 %.reload, true
  %11 = xor i1 %.reload192, true
  %12 = xor i1 true, true
  %13 = and i1 %10, true
  %14 = and i1 %.reload, %12
  %15 = and i1 %11, true
  %16 = and i1 %.reload192, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 true, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %.reload, %.reload192
  %26 = select i1 %24, i32 1041846671, i32 1686881136
  store i32 %26, i32* %switchVar
  br label %loopEnd

originalBB:                                       ; preds = %loopEntry
  %x = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %y = alloca i32, align 4
  store i32* %y, i32** %y.reg2mem
  %call = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %x)
  %27 = load i32, i32* %x, align 4
  %div = sdiv i32 %27, 10000
  store i32 %div, i32* %a, align 4
  %28 = load i32, i32* %x, align 4
  %29 = load i32, i32* %a, align 4
  %mul = mul nsw i32 10000, %29
  %30 = sub i32 %28, -1362402944
  %31 = sub i32 %30, %mul
  %32 = add i32 %31, -1362402944
  %sub = sub nsw i32 %28, %mul
  %div1 = sdiv i32 %32, 1000
  store i32 %div1, i32* %b, align 4
  %33 = load i32, i32* %x, align 4
  %34 = load i32, i32* %a, align 4
  %mul2 = mul nsw i32 10000, %34
  %35 = sub i32 %33, -1312644577
  %36 = sub i32 %35, %mul2
  %37 = add i32 %36, -1312644577
  %sub3 = sub nsw i32 %33, %mul2
  %38 = load i32, i32* %b, align 4
  %mul4 = mul nsw i32 1000, %38
  %39 = sub i32 %37, -1202908848
  %40 = sub i32 %39, %mul4
  %41 = add i32 %40, -1202908848
  %sub5 = sub nsw i32 %37, %mul4
  %div6 = sdiv i32 %41, 100
  store i32 %div6, i32* %c, align 4
  %42 = load i32, i32* %x, align 4
  %43 = load i32, i32* %a, align 4
  %mul7 = mul nsw i32 10000, %43
  %44 = sub i32 0, %mul7
  %45 = add i32 %42, %44
  %sub8 = sub nsw i32 %42, %mul7
  %46 = load i32, i32* %b, align 4
  %mul9 = mul nsw i32 1000, %46
  %47 = sub i32 %45, -60924805
  %48 = sub i32 %47, %mul9
  %49 = add i32 %48, -60924805
  %sub10 = sub nsw i32 %45, %mul9
  %50 = load i32, i32* %c, align 4
  %mul11 = mul nsw i32 100, %50
  %51 = sub i32 0, %mul11
  %52 = add i32 %49, %51
  %sub12 = sub nsw i32 %49, %mul11
  %div13 = sdiv i32 %52, 10
  store i32 %div13, i32* %d, align 4
  %53 = load i32, i32* %x, align 4
  %rem = srem i32 %53, 10
  store i32 %rem, i32* %e, align 4
  %54 = load i32, i32* %a, align 4
  %55 = load i32, i32* %b, align 4
  %mul14 = mul nsw i32 10, %55
  %56 = sub i32 0, %mul14
  %57 = sub i32 %54, %56
  %add = add nsw i32 %54, %mul14
  %58 = load i32, i32* %c, align 4
  %mul15 = mul nsw i32 100, %58
  %59 = add i32 %57, -1737998629
  %60 = add i32 %59, %mul15
  %61 = sub i32 %60, -1737998629
  %add16 = add nsw i32 %57, %mul15
  %62 = load i32, i32* %d, align 4
  %mul17 = mul nsw i32 1000, %62
  %63 = sub i32 %61, -360651196
  %64 = add i32 %63, %mul17
  %65 = add i32 %64, -360651196
  %add18 = add nsw i32 %61, %mul17
  %66 = load i32, i32* %e, align 4
  %mul19 = mul nsw i32 10000, %66
  %67 = sub i32 0, %65
  %68 = sub i32 0, %mul19
  %69 = add i32 %67, %68
  %70 = sub i32 0, %69
  %add20 = add nsw i32 %65, %mul19
  %y.reload196 = load volatile i32*, i32** %y.reg2mem
  store i32 %70, i32* %y.reload196, align 4
  %71 = load i32, i32* @x
  %72 = load i32, i32* @y
  %73 = add i32 %71, 1399057945
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 1399057945
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 -1030633230, i32 1686881136
  store i32 %85, i32* %switchVar
  br label %loopEnd

originalBBpart2:                                  ; preds = %loopEntry
  store i32 1638962011, i32* %switchVar
  br label %loopEnd

loop:                                             ; preds = %loopEntry
  %y.reload195 = load volatile i32*, i32** %y.reg2mem
  %86 = load i32, i32* %y.reload195, align 4
  %rem21 = srem i32 %86, 10
  %cmp = icmp ne i32 %rem21, 0
  %87 = select i1 %cmp, i32 -779580020, i32 251604592
  store i32 %87, i32* %switchVar
  br label %loopEnd

if.then:                                          ; preds = %loopEntry
  %y.reload194 = load volatile i32*, i32** %y.reg2mem
  %88 = load i32, i32* %y.reload194, align 4
  %call22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %88)
  store i32 1663184300, i32* %switchVar
  br label %loopEnd

if.else:                                          ; preds = %loopEntry
  %y.reload193 = load volatile i32*, i32** %y.reg2mem
  %89 = load i32, i32* %y.reload193, align 4
  %div23 = sdiv i32 %89, 10
  %y.reload = load volatile i32*, i32** %y.reg2mem
  store i32 %div23, i32* %y.reload, align 4
  store i32 1638962011, i32* %switchVar
  br label %loopEnd

if.end:                                           ; preds = %loopEntry
  ret void

originalBBalteredBB:                              ; preds = %loopEntry
  %xalteredBB = alloca i32, align 4
  %aalteredBB = alloca i32, align 4
  %balteredBB = alloca i32, align 4
  %calteredBB = alloca i32, align 4
  %dalteredBB = alloca i32, align 4
  %ealteredBB = alloca i32, align 4
  %yalteredBB = alloca i32, align 4
  %callalteredBB = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %xalteredBB)
  %90 = load i32, i32* %xalteredBB, align 4
  %_ = shl i32 %90, 10000
  %divalteredBB = sdiv i32 %90, 10000
  store i32 %divalteredBB, i32* %aalteredBB, align 4
  %91 = load i32, i32* %xalteredBB, align 4
  %92 = load i32, i32* %aalteredBB, align 4
  %93 = sub i32 0, 10000
  %94 = add i32 0, %93
  %_24 = sub i32 0, 10000
  %95 = sub i32 0, %94
  %96 = sub i32 0, %92
  %97 = add i32 %95, %96
  %98 = sub i32 0, %97
  %gen = add i32 %94, %92
  %99 = sub i32 0, 10000
  %100 = add i32 0, %99
  %_25 = sub i32 0, 10000
  %101 = add i32 %100, -2108388403
  %102 = add i32 %101, %92
  %103 = sub i32 %102, -2108388403
  %gen26 = add i32 %100, %92
  %104 = sub i32 0, -1241018431
  %105 = sub i32 %104, 10000
  %106 = add i32 %105, -1241018431
  %_27 = sub i32 0, 10000
  %107 = sub i32 %106, -862289027
  %108 = add i32 %107, %92
  %109 = add i32 %108, -862289027
  %gen28 = add i32 %106, %92
  %110 = sub i32 0, -515690114
  %111 = sub i32 %110, 10000
  %112 = add i32 %111, -515690114
  %_29 = sub i32 0, 10000
  %113 = add i32 %112, 1217537722
  %114 = add i32 %113, %92
  %115 = sub i32 %114, 1217537722
  %gen30 = add i32 %112, %92
  %mulalteredBB = mul nsw i32 10000, %92
  %116 = add i32 %91, 1356422024
  %117 = sub i32 %116, %mulalteredBB
  %118 = sub i32 %117, 1356422024
  %subalteredBB = sub nsw i32 %91, %mulalteredBB
  %119 = add i32 0, 2088471732
  %120 = sub i32 %119, %118
  %121 = sub i32 %120, 2088471732
  %_31 = sub i32 0, %118
  %122 = add i32 %121, 680994552
  %123 = add i32 %122, 1000
  %124 = sub i32 %123, 680994552
  %gen32 = add i32 %121, 1000
  %_33 = shl i32 %118, 1000
  %_34 = shl i32 %118, 1000
  %125 = sub i32 0, 1000
  %126 = add i32 %118, %125
  %_35 = sub i32 %118, 1000
  %gen36 = mul i32 %126, 1000
  %127 = add i32 0, 791067645
  %128 = sub i32 %127, %118
  %129 = sub i32 %128, 791067645
  %_37 = sub i32 0, %118
  %130 = sub i32 0, %129
  %131 = sub i32 0, 1000
  %132 = add i32 %130, %131
  %133 = sub i32 0, %132
  %gen38 = add i32 %129, 1000
  %_39 = shl i32 %118, 1000
  %div1alteredBB = sdiv i32 %118, 1000
  store i32 %div1alteredBB, i32* %balteredBB, align 4
  %134 = load i32, i32* %xalteredBB, align 4
  %135 = load i32, i32* %aalteredBB, align 4
  %136 = add i32 10000, -872279556
  %137 = sub i32 %136, %135
  %138 = sub i32 %137, -872279556
  %_40 = sub i32 10000, %135
  %gen41 = mul i32 %138, %135
  %139 = sub i32 0, %135
  %140 = add i32 10000, %139
  %_42 = sub i32 10000, %135
  %gen43 = mul i32 %140, %135
  %141 = sub i32 10000, -1426384233
  %142 = sub i32 %141, %135
  %143 = add i32 %142, -1426384233
  %_44 = sub i32 10000, %135
  %gen45 = mul i32 %143, %135
  %144 = sub i32 0, -162470349
  %145 = sub i32 %144, 10000
  %146 = add i32 %145, -162470349
  %_46 = sub i32 0, 10000
  %147 = sub i32 0, %146
  %148 = sub i32 0, %135
  %149 = add i32 %147, %148
  %150 = sub i32 0, %149
  %gen47 = add i32 %146, %135
  %151 = add i32 0, -1272085209
  %152 = sub i32 %151, 10000
  %153 = sub i32 %152, -1272085209
  %_48 = sub i32 0, 10000
  %154 = sub i32 %153, -1716701911
  %155 = add i32 %154, %135
  %156 = add i32 %155, -1716701911
  %gen49 = add i32 %153, %135
  %mul2alteredBB = mul nsw i32 10000, %135
  %_50 = shl i32 %134, %mul2alteredBB
  %_51 = shl i32 %134, %mul2alteredBB
  %157 = sub i32 0, -1808240545
  %158 = sub i32 %157, %134
  %159 = add i32 %158, -1808240545
  %_52 = sub i32 0, %134
  %160 = add i32 %159, 590356677
  %161 = add i32 %160, %mul2alteredBB
  %162 = sub i32 %161, 590356677
  %gen53 = add i32 %159, %mul2alteredBB
  %_54 = shl i32 %134, %mul2alteredBB
  %163 = sub i32 %134, -1362284304
  %164 = sub i32 %163, %mul2alteredBB
  %165 = add i32 %164, -1362284304
  %_55 = sub i32 %134, %mul2alteredBB
  %gen56 = mul i32 %165, %mul2alteredBB
  %166 = add i32 0, 1570986714
  %167 = sub i32 %166, %134
  %168 = sub i32 %167, 1570986714
  %_57 = sub i32 0, %134
  %169 = sub i32 0, %mul2alteredBB
  %170 = sub i32 %168, %169
  %gen58 = add i32 %168, %mul2alteredBB
  %171 = add i32 %134, -987920045
  %172 = sub i32 %171, %mul2alteredBB
  %173 = sub i32 %172, -987920045
  %sub3alteredBB = sub nsw i32 %134, %mul2alteredBB
  %174 = load i32, i32* %balteredBB, align 4
  %_59 = shl i32 1000, %174
  %175 = add i32 1000, -1649768026
  %176 = sub i32 %175, %174
  %177 = sub i32 %176, -1649768026
  %_60 = sub i32 1000, %174
  %gen61 = mul i32 %177, %174
  %178 = sub i32 0, %174
  %179 = add i32 1000, %178
  %_62 = sub i32 1000, %174
  %gen63 = mul i32 %179, %174
  %180 = sub i32 0, %174
  %181 = add i32 1000, %180
  %_64 = sub i32 1000, %174
  %gen65 = mul i32 %181, %174
  %182 = add i32 1000, 1913226206
  %183 = sub i32 %182, %174
  %184 = sub i32 %183, 1913226206
  %_66 = sub i32 1000, %174
  %gen67 = mul i32 %184, %174
  %_68 = shl i32 1000, %174
  %185 = add i32 1000, -2097043036
  %186 = sub i32 %185, %174
  %187 = sub i32 %186, -2097043036
  %_69 = sub i32 1000, %174
  %gen70 = mul i32 %187, %174
  %188 = sub i32 0, %174
  %189 = add i32 1000, %188
  %_71 = sub i32 1000, %174
  %gen72 = mul i32 %189, %174
  %mul4alteredBB = mul nsw i32 1000, %174
  %190 = sub i32 0, 740919353
  %191 = sub i32 %190, %173
  %192 = add i32 %191, 740919353
  %_73 = sub i32 0, %173
  %193 = sub i32 0, %192
  %194 = sub i32 0, %mul4alteredBB
  %195 = add i32 %193, %194
  %196 = sub i32 0, %195
  %gen74 = add i32 %192, %mul4alteredBB
  %197 = sub i32 0, %173
  %198 = add i32 0, %197
  %_75 = sub i32 0, %173
  %199 = sub i32 0, %198
  %200 = sub i32 0, %mul4alteredBB
  %201 = add i32 %199, %200
  %202 = sub i32 0, %201
  %gen76 = add i32 %198, %mul4alteredBB
  %203 = sub i32 0, %mul4alteredBB
  %204 = add i32 %173, %203
  %sub5alteredBB = sub nsw i32 %173, %mul4alteredBB
  %div6alteredBB = sdiv i32 %204, 100
  store i32 %div6alteredBB, i32* %calteredBB, align 4
  %205 = load i32, i32* %xalteredBB, align 4
  %206 = load i32, i32* %aalteredBB, align 4
  %207 = sub i32 10000, 1503397820
  %208 = sub i32 %207, %206
  %209 = add i32 %208, 1503397820
  %_77 = sub i32 10000, %206
  %gen78 = mul i32 %209, %206
  %210 = sub i32 0, 10000
  %211 = add i32 0, %210
  %_79 = sub i32 0, 10000
  %212 = add i32 %211, -1405739311
  %213 = add i32 %212, %206
  %214 = sub i32 %213, -1405739311
  %gen80 = add i32 %211, %206
  %215 = sub i32 10000, 671287785
  %216 = sub i32 %215, %206
  %217 = add i32 %216, 671287785
  %_81 = sub i32 10000, %206
  %gen82 = mul i32 %217, %206
  %218 = sub i32 0, 10000
  %219 = add i32 0, %218
  %_83 = sub i32 0, 10000
  %220 = sub i32 0, %219
  %221 = sub i32 0, %206
  %222 = add i32 %220, %221
  %223 = sub i32 0, %222
  %gen84 = add i32 %219, %206
  %mul7alteredBB = mul nsw i32 10000, %206
  %224 = sub i32 0, %mul7alteredBB
  %225 = add i32 %205, %224
  %_85 = sub i32 %205, %mul7alteredBB
  %gen86 = mul i32 %225, %mul7alteredBB
  %226 = sub i32 %205, -1823455303
  %227 = sub i32 %226, %mul7alteredBB
  %228 = add i32 %227, -1823455303
  %_87 = sub i32 %205, %mul7alteredBB
  %gen88 = mul i32 %228, %mul7alteredBB
  %229 = sub i32 %205, 482620974
  %230 = sub i32 %229, %mul7alteredBB
  %231 = add i32 %230, 482620974
  %_89 = sub i32 %205, %mul7alteredBB
  %gen90 = mul i32 %231, %mul7alteredBB
  %232 = sub i32 0, -376134122
  %233 = sub i32 %232, %205
  %234 = add i32 %233, -376134122
  %_91 = sub i32 0, %205
  %235 = sub i32 %234, -423388999
  %236 = add i32 %235, %mul7alteredBB
  %237 = add i32 %236, -423388999
  %gen92 = add i32 %234, %mul7alteredBB
  %238 = sub i32 0, 2088153984
  %239 = sub i32 %238, %205
  %240 = add i32 %239, 2088153984
  %_93 = sub i32 0, %205
  %241 = sub i32 %240, -1232144502
  %242 = add i32 %241, %mul7alteredBB
  %243 = add i32 %242, -1232144502
  %gen94 = add i32 %240, %mul7alteredBB
  %_95 = shl i32 %205, %mul7alteredBB
  %244 = add i32 %205, 2140625907
  %245 = sub i32 %244, %mul7alteredBB
  %246 = sub i32 %245, 2140625907
  %sub8alteredBB = sub nsw i32 %205, %mul7alteredBB
  %247 = load i32, i32* %balteredBB, align 4
  %248 = add i32 1000, 1537229854
  %249 = sub i32 %248, %247
  %250 = sub i32 %249, 1537229854
  %_96 = sub i32 1000, %247
  %gen97 = mul i32 %250, %247
  %251 = sub i32 1000, -208382139
  %252 = sub i32 %251, %247
  %253 = add i32 %252, -208382139
  %_98 = sub i32 1000, %247
  %gen99 = mul i32 %253, %247
  %_100 = shl i32 1000, %247
  %_101 = shl i32 1000, %247
  %254 = sub i32 0, 1000
  %255 = add i32 0, %254
  %_102 = sub i32 0, 1000
  %256 = sub i32 0, %255
  %257 = sub i32 0, %247
  %258 = add i32 %256, %257
  %259 = sub i32 0, %258
  %gen103 = add i32 %255, %247
  %260 = add i32 1000, 1107678315
  %261 = sub i32 %260, %247
  %262 = sub i32 %261, 1107678315
  %_104 = sub i32 1000, %247
  %gen105 = mul i32 %262, %247
  %mul9alteredBB = mul nsw i32 1000, %247
  %_106 = shl i32 %246, %mul9alteredBB
  %_107 = shl i32 %246, %mul9alteredBB
  %_108 = shl i32 %246, %mul9alteredBB
  %_109 = shl i32 %246, %mul9alteredBB
  %263 = sub i32 %246, 1836883220
  %264 = sub i32 %263, %mul9alteredBB
  %265 = add i32 %264, 1836883220
  %_110 = sub i32 %246, %mul9alteredBB
  %gen111 = mul i32 %265, %mul9alteredBB
  %266 = add i32 0, 1614200939
  %267 = sub i32 %266, %246
  %268 = sub i32 %267, 1614200939
  %_112 = sub i32 0, %246
  %269 = sub i32 0, %mul9alteredBB
  %270 = sub i32 %268, %269
  %gen113 = add i32 %268, %mul9alteredBB
  %271 = sub i32 %246, 1304642665
  %272 = sub i32 %271, %mul9alteredBB
  %273 = add i32 %272, 1304642665
  %sub10alteredBB = sub nsw i32 %246, %mul9alteredBB
  %274 = load i32, i32* %calteredBB, align 4
  %275 = add i32 100, -114914661
  %276 = sub i32 %275, %274
  %277 = sub i32 %276, -114914661
  %_114 = sub i32 100, %274
  %gen115 = mul i32 %277, %274
  %_116 = shl i32 100, %274
  %278 = sub i32 0, -1146005044
  %279 = sub i32 %278, 100
  %280 = add i32 %279, -1146005044
  %_117 = sub i32 0, 100
  %281 = sub i32 0, %280
  %282 = sub i32 0, %274
  %283 = add i32 %281, %282
  %284 = sub i32 0, %283
  %gen118 = add i32 %280, %274
  %285 = sub i32 0, 100
  %286 = add i32 0, %285
  %_119 = sub i32 0, 100
  %287 = sub i32 0, %286
  %288 = sub i32 0, %274
  %289 = add i32 %287, %288
  %290 = sub i32 0, %289
  %gen120 = add i32 %286, %274
  %291 = add i32 0, 910483008
  %292 = sub i32 %291, 100
  %293 = sub i32 %292, 910483008
  %_121 = sub i32 0, 100
  %294 = add i32 %293, 157089356
  %295 = add i32 %294, %274
  %296 = sub i32 %295, 157089356
  %gen122 = add i32 %293, %274
  %297 = add i32 100, -1711888200
  %298 = sub i32 %297, %274
  %299 = sub i32 %298, -1711888200
  %_123 = sub i32 100, %274
  %gen124 = mul i32 %299, %274
  %300 = sub i32 100, -224431396
  %301 = sub i32 %300, %274
  %302 = add i32 %301, -224431396
  %_125 = sub i32 100, %274
  %gen126 = mul i32 %302, %274
  %mul11alteredBB = mul nsw i32 100, %274
  %303 = add i32 %273, 1874488732
  %304 = sub i32 %303, %mul11alteredBB
  %305 = sub i32 %304, 1874488732
  %_127 = sub i32 %273, %mul11alteredBB
  %gen128 = mul i32 %305, %mul11alteredBB
  %_129 = shl i32 %273, %mul11alteredBB
  %_130 = shl i32 %273, %mul11alteredBB
  %306 = sub i32 0, 1496424448
  %307 = sub i32 %306, %273
  %308 = add i32 %307, 1496424448
  %_131 = sub i32 0, %273
  %309 = sub i32 %308, -1353671416
  %310 = add i32 %309, %mul11alteredBB
  %311 = add i32 %310, -1353671416
  %gen132 = add i32 %308, %mul11alteredBB
  %312 = sub i32 0, %273
  %313 = add i32 0, %312
  %_133 = sub i32 0, %273
  %314 = sub i32 0, %mul11alteredBB
  %315 = sub i32 %313, %314
  %gen134 = add i32 %313, %mul11alteredBB
  %316 = sub i32 0, %mul11alteredBB
  %317 = add i32 %273, %316
  %sub12alteredBB = sub nsw i32 %273, %mul11alteredBB
  %_135 = shl i32 %317, 10
  %div13alteredBB = sdiv i32 %317, 10
  store i32 %div13alteredBB, i32* %dalteredBB, align 4
  %318 = load i32, i32* %xalteredBB, align 4
  %_136 = shl i32 %318, 10
  %_137 = shl i32 %318, 10
  %_138 = shl i32 %318, 10
  %319 = sub i32 0, -1416061608
  %320 = sub i32 %319, %318
  %321 = add i32 %320, -1416061608
  %_139 = sub i32 0, %318
  %322 = sub i32 0, %321
  %323 = sub i32 0, 10
  %324 = add i32 %322, %323
  %325 = sub i32 0, %324
  %gen140 = add i32 %321, 10
  %326 = sub i32 %318, -201750387
  %327 = sub i32 %326, 10
  %328 = add i32 %327, -201750387
  %_141 = sub i32 %318, 10
  %gen142 = mul i32 %328, 10
  %_143 = shl i32 %318, 10
  %remalteredBB = srem i32 %318, 10
  store i32 %remalteredBB, i32* %ealteredBB, align 4
  %329 = load i32, i32* %aalteredBB, align 4
  %330 = load i32, i32* %balteredBB, align 4
  %_144 = shl i32 10, %330
  %mul14alteredBB = mul nsw i32 10, %330
  %331 = add i32 0, 1698237344
  %332 = sub i32 %331, %329
  %333 = sub i32 %332, 1698237344
  %_145 = sub i32 0, %329
  %334 = add i32 %333, 1197311560
  %335 = add i32 %334, %mul14alteredBB
  %336 = sub i32 %335, 1197311560
  %gen146 = add i32 %333, %mul14alteredBB
  %_147 = shl i32 %329, %mul14alteredBB
  %337 = sub i32 0, %mul14alteredBB
  %338 = add i32 %329, %337
  %_148 = sub i32 %329, %mul14alteredBB
  %gen149 = mul i32 %338, %mul14alteredBB
  %339 = add i32 %329, 1854486668
  %340 = sub i32 %339, %mul14alteredBB
  %341 = sub i32 %340, 1854486668
  %_150 = sub i32 %329, %mul14alteredBB
  %gen151 = mul i32 %341, %mul14alteredBB
  %342 = sub i32 0, %mul14alteredBB
  %343 = add i32 %329, %342
  %_152 = sub i32 %329, %mul14alteredBB
  %gen153 = mul i32 %343, %mul14alteredBB
  %344 = add i32 %329, 242060291
  %345 = add i32 %344, %mul14alteredBB
  %346 = sub i32 %345, 242060291
  %addalteredBB = add nsw i32 %329, %mul14alteredBB
  %347 = load i32, i32* %calteredBB, align 4
  %348 = sub i32 0, -412389485
  %349 = sub i32 %348, 100
  %350 = add i32 %349, -412389485
  %_154 = sub i32 0, 100
  %351 = sub i32 0, %350
  %352 = sub i32 0, %347
  %353 = add i32 %351, %352
  %354 = sub i32 0, %353
  %gen155 = add i32 %350, %347
  %mul15alteredBB = mul nsw i32 100, %347
  %_156 = shl i32 %346, %mul15alteredBB
  %355 = sub i32 0, %346
  %356 = add i32 0, %355
  %_157 = sub i32 0, %346
  %357 = add i32 %356, -1336401543
  %358 = add i32 %357, %mul15alteredBB
  %359 = sub i32 %358, -1336401543
  %gen158 = add i32 %356, %mul15alteredBB
  %_159 = shl i32 %346, %mul15alteredBB
  %_160 = shl i32 %346, %mul15alteredBB
  %360 = sub i32 0, %346
  %361 = sub i32 0, %mul15alteredBB
  %362 = add i32 %360, %361
  %363 = sub i32 0, %362
  %add16alteredBB = add nsw i32 %346, %mul15alteredBB
  %364 = load i32, i32* %dalteredBB, align 4
  %365 = sub i32 0, %364
  %366 = add i32 1000, %365
  %_161 = sub i32 1000, %364
  %gen162 = mul i32 %366, %364
  %367 = add i32 1000, -384747411
  %368 = sub i32 %367, %364
  %369 = sub i32 %368, -384747411
  %_163 = sub i32 1000, %364
  %gen164 = mul i32 %369, %364
  %370 = sub i32 0, -1126368997
  %371 = sub i32 %370, 1000
  %372 = add i32 %371, -1126368997
  %_165 = sub i32 0, 1000
  %373 = add i32 %372, -1994932748
  %374 = add i32 %373, %364
  %375 = sub i32 %374, -1994932748
  %gen166 = add i32 %372, %364
  %_167 = shl i32 1000, %364
  %376 = sub i32 0, 1000
  %377 = add i32 0, %376
  %_168 = sub i32 0, 1000
  %378 = add i32 %377, -329053586
  %379 = add i32 %378, %364
  %380 = sub i32 %379, -329053586
  %gen169 = add i32 %377, %364
  %mul17alteredBB = mul nsw i32 1000, %364
  %_170 = shl i32 %363, %mul17alteredBB
  %381 = sub i32 0, %mul17alteredBB
  %382 = add i32 %363, %381
  %_171 = sub i32 %363, %mul17alteredBB
  %gen172 = mul i32 %382, %mul17alteredBB
  %_173 = shl i32 %363, %mul17alteredBB
  %383 = sub i32 0, %mul17alteredBB
  %384 = add i32 %363, %383
  %_174 = sub i32 %363, %mul17alteredBB
  %gen175 = mul i32 %384, %mul17alteredBB
  %385 = sub i32 0, -1012850796
  %386 = sub i32 %385, %363
  %387 = add i32 %386, -1012850796
  %_176 = sub i32 0, %363
  %388 = sub i32 %387, 1852066432
  %389 = add i32 %388, %mul17alteredBB
  %390 = add i32 %389, 1852066432
  %gen177 = add i32 %387, %mul17alteredBB
  %_178 = shl i32 %363, %mul17alteredBB
  %391 = sub i32 0, %mul17alteredBB
  %392 = sub i32 %363, %391
  %add18alteredBB = add nsw i32 %363, %mul17alteredBB
  %393 = load i32, i32* %ealteredBB, align 4
  %394 = sub i32 0, -708390773
  %395 = sub i32 %394, 10000
  %396 = add i32 %395, -708390773
  %_179 = sub i32 0, 10000
  %397 = sub i32 0, %393
  %398 = sub i32 %396, %397
  %gen180 = add i32 %396, %393
  %_181 = shl i32 10000, %393
  %mul19alteredBB = mul nsw i32 10000, %393
  %399 = add i32 0, 1342728827
  %400 = sub i32 %399, %392
  %401 = sub i32 %400, 1342728827
  %_182 = sub i32 0, %392
  %402 = sub i32 0, %401
  %403 = sub i32 0, %mul19alteredBB
  %404 = add i32 %402, %403
  %405 = sub i32 0, %404
  %gen183 = add i32 %401, %mul19alteredBB
  %406 = sub i32 0, %392
  %407 = add i32 0, %406
  %_184 = sub i32 0, %392
  %408 = add i32 %407, -716416857
  %409 = add i32 %408, %mul19alteredBB
  %410 = sub i32 %409, -716416857
  %gen185 = add i32 %407, %mul19alteredBB
  %_186 = shl i32 %392, %mul19alteredBB
  %411 = add i32 0, 631392330
  %412 = sub i32 %411, %392
  %413 = sub i32 %412, 631392330
  %_187 = sub i32 0, %392
  %414 = sub i32 %413, -1489219419
  %415 = add i32 %414, %mul19alteredBB
  %416 = add i32 %415, -1489219419
  %gen188 = add i32 %413, %mul19alteredBB
  %_189 = shl i32 %392, %mul19alteredBB
  %417 = add i32 %392, -1515612442
  %418 = add i32 %417, %mul19alteredBB
  %419 = sub i32 %418, -1515612442
  %add20alteredBB = add nsw i32 %392, %mul19alteredBB
  store i32 %419, i32* %yalteredBB, align 4
  store i32 1041846671, i32* %switchVar
  br label %loopEnd

loopEnd:                                          ; preds = %originalBBalteredBB, %if.else, %if.then, %loop, %originalBBpart2, %originalBB, %first, %switchDefault
  br label %loopEntry
}

declare i32 @__isoc99_scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
