; ModuleID = 'Project_CodeNet_C++1400/p00747/s184136047.cpp'
source_filename = "Project_CodeNet_C++1400/p00747/s184136047.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { double*, double*, double* }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%class.Graph = type { %"class.std::vector.13" }
%"class.std::vector.13" = type { %"struct.std::_Vector_base.14" }
%"struct.std::_Vector_base.14" = type { %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl" = type { %"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"* }
%"struct.Graph::Node" = type { i64, %"class.std::vector.18" }
%"class.std::vector.18" = type { %"struct.std::_Vector_base.19" }
%"struct.std::_Vector_base.19" = type { %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl" = type { %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"* }
%"struct.Graph::Edge" = type { i64, i64 }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.Graph::Edge"* }
%"class.__gnu_cxx::__normal_iterator.24" = type { %"struct.Graph::Edge"* }
%"class.std::priority_queue" = type <{ %"class.std::vector.25", %"struct.std::less", [7 x i8] }>
%"class.std::vector.25" = type { %"struct.std::_Vector_base.26" }
%"struct.std::_Vector_base.26" = type { %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl" = type { %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* }
%"struct.Graph::QInfo" = type { i64, i64 }
%"struct.std::less" = type { i8 }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" = type { %"struct.std::less.33", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less.33" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair" = type <{ %"struct.std::_Rb_tree_const_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.std::allocator.20" = type { i8 }
%"class.__gnu_cxx::new_allocator.21" = type { i8 }
%"class.std::move_iterator" = type { %"struct.Graph::Node"* }
%"class.std::move_iterator.23" = type { %"struct.Graph::Edge"* }
%"class.__gnu_cxx::__normal_iterator.35" = type { %"struct.Graph::QInfo"* }
%"class.std::allocator.27" = type { i8 }
%"struct.std::pair.37" = type <{ %"struct.std::_Rb_tree_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.__gnu_cxx::new_allocator.28" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %"struct.std::less" }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %"struct.std::less" }
%"class.std::allocator.30" = type { i8 }
%"class.__gnu_cxx::new_allocator.31" = type { i8 }
%"class.std::move_iterator.36" = type { %"struct.Graph::QInfo"* }
%"struct.std::pair.39" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Identity" = type { i8 }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node" = type { %"class.std::_Rb_tree"* }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"class.__gnu_cxx::__normal_iterator.40" = type { %"struct.Graph::QInfo"* }
%"struct.std::pair.41" = type { %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator" }
%"class.std::allocator.0" = type { i8 }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%"class.std::move_iterator.42" = type { i64* }
%"class.std::allocator.5" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.std::move_iterator.43" = type { double* }
%"class.std::allocator.10" = type { i8 }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"class.std::move_iterator.44" = type { %"class.std::__cxx11::basic_string"* }

$_ZNSt6vectorIxSaIxEE9push_backEOx = comdat any

$_ZNSt6vectorIdSaIdEE9push_backEOd = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ = comdat any

$_ZN5GraphC2Ex = comdat any

$_ZN5Graph8makeEdgeExxxb = comdat any

$_ZN5Graph10deleteEdgeExxb = comdat any

$_ZN5Graph8dijkstraExx = comdat any

$_ZN5GraphD2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE9push_backEOS1_ = comdat any

$_ZN5Graph4NodeC2Ev = comdat any

$_ZN5Graph4NodeD2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph4NodeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN5Graph4NodeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZN5Graph4NodeC2EOS0_ = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSt6vectorIN5Graph4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_ = comdat any

$_ZSt4swapIPN5Graph4EdgeEEvRT_S4_ = comdat any

$_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNKSt6vectorIN5Graph4NodeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4NodeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4NodeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN5Graph4NodeEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5Graph4NodeEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4NodeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4NodeEEppEv = comdat any

$_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_ = comdat any

$_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_ = comdat any

$_ZSt8_DestroyIN5Graph4NodeEEvPT_ = comdat any

$_ZNSt13move_iteratorIPN5Graph4NodeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph4EdgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4EdgeEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE10deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSaIN5Graph4NodeEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_ = comdat any

$_ZN5Graph4EdgeC2Exx = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN5Graph4EdgeEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4EdgeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4EdgeEEppEv = comdat any

$_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv = comdat any

$_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEmmEi = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZN9__gnu_cxxmiIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE6cbeginEv = comdat any

$_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_ = comdat any

$_ZSt13__copy_move_aILb1EPN5Graph4EdgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN5Graph4EdgeES5_EET0_T_S7_S6_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2Ev = comdat any

$_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EEC2ERKS6_OS4_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev = comdat any

$_ZNSt3setIxSt4lessIxESaIxEEC2Ev = comdat any

$_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_ = comdat any

$_ZN5Graph5QInfoC2Exx = comdat any

$_ZNSt3setIxSt4lessIxESaIxEE6insertERKx = comdat any

$_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE5emptyEv = comdat any

$_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv = comdat any

$_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3popEv = comdat any

$_ZN5Graph4NodeC2ERKS0_ = comdat any

$_ZNSt3setIxSt4lessIxESaIxEE5eraseERKx = comdat any

$_ZNSt3setIxSt4lessIxESaIxEE4findERKx = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_ = comdat any

$_ZNKSt3setIxSt4lessIxESaIxEE3endEv = comdat any

$_ZNSt3setIxSt4lessIxESaIxEED2Ev = comdat any

$_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph5QInfoEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2Ev = comdat any

$_ZSt4moveIRSt6vectorIN5Graph5QInfoESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2EOS3_ = comdat any

$_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaIN5Graph5QInfoEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZNSaIN5Graph5QInfoEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2ERKS3_ = comdat any

$_ZSt4swapIPN5Graph5QInfoEEvRT_S4_ = comdat any

$_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_ = comdat any

$_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE = comdat any

$_ZNKSt4lessIN5Graph5QInfoEEclERKS1_S4_ = comdat any

$_ZNK5Graph5QInfoltERKS0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEC2ES5_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEC2ES5_ = comdat any

$_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN5Graph5QInfoEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph5QInfoEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE10deallocateEPS2_m = comdat any

$_ZNSaIN5Graph5QInfoEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE9push_backEOS1_ = comdat any

$_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph5QInfoES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph5QInfoEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph5QInfoEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph5QInfoEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN5Graph5QInfoEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5Graph5QInfoEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph5QInfoEEdeEv = comdat any

$_ZNSt13move_iteratorIPN5Graph5QInfoEEppEv = comdat any

$_ZSteqIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph5QInfoEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN5Graph5QInfoEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE7destroyIS2_EEvPT_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmiEl = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EES7_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_ = comdat any

$_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx = comdat any

$_ZNKSt9_IdentityIxEclERKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_ = comdat any

$_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv = comdat any

$_ZNKSt4lessIxEclERKxS2_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIxEmmEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m = comdat any

$_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE = comdat any

$_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5emptyEv = comdat any

$_ZN9__gnu_cxxeqIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5frontEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE8pop_backEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmmEv = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_ = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaIN5Graph4EdgeEED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE3endEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaIN5Graph4EdgeEEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE17_M_create_storageEm = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZSt10_ConstructIN5Graph4EdgeEJRKS1_EEvPT_DpOT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZSt7forwardIRKN5Graph4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseERKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11equal_rangeERKx = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxES7_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_lower_boundEPSt13_Rb_tree_nodeIxES8_RKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_upper_boundEPSt13_Rb_tree_nodeIxES8_RKx = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIxES1_EC2IS1_S1_vEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxES7_ = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5clearEv = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxE = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEppEi = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEppEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4findERKx = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev = comdat any

$_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_ = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_ = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNKSt6vectorIxSaIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPxE4baseEv = comdat any

$_ZNSt13move_iteratorIPxEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_ = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_ = comdat any

$_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm = comdat any

$_ZNKSt6vectorIdSaIdEE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_ = comdat any

$_ZSt8_DestroyIPddEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm = comdat any

$_ZNKSt6vectorIdSaIdEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIdEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPdE4baseEv = comdat any

$_ZNSt13move_iteratorIPdEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_ = comdat any

$_ZSt8_DestroyIPdEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ = comdat any

$_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_ = comdat any

$_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ = comdat any

$_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ = comdat any

$_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ = comdat any

$_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s184136047.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0
@x.905 = common global i32 0
@y.906 = common global i32 0
@x.907 = common global i32 0
@y.908 = common global i32 0
@x.909 = common global i32 0
@y.910 = common global i32 0
@x.911 = common global i32 0
@y.912 = common global i32 0
@x.913 = common global i32 0
@y.914 = common global i32 0
@x.915 = common global i32 0
@y.916 = common global i32 0
@x.917 = common global i32 0
@y.918 = common global i32 0
@x.919 = common global i32 0
@y.920 = common global i32 0
@x.921 = common global i32 0
@y.922 = common global i32 0
@x.923 = common global i32 0
@y.924 = common global i32 0
@x.925 = common global i32 0
@y.926 = common global i32 0
@x.927 = common global i32 0
@y.928 = common global i32 0
@x.929 = common global i32 0
@y.930 = common global i32 0
@x.931 = common global i32 0
@y.932 = common global i32 0
@x.933 = common global i32 0
@y.934 = common global i32 0
@x.935 = common global i32 0
@y.936 = common global i32 0
@x.937 = common global i32 0
@y.938 = common global i32 0
@x.939 = common global i32 0
@y.940 = common global i32 0
@x.941 = common global i32 0
@y.942 = common global i32 0
@x.943 = common global i32 0
@y.944 = common global i32 0
@x.945 = common global i32 0
@y.946 = common global i32 0
@x.947 = common global i32 0
@y.948 = common global i32 0
@x.949 = common global i32 0
@y.950 = common global i32 0
@x.951 = common global i32 0
@y.952 = common global i32 0
@x.953 = common global i32 0
@y.954 = common global i32 0
@x.955 = common global i32 0
@y.956 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define i64 @_Z7nextIntv() #0 {
  %1 = alloca i64, align 8
  %2 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %1)
  %3 = load i64, i64* %1, align 8
  ret i64 %3
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define signext i8 @_Z8nextCharv() #0 {
  %1 = alloca i8, align 1
  %2 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, i8* dereferenceable(1) %1)
  %3 = load i8, i8* %1, align 1
  ret i8 %3
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

; Function Attrs: noinline uwtable
define double @_Z10nextDoublev() #0 {
  %1 = alloca double, align 8
  %2 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERd(%"class.std::basic_istream"* @_ZSt3cin, double* dereferenceable(8) %1)
  %3 = load double, double* %1, align 8
  ret double %3
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERd(%"class.std::basic_istream"*, double* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define void @_Z10nextStringB5cxx11v(%"class.std::__cxx11::basic_string"* noalias sret) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %73

; <label>:10:                                     ; preds = %1, %73
  %11 = alloca i1, align 1
  %12 = alloca i8*
  %13 = alloca i32
  store i1 false, i1* %11, align 1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  %14 = load i32, i32* @x.7
  %15 = load i32, i32* @y.8
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %73

; <label>:22:                                     ; preds = %10
  %23 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* dereferenceable(32) %0)
          to label %24 unwind label %44

; <label>:24:                                     ; preds = %22
  %25 = load i32, i32* @x.7
  %26 = load i32, i32* @y.8
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %77

; <label>:33:                                     ; preds = %24, %77
  store i1 true, i1* %11, align 1
  %34 = load i1, i1* %11, align 1
  %35 = load i32, i32* @x.7
  %36 = load i32, i32* @y.8
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %77

; <label>:43:                                     ; preds = %33
  br i1 %34, label %67, label %66

; <label>:44:                                     ; preds = %22
  %45 = load i32, i32* @x.7
  %46 = load i32, i32* @y.8
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %53, label %79

; <label>:53:                                     ; preds = %44, %79
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %12, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %13, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  %57 = load i32, i32* @x.7
  %58 = load i32, i32* @y.8
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %79

; <label>:65:                                     ; preds = %53
  br label %68

; <label>:66:                                     ; preds = %43
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  br label %67

; <label>:67:                                     ; preds = %66, %43
  ret void

; <label>:68:                                     ; preds = %65
  %69 = load i8*, i8** %12, align 8
  %70 = load i32, i32* %13, align 4
  %71 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %70, 1
  resume { i8*, i32 } %72

; <label>:73:                                     ; preds = %10, %1
  %74 = alloca i1, align 1
  %75 = alloca i8*
  %76 = alloca i32
  store i1 false, i1* %74, align 1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  br label %10

; <label>:77:                                     ; preds = %33, %24
  store i1 true, i1* %11, align 1
  %78 = load i1, i1* %11, align 1
  br label %33

; <label>:79:                                     ; preds = %53, %44
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %12, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %13, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  br label %53
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define void @_Z11inputVectorRSt6vectorIxSaIxEERx(%"class.std::vector"* dereferenceable(24), i64* dereferenceable(8)) #0 {
  %3 = load i32, i32* @x.9
  %4 = load i32, i32* @y.10
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %55

; <label>:11:                                     ; preds = %2, %55
  %12 = alloca %"class.std::vector"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %12, align 8
  store i64* %1, i64** %13, align 8
  store i64 0, i64* %14, align 8
  %16 = load i32, i32* @x.9
  %17 = load i32, i32* @y.10
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %55

; <label>:24:                                     ; preds = %11
  br label %25

; <label>:25:                                     ; preds = %33, %24
  %26 = load i64, i64* %14, align 8
  %27 = load i64*, i64** %13, align 8
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %26, %28
  br i1 %29, label %30, label %36

; <label>:30:                                     ; preds = %25
  %31 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %32 = call i64 @_Z7nextIntv()
  store i64 %32, i64* %15, align 8
  call void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector"* %31, i64* dereferenceable(8) %15)
  br label %33

; <label>:33:                                     ; preds = %30
  %34 = load i64, i64* %14, align 8
  %35 = add nsw i64 %34, 1
  store i64 %35, i64* %14, align 8
  br label %25

; <label>:36:                                     ; preds = %25
  %37 = load i32, i32* @x.9
  %38 = load i32, i32* @y.10
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %60

; <label>:45:                                     ; preds = %36, %60
  %46 = load i32, i32* @x.9
  %47 = load i32, i32* @y.10
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %60

; <label>:54:                                     ; preds = %45
  ret void

; <label>:55:                                     ; preds = %11, %2
  %56 = alloca %"class.std::vector"*, align 8
  %57 = alloca i64*, align 8
  %58 = alloca i64, align 8
  %59 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %56, align 8
  store i64* %1, i64** %57, align 8
  store i64 0, i64* %58, align 8
  br label %11

; <label>:60:                                     ; preds = %45, %36
  br label %45
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = load i32, i32* @x.11
  %4 = load i32, i32* @y.12
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %26

; <label>:11:                                     ; preds = %2, %26
  %12 = alloca %"class.std::vector"*, align 8
  %13 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %12, align 8
  store i64* %1, i64** %13, align 8
  %14 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %15 = load i64*, i64** %13, align 8
  %16 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %15) #3
  call void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector"* %14, i64* dereferenceable(8) %16)
  %17 = load i32, i32* @x.11
  %18 = load i32, i32* @y.12
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %11
  ret void

; <label>:26:                                     ; preds = %11, %2
  %27 = alloca %"class.std::vector"*, align 8
  %28 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %27, align 8
  store i64* %1, i64** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %27, align 8
  %30 = load i64*, i64** %28, align 8
  %31 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %30) #3
  call void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector"* %29, i64* dereferenceable(8) %31)
  br label %11
}

; Function Attrs: noinline uwtable
define void @_Z11inputVectorRSt6vectorIdSaIdEERx(%"class.std::vector.3"* dereferenceable(24), i64* dereferenceable(8)) #0 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64* %1, i64** %4, align 8
  store i64 0, i64* %5, align 8
  br label %7

; <label>:7:                                      ; preds = %15, %2
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = load i64, i64* %9, align 8
  %11 = icmp slt i64 %8, %10
  br i1 %11, label %12, label %18

; <label>:12:                                     ; preds = %7
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %14 = call double @_Z10nextDoublev()
  store double %14, double* %6, align 8
  call void @_ZNSt6vectorIdSaIdEE9push_backEOd(%"class.std::vector.3"* %13, double* dereferenceable(8) %6)
  br label %15

; <label>:15:                                     ; preds = %12
  %16 = load i64, i64* %5, align 8
  %17 = add nsw i64 %16, 1
  store i64 %17, i64* %5, align 8
  br label %7

; <label>:18:                                     ; preds = %7
  %19 = load i32, i32* @x.13
  %20 = load i32, i32* @y.14
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %18, %37
  %28 = load i32, i32* @x.13
  %29 = load i32, i32* @y.14
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %27
  ret void

; <label>:37:                                     ; preds = %27, %18
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE9push_backEOd(%"class.std::vector.3"*, double* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load double*, double** %4, align 8
  %7 = call dereferenceable(8) double* @_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_(double* dereferenceable(8) %6) #3
  call void @_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_(%"class.std::vector.3"* %5, double* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z11inputVectorRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EERx(%"class.std::vector.8"* dereferenceable(24), i64* dereferenceable(8)) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store i64* %1, i64** %4, align 8
  store i64 0, i64* %5, align 8
  br label %9

; <label>:9:                                      ; preds = %35, %2
  %10 = load i64, i64* %5, align 8
  %11 = load i64*, i64** %4, align 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %14, label %42

; <label>:14:                                     ; preds = %9
  %15 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  call void @_Z10nextStringB5cxx11v(%"class.std::__cxx11::basic_string"* sret %6)
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_(%"class.std::vector.8"* %15, %"class.std::__cxx11::basic_string"* dereferenceable(32) %6)
          to label %16 unwind label %38

; <label>:16:                                     ; preds = %14
  %17 = load i32, i32* @x.17
  %18 = load i32, i32* @y.18
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %66

; <label>:25:                                     ; preds = %16, %66
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %6) #3
  %26 = load i32, i32* @x.17
  %27 = load i32, i32* @y.18
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %66

; <label>:34:                                     ; preds = %25
  br label %35

; <label>:35:                                     ; preds = %34
  %36 = load i64, i64* %5, align 8
  %37 = add nsw i64 %36, 1
  store i64 %37, i64* %5, align 8
  br label %9

; <label>:38:                                     ; preds = %14
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %7, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %8, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %6) #3
  br label %43

; <label>:42:                                     ; preds = %9
  ret void

; <label>:43:                                     ; preds = %38
  %44 = load i32, i32* @x.17
  %45 = load i32, i32* @y.18
  %46 = sub i32 %44, 1
  %47 = mul i32 %44, %46
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %49, %50
  br i1 %51, label %52, label %67

; <label>:52:                                     ; preds = %43, %67
  %53 = load i8*, i8** %7, align 8
  %54 = load i32, i32* %8, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  %57 = load i32, i32* @x.17
  %58 = load i32, i32* @y.18
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %67

; <label>:65:                                     ; preds = %52
  resume { i8*, i32 } %56

; <label>:66:                                     ; preds = %25, %16
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %6) #3
  br label %25

; <label>:67:                                     ; preds = %52, %43
  %68 = load i8*, i8** %7, align 8
  %69 = load i32, i32* %8, align 4
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  br label %52
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_(%"class.std::vector.8"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %7 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %6) #3
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_(%"class.std::vector.8"* %5, %"class.std::__cxx11::basic_string"* dereferenceable(32) %7)
  ret void
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %class.Graph, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca i64, align 8
  %17 = alloca i8, align 1
  %18 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  br label %19

; <label>:19:                                     ; preds = %0, %476
  %20 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %2)
  %21 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %20, i64* dereferenceable(8) %3)
  %22 = load i64, i64* %2, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %19
  br label %477

; <label>:25:                                     ; preds = %19
  %26 = load i64, i64* %2, align 8
  %27 = load i64, i64* %3, align 8
  %28 = mul nsw i64 %26, %27
  call void @_ZN5GraphC2Ex(%class.Graph* %4, i64 %28)
  store i64 0, i64* %5, align 8
  br label %29

; <label>:29:                                     ; preds = %132, %25
  %30 = load i32, i32* @x.21
  %31 = load i32, i32* @y.22
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %483

; <label>:38:                                     ; preds = %29, %483
  %39 = load i64, i64* %5, align 8
  %40 = load i64, i64* %3, align 8
  %41 = sub nsw i64 %40, 1
  %42 = icmp slt i64 %39, %41
  %43 = load i32, i32* @x.21
  %44 = load i32, i32* @y.22
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %483

; <label>:51:                                     ; preds = %38
  br i1 %42, label %52, label %135

; <label>:52:                                     ; preds = %51
  store i64 0, i64* %6, align 8
  br label %53

; <label>:53:                                     ; preds = %106, %52
  %54 = load i32, i32* @x.21
  %55 = load i32, i32* @y.22
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %62, label %491

; <label>:62:                                     ; preds = %53, %491
  %63 = load i64, i64* %6, align 8
  %64 = load i64, i64* %2, align 8
  %65 = icmp slt i64 %63, %64
  %66 = load i32, i32* @x.21
  %67 = load i32, i32* @y.22
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %74, label %491

; <label>:74:                                     ; preds = %62
  br i1 %65, label %75, label %131

; <label>:75:                                     ; preds = %74
  %76 = load i64, i64* %5, align 8
  %77 = load i64, i64* %2, align 8
  %78 = mul nsw i64 %76, %77
  %79 = load i64, i64* %6, align 8
  %80 = add nsw i64 %78, %79
  %81 = load i64, i64* %5, align 8
  %82 = add nsw i64 %81, 1
  %83 = load i64, i64* %2, align 8
  %84 = mul nsw i64 %82, %83
  %85 = load i64, i64* %6, align 8
  %86 = add nsw i64 %84, %85
  invoke void @_ZN5Graph8makeEdgeExxxb(%class.Graph* %4, i64 %80, i64 %86, i64 1, i1 zeroext true)
          to label %87 unwind label %109

; <label>:87:                                     ; preds = %75
  %88 = load i32, i32* @x.21
  %89 = load i32, i32* @y.22
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %96, label %495

; <label>:96:                                     ; preds = %87, %495
  %97 = load i32, i32* @x.21
  %98 = load i32, i32* @y.22
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %105, label %495

; <label>:105:                                    ; preds = %96
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i64, i64* %6, align 8
  %108 = add nsw i64 %107, 1
  store i64 %108, i64* %6, align 8
  br label %53

; <label>:109:                                    ; preds = %474, %454, %426, %363, %358, %280, %275, %164, %75
  %110 = load i32, i32* @x.21
  %111 = load i32, i32* @y.22
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %118, label %496

; <label>:118:                                    ; preds = %109, %496
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %7, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %8, align 4
  call void @_ZN5GraphD2Ev(%class.Graph* %4) #3
  %122 = load i32, i32* @x.21
  %123 = load i32, i32* @y.22
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %130, label %496

; <label>:130:                                    ; preds = %118
  br label %478

; <label>:131:                                    ; preds = %74
  br label %132

; <label>:132:                                    ; preds = %131
  %133 = load i64, i64* %5, align 8
  %134 = add nsw i64 %133, 1
  store i64 %134, i64* %5, align 8
  br label %29

; <label>:135:                                    ; preds = %51
  %136 = load i32, i32* @x.21
  %137 = load i32, i32* @y.22
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %144, label %500

; <label>:144:                                    ; preds = %135, %500
  store i64 0, i64* %9, align 8
  %145 = load i32, i32* @x.21
  %146 = load i32, i32* @y.22
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %153, label %500

; <label>:153:                                    ; preds = %144
  br label %154

; <label>:154:                                    ; preds = %199, %153
  %155 = load i64, i64* %9, align 8
  %156 = load i64, i64* %3, align 8
  %157 = icmp slt i64 %155, %156
  br i1 %157, label %158, label %202

; <label>:158:                                    ; preds = %154
  store i64 0, i64* %10, align 8
  br label %159

; <label>:159:                                    ; preds = %197, %158
  %160 = load i64, i64* %10, align 8
  %161 = load i64, i64* %2, align 8
  %162 = sub nsw i64 %161, 1
  %163 = icmp slt i64 %160, %162
  br i1 %163, label %164, label %198

; <label>:164:                                    ; preds = %159
  %165 = load i64, i64* %9, align 8
  %166 = load i64, i64* %2, align 8
  %167 = mul nsw i64 %165, %166
  %168 = load i64, i64* %10, align 8
  %169 = add nsw i64 %167, %168
  %170 = load i64, i64* %9, align 8
  %171 = load i64, i64* %2, align 8
  %172 = mul nsw i64 %170, %171
  %173 = load i64, i64* %10, align 8
  %174 = add nsw i64 %172, %173
  %175 = add nsw i64 %174, 1
  invoke void @_ZN5Graph8makeEdgeExxxb(%class.Graph* %4, i64 %169, i64 %175, i64 1, i1 zeroext true)
          to label %176 unwind label %109

; <label>:176:                                    ; preds = %164
  br label %177

; <label>:177:                                    ; preds = %176
  %178 = load i32, i32* @x.21
  %179 = load i32, i32* @y.22
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %186, label %501

; <label>:186:                                    ; preds = %177, %501
  %187 = load i64, i64* %10, align 8
  %188 = add nsw i64 %187, 1
  store i64 %188, i64* %10, align 8
  %189 = load i32, i32* @x.21
  %190 = load i32, i32* @y.22
  %191 = sub i32 %189, 1
  %192 = mul i32 %189, %191
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %194, %195
  br i1 %196, label %197, label %501

; <label>:197:                                    ; preds = %186
  br label %159

; <label>:198:                                    ; preds = %159
  br label %199

; <label>:199:                                    ; preds = %198
  %200 = load i64, i64* %9, align 8
  %201 = add nsw i64 %200, 1
  store i64 %201, i64* %9, align 8
  br label %154

; <label>:202:                                    ; preds = %154
  %203 = load i32, i32* @x.21
  %204 = load i32, i32* @y.22
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %211, label %507

; <label>:211:                                    ; preds = %202, %507
  store i64 0, i64* %11, align 8
  store i64 0, i64* %12, align 8
  %212 = load i32, i32* @x.21
  %213 = load i32, i32* @y.22
  %214 = sub i32 %212, 1
  %215 = mul i32 %212, %214
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %213, 10
  %219 = or i1 %217, %218
  br i1 %219, label %220, label %507

; <label>:220:                                    ; preds = %211
  br label %221

; <label>:221:                                    ; preds = %401, %220
  %222 = load i32, i32* @x.21
  %223 = load i32, i32* @y.22
  %224 = sub i32 %222, 1
  %225 = mul i32 %222, %224
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %223, 10
  %229 = or i1 %227, %228
  br i1 %229, label %230, label %508

; <label>:230:                                    ; preds = %221, %508
  %231 = load i64, i64* %12, align 8
  %232 = load i64, i64* %3, align 8
  %233 = mul nsw i64 %232, 2
  %234 = sub nsw i64 %233, 1
  %235 = icmp slt i64 %231, %234
  %236 = load i32, i32* @x.21
  %237 = load i32, i32* @y.22
  %238 = sub i32 %236, 1
  %239 = mul i32 %236, %238
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %237, 10
  %243 = or i1 %241, %242
  br i1 %243, label %244, label %508

; <label>:244:                                    ; preds = %230
  br i1 %235, label %245, label %404

; <label>:245:                                    ; preds = %244
  %246 = load i64, i64* %12, align 8
  %247 = sdiv i64 %246, 2
  store i64 %247, i64* %13, align 8
  %248 = load i64, i64* %12, align 8
  %249 = srem i64 %248, 2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %335

; <label>:251:                                    ; preds = %245
  store i64 0, i64* %14, align 8
  br label %252

; <label>:252:                                    ; preds = %313, %251
  %253 = load i32, i32* @x.21
  %254 = load i32, i32* @y.22
  %255 = sub i32 %253, 1
  %256 = mul i32 %253, %255
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %254, 10
  %260 = or i1 %258, %259
  br i1 %260, label %261, label %525

; <label>:261:                                    ; preds = %252, %525
  %262 = load i64, i64* %14, align 8
  %263 = load i64, i64* %2, align 8
  %264 = sub nsw i64 %263, 1
  %265 = icmp slt i64 %262, %264
  %266 = load i32, i32* @x.21
  %267 = load i32, i32* @y.22
  %268 = sub i32 %266, 1
  %269 = mul i32 %266, %268
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %267, 10
  %273 = or i1 %271, %272
  br i1 %273, label %274, label %525

; <label>:274:                                    ; preds = %261
  br i1 %265, label %275, label %316

; <label>:275:                                    ; preds = %274
  %276 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERb(%"class.std::basic_istream"* @_ZSt3cin, i8* dereferenceable(1) %15)
          to label %277 unwind label %109

; <label>:277:                                    ; preds = %275
  %278 = load i8, i8* %15, align 1
  %279 = trunc i8 %278 to i1
  br i1 %279, label %280, label %312

; <label>:280:                                    ; preds = %277
  %281 = load i64, i64* %13, align 8
  %282 = load i64, i64* %2, align 8
  %283 = mul nsw i64 %281, %282
  %284 = load i64, i64* %14, align 8
  %285 = add nsw i64 %283, %284
  %286 = load i64, i64* %13, align 8
  %287 = load i64, i64* %2, align 8
  %288 = mul nsw i64 %286, %287
  %289 = load i64, i64* %14, align 8
  %290 = add nsw i64 %288, %289
  %291 = add nsw i64 %290, 1
  %292 = invoke zeroext i1 @_ZN5Graph10deleteEdgeExxb(%class.Graph* %4, i64 %285, i64 %291, i1 zeroext true)
          to label %293 unwind label %109

; <label>:293:                                    ; preds = %280
  %294 = load i32, i32* @x.21
  %295 = load i32, i32* @y.22
  %296 = sub i32 %294, 1
  %297 = mul i32 %294, %296
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %299, %300
  br i1 %301, label %302, label %540

; <label>:302:                                    ; preds = %293, %540
  %303 = load i32, i32* @x.21
  %304 = load i32, i32* @y.22
  %305 = sub i32 %303, 1
  %306 = mul i32 %303, %305
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %304, 10
  %310 = or i1 %308, %309
  br i1 %310, label %311, label %540

; <label>:311:                                    ; preds = %302
  br label %312

; <label>:312:                                    ; preds = %311, %277
  br label %313

; <label>:313:                                    ; preds = %312
  %314 = load i64, i64* %14, align 8
  %315 = add nsw i64 %314, 1
  store i64 %315, i64* %14, align 8
  br label %252

; <label>:316:                                    ; preds = %274
  %317 = load i32, i32* @x.21
  %318 = load i32, i32* @y.22
  %319 = sub i32 %317, 1
  %320 = mul i32 %317, %319
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %318, 10
  %324 = or i1 %322, %323
  br i1 %324, label %325, label %541

; <label>:325:                                    ; preds = %316, %541
  %326 = load i32, i32* @x.21
  %327 = load i32, i32* @y.22
  %328 = sub i32 %326, 1
  %329 = mul i32 %326, %328
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %331, %332
  br i1 %333, label %334, label %541

; <label>:334:                                    ; preds = %325
  br label %382

; <label>:335:                                    ; preds = %245
  %336 = load i32, i32* @x.21
  %337 = load i32, i32* @y.22
  %338 = sub i32 %336, 1
  %339 = mul i32 %336, %338
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %341, %342
  br i1 %343, label %344, label %542

; <label>:344:                                    ; preds = %335, %542
  store i64 0, i64* %16, align 8
  %345 = load i32, i32* @x.21
  %346 = load i32, i32* @y.22
  %347 = sub i32 %345, 1
  %348 = mul i32 %345, %347
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %346, 10
  %352 = or i1 %350, %351
  br i1 %352, label %353, label %542

; <label>:353:                                    ; preds = %344
  br label %354

; <label>:354:                                    ; preds = %378, %353
  %355 = load i64, i64* %16, align 8
  %356 = load i64, i64* %2, align 8
  %357 = icmp slt i64 %355, %356
  br i1 %357, label %358, label %381

; <label>:358:                                    ; preds = %354
  %359 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERb(%"class.std::basic_istream"* @_ZSt3cin, i8* dereferenceable(1) %17)
          to label %360 unwind label %109

; <label>:360:                                    ; preds = %358
  %361 = load i8, i8* %17, align 1
  %362 = trunc i8 %361 to i1
  br i1 %362, label %363, label %377

; <label>:363:                                    ; preds = %360
  %364 = load i64, i64* %13, align 8
  %365 = load i64, i64* %2, align 8
  %366 = mul nsw i64 %364, %365
  %367 = load i64, i64* %16, align 8
  %368 = add nsw i64 %366, %367
  %369 = load i64, i64* %13, align 8
  %370 = add nsw i64 %369, 1
  %371 = load i64, i64* %2, align 8
  %372 = mul nsw i64 %370, %371
  %373 = load i64, i64* %16, align 8
  %374 = add nsw i64 %372, %373
  %375 = invoke zeroext i1 @_ZN5Graph10deleteEdgeExxb(%class.Graph* %4, i64 %368, i64 %374, i1 zeroext true)
          to label %376 unwind label %109

; <label>:376:                                    ; preds = %363
  br label %377

; <label>:377:                                    ; preds = %376, %360
  br label %378

; <label>:378:                                    ; preds = %377
  %379 = load i64, i64* %16, align 8
  %380 = add nsw i64 %379, 1
  store i64 %380, i64* %16, align 8
  br label %354

; <label>:381:                                    ; preds = %354
  br label %382

; <label>:382:                                    ; preds = %381, %334
  %383 = load i32, i32* @x.21
  %384 = load i32, i32* @y.22
  %385 = sub i32 %383, 1
  %386 = mul i32 %383, %385
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %388, %389
  br i1 %390, label %391, label %543

; <label>:391:                                    ; preds = %382, %543
  %392 = load i32, i32* @x.21
  %393 = load i32, i32* @y.22
  %394 = sub i32 %392, 1
  %395 = mul i32 %392, %394
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %393, 10
  %399 = or i1 %397, %398
  br i1 %399, label %400, label %543

; <label>:400:                                    ; preds = %391
  br label %401

; <label>:401:                                    ; preds = %400
  %402 = load i64, i64* %12, align 8
  %403 = add nsw i64 %402, 1
  store i64 %403, i64* %12, align 8
  br label %221

; <label>:404:                                    ; preds = %244
  %405 = load i32, i32* @x.21
  %406 = load i32, i32* @y.22
  %407 = sub i32 %405, 1
  %408 = mul i32 %405, %407
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %410, %411
  br i1 %412, label %413, label %544

; <label>:413:                                    ; preds = %404, %544
  %414 = load i64, i64* %3, align 8
  %415 = load i64, i64* %2, align 8
  %416 = mul nsw i64 %414, %415
  %417 = sub nsw i64 %416, 1
  %418 = load i32, i32* @x.21
  %419 = load i32, i32* @y.22
  %420 = sub i32 %418, 1
  %421 = mul i32 %418, %420
  %422 = urem i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %423, %424
  br i1 %425, label %426, label %544

; <label>:426:                                    ; preds = %413
  %427 = invoke i64 @_ZN5Graph8dijkstraExx(%class.Graph* %4, i64 0, i64 %417)
          to label %428 unwind label %109

; <label>:428:                                    ; preds = %426
  store i64 %427, i64* %18, align 8
  %429 = load i64, i64* %18, align 8
  %430 = icmp eq i64 %429, 9223372036854775807
  br i1 %430, label %431, label %432

; <label>:431:                                    ; preds = %428
  br label %435

; <label>:432:                                    ; preds = %428
  %433 = load i64, i64* %18, align 8
  %434 = add nsw i64 %433, 1
  br label %435

; <label>:435:                                    ; preds = %432, %431
  %436 = phi i64 [ 0, %431 ], [ %434, %432 ]
  %437 = load i32, i32* @x.21
  %438 = load i32, i32* @y.22
  %439 = sub i32 %437, 1
  %440 = mul i32 %437, %439
  %441 = urem i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %442, %443
  br i1 %444, label %445, label %563

; <label>:445:                                    ; preds = %435, %563
  %446 = load i32, i32* @x.21
  %447 = load i32, i32* @y.22
  %448 = sub i32 %446, 1
  %449 = mul i32 %446, %448
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %451, %452
  br i1 %453, label %454, label %563

; <label>:454:                                    ; preds = %445
  %455 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %436)
          to label %456 unwind label %109

; <label>:456:                                    ; preds = %454
  %457 = load i32, i32* @x.21
  %458 = load i32, i32* @y.22
  %459 = sub i32 %457, 1
  %460 = mul i32 %457, %459
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %458, 10
  %464 = or i1 %462, %463
  br i1 %464, label %465, label %564

; <label>:465:                                    ; preds = %456, %564
  %466 = load i32, i32* @x.21
  %467 = load i32, i32* @y.22
  %468 = sub i32 %466, 1
  %469 = mul i32 %466, %468
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %467, 10
  %473 = or i1 %471, %472
  br i1 %473, label %474, label %564

; <label>:474:                                    ; preds = %465
  %475 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %455, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %476 unwind label %109

; <label>:476:                                    ; preds = %474
  call void @_ZN5GraphD2Ev(%class.Graph* %4) #3
  br label %19

; <label>:477:                                    ; preds = %24
  ret i32 0

; <label>:478:                                    ; preds = %130
  %479 = load i8*, i8** %7, align 8
  %480 = load i32, i32* %8, align 4
  %481 = insertvalue { i8*, i32 } undef, i8* %479, 0
  %482 = insertvalue { i8*, i32 } %481, i32 %480, 1
  resume { i8*, i32 } %482

; <label>:483:                                    ; preds = %38, %29
  %484 = load i64, i64* %5, align 8
  %485 = load i64, i64* %3, align 8
  %486 = sub i64 0, %485
  %487 = add i64 %486, 1
  %488 = shl i64 %485, 1
  %489 = sub nsw i64 %485, 1
  %490 = icmp slt i64 %484, %489
  br label %38

; <label>:491:                                    ; preds = %62, %53
  %492 = load i64, i64* %6, align 8
  %493 = load i64, i64* %2, align 8
  %494 = icmp slt i64 %492, %493
  br label %62

; <label>:495:                                    ; preds = %96, %87
  br label %96

; <label>:496:                                    ; preds = %118, %109
  %497 = landingpad { i8*, i32 }
          cleanup
  %498 = extractvalue { i8*, i32 } %497, 0
  store i8* %498, i8** %7, align 8
  %499 = extractvalue { i8*, i32 } %497, 1
  store i32 %499, i32* %8, align 4
  call void @_ZN5GraphD2Ev(%class.Graph* %4) #3
  br label %118

; <label>:500:                                    ; preds = %144, %135
  store i64 0, i64* %9, align 8
  br label %144

; <label>:501:                                    ; preds = %186, %177
  %502 = load i64, i64* %10, align 8
  %503 = shl i64 %502, 1
  %504 = sub i64 0, %502
  %505 = add i64 %504, 1
  %506 = add nsw i64 %502, 1
  store i64 %506, i64* %10, align 8
  br label %186

; <label>:507:                                    ; preds = %211, %202
  store i64 0, i64* %11, align 8
  store i64 0, i64* %12, align 8
  br label %211

; <label>:508:                                    ; preds = %230, %221
  %509 = load i64, i64* %12, align 8
  %510 = load i64, i64* %3, align 8
  %511 = shl i64 %510, 2
  %512 = sub i64 0, %510
  %513 = add i64 %512, 2
  %514 = mul nsw i64 %510, 2
  %515 = shl i64 %514, 1
  %516 = shl i64 %514, 1
  %517 = sub i64 %514, 1
  %518 = mul i64 %517, 1
  %519 = sub i64 0, %514
  %520 = add i64 %519, 1
  %521 = sub i64 0, %514
  %522 = add i64 %521, 1
  %523 = sub nsw i64 %514, 1
  %524 = icmp slt i64 %509, %523
  br label %230

; <label>:525:                                    ; preds = %261, %252
  %526 = load i64, i64* %14, align 8
  %527 = load i64, i64* %2, align 8
  %528 = sub i64 0, %527
  %529 = add i64 %528, 1
  %530 = sub i64 %527, 1
  %531 = mul i64 %530, 1
  %532 = sub i64 %527, 1
  %533 = mul i64 %532, 1
  %534 = sub i64 %527, 1
  %535 = mul i64 %534, 1
  %536 = sub i64 %527, 1
  %537 = mul i64 %536, 1
  %538 = sub nsw i64 %527, 1
  %539 = icmp slt i64 %526, %538
  br label %261

; <label>:540:                                    ; preds = %302, %293
  br label %302

; <label>:541:                                    ; preds = %325, %316
  br label %325

; <label>:542:                                    ; preds = %344, %335
  store i64 0, i64* %16, align 8
  br label %344

; <label>:543:                                    ; preds = %391, %382
  br label %391

; <label>:544:                                    ; preds = %413, %404
  %545 = load i64, i64* %3, align 8
  %546 = load i64, i64* %2, align 8
  %547 = sub i64 0, %545
  %548 = add i64 %547, %546
  %549 = shl i64 %545, %546
  %550 = mul nsw i64 %545, %546
  %551 = sub i64 0, %550
  %552 = add i64 %551, 1
  %553 = sub i64 0, %550
  %554 = add i64 %553, 1
  %555 = shl i64 %550, 1
  %556 = sub i64 %550, 1
  %557 = mul i64 %556, 1
  %558 = shl i64 %550, 1
  %559 = shl i64 %550, 1
  %560 = sub i64 0, %550
  %561 = add i64 %560, 1
  %562 = sub nsw i64 %550, 1
  br label %413

; <label>:563:                                    ; preds = %445, %435
  br label %445

; <label>:564:                                    ; preds = %465, %456
  br label %465
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5GraphC2Ex(%class.Graph*, i64) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Graph*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::Node", align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %class.Graph* %0, %class.Graph** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load %class.Graph*, %class.Graph** %3, align 8
  %10 = getelementptr inbounds %class.Graph, %class.Graph* %9, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EEC2Ev(%"class.std::vector.13"* %10) #3
  store i64 0, i64* %5, align 8
  br label %11

; <label>:11:                                     ; preds = %55, %2
  %12 = load i64, i64* %5, align 8
  %13 = load i64, i64* %4, align 8
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %15, label %80

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* @x.23
  %17 = load i32, i32* @y.24
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %86

; <label>:24:                                     ; preds = %15, %86
  %25 = getelementptr inbounds %class.Graph, %class.Graph* %9, i32 0, i32 0
  %26 = bitcast %"struct.Graph::Node"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* %26, i8 0, i64 32, i32 8, i1 false)
  call void @_ZN5Graph4NodeC2Ev(%"struct.Graph::Node"* %6) #3
  %27 = load i32, i32* @x.23
  %28 = load i32, i32* @y.24
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %86

; <label>:35:                                     ; preds = %24
  invoke void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE9push_backEOS1_(%"class.std::vector.13"* %25, %"struct.Graph::Node"* dereferenceable(32) %6)
          to label %36 unwind label %58

; <label>:36:                                     ; preds = %35
  %37 = load i32, i32* @x.23
  %38 = load i32, i32* @y.24
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %89

; <label>:45:                                     ; preds = %36, %89
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  %46 = load i32, i32* @x.23
  %47 = load i32, i32* @y.24
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %89

; <label>:54:                                     ; preds = %45
  br label %55

; <label>:55:                                     ; preds = %54
  %56 = load i64, i64* %5, align 8
  %57 = add nsw i64 %56, 1
  store i64 %57, i64* %5, align 8
  br label %11

; <label>:58:                                     ; preds = %35
  %59 = load i32, i32* @x.23
  %60 = load i32, i32* @y.24
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %90

; <label>:67:                                     ; preds = %58, %90
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %7, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %8, align 4
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"* %10) #3
  %71 = load i32, i32* @x.23
  %72 = load i32, i32* @y.24
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %79, label %90

; <label>:79:                                     ; preds = %67
  br label %81

; <label>:80:                                     ; preds = %11
  ret void

; <label>:81:                                     ; preds = %79
  %82 = load i8*, i8** %7, align 8
  %83 = load i32, i32* %8, align 4
  %84 = insertvalue { i8*, i32 } undef, i8* %82, 0
  %85 = insertvalue { i8*, i32 } %84, i32 %83, 1
  resume { i8*, i32 } %85

; <label>:86:                                     ; preds = %24, %15
  %87 = getelementptr inbounds %class.Graph, %class.Graph* %9, i32 0, i32 0
  %88 = bitcast %"struct.Graph::Node"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* %88, i8 0, i64 32, i32 8, i1 false)
  call void @_ZN5Graph4NodeC2Ev(%"struct.Graph::Node"* %6) #3
  br label %24

; <label>:89:                                     ; preds = %45, %36
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  br label %45

; <label>:90:                                     ; preds = %67, %58
  %91 = landingpad { i8*, i32 }
          cleanup
  %92 = extractvalue { i8*, i32 } %91, 0
  store i8* %92, i8** %7, align 8
  %93 = extractvalue { i8*, i32 } %91, 1
  store i32 %93, i32* %8, align 4
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"* %10) #3
  br label %67
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Graph8makeEdgeExxxb(%class.Graph*, i64, i64, i64, i1 zeroext) #0 comdat align 2 {
  %6 = load i32, i32* @x.25
  %7 = load i32, i32* @y.26
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %67

; <label>:14:                                     ; preds = %5, %67
  %15 = alloca %class.Graph*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8, align 1
  %20 = alloca %"struct.Graph::Edge", align 8
  %21 = alloca %"struct.Graph::Edge", align 8
  store %class.Graph* %0, %class.Graph** %15, align 8
  store i64 %1, i64* %16, align 8
  store i64 %2, i64* %17, align 8
  store i64 %3, i64* %18, align 8
  %22 = zext i1 %4 to i8
  store i8 %22, i8* %19, align 1
  %23 = load %class.Graph*, %class.Graph** %15, align 8
  %24 = getelementptr inbounds %class.Graph, %class.Graph* %23, i32 0, i32 0
  %25 = load i64, i64* %16, align 8
  %26 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %24, i64 %25) #3
  %27 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %26, i32 0, i32 1
  %28 = load i64, i64* %17, align 8
  %29 = load i64, i64* %18, align 8
  call void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"* %20, i64 %28, i64 %29)
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %27, %"struct.Graph::Edge"* dereferenceable(16) %20)
  %30 = load i8, i8* %19, align 1
  %31 = trunc i8 %30 to i1
  %32 = load i32, i32* @x.25
  %33 = load i32, i32* @y.26
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %67

; <label>:40:                                     ; preds = %14
  br i1 %31, label %41, label %48

; <label>:41:                                     ; preds = %40
  %42 = getelementptr inbounds %class.Graph, %class.Graph* %23, i32 0, i32 0
  %43 = load i64, i64* %17, align 8
  %44 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %42, i64 %43) #3
  %45 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %44, i32 0, i32 1
  %46 = load i64, i64* %16, align 8
  %47 = load i64, i64* %18, align 8
  call void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"* %21, i64 %46, i64 %47)
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %45, %"struct.Graph::Edge"* dereferenceable(16) %21)
  br label %48

; <label>:48:                                     ; preds = %41, %40
  %49 = load i32, i32* @x.25
  %50 = load i32, i32* @y.26
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %57, label %85

; <label>:57:                                     ; preds = %48, %85
  %58 = load i32, i32* @x.25
  %59 = load i32, i32* @y.26
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %66, label %85

; <label>:66:                                     ; preds = %57
  ret void

; <label>:67:                                     ; preds = %14, %5
  %68 = alloca %class.Graph*, align 8
  %69 = alloca i64, align 8
  %70 = alloca i64, align 8
  %71 = alloca i64, align 8
  %72 = alloca i8, align 1
  %73 = alloca %"struct.Graph::Edge", align 8
  %74 = alloca %"struct.Graph::Edge", align 8
  store %class.Graph* %0, %class.Graph** %68, align 8
  store i64 %1, i64* %69, align 8
  store i64 %2, i64* %70, align 8
  store i64 %3, i64* %71, align 8
  %75 = zext i1 %4 to i8
  store i8 %75, i8* %72, align 1
  %76 = load %class.Graph*, %class.Graph** %68, align 8
  %77 = getelementptr inbounds %class.Graph, %class.Graph* %76, i32 0, i32 0
  %78 = load i64, i64* %69, align 8
  %79 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %77, i64 %78) #3
  %80 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %79, i32 0, i32 1
  %81 = load i64, i64* %70, align 8
  %82 = load i64, i64* %71, align 8
  call void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"* %73, i64 %81, i64 %82)
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %80, %"struct.Graph::Edge"* dereferenceable(16) %73)
  %83 = load i8, i8* %72, align 1
  %84 = trunc i8 %83 to i1
  br label %14

; <label>:85:                                     ; preds = %57, %48
  br label %57
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERb(%"class.std::basic_istream"*, i8* dereferenceable(1)) #1

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN5Graph10deleteEdgeExxb(%class.Graph*, i64, i64, i1 zeroext) #0 comdat align 2 {
  %5 = alloca i1, align 1
  %6 = alloca %class.Graph*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %22 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %23 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %class.Graph* %0, %class.Graph** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  %24 = zext i1 %3 to i8
  store i8 %24, i8* %9, align 1
  %25 = load %class.Graph*, %class.Graph** %6, align 8
  store i8 0, i8* %10, align 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %26 = getelementptr inbounds %class.Graph, %class.Graph* %25, i32 0, i32 0
  %27 = load i64, i64* %7, align 8
  %28 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %26, i64 %27) #3
  %29 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %28, i32 0, i32 1
  %30 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %29) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"struct.Graph::Edge"* %30, %"struct.Graph::Edge"** %31, align 8
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  br label %34

; <label>:34:                                     ; preds = %60, %4
  %35 = getelementptr inbounds %class.Graph, %class.Graph* %25, i32 0, i32 0
  %36 = load i64, i64* %7, align 8
  %37 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %35, i64 %36) #3
  %38 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %37, i32 0, i32 1
  %39 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %38) #3
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"struct.Graph::Edge"* %39, %"struct.Graph::Edge"** %40, align 8
  %41 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %13) #3
  br i1 %41, label %42, label %63

; <label>:42:                                     ; preds = %34
  %43 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %44 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %43, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = load i64, i64* %8, align 8
  %47 = icmp eq i64 %45, %46
  br i1 %47, label %48, label %59

; <label>:48:                                     ; preds = %42
  %49 = getelementptr inbounds %class.Graph, %class.Graph* %25, i32 0, i32 0
  %50 = load i64, i64* %7, align 8
  %51 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %49, i64 %50) #3
  %52 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %51, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"* %14, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11) #3
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %14, i32 0, i32 0
  %54 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %53, align 8
  %55 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE(%"class.std::vector.18"* %52, %"struct.Graph::Edge"* %54)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %"struct.Graph::Edge"* %55, %"struct.Graph::Edge"** %56, align 8
  %57 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEmmEi(%"class.__gnu_cxx::__normal_iterator"* %11, i32 0) #3
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  store %"struct.Graph::Edge"* %57, %"struct.Graph::Edge"** %58, align 8
  store i8 1, i8* %10, align 1
  br label %59

; <label>:59:                                     ; preds = %48, %42
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"* %11, i32 0) #3
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store %"struct.Graph::Edge"* %61, %"struct.Graph::Edge"** %62, align 8
  br label %34

; <label>:63:                                     ; preds = %34
  %64 = load i32, i32* @x.27
  %65 = load i32, i32* @y.28
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %72, label %202

; <label>:72:                                     ; preds = %63, %202
  %73 = load i8, i8* %9, align 1
  %74 = trunc i8 %73 to i1
  %75 = load i32, i32* @x.27
  %76 = load i32, i32* @y.28
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %83, label %202

; <label>:83:                                     ; preds = %72
  br i1 %74, label %87, label %84

; <label>:84:                                     ; preds = %83
  %85 = load i8, i8* %10, align 1
  %86 = trunc i8 %85 to i1
  store i1 %86, i1* %5, align 1
  br label %182

; <label>:87:                                     ; preds = %83
  %88 = getelementptr inbounds %class.Graph, %class.Graph* %25, i32 0, i32 0
  %89 = load i64, i64* %8, align 8
  %90 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %88, i64 %89) #3
  %91 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %90, i32 0, i32 1
  %92 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %91) #3
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  store %"struct.Graph::Edge"* %92, %"struct.Graph::Edge"** %93, align 8
  %94 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 8, i32 8, i1 false)
  br label %96

; <label>:96:                                     ; preds = %158, %87
  %97 = load i32, i32* @x.27
  %98 = load i32, i32* @y.28
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %105, label %205

; <label>:105:                                    ; preds = %96, %205
  %106 = getelementptr inbounds %class.Graph, %class.Graph* %25, i32 0, i32 0
  %107 = load i64, i64* %8, align 8
  %108 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %106, i64 %107) #3
  %109 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %108, i32 0, i32 1
  %110 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %109) #3
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.Graph::Edge"* %110, %"struct.Graph::Edge"** %111, align 8
  %112 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19) #3
  %113 = load i32, i32* @x.27
  %114 = load i32, i32* @y.28
  %115 = sub i32 %113, 1
  %116 = mul i32 %113, %115
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %118, %119
  br i1 %120, label %121, label %205

; <label>:121:                                    ; preds = %105
  br i1 %112, label %122, label %161

; <label>:122:                                    ; preds = %121
  %123 = load i32, i32* @x.27
  %124 = load i32, i32* @y.28
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %131, label %213

; <label>:131:                                    ; preds = %122, %213
  %132 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %133 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %132, i32 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = load i64, i64* %7, align 8
  %136 = icmp eq i64 %134, %135
  %137 = load i32, i32* @x.27
  %138 = load i32, i32* @y.28
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %145, label %213

; <label>:145:                                    ; preds = %131
  br i1 %136, label %146, label %157

; <label>:146:                                    ; preds = %145
  %147 = getelementptr inbounds %class.Graph, %class.Graph* %25, i32 0, i32 0
  %148 = load i64, i64* %8, align 8
  %149 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %147, i64 %148) #3
  %150 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %149, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"* %20, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11) #3
  %151 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %20, i32 0, i32 0
  %152 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %151, align 8
  %153 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE(%"class.std::vector.18"* %150, %"struct.Graph::Edge"* %152)
  %154 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %21, i32 0, i32 0
  store %"struct.Graph::Edge"* %153, %"struct.Graph::Edge"** %154, align 8
  %155 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEmmEi(%"class.__gnu_cxx::__normal_iterator"* %11, i32 0) #3
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %22, i32 0, i32 0
  store %"struct.Graph::Edge"* %155, %"struct.Graph::Edge"** %156, align 8
  store i8 1, i8* %10, align 1
  br label %157

; <label>:157:                                    ; preds = %146, %145
  br label %158

; <label>:158:                                    ; preds = %157
  %159 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"* %11, i32 0) #3
  %160 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %23, i32 0, i32 0
  store %"struct.Graph::Edge"* %159, %"struct.Graph::Edge"** %160, align 8
  br label %96

; <label>:161:                                    ; preds = %121
  %162 = load i32, i32* @x.27
  %163 = load i32, i32* @y.28
  %164 = sub i32 %162, 1
  %165 = mul i32 %162, %164
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %167, %168
  br i1 %169, label %170, label %219

; <label>:170:                                    ; preds = %161, %219
  %171 = load i8, i8* %10, align 1
  %172 = trunc i8 %171 to i1
  store i1 %172, i1* %5, align 1
  %173 = load i32, i32* @x.27
  %174 = load i32, i32* @y.28
  %175 = sub i32 %173, 1
  %176 = mul i32 %173, %175
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %174, 10
  %180 = or i1 %178, %179
  br i1 %180, label %181, label %219

; <label>:181:                                    ; preds = %170
  br label %182

; <label>:182:                                    ; preds = %181, %84
  %183 = load i32, i32* @x.27
  %184 = load i32, i32* @y.28
  %185 = sub i32 %183, 1
  %186 = mul i32 %183, %185
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %188, %189
  br i1 %190, label %191, label %222

; <label>:191:                                    ; preds = %182, %222
  %192 = load i1, i1* %5, align 1
  %193 = load i32, i32* @x.27
  %194 = load i32, i32* @y.28
  %195 = sub i32 %193, 1
  %196 = mul i32 %193, %195
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %198, %199
  br i1 %200, label %201, label %222

; <label>:201:                                    ; preds = %191
  ret i1 %192

; <label>:202:                                    ; preds = %72, %63
  %203 = load i8, i8* %9, align 1
  %204 = trunc i8 %203 to i1
  br label %72

; <label>:205:                                    ; preds = %105, %96
  %206 = getelementptr inbounds %class.Graph, %class.Graph* %25, i32 0, i32 0
  %207 = load i64, i64* %8, align 8
  %208 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %206, i64 %207) #3
  %209 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %208, i32 0, i32 1
  %210 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %209) #3
  %211 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.Graph::Edge"* %210, %"struct.Graph::Edge"** %211, align 8
  %212 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19) #3
  br label %105

; <label>:213:                                    ; preds = %131, %122
  %214 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %215 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %214, i32 0, i32 0
  %216 = load i64, i64* %215, align 8
  %217 = load i64, i64* %7, align 8
  %218 = icmp eq i64 %216, %217
  br label %131

; <label>:219:                                    ; preds = %170, %161
  %220 = load i8, i8* %10, align 1
  %221 = trunc i8 %220 to i1
  store i1 %221, i1* %5, align 1
  br label %170

; <label>:222:                                    ; preds = %191, %182
  %223 = load i1, i1* %5, align 1
  br label %191
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN5Graph8dijkstraExx(%class.Graph*, i64, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Graph*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::priority_queue", align 8
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca %"class.std::vector.25", align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %"class.std::set", align 8
  %14 = alloca %"struct.Graph::QInfo", align 8
  %15 = alloca %"struct.std::pair", align 8
  %16 = alloca %"struct.Graph::QInfo", align 8
  %17 = alloca %"struct.Graph::Node", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca i64, align 8
  %21 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %22 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %23 = alloca %"struct.Graph::QInfo", align 8
  %24 = alloca %"struct.std::pair", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %class.Graph* %0, %class.Graph** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %26 = load %class.Graph*, %class.Graph** %4, align 8
  store i64 0, i64* %7, align 8
  br label %27

; <label>:27:                                     ; preds = %57, %3
  %28 = load i64, i64* %7, align 8
  %29 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %30 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %29) #3
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %32, label %58

; <label>:32:                                     ; preds = %27
  %33 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %34 = load i64, i64* %7, align 8
  %35 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %33, i64 %34) #3
  %36 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %35, i32 0, i32 0
  store i64 9223372036854775807, i64* %36, align 8
  br label %37

; <label>:37:                                     ; preds = %32
  %38 = load i32, i32* @x.29
  %39 = load i32, i32* @y.30
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %377

; <label>:46:                                     ; preds = %37, %377
  %47 = load i64, i64* %7, align 8
  %48 = add nsw i64 %47, 1
  store i64 %48, i64* %7, align 8
  %49 = load i32, i32* @x.29
  %50 = load i32, i32* @y.30
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %57, label %377

; <label>:57:                                     ; preds = %46
  br label %27

; <label>:58:                                     ; preds = %27
  %59 = load i32, i32* @x.29
  %60 = load i32, i32* @y.30
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %383

; <label>:67:                                     ; preds = %58, %383
  %68 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %68, i64 %69) #3
  %71 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %70, i32 0, i32 0
  store i64 0, i64* %71, align 8
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2Ev(%"class.std::vector.25"* %10) #3
  %72 = load i32, i32* @x.29
  %73 = load i32, i32* @y.30
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %80, label %383

; <label>:80:                                     ; preds = %67
  invoke void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"* %8, %"struct.std::less"* dereferenceable(1) %9, %"class.std::vector.25"* dereferenceable(24) %10)
          to label %81 unwind label %293

; <label>:81:                                     ; preds = %80
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %10) #3
  call void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set"* %13) #3
  %82 = load i64, i64* %5, align 8
  invoke void @_ZN5Graph5QInfoC2Exx(%"struct.Graph::QInfo"* %14, i64 %82, i64 0)
          to label %83 unwind label %297

; <label>:83:                                     ; preds = %81
  invoke void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_(%"class.std::priority_queue"* %8, %"struct.Graph::QInfo"* dereferenceable(16) %14)
          to label %84 unwind label %297

; <label>:84:                                     ; preds = %83
  %85 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set"* %13, i64* dereferenceable(8) %5)
          to label %86 unwind label %297

; <label>:86:                                     ; preds = %84
  %87 = bitcast %"struct.std::pair"* %15 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %88 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %87, i32 0, i32 0
  %89 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %85, 0
  store %"struct.std::_Rb_tree_node_base"* %89, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %90 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %87, i32 0, i32 1
  %91 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %85, 1
  store i8 %91, i8* %90, align 8
  br label %92

; <label>:92:                                     ; preds = %364, %86
  %93 = load i32, i32* @x.29
  %94 = load i32, i32* @y.30
  %95 = sub i32 %93, 1
  %96 = mul i32 %93, %95
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %98, %99
  br i1 %100, label %101, label %388

; <label>:101:                                    ; preds = %92, %388
  %102 = load i32, i32* @x.29
  %103 = load i32, i32* @y.30
  %104 = sub i32 %102, 1
  %105 = mul i32 %102, %104
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %107, %108
  br i1 %109, label %110, label %388

; <label>:110:                                    ; preds = %101
  %111 = invoke zeroext i1 @_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE5emptyEv(%"class.std::priority_queue"* %8)
          to label %112 unwind label %297

; <label>:112:                                    ; preds = %110
  %113 = xor i1 %111, true
  br i1 %113, label %114, label %365

; <label>:114:                                    ; preds = %112
  %115 = invoke dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv(%"class.std::priority_queue"* %8)
          to label %116 unwind label %297

; <label>:116:                                    ; preds = %114
  %117 = bitcast %"struct.Graph::QInfo"* %16 to i8*
  %118 = bitcast %"struct.Graph::QInfo"* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %117, i8* %118, i64 16, i32 8, i1 false)
  invoke void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3popEv(%"class.std::priority_queue"* %8)
          to label %119 unwind label %297

; <label>:119:                                    ; preds = %116
  %120 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %16, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %120, i64 %122) #3
  invoke void @_ZN5Graph4NodeC2ERKS0_(%"struct.Graph::Node"* %17, %"struct.Graph::Node"* dereferenceable(32) %123)
          to label %124 unwind label %297

; <label>:124:                                    ; preds = %119
  %125 = load i32, i32* @x.29
  %126 = load i32, i32* @y.30
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %133, label %389

; <label>:133:                                    ; preds = %124, %389
  %134 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %16, i32 0, i32 0
  %135 = load i32, i32* @x.29
  %136 = load i32, i32* @y.30
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %143, label %389

; <label>:143:                                    ; preds = %133
  %144 = invoke i64 @_ZNSt3setIxSt4lessIxESaIxEE5eraseERKx(%"class.std::set"* %13, i64* dereferenceable(8) %134)
          to label %145 unwind label %319

; <label>:145:                                    ; preds = %143
  %146 = load i32, i32* @x.29
  %147 = load i32, i32* @y.30
  %148 = sub i32 %146, 1
  %149 = mul i32 %146, %148
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %151, %152
  br i1 %153, label %154, label %391

; <label>:154:                                    ; preds = %145, %391
  %155 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 1
  %156 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %155) #3
  %157 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  store %"struct.Graph::Edge"* %156, %"struct.Graph::Edge"** %157, align 8
  %158 = load i32, i32* @x.29
  %159 = load i32, i32* @y.30
  %160 = sub i32 %158, 1
  %161 = mul i32 %158, %160
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %163, %164
  br i1 %165, label %166, label %391

; <label>:166:                                    ; preds = %154
  br label %167

; <label>:167:                                    ; preds = %363, %166
  %168 = load i32, i32* @x.29
  %169 = load i32, i32* @y.30
  %170 = sub i32 %168, 1
  %171 = mul i32 %168, %170
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %173, %174
  br i1 %175, label %176, label %395

; <label>:176:                                    ; preds = %167, %395
  %177 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 1
  %178 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %177) #3
  %179 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.Graph::Edge"* %178, %"struct.Graph::Edge"** %179, align 8
  %180 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %18, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19) #3
  %181 = load i32, i32* @x.29
  %182 = load i32, i32* @y.30
  %183 = sub i32 %181, 1
  %184 = mul i32 %181, %183
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %186, %187
  br i1 %188, label %189, label %395

; <label>:189:                                    ; preds = %176
  br i1 %180, label %190, label %364

; <label>:190:                                    ; preds = %189
  %191 = load i32, i32* @x.29
  %192 = load i32, i32* @y.30
  %193 = sub i32 %191, 1
  %194 = mul i32 %191, %193
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %192, 10
  %198 = or i1 %196, %197
  br i1 %198, label %199, label %400

; <label>:199:                                    ; preds = %190, %400
  %200 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %201 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %200, i32 0, i32 0
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %20, align 8
  %203 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %206 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %205, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = add nsw i64 %204, %207
  %209 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %210 = load i64, i64* %20, align 8
  %211 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %209, i64 %210) #3
  %212 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %211, i32 0, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = icmp slt i64 %208, %213
  %215 = load i32, i32* @x.29
  %216 = load i32, i32* @y.30
  %217 = sub i32 %215, 1
  %218 = mul i32 %215, %217
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %220, %221
  br i1 %222, label %223, label %400

; <label>:223:                                    ; preds = %199
  br i1 %214, label %224, label %342

; <label>:224:                                    ; preds = %223
  %225 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %228 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %227, i32 0, i32 1
  %229 = load i64, i64* %228, align 8
  %230 = add nsw i64 %226, %229
  %231 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %232 = load i64, i64* %20, align 8
  %233 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %231, i64 %232) #3
  %234 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %233, i32 0, i32 0
  store i64 %230, i64* %234, align 8
  %235 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIxSt4lessIxESaIxEE4findERKx(%"class.std::set"* %13, i64* dereferenceable(8) %20)
          to label %236 unwind label %319

; <label>:236:                                    ; preds = %224
  %237 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %21, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %235, %"struct.std::_Rb_tree_node_base"** %237, align 8
  %238 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIxSt4lessIxESaIxEE3endEv(%"class.std::set"* %13) #3
  %239 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %22, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %238, %"struct.std::_Rb_tree_node_base"** %239, align 8
  %240 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"* %21, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %22) #3
  br i1 %240, label %241, label %323

; <label>:241:                                    ; preds = %236
  %242 = load i32, i32* @x.29
  %243 = load i32, i32* @y.30
  %244 = sub i32 %242, 1
  %245 = mul i32 %242, %244
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %247, %248
  br i1 %249, label %250, label %423

; <label>:250:                                    ; preds = %241, %423
  %251 = load i64, i64* %20, align 8
  %252 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %253 = load i64, i64* %20, align 8
  %254 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %252, i64 %253) #3
  %255 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %254, i32 0, i32 0
  %256 = load i64, i64* %255, align 8
  %257 = load i32, i32* @x.29
  %258 = load i32, i32* @y.30
  %259 = sub i32 %257, 1
  %260 = mul i32 %257, %259
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %258, 10
  %264 = or i1 %262, %263
  br i1 %264, label %265, label %423

; <label>:265:                                    ; preds = %250
  invoke void @_ZN5Graph5QInfoC2Exx(%"struct.Graph::QInfo"* %23, i64 %251, i64 %256)
          to label %266 unwind label %319

; <label>:266:                                    ; preds = %265
  %267 = load i32, i32* @x.29
  %268 = load i32, i32* @y.30
  %269 = sub i32 %267, 1
  %270 = mul i32 %267, %269
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %272, %273
  br i1 %274, label %275, label %430

; <label>:275:                                    ; preds = %266, %430
  %276 = load i32, i32* @x.29
  %277 = load i32, i32* @y.30
  %278 = sub i32 %276, 1
  %279 = mul i32 %276, %278
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %281, %282
  br i1 %283, label %284, label %430

; <label>:284:                                    ; preds = %275
  invoke void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_(%"class.std::priority_queue"* %8, %"struct.Graph::QInfo"* dereferenceable(16) %23)
          to label %285 unwind label %319

; <label>:285:                                    ; preds = %284
  %286 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set"* %13, i64* dereferenceable(8) %5)
          to label %287 unwind label %319

; <label>:287:                                    ; preds = %285
  %288 = bitcast %"struct.std::pair"* %24 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %289 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %288, i32 0, i32 0
  %290 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %286, 0
  store %"struct.std::_Rb_tree_node_base"* %290, %"struct.std::_Rb_tree_node_base"** %289, align 8
  %291 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %288, i32 0, i32 1
  %292 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %286, 1
  store i8 %292, i8* %291, align 8
  br label %323

; <label>:293:                                    ; preds = %80
  %294 = landingpad { i8*, i32 }
          cleanup
  %295 = extractvalue { i8*, i32 } %294, 0
  store i8* %295, i8** %11, align 8
  %296 = extractvalue { i8*, i32 } %294, 1
  store i32 %296, i32* %12, align 4
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %10) #3
  br label %372

; <label>:297:                                    ; preds = %119, %116, %114, %110, %84, %83, %81
  %298 = load i32, i32* @x.29
  %299 = load i32, i32* @y.30
  %300 = sub i32 %298, 1
  %301 = mul i32 %298, %300
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %299, 10
  %305 = or i1 %303, %304
  br i1 %305, label %306, label %431

; <label>:306:                                    ; preds = %297, %431
  %307 = landingpad { i8*, i32 }
          cleanup
  %308 = extractvalue { i8*, i32 } %307, 0
  store i8* %308, i8** %11, align 8
  %309 = extractvalue { i8*, i32 } %307, 1
  store i32 %309, i32* %12, align 4
  %310 = load i32, i32* @x.29
  %311 = load i32, i32* @y.30
  %312 = sub i32 %310, 1
  %313 = mul i32 %310, %312
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %315, %316
  br i1 %317, label %318, label %431

; <label>:318:                                    ; preds = %306
  br label %371

; <label>:319:                                    ; preds = %285, %284, %265, %224, %143
  %320 = landingpad { i8*, i32 }
          cleanup
  %321 = extractvalue { i8*, i32 } %320, 0
  store i8* %321, i8** %11, align 8
  %322 = extractvalue { i8*, i32 } %320, 1
  store i32 %322, i32* %12, align 4
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %17) #3
  br label %371

; <label>:323:                                    ; preds = %287, %236
  %324 = load i32, i32* @x.29
  %325 = load i32, i32* @y.30
  %326 = sub i32 %324, 1
  %327 = mul i32 %324, %326
  %328 = urem i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %329, %330
  br i1 %331, label %332, label %435

; <label>:332:                                    ; preds = %323, %435
  %333 = load i32, i32* @x.29
  %334 = load i32, i32* @y.30
  %335 = sub i32 %333, 1
  %336 = mul i32 %333, %335
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %334, 10
  %340 = or i1 %338, %339
  br i1 %340, label %341, label %435

; <label>:341:                                    ; preds = %332
  br label %342

; <label>:342:                                    ; preds = %341, %223
  br label %343

; <label>:343:                                    ; preds = %342
  %344 = load i32, i32* @x.29
  %345 = load i32, i32* @y.30
  %346 = sub i32 %344, 1
  %347 = mul i32 %344, %346
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %345, 10
  %351 = or i1 %349, %350
  br i1 %351, label %352, label %436

; <label>:352:                                    ; preds = %343, %436
  %353 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"* %18, i32 0) #3
  %354 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  store %"struct.Graph::Edge"* %353, %"struct.Graph::Edge"** %354, align 8
  %355 = load i32, i32* @x.29
  %356 = load i32, i32* @y.30
  %357 = sub i32 %355, 1
  %358 = mul i32 %355, %357
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %356, 10
  %362 = or i1 %360, %361
  br i1 %362, label %363, label %436

; <label>:363:                                    ; preds = %352
  br label %167

; <label>:364:                                    ; preds = %189
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %17) #3
  br label %92

; <label>:365:                                    ; preds = %112
  %366 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %367 = load i64, i64* %6, align 8
  %368 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %366, i64 %367) #3
  %369 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %368, i32 0, i32 0
  %370 = load i64, i64* %369, align 8
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"* %13) #3
  call void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"* %8) #3
  ret i64 %370

; <label>:371:                                    ; preds = %319, %318
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"* %13) #3
  call void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"* %8) #3
  br label %372

; <label>:372:                                    ; preds = %371, %293
  %373 = load i8*, i8** %11, align 8
  %374 = load i32, i32* %12, align 4
  %375 = insertvalue { i8*, i32 } undef, i8* %373, 0
  %376 = insertvalue { i8*, i32 } %375, i32 %374, 1
  resume { i8*, i32 } %376

; <label>:377:                                    ; preds = %46, %37
  %378 = load i64, i64* %7, align 8
  %379 = sub i64 %378, 1
  %380 = mul i64 %379, 1
  %381 = shl i64 %378, 1
  %382 = add nsw i64 %378, 1
  store i64 %382, i64* %7, align 8
  br label %46

; <label>:383:                                    ; preds = %67, %58
  %384 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %385 = load i64, i64* %5, align 8
  %386 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %384, i64 %385) #3
  %387 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %386, i32 0, i32 0
  store i64 0, i64* %387, align 8
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2Ev(%"class.std::vector.25"* %10) #3
  br label %67

; <label>:388:                                    ; preds = %101, %92
  br label %101

; <label>:389:                                    ; preds = %133, %124
  %390 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %16, i32 0, i32 0
  br label %133

; <label>:391:                                    ; preds = %154, %145
  %392 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 1
  %393 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %392) #3
  %394 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  store %"struct.Graph::Edge"* %393, %"struct.Graph::Edge"** %394, align 8
  br label %154

; <label>:395:                                    ; preds = %176, %167
  %396 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 1
  %397 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %396) #3
  %398 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.Graph::Edge"* %397, %"struct.Graph::Edge"** %398, align 8
  %399 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %18, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19) #3
  br label %176

; <label>:400:                                    ; preds = %199, %190
  %401 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %402 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %401, i32 0, i32 0
  %403 = load i64, i64* %402, align 8
  store i64 %403, i64* %20, align 8
  %404 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 0
  %405 = load i64, i64* %404, align 8
  %406 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %407 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %406, i32 0, i32 1
  %408 = load i64, i64* %407, align 8
  %409 = sub i64 %405, %408
  %410 = mul i64 %409, %408
  %411 = sub i64 %405, %408
  %412 = mul i64 %411, %408
  %413 = sub i64 0, %405
  %414 = add i64 %413, %408
  %415 = shl i64 %405, %408
  %416 = add nsw i64 %405, %408
  %417 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %418 = load i64, i64* %20, align 8
  %419 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %417, i64 %418) #3
  %420 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %419, i32 0, i32 0
  %421 = load i64, i64* %420, align 8
  %422 = icmp slt i64 %416, %421
  br label %199

; <label>:423:                                    ; preds = %250, %241
  %424 = load i64, i64* %20, align 8
  %425 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %426 = load i64, i64* %20, align 8
  %427 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %425, i64 %426) #3
  %428 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %427, i32 0, i32 0
  %429 = load i64, i64* %428, align 8
  br label %250

; <label>:430:                                    ; preds = %275, %266
  br label %275

; <label>:431:                                    ; preds = %306, %297
  %432 = landingpad { i8*, i32 }
          cleanup
  %433 = extractvalue { i8*, i32 } %432, 0
  store i8* %433, i8** %11, align 8
  %434 = extractvalue { i8*, i32 } %432, 1
  store i32 %434, i32* %12, align 4
  br label %306

; <label>:435:                                    ; preds = %332, %323
  br label %332

; <label>:436:                                    ; preds = %352, %343
  %437 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"* %18, i32 0) #3
  %438 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  store %"struct.Graph::Edge"* %437, %"struct.Graph::Edge"** %438, align 8
  br label %352
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5GraphD2Ev(%class.Graph*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.Graph*, align 8
  store %class.Graph* %0, %class.Graph** %2, align 8
  %3 = load %class.Graph*, %class.Graph** %2, align 8
  %4 = getelementptr inbounds %class.Graph, %class.Graph* %3, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EEC2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  invoke void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EEC2Ev(%"struct.std::_Vector_base.14"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE9push_backEOS1_(%"class.std::vector.13"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %7 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt4moveIRN5Graph4NodeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Node"* dereferenceable(32) %6) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.13"* %5, %"struct.Graph::Node"* dereferenceable(32) %7)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4NodeC2Ev(%"struct.Graph::Node"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  %4 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %3, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2Ev(%"class.std::vector.18"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  %4 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %3, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev(%"class.std::vector.18"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %8, align 8
  %10 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %12, align 8
  %14 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %15 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %14) #3
  invoke void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"* %9, %"struct.Graph::Node"* %13, %"class.std::allocator.15"* dereferenceable(1) %15)
          to label %16 unwind label %36

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.41
  %18 = load i32, i32* @y.42
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %79

; <label>:25:                                     ; preds = %16, %79
  %26 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %26) #3
  %27 = load i32, i32* @x.41
  %28 = load i32, i32* @y.42
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %79

; <label>:35:                                     ; preds = %25
  ret void

; <label>:36:                                     ; preds = %1
  %37 = load i32, i32* @x.41
  %38 = load i32, i32* @y.42
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %81

; <label>:45:                                     ; preds = %36, %81
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %49) #3
  %50 = load i32, i32* @x.41
  %51 = load i32, i32* @y.42
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %58, label %81

; <label>:58:                                     ; preds = %45
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.41
  %61 = load i32, i32* @y.42
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %86

; <label>:68:                                     ; preds = %59, %86
  %69 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %69) #10
  %70 = load i32, i32* @x.41
  %71 = load i32, i32* @y.42
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %86

; <label>:78:                                     ; preds = %68
  unreachable

; <label>:79:                                     ; preds = %25, %16
  %80 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %80) #3
  br label %25

; <label>:81:                                     ; preds = %45, %36
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %3, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %4, align 4
  %85 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %85) #3
  br label %45

; <label>:86:                                     ; preds = %68, %59
  %87 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %87) #10
  br label %68
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EEC2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #10
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaIN5Graph4NodeEEC2Ev(%"class.std::allocator.15"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4NodeEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.49
  %3 = load i32, i32* @y.50
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %1, %23
  %11 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %11, align 8
  %12 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %11, align 8
  %13 = bitcast %"class.std::allocator.15"* %12 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %13) #3
  %14 = load i32, i32* @x.49
  %15 = load i32, i32* @y.50
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %10
  ret void

; <label>:23:                                     ; preds = %10, %1
  %24 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %24, align 8
  %25 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %24, align 8
  %26 = bitcast %"class.std::allocator.15"* %25 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %26) #3
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.13"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 {
  %3 = load i32, i32* @x.53
  %4 = load i32, i32* @y.54
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %88

; <label>:11:                                     ; preds = %2, %88
  %12 = alloca %"class.std::vector.13"*, align 8
  %13 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %12, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %13, align 8
  %14 = load %"class.std::vector.13"*, %"class.std::vector.13"** %12, align 8
  %15 = bitcast %"class.std::vector.13"* %14 to %"struct.std::_Vector_base.14"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %16, i32 0, i32 1
  %18 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %17, align 8
  %19 = bitcast %"class.std::vector.13"* %14 to %"struct.std::_Vector_base.14"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %20, i32 0, i32 2
  %22 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %21, align 8
  %23 = icmp ne %"struct.Graph::Node"* %18, %22
  %24 = load i32, i32* @x.53
  %25 = load i32, i32* @y.54
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %88

; <label>:32:                                     ; preds = %11
  br i1 %23, label %33, label %48

; <label>:33:                                     ; preds = %32
  %34 = bitcast %"class.std::vector.13"* %14 to %"struct.std::_Vector_base.14"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %34, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %35 to %"class.std::allocator.15"*
  %37 = bitcast %"class.std::vector.13"* %14 to %"struct.std::_Vector_base.14"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %39, align 8
  %41 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %13, align 8
  %42 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %41) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %36, %"struct.Graph::Node"* %40, %"struct.Graph::Node"* dereferenceable(32) %42)
  %43 = bitcast %"class.std::vector.13"* %14 to %"struct.std::_Vector_base.14"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %45, align 8
  %47 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %46, i32 1
  store %"struct.Graph::Node"* %47, %"struct.Graph::Node"** %45, align 8
  br label %69

; <label>:48:                                     ; preds = %32
  %49 = load i32, i32* @x.53
  %50 = load i32, i32* @y.54
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %57, label %101

; <label>:57:                                     ; preds = %48, %101
  %58 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %13, align 8
  %59 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %58) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.13"* %14, %"struct.Graph::Node"* dereferenceable(32) %59)
  %60 = load i32, i32* @x.53
  %61 = load i32, i32* @y.54
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %101

; <label>:68:                                     ; preds = %57
  br label %69

; <label>:69:                                     ; preds = %68, %33
  %70 = load i32, i32* @x.53
  %71 = load i32, i32* @y.54
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %104

; <label>:78:                                     ; preds = %69, %104
  %79 = load i32, i32* @x.53
  %80 = load i32, i32* @y.54
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %87, label %104

; <label>:87:                                     ; preds = %78
  ret void

; <label>:88:                                     ; preds = %11, %2
  %89 = alloca %"class.std::vector.13"*, align 8
  %90 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %89, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %90, align 8
  %91 = load %"class.std::vector.13"*, %"class.std::vector.13"** %89, align 8
  %92 = bitcast %"class.std::vector.13"* %91 to %"struct.std::_Vector_base.14"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %93, i32 0, i32 1
  %95 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %94, align 8
  %96 = bitcast %"class.std::vector.13"* %91 to %"struct.std::_Vector_base.14"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %97, i32 0, i32 2
  %99 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %98, align 8
  %100 = icmp ne %"struct.Graph::Node"* %95, %99
  br label %11

; <label>:101:                                    ; preds = %57, %48
  %102 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %13, align 8
  %103 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %102) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.13"* %14, %"struct.Graph::Node"* dereferenceable(32) %103)
  br label %57

; <label>:104:                                    ; preds = %78, %69
  br label %78
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZSt4moveIRN5Graph4NodeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  ret %"struct.Graph::Node"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1), %"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 {
  %4 = load i32, i32* @x.57
  %5 = load i32, i32* @y.58
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %30

; <label>:12:                                     ; preds = %3, %30
  %13 = alloca %"class.std::allocator.15"*, align 8
  %14 = alloca %"struct.Graph::Node"*, align 8
  %15 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %13, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %14, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %15, align 8
  %16 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %13, align 8
  %17 = bitcast %"class.std::allocator.15"* %16 to %"class.__gnu_cxx::new_allocator.16"*
  %18 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %14, align 8
  %19 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %15, align 8
  %20 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %19) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %17, %"struct.Graph::Node"* %18, %"struct.Graph::Node"* dereferenceable(32) %20)
  %21 = load i32, i32* @x.57
  %22 = load i32, i32* @y.58
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %12
  ret void

; <label>:30:                                     ; preds = %12, %3
  %31 = alloca %"class.std::allocator.15"*, align 8
  %32 = alloca %"struct.Graph::Node"*, align 8
  %33 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %31, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %32, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %33, align 8
  %34 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %31, align 8
  %35 = bitcast %"class.std::allocator.15"* %34 to %"class.__gnu_cxx::new_allocator.16"*
  %36 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %32, align 8
  %37 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %33, align 8
  %38 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %37) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %35, %"struct.Graph::Node"* %36, %"struct.Graph::Node"* dereferenceable(32) %38)
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %2 = load i32, i32* @x.59
  %3 = load i32, i32* @y.60
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %11, align 8
  %12 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %11, align 8
  %13 = load i32, i32* @x.59
  %14 = load i32, i32* @y.60
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret %"struct.Graph::Node"* %12

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %23, align 8
  %24 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.13"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %10 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.13"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Graph::Node"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.14"* %12, i64 %13)
  store %"struct.Graph::Node"* %14, %"struct.Graph::Node"** %6, align 8
  %15 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  store %"struct.Graph::Node"* %15, %"struct.Graph::Node"** %7, align 8
  %16 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %17 to %"class.std::allocator.15"*
  %19 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %10) #3
  %21 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %19, i64 %20
  %22 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %23 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %18, %"struct.Graph::Node"* %21, %"struct.Graph::Node"* dereferenceable(32) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %7, align 8
  %25 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %27, align 8
  %29 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %31, align 8
  %33 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %34 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %35 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %34) #3
  %36 = invoke %"struct.Graph::Node"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4NodeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Node"* %28, %"struct.Graph::Node"* %32, %"struct.Graph::Node"* %33, %"class.std::allocator.15"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store %"struct.Graph::Node"* %36, %"struct.Graph::Node"** %7, align 8
  %38 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %39 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %38, i32 1
  store %"struct.Graph::Node"* %39, %"struct.Graph::Node"** %7, align 8
  br label %91

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8*, i8** %8, align 8
  %46 = call i8* @__cxa_begin_catch(i8* %45) #3
  %47 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %48 = icmp ne %"struct.Graph::Node"* %47, null
  br i1 %48, label %79, label %49

; <label>:49:                                     ; preds = %44
  %50 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %51 to %"class.std::allocator.15"*
  %53 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %54 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %10) #3
  %55 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %53, i64 %54
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1) %52, %"struct.Graph::Node"* %55)
          to label %56 unwind label %57

; <label>:56:                                     ; preds = %49
  br label %85

; <label>:57:                                     ; preds = %89, %85, %79, %49
  %58 = load i32, i32* @x.61
  %59 = load i32, i32* @y.62
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %66, label %142

; <label>:66:                                     ; preds = %57, %142
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %8, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %9, align 4
  %70 = load i32, i32* @x.61
  %71 = load i32, i32* @y.62
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %142

; <label>:78:                                     ; preds = %66
  invoke void @__cxa_end_catch()
          to label %90 unwind label %138

; <label>:79:                                     ; preds = %44
  %80 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %81 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %82 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %83 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %82) #3
  invoke void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"* %80, %"struct.Graph::Node"* %81, %"class.std::allocator.15"* dereferenceable(1) %83)
          to label %84 unwind label %57

; <label>:84:                                     ; preds = %79
  br label %85

; <label>:85:                                     ; preds = %84, %56
  %86 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %87 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %88 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %86, %"struct.Graph::Node"* %87, i64 %88)
          to label %89 unwind label %57

; <label>:89:                                     ; preds = %85
  invoke void @__cxa_rethrow() #13
          to label %141 unwind label %57

; <label>:90:                                     ; preds = %78
  br label %133

; <label>:91:                                     ; preds = %37
  %92 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %93, i32 0, i32 0
  %95 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %94, align 8
  %96 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %97 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %97, i32 0, i32 1
  %99 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %98, align 8
  %100 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %101 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %100) #3
  call void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"* %95, %"struct.Graph::Node"* %99, %"class.std::allocator.15"* dereferenceable(1) %101)
  %102 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %103 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %104, i32 0, i32 0
  %106 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %105, align 8
  %107 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %108 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %108, i32 0, i32 2
  %110 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %109, align 8
  %111 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %112, i32 0, i32 0
  %114 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %113, align 8
  %115 = ptrtoint %"struct.Graph::Node"* %110 to i64
  %116 = ptrtoint %"struct.Graph::Node"* %114 to i64
  %117 = sub i64 %115, %116
  %118 = sdiv exact i64 %117, 32
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %102, %"struct.Graph::Node"* %106, i64 %118)
  %119 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %120 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %121, i32 0, i32 0
  store %"struct.Graph::Node"* %119, %"struct.Graph::Node"** %122, align 8
  %123 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %124 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %125, i32 0, i32 1
  store %"struct.Graph::Node"* %123, %"struct.Graph::Node"** %126, align 8
  %127 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %128 = load i64, i64* %5, align 8
  %129 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %127, i64 %128
  %130 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %131 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %131, i32 0, i32 2
  store %"struct.Graph::Node"* %129, %"struct.Graph::Node"** %132, align 8
  ret void

; <label>:133:                                    ; preds = %90
  %134 = load i8*, i8** %8, align 8
  %135 = load i32, i32* %9, align 4
  %136 = insertvalue { i8*, i32 } undef, i8* %134, 0
  %137 = insertvalue { i8*, i32 } %136, i32 %135, 1
  resume { i8*, i32 } %137

; <label>:138:                                    ; preds = %78
  %139 = landingpad { i8*, i32 }
          catch i8* null
  %140 = extractvalue { i8*, i32 } %139, 0
  call void @__clang_call_terminate(i8* %140) #10
  unreachable

; <label>:141:                                    ; preds = %89
  unreachable

; <label>:142:                                    ; preds = %66, %57
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  store i8* %144, i8** %8, align 8
  %145 = extractvalue { i8*, i32 } %143, 1
  store i32 %145, i32* %9, align 4
  br label %66
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %9 = bitcast %"struct.Graph::Node"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::Node"*
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %12 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %11) #3
  call void @_ZN5Graph4NodeC2EOS0_(%"struct.Graph::Node"* %10, %"struct.Graph::Node"* dereferenceable(32) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4NodeC2EOS0_(%"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %6 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %8 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  %10 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 1
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %12 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %11, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2EOS3_(%"class.std::vector.18"* %10, %"class.std::vector.18"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2EOS3_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5Graph4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.18"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.18"* %8 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.19"* %6, %"struct.std::_Vector_base.19"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5Graph4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store %"struct.std::_Vector_base.19"* %1, %"struct.std::_Vector_base.19"** %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %6, %"class.std::allocator.20"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  ret %"class.std::allocator.20"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.75
  %3 = load i32, i32* @y.76
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %11, align 8
  %12 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %13 to %"class.std::allocator.20"*
  %15 = load i32, i32* @x.75
  %16 = load i32, i32* @y.76
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"class.std::allocator.20"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %25, align 8
  %26 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %27 to %"class.std::allocator.20"*
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5 to %"class.std::allocator.20"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %6, %"class.std::allocator.20"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8) %6, %"struct.Graph::Edge"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8) %9, %"struct.Graph::Edge"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8) %12, %"struct.Graph::Edge"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %1, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8), %"struct.Graph::Edge"** dereferenceable(8)) #5 comdat {
  %3 = load i32, i32* @x.83
  %4 = load i32, i32* @y.84
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %34

; <label>:11:                                     ; preds = %2, %34
  %12 = alloca %"struct.Graph::Edge"**, align 8
  %13 = alloca %"struct.Graph::Edge"**, align 8
  %14 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"** %0, %"struct.Graph::Edge"*** %12, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %13, align 8
  %15 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %12, align 8
  %16 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %15) #3
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %16, align 8
  store %"struct.Graph::Edge"* %17, %"struct.Graph::Edge"** %14, align 8
  %18 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %13, align 8
  %19 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %18) #3
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %12, align 8
  store %"struct.Graph::Edge"* %20, %"struct.Graph::Edge"** %21, align 8
  %22 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %14) #3
  %23 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %24 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %13, align 8
  store %"struct.Graph::Edge"* %23, %"struct.Graph::Edge"** %24, align 8
  %25 = load i32, i32* @x.83
  %26 = load i32, i32* @y.84
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %34

; <label>:33:                                     ; preds = %11
  ret void

; <label>:34:                                     ; preds = %11, %2
  %35 = alloca %"struct.Graph::Edge"**, align 8
  %36 = alloca %"struct.Graph::Edge"**, align 8
  %37 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"** %0, %"struct.Graph::Edge"*** %35, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %36, align 8
  %38 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %35, align 8
  %39 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %38) #3
  %40 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %39, align 8
  store %"struct.Graph::Edge"* %40, %"struct.Graph::Edge"** %37, align 8
  %41 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %36, align 8
  %42 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %41) #3
  %43 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %42, align 8
  %44 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %35, align 8
  store %"struct.Graph::Edge"* %43, %"struct.Graph::Edge"** %44, align 8
  %45 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %37) #3
  %46 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %45, align 8
  %47 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %36, align 8
  store %"struct.Graph::Edge"* %46, %"struct.Graph::Edge"** %47, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8)) #5 comdat {
  %2 = load i32, i32* @x.85
  %3 = load i32, i32* @y.86
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"struct.Graph::Edge"**, align 8
  store %"struct.Graph::Edge"** %0, %"struct.Graph::Edge"*** %11, align 8
  %12 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %11, align 8
  %13 = load i32, i32* @x.85
  %14 = load i32, i32* @y.86
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret %"struct.Graph::Edge"** %12

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"struct.Graph::Edge"**, align 8
  store %"struct.Graph::Edge"** %0, %"struct.Graph::Edge"*** %23, align 8
  %24 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.13"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.13"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.13"*, %"class.std::vector.13"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %9) #3
  %11 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %9) #3
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #13
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %9) #3
  %19 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %9) #3
  store i64 %19, i64* %8, align 8
  %20 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %9) #3
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %30, label %26

; <label>:26:                                     ; preds = %17
  %27 = load i64, i64* %7, align 8
  %28 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %9) #3
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %32

; <label>:30:                                     ; preds = %26, %17
  %31 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %9) #3
  br label %52

; <label>:32:                                     ; preds = %26
  %33 = load i32, i32* @x.87
  %34 = load i32, i32* @y.88
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %54

; <label>:41:                                     ; preds = %32, %54
  %42 = load i64, i64* %7, align 8
  %43 = load i32, i32* @x.87
  %44 = load i32, i32* @y.88
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %54

; <label>:51:                                     ; preds = %41
  br label %52

; <label>:52:                                     ; preds = %51, %30
  %53 = phi i64 [ %31, %30 ], [ %42, %51 ]
  ret i64 %53

; <label>:54:                                     ; preds = %41, %32
  %55 = load i64, i64* %7, align 8
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.14"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.89
  %4 = load i32, i32* @y.90
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %70

; <label>:11:                                     ; preds = %2, %70
  %12 = alloca %"struct.std::_Vector_base.14"*, align 8
  %13 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %12, align 8
  store i64 %1, i64* %13, align 8
  %14 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %12, align 8
  %15 = load i64, i64* %13, align 8
  %16 = icmp ne i64 %15, 0
  %17 = load i32, i32* @x.89
  %18 = load i32, i32* @y.90
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %70

; <label>:25:                                     ; preds = %11
  br i1 %16, label %26, label %49

; <label>:26:                                     ; preds = %25
  %27 = load i32, i32* @x.89
  %28 = load i32, i32* @y.90
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %76

; <label>:35:                                     ; preds = %26, %76
  %36 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %14, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %36 to %"class.std::allocator.15"*
  %38 = load i64, i64* %13, align 8
  %39 = call %"struct.Graph::Node"* @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1) %37, i64 %38)
  %40 = load i32, i32* @x.89
  %41 = load i32, i32* @y.90
  %42 = sub i32 %40, 1
  %43 = mul i32 %40, %42
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %41, 10
  %47 = or i1 %45, %46
  br i1 %47, label %48, label %76

; <label>:48:                                     ; preds = %35
  br label %68

; <label>:49:                                     ; preds = %25
  %50 = load i32, i32* @x.89
  %51 = load i32, i32* @y.90
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %58, label %81

; <label>:58:                                     ; preds = %49, %81
  %59 = load i32, i32* @x.89
  %60 = load i32, i32* @y.90
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %81

; <label>:67:                                     ; preds = %58
  br label %68

; <label>:68:                                     ; preds = %67, %48
  %69 = phi %"struct.Graph::Node"* [ %39, %48 ], [ null, %67 ]
  ret %"struct.Graph::Node"* %69

; <label>:70:                                     ; preds = %11, %2
  %71 = alloca %"struct.std::_Vector_base.14"*, align 8
  %72 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %71, align 8
  store i64 %1, i64* %72, align 8
  %73 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %71, align 8
  %74 = load i64, i64* %72, align 8
  %75 = icmp ne i64 %74, 0
  br label %11

; <label>:76:                                     ; preds = %35, %26
  %77 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %14, i32 0, i32 0
  %78 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %77 to %"class.std::allocator.15"*
  %79 = load i64, i64* %13, align 8
  %80 = call %"struct.Graph::Node"* @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1) %78, i64 %79)
  br label %35

; <label>:81:                                     ; preds = %58, %49
  br label %58
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.91
  %3 = load i32, i32* @y.92
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %34

; <label>:10:                                     ; preds = %1, %34
  %11 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %11, align 8
  %12 = load %"class.std::vector.13"*, %"class.std::vector.13"** %11, align 8
  %13 = bitcast %"class.std::vector.13"* %12 to %"struct.std::_Vector_base.14"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %13, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %14, i32 0, i32 1
  %16 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %15, align 8
  %17 = bitcast %"class.std::vector.13"* %12 to %"struct.std::_Vector_base.14"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %18, i32 0, i32 0
  %20 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %19, align 8
  %21 = ptrtoint %"struct.Graph::Node"* %16 to i64
  %22 = ptrtoint %"struct.Graph::Node"* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 32
  %25 = load i32, i32* @x.91
  %26 = load i32, i32* @y.92
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %34

; <label>:33:                                     ; preds = %10
  ret i64 %24

; <label>:34:                                     ; preds = %10, %1
  %35 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %35, align 8
  %36 = load %"class.std::vector.13"*, %"class.std::vector.13"** %35, align 8
  %37 = bitcast %"class.std::vector.13"* %36 to %"struct.std::_Vector_base.14"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %39, align 8
  %41 = bitcast %"class.std::vector.13"* %36 to %"struct.std::_Vector_base.14"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %42, i32 0, i32 0
  %44 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %43, align 8
  %45 = ptrtoint %"struct.Graph::Node"* %40 to i64
  %46 = ptrtoint %"struct.Graph::Node"* %44 to i64
  %47 = shl i64 %45, %46
  %48 = shl i64 %45, %46
  %49 = sub i64 %45, %46
  %50 = sub i64 0, %49
  %51 = add i64 %50, 32
  %52 = sub i64 %49, 32
  %53 = mul i64 %52, 32
  %54 = shl i64 %49, 32
  %55 = shl i64 %49, 32
  %56 = sdiv exact i64 %49, 32
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4NodeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.93
  %6 = load i32, i32* @y.94
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %42

; <label>:13:                                     ; preds = %4, %42
  %14 = alloca %"struct.Graph::Node"*, align 8
  %15 = alloca %"struct.Graph::Node"*, align 8
  %16 = alloca %"struct.Graph::Node"*, align 8
  %17 = alloca %"class.std::allocator.15"*, align 8
  %18 = alloca %"class.std::move_iterator", align 8
  %19 = alloca %"class.std::move_iterator", align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %14, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %15, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %16, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %17, align 8
  %20 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %14, align 8
  %21 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %20)
  %22 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %18, i32 0, i32 0
  store %"struct.Graph::Node"* %21, %"struct.Graph::Node"** %22, align 8
  %23 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %15, align 8
  %24 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %23)
  %25 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %19, i32 0, i32 0
  store %"struct.Graph::Node"* %24, %"struct.Graph::Node"** %25, align 8
  %26 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %16, align 8
  %27 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %17, align 8
  %28 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %18, i32 0, i32 0
  %29 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %19, i32 0, i32 0
  %31 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %30, align 8
  %32 = call %"struct.Graph::Node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Node"* %29, %"struct.Graph::Node"* %31, %"struct.Graph::Node"* %26, %"class.std::allocator.15"* dereferenceable(1) %27)
  %33 = load i32, i32* @x.93
  %34 = load i32, i32* @y.94
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %13
  ret %"struct.Graph::Node"* %32

; <label>:42:                                     ; preds = %13, %4
  %43 = alloca %"struct.Graph::Node"*, align 8
  %44 = alloca %"struct.Graph::Node"*, align 8
  %45 = alloca %"struct.Graph::Node"*, align 8
  %46 = alloca %"class.std::allocator.15"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %43, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %44, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %45, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %46, align 8
  %49 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %43, align 8
  %50 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %49)
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  store %"struct.Graph::Node"* %50, %"struct.Graph::Node"** %51, align 8
  %52 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %44, align 8
  %53 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %52)
  %54 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  store %"struct.Graph::Node"* %53, %"struct.Graph::Node"** %54, align 8
  %55 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %45, align 8
  %56 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %46, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %58 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %60 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %59, align 8
  %61 = call %"struct.Graph::Node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Node"* %58, %"struct.Graph::Node"* %60, %"struct.Graph::Node"* %55, %"class.std::allocator.15"* dereferenceable(1) %56)
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1), %"struct.Graph::Node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"* %6, %"struct.Graph::Node"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Graph::Node"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca %"class.std::allocator.15"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %6, align 8
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  call void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"* %7, %"struct.Graph::Node"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"*, %"struct.Graph::Node"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.14"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %4, align 8
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %9 = icmp ne %"struct.Graph::Node"* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %11 to %"class.std::allocator.15"*
  %13 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1) %12, %"struct.Graph::Node"* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %5 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %15

; <label>:13:                                     ; preds = %2
  %14 = load i64*, i64** %4, align 8
  store i64* %14, i64** %3, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %11
  %16 = load i64*, i64** %3, align 8
  ret i64* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret i64 576460752303423487
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.113
  %4 = load i32, i32* @y.114
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %27

; <label>:11:                                     ; preds = %2, %27
  %12 = alloca %"class.std::allocator.15"*, align 8
  %13 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %12, align 8
  store i64 %1, i64* %13, align 8
  %14 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %12, align 8
  %15 = bitcast %"class.std::allocator.15"* %14 to %"class.__gnu_cxx::new_allocator.16"*
  %16 = load i64, i64* %13, align 8
  %17 = call %"struct.Graph::Node"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %15, i64 %16, i8* null)
  %18 = load i32, i32* @x.113
  %19 = load i32, i32* @y.114
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %11
  ret %"struct.Graph::Node"* %17

; <label>:27:                                     ; preds = %11, %2
  %28 = alloca %"class.std::allocator.15"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %28, align 8
  %31 = bitcast %"class.std::allocator.15"* %30 to %"class.__gnu_cxx::new_allocator.16"*
  %32 = load i64, i64* %29, align 8
  %33 = call %"struct.Graph::Node"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %31, i64 %32, i8* null)
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %7) #3
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %30

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* @x.115
  %13 = load i32, i32* @y.116
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %35

; <label>:20:                                     ; preds = %11, %35
  call void @_ZSt17__throw_bad_allocv() #13
  %21 = load i32, i32* @x.115
  %22 = load i32, i32* @y.116
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %35

; <label>:29:                                     ; preds = %20
  unreachable

; <label>:30:                                     ; preds = %3
  %31 = load i64, i64* %5, align 8
  %32 = mul i64 %31, 32
  %33 = call i8* @_Znwm(i64 %32)
  %34 = bitcast i8* %33 to %"struct.Graph::Node"*
  ret %"struct.Graph::Node"* %34

; <label>:35:                                     ; preds = %20, %11
  call void @_ZSt17__throw_bad_allocv() #13
  br label %20
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %12, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %20, align 8
  %22 = call %"struct.Graph::Node"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4NodeEES3_ET0_T_S6_S5_(%"struct.Graph::Node"* %19, %"struct.Graph::Node"* %21, %"struct.Graph::Node"* %17)
  ret %"struct.Graph::Node"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  %4 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4NodeEEC2ES2_(%"class.std::move_iterator"* %2, %"struct.Graph::Node"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  ret %"struct.Graph::Node"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4NodeEES3_ET0_T_S6_S5_(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %11, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %19, align 8
  %21 = call %"struct.Graph::Node"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_(%"struct.Graph::Node"* %18, %"struct.Graph::Node"* %20, %"struct.Graph::Node"* %16)
  ret %"struct.Graph::Node"* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %11, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %6, align 8
  %12 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  store %"struct.Graph::Node"* %12, %"struct.Graph::Node"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %96, %3
  %14 = invoke zeroext i1 @_ZStneIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %99

; <label>:15:                                     ; preds = %13
  %16 = load i32, i32* @x.123
  %17 = load i32, i32* @y.124
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %216

; <label>:24:                                     ; preds = %15, %216
  %25 = load i32, i32* @x.123
  %26 = load i32, i32* @y.124
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %216

; <label>:33:                                     ; preds = %24
  br i1 %14, label %34, label %163

; <label>:34:                                     ; preds = %33
  %35 = load i32, i32* @x.123
  %36 = load i32, i32* @y.124
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %217

; <label>:43:                                     ; preds = %34, %217
  %44 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %45 = call %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32) %44) #3
  %46 = load i32, i32* @x.123
  %47 = load i32, i32* @y.124
  %48 = sub i32 %46, 1
  %49 = mul i32 %46, %48
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %217

; <label>:54:                                     ; preds = %43
  %55 = invoke dereferenceable(32) %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEEdeEv(%"class.std::move_iterator"* %4)
          to label %56 unwind label %99

; <label>:56:                                     ; preds = %54
  %57 = load i32, i32* @x.123
  %58 = load i32, i32* @y.124
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %220

; <label>:65:                                     ; preds = %56, %220
  %66 = load i32, i32* @x.123
  %67 = load i32, i32* @y.124
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %74, label %220

; <label>:74:                                     ; preds = %65
  invoke void @_ZSt10_ConstructIN5Graph4NodeEJS1_EEvPT_DpOT0_(%"struct.Graph::Node"* %45, %"struct.Graph::Node"* dereferenceable(32) %55)
          to label %75 unwind label %99

; <label>:75:                                     ; preds = %74
  %76 = load i32, i32* @x.123
  %77 = load i32, i32* @y.124
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %84, label %221

; <label>:84:                                     ; preds = %75, %221
  %85 = load i32, i32* @x.123
  %86 = load i32, i32* @y.124
  %87 = sub i32 %85, 1
  %88 = mul i32 %85, %87
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %90, %91
  br i1 %92, label %93, label %221

; <label>:93:                                     ; preds = %84
  br label %94

; <label>:94:                                     ; preds = %93
  %95 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN5Graph4NodeEEppEv(%"class.std::move_iterator"* %4)
          to label %96 unwind label %99

; <label>:96:                                     ; preds = %94
  %97 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %98 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %97, i32 1
  store %"struct.Graph::Node"* %98, %"struct.Graph::Node"** %7, align 8
  br label %13

; <label>:99:                                     ; preds = %94, %74, %54, %13
  %100 = load i32, i32* @x.123
  %101 = load i32, i32* @y.124
  %102 = sub i32 %100, 1
  %103 = mul i32 %100, %102
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %105, %106
  br i1 %107, label %108, label %222

; <label>:108:                                    ; preds = %99, %222
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %8, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %9, align 4
  %112 = load i32, i32* @x.123
  %113 = load i32, i32* @y.124
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %120, label %222

; <label>:120:                                    ; preds = %108
  br label %121

; <label>:121:                                    ; preds = %120
  %122 = load i32, i32* @x.123
  %123 = load i32, i32* @y.124
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %130, label %226

; <label>:130:                                    ; preds = %121, %226
  %131 = load i8*, i8** %8, align 8
  %132 = call i8* @__cxa_begin_catch(i8* %131) #3
  %133 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %134 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %135 = load i32, i32* @x.123
  %136 = load i32, i32* @y.124
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %143, label %226

; <label>:143:                                    ; preds = %130
  invoke void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"* %133, %"struct.Graph::Node"* %134)
          to label %144 unwind label %165

; <label>:144:                                    ; preds = %143
  %145 = load i32, i32* @x.123
  %146 = load i32, i32* @y.124
  %147 = sub i32 %145, 1
  %148 = mul i32 %145, %147
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %146, 10
  %152 = or i1 %150, %151
  br i1 %152, label %153, label %231

; <label>:153:                                    ; preds = %144, %231
  %154 = load i32, i32* @x.123
  %155 = load i32, i32* @y.124
  %156 = sub i32 %154, 1
  %157 = mul i32 %154, %156
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %155, 10
  %161 = or i1 %159, %160
  br i1 %161, label %162, label %231

; <label>:162:                                    ; preds = %153
  invoke void @__cxa_rethrow() #13
          to label %215 unwind label %165

; <label>:163:                                    ; preds = %33
  %164 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  ret %"struct.Graph::Node"* %164

; <label>:165:                                    ; preds = %162, %143
  %166 = load i32, i32* @x.123
  %167 = load i32, i32* @y.124
  %168 = sub i32 %166, 1
  %169 = mul i32 %166, %168
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %171, %172
  br i1 %173, label %174, label %232

; <label>:174:                                    ; preds = %165, %232
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %8, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %9, align 4
  %178 = load i32, i32* @x.123
  %179 = load i32, i32* @y.124
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %186, label %232

; <label>:186:                                    ; preds = %174
  invoke void @__cxa_end_catch()
          to label %187 unwind label %212

; <label>:187:                                    ; preds = %186
  br label %189
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:189:                                    ; preds = %187
  %190 = load i32, i32* @x.123
  %191 = load i32, i32* @y.124
  %192 = sub i32 %190, 1
  %193 = mul i32 %190, %192
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %195, %196
  br i1 %197, label %198, label %236

; <label>:198:                                    ; preds = %189, %236
  %199 = load i8*, i8** %8, align 8
  %200 = load i32, i32* %9, align 4
  %201 = insertvalue { i8*, i32 } undef, i8* %199, 0
  %202 = insertvalue { i8*, i32 } %201, i32 %200, 1
  %203 = load i32, i32* @x.123
  %204 = load i32, i32* @y.124
  %205 = sub i32 %203, 1
  %206 = mul i32 %203, %205
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %208, %209
  br i1 %210, label %211, label %236

; <label>:211:                                    ; preds = %198
  resume { i8*, i32 } %202

; <label>:212:                                    ; preds = %186
  %213 = landingpad { i8*, i32 }
          catch i8* null
  %214 = extractvalue { i8*, i32 } %213, 0
  call void @__clang_call_terminate(i8* %214) #10
  unreachable

; <label>:215:                                    ; preds = %162
  unreachable

; <label>:216:                                    ; preds = %24, %15
  br label %24

; <label>:217:                                    ; preds = %43, %34
  %218 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %219 = call %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32) %218) #3
  br label %43

; <label>:220:                                    ; preds = %65, %56
  br label %65

; <label>:221:                                    ; preds = %84, %75
  br label %84

; <label>:222:                                    ; preds = %108, %99
  %223 = landingpad { i8*, i32 }
          catch i8* null
  %224 = extractvalue { i8*, i32 } %223, 0
  store i8* %224, i8** %8, align 8
  %225 = extractvalue { i8*, i32 } %223, 1
  store i32 %225, i32* %9, align 4
  br label %108

; <label>:226:                                    ; preds = %130, %121
  %227 = load i8*, i8** %8, align 8
  %228 = call i8* @__cxa_begin_catch(i8* %227) #3
  %229 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %230 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  br label %130

; <label>:231:                                    ; preds = %153, %144
  br label %153

; <label>:232:                                    ; preds = %174, %165
  %233 = landingpad { i8*, i32 }
          cleanup
  %234 = extractvalue { i8*, i32 } %233, 0
  store i8* %234, i8** %8, align 8
  %235 = extractvalue { i8*, i32 } %233, 1
  store i32 %235, i32* %9, align 4
  br label %174

; <label>:236:                                    ; preds = %198, %189
  %237 = load i8*, i8** %8, align 8
  %238 = load i32, i32* %9, align 4
  %239 = insertvalue { i8*, i32 } undef, i8* %237, 0
  %240 = insertvalue { i8*, i32 } %239, i32 %238, 1
  br label %198
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = load i32, i32* @x.125
  %4 = load i32, i32* @y.126
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %27

; <label>:11:                                     ; preds = %2, %27
  %12 = alloca %"class.std::move_iterator"*, align 8
  %13 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %12, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %13, align 8
  %14 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %12, align 8
  %15 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %13, align 8
  %16 = call zeroext i1 @_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %14, %"class.std::move_iterator"* dereferenceable(8) %15)
  %17 = xor i1 %16, true
  %18 = load i32, i32* @x.125
  %19 = load i32, i32* @y.126
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %11
  ret i1 %17

; <label>:27:                                     ; preds = %11, %2
  %28 = alloca %"class.std::move_iterator"*, align 8
  %29 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %29, align 8
  %30 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %31 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %29, align 8
  %32 = call zeroext i1 @_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %30, %"class.std::move_iterator"* dereferenceable(8) %31)
  %33 = sub i1 false, %32
  %34 = add i1 %33, true
  %35 = shl i1 %32, true
  %36 = sub i1 %32, true
  %37 = mul i1 %36, true
  %38 = shl i1 %32, true
  %39 = shl i1 %32, true
  %40 = sub i1 false, %32
  %41 = add i1 %40, true
  %42 = xor i1 %32, true
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph4NodeEJS1_EEvPT_DpOT0_(%"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %6 = bitcast %"struct.Graph::Node"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph::Node"*
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %9 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %8) #3
  call void @_ZN5Graph4NodeC2EOS0_(%"struct.Graph::Node"* %7, %"struct.Graph::Node"* dereferenceable(32) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  %4 = bitcast %"struct.Graph::Node"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.Graph::Node"*
  ret %"struct.Graph::Node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  ret %"struct.Graph::Node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN5Graph4NodeEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 1
  store %"struct.Graph::Node"* %6, %"struct.Graph::Node"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat {
  %3 = load i32, i32* @x.135
  %4 = load i32, i32* @y.136
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %25

; <label>:11:                                     ; preds = %2, %25
  %12 = alloca %"struct.Graph::Node"*, align 8
  %13 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %12, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %13, align 8
  %14 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %12, align 8
  %15 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %13, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_(%"struct.Graph::Node"* %14, %"struct.Graph::Node"* %15)
  %16 = load i32, i32* @x.135
  %17 = load i32, i32* @y.136
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %11
  ret void

; <label>:25:                                     ; preds = %11, %2
  %26 = alloca %"struct.Graph::Node"*, align 8
  %27 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %26, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %27, align 8
  %28 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %26, align 8
  %29 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %27, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_(%"struct.Graph::Node"* %28, %"struct.Graph::Node"* %29)
  br label %11
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"struct.Graph::Node"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  ret %"struct.Graph::Node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_(%"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %30, %2
  %6 = load i32, i32* @x.141
  %7 = load i32, i32* @y.142
  %8 = sub i32 %6, 1
  %9 = mul i32 %6, %8
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %52

; <label>:14:                                     ; preds = %5, %52
  %15 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %16 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %17 = icmp ne %"struct.Graph::Node"* %15, %16
  %18 = load i32, i32* @x.141
  %19 = load i32, i32* @y.142
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %52

; <label>:26:                                     ; preds = %14
  br i1 %17, label %27, label %33

; <label>:27:                                     ; preds = %26
  %28 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %29 = call %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32) %28) #3
  call void @_ZSt8_DestroyIN5Graph4NodeEEvPT_(%"struct.Graph::Node"* %29)
  br label %30

; <label>:30:                                     ; preds = %27
  %31 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %32 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %31, i32 1
  store %"struct.Graph::Node"* %32, %"struct.Graph::Node"** %3, align 8
  br label %5

; <label>:33:                                     ; preds = %26
  %34 = load i32, i32* @x.141
  %35 = load i32, i32* @y.142
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %56

; <label>:42:                                     ; preds = %33, %56
  %43 = load i32, i32* @x.141
  %44 = load i32, i32* @y.142
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %56

; <label>:51:                                     ; preds = %42
  ret void

; <label>:52:                                     ; preds = %14, %5
  %53 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %54 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %55 = icmp ne %"struct.Graph::Node"* %53, %54
  br label %14

; <label>:56:                                     ; preds = %42, %33
  br label %42
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyIN5Graph4NodeEEvPT_(%"struct.Graph::Node"*) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph4NodeEEC2ES2_(%"class.std::move_iterator"*, %"struct.Graph::Node"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  store %"struct.Graph::Node"* %7, %"struct.Graph::Node"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.Graph::Node"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  %6 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1), %"struct.Graph::Node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"* %8, %"struct.Graph::Node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.Graph::Node"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %9 = bitcast %"struct.Graph::Node"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.19"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %3 to %"class.std::allocator.20"*
  call void @_ZNSaIN5Graph4EdgeEEC2Ev(%"class.std::allocator.20"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4EdgeEEC2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.163
  %3 = load i32, i32* @y.164
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %79

; <label>:10:                                     ; preds = %1, %79
  %11 = alloca %"class.std::vector.18"*, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %11, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %11, align 8
  %15 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %16, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  %19 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %23 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  %24 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %23) #3
  %25 = load i32, i32* @x.163
  %26 = load i32, i32* @y.164
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %79

; <label>:33:                                     ; preds = %10
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %18, %"struct.Graph::Edge"* %22, %"class.std::allocator.20"* dereferenceable(1) %24)
          to label %34 unwind label %36

; <label>:34:                                     ; preds = %33
  %35 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %35) #3
  ret void

; <label>:36:                                     ; preds = %33
  %37 = load i32, i32* @x.163
  %38 = load i32, i32* @y.164
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %94

; <label>:45:                                     ; preds = %36, %94
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %12, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %13, align 4
  %49 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %49) #3
  %50 = load i32, i32* @x.163
  %51 = load i32, i32* @y.164
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %58, label %94

; <label>:58:                                     ; preds = %45
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.163
  %61 = load i32, i32* @y.164
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %99

; <label>:68:                                     ; preds = %59, %99
  %69 = load i8*, i8** %12, align 8
  call void @__clang_call_terminate(i8* %69) #10
  %70 = load i32, i32* @x.163
  %71 = load i32, i32* @y.164
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %99

; <label>:78:                                     ; preds = %68
  unreachable

; <label>:79:                                     ; preds = %10, %1
  %80 = alloca %"class.std::vector.18"*, align 8
  %81 = alloca i8*
  %82 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %80, align 8
  %83 = load %"class.std::vector.18"*, %"class.std::vector.18"** %80, align 8
  %84 = bitcast %"class.std::vector.18"* %83 to %"struct.std::_Vector_base.19"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %85, i32 0, i32 0
  %87 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %86, align 8
  %88 = bitcast %"class.std::vector.18"* %83 to %"struct.std::_Vector_base.19"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %89, i32 0, i32 1
  %91 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %90, align 8
  %92 = bitcast %"class.std::vector.18"* %83 to %"struct.std::_Vector_base.19"*
  %93 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %92) #3
  br label %10

; <label>:94:                                     ; preds = %45, %36
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %12, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %13, align 4
  %98 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %98) #3
  br label %45

; <label>:99:                                     ; preds = %68, %59
  %100 = load i8*, i8** %12, align 8
  call void @__clang_call_terminate(i8* %100) #10
  br label %68
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = load i32, i32* @x.165
  %5 = load i32, i32* @y.166
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %27

; <label>:12:                                     ; preds = %3, %27
  %13 = alloca %"struct.Graph::Edge"*, align 8
  %14 = alloca %"struct.Graph::Edge"*, align 8
  %15 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %13, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %14, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %15, align 8
  %16 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %14, align 8
  call void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %16, %"struct.Graph::Edge"* %17)
  %18 = load i32, i32* @x.165
  %19 = load i32, i32* @y.166
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %12
  ret void

; <label>:27:                                     ; preds = %12, %3
  %28 = alloca %"struct.Graph::Edge"*, align 8
  %29 = alloca %"struct.Graph::Edge"*, align 8
  %30 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %28, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %29, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %30, align 8
  %31 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %28, align 8
  %32 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %29, align 8
  call void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %31, %"struct.Graph::Edge"* %32)
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %15 = ptrtoint %"struct.Graph::Edge"* %11 to i64
  %16 = ptrtoint %"struct.Graph::Edge"* %14 to i64
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 16
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %5, %"struct.Graph::Edge"* %8, i64 %18)
          to label %19 unwind label %21

; <label>:19:                                     ; preds = %1
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %20) #3
  ret void

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.167
  %23 = load i32, i32* @y.168
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %30, label %46

; <label>:30:                                     ; preds = %21, %46
  %31 = landingpad { i8*, i32 }
          catch i8* null
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %3, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %4, align 4
  %34 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %34) #3
  %35 = load i32, i32* @x.167
  %36 = load i32, i32* @y.168
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %46

; <label>:43:                                     ; preds = %30
  br label %44

; <label>:44:                                     ; preds = %43
  %45 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %45) #10
  unreachable

; <label>:46:                                     ; preds = %30, %21
  %47 = landingpad { i8*, i32 }
          catch i8* null
  %48 = extractvalue { i8*, i32 } %47, 0
  store i8* %48, i8** %3, align 8
  %49 = extractvalue { i8*, i32 } %47, 1
  store i32 %49, i32* %4, align 4
  %50 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %50) #3
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4EdgeEEEvT_S5_(%"struct.Graph::Edge"* %5, %"struct.Graph::Edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4EdgeEEEvT_S5_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"*, %"struct.Graph::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %9 = icmp ne %"struct.Graph::Edge"* %8, null
  br i1 %9, label %10, label %33

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.173
  %12 = load i32, i32* @y.174
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %52

; <label>:19:                                     ; preds = %10, %52
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %7, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %20 to %"class.std::allocator.20"*
  %22 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %23 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.20"* dereferenceable(1) %21, %"struct.Graph::Edge"* %22, i64 %23)
  %24 = load i32, i32* @x.173
  %25 = load i32, i32* @y.174
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %52

; <label>:32:                                     ; preds = %19
  br label %33

; <label>:33:                                     ; preds = %32, %3
  %34 = load i32, i32* @x.173
  %35 = load i32, i32* @y.174
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %57

; <label>:42:                                     ; preds = %33, %57
  %43 = load i32, i32* @x.173
  %44 = load i32, i32* @y.174
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %57

; <label>:51:                                     ; preds = %42
  ret void

; <label>:52:                                     ; preds = %19, %10
  %53 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %7, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %53 to %"class.std::allocator.20"*
  %55 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %56 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.20"* dereferenceable(1) %54, %"struct.Graph::Edge"* %55, i64 %56)
  br label %19

; <label>:57:                                     ; preds = %42, %33
  br label %42
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.175
  %3 = load i32, i32* @y.176
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %1, %23
  %11 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %11, align 8
  %12 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %11, align 8
  %13 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %12 to %"class.std::allocator.20"*
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %13) #3
  %14 = load i32, i32* @x.175
  %15 = load i32, i32* @y.176
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %10
  ret void

; <label>:23:                                     ; preds = %10, %1
  %24 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %24, align 8
  %25 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %24, align 8
  %26 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %25 to %"class.std::allocator.20"*
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %26) #3
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.20"* dereferenceable(1), %"struct.Graph::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.21"* %8, %"struct.Graph::Edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Graph::Edge"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %9 = bitcast %"struct.Graph::Edge"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.183
  %3 = load i32, i32* @y.184
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %64

; <label>:10:                                     ; preds = %1, %64
  %11 = alloca %"struct.std::_Vector_base.14"*, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %11, align 8
  %14 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %11, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %14, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %18, i32 0, i32 2
  %20 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %14, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %22, align 8
  %24 = ptrtoint %"struct.Graph::Node"* %20 to i64
  %25 = ptrtoint %"struct.Graph::Node"* %23 to i64
  %26 = sub i64 %24, %25
  %27 = sdiv exact i64 %26, 32
  %28 = load i32, i32* @x.183
  %29 = load i32, i32* @y.184
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %64

; <label>:36:                                     ; preds = %10
  invoke void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %14, %"struct.Graph::Node"* %17, i64 %27)
          to label %37 unwind label %57

; <label>:37:                                     ; preds = %36
  %38 = load i32, i32* @x.183
  %39 = load i32, i32* @y.184
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %98

; <label>:46:                                     ; preds = %37, %98
  %47 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %47) #3
  %48 = load i32, i32* @x.183
  %49 = load i32, i32* @y.184
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %56, label %98

; <label>:56:                                     ; preds = %46
  ret void

; <label>:57:                                     ; preds = %36
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %12, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %13, align 4
  %61 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %61) #3
  br label %62

; <label>:62:                                     ; preds = %57
  %63 = load i8*, i8** %12, align 8
  call void @__clang_call_terminate(i8* %63) #10
  unreachable

; <label>:64:                                     ; preds = %10, %1
  %65 = alloca %"struct.std::_Vector_base.14"*, align 8
  %66 = alloca i8*
  %67 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %65, align 8
  %68 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %65, align 8
  %69 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %69, i32 0, i32 0
  %71 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %68, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %72, i32 0, i32 2
  %74 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %68, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %75, i32 0, i32 0
  %77 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %76, align 8
  %78 = ptrtoint %"struct.Graph::Node"* %74 to i64
  %79 = ptrtoint %"struct.Graph::Node"* %77 to i64
  %80 = sub i64 0, %78
  %81 = add i64 %80, %79
  %82 = sub i64 0, %78
  %83 = add i64 %82, %79
  %84 = sub i64 %78, %79
  %85 = sub i64 %84, 32
  %86 = mul i64 %85, 32
  %87 = sub i64 0, %84
  %88 = add i64 %87, 32
  %89 = sub i64 %84, 32
  %90 = mul i64 %89, 32
  %91 = sub i64 %84, 32
  %92 = mul i64 %91, 32
  %93 = sub i64 %84, 32
  %94 = mul i64 %93, 32
  %95 = sub i64 0, %84
  %96 = add i64 %95, 32
  %97 = sdiv exact i64 %84, 32
  br label %10

; <label>:98:                                     ; preds = %46, %37
  %99 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %99) #3
  br label %46
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaIN5Graph4NodeEED2Ev(%"class.std::allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4NodeEED2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.187
  %3 = load i32, i32* @y.188
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %1, %23
  %11 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %11, align 8
  %12 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %11, align 8
  %13 = bitcast %"class.std::allocator.15"* %12 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %13) #3
  %14 = load i32, i32* @x.187
  %15 = load i32, i32* @y.188
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %10
  ret void

; <label>:23:                                     ; preds = %10, %1
  %24 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %24, align 8
  %25 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %24, align 8
  %26 = bitcast %"class.std::allocator.15"* %25 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %26) #3
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %9, i64 %10
  ret %"struct.Graph::Node"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %7 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Edge"* dereferenceable(16) %6) #3
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.18"* %5, %"struct.Graph::Edge"* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"*, i64, i64) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.Graph::Edge"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %7, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = load i64, i64* %6, align 8
  %11 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %7, i32 0, i32 1
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.18"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  %10 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %11, i32 0, i32 2
  %13 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %12, align 8
  %14 = icmp ne %"struct.Graph::Edge"* %9, %13
  br i1 %14, label %15, label %30

; <label>:15:                                     ; preds = %2
  %16 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %17 to %"class.std::allocator.20"*
  %19 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %23 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %24 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %23) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %18, %"struct.Graph::Edge"* %22, %"struct.Graph::Edge"* dereferenceable(16) %24)
  %25 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %27, align 8
  %29 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %28, i32 1
  store %"struct.Graph::Edge"* %29, %"struct.Graph::Edge"** %27, align 8
  br label %33

; <label>:30:                                     ; preds = %2
  %31 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %32 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %31) #3
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.18"* %5, %"struct.Graph::Edge"* dereferenceable(16) %32)
  br label %33

; <label>:33:                                     ; preds = %30, %15
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  ret %"struct.Graph::Edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1), %"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 {
  %4 = load i32, i32* @x.201
  %5 = load i32, i32* @y.202
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %30

; <label>:12:                                     ; preds = %3, %30
  %13 = alloca %"class.std::allocator.20"*, align 8
  %14 = alloca %"struct.Graph::Edge"*, align 8
  %15 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %13, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %14, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %15, align 8
  %16 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %13, align 8
  %17 = bitcast %"class.std::allocator.20"* %16 to %"class.__gnu_cxx::new_allocator.21"*
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %14, align 8
  %19 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %15, align 8
  %20 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %19) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %17, %"struct.Graph::Edge"* %18, %"struct.Graph::Edge"* dereferenceable(16) %20)
  %21 = load i32, i32* @x.201
  %22 = load i32, i32* @y.202
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %12
  ret void

; <label>:30:                                     ; preds = %12, %3
  %31 = alloca %"class.std::allocator.20"*, align 8
  %32 = alloca %"struct.Graph::Edge"*, align 8
  %33 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %31, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %32, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %33, align 8
  %34 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %31, align 8
  %35 = bitcast %"class.std::allocator.20"* %34 to %"class.__gnu_cxx::new_allocator.21"*
  %36 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %32, align 8
  %37 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %33, align 8
  %38 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %37) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %35, %"struct.Graph::Edge"* %36, %"struct.Graph::Edge"* dereferenceable(16) %38)
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = load i32, i32* @x.203
  %3 = load i32, i32* @y.204
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %11, align 8
  %12 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %11, align 8
  %13 = load i32, i32* @x.203
  %14 = load i32, i32* @y.204
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret %"struct.Graph::Edge"* %12

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %23, align 8
  %24 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.18"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %12, i64 %13)
  store %"struct.Graph::Edge"* %14, %"struct.Graph::Edge"** %6, align 8
  %15 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  store %"struct.Graph::Edge"* %15, %"struct.Graph::Edge"** %7, align 8
  %16 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %17 to %"class.std::allocator.20"*
  %19 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %10) #3
  %21 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %19, i64 %20
  %22 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %23 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %18, %"struct.Graph::Edge"* %21, %"struct.Graph::Edge"* dereferenceable(16) %23)
          to label %24 unwind label %76

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.205
  %26 = load i32, i32* @y.206
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %286

; <label>:33:                                     ; preds = %24, %286
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %7, align 8
  %34 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %36, align 8
  %38 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %39, i32 0, i32 1
  %41 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %40, align 8
  %42 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %43 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %44 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %43) #3
  %45 = load i32, i32* @x.205
  %46 = load i32, i32* @y.206
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %53, label %286

; <label>:53:                                     ; preds = %33
  %54 = invoke %"struct.Graph::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Edge"* %37, %"struct.Graph::Edge"* %41, %"struct.Graph::Edge"* %42, %"class.std::allocator.20"* dereferenceable(1) %44)
          to label %55 unwind label %76

; <label>:55:                                     ; preds = %53
  %56 = load i32, i32* @x.205
  %57 = load i32, i32* @y.206
  %58 = sub i32 %56, 1
  %59 = mul i32 %56, %58
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %61, %62
  br i1 %63, label %64, label %298

; <label>:64:                                     ; preds = %55, %298
  store %"struct.Graph::Edge"* %54, %"struct.Graph::Edge"** %7, align 8
  %65 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %66 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %65, i32 1
  store %"struct.Graph::Edge"* %66, %"struct.Graph::Edge"** %7, align 8
  %67 = load i32, i32* @x.205
  %68 = load i32, i32* @y.206
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %75, label %298

; <label>:75:                                     ; preds = %64
  br label %217

; <label>:76:                                     ; preds = %53, %2
  %77 = load i32, i32* @x.205
  %78 = load i32, i32* @y.206
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %85, label %301

; <label>:85:                                     ; preds = %76, %301
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %8, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %9, align 4
  %89 = load i32, i32* @x.205
  %90 = load i32, i32* @y.206
  %91 = sub i32 %89, 1
  %92 = mul i32 %89, %91
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %90, 10
  %96 = or i1 %94, %95
  br i1 %96, label %97, label %301

; <label>:97:                                     ; preds = %85
  br label %98

; <label>:98:                                     ; preds = %97
  %99 = load i32, i32* @x.205
  %100 = load i32, i32* @y.206
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %107, label %305

; <label>:107:                                    ; preds = %98, %305
  %108 = load i8*, i8** %8, align 8
  %109 = call i8* @__cxa_begin_catch(i8* %108) #3
  %110 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %111 = icmp ne %"struct.Graph::Edge"* %110, null
  %112 = load i32, i32* @x.205
  %113 = load i32, i32* @y.206
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %120, label %305

; <label>:120:                                    ; preds = %107
  br i1 %111, label %151, label %121

; <label>:121:                                    ; preds = %120
  %122 = load i32, i32* @x.205
  %123 = load i32, i32* @y.206
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %130, label %310

; <label>:130:                                    ; preds = %121, %310
  %131 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %131, i32 0, i32 0
  %133 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %132 to %"class.std::allocator.20"*
  %134 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %135 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %10) #3
  %136 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %134, i64 %135
  %137 = load i32, i32* @x.205
  %138 = load i32, i32* @y.206
  %139 = sub i32 %137, 1
  %140 = mul i32 %137, %139
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %142, %143
  br i1 %144, label %145, label %310

; <label>:145:                                    ; preds = %130
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1) %133, %"struct.Graph::Edge"* %136)
          to label %146 unwind label %147

; <label>:146:                                    ; preds = %145
  br label %175

; <label>:147:                                    ; preds = %197, %196, %173, %145
  %148 = landingpad { i8*, i32 }
          cleanup
  %149 = extractvalue { i8*, i32 } %148, 0
  store i8* %149, i8** %8, align 8
  %150 = extractvalue { i8*, i32 } %148, 1
  store i32 %150, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %198 unwind label %282

; <label>:151:                                    ; preds = %120
  %152 = load i32, i32* @x.205
  %153 = load i32, i32* @y.206
  %154 = sub i32 %152, 1
  %155 = mul i32 %152, %154
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %157, %158
  br i1 %159, label %160, label %317

; <label>:160:                                    ; preds = %151, %317
  %161 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %162 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %163 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %164 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %163) #3
  %165 = load i32, i32* @x.205
  %166 = load i32, i32* @y.206
  %167 = sub i32 %165, 1
  %168 = mul i32 %165, %167
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %166, 10
  %172 = or i1 %170, %171
  br i1 %172, label %173, label %317

; <label>:173:                                    ; preds = %160
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %161, %"struct.Graph::Edge"* %162, %"class.std::allocator.20"* dereferenceable(1) %164)
          to label %174 unwind label %147

; <label>:174:                                    ; preds = %173
  br label %175

; <label>:175:                                    ; preds = %174, %146
  %176 = load i32, i32* @x.205
  %177 = load i32, i32* @y.206
  %178 = sub i32 %176, 1
  %179 = mul i32 %176, %178
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %181, %182
  br i1 %183, label %184, label %322

; <label>:184:                                    ; preds = %175, %322
  %185 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %186 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %187 = load i64, i64* %5, align 8
  %188 = load i32, i32* @x.205
  %189 = load i32, i32* @y.206
  %190 = sub i32 %188, 1
  %191 = mul i32 %188, %190
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %193, %194
  br i1 %195, label %196, label %322

; <label>:196:                                    ; preds = %184
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %185, %"struct.Graph::Edge"* %186, i64 %187)
          to label %197 unwind label %147

; <label>:197:                                    ; preds = %196
  invoke void @__cxa_rethrow() #13
          to label %285 unwind label %147

; <label>:198:                                    ; preds = %147
  %199 = load i32, i32* @x.205
  %200 = load i32, i32* @y.206
  %201 = sub i32 %199, 1
  %202 = mul i32 %199, %201
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %204, %205
  br i1 %206, label %207, label %326

; <label>:207:                                    ; preds = %198, %326
  %208 = load i32, i32* @x.205
  %209 = load i32, i32* @y.206
  %210 = sub i32 %208, 1
  %211 = mul i32 %208, %210
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %209, 10
  %215 = or i1 %213, %214
  br i1 %215, label %216, label %326

; <label>:216:                                    ; preds = %207
  br label %259

; <label>:217:                                    ; preds = %75
  %218 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %219 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %218, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %219, i32 0, i32 0
  %221 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %220, align 8
  %222 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %223 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %222, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %223, i32 0, i32 1
  %225 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %224, align 8
  %226 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %227 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %226) #3
  call void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %221, %"struct.Graph::Edge"* %225, %"class.std::allocator.20"* dereferenceable(1) %227)
  %228 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %229 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %229, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %230, i32 0, i32 0
  %232 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %231, align 8
  %233 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %234 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %233, i32 0, i32 0
  %235 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %234, i32 0, i32 2
  %236 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %235, align 8
  %237 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %238 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %237, i32 0, i32 0
  %239 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %238, i32 0, i32 0
  %240 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %239, align 8
  %241 = ptrtoint %"struct.Graph::Edge"* %236 to i64
  %242 = ptrtoint %"struct.Graph::Edge"* %240 to i64
  %243 = sub i64 %241, %242
  %244 = sdiv exact i64 %243, 16
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %228, %"struct.Graph::Edge"* %232, i64 %244)
  %245 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %246 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %247 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %246, i32 0, i32 0
  %248 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %247, i32 0, i32 0
  store %"struct.Graph::Edge"* %245, %"struct.Graph::Edge"** %248, align 8
  %249 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %250 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %251 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %250, i32 0, i32 0
  %252 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %251, i32 0, i32 1
  store %"struct.Graph::Edge"* %249, %"struct.Graph::Edge"** %252, align 8
  %253 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %254 = load i64, i64* %5, align 8
  %255 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %253, i64 %254
  %256 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %257 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %256, i32 0, i32 0
  %258 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %257, i32 0, i32 2
  store %"struct.Graph::Edge"* %255, %"struct.Graph::Edge"** %258, align 8
  ret void

; <label>:259:                                    ; preds = %216
  %260 = load i32, i32* @x.205
  %261 = load i32, i32* @y.206
  %262 = sub i32 %260, 1
  %263 = mul i32 %260, %262
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %265, %266
  br i1 %267, label %268, label %327

; <label>:268:                                    ; preds = %259, %327
  %269 = load i8*, i8** %8, align 8
  %270 = load i32, i32* %9, align 4
  %271 = insertvalue { i8*, i32 } undef, i8* %269, 0
  %272 = insertvalue { i8*, i32 } %271, i32 %270, 1
  %273 = load i32, i32* @x.205
  %274 = load i32, i32* @y.206
  %275 = sub i32 %273, 1
  %276 = mul i32 %273, %275
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %278, %279
  br i1 %280, label %281, label %327

; <label>:281:                                    ; preds = %268
  resume { i8*, i32 } %272

; <label>:282:                                    ; preds = %147
  %283 = landingpad { i8*, i32 }
          catch i8* null
  %284 = extractvalue { i8*, i32 } %283, 0
  call void @__clang_call_terminate(i8* %284) #10
  unreachable

; <label>:285:                                    ; preds = %197
  unreachable

; <label>:286:                                    ; preds = %33, %24
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %7, align 8
  %287 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %288 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %287, i32 0, i32 0
  %289 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %288, i32 0, i32 0
  %290 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %289, align 8
  %291 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %292 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %291, i32 0, i32 0
  %293 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %292, i32 0, i32 1
  %294 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %293, align 8
  %295 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %296 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %297 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %296) #3
  br label %33

; <label>:298:                                    ; preds = %64, %55
  store %"struct.Graph::Edge"* %54, %"struct.Graph::Edge"** %7, align 8
  %299 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %300 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %299, i32 1
  store %"struct.Graph::Edge"* %300, %"struct.Graph::Edge"** %7, align 8
  br label %64

; <label>:301:                                    ; preds = %85, %76
  %302 = landingpad { i8*, i32 }
          catch i8* null
  %303 = extractvalue { i8*, i32 } %302, 0
  store i8* %303, i8** %8, align 8
  %304 = extractvalue { i8*, i32 } %302, 1
  store i32 %304, i32* %9, align 4
  br label %85

; <label>:305:                                    ; preds = %107, %98
  %306 = load i8*, i8** %8, align 8
  %307 = call i8* @__cxa_begin_catch(i8* %306) #3
  %308 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %309 = icmp ne %"struct.Graph::Edge"* %308, null
  br label %107

; <label>:310:                                    ; preds = %130, %121
  %311 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %312 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %311, i32 0, i32 0
  %313 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %312 to %"class.std::allocator.20"*
  %314 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %315 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %10) #3
  %316 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %314, i64 %315
  br label %130

; <label>:317:                                    ; preds = %160, %151
  %318 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %319 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %320 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %321 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %320) #3
  br label %160

; <label>:322:                                    ; preds = %184, %175
  %323 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %324 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %325 = load i64, i64* %5, align 8
  br label %184

; <label>:326:                                    ; preds = %207, %198
  br label %207

; <label>:327:                                    ; preds = %268, %259
  %328 = load i8*, i8** %8, align 8
  %329 = load i32, i32* %9, align 4
  %330 = insertvalue { i8*, i32 } undef, i8* %328, 0
  %331 = insertvalue { i8*, i32 } %330, i32 %329, 1
  br label %268
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %9 = bitcast %"struct.Graph::Edge"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::Edge"*
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %12 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.Graph::Edge"* %10 to i8*
  %14 = bitcast %"struct.Graph::Edge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %9) #3
  %11 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %9) #3
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %35

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.209
  %17 = load i32, i32* @y.210
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %90

; <label>:24:                                     ; preds = %15, %90
  %25 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %25) #13
  %26 = load i32, i32* @x.209
  %27 = load i32, i32* @y.210
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %90

; <label>:34:                                     ; preds = %24
  unreachable

; <label>:35:                                     ; preds = %3
  %36 = load i32, i32* @x.209
  %37 = load i32, i32* @y.210
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %44, label %92

; <label>:44:                                     ; preds = %35, %92
  %45 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %9) #3
  %46 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %9) #3
  store i64 %46, i64* %8, align 8
  %47 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %45, %48
  store i64 %49, i64* %7, align 8
  %50 = load i64, i64* %7, align 8
  %51 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %9) #3
  %52 = icmp ult i64 %50, %51
  %53 = load i32, i32* @x.209
  %54 = load i32, i32* @y.210
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %61, label %92

; <label>:61:                                     ; preds = %44
  br i1 %52, label %84, label %62

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* @x.209
  %64 = load i32, i32* @y.210
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %71, label %112

; <label>:71:                                     ; preds = %62, %112
  %72 = load i64, i64* %7, align 8
  %73 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %9) #3
  %74 = icmp ugt i64 %72, %73
  %75 = load i32, i32* @x.209
  %76 = load i32, i32* @y.210
  %77 = sub i32 %75, 1
  %78 = mul i32 %75, %77
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %80, %81
  br i1 %82, label %83, label %112

; <label>:83:                                     ; preds = %71
  br i1 %74, label %84, label %86

; <label>:84:                                     ; preds = %83, %61
  %85 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %9) #3
  br label %88

; <label>:86:                                     ; preds = %83
  %87 = load i64, i64* %7, align 8
  br label %88

; <label>:88:                                     ; preds = %86, %84
  %89 = phi i64 [ %85, %84 ], [ %87, %86 ]
  ret i64 %89

; <label>:90:                                     ; preds = %24, %15
  %91 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %91) #13
  br label %24

; <label>:92:                                     ; preds = %44, %35
  %93 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %9) #3
  %94 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %9) #3
  store i64 %94, i64* %8, align 8
  %95 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %96 = load i64, i64* %95, align 8
  %97 = shl i64 %93, %96
  %98 = shl i64 %93, %96
  %99 = sub i64 0, %93
  %100 = add i64 %99, %96
  %101 = sub i64 %93, %96
  %102 = mul i64 %101, %96
  %103 = shl i64 %93, %96
  %104 = sub i64 %93, %96
  %105 = mul i64 %104, %96
  %106 = sub i64 0, %93
  %107 = add i64 %106, %96
  %108 = add i64 %93, %96
  store i64 %108, i64* %7, align 8
  %109 = load i64, i64* %7, align 8
  %110 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %9) #3
  %111 = icmp ult i64 %109, %110
  br label %44

; <label>:112:                                    ; preds = %71, %62
  %113 = load i64, i64* %7, align 8
  %114 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %9) #3
  %115 = icmp ugt i64 %113, %114
  br label %71
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.211
  %4 = load i32, i32* @y.212
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %34

; <label>:11:                                     ; preds = %2, %34
  %12 = alloca %"struct.std::_Vector_base.19"*, align 8
  %13 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %12, align 8
  store i64 %1, i64* %13, align 8
  %14 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %12, align 8
  %15 = load i64, i64* %13, align 8
  %16 = icmp ne i64 %15, 0
  %17 = load i32, i32* @x.211
  %18 = load i32, i32* @y.212
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %34

; <label>:25:                                     ; preds = %11
  br i1 %16, label %26, label %31

; <label>:26:                                     ; preds = %25
  %27 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %14, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %27 to %"class.std::allocator.20"*
  %29 = load i64, i64* %13, align 8
  %30 = call %"struct.Graph::Edge"* @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8allocateERS2_m(%"class.std::allocator.20"* dereferenceable(1) %28, i64 %29)
  br label %32

; <label>:31:                                     ; preds = %25
  br label %32

; <label>:32:                                     ; preds = %31, %26
  %33 = phi %"struct.Graph::Edge"* [ %30, %26 ], [ null, %31 ]
  ret %"struct.Graph::Edge"* %33

; <label>:34:                                     ; preds = %11, %2
  %35 = alloca %"struct.std::_Vector_base.19"*, align 8
  %36 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %35, align 8
  store i64 %1, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %35, align 8
  %38 = load i64, i64* %36, align 8
  %39 = icmp ne i64 %38, 0
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %8 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  %12 = ptrtoint %"struct.Graph::Edge"* %7 to i64
  %13 = ptrtoint %"struct.Graph::Edge"* %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 16
  ret i64 %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = alloca %"class.std::move_iterator.23", align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %6, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %12 = call %"struct.Graph::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Edge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  store %"struct.Graph::Edge"* %12, %"struct.Graph::Edge"** %13, align 8
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %15 = call %"struct.Graph::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Edge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  store %"struct.Graph::Edge"* %15, %"struct.Graph::Edge"** %16, align 8
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %18 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  %22 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %23 = call %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Edge"* %20, %"struct.Graph::Edge"* %22, %"struct.Graph::Edge"* %17, %"class.std::allocator.20"* dereferenceable(1) %18)
  ret %"struct.Graph::Edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1), %"struct.Graph::Edge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.21"* %6, %"struct.Graph::Edge"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.20"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.225
  %3 = load i32, i32* @y.226
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %11, align 8
  %12 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %11, align 8
  %13 = load i32, i32* @x.225
  %14 = load i32, i32* @y.226
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret i64 1152921504606846975

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8allocateERS2_m(%"class.std::allocator.20"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %6, i64 %7, i8* null)
  ret %"struct.Graph::Edge"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.229
  %5 = load i32, i32* @y.230
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %35

; <label>:12:                                     ; preds = %3, %35
  %13 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %13, align 8
  store i64 %1, i64* %14, align 8
  store i8* %2, i8** %15, align 8
  %16 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %13, align 8
  %17 = load i64, i64* %14, align 8
  %18 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %16) #3
  %19 = icmp ugt i64 %17, %18
  %20 = load i32, i32* @x.229
  %21 = load i32, i32* @y.230
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %12
  br i1 %19, label %29, label %30

; <label>:29:                                     ; preds = %28
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:30:                                     ; preds = %28
  %31 = load i64, i64* %14, align 8
  %32 = mul i64 %31, 16
  %33 = call i8* @_Znwm(i64 %32)
  %34 = bitcast i8* %33 to %"struct.Graph::Edge"*
  ret %"struct.Graph::Edge"* %34

; <label>:35:                                     ; preds = %12, %3
  %36 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %37 = alloca i64, align 8
  %38 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %36, align 8
  store i64 %1, i64* %37, align 8
  store i8* %2, i8** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %36, align 8
  %40 = load i64, i64* %37, align 8
  %41 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %39) #3
  %42 = icmp ugt i64 %40, %41
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.23", align 8
  %6 = alloca %"class.std::move_iterator.23", align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = alloca %"class.std::move_iterator.23", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %6, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %12, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.23"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.23"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.23"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.23"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  %21 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %20, align 8
  %22 = call %"struct.Graph::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_(%"struct.Graph::Edge"* %19, %"struct.Graph::Edge"* %21, %"struct.Graph::Edge"* %17)
  ret %"struct.Graph::Edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.23", align 8
  %3 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  %4 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_(%"class.std::move_iterator.23"* %2, %"struct.Graph::Edge"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %2, i32 0, i32 0
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  ret %"struct.Graph::Edge"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.23", align 8
  %5 = alloca %"class.std::move_iterator.23", align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.23", align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %11, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.23"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.23"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.23"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.23"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %8, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = call %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_(%"struct.Graph::Edge"* %18, %"struct.Graph::Edge"* %20, %"struct.Graph::Edge"* %16)
  ret %"struct.Graph::Edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.23", align 8
  %5 = alloca %"class.std::move_iterator.23", align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %11, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %12 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  store %"struct.Graph::Edge"* %12, %"struct.Graph::Edge"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %62, %3
  %14 = invoke zeroext i1 @_ZStneIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.23"* dereferenceable(8) %4, %"class.std::move_iterator.23"* dereferenceable(8) %5)
          to label %15 unwind label %63

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %91

; <label>:16:                                     ; preds = %15
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %18 = call %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16) %17) #3
  %19 = invoke dereferenceable(16) %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEEdeEv(%"class.std::move_iterator.23"* %4)
          to label %20 unwind label %63

; <label>:20:                                     ; preds = %16
  invoke void @_ZSt10_ConstructIN5Graph4EdgeEJS1_EEvPT_DpOT0_(%"struct.Graph::Edge"* %18, %"struct.Graph::Edge"* dereferenceable(16) %19)
          to label %21 unwind label %63

; <label>:21:                                     ; preds = %20
  %22 = load i32, i32* @x.237
  %23 = load i32, i32* @y.238
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %30, label %144

; <label>:30:                                     ; preds = %21, %144
  %31 = load i32, i32* @x.237
  %32 = load i32, i32* @y.238
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %144

; <label>:39:                                     ; preds = %30
  br label %40

; <label>:40:                                     ; preds = %39
  %41 = invoke dereferenceable(8) %"class.std::move_iterator.23"* @_ZNSt13move_iteratorIPN5Graph4EdgeEEppEv(%"class.std::move_iterator.23"* %4)
          to label %42 unwind label %63

; <label>:42:                                     ; preds = %40
  %43 = load i32, i32* @x.237
  %44 = load i32, i32* @y.238
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %145

; <label>:51:                                     ; preds = %42, %145
  %52 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %53 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %52, i32 1
  store %"struct.Graph::Edge"* %53, %"struct.Graph::Edge"** %7, align 8
  %54 = load i32, i32* @x.237
  %55 = load i32, i32* @y.238
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %62, label %145

; <label>:62:                                     ; preds = %51
  br label %13

; <label>:63:                                     ; preds = %40, %20, %16, %13
  %64 = load i32, i32* @x.237
  %65 = load i32, i32* @y.238
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %72, label %148

; <label>:72:                                     ; preds = %63, %148
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %8, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %9, align 4
  %76 = load i32, i32* @x.237
  %77 = load i32, i32* @y.238
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %84, label %148

; <label>:84:                                     ; preds = %72
  br label %85

; <label>:85:                                     ; preds = %84
  %86 = load i8*, i8** %8, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #3
  %88 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %89 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %88, %"struct.Graph::Edge"* %89)
          to label %90 unwind label %93

; <label>:90:                                     ; preds = %85
  invoke void @__cxa_rethrow() #13
          to label %143 unwind label %93

; <label>:91:                                     ; preds = %15
  %92 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  ret %"struct.Graph::Edge"* %92

; <label>:93:                                     ; preds = %90, %85
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %8, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %97 unwind label %122

; <label>:97:                                     ; preds = %93
  br label %117
                                                  ; No predecessors!
  %99 = load i32, i32* @x.237
  %100 = load i32, i32* @y.238
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %107, label %152

; <label>:107:                                    ; preds = %98, %152
  call void @llvm.trap()
  %108 = load i32, i32* @x.237
  %109 = load i32, i32* @y.238
  %110 = sub i32 %108, 1
  %111 = mul i32 %108, %110
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %109, 10
  %115 = or i1 %113, %114
  br i1 %115, label %116, label %152

; <label>:116:                                    ; preds = %107
  unreachable

; <label>:117:                                    ; preds = %97
  %118 = load i8*, i8** %8, align 8
  %119 = load i32, i32* %9, align 4
  %120 = insertvalue { i8*, i32 } undef, i8* %118, 0
  %121 = insertvalue { i8*, i32 } %120, i32 %119, 1
  resume { i8*, i32 } %121

; <label>:122:                                    ; preds = %93
  %123 = load i32, i32* @x.237
  %124 = load i32, i32* @y.238
  %125 = sub i32 %123, 1
  %126 = mul i32 %123, %125
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %128, %129
  br i1 %130, label %131, label %153

; <label>:131:                                    ; preds = %122, %153
  %132 = landingpad { i8*, i32 }
          catch i8* null
  %133 = extractvalue { i8*, i32 } %132, 0
  call void @__clang_call_terminate(i8* %133) #10
  %134 = load i32, i32* @x.237
  %135 = load i32, i32* @y.238
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %142, label %153

; <label>:142:                                    ; preds = %131
  unreachable

; <label>:143:                                    ; preds = %90
  unreachable

; <label>:144:                                    ; preds = %30, %21
  br label %30

; <label>:145:                                    ; preds = %51, %42
  %146 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %147 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %146, i32 1
  store %"struct.Graph::Edge"* %147, %"struct.Graph::Edge"** %7, align 8
  br label %51

; <label>:148:                                    ; preds = %72, %63
  %149 = landingpad { i8*, i32 }
          catch i8* null
  %150 = extractvalue { i8*, i32 } %149, 0
  store i8* %150, i8** %8, align 8
  %151 = extractvalue { i8*, i32 } %149, 1
  store i32 %151, i32* %9, align 4
  br label %72

; <label>:152:                                    ; preds = %107, %98
  call void @llvm.trap()
  br label %107

; <label>:153:                                    ; preds = %131, %122
  %154 = landingpad { i8*, i32 }
          catch i8* null
  %155 = extractvalue { i8*, i32 } %154, 0
  call void @__clang_call_terminate(i8* %155) #10
  br label %131
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.23"* dereferenceable(8), %"class.std::move_iterator.23"* dereferenceable(8)) #0 comdat {
  %3 = load i32, i32* @x.239
  %4 = load i32, i32* @y.240
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %27

; <label>:11:                                     ; preds = %2, %27
  %12 = alloca %"class.std::move_iterator.23"*, align 8
  %13 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %12, align 8
  store %"class.std::move_iterator.23"* %1, %"class.std::move_iterator.23"** %13, align 8
  %14 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %12, align 8
  %15 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %13, align 8
  %16 = call zeroext i1 @_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.23"* dereferenceable(8) %14, %"class.std::move_iterator.23"* dereferenceable(8) %15)
  %17 = xor i1 %16, true
  %18 = load i32, i32* @x.239
  %19 = load i32, i32* @y.240
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %11
  ret i1 %17

; <label>:27:                                     ; preds = %11, %2
  %28 = alloca %"class.std::move_iterator.23"*, align 8
  %29 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %28, align 8
  store %"class.std::move_iterator.23"* %1, %"class.std::move_iterator.23"** %29, align 8
  %30 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %28, align 8
  %31 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %29, align 8
  %32 = call zeroext i1 @_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.23"* dereferenceable(8) %30, %"class.std::move_iterator.23"* dereferenceable(8) %31)
  %33 = sub i1 %32, true
  %34 = mul i1 %33, true
  %35 = sub i1 false, %32
  %36 = add i1 %35, true
  %37 = shl i1 %32, true
  %38 = sub i1 false, %32
  %39 = add i1 %38, true
  %40 = xor i1 %32, true
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph4EdgeEJS1_EEvPT_DpOT0_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  %6 = bitcast %"struct.Graph::Edge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph::Edge"*
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %9 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.Graph::Edge"* %7 to i8*
  %11 = bitcast %"struct.Graph::Edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  %4 = bitcast %"struct.Graph::Edge"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.Graph::Edge"*
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEEdeEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.245
  %3 = load i32, i32* @y.246
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %11, align 8
  %12 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %11, align 8
  %13 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %15 = load i32, i32* @x.245
  %16 = load i32, i32* @y.246
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"struct.Graph::Edge"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %25, align 8
  %26 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %25, align 8
  %27 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %26, i32 0, i32 0
  %28 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %27, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.23"* @_ZNSt13move_iteratorIPN5Graph4EdgeEEppEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %2, align 8
  %3 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %5, i32 1
  store %"struct.Graph::Edge"* %6, %"struct.Graph::Edge"** %4, align 8
  ret %"class.std::move_iterator.23"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.23"* dereferenceable(8), %"class.std::move_iterator.23"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.23"*, align 8
  %4 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %3, align 8
  store %"class.std::move_iterator.23"* %1, %"class.std::move_iterator.23"** %4, align 8
  %5 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %3, align 8
  %6 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.23"* %5)
  %7 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %4, align 8
  %8 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.23"* %7)
  %9 = icmp eq %"struct.Graph::Edge"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %2, align 8
  %3 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_(%"class.std::move_iterator.23"*, %"struct.Graph::Edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.23"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  store %"struct.Graph::Edge"* %7, %"struct.Graph::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Graph::Edge"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.259
  %3 = load i32, i32* @y.260
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %28

; <label>:10:                                     ; preds = %1, %28
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %12, align 8
  %13 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %14 = bitcast %"class.std::vector.18"* %13 to %"struct.std::_Vector_base.19"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %15, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %11, %"struct.Graph::Edge"** dereferenceable(8) %16) #3
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  %19 = load i32, i32* @x.259
  %20 = load i32, i32* @y.260
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %10
  ret %"struct.Graph::Edge"* %18

; <label>:28:                                     ; preds = %10, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %30, align 8
  %31 = load %"class.std::vector.18"*, %"class.std::vector.18"** %30, align 8
  %32 = bitcast %"class.std::vector.18"* %31 to %"struct.std::_Vector_base.19"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %33, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %29, %"struct.Graph::Edge"** dereferenceable(8) %34) #3
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %36 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %35, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %9, align 8
  %11 = icmp ne %"struct.Graph::Edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.263
  %3 = load i32, i32* @y.264
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %28

; <label>:10:                                     ; preds = %1, %28
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %12, align 8
  %13 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %14 = bitcast %"class.std::vector.18"* %13 to %"struct.std::_Vector_base.19"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %15, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %11, %"struct.Graph::Edge"** dereferenceable(8) %16) #3
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  %19 = load i32, i32* @x.263
  %20 = load i32, i32* @y.264
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %10
  ret %"struct.Graph::Edge"* %18

; <label>:28:                                     ; preds = %10, %1
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %30, align 8
  %31 = load %"class.std::vector.18"*, %"class.std::vector.18"** %30, align 8
  %32 = bitcast %"class.std::vector.18"* %31 to %"struct.std::_Vector_base.19"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %33, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %29, %"struct.Graph::Edge"** dereferenceable(8) %34) #3
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %36 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %35, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.265
  %3 = load i32, i32* @y.266
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  %12 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %15 = load i32, i32* @x.265
  %16 = load i32, i32* @y.266
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"struct.Graph::Edge"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %25, align 8
  %26 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %26, i32 0, i32 0
  %28 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %27, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE(%"class.std::vector.18"*, %"struct.Graph::Edge"*) #0 comdat align 2 {
  %3 = load i32, i32* @x.267
  %4 = load i32, i32* @y.268
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %42

; <label>:11:                                     ; preds = %2, %42
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %14 = alloca %"class.std::vector.18"*, align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %13, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %18, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %14, align 8
  %19 = load %"class.std::vector.18"*, %"class.std::vector.18"** %14, align 8
  %20 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %19) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  store %"struct.Graph::Edge"* %20, %"struct.Graph::Edge"** %21, align 8
  %22 = call %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE6cbeginEv(%"class.std::vector.18"* %19) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %17, i32 0, i32 0
  store %"struct.Graph::Edge"* %22, %"struct.Graph::Edge"** %23, align 8
  %24 = call i64 @_ZN9__gnu_cxxmiIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %13, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %17) #3
  %25 = call %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %16, i64 %24) #3
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %"struct.Graph::Edge"* %25, %"struct.Graph::Edge"** %26, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  %28 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %27, align 8
  %29 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE(%"class.std::vector.18"* %19, %"struct.Graph::Edge"* %28)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"struct.Graph::Edge"* %29, %"struct.Graph::Edge"** %30, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %32 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %31, align 8
  %33 = load i32, i32* @x.267
  %34 = load i32, i32* @y.268
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %11
  ret %"struct.Graph::Edge"* %32

; <label>:42:                                     ; preds = %11, %2
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %45 = alloca %"class.std::vector.18"*, align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %44, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %49, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %45, align 8
  %50 = load %"class.std::vector.18"*, %"class.std::vector.18"** %45, align 8
  %51 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %50) #3
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %47, i32 0, i32 0
  store %"struct.Graph::Edge"* %51, %"struct.Graph::Edge"** %52, align 8
  %53 = call %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE6cbeginEv(%"class.std::vector.18"* %50) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %48, i32 0, i32 0
  store %"struct.Graph::Edge"* %53, %"struct.Graph::Edge"** %54, align 8
  %55 = call i64 @_ZN9__gnu_cxxmiIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %44, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %48) #3
  %56 = call %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %47, i64 %55) #3
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %46, i32 0, i32 0
  store %"struct.Graph::Edge"* %56, %"struct.Graph::Edge"** %57, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %46, i32 0, i32 0
  %59 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %58, align 8
  %60 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE(%"class.std::vector.18"* %50, %"struct.Graph::Edge"* %59)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  store %"struct.Graph::Edge"* %60, %"struct.Graph::Edge"** %61, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  %63 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %62, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  store %"struct.Graph::Edge"* %9, %"struct.Graph::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEmmEi(%"class.__gnu_cxx::__normal_iterator"*, i32) #5 comdat align 2 {
  %3 = load i32, i32* @x.271
  %4 = load i32, i32* @y.272
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %31

; <label>:11:                                     ; preds = %2, %31
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %13, align 8
  store i32 %1, i32* %14, align 4
  %16 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  %19 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %18, i32 -1
  store %"struct.Graph::Edge"* %19, %"struct.Graph::Edge"** %17, align 8
  store %"struct.Graph::Edge"* %18, %"struct.Graph::Edge"** %15, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %12, %"struct.Graph::Edge"** dereferenceable(8) %15) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %21 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %20, align 8
  %22 = load i32, i32* @x.271
  %23 = load i32, i32* @y.272
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %11
  ret %"struct.Graph::Edge"* %21

; <label>:31:                                     ; preds = %11, %2
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %34 = alloca i32, align 4
  %35 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %33, align 8
  store i32 %1, i32* %34, align 4
  %36 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %33, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  %38 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %37, align 8
  %39 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %38, i32 -1
  store %"struct.Graph::Edge"* %39, %"struct.Graph::Edge"** %37, align 8
  store %"struct.Graph::Edge"* %38, %"struct.Graph::Edge"** %35, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %32, %"struct.Graph::Edge"** dereferenceable(8) %35) #3
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  %41 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %40, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"*, i32) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  %10 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %9, i32 1
  store %"struct.Graph::Edge"* %10, %"struct.Graph::Edge"** %8, align 8
  store %"struct.Graph::Edge"* %9, %"struct.Graph::Edge"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %3, %"struct.Graph::Edge"** dereferenceable(8) %6) #3
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %12 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %11, align 8
  ret %"struct.Graph::Edge"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.Graph::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"struct.Graph::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  store %"struct.Graph::Edge"* %8, %"struct.Graph::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.277
  %3 = load i32, i32* @y.278
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %1, %23
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  %12 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %14 = load i32, i32* @x.277
  %15 = load i32, i32* @y.278
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %10
  ret %"struct.Graph::Edge"** %13

; <label>:23:                                     ; preds = %10, %1
  %24 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %24, align 8
  %25 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %24, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE(%"class.std::vector.18"*, %"struct.Graph::Edge"*) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %12, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %5, align 8
  %13 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %14 = call %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 1) #3
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Graph::Edge"* %14, %"struct.Graph::Edge"** %15, align 8
  %16 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %13) #3
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Graph::Edge"* %16, %"struct.Graph::Edge"** %17, align 8
  %18 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7) #3
  br i1 %18, label %19, label %34

; <label>:19:                                     ; preds = %2
  %20 = call %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %4, i64 1) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Graph::Edge"* %20, %"struct.Graph::Edge"** %21, align 8
  %22 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %13) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store %"struct.Graph::Edge"* %22, %"struct.Graph::Edge"** %23, align 8
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %27 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %29 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %31 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %30, align 8
  %32 = call %"struct.Graph::Edge"* @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%"struct.Graph::Edge"* %27, %"struct.Graph::Edge"* %29, %"struct.Graph::Edge"* %31)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"struct.Graph::Edge"* %32, %"struct.Graph::Edge"** %33, align 8
  br label %34

; <label>:34:                                     ; preds = %19, %2
  %35 = bitcast %"class.std::vector.18"* %13 to %"struct.std::_Vector_base.19"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %36, i32 0, i32 1
  %38 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %37, align 8
  %39 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %38, i32 -1
  store %"struct.Graph::Edge"* %39, %"struct.Graph::Edge"** %37, align 8
  %40 = bitcast %"class.std::vector.18"* %13 to %"struct.std::_Vector_base.19"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %41 to %"class.std::allocator.20"*
  %43 = bitcast %"class.std::vector.18"* %13 to %"struct.std::_Vector_base.19"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %45, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1) %42, %"struct.Graph::Edge"* %46)
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %50 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %49, align 8
  ret %"struct.Graph::Edge"* %50
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #5 comdat align 2 {
  %3 = load i32, i32* @x.281
  %4 = load i32, i32* @y.282
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %32

; <label>:11:                                     ; preds = %2, %32
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %13, align 8
  store i64 %1, i64* %14, align 8
  %16 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  %19 = load i64, i64* %14, align 8
  %20 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %18, i64 %19
  store %"struct.Graph::Edge"* %20, %"struct.Graph::Edge"** %15, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %12, %"struct.Graph::Edge"** dereferenceable(8) %15) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %22 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %23 = load i32, i32* @x.281
  %24 = load i32, i32* @y.282
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %11
  ret %"struct.Graph::Edge"* %22

; <label>:32:                                     ; preds = %11, %2
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %35 = alloca i64, align 8
  %36 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %34, align 8
  store i64 %1, i64* %35, align 8
  %37 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %34, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  %39 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %38, align 8
  %40 = load i64, i64* %35, align 8
  %41 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %39, i64 %40
  store %"struct.Graph::Edge"* %41, %"struct.Graph::Edge"** %36, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %33, %"struct.Graph::Edge"** dereferenceable(8) %36) #3
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %43 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %42, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8)) #5 comdat {
  %3 = load i32, i32* @x.283
  %4 = load i32, i32* @y.284
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %33

; <label>:11:                                     ; preds = %2, %33
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %12, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %13, align 8
  %14 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %12, align 8
  %15 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %14) #3
  %16 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %15, align 8
  %17 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %13, align 8
  %18 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %17) #3
  %19 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %18, align 8
  %20 = ptrtoint %"struct.Graph::Edge"* %16 to i64
  %21 = ptrtoint %"struct.Graph::Edge"* %19 to i64
  %22 = sub i64 %20, %21
  %23 = sdiv exact i64 %22, 16
  %24 = load i32, i32* @x.283
  %25 = load i32, i32* @y.284
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %11
  ret i64 %23

; <label>:33:                                     ; preds = %11, %2
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %34, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %35, align 8
  %36 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %34, align 8
  %37 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %36) #3
  %38 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %37, align 8
  %39 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %35, align 8
  %40 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %39) #3
  %41 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %40, align 8
  %42 = ptrtoint %"struct.Graph::Edge"* %38 to i64
  %43 = ptrtoint %"struct.Graph::Edge"* %41 to i64
  %44 = sub i64 0, %42
  %45 = add i64 %44, %43
  %46 = shl i64 %42, %43
  %47 = shl i64 %42, %43
  %48 = shl i64 %42, %43
  %49 = sub i64 0, %42
  %50 = add i64 %49, %43
  %51 = sub i64 0, %42
  %52 = add i64 %51, %43
  %53 = sub i64 %42, %43
  %54 = mul i64 %53, %43
  %55 = shl i64 %42, %43
  %56 = sub i64 %42, %43
  %57 = mul i64 %56, %43
  %58 = sub i64 %42, %43
  %59 = shl i64 %58, 16
  %60 = shl i64 %58, 16
  %61 = sub i64 %58, 16
  %62 = mul i64 %61, 16
  %63 = sub i64 %58, 16
  %64 = mul i64 %63, 16
  %65 = sub i64 0, %58
  %66 = add i64 %65, 16
  %67 = shl i64 %58, 16
  %68 = sub i64 0, %58
  %69 = add i64 %68, 16
  %70 = sdiv exact i64 %58, 16
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE6cbeginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.285
  %3 = load i32, i32* @y.286
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %30

; <label>:10:                                     ; preds = %1, %30
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %12 = alloca %"class.std::vector.18"*, align 8
  %13 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %12, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %15 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %16, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  store %"struct.Graph::Edge"* %18, %"struct.Graph::Edge"** %13, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %11, %"struct.Graph::Edge"** dereferenceable(8) %13) #3
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %11, i32 0, i32 0
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = load i32, i32* @x.285
  %22 = load i32, i32* @y.286
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %10
  ret %"struct.Graph::Edge"* %20

; <label>:30:                                     ; preds = %10, %1
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %32 = alloca %"class.std::vector.18"*, align 8
  %33 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %32, align 8
  %34 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %35 = bitcast %"class.std::vector.18"* %34 to %"struct.std::_Vector_base.19"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %36, i32 0, i32 0
  %38 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %37, align 8
  store %"struct.Graph::Edge"* %38, %"struct.Graph::Edge"** %33, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %31, %"struct.Graph::Edge"** dereferenceable(8) %33) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %31, i32 0, i32 0
  %40 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %39, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %18, align 8
  %20 = call %"struct.Graph::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Graph::Edge"* %20, %"struct.Graph::Edge"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %25 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %24, align 8
  %26 = call %"struct.Graph::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"struct.Graph::Edge"* %26, %"struct.Graph::Edge"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %31 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %33 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %35 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %34, align 8
  %36 = call %"struct.Graph::Edge"* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Graph::Edge"* %31, %"struct.Graph::Edge"* %33, %"struct.Graph::Edge"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %36, %"struct.Graph::Edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %39 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %38, align 8
  ret %"struct.Graph::Edge"* %39
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = load i32, i32* @x.289
  %5 = load i32, i32* @y.290
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %51

; <label>:12:                                     ; preds = %3, %51
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %17 = alloca %"struct.Graph::Edge"*, align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %21, align 8
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %15, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %22, align 8
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %16, i32 0, i32 0
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %23, align 8
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %18 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  %27 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %26, align 8
  %28 = call %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %27)
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator"* %19 to i8*
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 8, i1 false)
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  %32 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %31, align 8
  %33 = call %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %32)
  %34 = bitcast %"class.__gnu_cxx::__normal_iterator"* %20 to i8*
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 8, i1 false)
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  %37 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %36, align 8
  %38 = call %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %37)
  %39 = call %"struct.Graph::Edge"* @_ZSt13__copy_move_aILb1EPN5Graph4EdgeES2_ET1_T0_S4_S3_(%"struct.Graph::Edge"* %28, %"struct.Graph::Edge"* %33, %"struct.Graph::Edge"* %38)
  store %"struct.Graph::Edge"* %39, %"struct.Graph::Edge"** %17, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %13, %"struct.Graph::Edge"** dereferenceable(8) %17) #3
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  %41 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %40, align 8
  %42 = load i32, i32* @x.289
  %43 = load i32, i32* @y.290
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %50, label %51

; <label>:50:                                     ; preds = %12
  ret %"struct.Graph::Edge"* %41

; <label>:51:                                     ; preds = %12, %3
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %54 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %55 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %56 = alloca %"struct.Graph::Edge"*, align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %58 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %60, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %54, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %61, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %55, i32 0, i32 0
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %62, align 8
  %63 = bitcast %"class.__gnu_cxx::__normal_iterator"* %57 to i8*
  %64 = bitcast %"class.__gnu_cxx::__normal_iterator"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 8, i1 false)
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %57, i32 0, i32 0
  %66 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %65, align 8
  %67 = call %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %66)
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator"* %58 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %58, i32 0, i32 0
  %71 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %70, align 8
  %72 = call %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %71)
  %73 = bitcast %"class.__gnu_cxx::__normal_iterator"* %59 to i8*
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %59, i32 0, i32 0
  %76 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %75, align 8
  %77 = call %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %76)
  %78 = call %"struct.Graph::Edge"* @_ZSt13__copy_move_aILb1EPN5Graph4EdgeES2_ET1_T0_S4_S3_(%"struct.Graph::Edge"* %67, %"struct.Graph::Edge"* %72, %"struct.Graph::Edge"* %77)
  store %"struct.Graph::Edge"* %78, %"struct.Graph::Edge"** %56, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %52, %"struct.Graph::Edge"** dereferenceable(8) %56) #3
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  %80 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %79, align 8
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  %10 = call %"struct.Graph::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES8_(%"struct.Graph::Edge"* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Graph::Edge"* %10, %"struct.Graph::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %13 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %12, align 8
  ret %"struct.Graph::Edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt13__copy_move_aILb1EPN5Graph4EdgeES2_ET1_T0_S4_S3_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::Edge"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %10 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %11 = call %"struct.Graph::Edge"* @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN5Graph4EdgeES5_EET0_T_S7_S6_(%"struct.Graph::Edge"* %8, %"struct.Graph::Edge"* %9, %"struct.Graph::Edge"* %10)
  ret %"struct.Graph::Edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %9 = call %"struct.Graph::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Graph::Edge"* %8)
  ret %"struct.Graph::Edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN5Graph4EdgeES5_EET0_T_S7_S6_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #5 comdat align 2 {
  %4 = load i32, i32* @x.297
  %5 = load i32, i32* @y.298
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %68

; <label>:12:                                     ; preds = %3, %68
  %13 = alloca %"struct.Graph::Edge"*, align 8
  %14 = alloca %"struct.Graph::Edge"*, align 8
  %15 = alloca %"struct.Graph::Edge"*, align 8
  %16 = alloca i64, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %13, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %14, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %15, align 8
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %14, align 8
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %19 = ptrtoint %"struct.Graph::Edge"* %17 to i64
  %20 = ptrtoint %"struct.Graph::Edge"* %18 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 16
  store i64 %22, i64* %16, align 8
  %23 = load i32, i32* @x.297
  %24 = load i32, i32* @y.298
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %68

; <label>:31:                                     ; preds = %12
  br label %32

; <label>:32:                                     ; preds = %63, %31
  %33 = load i64, i64* %16, align 8
  %34 = icmp sgt i64 %33, 0
  br i1 %34, label %35, label %66

; <label>:35:                                     ; preds = %32
  %36 = load i32, i32* @x.297
  %37 = load i32, i32* @y.298
  %38 = sub i32 %36, 1
  %39 = mul i32 %36, %38
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %41, %42
  br i1 %43, label %44, label %89

; <label>:44:                                     ; preds = %35, %89
  %45 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %46 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Edge"* dereferenceable(16) %45) #3
  %47 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %15, align 8
  %48 = bitcast %"struct.Graph::Edge"* %47 to i8*
  %49 = bitcast %"struct.Graph::Edge"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 16, i32 8, i1 false)
  %50 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %51 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %50, i32 1
  store %"struct.Graph::Edge"* %51, %"struct.Graph::Edge"** %13, align 8
  %52 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %15, align 8
  %53 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %52, i32 1
  store %"struct.Graph::Edge"* %53, %"struct.Graph::Edge"** %15, align 8
  %54 = load i32, i32* @x.297
  %55 = load i32, i32* @y.298
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %62, label %89

; <label>:62:                                     ; preds = %44
  br label %63

; <label>:63:                                     ; preds = %62
  %64 = load i64, i64* %16, align 8
  %65 = add nsw i64 %64, -1
  store i64 %65, i64* %16, align 8
  br label %32

; <label>:66:                                     ; preds = %32
  %67 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %15, align 8
  ret %"struct.Graph::Edge"* %67

; <label>:68:                                     ; preds = %12, %3
  %69 = alloca %"struct.Graph::Edge"*, align 8
  %70 = alloca %"struct.Graph::Edge"*, align 8
  %71 = alloca %"struct.Graph::Edge"*, align 8
  %72 = alloca i64, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %69, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %70, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %71, align 8
  %73 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %70, align 8
  %74 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %69, align 8
  %75 = ptrtoint %"struct.Graph::Edge"* %73 to i64
  %76 = ptrtoint %"struct.Graph::Edge"* %74 to i64
  %77 = sub i64 0, %75
  %78 = add i64 %77, %76
  %79 = shl i64 %75, %76
  %80 = sub i64 %75, %76
  %81 = mul i64 %80, %76
  %82 = sub i64 %75, %76
  %83 = shl i64 %82, 16
  %84 = sub i64 0, %82
  %85 = add i64 %84, 16
  %86 = sub i64 %82, 16
  %87 = mul i64 %86, 16
  %88 = sdiv exact i64 %82, 16
  store i64 %88, i64* %72, align 8
  br label %12

; <label>:89:                                     ; preds = %44, %35
  %90 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %91 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Edge"* dereferenceable(16) %90) #3
  %92 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %15, align 8
  %93 = bitcast %"struct.Graph::Edge"* %92 to i8*
  %94 = bitcast %"struct.Graph::Edge"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 16, i32 8, i1 false)
  %95 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %96 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %95, i32 1
  store %"struct.Graph::Edge"* %96, %"struct.Graph::Edge"** %13, align 8
  %97 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %15, align 8
  %98 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %97, i32 1
  store %"struct.Graph::Edge"* %98, %"struct.Graph::Edge"** %15, align 8
  br label %44
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Graph::Edge"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.299
  %3 = load i32, i32* @y.300
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %12, align 8
  %13 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %11) #3
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %15 = load i32, i32* @x.299
  %16 = load i32, i32* @y.300
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"struct.Graph::Edge"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %26, align 8
  %27 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %25) #3
  %28 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %27, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES8_(%"struct.Graph::Edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  ret %"struct.Graph::Edge"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  ret %"struct.Graph::Edge"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"*, %"struct.Graph::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"struct.Graph::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  store %"struct.Graph::Edge"* %8, %"struct.Graph::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2Ev(%"class.std::vector.25"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  invoke void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2Ev(%"struct.std::_Vector_base.26"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"*, %"struct.std::less"* dereferenceable(1), %"class.std::vector.25"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::priority_queue"*, align 8
  %5 = alloca %"struct.std::less"*, align 8
  %6 = alloca %"class.std::vector.25"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %4, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %5, align 8
  store %"class.std::vector.25"* %2, %"class.std::vector.25"** %6, align 8
  %12 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.25"*, %"class.std::vector.25"** %6, align 8
  %15 = call dereferenceable(24) %"class.std::vector.25"* @_ZSt4moveIRSt6vectorIN5Graph5QInfoESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.25"* dereferenceable(24) %14) #3
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2EOS3_(%"class.std::vector.25"* %13, %"class.std::vector.25"* dereferenceable(24) %15) #3
  %16 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %17 = load %"struct.std::less"*, %"struct.std::less"** %5, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %19 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  store %"struct.Graph::QInfo"* %19, %"struct.Graph::QInfo"** %20, align 8
  %21 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %22 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %8, i32 0, i32 0
  store %"struct.Graph::QInfo"* %22, %"struct.Graph::QInfo"** %23, align 8
  %24 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  %26 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %8, i32 0, i32 0
  %28 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %27, align 8
  invoke void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"* %26, %"struct.Graph::QInfo"* %28)
          to label %29 unwind label %30

; <label>:29:                                     ; preds = %3
  ret void

; <label>:30:                                     ; preds = %3
  %31 = load i32, i32* @x.309
  %32 = load i32, i32* @y.310
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %57

; <label>:39:                                     ; preds = %30, %57
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %10, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %11, align 4
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %13) #3
  %43 = load i32, i32* @x.309
  %44 = load i32, i32* @y.310
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %57

; <label>:51:                                     ; preds = %39
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i8*, i8** %10, align 8
  %54 = load i32, i32* %11, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

; <label>:57:                                     ; preds = %39, %30
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %10, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %11, align 4
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %13) #3
  br label %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.25"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  %10 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %12, align 8
  %14 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %15 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %14) #3
  invoke void @_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E(%"struct.Graph::QInfo"* %9, %"struct.Graph::QInfo"* %13, %"class.std::allocator.27"* dereferenceable(1) %15)
          to label %16 unwind label %36

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.311
  %18 = load i32, i32* @y.312
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %43

; <label>:25:                                     ; preds = %16, %43
  %26 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EED2Ev(%"struct.std::_Vector_base.26"* %26) #3
  %27 = load i32, i32* @x.311
  %28 = load i32, i32* @y.312
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %43

; <label>:35:                                     ; preds = %25
  ret void

; <label>:36:                                     ; preds = %1
  %37 = landingpad { i8*, i32 }
          catch i8* null
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %3, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %4, align 4
  %40 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EED2Ev(%"struct.std::_Vector_base.26"* %40) #3
  br label %41

; <label>:41:                                     ; preds = %36
  %42 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %42) #10
  unreachable

; <label>:43:                                     ; preds = %25, %16
  %44 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EED2Ev(%"struct.std::_Vector_base.26"* %44) #3
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_(%"class.std::priority_queue"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::priority_queue"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %7 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %8 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %3, align 8
  %9 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %10 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %11 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %10) #3
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE9push_backEOS1_(%"class.std::vector.25"* %9, %"struct.Graph::QInfo"* dereferenceable(16) %11)
  %12 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %13 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %12) #3
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* %13, %"struct.Graph::QInfo"** %14, align 8
  %15 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 0
  %16 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %15) #3
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %6, i32 0, i32 0
  store %"struct.Graph::QInfo"* %16, %"struct.Graph::QInfo"** %17, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %8, i32 0, i32 1
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %5, i32 0, i32 0
  %20 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %19, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %6, i32 0, i32 0
  %22 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %21, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"* %20, %"struct.Graph::QInfo"* %22)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph5QInfoC2Exx(%"struct.Graph::QInfo"*, i64, i64) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %7, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = load i64, i64* %6, align 8
  %11 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %7, i32 0, i32 1
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = load i32, i32* @x.319
  %4 = load i32, i32* @y.320
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %38

; <label>:11:                                     ; preds = %2, %38
  %12 = alloca %"struct.std::pair", align 8
  %13 = alloca %"class.std::set"*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca %"struct.std::pair.37", align 8
  store %"class.std::set"* %0, %"class.std::set"** %13, align 8
  store i64* %1, i64** %14, align 8
  %16 = load %"class.std::set"*, %"class.std::set"** %13, align 8
  %17 = getelementptr inbounds %"class.std::set", %"class.std::set"* %16, i32 0, i32 0
  %18 = load i64*, i64** %14, align 8
  %19 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree"* %17, i64* dereferenceable(8) %18)
  %20 = bitcast %"struct.std::pair.37"* %15 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %21 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %20, i32 0, i32 0
  %22 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %19, 0
  store %"struct.std::_Rb_tree_node_base"* %22, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %20, i32 0, i32 1
  %24 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %19, 1
  store i8 %24, i8* %23, align 8
  %25 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %15, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %15, i32 0, i32 1
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %25, i8* dereferenceable(1) %26)
  %27 = bitcast %"struct.std::pair"* %12 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %28 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %27, align 8
  %29 = load i32, i32* @x.319
  %30 = load i32, i32* @y.320
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %11
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %28

; <label>:38:                                     ; preds = %11, %2
  %39 = alloca %"struct.std::pair", align 8
  %40 = alloca %"class.std::set"*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca %"struct.std::pair.37", align 8
  store %"class.std::set"* %0, %"class.std::set"** %40, align 8
  store i64* %1, i64** %41, align 8
  %43 = load %"class.std::set"*, %"class.std::set"** %40, align 8
  %44 = getelementptr inbounds %"class.std::set", %"class.std::set"* %43, i32 0, i32 0
  %45 = load i64*, i64** %41, align 8
  %46 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree"* %44, i64* dereferenceable(8) %45)
  %47 = bitcast %"struct.std::pair.37"* %42 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %48 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %47, i32 0, i32 0
  %49 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %46, 0
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %50 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %47, i32 0, i32 1
  %51 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %46, 1
  store i8 %51, i8* %50, align 8
  %52 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %42, i32 0, i32 1
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"* %39, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %52, i8* dereferenceable(1) %53)
  %54 = bitcast %"struct.std::pair"* %39 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %55 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %54, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE5emptyEv(%"class.std::priority_queue"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.321
  %3 = load i32, i32* @y.322
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %11, align 8
  %12 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %11, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %14 = call zeroext i1 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5emptyEv(%"class.std::vector.25"* %13) #3
  %15 = load i32, i32* @x.321
  %16 = load i32, i32* @y.322
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret i1 %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %25, align 8
  %26 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %25, align 8
  %27 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %26, i32 0, i32 0
  %28 = call zeroext i1 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5emptyEv(%"class.std::vector.25"* %27) #3
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv(%"class.std::priority_queue"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.323
  %3 = load i32, i32* @y.324
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %11, align 8
  %12 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %11, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %14 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5frontEv(%"class.std::vector.25"* %13) #3
  %15 = load i32, i32* @x.323
  %16 = load i32, i32* @y.324
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"struct.Graph::QInfo"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %25, align 8
  %26 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %25, align 8
  %27 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %26, i32 0, i32 0
  %28 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5frontEv(%"class.std::vector.25"* %27) #3
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3popEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.325
  %3 = load i32, i32* @y.326
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %37

; <label>:10:                                     ; preds = %1, %37
  %11 = alloca %"class.std::priority_queue"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %14 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %11, align 8
  %15 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %11, align 8
  %16 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %15, i32 0, i32 0
  %17 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %16) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %12, i32 0, i32 0
  store %"struct.Graph::QInfo"* %17, %"struct.Graph::QInfo"** %18, align 8
  %19 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %15, i32 0, i32 0
  %20 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %19) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  store %"struct.Graph::QInfo"* %20, %"struct.Graph::QInfo"** %21, align 8
  %22 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %15, i32 0, i32 1
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %12, i32 0, i32 0
  %24 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %23, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  %26 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %25, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"* %24, %"struct.Graph::QInfo"* %26)
  %27 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %15, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE8pop_backEv(%"class.std::vector.25"* %27) #3
  %28 = load i32, i32* @x.325
  %29 = load i32, i32* @y.326
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %10
  ret void

; <label>:37:                                     ; preds = %10, %1
  %38 = alloca %"class.std::priority_queue"*, align 8
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %41 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %38, align 8
  %42 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %38, align 8
  %43 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %42, i32 0, i32 0
  %44 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %43) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %39, i32 0, i32 0
  store %"struct.Graph::QInfo"* %44, %"struct.Graph::QInfo"** %45, align 8
  %46 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %42, i32 0, i32 0
  %47 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %46) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %40, i32 0, i32 0
  store %"struct.Graph::QInfo"* %47, %"struct.Graph::QInfo"** %48, align 8
  %49 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %42, i32 0, i32 1
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %39, i32 0, i32 0
  %51 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %50, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %40, i32 0, i32 0
  %53 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %52, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"* %51, %"struct.Graph::QInfo"* %53)
  %54 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %42, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE8pop_backEv(%"class.std::vector.25"* %54) #3
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Graph4NodeC2ERKS0_(%"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %6 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %8 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  %10 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 1
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %12 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %11, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.18"* %10, %"class.std::vector.18"* dereferenceable(24) %12)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt3setIxSt4lessIxESaIxEE5eraseERKx(%"class.std::set"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = load i32, i32* @x.329
  %4 = load i32, i32* @y.330
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %27

; <label>:11:                                     ; preds = %2, %27
  %12 = alloca %"class.std::set"*, align 8
  %13 = alloca i64*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %12, align 8
  store i64* %1, i64** %13, align 8
  %14 = load %"class.std::set"*, %"class.std::set"** %12, align 8
  %15 = getelementptr inbounds %"class.std::set", %"class.std::set"* %14, i32 0, i32 0
  %16 = load i64*, i64** %13, align 8
  %17 = call i64 @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseERKx(%"class.std::_Rb_tree"* %15, i64* dereferenceable(8) %16)
  %18 = load i32, i32* @x.329
  %19 = load i32, i32* @y.330
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %11
  ret i64 %17

; <label>:27:                                     ; preds = %11, %2
  %28 = alloca %"class.std::set"*, align 8
  %29 = alloca i64*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load %"class.std::set"*, %"class.std::set"** %28, align 8
  %31 = getelementptr inbounds %"class.std::set", %"class.std::set"* %30, i32 0, i32 0
  %32 = load i64*, i64** %29, align 8
  %33 = call i64 @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseERKx(%"class.std::_Rb_tree"* %31, i64* dereferenceable(8) %32)
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIxSt4lessIxESaIxEE4findERKx(%"class.std::set"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = load i32, i32* @x.331
  %4 = load i32, i32* @y.332
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %32

; <label>:11:                                     ; preds = %2, %32
  %12 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %13 = alloca %"class.std::set"*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::set"* %0, %"class.std::set"** %13, align 8
  store i64* %1, i64** %14, align 8
  %16 = load %"class.std::set"*, %"class.std::set"** %13, align 8
  %17 = getelementptr inbounds %"class.std::set", %"class.std::set"* %16, i32 0, i32 0
  %18 = load i64*, i64** %14, align 8
  %19 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4findERKx(%"class.std::_Rb_tree"* %17, i64* dereferenceable(8) %18)
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %15, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %19, %"struct.std::_Rb_tree_node_base"** %20, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %12, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %15) #3
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %12, i32 0, i32 0
  %22 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = load i32, i32* @x.331
  %24 = load i32, i32* @y.332
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %11
  ret %"struct.std::_Rb_tree_node_base"* %22

; <label>:32:                                     ; preds = %11, %2
  %33 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %34 = alloca %"class.std::set"*, align 8
  %35 = alloca i64*, align 8
  %36 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::set"* %0, %"class.std::set"** %34, align 8
  store i64* %1, i64** %35, align 8
  %37 = load %"class.std::set"*, %"class.std::set"** %34, align 8
  %38 = getelementptr inbounds %"class.std::set", %"class.std::set"* %37, i32 0, i32 0
  %39 = load i64*, i64** %35, align 8
  %40 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4findERKx(%"class.std::_Rb_tree"* %38, i64* dereferenceable(8) %39)
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %36, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %40, %"struct.std::_Rb_tree_node_base"** %41, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %33, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %36) #3
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %33, i32 0, i32 0
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIxSt4lessIxESaIxEE3endEv(%"class.std::set"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  %4 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.339
  %3 = load i32, i32* @y.340
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %1, %23
  %11 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %11, align 8
  %12 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %11, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %13) #3
  %14 = load i32, i32* @x.339
  %15 = load i32, i32* @y.340
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %10
  ret void

; <label>:23:                                     ; preds = %10, %1
  %24 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %24, align 8
  %25 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %24, align 8
  %26 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %25, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %26) #3
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2Ev(%"struct.std::_Vector_base.26"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %2, align 8
  %3 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.343
  %3 = load i32, i32* @y.344
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %26

; <label>:10:                                     ; preds = %1, %26
  %11 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %11, align 8
  %12 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %11, align 8
  %13 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %12 to %"class.std::allocator.27"*
  call void @_ZNSaIN5Graph5QInfoEEC2Ev(%"class.std::allocator.27"* %13) #3
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %12, i32 0, i32 0
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %12, i32 0, i32 1
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %15, align 8
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %12, i32 0, i32 2
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %16, align 8
  %17 = load i32, i32* @x.343
  %18 = load i32, i32* @y.344
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %10
  ret void

; <label>:26:                                     ; preds = %10, %1
  %27 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %28 to %"class.std::allocator.27"*
  call void @_ZNSaIN5Graph5QInfoEEC2Ev(%"class.std::allocator.27"* %29) #3
  %30 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %28, i32 0, i32 0
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %28, i32 0, i32 1
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %28, i32 0, i32 2
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %32, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph5QInfoEEC2Ev(%"class.std::allocator.27"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  %4 = bitcast %"class.std::allocator.27"* %3 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2Ev(%"class.__gnu_cxx::new_allocator.28"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.347
  %3 = load i32, i32* @y.348
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %11, align 8
  %12 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %11, align 8
  %13 = load i32, i32* @x.347
  %14 = load i32, i32* @y.348
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret void

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %23, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.25"* @_ZSt4moveIRSt6vectorIN5Graph5QInfoESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.25"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  ret %"class.std::vector.25"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2EOS3_(%"class.std::vector.25"*, %"class.std::vector.25"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.351
  %4 = load i32, i32* @y.352
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %2, %28
  %12 = alloca %"class.std::vector.25"*, align 8
  %13 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %12, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %13, align 8
  %14 = load %"class.std::vector.25"*, %"class.std::vector.25"** %12, align 8
  %15 = bitcast %"class.std::vector.25"* %14 to %"struct.std::_Vector_base.26"*
  %16 = load %"class.std::vector.25"*, %"class.std::vector.25"** %13, align 8
  %17 = call dereferenceable(24) %"class.std::vector.25"* @_ZSt4moveIRSt6vectorIN5Graph5QInfoESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.25"* dereferenceable(24) %16) #3
  %18 = bitcast %"class.std::vector.25"* %17 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.26"* %15, %"struct.std::_Vector_base.26"* dereferenceable(24) %18) #3
  %19 = load i32, i32* @x.351
  %20 = load i32, i32* @y.352
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %11
  ret void

; <label>:28:                                     ; preds = %11, %2
  %29 = alloca %"class.std::vector.25"*, align 8
  %30 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %29, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %30, align 8
  %31 = load %"class.std::vector.25"*, %"class.std::vector.25"** %29, align 8
  %32 = bitcast %"class.std::vector.25"* %31 to %"struct.std::_Vector_base.26"*
  %33 = load %"class.std::vector.25"*, %"class.std::vector.25"** %30, align 8
  %34 = call dereferenceable(24) %"class.std::vector.25"* @_ZSt4moveIRSt6vectorIN5Graph5QInfoESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.25"* dereferenceable(24) %33) #3
  %35 = bitcast %"class.std::vector.25"* %34 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.26"* %32, %"struct.std::_Vector_base.26"* dereferenceable(24) %35) #3
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = load i32, i32* @x.353
  %4 = load i32, i32* @y.354
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %39

; <label>:11:                                     ; preds = %2, %39
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %14 = alloca %"struct.std::less", align 1
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %17 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %18 = alloca %"struct.std::less", align 1
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %12, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %20, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %15 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %16 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_()
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  %27 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %16, i32 0, i32 0
  %29 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %28, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_(%"struct.Graph::QInfo"* %27, %"struct.Graph::QInfo"* %29)
  %30 = load i32, i32* @x.353
  %31 = load i32, i32* @y.354
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %39

; <label>:38:                                     ; preds = %11
  ret void

; <label>:39:                                     ; preds = %11, %2
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %42 = alloca %"struct.std::less", align 1
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %45 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %46 = alloca %"struct.std::less", align 1
  %47 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %40, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %41, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %49, align 8
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %43 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %44 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_()
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %43, i32 0, i32 0
  %55 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %44, i32 0, i32 0
  %57 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %56, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_(%"struct.Graph::QInfo"* %55, %"struct.Graph::QInfo"* %57)
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %3 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  %4 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %5 = bitcast %"class.std::vector.25"* %4 to %"struct.std::_Vector_base.26"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %2, %"struct.Graph::QInfo"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  ret %"struct.Graph::QInfo"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %3 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  %4 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %5 = bitcast %"class.std::vector.25"* %4 to %"struct.std::_Vector_base.26"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %2, %"struct.Graph::QInfo"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  ret %"struct.Graph::QInfo"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.359
  %4 = load i32, i32* @y.360
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %31

; <label>:11:                                     ; preds = %2, %31
  %12 = alloca %"struct.std::_Vector_base.26"*, align 8
  %13 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %12, align 8
  store %"struct.std::_Vector_base.26"* %1, %"struct.std::_Vector_base.26"** %13, align 8
  %14 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %12, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %14, i32 0, i32 0
  %16 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %13, align 8
  %17 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %16) #3
  %18 = call dereferenceable(1) %"class.std::allocator.27"* @_ZSt4moveIRSaIN5Graph5QInfoEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.27"* dereferenceable(1) %17) #3
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %15, %"class.std::allocator.27"* dereferenceable(1) %18) #3
  %19 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %14, i32 0, i32 0
  %20 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %13, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %19, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* dereferenceable(24) %21) #3
  %22 = load i32, i32* @x.359
  %23 = load i32, i32* @y.360
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %11
  ret void

; <label>:31:                                     ; preds = %11, %2
  %32 = alloca %"struct.std::_Vector_base.26"*, align 8
  %33 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %32, align 8
  store %"struct.std::_Vector_base.26"* %1, %"struct.std::_Vector_base.26"** %33, align 8
  %34 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %32, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %34, i32 0, i32 0
  %36 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %33, align 8
  %37 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %36) #3
  %38 = call dereferenceable(1) %"class.std::allocator.27"* @_ZSt4moveIRSaIN5Graph5QInfoEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.27"* dereferenceable(1) %37) #3
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %35, %"class.std::allocator.27"* dereferenceable(1) %38) #3
  %39 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %34, i32 0, i32 0
  %40 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %33, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %39, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* dereferenceable(24) %41) #3
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.27"* @_ZSt4moveIRSaIN5Graph5QInfoEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.27"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  ret %"class.std::allocator.27"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.363
  %3 = load i32, i32* @y.364
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %11, align 8
  %12 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %13 to %"class.std::allocator.27"*
  %15 = load i32, i32* @x.363
  %16 = load i32, i32* @y.364
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"class.std::allocator.27"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %25, align 8
  %26 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %27 to %"class.std::allocator.27"*
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"class.std::allocator.27"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.27"*, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.27"* %1, %"class.std::allocator.27"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5 to %"class.std::allocator.27"*
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.27"* @_ZSt4moveIRSaIN5Graph5QInfoEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.27"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5Graph5QInfoEEC2ERKS1_(%"class.std::allocator.27"* %6, %"class.std::allocator.27"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN5Graph5QInfoEEvRT_S4_(%"struct.Graph::QInfo"** dereferenceable(8) %6, %"struct.Graph::QInfo"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN5Graph5QInfoEEvRT_S4_(%"struct.Graph::QInfo"** dereferenceable(8) %9, %"struct.Graph::QInfo"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN5Graph5QInfoEEvRT_S4_(%"struct.Graph::QInfo"** dereferenceable(8) %12, %"struct.Graph::QInfo"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph5QInfoEEC2ERKS1_(%"class.std::allocator.27"*, %"class.std::allocator.27"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.27"*, align 8
  %4 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %3, align 8
  store %"class.std::allocator.27"* %1, %"class.std::allocator.27"** %4, align 8
  %5 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %3, align 8
  %6 = bitcast %"class.std::allocator.27"* %5 to %"class.__gnu_cxx::new_allocator.28"*
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  %8 = bitcast %"class.std::allocator.27"* %7 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.28"* %6, %"class.__gnu_cxx::new_allocator.28"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.371
  %4 = load i32, i32* @y.372
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %24

; <label>:11:                                     ; preds = %2, %24
  %12 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %13 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %12, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %1, %"class.__gnu_cxx::new_allocator.28"** %13, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %12, align 8
  %15 = load i32, i32* @x.371
  %16 = load i32, i32* @y.372
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %11
  ret void

; <label>:24:                                     ; preds = %11, %2
  %25 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %26 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %25, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %1, %"class.__gnu_cxx::new_allocator.28"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %25, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN5Graph5QInfoEEvRT_S4_(%"struct.Graph::QInfo"** dereferenceable(8), %"struct.Graph::QInfo"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.Graph::QInfo"**, align 8
  %4 = alloca %"struct.Graph::QInfo"**, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"** %0, %"struct.Graph::QInfo"*** %3, align 8
  store %"struct.Graph::QInfo"** %1, %"struct.Graph::QInfo"*** %4, align 8
  %6 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::QInfo"** dereferenceable(8) %6) #3
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  store %"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"** %5, align 8
  %9 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::QInfo"** dereferenceable(8) %9) #3
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %10, align 8
  %12 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %3, align 8
  store %"struct.Graph::QInfo"* %11, %"struct.Graph::QInfo"** %12, align 8
  %13 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::QInfo"** dereferenceable(8) %5) #3
  %14 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %13, align 8
  %15 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %4, align 8
  store %"struct.Graph::QInfo"* %14, %"struct.Graph::QInfo"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::QInfo"** @_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::QInfo"** dereferenceable(8)) #5 comdat {
  %2 = load i32, i32* @x.375
  %3 = load i32, i32* @y.376
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"struct.Graph::QInfo"**, align 8
  store %"struct.Graph::QInfo"** %0, %"struct.Graph::QInfo"*** %11, align 8
  %12 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %11, align 8
  %13 = load i32, i32* @x.375
  %14 = load i32, i32* @y.376
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret %"struct.Graph::QInfo"** %12

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"struct.Graph::QInfo"**, align 8
  store %"struct.Graph::QInfo"** %0, %"struct.Graph::QInfo"*** %23, align 8
  %24 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.Graph::QInfo", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %11 = alloca %"struct.Graph::QInfo", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %3, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %14, align 8
  %15 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %3) #3
  %16 = icmp slt i64 %15, 2
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %2
  br label %89

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* @x.377
  %20 = load i32, i32* @y.378
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %90

; <label>:27:                                     ; preds = %18, %90
  %28 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %3) #3
  store i64 %28, i64* %6, align 8
  %29 = load i64, i64* %6, align 8
  %30 = sub nsw i64 %29, 2
  %31 = sdiv i64 %30, 2
  store i64 %31, i64* %7, align 8
  %32 = load i32, i32* @x.377
  %33 = load i32, i32* @y.378
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %90

; <label>:40:                                     ; preds = %27
  br label %41

; <label>:41:                                     ; preds = %40, %86
  %42 = load i64, i64* %7, align 8
  %43 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %3, i64 %42) #3
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %9, i32 0, i32 0
  store %"struct.Graph::QInfo"* %43, %"struct.Graph::QInfo"** %44, align 8
  %45 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %9) #3
  %46 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %45) #3
  %47 = bitcast %"struct.Graph::QInfo"* %8 to i8*
  %48 = bitcast %"struct.Graph::QInfo"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false)
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %10 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load i64, i64* %7, align 8
  %52 = load i64, i64* %6, align 8
  %53 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %8) #3
  %54 = bitcast %"struct.Graph::QInfo"* %11 to i8*
  %55 = bitcast %"struct.Graph::QInfo"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 16, i32 8, i1 false)
  %56 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %12 to i8*
  %57 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 1, i32 1, i1 false)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %10, i32 0, i32 0
  %59 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %58, align 8
  %60 = bitcast %"struct.Graph::QInfo"* %11 to { i64, i64 }*
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"* %59, i64 %51, i64 %52, i64 %62, i64 %64)
  %65 = load i64, i64* %7, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %86

; <label>:67:                                     ; preds = %41
  %68 = load i32, i32* @x.377
  %69 = load i32, i32* @y.378
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %76, label %112

; <label>:76:                                     ; preds = %67, %112
  %77 = load i32, i32* @x.377
  %78 = load i32, i32* @y.378
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %85, label %112

; <label>:85:                                     ; preds = %76
  br label %89

; <label>:86:                                     ; preds = %41
  %87 = load i64, i64* %7, align 8
  %88 = add nsw i64 %87, -1
  store i64 %88, i64* %7, align 8
  br label %41

; <label>:89:                                     ; preds = %85, %17
  ret void

; <label>:90:                                     ; preds = %27, %18
  %91 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %3) #3
  store i64 %91, i64* %6, align 8
  %92 = load i64, i64* %6, align 8
  %93 = sub i64 0, %92
  %94 = add i64 %93, 2
  %95 = shl i64 %92, 2
  %96 = sub i64 %92, 2
  %97 = mul i64 %96, 2
  %98 = sub i64 %92, 2
  %99 = mul i64 %98, 2
  %100 = sub i64 %92, 2
  %101 = mul i64 %100, 2
  %102 = sub i64 %92, 2
  %103 = mul i64 %102, 2
  %104 = sub i64 0, %92
  %105 = add i64 %104, 2
  %106 = sub nsw i64 %92, 2
  %107 = shl i64 %106, 2
  %108 = shl i64 %106, 2
  %109 = sub i64 0, %106
  %110 = add i64 %109, 2
  %111 = sdiv i64 %106, 2
  store i64 %111, i64* %7, align 8
  br label %27

; <label>:112:                                    ; preds = %76, %67
  br label %76
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %1, %"class.__gnu_cxx::__normal_iterator.35"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.35"* %5) #3
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.35"* %8) #3
  %10 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %9, align 8
  %11 = ptrtoint %"struct.Graph::QInfo"* %7 to i64
  %12 = ptrtoint %"struct.Graph::QInfo"* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 16
  ret i64 %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat {
  %2 = load i32, i32* @x.383
  %3 = load i32, i32* @y.384
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %11, align 8
  %12 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %11, align 8
  %13 = load i32, i32* @x.383
  %14 = load i32, i32* @y.384
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret %"struct.Graph::QInfo"* %12

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %23, align 8
  %24 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %23, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"*, i64) #5 comdat align 2 {
  %3 = load i32, i32* @x.385
  %4 = load i32, i32* @y.386
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %32

; <label>:11:                                     ; preds = %2, %32
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %13, align 8
  store i64 %1, i64* %14, align 8
  %16 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %13, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %16, i32 0, i32 0
  %18 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %17, align 8
  %19 = load i64, i64* %14, align 8
  %20 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %18, i64 %19
  store %"struct.Graph::QInfo"* %20, %"struct.Graph::QInfo"** %15, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %12, %"struct.Graph::QInfo"** dereferenceable(8) %15) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %12, i32 0, i32 0
  %22 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %21, align 8
  %23 = load i32, i32* @x.385
  %24 = load i32, i32* @y.386
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %11
  ret %"struct.Graph::QInfo"* %22

; <label>:32:                                     ; preds = %11, %2
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %35 = alloca i64, align 8
  %36 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %34, align 8
  store i64 %1, i64* %35, align 8
  %37 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %34, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %37, i32 0, i32 0
  %39 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %38, align 8
  %40 = load i64, i64* %35, align 8
  %41 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %39, i64 %40
  store %"struct.Graph::QInfo"* %41, %"struct.Graph::QInfo"** %36, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %33, %"struct.Graph::QInfo"** dereferenceable(8) %36) #3
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %33, i32 0, i32 0
  %43 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %42, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.387
  %3 = load i32, i32* @y.388
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %11, align 8
  %12 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %11, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %13, align 8
  %15 = load i32, i32* @x.387
  %16 = load i32, i32* @y.388
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"struct.Graph::QInfo"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %25, align 8
  %26 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %26, i32 0, i32 0
  %28 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %27, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %7 = alloca %"struct.Graph::QInfo", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %20 = alloca %"struct.Graph::QInfo", align 8
  %21 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %22 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %23 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %6, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %24, align 8
  %25 = bitcast %"struct.Graph::QInfo"* %7 to { i64, i64 }*
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 0
  store i64 %3, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 1
  store i64 %4, i64* %27, align 8
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  %28 = load i64, i64* %9, align 8
  store i64 %28, i64* %11, align 8
  %29 = load i64, i64* %9, align 8
  store i64 %29, i64* %12, align 8
  br label %30

; <label>:30:                                     ; preds = %73, %5
  %31 = load i64, i64* %12, align 8
  %32 = load i64, i64* %10, align 8
  %33 = sub nsw i64 %32, 1
  %34 = sdiv i64 %33, 2
  %35 = icmp slt i64 %31, %34
  br i1 %35, label %36, label %86

; <label>:36:                                     ; preds = %30
  %37 = load i32, i32* @x.389
  %38 = load i32, i32* @y.390
  %39 = sub i32 %37, 1
  %40 = mul i32 %37, %39
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %149

; <label>:45:                                     ; preds = %36, %149
  %46 = load i64, i64* %12, align 8
  %47 = add nsw i64 %46, 1
  %48 = mul nsw i64 2, %47
  store i64 %48, i64* %12, align 8
  %49 = load i64, i64* %12, align 8
  %50 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %49) #3
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  store %"struct.Graph::QInfo"* %50, %"struct.Graph::QInfo"** %51, align 8
  %52 = load i64, i64* %12, align 8
  %53 = sub nsw i64 %52, 1
  %54 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %53) #3
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  store %"struct.Graph::QInfo"* %54, %"struct.Graph::QInfo"** %55, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  %57 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  %59 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %58, align 8
  %60 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %8, %"struct.Graph::QInfo"* %57, %"struct.Graph::QInfo"* %59)
  %61 = load i32, i32* @x.389
  %62 = load i32, i32* @y.390
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %69, label %149

; <label>:69:                                     ; preds = %45
  br i1 %60, label %70, label %73

; <label>:70:                                     ; preds = %69
  %71 = load i64, i64* %12, align 8
  %72 = add nsw i64 %71, -1
  store i64 %72, i64* %12, align 8
  br label %73

; <label>:73:                                     ; preds = %70, %69
  %74 = load i64, i64* %12, align 8
  %75 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %74) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  store %"struct.Graph::QInfo"* %75, %"struct.Graph::QInfo"** %76, align 8
  %77 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %15) #3
  %78 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %77) #3
  %79 = load i64, i64* %9, align 8
  %80 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %79) #3
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %16, i32 0, i32 0
  store %"struct.Graph::QInfo"* %80, %"struct.Graph::QInfo"** %81, align 8
  %82 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %16) #3
  %83 = bitcast %"struct.Graph::QInfo"* %82 to i8*
  %84 = bitcast %"struct.Graph::QInfo"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 16, i32 8, i1 false)
  %85 = load i64, i64* %12, align 8
  store i64 %85, i64* %9, align 8
  br label %30

; <label>:86:                                     ; preds = %30
  %87 = load i64, i64* %10, align 8
  %88 = and i64 %87, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %132

; <label>:90:                                     ; preds = %86
  %91 = load i32, i32* @x.389
  %92 = load i32, i32* @y.390
  %93 = sub i32 %91, 1
  %94 = mul i32 %91, %93
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %96, %97
  br i1 %98, label %99, label %185

; <label>:99:                                     ; preds = %90, %185
  %100 = load i64, i64* %12, align 8
  %101 = load i64, i64* %10, align 8
  %102 = sub nsw i64 %101, 2
  %103 = sdiv i64 %102, 2
  %104 = icmp eq i64 %100, %103
  %105 = load i32, i32* @x.389
  %106 = load i32, i32* @y.390
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %113, label %185

; <label>:113:                                    ; preds = %99
  br i1 %104, label %114, label %132

; <label>:114:                                    ; preds = %113
  %115 = load i64, i64* %12, align 8
  %116 = add nsw i64 %115, 1
  %117 = mul nsw i64 2, %116
  store i64 %117, i64* %12, align 8
  %118 = load i64, i64* %12, align 8
  %119 = sub nsw i64 %118, 1
  %120 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %119) #3
  %121 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %17, i32 0, i32 0
  store %"struct.Graph::QInfo"* %120, %"struct.Graph::QInfo"** %121, align 8
  %122 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %17) #3
  %123 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %122) #3
  %124 = load i64, i64* %9, align 8
  %125 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %124) #3
  %126 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %18, i32 0, i32 0
  store %"struct.Graph::QInfo"* %125, %"struct.Graph::QInfo"** %126, align 8
  %127 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %18) #3
  %128 = bitcast %"struct.Graph::QInfo"* %127 to i8*
  %129 = bitcast %"struct.Graph::QInfo"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 16, i32 8, i1 false)
  %130 = load i64, i64* %12, align 8
  %131 = sub nsw i64 %130, 1
  store i64 %131, i64* %9, align 8
  br label %132

; <label>:132:                                    ; preds = %114, %113, %86
  %133 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %19 to i8*
  %134 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 8, i32 8, i1 false)
  %135 = load i64, i64* %9, align 8
  %136 = load i64, i64* %11, align 8
  %137 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %7) #3
  %138 = bitcast %"struct.Graph::QInfo"* %20 to i8*
  %139 = bitcast %"struct.Graph::QInfo"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 16, i32 8, i1 false)
  %140 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %22 to i8*
  %141 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE()
  %142 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %19, i32 0, i32 0
  %143 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %142, align 8
  %144 = bitcast %"struct.Graph::QInfo"* %20 to { i64, i64 }*
  %145 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %144, i32 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %144, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"* %143, i64 %135, i64 %136, i64 %146, i64 %148)
  ret void

; <label>:149:                                    ; preds = %45, %36
  %150 = load i64, i64* %12, align 8
  %151 = sub i64 0, %150
  %152 = add i64 %151, 1
  %153 = sub i64 0, %150
  %154 = add i64 %153, 1
  %155 = sub i64 0, %150
  %156 = add i64 %155, 1
  %157 = sub i64 %150, 1
  %158 = mul i64 %157, 1
  %159 = shl i64 %150, 1
  %160 = sub i64 %150, 1
  %161 = mul i64 %160, 1
  %162 = shl i64 %150, 1
  %163 = sub i64 0, %150
  %164 = add i64 %163, 1
  %165 = add nsw i64 %150, 1
  %166 = mul nsw i64 2, %165
  store i64 %166, i64* %12, align 8
  %167 = load i64, i64* %12, align 8
  %168 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %167) #3
  %169 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  store %"struct.Graph::QInfo"* %168, %"struct.Graph::QInfo"** %169, align 8
  %170 = load i64, i64* %12, align 8
  %171 = sub i64 0, %170
  %172 = add i64 %171, 1
  %173 = sub i64 %170, 1
  %174 = mul i64 %173, 1
  %175 = sub i64 0, %170
  %176 = add i64 %175, 1
  %177 = sub nsw i64 %170, 1
  %178 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %177) #3
  %179 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  store %"struct.Graph::QInfo"* %178, %"struct.Graph::QInfo"** %179, align 8
  %180 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  %181 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %180, align 8
  %182 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  %183 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %182, align 8
  %184 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %8, %"struct.Graph::QInfo"* %181, %"struct.Graph::QInfo"* %183)
  br label %45

; <label>:185:                                    ; preds = %99, %90
  %186 = load i64, i64* %12, align 8
  %187 = load i64, i64* %10, align 8
  %188 = sub i64 0, %187
  %189 = add i64 %188, 2
  %190 = sub i64 0, %187
  %191 = add i64 %190, 2
  %192 = sub i64 %187, 2
  %193 = mul i64 %192, 2
  %194 = sub i64 0, %187
  %195 = add i64 %194, 2
  %196 = sub i64 %187, 2
  %197 = mul i64 %196, 2
  %198 = sub i64 %187, 2
  %199 = mul i64 %198, 2
  %200 = sub i64 0, %187
  %201 = add i64 %200, 2
  %202 = sub nsw i64 %187, 2
  %203 = sub i64 %202, 2
  %204 = mul i64 %203, 2
  %205 = sub i64 0, %202
  %206 = add i64 %205, 2
  %207 = sub i64 %202, 2
  %208 = mul i64 %207, 2
  %209 = sub i64 0, %202
  %210 = add i64 %209, 2
  %211 = sub i64 %202, 2
  %212 = mul i64 %211, 2
  %213 = shl i64 %202, 2
  %214 = sdiv i64 %202, 2
  %215 = icmp eq i64 %186, %214
  br label %99
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.35"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.391
  %3 = load i32, i32* @y.392
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %1, %23
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %11, align 8
  %12 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %11, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %12, i32 0, i32 0
  %14 = load i32, i32* @x.391
  %15 = load i32, i32* @y.392
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %10
  ret %"struct.Graph::QInfo"** %13

; <label>:23:                                     ; preds = %10, %1
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %24, align 8
  %25 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %24, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %25, i32 0, i32 0
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"*, %"struct.Graph::QInfo"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %4 = alloca %"struct.Graph::QInfo"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %3, align 8
  store %"struct.Graph::QInfo"** %1, %"struct.Graph::QInfo"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  store %"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %10 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, i32 0, i32 0
  %11 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %4) #3
  %12 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %5) #3
  %13 = call zeroext i1 @_ZNKSt4lessIN5Graph5QInfoEEclERKS1_S4_(%"struct.std::less"* %10, %"struct.Graph::QInfo"* dereferenceable(16) %11, %"struct.Graph::QInfo"* dereferenceable(16) %12)
  ret i1 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %7 = alloca %"struct.Graph::QInfo", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %6, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %16, align 8
  %17 = bitcast %"struct.Graph::QInfo"* %7 to { i64, i64 }*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %3, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %4, i64* %19, align 8
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  %20 = load i64, i64* %9, align 8
  %21 = sub nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  store i64 %22, i64* %11, align 8
  br label %23

; <label>:23:                                     ; preds = %36, %5
  %24 = load i64, i64* %9, align 8
  %25 = load i64, i64* %10, align 8
  %26 = icmp sgt i64 %24, %25
  br i1 %26, label %27, label %34

; <label>:27:                                     ; preds = %23
  %28 = load i64, i64* %11, align 8
  %29 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %12, i32 0, i32 0
  store %"struct.Graph::QInfo"* %29, %"struct.Graph::QInfo"** %30, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %12, i32 0, i32 0
  %32 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %31, align 8
  %33 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, %"struct.Graph::QInfo"* %32, %"struct.Graph::QInfo"* dereferenceable(16) %7)
  br label %34

; <label>:34:                                     ; preds = %27, %23
  %35 = phi i1 [ false, %23 ], [ %33, %27 ]
  br i1 %35, label %36, label %52

; <label>:36:                                     ; preds = %34
  %37 = load i64, i64* %11, align 8
  %38 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %37) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  store %"struct.Graph::QInfo"* %38, %"struct.Graph::QInfo"** %39, align 8
  %40 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %13) #3
  %41 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %40) #3
  %42 = load i64, i64* %9, align 8
  %43 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %42) #3
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  store %"struct.Graph::QInfo"* %43, %"struct.Graph::QInfo"** %44, align 8
  %45 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %14) #3
  %46 = bitcast %"struct.Graph::QInfo"* %45 to i8*
  %47 = bitcast %"struct.Graph::QInfo"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false)
  %48 = load i64, i64* %11, align 8
  store i64 %48, i64* %9, align 8
  %49 = load i64, i64* %9, align 8
  %50 = sub nsw i64 %49, 1
  %51 = sdiv i64 %50, 2
  store i64 %51, i64* %11, align 8
  br label %23

; <label>:52:                                     ; preds = %34
  %53 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %7) #3
  %54 = load i64, i64* %9, align 8
  %55 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %6, i64 %54) #3
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  store %"struct.Graph::QInfo"* %55, %"struct.Graph::QInfo"** %56, align 8
  %57 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %15) #3
  %58 = bitcast %"struct.Graph::QInfo"* %57 to i8*
  %59 = bitcast %"struct.Graph::QInfo"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %"struct.std::less", align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIN5Graph5QInfoEEclERKS1_S4_(%"struct.std::less"*, %"struct.Graph::QInfo"* dereferenceable(16), %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"struct.std::less"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %10 = call zeroext i1 @_ZNK5Graph5QInfoltERKS0_(%"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"* dereferenceable(16) %9)
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK5Graph5QInfoltERKS0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat align 2 {
  %3 = load i32, i32* @x.403
  %4 = load i32, i32* @y.404
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %30

; <label>:11:                                     ; preds = %2, %30
  %12 = alloca %"struct.Graph::QInfo"*, align 8
  %13 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %12, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %13, align 8
  %14 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %12, align 8
  %15 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %14, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %13, align 8
  %18 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp sgt i64 %16, %19
  %21 = load i32, i32* @x.403
  %22 = load i32, i32* @y.404
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %11
  ret i1 %20

; <label>:30:                                     ; preds = %11, %2
  %31 = alloca %"struct.Graph::QInfo"*, align 8
  %32 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %31, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %32, align 8
  %33 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %31, align 8
  %34 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %33, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %32, align 8
  %37 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %36, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp sgt i64 %35, %38
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  %9 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, i32 0, i32 0
  %10 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %4) #3
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %12 = call zeroext i1 @_ZNKSt4lessIN5Graph5QInfoEEclERKS1_S4_(%"struct.std::less"* %9, %"struct.Graph::QInfo"* dereferenceable(16) %10, %"struct.Graph::QInfo"* dereferenceable(16) %11)
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"class.std::allocator.27"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca %"class.std::allocator.27"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store %"class.std::allocator.27"* %2, %"class.std::allocator.27"** %6, align 8
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  call void @_ZSt8_DestroyIPN5Graph5QInfoEEvT_S3_(%"struct.Graph::QInfo"* %7, %"struct.Graph::QInfo"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EED2Ev(%"struct.std::_Vector_base.26"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.413
  %3 = load i32, i32* @y.414
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %64

; <label>:10:                                     ; preds = %1, %64
  %11 = alloca %"struct.std::_Vector_base.26"*, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %11, align 8
  %14 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %11, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %14, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %18, i32 0, i32 2
  %20 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %14, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %22, align 8
  %24 = ptrtoint %"struct.Graph::QInfo"* %20 to i64
  %25 = ptrtoint %"struct.Graph::QInfo"* %23 to i64
  %26 = sub i64 %24, %25
  %27 = sdiv exact i64 %26, 16
  %28 = load i32, i32* @x.413
  %29 = load i32, i32* @y.414
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %64

; <label>:36:                                     ; preds = %10
  invoke void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %14, %"struct.Graph::QInfo"* %17, i64 %27)
          to label %37 unwind label %57

; <label>:37:                                     ; preds = %36
  %38 = load i32, i32* @x.413
  %39 = load i32, i32* @y.414
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %93

; <label>:46:                                     ; preds = %37, %93
  %47 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %47) #3
  %48 = load i32, i32* @x.413
  %49 = load i32, i32* @y.414
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %56, label %93

; <label>:56:                                     ; preds = %46
  ret void

; <label>:57:                                     ; preds = %36
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %12, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %13, align 4
  %61 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %61) #3
  br label %62

; <label>:62:                                     ; preds = %57
  %63 = load i8*, i8** %12, align 8
  call void @__clang_call_terminate(i8* %63) #10
  unreachable

; <label>:64:                                     ; preds = %10, %1
  %65 = alloca %"struct.std::_Vector_base.26"*, align 8
  %66 = alloca i8*
  %67 = alloca i32
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %65, align 8
  %68 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %65, align 8
  %69 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %69, i32 0, i32 0
  %71 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %68, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %72, i32 0, i32 2
  %74 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %68, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %75, i32 0, i32 0
  %77 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %76, align 8
  %78 = ptrtoint %"struct.Graph::QInfo"* %74 to i64
  %79 = ptrtoint %"struct.Graph::QInfo"* %77 to i64
  %80 = sub i64 0, %78
  %81 = add i64 %80, %79
  %82 = sub i64 0, %78
  %83 = add i64 %82, %79
  %84 = sub i64 0, %78
  %85 = add i64 %84, %79
  %86 = shl i64 %78, %79
  %87 = sub i64 %78, %79
  %88 = sub i64 0, %87
  %89 = add i64 %88, 16
  %90 = sub i64 0, %87
  %91 = add i64 %90, 16
  %92 = sdiv exact i64 %87, 16
  br label %10

; <label>:93:                                     ; preds = %46, %37
  %94 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %94) #3
  br label %46
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph5QInfoEEvT_S3_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = load i32, i32* @x.415
  %4 = load i32, i32* @y.416
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %25

; <label>:11:                                     ; preds = %2, %25
  %12 = alloca %"struct.Graph::QInfo"*, align 8
  %13 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %12, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %13, align 8
  %14 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %12, align 8
  %15 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %13, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph5QInfoEEEvT_S5_(%"struct.Graph::QInfo"* %14, %"struct.Graph::QInfo"* %15)
  %16 = load i32, i32* @x.415
  %17 = load i32, i32* @y.416
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %11
  ret void

; <label>:25:                                     ; preds = %11, %2
  %26 = alloca %"struct.Graph::QInfo"*, align 8
  %27 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %26, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %27, align 8
  %28 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %26, align 8
  %29 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %27, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph5QInfoEEEvT_S5_(%"struct.Graph::QInfo"* %28, %"struct.Graph::QInfo"* %29)
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph5QInfoEEEvT_S5_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::QInfo"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"*, %"struct.Graph::QInfo"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.26"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %9 = icmp ne %"struct.Graph::QInfo"* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %11 to %"class.std::allocator.27"*
  %13 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE10deallocateERS2_PS1_m(%"class.std::allocator.27"* dereferenceable(1) %12, %"struct.Graph::QInfo"* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %3 to %"class.std::allocator.27"*
  call void @_ZNSaIN5Graph5QInfoEED2Ev(%"class.std::allocator.27"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE10deallocateERS2_PS1_m(%"class.std::allocator.27"* dereferenceable(1), %"struct.Graph::QInfo"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.27"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  %8 = bitcast %"class.std::allocator.27"* %7 to %"class.__gnu_cxx::new_allocator.28"*
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"* %8, %"struct.Graph::QInfo"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"*, %"struct.Graph::QInfo"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %9 = bitcast %"struct.Graph::QInfo"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph5QInfoEED2Ev(%"class.std::allocator.27"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.427
  %3 = load i32, i32* @y.428
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %1, %23
  %11 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %11, align 8
  %12 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %11, align 8
  %13 = bitcast %"class.std::allocator.27"* %12 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEED2Ev(%"class.__gnu_cxx::new_allocator.28"* %13) #3
  %14 = load i32, i32* @x.427
  %15 = load i32, i32* @y.428
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %10
  ret void

; <label>:23:                                     ; preds = %10, %1
  %24 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %24, align 8
  %25 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %24, align 8
  %26 = bitcast %"class.std::allocator.27"* %25 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEED2Ev(%"class.__gnu_cxx::new_allocator.28"* %26) #3
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEED2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %5 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.30"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 1
  %9 = bitcast %"struct.std::_Rb_tree_node_base"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 32, i32 8, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 2
  store i64 0, i64* %10, align 8
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = load i32, i32* @x.433
  %14 = load i32, i32* @y.434
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %40

; <label>:21:                                     ; preds = %12, %40
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.30"* %25) #3
  %26 = load i32, i32* @x.433
  %27 = load i32, i32* @y.434
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %40

; <label>:34:                                     ; preds = %21
  br label %35

; <label>:35:                                     ; preds = %34
  %36 = load i8*, i8** %3, align 8
  %37 = load i32, i32* %4, align 4
  %38 = insertvalue { i8*, i32 } undef, i8* %36, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

; <label>:40:                                     ; preds = %21, %12
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %3, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %4, align 4
  %44 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.30"* %44) #3
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.30"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %2, align 8
  %3 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %2, align 8
  %4 = bitcast %"class.std::allocator.30"* %3 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.31"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.437
  %3 = load i32, i32* @y.438
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %32

; <label>:10:                                     ; preds = %1, %32
  %11 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %11, align 8
  %12 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %12, i32 0, i32 1
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %13, i32 0, i32 0
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %12, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %15, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %17 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %12, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %12, i32 0, i32 1
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %18, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %12, i32 0, i32 1
  %21 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %12, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %21, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %23 = load i32, i32* @x.437
  %24 = load i32, i32* @y.438
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %10
  ret void

; <label>:32:                                     ; preds = %10, %1
  %33 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %33, align 8
  %34 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %34, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %35, i32 0, i32 0
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %34, i32 0, i32 1
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %37, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %39 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %34, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %34, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %40, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %34, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %34, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %42, %"struct.std::_Rb_tree_node_base"** %44, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.30"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %2, align 8
  %3 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %2, align 8
  %4 = bitcast %"class.std::allocator.30"* %3 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.31"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.443
  %3 = load i32, i32* @y.444
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %11, align 8
  %12 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %11, align 8
  %13 = load i32, i32* @x.443
  %14 = load i32, i32* @y.444
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret void

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE9push_backEOS1_(%"class.std::vector.25"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %3 = load i32, i32* @x.445
  %4 = load i32, i32* @y.446
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %26

; <label>:11:                                     ; preds = %2, %26
  %12 = alloca %"class.std::vector.25"*, align 8
  %13 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %12, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %13, align 8
  %14 = load %"class.std::vector.25"*, %"class.std::vector.25"** %12, align 8
  %15 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %13, align 8
  %16 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %15) #3
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.25"* %14, %"struct.Graph::QInfo"* dereferenceable(16) %16)
  %17 = load i32, i32* @x.445
  %18 = load i32, i32* @y.446
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %11
  ret void

; <label>:26:                                     ; preds = %11, %2
  %27 = alloca %"class.std::vector.25"*, align 8
  %28 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %27, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %28, align 8
  %29 = load %"class.std::vector.25"*, %"class.std::vector.25"** %27, align 8
  %30 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %28, align 8
  %31 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %30) #3
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.25"* %29, %"struct.Graph::QInfo"* dereferenceable(16) %31)
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"struct.std::less", align 1
  %6 = alloca %"struct.Graph::QInfo", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %9 = alloca %"struct.Graph::QInfo", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %11 = alloca %"struct.std::less", align 1
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %3, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %14, align 8
  %15 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.35"* %4, i64 1) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  store %"struct.Graph::QInfo"* %15, %"struct.Graph::QInfo"** %16, align 8
  %17 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %7) #3
  %18 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %17) #3
  %19 = bitcast %"struct.Graph::QInfo"* %6 to i8*
  %20 = bitcast %"struct.Graph::QInfo"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 16, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %8 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %3) #3
  %24 = sub nsw i64 %23, 1
  %25 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %6) #3
  %26 = bitcast %"struct.Graph::QInfo"* %9 to i8*
  %27 = bitcast %"struct.Graph::QInfo"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EES7_()
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %8, i32 0, i32 0
  %29 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %28, align 8
  %30 = bitcast %"struct.Graph::QInfo"* %9 to { i64, i64 }*
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"* %29, i64 %24, i64 0, i64 %32, i64 %34)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.25"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  %10 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %11, i32 0, i32 2
  %13 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %12, align 8
  %14 = icmp ne %"struct.Graph::QInfo"* %9, %13
  br i1 %14, label %15, label %30

; <label>:15:                                     ; preds = %2
  %16 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %17 to %"class.std::allocator.27"*
  %19 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %21, align 8
  %23 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %24 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %23) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.27"* dereferenceable(1) %18, %"struct.Graph::QInfo"* %22, %"struct.Graph::QInfo"* dereferenceable(16) %24)
  %25 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %27, align 8
  %29 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %28, i32 1
  store %"struct.Graph::QInfo"* %29, %"struct.Graph::QInfo"** %27, align 8
  br label %33

; <label>:30:                                     ; preds = %2
  %31 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %32 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %31) #3
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.25"* %5, %"struct.Graph::QInfo"* dereferenceable(16) %32)
  br label %33

; <label>:33:                                     ; preds = %30, %15
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.27"* dereferenceable(1), %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.27"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  %8 = bitcast %"class.std::allocator.27"* %7 to %"class.__gnu_cxx::new_allocator.28"*
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %10 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %11 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.28"* %8, %"struct.Graph::QInfo"* %9, %"struct.Graph::QInfo"* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %2, align 8
  %3 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %2, align 8
  ret %"struct.Graph::QInfo"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.25"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  %7 = alloca %"struct.Graph::QInfo"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %10 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.25"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Graph::QInfo"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.26"* %12, i64 %13)
  store %"struct.Graph::QInfo"* %14, %"struct.Graph::QInfo"** %6, align 8
  %15 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  store %"struct.Graph::QInfo"* %15, %"struct.Graph::QInfo"** %7, align 8
  %16 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %17 to %"class.std::allocator.27"*
  %19 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %10) #3
  %21 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %19, i64 %20
  %22 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %23 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.27"* dereferenceable(1) %18, %"struct.Graph::QInfo"* %21, %"struct.Graph::QInfo"* dereferenceable(16) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %7, align 8
  %25 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %27, align 8
  %29 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %31, align 8
  %33 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %34 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %35 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %34) #3
  %36 = invoke %"struct.Graph::QInfo"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph5QInfoES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::QInfo"* %28, %"struct.Graph::QInfo"* %32, %"struct.Graph::QInfo"* %33, %"class.std::allocator.27"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store %"struct.Graph::QInfo"* %36, %"struct.Graph::QInfo"** %7, align 8
  %38 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %39 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %38, i32 1
  store %"struct.Graph::QInfo"* %39, %"struct.Graph::QInfo"** %7, align 8
  br label %163

; <label>:40:                                     ; preds = %24, %2
  %41 = load i32, i32* @x.455
  %42 = load i32, i32* @y.456
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %49, label %250

; <label>:49:                                     ; preds = %40, %250
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %8, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %9, align 4
  %53 = load i32, i32* @x.455
  %54 = load i32, i32* @y.456
  %55 = sub i32 %53, 1
  %56 = mul i32 %53, %55
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %58, %59
  br i1 %60, label %61, label %250

; <label>:61:                                     ; preds = %49
  br label %62

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* @x.455
  %64 = load i32, i32* @y.456
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %71, label %254

; <label>:71:                                     ; preds = %62, %254
  %72 = load i8*, i8** %8, align 8
  %73 = call i8* @__cxa_begin_catch(i8* %72) #3
  %74 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %75 = icmp ne %"struct.Graph::QInfo"* %74, null
  %76 = load i32, i32* @x.455
  %77 = load i32, i32* @y.456
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %84, label %254

; <label>:84:                                     ; preds = %71
  br i1 %75, label %97, label %85

; <label>:85:                                     ; preds = %84
  %86 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %87 to %"class.std::allocator.27"*
  %89 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %90 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %10) #3
  %91 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %89, i64 %90
  invoke void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.27"* dereferenceable(1) %88, %"struct.Graph::QInfo"* %91)
          to label %92 unwind label %93

; <label>:92:                                     ; preds = %85
  br label %121

; <label>:93:                                     ; preds = %161, %142, %119, %85
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %8, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %162 unwind label %228

; <label>:97:                                     ; preds = %84
  %98 = load i32, i32* @x.455
  %99 = load i32, i32* @y.456
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %106, label %259

; <label>:106:                                    ; preds = %97, %259
  %107 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %108 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %109 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %110 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %109) #3
  %111 = load i32, i32* @x.455
  %112 = load i32, i32* @y.456
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %119, label %259

; <label>:119:                                    ; preds = %106
  invoke void @_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E(%"struct.Graph::QInfo"* %107, %"struct.Graph::QInfo"* %108, %"class.std::allocator.27"* dereferenceable(1) %110)
          to label %120 unwind label %93

; <label>:120:                                    ; preds = %119
  br label %121

; <label>:121:                                    ; preds = %120, %92
  %122 = load i32, i32* @x.455
  %123 = load i32, i32* @y.456
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %130, label %264

; <label>:130:                                    ; preds = %121, %264
  %131 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %132 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %133 = load i64, i64* %5, align 8
  %134 = load i32, i32* @x.455
  %135 = load i32, i32* @y.456
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %142, label %264

; <label>:142:                                    ; preds = %130
  invoke void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %131, %"struct.Graph::QInfo"* %132, i64 %133)
          to label %143 unwind label %93

; <label>:143:                                    ; preds = %142
  %144 = load i32, i32* @x.455
  %145 = load i32, i32* @y.456
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %152, label %268

; <label>:152:                                    ; preds = %143, %268
  %153 = load i32, i32* @x.455
  %154 = load i32, i32* @y.456
  %155 = sub i32 %153, 1
  %156 = mul i32 %153, %155
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %158, %159
  br i1 %160, label %161, label %268

; <label>:161:                                    ; preds = %152
  invoke void @__cxa_rethrow() #13
          to label %231 unwind label %93

; <label>:162:                                    ; preds = %93
  br label %223

; <label>:163:                                    ; preds = %37
  %164 = load i32, i32* @x.455
  %165 = load i32, i32* @y.456
  %166 = sub i32 %164, 1
  %167 = mul i32 %164, %166
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %169, %170
  br i1 %171, label %172, label %269

; <label>:172:                                    ; preds = %163, %269
  %173 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %174 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %173, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %174, i32 0, i32 0
  %176 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %175, align 8
  %177 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %178 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %177, i32 0, i32 0
  %179 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %178, i32 0, i32 1
  %180 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %179, align 8
  %181 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %182 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %181) #3
  call void @_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E(%"struct.Graph::QInfo"* %176, %"struct.Graph::QInfo"* %180, %"class.std::allocator.27"* dereferenceable(1) %182)
  %183 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %184 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %185 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %184, i32 0, i32 0
  %186 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %185, i32 0, i32 0
  %187 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %186, align 8
  %188 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %189 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %188, i32 0, i32 0
  %190 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %189, i32 0, i32 2
  %191 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %190, align 8
  %192 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %193 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %192, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %193, i32 0, i32 0
  %195 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %194, align 8
  %196 = ptrtoint %"struct.Graph::QInfo"* %191 to i64
  %197 = ptrtoint %"struct.Graph::QInfo"* %195 to i64
  %198 = sub i64 %196, %197
  %199 = sdiv exact i64 %198, 16
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %183, %"struct.Graph::QInfo"* %187, i64 %199)
  %200 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %201 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %202 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %201, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %202, i32 0, i32 0
  store %"struct.Graph::QInfo"* %200, %"struct.Graph::QInfo"** %203, align 8
  %204 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %205 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %206 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %205, i32 0, i32 0
  %207 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %206, i32 0, i32 1
  store %"struct.Graph::QInfo"* %204, %"struct.Graph::QInfo"** %207, align 8
  %208 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %209 = load i64, i64* %5, align 8
  %210 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %208, i64 %209
  %211 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %212 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %211, i32 0, i32 0
  %213 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %212, i32 0, i32 2
  store %"struct.Graph::QInfo"* %210, %"struct.Graph::QInfo"** %213, align 8
  %214 = load i32, i32* @x.455
  %215 = load i32, i32* @y.456
  %216 = sub i32 %214, 1
  %217 = mul i32 %214, %216
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %219, %220
  br i1 %221, label %222, label %269

; <label>:222:                                    ; preds = %172
  ret void

; <label>:223:                                    ; preds = %162
  %224 = load i8*, i8** %8, align 8
  %225 = load i32, i32* %9, align 4
  %226 = insertvalue { i8*, i32 } undef, i8* %224, 0
  %227 = insertvalue { i8*, i32 } %226, i32 %225, 1
  resume { i8*, i32 } %227

; <label>:228:                                    ; preds = %93
  %229 = landingpad { i8*, i32 }
          catch i8* null
  %230 = extractvalue { i8*, i32 } %229, 0
  call void @__clang_call_terminate(i8* %230) #10
  unreachable

; <label>:231:                                    ; preds = %161
  %232 = load i32, i32* @x.455
  %233 = load i32, i32* @y.456
  %234 = sub i32 %232, 1
  %235 = mul i32 %232, %234
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %233, 10
  %239 = or i1 %237, %238
  br i1 %239, label %240, label %326

; <label>:240:                                    ; preds = %231, %326
  %241 = load i32, i32* @x.455
  %242 = load i32, i32* @y.456
  %243 = sub i32 %241, 1
  %244 = mul i32 %241, %243
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %246, %247
  br i1 %248, label %249, label %326

; <label>:249:                                    ; preds = %240
  unreachable

; <label>:250:                                    ; preds = %49, %40
  %251 = landingpad { i8*, i32 }
          catch i8* null
  %252 = extractvalue { i8*, i32 } %251, 0
  store i8* %252, i8** %8, align 8
  %253 = extractvalue { i8*, i32 } %251, 1
  store i32 %253, i32* %9, align 4
  br label %49

; <label>:254:                                    ; preds = %71, %62
  %255 = load i8*, i8** %8, align 8
  %256 = call i8* @__cxa_begin_catch(i8* %255) #3
  %257 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %258 = icmp ne %"struct.Graph::QInfo"* %257, null
  br label %71

; <label>:259:                                    ; preds = %106, %97
  %260 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %261 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %262 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %263 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %262) #3
  br label %106

; <label>:264:                                    ; preds = %130, %121
  %265 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %266 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %267 = load i64, i64* %5, align 8
  br label %130

; <label>:268:                                    ; preds = %152, %143
  br label %152

; <label>:269:                                    ; preds = %172, %163
  %270 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %271 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %270, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %271, i32 0, i32 0
  %273 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %272, align 8
  %274 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %275 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %274, i32 0, i32 0
  %276 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %275, i32 0, i32 1
  %277 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %276, align 8
  %278 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %279 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %278) #3
  call void @_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E(%"struct.Graph::QInfo"* %273, %"struct.Graph::QInfo"* %277, %"class.std::allocator.27"* dereferenceable(1) %279)
  %280 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %281 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %282 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %281, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %282, i32 0, i32 0
  %284 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %283, align 8
  %285 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %286 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %285, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %286, i32 0, i32 2
  %288 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %287, align 8
  %289 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %290 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %289, i32 0, i32 0
  %291 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %290, i32 0, i32 0
  %292 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %291, align 8
  %293 = ptrtoint %"struct.Graph::QInfo"* %288 to i64
  %294 = ptrtoint %"struct.Graph::QInfo"* %292 to i64
  %295 = sub i64 0, %293
  %296 = add i64 %295, %294
  %297 = sub i64 0, %293
  %298 = add i64 %297, %294
  %299 = sub i64 %293, %294
  %300 = mul i64 %299, %294
  %301 = sub i64 %293, %294
  %302 = mul i64 %301, %294
  %303 = shl i64 %293, %294
  %304 = sub i64 %293, %294
  %305 = mul i64 %304, %294
  %306 = sub i64 0, %293
  %307 = add i64 %306, %294
  %308 = sub i64 0, %293
  %309 = add i64 %308, %294
  %310 = sub i64 %293, %294
  %311 = sdiv exact i64 %310, 16
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %280, %"struct.Graph::QInfo"* %284, i64 %311)
  %312 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %313 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %314 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %313, i32 0, i32 0
  %315 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %314, i32 0, i32 0
  store %"struct.Graph::QInfo"* %312, %"struct.Graph::QInfo"** %315, align 8
  %316 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %317 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %318 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %317, i32 0, i32 0
  %319 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %318, i32 0, i32 1
  store %"struct.Graph::QInfo"* %316, %"struct.Graph::QInfo"** %319, align 8
  %320 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %321 = load i64, i64* %5, align 8
  %322 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %320, i64 %321
  %323 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %324 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %323, i32 0, i32 0
  %325 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %324, i32 0, i32 2
  store %"struct.Graph::QInfo"* %322, %"struct.Graph::QInfo"** %325, align 8
  br label %172

; <label>:326:                                    ; preds = %240, %231
  br label %240
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.28"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %9 = bitcast %"struct.Graph::QInfo"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::QInfo"*
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %12 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.Graph::QInfo"* %10 to i8*
  %14 = bitcast %"struct.Graph::QInfo"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.25"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.25"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.25"*, %"class.std::vector.25"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %9) #3
  %11 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %9) #3
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %35

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.459
  %17 = load i32, i32* @y.460
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %72

; <label>:24:                                     ; preds = %15, %72
  %25 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %25) #13
  %26 = load i32, i32* @x.459
  %27 = load i32, i32* @y.460
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %72

; <label>:34:                                     ; preds = %24
  unreachable

; <label>:35:                                     ; preds = %3
  %36 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %9) #3
  %37 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %9) #3
  store i64 %37, i64* %8, align 8
  %38 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %36, %39
  store i64 %40, i64* %7, align 8
  %41 = load i64, i64* %7, align 8
  %42 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %9) #3
  %43 = icmp ult i64 %41, %42
  br i1 %43, label %48, label %44

; <label>:44:                                     ; preds = %35
  %45 = load i64, i64* %7, align 8
  %46 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %9) #3
  %47 = icmp ugt i64 %45, %46
  br i1 %47, label %48, label %68

; <label>:48:                                     ; preds = %44, %35
  %49 = load i32, i32* @x.459
  %50 = load i32, i32* @y.460
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %57, label %74

; <label>:57:                                     ; preds = %48, %74
  %58 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %9) #3
  %59 = load i32, i32* @x.459
  %60 = load i32, i32* @y.460
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %74

; <label>:67:                                     ; preds = %57
  br label %70

; <label>:68:                                     ; preds = %44
  %69 = load i64, i64* %7, align 8
  br label %70

; <label>:70:                                     ; preds = %68, %67
  %71 = phi i64 [ %58, %67 ], [ %69, %68 ]
  ret i64 %71

; <label>:72:                                     ; preds = %24, %15
  %73 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %73) #13
  br label %24

; <label>:74:                                     ; preds = %57, %48
  %75 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %9) #3
  br label %57
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.26"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.26"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %9 to %"class.std::allocator.27"*
  %11 = load i64, i64* %4, align 8
  %12 = call %"struct.Graph::QInfo"* @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8allocateERS2_m(%"class.std::allocator.27"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi %"struct.Graph::QInfo"* [ %12, %8 ], [ null, %13 ]
  ret %"struct.Graph::QInfo"* %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.463
  %3 = load i32, i32* @y.464
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %34

; <label>:10:                                     ; preds = %1, %34
  %11 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %11, align 8
  %12 = load %"class.std::vector.25"*, %"class.std::vector.25"** %11, align 8
  %13 = bitcast %"class.std::vector.25"* %12 to %"struct.std::_Vector_base.26"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %13, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %14, i32 0, i32 1
  %16 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %15, align 8
  %17 = bitcast %"class.std::vector.25"* %12 to %"struct.std::_Vector_base.26"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %18, i32 0, i32 0
  %20 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %19, align 8
  %21 = ptrtoint %"struct.Graph::QInfo"* %16 to i64
  %22 = ptrtoint %"struct.Graph::QInfo"* %20 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 16
  %25 = load i32, i32* @x.463
  %26 = load i32, i32* @y.464
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %34

; <label>:33:                                     ; preds = %10
  ret i64 %24

; <label>:34:                                     ; preds = %10, %1
  %35 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %35, align 8
  %36 = load %"class.std::vector.25"*, %"class.std::vector.25"** %35, align 8
  %37 = bitcast %"class.std::vector.25"* %36 to %"struct.std::_Vector_base.26"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %39, align 8
  %41 = bitcast %"class.std::vector.25"* %36 to %"struct.std::_Vector_base.26"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %42, i32 0, i32 0
  %44 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %43, align 8
  %45 = ptrtoint %"struct.Graph::QInfo"* %40 to i64
  %46 = ptrtoint %"struct.Graph::QInfo"* %44 to i64
  %47 = sub i64 0, %45
  %48 = add i64 %47, %46
  %49 = sub i64 %45, %46
  %50 = sub i64 0, %49
  %51 = add i64 %50, 16
  %52 = shl i64 %49, 16
  %53 = sub i64 %49, 16
  %54 = mul i64 %53, 16
  %55 = sdiv exact i64 %49, 16
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph5QInfoES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"class.std::allocator.27"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.465
  %6 = load i32, i32* @y.466
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %42

; <label>:13:                                     ; preds = %4, %42
  %14 = alloca %"struct.Graph::QInfo"*, align 8
  %15 = alloca %"struct.Graph::QInfo"*, align 8
  %16 = alloca %"struct.Graph::QInfo"*, align 8
  %17 = alloca %"class.std::allocator.27"*, align 8
  %18 = alloca %"class.std::move_iterator.36", align 8
  %19 = alloca %"class.std::move_iterator.36", align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %14, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %15, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %16, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %17, align 8
  %20 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %14, align 8
  %21 = call %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"* %20)
  %22 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %18, i32 0, i32 0
  store %"struct.Graph::QInfo"* %21, %"struct.Graph::QInfo"** %22, align 8
  %23 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %15, align 8
  %24 = call %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"* %23)
  %25 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %19, i32 0, i32 0
  store %"struct.Graph::QInfo"* %24, %"struct.Graph::QInfo"** %25, align 8
  %26 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %16, align 8
  %27 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %17, align 8
  %28 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %18, i32 0, i32 0
  %29 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %19, i32 0, i32 0
  %31 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %30, align 8
  %32 = call %"struct.Graph::QInfo"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph5QInfoEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::QInfo"* %29, %"struct.Graph::QInfo"* %31, %"struct.Graph::QInfo"* %26, %"class.std::allocator.27"* dereferenceable(1) %27)
  %33 = load i32, i32* @x.465
  %34 = load i32, i32* @y.466
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %13
  ret %"struct.Graph::QInfo"* %32

; <label>:42:                                     ; preds = %13, %4
  %43 = alloca %"struct.Graph::QInfo"*, align 8
  %44 = alloca %"struct.Graph::QInfo"*, align 8
  %45 = alloca %"struct.Graph::QInfo"*, align 8
  %46 = alloca %"class.std::allocator.27"*, align 8
  %47 = alloca %"class.std::move_iterator.36", align 8
  %48 = alloca %"class.std::move_iterator.36", align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %43, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %44, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %45, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %46, align 8
  %49 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %43, align 8
  %50 = call %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"* %49)
  %51 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %47, i32 0, i32 0
  store %"struct.Graph::QInfo"* %50, %"struct.Graph::QInfo"** %51, align 8
  %52 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %44, align 8
  %53 = call %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"* %52)
  %54 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %48, i32 0, i32 0
  store %"struct.Graph::QInfo"* %53, %"struct.Graph::QInfo"** %54, align 8
  %55 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %45, align 8
  %56 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %46, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %47, i32 0, i32 0
  %58 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %57, align 8
  %59 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %48, i32 0, i32 0
  %60 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %59, align 8
  %61 = call %"struct.Graph::QInfo"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph5QInfoEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::QInfo"* %58, %"struct.Graph::QInfo"* %60, %"struct.Graph::QInfo"* %55, %"class.std::allocator.27"* dereferenceable(1) %56)
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.27"* dereferenceable(1), %"struct.Graph::QInfo"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.27"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %3, align 8
  %6 = bitcast %"class.std::allocator.27"* %5 to %"class.__gnu_cxx::new_allocator.28"*
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.28"* %6, %"struct.Graph::QInfo"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %5 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNKSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8max_sizeERKS2_(%"class.std::allocator.27"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8max_sizeERKS2_(%"class.std::allocator.27"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  %4 = bitcast %"class.std::allocator.27"* %3 to %"class.__gnu_cxx::new_allocator.28"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.27"* @_ZNKSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.473
  %3 = load i32, i32* @y.474
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %11, align 8
  %12 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %13 to %"class.std::allocator.27"*
  %15 = load i32, i32* @x.473
  %16 = load i32, i32* @y.474
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"class.std::allocator.27"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %25, align 8
  %26 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %27 to %"class.std::allocator.27"*
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.475
  %3 = load i32, i32* @y.476
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %11, align 8
  %12 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %11, align 8
  %13 = load i32, i32* @x.475
  %14 = load i32, i32* @y.476
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret i64 1152921504606846975

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8allocateERS2_m(%"class.std::allocator.27"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.27"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %3, align 8
  %6 = bitcast %"class.std::allocator.27"* %5 to %"class.__gnu_cxx::new_allocator.28"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Graph::QInfo"* @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %6, i64 %7, i8* null)
  ret %"struct.Graph::QInfo"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %7) #3
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 16
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to %"struct.Graph::QInfo"*
  ret %"struct.Graph::QInfo"* %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph5QInfoEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"class.std::allocator.27"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.36", align 8
  %6 = alloca %"class.std::move_iterator.36", align 8
  %7 = alloca %"struct.Graph::QInfo"*, align 8
  %8 = alloca %"class.std::allocator.27"*, align 8
  %9 = alloca %"class.std::move_iterator.36", align 8
  %10 = alloca %"class.std::move_iterator.36", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %6, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %12, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %7, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.36"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.36"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.36"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.36"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %10, i32 0, i32 0
  %21 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %20, align 8
  %22 = call %"struct.Graph::QInfo"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph5QInfoEES3_ET0_T_S6_S5_(%"struct.Graph::QInfo"* %19, %"struct.Graph::QInfo"* %21, %"struct.Graph::QInfo"* %17)
  ret %"struct.Graph::QInfo"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.36", align 8
  %3 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %3, align 8
  %4 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5Graph5QInfoEEC2ES2_(%"class.std::move_iterator.36"* %2, %"struct.Graph::QInfo"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %2, i32 0, i32 0
  %6 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  ret %"struct.Graph::QInfo"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph5QInfoEES3_ET0_T_S6_S5_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %4 = load i32, i32* @x.485
  %5 = load i32, i32* @y.486
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %40

; <label>:12:                                     ; preds = %3, %40
  %13 = alloca %"class.std::move_iterator.36", align 8
  %14 = alloca %"class.std::move_iterator.36", align 8
  %15 = alloca %"struct.Graph::QInfo"*, align 8
  %16 = alloca i8, align 1
  %17 = alloca %"class.std::move_iterator.36", align 8
  %18 = alloca %"class.std::move_iterator.36", align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %13, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %19, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %14, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %20, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %15, align 8
  store i8 1, i8* %16, align 1
  %21 = bitcast %"class.std::move_iterator.36"* %17 to i8*
  %22 = bitcast %"class.std::move_iterator.36"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.std::move_iterator.36"* %18 to i8*
  %24 = bitcast %"class.std::move_iterator.36"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %15, align 8
  %26 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %17, i32 0, i32 0
  %27 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %26, align 8
  %28 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %18, i32 0, i32 0
  %29 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %28, align 8
  %30 = call %"struct.Graph::QInfo"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph5QInfoEES5_EET0_T_S8_S7_(%"struct.Graph::QInfo"* %27, %"struct.Graph::QInfo"* %29, %"struct.Graph::QInfo"* %25)
  %31 = load i32, i32* @x.485
  %32 = load i32, i32* @y.486
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %40

; <label>:39:                                     ; preds = %12
  ret %"struct.Graph::QInfo"* %30

; <label>:40:                                     ; preds = %12, %3
  %41 = alloca %"class.std::move_iterator.36", align 8
  %42 = alloca %"class.std::move_iterator.36", align 8
  %43 = alloca %"struct.Graph::QInfo"*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.std::move_iterator.36", align 8
  %46 = alloca %"class.std::move_iterator.36", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %41, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %42, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %48, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.std::move_iterator.36"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.36"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.36"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.36"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %43, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %45, i32 0, i32 0
  %55 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %46, i32 0, i32 0
  %57 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %56, align 8
  %58 = call %"struct.Graph::QInfo"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph5QInfoEES5_EET0_T_S8_S7_(%"struct.Graph::QInfo"* %55, %"struct.Graph::QInfo"* %57, %"struct.Graph::QInfo"* %53)
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph5QInfoEES5_EET0_T_S8_S7_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.36", align 8
  %5 = alloca %"class.std::move_iterator.36", align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  %7 = alloca %"struct.Graph::QInfo"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %11, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  %12 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  store %"struct.Graph::QInfo"* %12, %"struct.Graph::QInfo"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %78, %3
  %14 = invoke zeroext i1 @_ZStneIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.36"* dereferenceable(8) %4, %"class.std::move_iterator.36"* dereferenceable(8) %5)
          to label %15 unwind label %81

; <label>:15:                                     ; preds = %13
  %16 = load i32, i32* @x.487
  %17 = load i32, i32* @y.488
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %162

; <label>:24:                                     ; preds = %15, %162
  %25 = load i32, i32* @x.487
  %26 = load i32, i32* @y.488
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %162

; <label>:33:                                     ; preds = %24
  br i1 %14, label %34, label %109

; <label>:34:                                     ; preds = %33
  %35 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %36 = call %"struct.Graph::QInfo"* @_ZSt11__addressofIN5Graph5QInfoEEPT_RS2_(%"struct.Graph::QInfo"* dereferenceable(16) %35) #3
  %37 = invoke dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEEdeEv(%"class.std::move_iterator.36"* %4)
          to label %38 unwind label %81

; <label>:38:                                     ; preds = %34
  %39 = load i32, i32* @x.487
  %40 = load i32, i32* @y.488
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %47, label %163

; <label>:47:                                     ; preds = %38, %163
  %48 = load i32, i32* @x.487
  %49 = load i32, i32* @y.488
  %50 = sub i32 %48, 1
  %51 = mul i32 %48, %50
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %53, %54
  br i1 %55, label %56, label %163

; <label>:56:                                     ; preds = %47
  invoke void @_ZSt10_ConstructIN5Graph5QInfoEJS1_EEvPT_DpOT0_(%"struct.Graph::QInfo"* %36, %"struct.Graph::QInfo"* dereferenceable(16) %37)
          to label %57 unwind label %81

; <label>:57:                                     ; preds = %56
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.487
  %60 = load i32, i32* @y.488
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %164

; <label>:67:                                     ; preds = %58, %164
  %68 = load i32, i32* @x.487
  %69 = load i32, i32* @y.488
  %70 = sub i32 %68, 1
  %71 = mul i32 %68, %70
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %73, %74
  br i1 %75, label %76, label %164

; <label>:76:                                     ; preds = %67
  %77 = invoke dereferenceable(8) %"class.std::move_iterator.36"* @_ZNSt13move_iteratorIPN5Graph5QInfoEEppEv(%"class.std::move_iterator.36"* %4)
          to label %78 unwind label %81

; <label>:78:                                     ; preds = %76
  %79 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %80 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %79, i32 1
  store %"struct.Graph::QInfo"* %80, %"struct.Graph::QInfo"** %7, align 8
  br label %13

; <label>:81:                                     ; preds = %76, %56, %34, %13
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %8, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %9, align 4
  br label %85

; <label>:85:                                     ; preds = %81
  %86 = load i32, i32* @x.487
  %87 = load i32, i32* @y.488
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %94, label %165

; <label>:94:                                     ; preds = %85, %165
  %95 = load i8*, i8** %8, align 8
  %96 = call i8* @__cxa_begin_catch(i8* %95) #3
  %97 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %98 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %99 = load i32, i32* @x.487
  %100 = load i32, i32* @y.488
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %107, label %165

; <label>:107:                                    ; preds = %94
  invoke void @_ZSt8_DestroyIPN5Graph5QInfoEEvT_S3_(%"struct.Graph::QInfo"* %97, %"struct.Graph::QInfo"* %98)
          to label %108 unwind label %111

; <label>:108:                                    ; preds = %107
  invoke void @__cxa_rethrow() #13
          to label %161 unwind label %111

; <label>:109:                                    ; preds = %33
  %110 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  ret %"struct.Graph::QInfo"* %110

; <label>:111:                                    ; preds = %108, %107
  %112 = load i32, i32* @x.487
  %113 = load i32, i32* @y.488
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %120, label %170

; <label>:120:                                    ; preds = %111, %170
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %8, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %9, align 4
  %124 = load i32, i32* @x.487
  %125 = load i32, i32* @y.488
  %126 = sub i32 %124, 1
  %127 = mul i32 %124, %126
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %129, %130
  br i1 %131, label %132, label %170

; <label>:132:                                    ; preds = %120
  invoke void @__cxa_end_catch()
          to label %133 unwind label %158

; <label>:133:                                    ; preds = %132
  br label %153
                                                  ; No predecessors!
  %135 = load i32, i32* @x.487
  %136 = load i32, i32* @y.488
  %137 = sub i32 %135, 1
  %138 = mul i32 %135, %137
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %140, %141
  br i1 %142, label %143, label %174

; <label>:143:                                    ; preds = %134, %174
  call void @llvm.trap()
  %144 = load i32, i32* @x.487
  %145 = load i32, i32* @y.488
  %146 = sub i32 %144, 1
  %147 = mul i32 %144, %146
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %149, %150
  br i1 %151, label %152, label %174

; <label>:152:                                    ; preds = %143
  unreachable

; <label>:153:                                    ; preds = %133
  %154 = load i8*, i8** %8, align 8
  %155 = load i32, i32* %9, align 4
  %156 = insertvalue { i8*, i32 } undef, i8* %154, 0
  %157 = insertvalue { i8*, i32 } %156, i32 %155, 1
  resume { i8*, i32 } %157

; <label>:158:                                    ; preds = %132
  %159 = landingpad { i8*, i32 }
          catch i8* null
  %160 = extractvalue { i8*, i32 } %159, 0
  call void @__clang_call_terminate(i8* %160) #10
  unreachable

; <label>:161:                                    ; preds = %108
  unreachable

; <label>:162:                                    ; preds = %24, %15
  br label %24

; <label>:163:                                    ; preds = %47, %38
  br label %47

; <label>:164:                                    ; preds = %67, %58
  br label %67

; <label>:165:                                    ; preds = %94, %85
  %166 = load i8*, i8** %8, align 8
  %167 = call i8* @__cxa_begin_catch(i8* %166) #3
  %168 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %169 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  br label %94

; <label>:170:                                    ; preds = %120, %111
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  store i8* %172, i8** %8, align 8
  %173 = extractvalue { i8*, i32 } %171, 1
  store i32 %173, i32* %9, align 4
  br label %120

; <label>:174:                                    ; preds = %143, %134
  call void @llvm.trap()
  br label %143
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.36"* dereferenceable(8), %"class.std::move_iterator.36"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.36"*, align 8
  %4 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %3, align 8
  store %"class.std::move_iterator.36"* %1, %"class.std::move_iterator.36"** %4, align 8
  %5 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %3, align 8
  %6 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.36"* dereferenceable(8) %5, %"class.std::move_iterator.36"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  ret i1 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph5QInfoEJS1_EEvPT_DpOT0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat {
  %3 = alloca %"struct.Graph::QInfo"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %3, align 8
  %6 = bitcast %"struct.Graph::QInfo"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph::QInfo"*
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %9 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.Graph::QInfo"* %7 to i8*
  %11 = bitcast %"struct.Graph::QInfo"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt11__addressofIN5Graph5QInfoEEPT_RS2_(%"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %2, align 8
  %3 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %2, align 8
  %4 = bitcast %"struct.Graph::QInfo"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.Graph::QInfo"*
  ret %"struct.Graph::QInfo"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEEdeEv(%"class.std::move_iterator.36"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.495
  %3 = load i32, i32* @y.496
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %11, align 8
  %12 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %11, align 8
  %13 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %13, align 8
  %15 = load i32, i32* @x.495
  %16 = load i32, i32* @y.496
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"struct.Graph::QInfo"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %25, align 8
  %26 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %25, align 8
  %27 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %26, i32 0, i32 0
  %28 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %27, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.36"* @_ZNSt13move_iteratorIPN5Graph5QInfoEEppEv(%"class.std::move_iterator.36"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %2, align 8
  %3 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %5, i32 1
  store %"struct.Graph::QInfo"* %6, %"struct.Graph::QInfo"** %4, align 8
  ret %"class.std::move_iterator.36"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.36"* dereferenceable(8), %"class.std::move_iterator.36"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.36"*, align 8
  %4 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %3, align 8
  store %"class.std::move_iterator.36"* %1, %"class.std::move_iterator.36"** %4, align 8
  %5 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %3, align 8
  %6 = call %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEE4baseEv(%"class.std::move_iterator.36"* %5)
  %7 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %4, align 8
  %8 = call %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEE4baseEv(%"class.std::move_iterator.36"* %7)
  %9 = icmp eq %"struct.Graph::QInfo"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEE4baseEv(%"class.std::move_iterator.36"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %2, align 8
  %3 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  ret %"struct.Graph::QInfo"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph5QInfoEEC2ES2_(%"class.std::move_iterator.36"*, %"struct.Graph::QInfo"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.36"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  store %"struct.Graph::QInfo"* %7, %"struct.Graph::QInfo"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.28"*, %"struct.Graph::QInfo"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %3, align 8
  %6 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.35"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = sub i64 0, %10
  %12 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %9, i64 %11
  store %"struct.Graph::QInfo"* %12, %"struct.Graph::QInfo"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %3, %"struct.Graph::QInfo"** dereferenceable(8) %6) #3
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %3, i32 0, i32 0
  %14 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %13, align 8
  ret %"struct.Graph::QInfo"* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EES7_() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair.37", align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::pair.39", align 8
  %7 = alloca %"struct.std::_Identity", align 1
  %8 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", align 8
  %9 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %12 = alloca i8, align 1
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store i64* %1, i64** %5, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %14 = load i64*, i64** %5, align 8
  %15 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %7, i64* dereferenceable(8) %14)
  %16 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree"* %13, i64* dereferenceable(8) %15)
  %17 = bitcast %"struct.std::pair.39"* %6 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %18 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %17, i32 0, i32 0
  %19 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %16, 0
  store %"struct.std::_Rb_tree_node_base"* %19, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %20 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %17, i32 0, i32 1
  %21 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %16, 1
  store %"struct.std::_Rb_tree_node_base"* %21, %"struct.std::_Rb_tree_node_base"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %6, i32 0, i32 1
  %23 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %24 = icmp ne %"struct.std::_Rb_tree_node_base"* %23, null
  br i1 %24, label %25, label %34

; <label>:25:                                     ; preds = %2
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %8, %"class.std::_Rb_tree"* dereferenceable(48) %13)
  %26 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %6, i32 0, i32 0
  %27 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %6, i32 0, i32 1
  %29 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = load i64*, i64** %5, align 8
  %31 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %30) #3
  %32 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node_base"* %27, %"struct.std::_Rb_tree_node_base"* %29, i64* dereferenceable(8) %31, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8) %8)
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %32, %"struct.std::_Rb_tree_node_base"** %33, align 8
  store i8 1, i8* %10, align 1
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.37"* %3, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9, i8* dereferenceable(1) %10)
  br label %39

; <label>:34:                                     ; preds = %2
  %35 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %6, i32 0, i32 0
  %36 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %37 = bitcast %"struct.std::_Rb_tree_node_base"* %36 to %"struct.std::_Rb_tree_node"*
  %38 = bitcast %"struct.std::_Rb_tree_node"* %37 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %11, %"struct.std::_Rb_tree_node_base"* %38) #3
  store i8 0, i8* %12, align 1
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.37"* %3, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %11, i8* dereferenceable(1) %12)
  br label %39

; <label>:39:                                     ; preds = %34, %25
  %40 = bitcast %"struct.std::pair.37"* %3 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %41 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %40, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %41
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9) #3
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %8, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10) #3
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %12 = load i8*, i8** %6, align 8
  %13 = call dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1) %12) #3
  %14 = load i8, i8* %13, align 1
  %15 = trunc i8 %14 to i1
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair.39", align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %10 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store i64* %1, i64** %5, align 8
  %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %13 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %12) #3
  store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %6, align 8
  %14 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %12) #3
  store %"struct.std::_Rb_tree_node"* %14, %"struct.std::_Rb_tree_node"** %7, align 8
  store i8 1, i8* %8, align 1
  br label %15

; <label>:15:                                     ; preds = %73, %2
  %16 = load i32, i32* @x.515
  %17 = load i32, i32* @y.516
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %156

; <label>:24:                                     ; preds = %15, %156
  %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %26 = icmp ne %"struct.std::_Rb_tree_node"* %25, null
  %27 = load i32, i32* @x.515
  %28 = load i32, i32* @y.516
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %156

; <label>:35:                                     ; preds = %24
  br i1 %26, label %36, label %75

; <label>:36:                                     ; preds = %35
  %37 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %37, %"struct.std::_Rb_tree_node"** %7, align 8
  %38 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %12, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %38, i32 0, i32 0
  %40 = load i64*, i64** %5, align 8
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %42 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %41)
  %43 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %39, i64* dereferenceable(8) %40, i64* dereferenceable(8) %42)
  %44 = zext i1 %43 to i8
  store i8 %44, i8* %8, align 1
  %45 = load i8, i8* %8, align 1
  %46 = trunc i8 %45 to i1
  br i1 %46, label %47, label %51

; <label>:47:                                     ; preds = %36
  %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node"* %48 to %"struct.std::_Rb_tree_node_base"*
  %50 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %49) #3
  br label %73

; <label>:51:                                     ; preds = %36
  %52 = load i32, i32* @x.515
  %53 = load i32, i32* @y.516
  %54 = sub i32 %52, 1
  %55 = mul i32 %52, %54
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %57, %58
  br i1 %59, label %60, label %159

; <label>:60:                                     ; preds = %51, %159
  %61 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %62 = bitcast %"struct.std::_Rb_tree_node"* %61 to %"struct.std::_Rb_tree_node_base"*
  %63 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %62) #3
  %64 = load i32, i32* @x.515
  %65 = load i32, i32* @y.516
  %66 = sub i32 %64, 1
  %67 = mul i32 %64, %66
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %69, %70
  br i1 %71, label %72, label %159

; <label>:72:                                     ; preds = %60
  br label %73

; <label>:73:                                     ; preds = %72, %47
  %74 = phi %"struct.std::_Rb_tree_node"* [ %50, %47 ], [ %63, %72 ]
  store %"struct.std::_Rb_tree_node"* %74, %"struct.std::_Rb_tree_node"** %6, align 8
  br label %15

; <label>:75:                                     ; preds = %35
  %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %77 = bitcast %"struct.std::_Rb_tree_node"* %76 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %9, %"struct.std::_Rb_tree_node_base"* %77) #3
  %78 = load i8, i8* %8, align 1
  %79 = trunc i8 %78 to i1
  br i1 %79, label %80, label %106

; <label>:80:                                     ; preds = %75
  %81 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"* %12) #3
  %82 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %81, %"struct.std::_Rb_tree_node_base"** %82, align 8
  %83 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %9, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10) #3
  br i1 %83, label %84, label %85

; <label>:84:                                     ; preds = %80
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.39"* %3, %"struct.std::_Rb_tree_node"** dereferenceable(8) %6, %"struct.std::_Rb_tree_node"** dereferenceable(8) %7)
  br label %135

; <label>:85:                                     ; preds = %80
  %86 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"* %9) #3
  br label %87

; <label>:87:                                     ; preds = %85
  %88 = load i32, i32* @x.515
  %89 = load i32, i32* @y.516
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %96, label %163

; <label>:96:                                     ; preds = %87, %163
  %97 = load i32, i32* @x.515
  %98 = load i32, i32* @y.516
  %99 = sub i32 %97, 1
  %100 = mul i32 %97, %99
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %102, %103
  br i1 %104, label %105, label %163

; <label>:105:                                    ; preds = %96
  br label %106

; <label>:106:                                    ; preds = %105, %75
  %107 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %12, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  %110 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %109, align 8
  %111 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %110)
  %112 = load i64*, i64** %5, align 8
  %113 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %108, i64* dereferenceable(8) %111, i64* dereferenceable(8) %112)
  br i1 %113, label %114, label %115

; <label>:114:                                    ; preds = %106
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.39"* %3, %"struct.std::_Rb_tree_node"** dereferenceable(8) %6, %"struct.std::_Rb_tree_node"** dereferenceable(8) %7)
  br label %135

; <label>:115:                                    ; preds = %106
  %116 = load i32, i32* @x.515
  %117 = load i32, i32* @y.516
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %124, label %164

; <label>:124:                                    ; preds = %115, %164
  %125 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %11, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.39"* %3, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %125, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %11)
  %126 = load i32, i32* @x.515
  %127 = load i32, i32* @y.516
  %128 = sub i32 %126, 1
  %129 = mul i32 %126, %128
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %131, %132
  br i1 %133, label %134, label %164

; <label>:134:                                    ; preds = %124
  br label %135

; <label>:135:                                    ; preds = %134, %114, %84
  %136 = load i32, i32* @x.515
  %137 = load i32, i32* @y.516
  %138 = sub i32 %136, 1
  %139 = mul i32 %136, %138
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %141, %142
  br i1 %143, label %144, label %166

; <label>:144:                                    ; preds = %135, %166
  %145 = bitcast %"struct.std::pair.39"* %3 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %146 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %145, align 8
  %147 = load i32, i32* @x.515
  %148 = load i32, i32* @y.516
  %149 = sub i32 %147, 1
  %150 = mul i32 %147, %149
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %152, %153
  br i1 %154, label %155, label %166

; <label>:155:                                    ; preds = %144
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %146

; <label>:156:                                    ; preds = %24, %15
  %157 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %158 = icmp ne %"struct.std::_Rb_tree_node"* %157, null
  br label %24

; <label>:159:                                    ; preds = %60, %51
  %160 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %161 = bitcast %"struct.std::_Rb_tree_node"* %160 to %"struct.std::_Rb_tree_node_base"*
  %162 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %161) #3
  br label %60

; <label>:163:                                    ; preds = %96, %87
  br label %96

; <label>:164:                                    ; preds = %124, %115
  %165 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %11, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.39"* %3, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %165, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %11)
  br label %124

; <label>:166:                                    ; preds = %144, %135
  %167 = bitcast %"struct.std::pair.39"* %3 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %168 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %167, align 8
  br label %144
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"*, i64* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Identity"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"class.std::_Rb_tree"* dereferenceable(48)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %4, align 8
  %5 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  store %"class.std::_Rb_tree"* %7, %"class.std::_Rb_tree"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8), %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %7 = alloca %"class.std::_Rb_tree"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Identity", align 1
  %14 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %7, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store i64* %3, i64** %10, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %11, align 8
  %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7, align 8
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %17 = icmp ne %"struct.std::_Rb_tree_node_base"* %16, null
  br i1 %17, label %67, label %18

; <label>:18:                                     ; preds = %5
  %19 = load i32, i32* @x.521
  %20 = load i32, i32* @y.522
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %107

; <label>:27:                                     ; preds = %18, %107
  %28 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %29 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %15) #3
  %30 = bitcast %"struct.std::_Rb_tree_node"* %29 to %"struct.std::_Rb_tree_node_base"*
  %31 = icmp eq %"struct.std::_Rb_tree_node_base"* %28, %30
  %32 = load i32, i32* @x.521
  %33 = load i32, i32* @y.522
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %107

; <label>:40:                                     ; preds = %27
  br i1 %31, label %67, label %41

; <label>:41:                                     ; preds = %40
  %42 = load i32, i32* @x.521
  %43 = load i32, i32* @y.522
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %50, label %112

; <label>:50:                                     ; preds = %41, %112
  %51 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %15, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %51, i32 0, i32 0
  %53 = load i64*, i64** %10, align 8
  %54 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %13, i64* dereferenceable(8) %53)
  %55 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %56 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %55)
  %57 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %52, i64* dereferenceable(8) %54, i64* dereferenceable(8) %56)
  %58 = load i32, i32* @x.521
  %59 = load i32, i32* @y.522
  %60 = sub i32 %58, 1
  %61 = mul i32 %58, %60
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %63, %64
  br i1 %65, label %66, label %112

; <label>:66:                                     ; preds = %50
  br label %67

; <label>:67:                                     ; preds = %66, %40, %5
  %68 = phi i1 [ true, %40 ], [ true, %5 ], [ %57, %66 ]
  %69 = load i32, i32* @x.521
  %70 = load i32, i32* @y.522
  %71 = sub i32 %69, 1
  %72 = mul i32 %69, %71
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %74, %75
  br i1 %76, label %77, label %120

; <label>:77:                                     ; preds = %67, %120
  %78 = zext i1 %68 to i8
  store i8 %78, i8* %12, align 1
  %79 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %11, align 8
  %80 = load i64*, i64** %10, align 8
  %81 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %80) #3
  %82 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %79, i64* dereferenceable(8) %81)
  store %"struct.std::_Rb_tree_node"* %82, %"struct.std::_Rb_tree_node"** %14, align 8
  %83 = load i8, i8* %12, align 1
  %84 = trunc i8 %83 to i1
  %85 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %86 = bitcast %"struct.std::_Rb_tree_node"* %85 to %"struct.std::_Rb_tree_node_base"*
  %87 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %88 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %15, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %88, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %84, %"struct.std::_Rb_tree_node_base"* %86, %"struct.std::_Rb_tree_node_base"* %87, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %89) #3
  %90 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %15, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %90, i32 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %91, align 8
  %94 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %95 = bitcast %"struct.std::_Rb_tree_node"* %94 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %6, %"struct.std::_Rb_tree_node_base"* %95) #3
  %96 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  %97 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %96, align 8
  %98 = load i32, i32* @x.521
  %99 = load i32, i32* @y.522
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %106, label %120

; <label>:106:                                    ; preds = %77
  ret %"struct.std::_Rb_tree_node_base"* %97

; <label>:107:                                    ; preds = %27, %18
  %108 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %109 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %15) #3
  %110 = bitcast %"struct.std::_Rb_tree_node"* %109 to %"struct.std::_Rb_tree_node_base"*
  %111 = icmp eq %"struct.std::_Rb_tree_node_base"* %108, %110
  br label %27

; <label>:112:                                    ; preds = %50, %41
  %113 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %15, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %113, i32 0, i32 0
  %115 = load i64*, i64** %10, align 8
  %116 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %13, i64* dereferenceable(8) %115)
  %117 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %118 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %117)
  %119 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %114, i64* dereferenceable(8) %116, i64* dereferenceable(8) %118)
  br label %50

; <label>:120:                                    ; preds = %77, %67
  %121 = zext i1 %68 to i8
  store i8 %121, i8* %12, align 1
  %122 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %11, align 8
  %123 = load i64*, i64** %10, align 8
  %124 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %123) #3
  %125 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %122, i64* dereferenceable(8) %124)
  store %"struct.std::_Rb_tree_node"* %125, %"struct.std::_Rb_tree_node"** %14, align 8
  %126 = load i8, i8* %12, align 1
  %127 = trunc i8 %126 to i1
  %128 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %129 = bitcast %"struct.std::_Rb_tree_node"* %128 to %"struct.std::_Rb_tree_node_base"*
  %130 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %131 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %15, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %131, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %127, %"struct.std::_Rb_tree_node_base"* %129, %"struct.std::_Rb_tree_node_base"* %130, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %132) #3
  %133 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %15, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %133, i32 0, i32 2
  %135 = load i64, i64* %134, align 8
  %136 = shl i64 %135, 1
  %137 = sub i64 %135, 1
  %138 = mul i64 %137, 1
  %139 = sub i64 0, %135
  %140 = add i64 %139, 1
  %141 = sub i64 0, %135
  %142 = add i64 %141, 1
  %143 = sub i64 %135, 1
  %144 = mul i64 %143, 1
  %145 = sub i64 0, %135
  %146 = add i64 %145, 1
  %147 = shl i64 %135, 1
  %148 = add i64 %135, 1
  store i64 %148, i64* %134, align 8
  %149 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %150 = bitcast %"struct.std::_Rb_tree_node"* %149 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %6, %"struct.std::_Rb_tree_node_base"* %150) #3
  %151 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  %152 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %151, align 8
  br label %77
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.37"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %4 = load i32, i32* @x.525
  %5 = load i32, i32* @y.526
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %37

; <label>:12:                                     ; preds = %3, %37
  %13 = alloca %"struct.std::pair.37"*, align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %15 = alloca i8*, align 8
  store %"struct.std::pair.37"* %0, %"struct.std::pair.37"** %13, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %14, align 8
  store i8* %2, i8** %15, align 8
  %16 = load %"struct.std::pair.37"*, %"struct.std::pair.37"** %13, align 8
  %17 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %16, i32 0, i32 0
  %18 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %14, align 8
  %19 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %18) #3
  %20 = bitcast %"struct.std::_Rb_tree_iterator"* %17 to i8*
  %21 = bitcast %"struct.std::_Rb_tree_iterator"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %16, i32 0, i32 1
  %23 = load i8*, i8** %15, align 8
  %24 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %23) #3
  %25 = load i8, i8* %24, align 1
  %26 = trunc i8 %25 to i1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %22, align 8
  %28 = load i32, i32* @x.525
  %29 = load i32, i32* @y.526
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %12
  ret void

; <label>:37:                                     ; preds = %12, %3
  %38 = alloca %"struct.std::pair.37"*, align 8
  %39 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %40 = alloca i8*, align 8
  store %"struct.std::pair.37"* %0, %"struct.std::pair.37"** %38, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %39, align 8
  store i8* %2, i8** %40, align 8
  %41 = load %"struct.std::pair.37"*, %"struct.std::pair.37"** %38, align 8
  %42 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %41, i32 0, i32 0
  %43 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %39, align 8
  %44 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %43) #3
  %45 = bitcast %"struct.std::_Rb_tree_iterator"* %42 to i8*
  %46 = bitcast %"struct.std::_Rb_tree_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 8, i1 false)
  %47 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %41, i32 0, i32 1
  %48 = load i8*, i8** %40, align 8
  %49 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %48) #3
  %50 = load i8, i8* %49, align 1
  %51 = trunc i8 %50 to i1
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %47, align 8
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.529
  %3 = load i32, i32* @y.530
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %27

; <label>:10:                                     ; preds = %1, %27
  %11 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %11, align 8
  %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11, align 8
  %13 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %13, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %14, i32 0, i32 1
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node_base"* %16 to %"struct.std::_Rb_tree_node"*
  %18 = load i32, i32* @x.529
  %19 = load i32, i32* @y.530
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %10
  ret %"struct.std::_Rb_tree_node"* %17

; <label>:27:                                     ; preds = %10, %1
  %28 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %28, align 8
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %30, i32 0, i32 1
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %31, i32 0, i32 1
  %33 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %32, align 8
  %34 = bitcast %"struct.std::_Rb_tree_node_base"* %33 to %"struct.std::_Rb_tree_node"*
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"*, i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat align 2 {
  %4 = load i32, i32* @x.533
  %5 = load i32, i32* @y.534
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %31

; <label>:12:                                     ; preds = %3, %31
  %13 = alloca %"struct.std::less.33"*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i64*, align 8
  store %"struct.std::less.33"* %0, %"struct.std::less.33"** %13, align 8
  store i64* %1, i64** %14, align 8
  store i64* %2, i64** %15, align 8
  %16 = load %"struct.std::less.33"*, %"struct.std::less.33"** %13, align 8
  %17 = load i64*, i64** %14, align 8
  %18 = load i64, i64* %17, align 8
  %19 = load i64*, i64** %15, align 8
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %18, %20
  %22 = load i32, i32* @x.533
  %23 = load i32, i32* @y.534
  %24 = sub i32 %22, 1
  %25 = mul i32 %22, %24
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %27, %28
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %12
  ret i1 %21

; <label>:31:                                     ; preds = %12, %3
  %32 = alloca %"struct.std::less.33"*, align 8
  %33 = alloca i64*, align 8
  %34 = alloca i64*, align 8
  store %"struct.std::less.33"* %0, %"struct.std::less.33"** %32, align 8
  store i64* %1, i64** %33, align 8
  store i64* %2, i64** %34, align 8
  %35 = load %"struct.std::less.33"*, %"struct.std::less.33"** %32, align 8
  %36 = load i64*, i64** %33, align 8
  %37 = load i64, i64* %36, align 8
  %38 = load i64*, i64** %34, align 8
  %39 = load i64, i64* %38, align 8
  %40 = icmp slt i64 %37, %39
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = load i32, i32* @x.535
  %3 = load i32, i32* @y.536
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %25

; <label>:10:                                     ; preds = %1, %25
  %11 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %12 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %11, align 8
  %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %14 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %13)
  %15 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %12, i64* dereferenceable(8) %14)
  %16 = load i32, i32* @x.535
  %17 = load i32, i32* @y.536
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %10
  ret i64* %15

; <label>:25:                                     ; preds = %10, %1
  %26 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %27 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %26, align 8
  %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %26, align 8
  %29 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %28)
  %30 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %27, i64* dereferenceable(8) %29)
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.537
  %3 = load i32, i32* @y.538
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %25

; <label>:10:                                     ; preds = %1, %25
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 2
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node_base"* %14 to %"struct.std::_Rb_tree_node"*
  %16 = load i32, i32* @x.537
  %17 = load i32, i32* @y.538
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %10
  ret %"struct.std::_Rb_tree_node"* %15

; <label>:25:                                     ; preds = %10, %1
  %26 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %27 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %27, i32 0, i32 2
  %29 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = bitcast %"struct.std::_Rb_tree_node_base"* %29 to %"struct.std::_Rb_tree_node"*
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.543
  %3 = load i32, i32* @y.544
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %29

; <label>:10:                                     ; preds = %1, %29
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %12 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %12, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %12, align 8
  %14 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %13, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %14, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %15, i32 0, i32 2
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %11, %"struct.std::_Rb_tree_node_base"* %17) #3
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  %19 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %20 = load i32, i32* @x.543
  %21 = load i32, i32* @y.544
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %10
  ret %"struct.std::_Rb_tree_node_base"* %19

; <label>:29:                                     ; preds = %10, %1
  %30 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %31 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %31, align 8
  %32 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %31, align 8
  %33 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %33, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %34, i32 0, i32 2
  %36 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %35, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %30, %"struct.std::_Rb_tree_node_base"* %36) #3
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %30, i32 0, i32 0
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.39"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair.39"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.39"* %0, %"struct.std::pair.39"** %4, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %6, align 8
  %7 = load %"struct.std::pair.39"*, %"struct.std::pair.39"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #14
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %3, i64* dereferenceable(8) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.39"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = load i32, i32* @x.551
  %5 = load i32, i32* @y.552
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %33

; <label>:12:                                     ; preds = %3, %33
  %13 = alloca %"struct.std::pair.39"*, align 8
  %14 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %15 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.39"* %0, %"struct.std::pair.39"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %14, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %15, align 8
  %16 = load %"struct.std::pair.39"*, %"struct.std::pair.39"** %13, align 8
  %17 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %16, i32 0, i32 0
  %18 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %14, align 8
  %19 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18) #3
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %19, align 8
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %16, i32 0, i32 1
  %22 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15, align 8
  %23 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %22, align 8
  store %"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %24 = load i32, i32* @x.551
  %25 = load i32, i32* @y.552
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %12
  ret void

; <label>:33:                                     ; preds = %12, %3
  %34 = alloca %"struct.std::pair.39"*, align 8
  %35 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %36 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.39"* %0, %"struct.std::pair.39"** %34, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %35, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %36, align 8
  %37 = load %"struct.std::pair.39"*, %"struct.std::pair.39"** %34, align 8
  %38 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %37, i32 0, i32 0
  %39 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %35, align 8
  %40 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %39) #3
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  store %"struct.std::_Rb_tree_node_base"* %41, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %42 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %37, i32 0, i32 1
  %43 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %36, align 8
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %42, align 8
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.557
  %3 = load i32, i32* @y.558
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %11, align 8
  %12 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %11, align 8
  %13 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %12) #3
  %14 = bitcast i8* %13 to i64*
  %15 = load i32, i32* @x.557
  %16 = load i32, i32* @y.558
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret i64* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %25, align 8
  %26 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %25, align 8
  %27 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %26) #3
  %28 = bitcast i8* %27 to i64*
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.559
  %3 = load i32, i32* @y.560
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %11, align 8
  %12 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %11, align 8
  %13 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %12, i32 0, i32 0
  %14 = bitcast [8 x i8]* %13 to i8*
  %15 = load i32, i32* @x.559
  %16 = load i32, i32* @y.560
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret i8* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %25, align 8
  %26 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %25, align 8
  %27 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %26, i32 0, i32 0
  %28 = bitcast [8 x i8]* %27 to i8*
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
  ret %"struct.std::_Rb_tree_node"** %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.563
  %3 = load i32, i32* @y.564
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %13 = bitcast %"struct.std::_Rb_tree_node_base"* %12 to %"struct.std::_Rb_tree_node"*
  %14 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %13)
  %15 = load i32, i32* @x.563
  %16 = load i32, i32* @y.564
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret i64* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %27 = bitcast %"struct.std::_Rb_tree_node_base"* %26 to %"struct.std::_Rb_tree_node"*
  %28 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %27)
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %8) #3
  %10 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"* %7, i64* dereferenceable(8) %9)
  ret %"struct.std::_Rb_tree_node"* %10
}

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %7 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree"* %6)
  store %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"** %5, align 8
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %9) #3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"* %6, %"struct.std::_Rb_tree_node"* %8, i64* dereferenceable(8) %10)
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  ret %"struct.std::_Rb_tree_node"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.30"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %11 = bitcast %"struct.std::_Rb_tree_node"* %10 to i8*
  %12 = bitcast i8* %11 to %"struct.std::_Rb_tree_node"*
  %13 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %9) #3
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %15 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %14)
          to label %16 unwind label %56

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.573
  %18 = load i32, i32* @y.574
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %134

; <label>:25:                                     ; preds = %16, %134
  %26 = load i64*, i64** %6, align 8
  %27 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %26) #3
  %28 = load i32, i32* @x.573
  %29 = load i32, i32* @y.574
  %30 = sub i32 %28, 1
  %31 = mul i32 %28, %30
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %134

; <label>:36:                                     ; preds = %25
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1) %13, i64* %15, i64* dereferenceable(8) %27)
          to label %37 unwind label %56

; <label>:37:                                     ; preds = %36
  %38 = load i32, i32* @x.573
  %39 = load i32, i32* @y.574
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %137

; <label>:46:                                     ; preds = %37, %137
  %47 = load i32, i32* @x.573
  %48 = load i32, i32* @y.574
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %55, label %137

; <label>:55:                                     ; preds = %46
  br label %88

; <label>:56:                                     ; preds = %36, %3
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %7, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %8, align 4
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8*, i8** %7, align 8
  %62 = call i8* @__cxa_begin_catch(i8* %61) #3
  %63 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %64 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %9, %"struct.std::_Rb_tree_node"* %64) #3
  invoke void @__cxa_rethrow() #13
          to label %115 unwind label %65

; <label>:65:                                     ; preds = %60
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %7, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %8, align 4
  invoke void @__cxa_end_catch()
          to label %69 unwind label %112

; <label>:69:                                     ; preds = %65
  %70 = load i32, i32* @x.573
  %71 = load i32, i32* @y.574
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %138

; <label>:78:                                     ; preds = %69, %138
  %79 = load i32, i32* @x.573
  %80 = load i32, i32* @y.574
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %87, label %138

; <label>:87:                                     ; preds = %78
  br label %89

; <label>:88:                                     ; preds = %55
  ret void

; <label>:89:                                     ; preds = %87
  %90 = load i32, i32* @x.573
  %91 = load i32, i32* @y.574
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %98, label %139

; <label>:98:                                     ; preds = %89, %139
  %99 = load i8*, i8** %7, align 8
  %100 = load i32, i32* %8, align 4
  %101 = insertvalue { i8*, i32 } undef, i8* %99, 0
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1
  %103 = load i32, i32* @x.573
  %104 = load i32, i32* @y.574
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %111, label %139

; <label>:111:                                    ; preds = %98
  resume { i8*, i32 } %102

; <label>:112:                                    ; preds = %65
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  call void @__clang_call_terminate(i8* %114) #10
  unreachable

; <label>:115:                                    ; preds = %60
  %116 = load i32, i32* @x.573
  %117 = load i32, i32* @y.574
  %118 = sub i32 %116, 1
  %119 = mul i32 %116, %118
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %121, %122
  br i1 %123, label %124, label %144

; <label>:124:                                    ; preds = %115, %144
  %125 = load i32, i32* @x.573
  %126 = load i32, i32* @y.574
  %127 = sub i32 %125, 1
  %128 = mul i32 %125, %127
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %130, %131
  br i1 %132, label %133, label %144

; <label>:133:                                    ; preds = %124
  unreachable

; <label>:134:                                    ; preds = %25, %16
  %135 = load i64*, i64** %6, align 8
  %136 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %135) #3
  br label %25

; <label>:137:                                    ; preds = %46, %37
  br label %46

; <label>:138:                                    ; preds = %78, %69
  br label %78

; <label>:139:                                    ; preds = %98, %89
  %140 = load i8*, i8** %7, align 8
  %141 = load i32, i32* %8, align 4
  %142 = insertvalue { i8*, i32 } undef, i8* %140, 0
  %143 = insertvalue { i8*, i32 } %142, i32 %141, 1
  br label %98

; <label>:144:                                    ; preds = %124, %115
  br label %124
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.30"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.30"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %3, align 8
  %6 = bitcast %"class.std::allocator.30"* %5 to %"class.__gnu_cxx::new_allocator.31"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4 to %"class.std::allocator.30"*
  ret %"class.std::allocator.30"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"* %7) #3
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 40
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.581
  %3 = load i32, i32* @y.582
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %11, align 8
  %12 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %11, align 8
  %13 = load i32, i32* @x.581
  %14 = load i32, i32* @y.582
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret i64 461168601842738790

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = load i32, i32* @x.583
  %5 = load i32, i32* @y.584
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %30

; <label>:12:                                     ; preds = %3, %30
  %13 = alloca %"class.std::allocator.30"*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i64*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %13, align 8
  store i64* %1, i64** %14, align 8
  store i64* %2, i64** %15, align 8
  %16 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %13, align 8
  %17 = bitcast %"class.std::allocator.30"* %16 to %"class.__gnu_cxx::new_allocator.31"*
  %18 = load i64*, i64** %14, align 8
  %19 = load i64*, i64** %15, align 8
  %20 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %19) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"* %17, i64* %18, i64* dereferenceable(8) %20)
  %21 = load i32, i32* @x.583
  %22 = load i32, i32* @y.584
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %12
  ret void

; <label>:30:                                     ; preds = %12, %3
  %31 = alloca %"class.std::allocator.30"*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i64*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %31, align 8
  store i64* %1, i64** %32, align 8
  store i64* %2, i64** %33, align 8
  %34 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %31, align 8
  %35 = bitcast %"class.std::allocator.30"* %34 to %"class.__gnu_cxx::new_allocator.31"*
  %36 = load i64*, i64** %32, align 8
  %37 = load i64*, i64** %33, align 8
  %38 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %37) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"* %35, i64* %36, i64* dereferenceable(8) %38)
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.30"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node"* %7, i64 1)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %2
  ret void

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.587
  %11 = load i32, i32* @y.588
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %30

; <label>:18:                                     ; preds = %9, %30
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #10
  %21 = load i32, i32* @x.587
  %22 = load i32, i32* @y.588
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %18
  unreachable

; <label>:30:                                     ; preds = %18, %9
  %31 = landingpad { i8*, i32 }
          catch i8* null
  %32 = extractvalue { i8*, i32 } %31, 0
  call void @__clang_call_terminate(i8* %32) #10
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"*, i64*, i64* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  %10 = bitcast i8* %9 to i64*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [8 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.30"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.30"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  %8 = bitcast %"class.std::allocator.30"* %7 to %"class.__gnu_cxx::new_allocator.31"*
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.31"* %8, %"struct.std::_Rb_tree_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.31"*, %"struct.std::_Rb_tree_node"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #5 comdat {
  %2 = load i32, i32* @x.599
  %3 = load i32, i32* @y.600
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %11, align 8
  %12 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11, align 8
  %13 = load i32, i32* @x.599
  %14 = load i32, i32* @y.600
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret %"struct.std::_Rb_tree_iterator"* %12

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %23, align 8
  %24 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %23, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1)) #5 comdat {
  %2 = load i32, i32* @x.601
  %3 = load i32, i32* @y.602
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca i8*, align 8
  store i8* %0, i8** %11, align 8
  %12 = load i8*, i8** %11, align 8
  %13 = load i32, i32* @x.601
  %14 = load i32, i32* @y.602
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret i8* %12

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca i8*, align 8
  store i8* %0, i8** %23, align 8
  %24 = load i8*, i8** %23, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.605
  %4 = load i32, i32* @y.606
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %2, %28
  %12 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %13 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %12, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %13, align 8
  %14 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %12, align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %14, i32 0, i32 0
  %16 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %13, align 8
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %18 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %17, align 8
  store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %19 = load i32, i32* @x.605
  %20 = load i32, i32* @y.606
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %11
  ret void

; <label>:28:                                     ; preds = %11, %2
  %29 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %29, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %30, align 8
  %31 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %29, align 8
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %31, i32 0, i32 0
  %33 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %30, align 8
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %32, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1)) #5 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5emptyEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %6 = call %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %5) #3
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %3, i32 0, i32 0
  store %"struct.Graph::QInfo"* %6, %"struct.Graph::QInfo"** %7, align 8
  %8 = call %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %5) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"** %9, align 8
  %10 = call zeroext i1 @_ZN9__gnu_cxxeqIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.40"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.40"* dereferenceable(8) %4) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.40"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.40"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %1, %"class.__gnu_cxx::__normal_iterator.40"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.40"* %5) #3
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.40"* %8) #3
  %10 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %9, align 8
  %11 = icmp eq %"struct.Graph::QInfo"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  store %"struct.Graph::QInfo"* %9, %"struct.Graph::QInfo"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.40"* %2, %"struct.Graph::QInfo"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %10, align 8
  ret %"struct.Graph::QInfo"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  store %"struct.Graph::QInfo"* %9, %"struct.Graph::QInfo"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.40"* %2, %"struct.Graph::QInfo"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %10, align 8
  ret %"struct.Graph::QInfo"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.40"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %3, i32 0, i32 0
  ret %"struct.Graph::QInfo"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.40"*, %"struct.Graph::QInfo"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.619
  %4 = load i32, i32* @y.620
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %27

; <label>:11:                                     ; preds = %2, %27
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  %13 = alloca %"struct.Graph::QInfo"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %12, align 8
  store %"struct.Graph::QInfo"** %1, %"struct.Graph::QInfo"*** %13, align 8
  %14 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %12, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %14, i32 0, i32 0
  %16 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %13, align 8
  %17 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %16, align 8
  store %"struct.Graph::QInfo"* %17, %"struct.Graph::QInfo"** %15, align 8
  %18 = load i32, i32* @x.619
  %19 = load i32, i32* @y.620
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %11
  ret void

; <label>:27:                                     ; preds = %11, %2
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  %29 = alloca %"struct.Graph::QInfo"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %28, align 8
  store %"struct.Graph::QInfo"** %1, %"struct.Graph::QInfo"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %30, i32 0, i32 0
  %32 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %29, align 8
  %33 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %32, align 8
  store %"struct.Graph::QInfo"* %33, %"struct.Graph::QInfo"** %31, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5frontEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %4 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %5 = call %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %3, i32 0, i32 0
  store %"struct.Graph::QInfo"* %5, %"struct.Graph::QInfo"** %6, align 8
  %7 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.40"* %3) #3
  ret %"struct.Graph::QInfo"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.40"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  ret %"struct.Graph::QInfo"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = load i32, i32* @x.625
  %4 = load i32, i32* @y.626
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %67

; <label>:11:                                     ; preds = %2, %67
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %14 = alloca %"struct.std::less", align 1
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %18 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %19 = alloca %"struct.std::less", align 1
  %20 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %12, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %21, align 8
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %22, align 8
  %23 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %13, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %12) #3
  %24 = icmp sgt i64 %23, 1
  %25 = load i32, i32* @x.625
  %26 = load i32, i32* @y.626
  %27 = sub i32 %25, 1
  %28 = mul i32 %25, %27
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %26, 10
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %67

; <label>:33:                                     ; preds = %11
  br i1 %24, label %34, label %66

; <label>:34:                                     ; preds = %33
  %35 = load i32, i32* @x.625
  %36 = load i32, i32* @y.626
  %37 = sub i32 %35, 1
  %38 = mul i32 %35, %37
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %81

; <label>:43:                                     ; preds = %34, %81
  %44 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.35"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.35"* %13) #3
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %15 to i8*
  %46 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 8, i1 false)
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %16 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %17 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_()
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  %52 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %16, i32 0, i32 0
  %54 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %53, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %17, i32 0, i32 0
  %56 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %55, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_(%"struct.Graph::QInfo"* %52, %"struct.Graph::QInfo"* %54, %"struct.Graph::QInfo"* %56)
  %57 = load i32, i32* @x.625
  %58 = load i32, i32* @y.626
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %81

; <label>:65:                                     ; preds = %43
  br label %66

; <label>:66:                                     ; preds = %65, %33
  ret void

; <label>:67:                                     ; preds = %11, %2
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %70 = alloca %"struct.std::less", align 1
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %74 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %75 = alloca %"struct.std::less", align 1
  %76 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %68, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %77, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %69, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %78, align 8
  %79 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %69, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %68) #3
  %80 = icmp sgt i64 %79, 1
  br label %11

; <label>:81:                                     ; preds = %43, %34
  %82 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.35"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.35"* %13) #3
  %83 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %15 to i8*
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 8, i1 false)
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %16 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %17 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_()
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  %90 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %89, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %16, i32 0, i32 0
  %92 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %91, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %17, i32 0, i32 0
  %94 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %93, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_(%"struct.Graph::QInfo"* %90, %"struct.Graph::QInfo"* %92, %"struct.Graph::QInfo"* %94)
  br label %43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE8pop_backEv(%"class.std::vector.25"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %8 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %7, i32 -1
  store %"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"** %6, align 8
  %9 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %10 to %"class.std::allocator.27"*
  %12 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %14, align 8
  invoke void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.27"* dereferenceable(1) %11, %"struct.Graph::QInfo"* %15)
          to label %16 unwind label %35

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.627
  %18 = load i32, i32* @y.628
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %38

; <label>:25:                                     ; preds = %16, %38
  %26 = load i32, i32* @x.627
  %27 = load i32, i32* @y.628
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %38

; <label>:34:                                     ; preds = %25
  ret void

; <label>:35:                                     ; preds = %1
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  call void @__clang_call_terminate(i8* %37) #10
  unreachable

; <label>:38:                                     ; preds = %25, %16
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.35"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.35"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %5, i32 -1
  store %"struct.Graph::QInfo"* %6, %"struct.Graph::QInfo"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.35"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %"struct.Graph::QInfo", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %10 = alloca %"struct.Graph::QInfo", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %6, i32 0, i32 0
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %14, align 8
  %15 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %6) #3
  %16 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %15) #3
  %17 = bitcast %"struct.Graph::QInfo"* %8 to i8*
  %18 = bitcast %"struct.Graph::QInfo"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 16, i32 8, i1 false)
  %19 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %4) #3
  %20 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %19) #3
  %21 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %6) #3
  %22 = bitcast %"struct.Graph::QInfo"* %21 to i8*
  %23 = bitcast %"struct.Graph::QInfo"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %9 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %4) #3
  %27 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %8) #3
  %28 = bitcast %"struct.Graph::QInfo"* %10 to i8*
  %29 = bitcast %"struct.Graph::QInfo"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %31 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 1, i32 1, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %9, i32 0, i32 0
  %33 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %32, align 8
  %34 = bitcast %"struct.Graph::QInfo"* %10 to { i64, i64 }*
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"* %33, i64 0, i64 %26, i64 %36, i64 %38)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.633
  %4 = load i32, i32* @y.634
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %89

; <label>:11:                                     ; preds = %2, %89
  %12 = alloca %"class.std::vector.18"*, align 8
  %13 = alloca %"class.std::vector.18"*, align 8
  %14 = alloca %"class.std::allocator.20", align 1
  %15 = alloca i8*
  %16 = alloca i32
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %12, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %13, align 8
  %19 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %20 = bitcast %"class.std::vector.18"* %19 to %"struct.std::_Vector_base.19"*
  %21 = load %"class.std::vector.18"*, %"class.std::vector.18"** %13, align 8
  %22 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %21) #3
  %23 = load %"class.std::vector.18"*, %"class.std::vector.18"** %13, align 8
  %24 = bitcast %"class.std::vector.18"* %23 to %"struct.std::_Vector_base.19"*
  %25 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %24) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.20"* sret %14, %"class.std::allocator.20"* dereferenceable(1) %25)
  %26 = load i32, i32* @x.633
  %27 = load i32, i32* @y.634
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %89

; <label>:34:                                     ; preds = %11
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.19"* %20, i64 %22, %"class.std::allocator.20"* dereferenceable(1) %14)
          to label %35 unwind label %57

; <label>:35:                                     ; preds = %34
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %14) #3
  %36 = load %"class.std::vector.18"*, %"class.std::vector.18"** %13, align 8
  %37 = call %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %36) #3
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %17, i32 0, i32 0
  store %"struct.Graph::Edge"* %37, %"struct.Graph::Edge"** %38, align 8
  %39 = load %"class.std::vector.18"*, %"class.std::vector.18"** %13, align 8
  %40 = call %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %39) #3
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %18, i32 0, i32 0
  store %"struct.Graph::Edge"* %40, %"struct.Graph::Edge"** %41, align 8
  %42 = bitcast %"class.std::vector.18"* %19 to %"struct.std::_Vector_base.19"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %43, i32 0, i32 0
  %45 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %44, align 8
  %46 = bitcast %"class.std::vector.18"* %19 to %"struct.std::_Vector_base.19"*
  %47 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %46) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %17, i32 0, i32 0
  %49 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %48, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %18, i32 0, i32 0
  %51 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %50, align 8
  %52 = invoke %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::Edge"* %49, %"struct.Graph::Edge"* %51, %"struct.Graph::Edge"* %45, %"class.std::allocator.20"* dereferenceable(1) %47)
          to label %53 unwind label %61

; <label>:53:                                     ; preds = %35
  %54 = bitcast %"class.std::vector.18"* %19 to %"struct.std::_Vector_base.19"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %55, i32 0, i32 1
  store %"struct.Graph::Edge"* %52, %"struct.Graph::Edge"** %56, align 8
  ret void

; <label>:57:                                     ; preds = %34
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %15, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %16, align 4
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %14) #3
  br label %66

; <label>:61:                                     ; preds = %35
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %15, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %16, align 4
  %65 = bitcast %"class.std::vector.18"* %19 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %65) #3
  br label %66

; <label>:66:                                     ; preds = %61, %57
  %67 = load i32, i32* @x.633
  %68 = load i32, i32* @y.634
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %75, label %104

; <label>:75:                                     ; preds = %66, %104
  %76 = load i8*, i8** %15, align 8
  %77 = load i32, i32* %16, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  %80 = load i32, i32* @x.633
  %81 = load i32, i32* @y.634
  %82 = sub i32 %80, 1
  %83 = mul i32 %80, %82
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %85, %86
  br i1 %87, label %88, label %104

; <label>:88:                                     ; preds = %75
  resume { i8*, i32 } %79

; <label>:89:                                     ; preds = %11, %2
  %90 = alloca %"class.std::vector.18"*, align 8
  %91 = alloca %"class.std::vector.18"*, align 8
  %92 = alloca %"class.std::allocator.20", align 1
  %93 = alloca i8*
  %94 = alloca i32
  %95 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %96 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %90, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %91, align 8
  %97 = load %"class.std::vector.18"*, %"class.std::vector.18"** %90, align 8
  %98 = bitcast %"class.std::vector.18"* %97 to %"struct.std::_Vector_base.19"*
  %99 = load %"class.std::vector.18"*, %"class.std::vector.18"** %91, align 8
  %100 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %99) #3
  %101 = load %"class.std::vector.18"*, %"class.std::vector.18"** %91, align 8
  %102 = bitcast %"class.std::vector.18"* %101 to %"struct.std::_Vector_base.19"*
  %103 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %102) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.20"* sret %92, %"class.std::allocator.20"* dereferenceable(1) %103)
  br label %11

; <label>:104:                                    ; preds = %75, %66
  %105 = load i8*, i8** %15, align 8
  %106 = load i32, i32* %16, align 4
  %107 = insertvalue { i8*, i32 } undef, i8* %105, 0
  %108 = insertvalue { i8*, i32 } %107, i32 %106, 1
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.20"* noalias sret, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %3, align 8
  %4 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.20"* sret %0, %"class.std::allocator.20"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.19"*, i64, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %9 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %6, align 8
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, %"class.std::allocator.20"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.19"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.637
  %20 = load i32, i32* @y.638
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %41

; <label>:27:                                     ; preds = %18, %41
  %28 = load i8*, i8** %7, align 8
  %29 = load i32, i32* %8, align 4
  %30 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  %32 = load i32, i32* @x.637
  %33 = load i32, i32* @y.638
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %41

; <label>:40:                                     ; preds = %27
  resume { i8*, i32 } %31

; <label>:41:                                     ; preds = %27, %18
  %42 = load i8*, i8** %7, align 8
  %43 = load i32, i32* %8, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.641
  %6 = load i32, i32* @y.642
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %41

; <label>:13:                                     ; preds = %4, %41
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %16 = alloca %"struct.Graph::Edge"*, align 8
  %17 = alloca %"class.std::allocator.20"*, align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %14, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %20, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %15, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %21, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %16, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %17, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %18 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %19 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %16, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %18, i32 0, i32 0
  %28 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %19, i32 0, i32 0
  %30 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %29, align 8
  %31 = call %"struct.Graph::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::Edge"* %28, %"struct.Graph::Edge"* %30, %"struct.Graph::Edge"* %26)
  %32 = load i32, i32* @x.641
  %33 = load i32, i32* @y.642
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %41

; <label>:40:                                     ; preds = %13
  ret %"struct.Graph::Edge"* %31

; <label>:41:                                     ; preds = %13, %4
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %44 = alloca %"struct.Graph::Edge"*, align 8
  %45 = alloca %"class.std::allocator.20"*, align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %42, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %43, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %49, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %44, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %45, align 8
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %46, i32 0, i32 0
  %56 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %47, i32 0, i32 0
  %58 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %57, align 8
  %59 = call %"struct.Graph::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::Edge"* %56, %"struct.Graph::Edge"* %58, %"struct.Graph::Edge"* %54)
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.643
  %3 = load i32, i32* @y.644
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %30

; <label>:10:                                     ; preds = %1, %30
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %12 = alloca %"class.std::vector.18"*, align 8
  %13 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %12, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %15 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %16, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  store %"struct.Graph::Edge"* %18, %"struct.Graph::Edge"** %13, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %11, %"struct.Graph::Edge"** dereferenceable(8) %13) #3
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %11, i32 0, i32 0
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = load i32, i32* @x.643
  %22 = load i32, i32* @y.644
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %10
  ret %"struct.Graph::Edge"* %20

; <label>:30:                                     ; preds = %10, %1
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %32 = alloca %"class.std::vector.18"*, align 8
  %33 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %32, align 8
  %34 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %35 = bitcast %"class.std::vector.18"* %34 to %"struct.std::_Vector_base.19"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %36, i32 0, i32 0
  %38 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %37, align 8
  store %"struct.Graph::Edge"* %38, %"struct.Graph::Edge"** %33, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %31, %"struct.Graph::Edge"** dereferenceable(8) %33) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %31, i32 0, i32 0
  %40 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %39, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.645
  %3 = load i32, i32* @y.646
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %30

; <label>:10:                                     ; preds = %1, %30
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %12 = alloca %"class.std::vector.18"*, align 8
  %13 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %12, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %15 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %16, i32 0, i32 1
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  store %"struct.Graph::Edge"* %18, %"struct.Graph::Edge"** %13, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %11, %"struct.Graph::Edge"** dereferenceable(8) %13) #3
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %11, i32 0, i32 0
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = load i32, i32* @x.645
  %22 = load i32, i32* @y.646
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %10
  ret %"struct.Graph::Edge"* %20

; <label>:30:                                     ; preds = %10, %1
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %32 = alloca %"class.std::vector.18"*, align 8
  %33 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %32, align 8
  %34 = load %"class.std::vector.18"*, %"class.std::vector.18"** %32, align 8
  %35 = bitcast %"class.std::vector.18"* %34 to %"struct.std::_Vector_base.19"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %36, i32 0, i32 1
  %38 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %37, align 8
  store %"struct.Graph::Edge"* %38, %"struct.Graph::Edge"** %33, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %31, %"struct.Graph::Edge"** dereferenceable(8) %33) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %31, i32 0, i32 0
  %40 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %39, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.20"* noalias sret, %"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %3 = load i32, i32* @x.647
  %4 = load i32, i32* @y.648
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %23

; <label>:11:                                     ; preds = %2, %23
  %12 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %12, align 8
  %13 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %12, align 8
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %0, %"class.std::allocator.20"* dereferenceable(1) %13) #3
  %14 = load i32, i32* @x.647
  %15 = load i32, i32* @y.648
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %11
  ret void

; <label>:23:                                     ; preds = %11, %2
  %24 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %24, align 8
  %25 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %24, align 8
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %0, %"class.std::allocator.20"* dereferenceable(1) %25) #3
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.649
  %4 = load i32, i32* @y.650
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %27

; <label>:11:                                     ; preds = %2, %27
  %12 = alloca %"class.std::allocator.20"*, align 8
  %13 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %12, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %13, align 8
  %14 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %12, align 8
  %15 = bitcast %"class.std::allocator.20"* %14 to %"class.__gnu_cxx::new_allocator.21"*
  %16 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %13, align 8
  %17 = bitcast %"class.std::allocator.20"* %16 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"* %15, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1) %17) #3
  %18 = load i32, i32* @x.649
  %19 = load i32, i32* @y.650
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %11
  ret void

; <label>:27:                                     ; preds = %11, %2
  %28 = alloca %"class.std::allocator.20"*, align 8
  %29 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %28, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %29, align 8
  %30 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %28, align 8
  %31 = bitcast %"class.std::allocator.20"* %30 to %"class.__gnu_cxx::new_allocator.21"*
  %32 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %29, align 8
  %33 = bitcast %"class.std::allocator.20"* %32 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"* %31, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1) %33) #3
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5 to %"class.std::allocator.20"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %6, %"class.std::allocator.20"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %8, i32 0, i32 0
  store %"struct.Graph::Edge"* %7, %"struct.Graph::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %13, i32 0, i32 1
  store %"struct.Graph::Edge"* %12, %"struct.Graph::Edge"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %20, i32 0, i32 2
  store %"struct.Graph::Edge"* %19, %"struct.Graph::Edge"** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = load i32, i32* @x.655
  %5 = load i32, i32* @y.656
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %40

; <label>:12:                                     ; preds = %3, %40
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %15 = alloca %"struct.Graph::Edge"*, align 8
  %16 = alloca i8, align 1
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %13, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %14, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %20, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %15, align 8
  store i8 1, i8* %16, align 1
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %17 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %18 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %15, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %17, i32 0, i32 0
  %27 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %18, i32 0, i32 0
  %29 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %28, align 8
  %30 = call %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::Edge"* %27, %"struct.Graph::Edge"* %29, %"struct.Graph::Edge"* %25)
  %31 = load i32, i32* @x.655
  %32 = load i32, i32* @y.656
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %40

; <label>:39:                                     ; preds = %12
  ret %"struct.Graph::Edge"* %30

; <label>:40:                                     ; preds = %12, %3
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %43 = alloca %"struct.Graph::Edge"*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %41, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %47, align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %42, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %48, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %45 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %46 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %43, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %45, i32 0, i32 0
  %55 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %46, i32 0, i32 0
  %57 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %56, align 8
  %58 = call %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::Edge"* %55, %"struct.Graph::Edge"* %57, %"struct.Graph::Edge"* %53)
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %11, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %12 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  store %"struct.Graph::Edge"* %12, %"struct.Graph::Edge"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %38, %3
  %14 = load i32, i32* @x.657
  %15 = load i32, i32* @y.658
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %123

; <label>:22:                                     ; preds = %13, %123
  %23 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %5) #3
  %24 = load i32, i32* @x.657
  %25 = load i32, i32* @y.658
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %123

; <label>:32:                                     ; preds = %22
  br i1 %23, label %33, label %88

; <label>:33:                                     ; preds = %32
  %34 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %35 = call %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16) %34) #3
  %36 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.24"* %4) #3
  invoke void @_ZSt10_ConstructIN5Graph4EdgeEJRKS1_EEvPT_DpOT0_(%"struct.Graph::Edge"* %35, %"struct.Graph::Edge"* dereferenceable(16) %36)
          to label %37 unwind label %42

; <label>:37:                                     ; preds = %33
  br label %38

; <label>:38:                                     ; preds = %37
  %39 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.24"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.24"* %4) #3
  %40 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %41 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %40, i32 1
  store %"struct.Graph::Edge"* %41, %"struct.Graph::Edge"** %7, align 8
  br label %13

; <label>:42:                                     ; preds = %33
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %8, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %9, align 4
  br label %46

; <label>:46:                                     ; preds = %42
  %47 = load i32, i32* @x.657
  %48 = load i32, i32* @y.658
  %49 = sub i32 %47, 1
  %50 = mul i32 %47, %49
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %52, %53
  br i1 %54, label %55, label %125

; <label>:55:                                     ; preds = %46, %125
  %56 = load i8*, i8** %8, align 8
  %57 = call i8* @__cxa_begin_catch(i8* %56) #3
  %58 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %59 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %60 = load i32, i32* @x.657
  %61 = load i32, i32* @y.658
  %62 = sub i32 %60, 1
  %63 = mul i32 %60, %62
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %125

; <label>:68:                                     ; preds = %55
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %58, %"struct.Graph::Edge"* %59)
          to label %69 unwind label %90

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* @x.657
  %71 = load i32, i32* @y.658
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %130

; <label>:78:                                     ; preds = %69, %130
  %79 = load i32, i32* @x.657
  %80 = load i32, i32* @y.658
  %81 = sub i32 %79, 1
  %82 = mul i32 %79, %81
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %84, %85
  br i1 %86, label %87, label %130

; <label>:87:                                     ; preds = %78
  invoke void @__cxa_rethrow() #13
          to label %104 unwind label %90

; <label>:88:                                     ; preds = %32
  %89 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  ret %"struct.Graph::Edge"* %89

; <label>:90:                                     ; preds = %87, %68
  %91 = landingpad { i8*, i32 }
          cleanup
  %92 = extractvalue { i8*, i32 } %91, 0
  store i8* %92, i8** %8, align 8
  %93 = extractvalue { i8*, i32 } %91, 1
  store i32 %93, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %94 unwind label %101

; <label>:94:                                     ; preds = %90
  br label %96
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:96:                                     ; preds = %94
  %97 = load i8*, i8** %8, align 8
  %98 = load i32, i32* %9, align 4
  %99 = insertvalue { i8*, i32 } undef, i8* %97, 0
  %100 = insertvalue { i8*, i32 } %99, i32 %98, 1
  resume { i8*, i32 } %100

; <label>:101:                                    ; preds = %90
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  call void @__clang_call_terminate(i8* %103) #10
  unreachable

; <label>:104:                                    ; preds = %87
  %105 = load i32, i32* @x.657
  %106 = load i32, i32* @y.658
  %107 = sub i32 %105, 1
  %108 = mul i32 %105, %107
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %106, 10
  %112 = or i1 %110, %111
  br i1 %112, label %113, label %131

; <label>:113:                                    ; preds = %104, %131
  %114 = load i32, i32* @x.657
  %115 = load i32, i32* @y.658
  %116 = sub i32 %114, 1
  %117 = mul i32 %114, %116
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %119, %120
  br i1 %121, label %122, label %131

; <label>:122:                                    ; preds = %113
  unreachable

; <label>:123:                                    ; preds = %22, %13
  %124 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %5) #3
  br label %22

; <label>:125:                                    ; preds = %55, %46
  %126 = load i8*, i8** %8, align 8
  %127 = call i8* @__cxa_begin_catch(i8* %126) #3
  %128 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %129 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  br label %55

; <label>:130:                                    ; preds = %78, %69
  br label %78

; <label>:131:                                    ; preds = %113, %104
  br label %113
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %5) #3
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %8) #3
  %10 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %9, align 8
  %11 = icmp ne %"struct.Graph::Edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph4EdgeEJRKS1_EEvPT_DpOT0_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  %6 = bitcast %"struct.Graph::Edge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph::Edge"*
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %9 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIRKN5Graph4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.Graph::Edge"* %7 to i8*
  %11 = bitcast %"struct.Graph::Edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.24"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %5, i32 1
  store %"struct.Graph::Edge"* %6, %"struct.Graph::Edge"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.24"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIRKN5Graph4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  ret %"struct.Graph::Edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseERKx(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = load i32, i32* @x.669
  %4 = load i32, i32* @y.670
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %48

; <label>:11:                                     ; preds = %2, %48
  %12 = alloca %"class.std::_Rb_tree"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca %"struct.std::pair.41", align 8
  %15 = alloca i64, align 8
  %16 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %17 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %18 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %12, align 8
  store i64* %1, i64** %13, align 8
  %19 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %12, align 8
  %20 = load i64*, i64** %13, align 8
  %21 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11equal_rangeERKx(%"class.std::_Rb_tree"* %19, i64* dereferenceable(8) %20)
  %22 = bitcast %"struct.std::pair.41"* %14 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %23 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %22, i32 0, i32 0
  %24 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %21, 0
  store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %23, align 8
  %25 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %22, i32 0, i32 1
  %26 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %21, 1
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %27 = call i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree"* %19) #3
  store i64 %27, i64* %15, align 8
  %28 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %14, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %16, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %28) #3
  %29 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %14, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %17, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %29) #3
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %16, i32 0, i32 0
  %31 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %17, i32 0, i32 0
  %33 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %32, align 8
  %34 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxES7_(%"class.std::_Rb_tree"* %19, %"struct.std::_Rb_tree_node_base"* %31, %"struct.std::_Rb_tree_node_base"* %33)
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %18, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %34, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %36 = load i64, i64* %15, align 8
  %37 = call i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree"* %19) #3
  %38 = sub i64 %36, %37
  %39 = load i32, i32* @x.669
  %40 = load i32, i32* @y.670
  %41 = sub i32 %39, 1
  %42 = mul i32 %39, %41
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %44, %45
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %11
  ret i64 %38

; <label>:48:                                     ; preds = %11, %2
  %49 = alloca %"class.std::_Rb_tree"*, align 8
  %50 = alloca i64*, align 8
  %51 = alloca %"struct.std::pair.41", align 8
  %52 = alloca i64, align 8
  %53 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %54 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %55 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %49, align 8
  store i64* %1, i64** %50, align 8
  %56 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %49, align 8
  %57 = load i64*, i64** %50, align 8
  %58 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11equal_rangeERKx(%"class.std::_Rb_tree"* %56, i64* dereferenceable(8) %57)
  %59 = bitcast %"struct.std::pair.41"* %51 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %60 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %59, i32 0, i32 0
  %61 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %58, 0
  store %"struct.std::_Rb_tree_node_base"* %61, %"struct.std::_Rb_tree_node_base"** %60, align 8
  %62 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %59, i32 0, i32 1
  %63 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %58, 1
  store %"struct.std::_Rb_tree_node_base"* %63, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = call i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree"* %56) #3
  store i64 %64, i64* %52, align 8
  %65 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %51, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %53, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %65) #3
  %66 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %51, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %54, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %66) #3
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %53, i32 0, i32 0
  %68 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %54, i32 0, i32 0
  %70 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %69, align 8
  %71 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxES7_(%"class.std::_Rb_tree"* %56, %"struct.std::_Rb_tree_node_base"* %68, %"struct.std::_Rb_tree_node_base"* %70)
  %72 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %55, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %71, %"struct.std::_Rb_tree_node_base"** %72, align 8
  %73 = load i64, i64* %52, align 8
  %74 = call i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree"* %56) #3
  %75 = sub i64 0, %73
  %76 = add i64 %75, %74
  %77 = sub i64 %73, %74
  %78 = mul i64 %77, %74
  %79 = shl i64 %73, %74
  %80 = shl i64 %73, %74
  %81 = shl i64 %73, %74
  %82 = sub i64 0, %73
  %83 = add i64 %82, %74
  %84 = sub i64 %73, %74
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11equal_rangeERKx(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair.41", align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %12 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store i64* %1, i64** %5, align 8
  %14 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %15 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %14) #3
  store %"struct.std::_Rb_tree_node"* %15, %"struct.std::_Rb_tree_node"** %6, align 8
  %16 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %14) #3
  store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %7, align 8
  br label %17

; <label>:17:                                     ; preds = %118, %2
  %18 = load i32, i32* @x.671
  %19 = load i32, i32* @y.672
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %127

; <label>:26:                                     ; preds = %17, %127
  %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %28 = icmp ne %"struct.std::_Rb_tree_node"* %27, null
  %29 = load i32, i32* @x.671
  %30 = load i32, i32* @y.672
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %37, label %127

; <label>:37:                                     ; preds = %26
  br i1 %28, label %38, label %119

; <label>:38:                                     ; preds = %37
  %39 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %14, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %39, i32 0, i32 0
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %42 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %41)
  %43 = load i64*, i64** %5, align 8
  %44 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %40, i64* dereferenceable(8) %42, i64* dereferenceable(8) %43)
  br i1 %44, label %45, label %49

; <label>:45:                                     ; preds = %38
  %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %47 = bitcast %"struct.std::_Rb_tree_node"* %46 to %"struct.std::_Rb_tree_node_base"*
  %48 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %47) #3
  store %"struct.std::_Rb_tree_node"* %48, %"struct.std::_Rb_tree_node"** %6, align 8
  br label %100

; <label>:49:                                     ; preds = %38
  %50 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %14, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %50, i32 0, i32 0
  %52 = load i64*, i64** %5, align 8
  %53 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %54 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %53)
  %55 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %51, i64* dereferenceable(8) %52, i64* dereferenceable(8) %54)
  br i1 %55, label %56, label %79

; <label>:56:                                     ; preds = %49
  %57 = load i32, i32* @x.671
  %58 = load i32, i32* @y.672
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %130

; <label>:65:                                     ; preds = %56, %130
  %66 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %66, %"struct.std::_Rb_tree_node"** %7, align 8
  %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %68 = bitcast %"struct.std::_Rb_tree_node"* %67 to %"struct.std::_Rb_tree_node_base"*
  %69 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %68) #3
  store %"struct.std::_Rb_tree_node"* %69, %"struct.std::_Rb_tree_node"** %6, align 8
  %70 = load i32, i32* @x.671
  %71 = load i32, i32* @y.672
  %72 = sub i32 %70, 1
  %73 = mul i32 %70, %72
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %130

; <label>:78:                                     ; preds = %65
  br label %99

; <label>:79:                                     ; preds = %49
  %80 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %80, %"struct.std::_Rb_tree_node"** %8, align 8
  %81 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::_Rb_tree_node"* %81, %"struct.std::_Rb_tree_node"** %9, align 8
  %82 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %82, %"struct.std::_Rb_tree_node"** %7, align 8
  %83 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %84 = bitcast %"struct.std::_Rb_tree_node"* %83 to %"struct.std::_Rb_tree_node_base"*
  %85 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %84) #3
  store %"struct.std::_Rb_tree_node"* %85, %"struct.std::_Rb_tree_node"** %6, align 8
  %86 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %87 = bitcast %"struct.std::_Rb_tree_node"* %86 to %"struct.std::_Rb_tree_node_base"*
  %88 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %87) #3
  store %"struct.std::_Rb_tree_node"* %88, %"struct.std::_Rb_tree_node"** %8, align 8
  %89 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %90 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %91 = load i64*, i64** %5, align 8
  %92 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_lower_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"* %14, %"struct.std::_Rb_tree_node"* %89, %"struct.std::_Rb_tree_node"* %90, i64* dereferenceable(8) %91)
  %93 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %92, %"struct.std::_Rb_tree_node_base"** %93, align 8
  %94 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %95 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %96 = load i64*, i64** %5, align 8
  %97 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_upper_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"* %14, %"struct.std::_Rb_tree_node"* %94, %"struct.std::_Rb_tree_node"* %95, i64* dereferenceable(8) %96)
  %98 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %97, %"struct.std::_Rb_tree_node_base"** %98, align 8
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxES1_EC2IS1_S1_vEEOT_OT0_(%"struct.std::pair.41"* %3, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %11)
  br label %124

; <label>:99:                                     ; preds = %78
  br label %100

; <label>:100:                                    ; preds = %99, %45
  %101 = load i32, i32* @x.671
  %102 = load i32, i32* @y.672
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %109, label %135

; <label>:109:                                    ; preds = %100, %135
  %110 = load i32, i32* @x.671
  %111 = load i32, i32* @y.672
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %118, label %135

; <label>:118:                                    ; preds = %109
  br label %17

; <label>:119:                                    ; preds = %37
  %120 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %121 = bitcast %"struct.std::_Rb_tree_node"* %120 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %12, %"struct.std::_Rb_tree_node_base"* %121) #3
  %122 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %123 = bitcast %"struct.std::_Rb_tree_node"* %122 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_node_base"* %123) #3
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxES1_EC2IS1_S1_vEEOT_OT0_(%"struct.std::pair.41"* %3, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %12, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %13)
  br label %124

; <label>:124:                                    ; preds = %119, %79
  %125 = bitcast %"struct.std::pair.41"* %3 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %126 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %125, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %126

; <label>:127:                                    ; preds = %26, %17
  %128 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %129 = icmp ne %"struct.std::_Rb_tree_node"* %128, null
  br label %26

; <label>:130:                                    ; preds = %65, %56
  %131 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %131, %"struct.std::_Rb_tree_node"** %7, align 8
  %132 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %133 = bitcast %"struct.std::_Rb_tree_node"* %132 to %"struct.std::_Rb_tree_node_base"*
  %134 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %133) #3
  store %"struct.std::_Rb_tree_node"* %134, %"struct.std::_Rb_tree_node"** %6, align 8
  br label %65

; <label>:135:                                    ; preds = %109, %100
  br label %109
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxES7_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"class.std::_Rb_tree"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %7, align 8
  %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7, align 8
  %13 = bitcast %"struct.std::_Rb_tree_const_iterator"* %8 to i8*
  %14 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"struct.std::_Rb_tree_const_iterator"* %9 to i8*
  %16 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %19, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxES7_(%"class.std::_Rb_tree"* %12, %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"* %20)
  %21 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %21, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
  ret %"struct.std::_Rb_tree_node_base"* %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_lower_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = load i32, i32* @x.677
  %6 = load i32, i32* @y.678
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %54

; <label>:13:                                     ; preds = %4, %54
  %14 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %15 = alloca %"class.std::_Rb_tree"*, align 8
  %16 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %17 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %18 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %15, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %16, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %17, align 8
  store i64* %3, i64** %18, align 8
  %19 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %15, align 8
  %20 = load i32, i32* @x.677
  %21 = load i32, i32* @y.678
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %28, label %54

; <label>:28:                                     ; preds = %13
  br label %29

; <label>:29:                                     ; preds = %48, %28
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %16, align 8
  %31 = icmp ne %"struct.std::_Rb_tree_node"* %30, null
  br i1 %31, label %32, label %49

; <label>:32:                                     ; preds = %29
  %33 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %19, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %16, align 8
  %36 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %35)
  %37 = load i64*, i64** %18, align 8
  %38 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %34, i64* dereferenceable(8) %36, i64* dereferenceable(8) %37)
  br i1 %38, label %44, label %39

; <label>:39:                                     ; preds = %32
  %40 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %16, align 8
  store %"struct.std::_Rb_tree_node"* %40, %"struct.std::_Rb_tree_node"** %17, align 8
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %16, align 8
  %42 = bitcast %"struct.std::_Rb_tree_node"* %41 to %"struct.std::_Rb_tree_node_base"*
  %43 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %42) #3
  store %"struct.std::_Rb_tree_node"* %43, %"struct.std::_Rb_tree_node"** %16, align 8
  br label %48

; <label>:44:                                     ; preds = %32
  %45 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %16, align 8
  %46 = bitcast %"struct.std::_Rb_tree_node"* %45 to %"struct.std::_Rb_tree_node_base"*
  %47 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %46) #3
  store %"struct.std::_Rb_tree_node"* %47, %"struct.std::_Rb_tree_node"** %16, align 8
  br label %48

; <label>:48:                                     ; preds = %44, %39
  br label %29

; <label>:49:                                     ; preds = %29
  %50 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %17, align 8
  %51 = bitcast %"struct.std::_Rb_tree_node"* %50 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %14, %"struct.std::_Rb_tree_node_base"* %51) #3
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %53 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %52, align 8
  ret %"struct.std::_Rb_tree_node_base"* %53

; <label>:54:                                     ; preds = %13, %4
  %55 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %56 = alloca %"class.std::_Rb_tree"*, align 8
  %57 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %58 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %59 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %56, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %57, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %58, align 8
  store i64* %3, i64** %59, align 8
  %60 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %56, align 8
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_upper_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %9 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %8, align 8
  store i64* %3, i64** %9, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  br label %11

; <label>:11:                                     ; preds = %30, %4
  %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %13 = icmp ne %"struct.std::_Rb_tree_node"* %12, null
  br i1 %13, label %14, label %31

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %10, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %15, i32 0, i32 0
  %17 = load i64*, i64** %9, align 8
  %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %19 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %18)
  %20 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %16, i64* dereferenceable(8) %17, i64* dereferenceable(8) %19)
  br i1 %20, label %21, label %26

; <label>:21:                                     ; preds = %14
  %22 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::_Rb_tree_node"* %22, %"struct.std::_Rb_tree_node"** %8, align 8
  %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %24 = bitcast %"struct.std::_Rb_tree_node"* %23 to %"struct.std::_Rb_tree_node_base"*
  %25 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %24) #3
  store %"struct.std::_Rb_tree_node"* %25, %"struct.std::_Rb_tree_node"** %7, align 8
  br label %30

; <label>:26:                                     ; preds = %14
  %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %28 = bitcast %"struct.std::_Rb_tree_node"* %27 to %"struct.std::_Rb_tree_node_base"*
  %29 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %28) #3
  store %"struct.std::_Rb_tree_node"* %29, %"struct.std::_Rb_tree_node"** %7, align 8
  br label %30

; <label>:30:                                     ; preds = %26, %21
  br label %11

; <label>:31:                                     ; preds = %11
  %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %33 = bitcast %"struct.std::_Rb_tree_node"* %32 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %5, %"struct.std::_Rb_tree_node_base"* %33) #3
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  ret %"struct.std::_Rb_tree_node_base"* %35
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIxES1_EC2IS1_S1_vEEOT_OT0_(%"struct.std::pair.41"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = load i32, i32* @x.681
  %5 = load i32, i32* @y.682
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %36

; <label>:12:                                     ; preds = %3, %36
  %13 = alloca %"struct.std::pair.41"*, align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %15 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::pair.41"* %0, %"struct.std::pair.41"** %13, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %14, align 8
  store %"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_iterator"** %15, align 8
  %16 = load %"struct.std::pair.41"*, %"struct.std::pair.41"** %13, align 8
  %17 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %16, i32 0, i32 0
  %18 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %14, align 8
  %19 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %18) #3
  %20 = bitcast %"struct.std::_Rb_tree_iterator"* %17 to i8*
  %21 = bitcast %"struct.std::_Rb_tree_iterator"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %16, i32 0, i32 1
  %23 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %15, align 8
  %24 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %23) #3
  %25 = bitcast %"struct.std::_Rb_tree_iterator"* %22 to i8*
  %26 = bitcast %"struct.std::_Rb_tree_iterator"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = load i32, i32* @x.681
  %28 = load i32, i32* @y.682
  %29 = sub i32 %27, 1
  %30 = mul i32 %27, %29
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %12
  ret void

; <label>:36:                                     ; preds = %12, %3
  %37 = alloca %"struct.std::pair.41"*, align 8
  %38 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %39 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::pair.41"* %0, %"struct.std::pair.41"** %37, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %38, align 8
  store %"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_iterator"** %39, align 8
  %40 = load %"struct.std::pair.41"*, %"struct.std::pair.41"** %37, align 8
  %41 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %40, i32 0, i32 0
  %42 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %38, align 8
  %43 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %42) #3
  %44 = bitcast %"struct.std::_Rb_tree_iterator"* %41 to i8*
  %45 = bitcast %"struct.std::_Rb_tree_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %40, i32 0, i32 1
  %47 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %39, align 8
  %48 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %47) #3
  %49 = bitcast %"struct.std::_Rb_tree_iterator"* %46 to i8*
  %50 = bitcast %"struct.std::_Rb_tree_iterator"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxES7_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %14, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %16 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"* %15) #3
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %17, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %7, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %8) #3
  %18 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"* %4, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %7) #3
  br i1 %18, label %19, label %41

; <label>:19:                                     ; preds = %3
  %20 = load i32, i32* @x.683
  %21 = load i32, i32* @y.684
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %28, label %74

; <label>:28:                                     ; preds = %19, %74
  %29 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %15) #3
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %30, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %9, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10) #3
  %31 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"* %5, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %9) #3
  %32 = load i32, i32* @x.683
  %33 = load i32, i32* @y.684
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %74

; <label>:40:                                     ; preds = %28
  br label %41

; <label>:41:                                     ; preds = %40, %3
  %42 = phi i1 [ false, %3 ], [ %31, %40 ]
  br i1 %42, label %43, label %44

; <label>:43:                                     ; preds = %41
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5clearEv(%"class.std::_Rb_tree"* %15) #3
  br label %73

; <label>:44:                                     ; preds = %41
  %45 = load i32, i32* @x.683
  %46 = load i32, i32* @y.684
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %53, label %78

; <label>:53:                                     ; preds = %44, %78
  %54 = load i32, i32* @x.683
  %55 = load i32, i32* @y.684
  %56 = sub i32 %54, 1
  %57 = mul i32 %54, %56
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %59, %60
  br i1 %61, label %62, label %78

; <label>:62:                                     ; preds = %53
  br label %63

; <label>:63:                                     ; preds = %65, %62
  %64 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %4, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %5) #3
  br i1 %64, label %65, label %72

; <label>:65:                                     ; preds = %63
  %66 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorIxEppEi(%"struct.std::_Rb_tree_const_iterator"* %4, i32 0) #3
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %66, %"struct.std::_Rb_tree_node_base"** %67, align 8
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxE(%"class.std::_Rb_tree"* %15, %"struct.std::_Rb_tree_node_base"* %69)
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  br label %63

; <label>:72:                                     ; preds = %63
  br label %73

; <label>:73:                                     ; preds = %72, %43
  ret void

; <label>:74:                                     ; preds = %28, %19
  %75 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %15) #3
  %76 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %75, %"struct.std::_Rb_tree_node_base"** %76, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %9, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10) #3
  %77 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"* %5, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %9) #3
  br label %28

; <label>:78:                                     ; preds = %53, %44
  br label %53
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.687
  %3 = load i32, i32* @y.688
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %27

; <label>:10:                                     ; preds = %1, %27
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %12 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %12, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %12, align 8
  %14 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %13, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %14, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %11, %"struct.std::_Rb_tree_node_base"* %15) #3
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %18 = load i32, i32* @x.687
  %19 = load i32, i32* @y.688
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %10
  ret %"struct.std::_Rb_tree_node_base"* %17

; <label>:27:                                     ; preds = %10, %1
  %28 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %29 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %29, align 8
  %30 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %29, align 8
  %31 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %28, %"struct.std::_Rb_tree_node_base"* %32) #3
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %28, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %33, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5clearEv(%"class.std::_Rb_tree"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.689
  %3 = load i32, i32* @y.690
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %47

; <label>:10:                                     ; preds = %1, %47
  %11 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %11, align 8
  %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11, align 8
  %13 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %12) #3
  %14 = load i32, i32* @x.689
  %15 = load i32, i32* @y.690
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %47

; <label>:22:                                     ; preds = %10
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %12, %"struct.std::_Rb_tree_node"* %13)
          to label %23 unwind label %44

; <label>:23:                                     ; preds = %22
  %24 = load i32, i32* @x.689
  %25 = load i32, i32* @y.690
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %51

; <label>:32:                                     ; preds = %23, %51
  %33 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %12, i32 0, i32 0
  %34 = load i32, i32* @x.689
  %35 = load i32, i32* @y.690
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %51

; <label>:42:                                     ; preds = %32
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %33)
          to label %43 unwind label %44

; <label>:43:                                     ; preds = %42
  ret void

; <label>:44:                                     ; preds = %42, %22
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  call void @__clang_call_terminate(i8* %46) #10
  unreachable

; <label>:47:                                     ; preds = %10, %1
  %48 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %48, align 8
  %49 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %48, align 8
  %50 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %49) #3
  br label %10

; <label>:51:                                     ; preds = %32, %23
  %52 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %12, i32 0, i32 0
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #5 comdat align 2 {
  %3 = load i32, i32* @x.691
  %4 = load i32, i32* @y.692
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %30

; <label>:11:                                     ; preds = %2, %30
  %12 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %13 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %12, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %13, align 8
  %14 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %12, align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %14, i32 0, i32 0
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %17 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13, align 8
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %17, i32 0, i32 0
  %19 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %20 = icmp ne %"struct.std::_Rb_tree_node_base"* %16, %19
  %21 = load i32, i32* @x.691
  %22 = load i32, i32* @y.692
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %11
  ret i1 %20

; <label>:30:                                     ; preds = %11, %2
  %31 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %32 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %31, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %32, align 8
  %33 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %31, align 8
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %36 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %32, align 8
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %36, i32 0, i32 0
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %39 = icmp ne %"struct.std::_Rb_tree_node_base"* %35, %38
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %10 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  %11 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 8, i1 false)
  %12 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIxEppEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %13 = bitcast %"struct.std::_Rb_tree_const_iterator"* %7 to i8*
  %14 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxE(%"class.std::_Rb_tree"* %9, %"struct.std::_Rb_tree_node_base"* %16)
  %17 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %19, align 8
  ret %"struct.std::_Rb_tree_node_base"* %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorIxEppEi(%"struct.std::_Rb_tree_const_iterator"*, i32) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %5 = alloca i32, align 4
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %7 = bitcast %"struct.std::_Rb_tree_const_iterator"* %3 to i8*
  %8 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 8, i1 false)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %10) #14
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret %"struct.std::_Rb_tree_node_base"* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %6 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  br label %7

; <label>:7:                                      ; preds = %28, %2
  %8 = load i32, i32* @x.697
  %9 = load i32, i32* @y.698
  %10 = sub i32 %8, 1
  %11 = mul i32 %8, %10
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %13, %14
  br i1 %15, label %16, label %38

; <label>:16:                                     ; preds = %7, %38
  %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %18 = icmp ne %"struct.std::_Rb_tree_node"* %17, null
  %19 = load i32, i32* @x.697
  %20 = load i32, i32* @y.698
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %38

; <label>:27:                                     ; preds = %16
  br i1 %18, label %28, label %37

; <label>:28:                                     ; preds = %27
  %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %30 = bitcast %"struct.std::_Rb_tree_node"* %29 to %"struct.std::_Rb_tree_node_base"*
  %31 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %30) #3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %6, %"struct.std::_Rb_tree_node"* %31)
  %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %33 = bitcast %"struct.std::_Rb_tree_node"* %32 to %"struct.std::_Rb_tree_node_base"*
  %34 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %33) #3
  store %"struct.std::_Rb_tree_node"* %34, %"struct.std::_Rb_tree_node"** %5, align 8
  %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %6, %"struct.std::_Rb_tree_node"* %35) #3
  %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  store %"struct.std::_Rb_tree_node"* %36, %"struct.std::_Rb_tree_node"** %4, align 8
  br label %7

; <label>:37:                                     ; preds = %27
  ret void

; <label>:38:                                     ; preds = %16, %7
  %39 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %40 = icmp ne %"struct.std::_Rb_tree_node"* %39, null
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %7, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %10, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 2
  store i64 0, i64* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %3 = load i32, i32* @x.701
  %4 = load i32, i32* @y.702
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %26

; <label>:11:                                     ; preds = %2, %26
  %12 = alloca %"class.std::_Rb_tree"*, align 8
  %13 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %12, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %13, align 8
  %14 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %12, align 8
  %15 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %14, %"struct.std::_Rb_tree_node"* %15) #3
  %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %14, %"struct.std::_Rb_tree_node"* %16) #3
  %17 = load i32, i32* @x.701
  %18 = load i32, i32* @y.702
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %11
  ret void

; <label>:26:                                     ; preds = %11, %2
  %27 = alloca %"class.std::_Rb_tree"*, align 8
  %28 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %27, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %28, align 8
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %27, align 8
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %28, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %29, %"struct.std::_Rb_tree_node"* %30) #3
  %31 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %28, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %29, %"struct.std::_Rb_tree_node"* %31) #3
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %8 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %7)
          to label %9 unwind label %30

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.703
  %11 = load i32, i32* @y.704
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %33

; <label>:18:                                     ; preds = %9, %33
  %19 = load i32, i32* @x.703
  %20 = load i32, i32* @y.704
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %33

; <label>:27:                                     ; preds = %18
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.30"* dereferenceable(1) %6, i64* %8)
          to label %28 unwind label %30

; <label>:28:                                     ; preds = %27
  %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  ret void

; <label>:30:                                     ; preds = %27, %2
  %31 = landingpad { i8*, i32 }
          catch i8* null
  %32 = extractvalue { i8*, i32 } %31, 0
  call void @__clang_call_terminate(i8* %32) #10
  unreachable

; <label>:33:                                     ; preds = %18, %9
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.30"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.30"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %3, align 8
  %6 = bitcast %"class.std::allocator.30"* %5 to %"class.__gnu_cxx::new_allocator.31"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.31"* %6, i64* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.31"*, i64*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %4 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIxEppEv(%"struct.std::_Rb_tree_const_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #14
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_const_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %6, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %10 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %7, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %10, i32 0, i32 1
  %12 = call %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %11) #3
  %13 = bitcast %"struct.std::_Rb_tree_node_base"* %12 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %5, align 8
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %7, %"struct.std::_Rb_tree_node"* %14) #3
  %15 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %7, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -1
  store i64 %18, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: nounwind
declare %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4findERKx(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store i64* %1, i64** %5, align 8
  %8 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %9 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %8) #3
  %10 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %8) #3
  %11 = load i64*, i64** %5, align 8
  %12 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_lower_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"* %8, %"struct.std::_Rb_tree_node"* %9, %"struct.std::_Rb_tree_node"* %10, i64* dereferenceable(8) %11)
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %14 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %8) #3
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %16 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %6, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %7) #3
  br i1 %16, label %25, label %17

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %8, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %18, i32 0, i32 0
  %20 = load i64*, i64** %5, align 8
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  %22 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %22)
  %24 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %19, i64* dereferenceable(8) %20, i64* dereferenceable(8) %23)
  br i1 %24, label %25, label %28

; <label>:25:                                     ; preds = %17, %2
  %26 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %8) #3
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %27, align 8
  br label %31

; <label>:28:                                     ; preds = %17
  %29 = bitcast %"struct.std::_Rb_tree_iterator"* %3 to i8*
  %30 = bitcast %"struct.std::_Rb_tree_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 8, i1 false)
  br label %31

; <label>:31:                                     ; preds = %28, %25
  %32 = load i32, i32* @x.713
  %33 = load i32, i32* @y.714
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %52

; <label>:40:                                     ; preds = %31, %52
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %43 = load i32, i32* @x.713
  %44 = load i32, i32* @y.714
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %52

; <label>:51:                                     ; preds = %40
  ret %"struct.std::_Rb_tree_node_base"* %42

; <label>:52:                                     ; preds = %40, %31
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %54 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %53, align 8
  br label %40
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.715
  %3 = load i32, i32* @y.716
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %27

; <label>:10:                                     ; preds = %1, %27
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %12, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %12, align 8
  %14 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %13, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %14, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %11, %"struct.std::_Rb_tree_node_base"* %15) #3
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %18 = load i32, i32* @x.715
  %19 = load i32, i32* @y.716
  %20 = sub i32 %18, 1
  %21 = mul i32 %18, %20
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %23, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %10
  ret %"struct.std::_Rb_tree_node_base"* %17

; <label>:27:                                     ; preds = %10, %1
  %28 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %29 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %29, align 8
  %30 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %29, align 8
  %31 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %28, %"struct.std::_Rb_tree_node_base"* %32) #3
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %28, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %33, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %5) #3
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6)
          to label %7 unwind label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %8) #3
  ret void

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.719
  %11 = load i32, i32* @y.720
  %12 = sub i32 %10, 1
  %13 = mul i32 %10, %12
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %52

; <label>:18:                                     ; preds = %9, %52
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %22) #3
  %23 = load i32, i32* @x.719
  %24 = load i32, i32* @y.720
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %52

; <label>:31:                                     ; preds = %18
  br label %32

; <label>:32:                                     ; preds = %31
  %33 = load i32, i32* @x.719
  %34 = load i32, i32* @y.720
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %57

; <label>:41:                                     ; preds = %32, %57
  %42 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %42) #10
  %43 = load i32, i32* @x.719
  %44 = load i32, i32* @y.720
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %57

; <label>:51:                                     ; preds = %41
  unreachable

; <label>:52:                                     ; preds = %18, %9
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %3, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %4, align 4
  %56 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %56) #3
  br label %18

; <label>:57:                                     ; preds = %41, %32
  %58 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %58) #10
  br label %41
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = load i32, i32* @x.721
  %3 = load i32, i32* @y.722
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %1, %23
  %11 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %11, align 8
  %12 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %11, align 8
  %13 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %12 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.30"* %13) #3
  %14 = load i32, i32* @x.721
  %15 = load i32, i32* @y.722
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %10
  ret void

; <label>:23:                                     ; preds = %10, %1
  %24 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %24, align 8
  %25 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %24, align 8
  %26 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %25 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.30"* %26) #3
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 2
  %13 = load i64*, i64** %12, align 8
  %14 = icmp ne i64* %9, %13
  br i1 %14, label %15, label %30

; <label>:15:                                     ; preds = %2
  %16 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %17 to %"class.std::allocator.0"*
  %19 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = load i64*, i64** %4, align 8
  %24 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %23) #3
  call void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %18, i64* %22, i64* dereferenceable(8) %24)
  %25 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i32 1
  store i64* %29, i64** %27, align 8
  br label %33

; <label>:30:                                     ; preds = %2
  %31 = load i64*, i64** %4, align 8
  %32 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %31) #3
  call void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector"* %5, i64* dereferenceable(8) %32)
  br label %33

; <label>:33:                                     ; preds = %30, %15
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"* %8, i64* %9, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.731
  %4 = load i32, i32* @y.732
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %214

; <label>:11:                                     ; preds = %2, %214
  %12 = alloca %"class.std::vector"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64*, align 8
  %16 = alloca i64*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %12, align 8
  store i64* %1, i64** %13, align 8
  %19 = load %"class.std::vector"*, %"class.std::vector"** %12, align 8
  %20 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector"* %19, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %20, i64* %14, align 8
  %21 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %22 = load i64, i64* %14, align 8
  %23 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %21, i64 %22)
  store i64* %23, i64** %15, align 8
  %24 = load i64*, i64** %15, align 8
  store i64* %24, i64** %16, align 8
  %25 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %26 to %"class.std::allocator.0"*
  %28 = load i64*, i64** %15, align 8
  %29 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %19) #3
  %30 = getelementptr inbounds i64, i64* %28, i64 %29
  %31 = load i64*, i64** %13, align 8
  %32 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %31) #3
  %33 = load i32, i32* @x.731
  %34 = load i32, i32* @y.732
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %214

; <label>:41:                                     ; preds = %11
  invoke void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %27, i64* %30, i64* dereferenceable(8) %32)
          to label %42 unwind label %58

; <label>:42:                                     ; preds = %41
  store i64* null, i64** %16, align 8
  %43 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %48, i32 0, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = load i64*, i64** %15, align 8
  %52 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %53 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %52) #3
  %54 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %46, i64* %50, i64* %51, %"class.std::allocator.0"* dereferenceable(1) %53)
          to label %55 unwind label %58

; <label>:55:                                     ; preds = %42
  store i64* %54, i64** %16, align 8
  %56 = load i64*, i64** %16, align 8
  %57 = getelementptr inbounds i64, i64* %56, i32 1
  store i64* %57, i64** %16, align 8
  br label %145

; <label>:58:                                     ; preds = %42, %41
  %59 = load i32, i32* @x.731
  %60 = load i32, i32* @y.732
  %61 = sub i32 %59, 1
  %62 = mul i32 %59, %61
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %236

; <label>:67:                                     ; preds = %58, %236
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %17, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %18, align 4
  %71 = load i32, i32* @x.731
  %72 = load i32, i32* @y.732
  %73 = sub i32 %71, 1
  %74 = mul i32 %71, %73
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %72, 10
  %78 = or i1 %76, %77
  br i1 %78, label %79, label %236

; <label>:79:                                     ; preds = %67
  br label %80

; <label>:80:                                     ; preds = %79
  %81 = load i8*, i8** %17, align 8
  %82 = call i8* @__cxa_begin_catch(i8* %81) #3
  %83 = load i64*, i64** %16, align 8
  %84 = icmp ne i64* %83, null
  br i1 %84, label %97, label %85

; <label>:85:                                     ; preds = %80
  %86 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %87 to %"class.std::allocator.0"*
  %89 = load i64*, i64** %15, align 8
  %90 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %19) #3
  %91 = getelementptr inbounds i64, i64* %89, i64 %90
  invoke void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1) %88, i64* %91)
          to label %92 unwind label %93

; <label>:92:                                     ; preds = %85
  br label %121

; <label>:93:                                     ; preds = %143, %142, %97, %85
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %17, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %18, align 4
  invoke void @__cxa_end_catch()
          to label %144 unwind label %192

; <label>:97:                                     ; preds = %80
  %98 = load i64*, i64** %15, align 8
  %99 = load i64*, i64** %16, align 8
  %100 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %101 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %100) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %98, i64* %99, %"class.std::allocator.0"* dereferenceable(1) %101)
          to label %102 unwind label %93

; <label>:102:                                    ; preds = %97
  %103 = load i32, i32* @x.731
  %104 = load i32, i32* @y.732
  %105 = sub i32 %103, 1
  %106 = mul i32 %103, %105
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %108, %109
  br i1 %110, label %111, label %240

; <label>:111:                                    ; preds = %102, %240
  %112 = load i32, i32* @x.731
  %113 = load i32, i32* @y.732
  %114 = sub i32 %112, 1
  %115 = mul i32 %112, %114
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %117, %118
  br i1 %119, label %120, label %240

; <label>:120:                                    ; preds = %111
  br label %121

; <label>:121:                                    ; preds = %120, %92
  %122 = load i32, i32* @x.731
  %123 = load i32, i32* @y.732
  %124 = sub i32 %122, 1
  %125 = mul i32 %122, %124
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %123, 10
  %129 = or i1 %127, %128
  br i1 %129, label %130, label %241

; <label>:130:                                    ; preds = %121, %241
  %131 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %132 = load i64*, i64** %15, align 8
  %133 = load i64, i64* %14, align 8
  %134 = load i32, i32* @x.731
  %135 = load i32, i32* @y.732
  %136 = sub i32 %134, 1
  %137 = mul i32 %134, %136
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %139, %140
  br i1 %141, label %142, label %241

; <label>:142:                                    ; preds = %130
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %131, i64* %132, i64 %133)
          to label %143 unwind label %93

; <label>:143:                                    ; preds = %142
  invoke void @__cxa_rethrow() #13
          to label %195 unwind label %93

; <label>:144:                                    ; preds = %93
  br label %187

; <label>:145:                                    ; preds = %55
  %146 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %147 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %146, i32 0, i32 0
  %148 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %147, i32 0, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %151 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %150, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %151, i32 0, i32 1
  %153 = load i64*, i64** %152, align 8
  %154 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %155 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %154) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %149, i64* %153, %"class.std::allocator.0"* dereferenceable(1) %155)
  %156 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %157 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %158 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %157, i32 0, i32 0
  %159 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %158, i32 0, i32 0
  %160 = load i64*, i64** %159, align 8
  %161 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %162 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %161, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %162, i32 0, i32 2
  %164 = load i64*, i64** %163, align 8
  %165 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %166 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %165, i32 0, i32 0
  %167 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %166, i32 0, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = ptrtoint i64* %164 to i64
  %170 = ptrtoint i64* %168 to i64
  %171 = sub i64 %169, %170
  %172 = sdiv exact i64 %171, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %156, i64* %160, i64 %172)
  %173 = load i64*, i64** %15, align 8
  %174 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %174, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %175, i32 0, i32 0
  store i64* %173, i64** %176, align 8
  %177 = load i64*, i64** %16, align 8
  %178 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %179 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %178, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %179, i32 0, i32 1
  store i64* %177, i64** %180, align 8
  %181 = load i64*, i64** %15, align 8
  %182 = load i64, i64* %14, align 8
  %183 = getelementptr inbounds i64, i64* %181, i64 %182
  %184 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %185 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %184, i32 0, i32 0
  %186 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %185, i32 0, i32 2
  store i64* %183, i64** %186, align 8
  ret void

; <label>:187:                                    ; preds = %144
  %188 = load i8*, i8** %17, align 8
  %189 = load i32, i32* %18, align 4
  %190 = insertvalue { i8*, i32 } undef, i8* %188, 0
  %191 = insertvalue { i8*, i32 } %190, i32 %189, 1
  resume { i8*, i32 } %191

; <label>:192:                                    ; preds = %93
  %193 = landingpad { i8*, i32 }
          catch i8* null
  %194 = extractvalue { i8*, i32 } %193, 0
  call void @__clang_call_terminate(i8* %194) #10
  unreachable

; <label>:195:                                    ; preds = %143
  %196 = load i32, i32* @x.731
  %197 = load i32, i32* @y.732
  %198 = sub i32 %196, 1
  %199 = mul i32 %196, %198
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %201, %202
  br i1 %203, label %204, label %245

; <label>:204:                                    ; preds = %195, %245
  %205 = load i32, i32* @x.731
  %206 = load i32, i32* @y.732
  %207 = sub i32 %205, 1
  %208 = mul i32 %205, %207
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %210, %211
  br i1 %212, label %213, label %245

; <label>:213:                                    ; preds = %204
  unreachable

; <label>:214:                                    ; preds = %11, %2
  %215 = alloca %"class.std::vector"*, align 8
  %216 = alloca i64*, align 8
  %217 = alloca i64, align 8
  %218 = alloca i64*, align 8
  %219 = alloca i64*, align 8
  %220 = alloca i8*
  %221 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %215, align 8
  store i64* %1, i64** %216, align 8
  %222 = load %"class.std::vector"*, %"class.std::vector"** %215, align 8
  %223 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector"* %222, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %223, i64* %217, align 8
  %224 = bitcast %"class.std::vector"* %222 to %"struct.std::_Vector_base"*
  %225 = load i64, i64* %217, align 8
  %226 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %224, i64 %225)
  store i64* %226, i64** %218, align 8
  %227 = load i64*, i64** %218, align 8
  store i64* %227, i64** %219, align 8
  %228 = bitcast %"class.std::vector"* %222 to %"struct.std::_Vector_base"*
  %229 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %228, i32 0, i32 0
  %230 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %229 to %"class.std::allocator.0"*
  %231 = load i64*, i64** %218, align 8
  %232 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %222) #3
  %233 = getelementptr inbounds i64, i64* %231, i64 %232
  %234 = load i64*, i64** %216, align 8
  %235 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %234) #3
  br label %11

; <label>:236:                                    ; preds = %67, %58
  %237 = landingpad { i8*, i32 }
          catch i8* null
  %238 = extractvalue { i8*, i32 } %237, 0
  store i8* %238, i8** %17, align 8
  %239 = extractvalue { i8*, i32 } %237, 1
  store i32 %239, i32* %18, align 4
  br label %67

; <label>:240:                                    ; preds = %111, %102
  br label %111

; <label>:241:                                    ; preds = %130, %121
  %242 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %243 = load i64*, i64** %15, align 8
  %244 = load i64, i64* %14, align 8
  br label %130

; <label>:245:                                    ; preds = %204, %195
  br label %204
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"*, i64*, i64* dereferenceable(8)) #5 comdat align 2 {
  %4 = load i32, i32* @x.733
  %5 = load i32, i32* @y.734
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %32

; <label>:12:                                     ; preds = %3, %32
  %13 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %13, align 8
  store i64* %1, i64** %14, align 8
  store i64* %2, i64** %15, align 8
  %16 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %13, align 8
  %17 = load i64*, i64** %14, align 8
  %18 = bitcast i64* %17 to i8*
  %19 = bitcast i8* %18 to i64*
  %20 = load i64*, i64** %15, align 8
  %21 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %20) #3
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  %23 = load i32, i32* @x.733
  %24 = load i32, i32* @y.734
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %12
  ret void

; <label>:32:                                     ; preds = %12, %3
  %33 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %34 = alloca i64*, align 8
  %35 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %33, align 8
  store i64* %1, i64** %34, align 8
  store i64* %2, i64** %35, align 8
  %36 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %33, align 8
  %37 = load i64*, i64** %34, align 8
  %38 = bitcast i64* %37 to i8*
  %39 = bitcast i8* %38 to i64*
  %40 = load i64*, i64** %35, align 8
  %41 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %40) #3
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %39, align 8
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.735
  %5 = load i32, i32* @y.736
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %54

; <label>:12:                                     ; preds = %3, %54
  %13 = alloca %"class.std::vector"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %13, align 8
  store i64 %1, i64* %14, align 8
  store i8* %2, i8** %15, align 8
  %18 = load %"class.std::vector"*, %"class.std::vector"** %13, align 8
  %19 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %18) #3
  %20 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %18) #3
  %21 = sub i64 %19, %20
  %22 = load i64, i64* %14, align 8
  %23 = icmp ult i64 %21, %22
  %24 = load i32, i32* @x.735
  %25 = load i32, i32* @y.736
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %54

; <label>:32:                                     ; preds = %12
  br i1 %23, label %33, label %35

; <label>:33:                                     ; preds = %32
  %34 = load i8*, i8** %15, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #13
  unreachable

; <label>:35:                                     ; preds = %32
  %36 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %18) #3
  %37 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %18) #3
  store i64 %37, i64* %17, align 8
  %38 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %17, i64* dereferenceable(8) %14)
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %36, %39
  store i64 %40, i64* %16, align 8
  %41 = load i64, i64* %16, align 8
  %42 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %18) #3
  %43 = icmp ult i64 %41, %42
  br i1 %43, label %48, label %44

; <label>:44:                                     ; preds = %35
  %45 = load i64, i64* %16, align 8
  %46 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %18) #3
  %47 = icmp ugt i64 %45, %46
  br i1 %47, label %48, label %50

; <label>:48:                                     ; preds = %44, %35
  %49 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %18) #3
  br label %52

; <label>:50:                                     ; preds = %44
  %51 = load i64, i64* %16, align 8
  br label %52

; <label>:52:                                     ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %51, %50 ]
  ret i64 %53

; <label>:54:                                     ; preds = %12, %3
  %55 = alloca %"class.std::vector"*, align 8
  %56 = alloca i64, align 8
  %57 = alloca i8*, align 8
  %58 = alloca i64, align 8
  %59 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %55, align 8
  store i64 %1, i64* %56, align 8
  store i8* %2, i8** %57, align 8
  %60 = load %"class.std::vector"*, %"class.std::vector"** %55, align 8
  %61 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %60) #3
  %62 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %60) #3
  %63 = sub i64 0, %61
  %64 = add i64 %63, %62
  %65 = shl i64 %61, %62
  %66 = sub i64 0, %61
  %67 = add i64 %66, %62
  %68 = sub i64 0, %61
  %69 = add i64 %68, %62
  %70 = sub i64 0, %61
  %71 = add i64 %70, %62
  %72 = shl i64 %61, %62
  %73 = sub i64 %61, %62
  %74 = mul i64 %73, %62
  %75 = shl i64 %61, %62
  %76 = sub i64 %61, %62
  %77 = load i64, i64* %56, align 8
  %78 = icmp ult i64 %76, %77
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.737
  %4 = load i32, i32* @y.738
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %52

; <label>:11:                                     ; preds = %2, %52
  %12 = alloca %"struct.std::_Vector_base"*, align 8
  %13 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %12, align 8
  store i64 %1, i64* %13, align 8
  %14 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %12, align 8
  %15 = load i64, i64* %13, align 8
  %16 = icmp ne i64 %15, 0
  %17 = load i32, i32* @x.737
  %18 = load i32, i32* @y.738
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %52

; <label>:25:                                     ; preds = %11
  br i1 %16, label %26, label %31

; <label>:26:                                     ; preds = %25
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %14, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %27 to %"class.std::allocator.0"*
  %29 = load i64, i64* %13, align 8
  %30 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %28, i64 %29)
  br label %32

; <label>:31:                                     ; preds = %25
  br label %32

; <label>:32:                                     ; preds = %31, %26
  %33 = phi i64* [ %30, %26 ], [ null, %31 ]
  %34 = load i32, i32* @x.737
  %35 = load i32, i32* @y.738
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %58

; <label>:42:                                     ; preds = %32, %58
  %43 = load i32, i32* @x.737
  %44 = load i32, i32* @y.738
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %58

; <label>:51:                                     ; preds = %42
  ret i64* %33

; <label>:52:                                     ; preds = %11, %2
  %53 = alloca %"struct.std::_Vector_base"*, align 8
  %54 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %53, align 8
  %56 = load i64, i64* %54, align 8
  %57 = icmp ne i64 %56, 0
  br label %11

; <label>:58:                                     ; preds = %42, %32
  br label %42
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 8
  ret i64 %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.741
  %6 = load i32, i32* @y.742
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %42

; <label>:13:                                     ; preds = %4, %42
  %14 = alloca i64*, align 8
  %15 = alloca i64*, align 8
  %16 = alloca i64*, align 8
  %17 = alloca %"class.std::allocator.0"*, align 8
  %18 = alloca %"class.std::move_iterator.42", align 8
  %19 = alloca %"class.std::move_iterator.42", align 8
  store i64* %0, i64** %14, align 8
  store i64* %1, i64** %15, align 8
  store i64* %2, i64** %16, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %17, align 8
  %20 = load i64*, i64** %14, align 8
  %21 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %20)
  %22 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %18, i32 0, i32 0
  store i64* %21, i64** %22, align 8
  %23 = load i64*, i64** %15, align 8
  %24 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %23)
  %25 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %19, i32 0, i32 0
  store i64* %24, i64** %25, align 8
  %26 = load i64*, i64** %16, align 8
  %27 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %17, align 8
  %28 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %18, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %19, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %29, i64* %31, i64* %26, %"class.std::allocator.0"* dereferenceable(1) %27)
  %33 = load i32, i32* @x.741
  %34 = load i32, i32* @y.742
  %35 = sub i32 %33, 1
  %36 = mul i32 %33, %35
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %13
  ret i64* %32

; <label>:42:                                     ; preds = %13, %4
  %43 = alloca i64*, align 8
  %44 = alloca i64*, align 8
  %45 = alloca i64*, align 8
  %46 = alloca %"class.std::allocator.0"*, align 8
  %47 = alloca %"class.std::move_iterator.42", align 8
  %48 = alloca %"class.std::move_iterator.42", align 8
  store i64* %0, i64** %43, align 8
  store i64* %1, i64** %44, align 8
  store i64* %2, i64** %45, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %46, align 8
  %49 = load i64*, i64** %43, align 8
  %50 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %49)
  %51 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %47, i32 0, i32 0
  store i64* %50, i64** %51, align 8
  %52 = load i64*, i64** %44, align 8
  %53 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %52)
  %54 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %48, i32 0, i32 0
  store i64* %53, i64** %54, align 8
  %55 = load i64*, i64** %45, align 8
  %56 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %46, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %47, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %48, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %58, i64* %60, i64* %55, %"class.std::allocator.0"* dereferenceable(1) %56)
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.1"* %6, i64* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = icmp ne i64* %8, null
  br i1 %9, label %10, label %15

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11 to %"class.std::allocator.0"*
  %13 = load i64*, i64** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.0"* dereferenceable(1) %12, i64* %13, i64 %14)
  br label %15

; <label>:15:                                     ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.751
  %3 = load i32, i32* @y.752
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %25

; <label>:10:                                     ; preds = %1, %25
  %11 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %11, align 8
  %12 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
  %13 = bitcast %"class.std::vector"* %12 to %"struct.std::_Vector_base"*
  %14 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %13) #3
  %15 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1) %14) #3
  %16 = load i32, i32* @x.751
  %17 = load i32, i32* @y.752
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %10
  ret i64 %15

; <label>:25:                                     ; preds = %10, %1
  %26 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %26, align 8
  %27 = load %"class.std::vector"*, %"class.std::vector"** %26, align 8
  %28 = bitcast %"class.std::vector"* %27 to %"struct.std::_Vector_base"*
  %29 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %28) #3
  %30 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1) %29) #3
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %7) #3
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %30

; <label>:11:                                     ; preds = %3
  %12 = load i32, i32* @x.761
  %13 = load i32, i32* @y.762
  %14 = sub i32 %12, 1
  %15 = mul i32 %12, %14
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %13, 10
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %35

; <label>:20:                                     ; preds = %11, %35
  call void @_ZSt17__throw_bad_allocv() #13
  %21 = load i32, i32* @x.761
  %22 = load i32, i32* @y.762
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %35

; <label>:29:                                     ; preds = %20
  unreachable

; <label>:30:                                     ; preds = %3
  %31 = load i64, i64* %5, align 8
  %32 = mul i64 %31, 8
  %33 = call i8* @_Znwm(i64 %32)
  %34 = bitcast i8* %33 to i64*
  ret i64* %34

; <label>:35:                                     ; preds = %20, %11
  call void @_ZSt17__throw_bad_allocv() #13
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.42", align 8
  %6 = alloca %"class.std::move_iterator.42", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.std::move_iterator.42", align 8
  %10 = alloca %"class.std::move_iterator.42", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.42"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.42"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.42"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.42", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.42"* %2, i64* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = load i32, i32* @x.767
  %5 = load i32, i32* @y.768
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %40

; <label>:12:                                     ; preds = %3, %40
  %13 = alloca %"class.std::move_iterator.42", align 8
  %14 = alloca %"class.std::move_iterator.42", align 8
  %15 = alloca i64*, align 8
  %16 = alloca i8, align 1
  %17 = alloca %"class.std::move_iterator.42", align 8
  %18 = alloca %"class.std::move_iterator.42", align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %13, i32 0, i32 0
  store i64* %0, i64** %19, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %14, i32 0, i32 0
  store i64* %1, i64** %20, align 8
  store i64* %2, i64** %15, align 8
  store i8 1, i8* %16, align 1
  %21 = bitcast %"class.std::move_iterator.42"* %17 to i8*
  %22 = bitcast %"class.std::move_iterator.42"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.std::move_iterator.42"* %18 to i8*
  %24 = bitcast %"class.std::move_iterator.42"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = load i64*, i64** %15, align 8
  %26 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %17, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %18, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %27, i64* %29, i64* %25)
  %31 = load i32, i32* @x.767
  %32 = load i32, i32* @y.768
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %40

; <label>:39:                                     ; preds = %12
  ret i64* %30

; <label>:40:                                     ; preds = %12, %3
  %41 = alloca %"class.std::move_iterator.42", align 8
  %42 = alloca %"class.std::move_iterator.42", align 8
  %43 = alloca i64*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.std::move_iterator.42", align 8
  %46 = alloca %"class.std::move_iterator.42", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %41, i32 0, i32 0
  store i64* %0, i64** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %42, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  store i64* %2, i64** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.std::move_iterator.42"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.42"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.42"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.42"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load i64*, i64** %43, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %45, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %46, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %55, i64* %57, i64* %53)
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = load i32, i32* @x.769
  %5 = load i32, i32* @y.770
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %39

; <label>:12:                                     ; preds = %3, %39
  %13 = alloca %"class.std::move_iterator.42", align 8
  %14 = alloca %"class.std::move_iterator.42", align 8
  %15 = alloca i64*, align 8
  %16 = alloca %"class.std::move_iterator.42", align 8
  %17 = alloca %"class.std::move_iterator.42", align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %13, i32 0, i32 0
  store i64* %0, i64** %18, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %14, i32 0, i32 0
  store i64* %1, i64** %19, align 8
  store i64* %2, i64** %15, align 8
  %20 = bitcast %"class.std::move_iterator.42"* %16 to i8*
  %21 = bitcast %"class.std::move_iterator.42"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.std::move_iterator.42"* %17 to i8*
  %23 = bitcast %"class.std::move_iterator.42"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load i64*, i64** %15, align 8
  %25 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %16, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %17, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %26, i64* %28, i64* %24)
  %30 = load i32, i32* @x.769
  %31 = load i32, i32* @y.770
  %32 = sub i32 %30, 1
  %33 = mul i32 %30, %32
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %39

; <label>:38:                                     ; preds = %12
  ret i64* %29

; <label>:39:                                     ; preds = %12, %3
  %40 = alloca %"class.std::move_iterator.42", align 8
  %41 = alloca %"class.std::move_iterator.42", align 8
  %42 = alloca i64*, align 8
  %43 = alloca %"class.std::move_iterator.42", align 8
  %44 = alloca %"class.std::move_iterator.42", align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %40, i32 0, i32 0
  store i64* %0, i64** %45, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %41, i32 0, i32 0
  store i64* %1, i64** %46, align 8
  store i64* %2, i64** %42, align 8
  %47 = bitcast %"class.std::move_iterator.42"* %43 to i8*
  %48 = bitcast %"class.std::move_iterator.42"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = bitcast %"class.std::move_iterator.42"* %44 to i8*
  %50 = bitcast %"class.std::move_iterator.42"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = load i64*, i64** %42, align 8
  %52 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %43, i32 0, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %44, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %53, i64* %55, i64* %51)
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.42", align 8
  %5 = alloca %"class.std::move_iterator.42", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.42", align 8
  %8 = alloca %"class.std::move_iterator.42", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.42"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.42"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %14)
  %16 = bitcast %"class.std::move_iterator.42"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %15, i64* %20, i64* %21)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = load i32, i32* @x.773
  %5 = load i32, i32* @y.774
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %32

; <label>:12:                                     ; preds = %3, %32
  %13 = alloca i64*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i64*, align 8
  store i64* %0, i64** %13, align 8
  store i64* %1, i64** %14, align 8
  store i64* %2, i64** %15, align 8
  %16 = load i64*, i64** %13, align 8
  %17 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %16)
  %18 = load i64*, i64** %14, align 8
  %19 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %18)
  %20 = load i64*, i64** %15, align 8
  %21 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %20)
  %22 = call i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64* %17, i64* %19, i64* %21)
  %23 = load i32, i32* @x.773
  %24 = load i32, i32* @y.774
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %12
  ret i64* %22

; <label>:32:                                     ; preds = %12, %3
  %33 = alloca i64*, align 8
  %34 = alloca i64*, align 8
  %35 = alloca i64*, align 8
  store i64* %0, i64** %33, align 8
  store i64* %1, i64** %34, align 8
  store i64* %2, i64** %35, align 8
  %36 = load i64*, i64** %33, align 8
  %37 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %36)
  %38 = load i64*, i64** %34, align 8
  %39 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %38)
  %40 = load i64*, i64** %35, align 8
  %41 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %40)
  %42 = call i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64* %37, i64* %39, i64* %41)
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.42", align 8
  %3 = alloca %"class.std::move_iterator.42", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.std::move_iterator.42"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.42"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #5 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = ptrtoint i64* %8 to i64
  %11 = ptrtoint i64* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %41

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.781
  %18 = load i32, i32* @y.782
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %45

; <label>:25:                                     ; preds = %16, %45
  %26 = load i64*, i64** %6, align 8
  %27 = bitcast i64* %26 to i8*
  %28 = load i64*, i64** %4, align 8
  %29 = bitcast i64* %28 to i8*
  %30 = load i64, i64* %7, align 8
  %31 = mul i64 8, %30
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %27, i8* %29, i64 %31, i32 8, i1 false)
  %32 = load i32, i32* @x.781
  %33 = load i32, i32* @y.782
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %45

; <label>:40:                                     ; preds = %25
  br label %41

; <label>:41:                                     ; preds = %40, %3
  %42 = load i64*, i64** %6, align 8
  %43 = load i64, i64* %7, align 8
  %44 = getelementptr inbounds i64, i64* %42, i64 %43
  ret i64* %44

; <label>:45:                                     ; preds = %25, %16
  %46 = load i64*, i64** %6, align 8
  %47 = bitcast i64* %46 to i8*
  %48 = load i64*, i64** %4, align 8
  %49 = bitcast i64* %48 to i8*
  %50 = load i64, i64* %7, align 8
  %51 = sub i64 0, 8
  %52 = add i64 %51, %50
  %53 = mul i64 8, %50
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %47, i8* %49, i64 %53, i32 8, i1 false)
  br label %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #5 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64*) #0 comdat align 2 {
  %2 = load i32, i32* @x.785
  %3 = load i32, i32* @y.786
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %1, %23
  %11 = alloca %"class.std::move_iterator.42", align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %11, i32 0, i32 0
  store i64* %0, i64** %12, align 8
  %13 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.42"* %11)
  %14 = load i32, i32* @x.785
  %15 = load i32, i32* @y.786
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %10
  ret i64* %13

; <label>:23:                                     ; preds = %10, %1
  %24 = alloca %"class.std::move_iterator.42", align 8
  %25 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %24, i32 0, i32 0
  store i64* %0, i64** %25, align 8
  %26 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.42"* %24)
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.42"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.787
  %3 = load i32, i32* @y.788
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"class.std::move_iterator.42"*, align 8
  store %"class.std::move_iterator.42"* %0, %"class.std::move_iterator.42"** %11, align 8
  %12 = load %"class.std::move_iterator.42"*, %"class.std::move_iterator.42"** %11, align 8
  %13 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = load i32, i32* @x.787
  %16 = load i32, i32* @y.788
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret i64* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"class.std::move_iterator.42"*, align 8
  store %"class.std::move_iterator.42"* %0, %"class.std::move_iterator.42"** %25, align 8
  %26 = load %"class.std::move_iterator.42"*, %"class.std::move_iterator.42"** %25, align 8
  %27 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %26, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.42"*, i64*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.42"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::move_iterator.42"* %0, %"class.std::move_iterator.42"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::move_iterator.42"*, %"class.std::move_iterator.42"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.1"*, i64*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %4 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #5 comdat align 2 {
  %3 = load i32, i32* @x.795
  %4 = load i32, i32* @y.796
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %23

; <label>:11:                                     ; preds = %2, %23
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  store i64* %0, i64** %12, align 8
  store i64* %1, i64** %13, align 8
  %14 = load i32, i32* @x.795
  %15 = load i32, i32* @y.796
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %11
  ret void

; <label>:23:                                     ; preds = %11, %2
  %24 = alloca i64*, align 8
  %25 = alloca i64*, align 8
  store i64* %0, i64** %24, align 8
  store i64* %1, i64** %25, align 8
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.0"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.1"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.1"*, i64*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_(%"class.std::vector.3"*, double* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load double*, double** %8, align 8
  %10 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %11, i32 0, i32 2
  %13 = load double*, double** %12, align 8
  %14 = icmp ne double* %9, %13
  br i1 %14, label %15, label %30

; <label>:15:                                     ; preds = %2
  %16 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %17 to %"class.std::allocator.5"*
  %19 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load double*, double** %21, align 8
  %23 = load double*, double** %4, align 8
  %24 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %23) #3
  call void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %18, double* %22, double* dereferenceable(8) %24)
  %25 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load double*, double** %27, align 8
  %29 = getelementptr inbounds double, double* %28, i32 1
  store double* %29, double** %27, align 8
  br label %33

; <label>:30:                                     ; preds = %2
  %31 = load double*, double** %4, align 8
  %32 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %31) #3
  call void @_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_(%"class.std::vector.3"* %5, double* dereferenceable(8) %32)
  br label %33

; <label>:33:                                     ; preds = %30, %15
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_(double* dereferenceable(8)) #5 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), double*, double* dereferenceable(8)) #0 comdat align 2 {
  %4 = load i32, i32* @x.805
  %5 = load i32, i32* @y.806
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %30

; <label>:12:                                     ; preds = %3, %30
  %13 = alloca %"class.std::allocator.5"*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %13, align 8
  store double* %1, double** %14, align 8
  store double* %2, double** %15, align 8
  %16 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %13, align 8
  %17 = bitcast %"class.std::allocator.5"* %16 to %"class.__gnu_cxx::new_allocator.6"*
  %18 = load double*, double** %14, align 8
  %19 = load double*, double** %15, align 8
  %20 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %19) #3
  call void @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %17, double* %18, double* dereferenceable(8) %20)
  %21 = load i32, i32* @x.805
  %22 = load i32, i32* @y.806
  %23 = sub i32 %21, 1
  %24 = mul i32 %21, %23
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %12
  ret void

; <label>:30:                                     ; preds = %12, %3
  %31 = alloca %"class.std::allocator.5"*, align 8
  %32 = alloca double*, align 8
  %33 = alloca double*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %31, align 8
  store double* %1, double** %32, align 8
  store double* %2, double** %33, align 8
  %34 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %31, align 8
  %35 = bitcast %"class.std::allocator.5"* %34 to %"class.__gnu_cxx::new_allocator.6"*
  %36 = load double*, double** %32, align 8
  %37 = load double*, double** %33, align 8
  %38 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %37) #3
  call void @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %35, double* %36, double* dereferenceable(8) %38)
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8)) #5 comdat {
  %2 = load i32, i32* @x.807
  %3 = load i32, i32* @y.808
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca double*, align 8
  store double* %0, double** %11, align 8
  %12 = load double*, double** %11, align 8
  %13 = load i32, i32* @x.807
  %14 = load i32, i32* @y.808
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret double* %12

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca double*, align 8
  store double* %0, double** %23, align 8
  %24 = load double*, double** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_(%"class.std::vector.3"*, double* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store double* %1, double** %4, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.3"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %13 = load i64, i64* %5, align 8
  %14 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.4"* %12, i64 %13)
  store double* %14, double** %6, align 8
  %15 = load double*, double** %6, align 8
  store double* %15, double** %7, align 8
  %16 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %17 to %"class.std::allocator.5"*
  %19 = load double*, double** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %10) #3
  %21 = getelementptr inbounds double, double* %19, i64 %20
  %22 = load double*, double** %4, align 8
  %23 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %18, double* %21, double* dereferenceable(8) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store double* null, double** %7, align 8
  %25 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load double*, double** %27, align 8
  %29 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load double*, double** %31, align 8
  %33 = load double*, double** %6, align 8
  %34 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %35 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %34) #3
  %36 = invoke double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %28, double* %32, double* %33, %"class.std::allocator.5"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store double* %36, double** %7, align 8
  %38 = load double*, double** %7, align 8
  %39 = getelementptr inbounds double, double* %38, i32 1
  store double* %39, double** %7, align 8
  br label %127

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8*, i8** %8, align 8
  %46 = call i8* @__cxa_begin_catch(i8* %45) #3
  %47 = load double*, double** %7, align 8
  %48 = icmp ne double* %47, null
  br i1 %48, label %97, label %49

; <label>:49:                                     ; preds = %44
  %50 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %51 to %"class.std::allocator.5"*
  %53 = load double*, double** %6, align 8
  %54 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %10) #3
  %55 = getelementptr inbounds double, double* %53, i64 %54
  invoke void @_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1) %52, double* %55)
          to label %56 unwind label %75

; <label>:56:                                     ; preds = %49
  %57 = load i32, i32* @x.809
  %58 = load i32, i32* @y.810
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %196

; <label>:65:                                     ; preds = %56, %196
  %66 = load i32, i32* @x.809
  %67 = load i32, i32* @y.810
  %68 = sub i32 %66, 1
  %69 = mul i32 %66, %68
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %71, %72
  br i1 %73, label %74, label %196

; <label>:74:                                     ; preds = %65
  br label %121

; <label>:75:                                     ; preds = %125, %121, %119, %49
  %76 = load i32, i32* @x.809
  %77 = load i32, i32* @y.810
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %84, label %197

; <label>:84:                                     ; preds = %75, %197
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %8, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %9, align 4
  %88 = load i32, i32* @x.809
  %89 = load i32, i32* @y.810
  %90 = sub i32 %88, 1
  %91 = mul i32 %88, %90
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %93, %94
  br i1 %95, label %96, label %197

; <label>:96:                                     ; preds = %84
  invoke void @__cxa_end_catch()
          to label %126 unwind label %174

; <label>:97:                                     ; preds = %44
  %98 = load i32, i32* @x.809
  %99 = load i32, i32* @y.810
  %100 = sub i32 %98, 1
  %101 = mul i32 %98, %100
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %99, 10
  %105 = or i1 %103, %104
  br i1 %105, label %106, label %201

; <label>:106:                                    ; preds = %97, %201
  %107 = load double*, double** %6, align 8
  %108 = load double*, double** %7, align 8
  %109 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %110 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %109) #3
  %111 = load i32, i32* @x.809
  %112 = load i32, i32* @y.810
  %113 = sub i32 %111, 1
  %114 = mul i32 %111, %113
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %112, 10
  %118 = or i1 %116, %117
  br i1 %118, label %119, label %201

; <label>:119:                                    ; preds = %106
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %107, double* %108, %"class.std::allocator.5"* dereferenceable(1) %110)
          to label %120 unwind label %75

; <label>:120:                                    ; preds = %119
  br label %121

; <label>:121:                                    ; preds = %120, %74
  %122 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %123 = load double*, double** %6, align 8
  %124 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* %122, double* %123, i64 %124)
          to label %125 unwind label %75

; <label>:125:                                    ; preds = %121
  invoke void @__cxa_rethrow() #13
          to label %177 unwind label %75

; <label>:126:                                    ; preds = %96
  br label %169

; <label>:127:                                    ; preds = %37
  %128 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %129, i32 0, i32 0
  %131 = load double*, double** %130, align 8
  %132 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %133 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %132, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %133, i32 0, i32 1
  %135 = load double*, double** %134, align 8
  %136 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %137 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %136) #3
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %131, double* %135, %"class.std::allocator.5"* dereferenceable(1) %137)
  %138 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %139 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %140, i32 0, i32 0
  %142 = load double*, double** %141, align 8
  %143 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %144, i32 0, i32 2
  %146 = load double*, double** %145, align 8
  %147 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %148 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %148, i32 0, i32 0
  %150 = load double*, double** %149, align 8
  %151 = ptrtoint double* %146 to i64
  %152 = ptrtoint double* %150 to i64
  %153 = sub i64 %151, %152
  %154 = sdiv exact i64 %153, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* %138, double* %142, i64 %154)
  %155 = load double*, double** %6, align 8
  %156 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %156, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %157, i32 0, i32 0
  store double* %155, double** %158, align 8
  %159 = load double*, double** %7, align 8
  %160 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %161, i32 0, i32 1
  store double* %159, double** %162, align 8
  %163 = load double*, double** %6, align 8
  %164 = load i64, i64* %5, align 8
  %165 = getelementptr inbounds double, double* %163, i64 %164
  %166 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %167 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %167, i32 0, i32 2
  store double* %165, double** %168, align 8
  ret void

; <label>:169:                                    ; preds = %126
  %170 = load i8*, i8** %8, align 8
  %171 = load i32, i32* %9, align 4
  %172 = insertvalue { i8*, i32 } undef, i8* %170, 0
  %173 = insertvalue { i8*, i32 } %172, i32 %171, 1
  resume { i8*, i32 } %173

; <label>:174:                                    ; preds = %96
  %175 = landingpad { i8*, i32 }
          catch i8* null
  %176 = extractvalue { i8*, i32 } %175, 0
  call void @__clang_call_terminate(i8* %176) #10
  unreachable

; <label>:177:                                    ; preds = %125
  %178 = load i32, i32* @x.809
  %179 = load i32, i32* @y.810
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %186, label %206

; <label>:186:                                    ; preds = %177, %206
  %187 = load i32, i32* @x.809
  %188 = load i32, i32* @y.810
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %195, label %206

; <label>:195:                                    ; preds = %186
  unreachable

; <label>:196:                                    ; preds = %65, %56
  br label %65

; <label>:197:                                    ; preds = %84, %75
  %198 = landingpad { i8*, i32 }
          cleanup
  %199 = extractvalue { i8*, i32 } %198, 0
  store i8* %199, i8** %8, align 8
  %200 = extractvalue { i8*, i32 } %198, 1
  store i32 %200, i32* %9, align 4
  br label %84

; <label>:201:                                    ; preds = %106, %97
  %202 = load double*, double** %6, align 8
  %203 = load double*, double** %7, align 8
  %204 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %205 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %204) #3
  br label %106

; <label>:206:                                    ; preds = %186, %177
  br label %186
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, double*, double* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast double* %8 to i8*
  %10 = bitcast i8* %9 to double*
  %11 = load double*, double** %6, align 8
  %12 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %11) #3
  %13 = load double, double* %12, align 8
  store double %13, double* %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %9) #3
  %11 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %9) #3
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %35

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.813
  %17 = load i32, i32* @y.814
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %108

; <label>:24:                                     ; preds = %15, %108
  %25 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %25) #13
  %26 = load i32, i32* @x.813
  %27 = load i32, i32* @y.814
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %108

; <label>:34:                                     ; preds = %24
  unreachable

; <label>:35:                                     ; preds = %3
  %36 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %9) #3
  %37 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %9) #3
  store i64 %37, i64* %8, align 8
  %38 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %36, %39
  store i64 %40, i64* %7, align 8
  %41 = load i64, i64* %7, align 8
  %42 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %9) #3
  %43 = icmp ult i64 %41, %42
  br i1 %43, label %66, label %44

; <label>:44:                                     ; preds = %35
  %45 = load i32, i32* @x.813
  %46 = load i32, i32* @y.814
  %47 = sub i32 %45, 1
  %48 = mul i32 %45, %47
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %50, %51
  br i1 %52, label %53, label %110

; <label>:53:                                     ; preds = %44, %110
  %54 = load i64, i64* %7, align 8
  %55 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %9) #3
  %56 = icmp ugt i64 %54, %55
  %57 = load i32, i32* @x.813
  %58 = load i32, i32* @y.814
  %59 = sub i32 %57, 1
  %60 = mul i32 %57, %59
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %110

; <label>:65:                                     ; preds = %53
  br i1 %56, label %66, label %86

; <label>:66:                                     ; preds = %65, %35
  %67 = load i32, i32* @x.813
  %68 = load i32, i32* @y.814
  %69 = sub i32 %67, 1
  %70 = mul i32 %67, %69
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %72, %73
  br i1 %74, label %75, label %114

; <label>:75:                                     ; preds = %66, %114
  %76 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %9) #3
  %77 = load i32, i32* @x.813
  %78 = load i32, i32* @y.814
  %79 = sub i32 %77, 1
  %80 = mul i32 %77, %79
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %82, %83
  br i1 %84, label %85, label %114

; <label>:85:                                     ; preds = %75
  br label %88

; <label>:86:                                     ; preds = %65
  %87 = load i64, i64* %7, align 8
  br label %88

; <label>:88:                                     ; preds = %86, %85
  %89 = phi i64 [ %76, %85 ], [ %87, %86 ]
  %90 = load i32, i32* @x.813
  %91 = load i32, i32* @y.814
  %92 = sub i32 %90, 1
  %93 = mul i32 %90, %92
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %95, %96
  br i1 %97, label %98, label %116

; <label>:98:                                     ; preds = %88, %116
  %99 = load i32, i32* @x.813
  %100 = load i32, i32* @y.814
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %107, label %116

; <label>:107:                                    ; preds = %98
  ret i64 %89

; <label>:108:                                    ; preds = %24, %15
  %109 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %109) #13
  br label %24

; <label>:110:                                    ; preds = %53, %44
  %111 = load i64, i64* %7, align 8
  %112 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %9) #3
  %113 = icmp ugt i64 %111, %112
  br label %53

; <label>:114:                                    ; preds = %75, %66
  %115 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %9) #3
  br label %75

; <label>:116:                                    ; preds = %98, %88
  br label %98
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = load i32, i32* @x.815
  %4 = load i32, i32* @y.816
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %52

; <label>:11:                                     ; preds = %2, %52
  %12 = alloca %"struct.std::_Vector_base.4"*, align 8
  %13 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %12, align 8
  store i64 %1, i64* %13, align 8
  %14 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %12, align 8
  %15 = load i64, i64* %13, align 8
  %16 = icmp ne i64 %15, 0
  %17 = load i32, i32* @x.815
  %18 = load i32, i32* @y.816
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %52

; <label>:25:                                     ; preds = %11
  br i1 %16, label %26, label %31

; <label>:26:                                     ; preds = %25
  %27 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %14, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %27 to %"class.std::allocator.5"*
  %29 = load i64, i64* %13, align 8
  %30 = call double* @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1) %28, i64 %29)
  br label %32

; <label>:31:                                     ; preds = %25
  br label %32

; <label>:32:                                     ; preds = %31, %26
  %33 = phi double* [ %30, %26 ], [ null, %31 ]
  %34 = load i32, i32* @x.815
  %35 = load i32, i32* @y.816
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %58

; <label>:42:                                     ; preds = %32, %58
  %43 = load i32, i32* @x.815
  %44 = load i32, i32* @y.816
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %58

; <label>:51:                                     ; preds = %42
  ret double* %33

; <label>:52:                                     ; preds = %11, %2
  %53 = alloca %"struct.std::_Vector_base.4"*, align 8
  %54 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %53, align 8
  %56 = load i64, i64* %54, align 8
  %57 = icmp ne i64 %56, 0
  br label %11

; <label>:58:                                     ; preds = %42, %32
  br label %42
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load double*, double** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load double*, double** %10, align 8
  %12 = ptrtoint double* %7 to i64
  %13 = ptrtoint double* %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 8
  ret i64 %15
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double*, double*, double*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator.43", align 8
  %10 = alloca %"class.std::move_iterator.43", align 8
  store double* %0, double** %5, align 8
  store double* %1, double** %6, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load double*, double** %5, align 8
  %12 = call double* @_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_(double* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %9, i32 0, i32 0
  store double* %12, double** %13, align 8
  %14 = load double*, double** %6, align 8
  %15 = call double* @_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_(double* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %10, i32 0, i32 0
  store double* %15, double** %16, align 8
  %17 = load double*, double** %7, align 8
  %18 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %9, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %10, i32 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = call double* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E(double* %20, double* %22, double* %17, %"class.std::allocator.5"* dereferenceable(1) %18)
  ret double* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.821
  %3 = load i32, i32* @y.822
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %11, align 8
  %12 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %13 to %"class.std::allocator.5"*
  %15 = load i32, i32* @x.821
  %16 = load i32, i32* @y.822
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"class.std::allocator.5"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %25, align 8
  %26 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %27 to %"class.std::allocator.5"*
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1), double*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load double*, double** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_(%"class.__gnu_cxx::new_allocator.6"* %6, double* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double*, double*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = load double*, double** %5, align 8
  call void @_ZSt8_DestroyIPdEvT_S1_(double* %7, double* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"*, double*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base.4"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = icmp ne double* %8, null
  br i1 %9, label %10, label %33

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @x.827
  %12 = load i32, i32* @y.828
  %13 = sub i32 %11, 1
  %14 = mul i32 %11, %13
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %12, 10
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %52

; <label>:19:                                     ; preds = %10, %52
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %7, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %20 to %"class.std::allocator.5"*
  %22 = load double*, double** %5, align 8
  %23 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(%"class.std::allocator.5"* dereferenceable(1) %21, double* %22, i64 %23)
  %24 = load i32, i32* @x.827
  %25 = load i32, i32* @y.828
  %26 = sub i32 %24, 1
  %27 = mul i32 %24, %26
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %52

; <label>:32:                                     ; preds = %19
  br label %33

; <label>:33:                                     ; preds = %32, %3
  %34 = load i32, i32* @x.827
  %35 = load i32, i32* @y.828
  %36 = sub i32 %34, 1
  %37 = mul i32 %34, %36
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %57

; <label>:42:                                     ; preds = %33, %57
  %43 = load i32, i32* @x.827
  %44 = load i32, i32* @y.828
  %45 = sub i32 %43, 1
  %46 = mul i32 %43, %45
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %48, %49
  br i1 %50, label %51, label %57

; <label>:51:                                     ; preds = %42
  ret void

; <label>:52:                                     ; preds = %19, %10
  %53 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %7, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %53 to %"class.std::allocator.5"*
  %55 = load double*, double** %5, align 8
  %56 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(%"class.std::allocator.5"* dereferenceable(1) %54, double* %55, i64 %56)
  br label %19

; <label>:57:                                     ; preds = %42, %33
  br label %42
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.835
  %3 = load i32, i32* @y.836
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %11, align 8
  %12 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %11, align 8
  %13 = load i32, i32* @x.835
  %14 = load i32, i32* @y.836
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret i64 2305843009213693951

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret double* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = load i32, i32* @x.839
  %5 = load i32, i32* @y.840
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %35

; <label>:12:                                     ; preds = %3, %35
  %13 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %13, align 8
  store i64 %1, i64* %14, align 8
  store i8* %2, i8** %15, align 8
  %16 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %13, align 8
  %17 = load i64, i64* %14, align 8
  %18 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %16) #3
  %19 = icmp ugt i64 %17, %18
  %20 = load i32, i32* @x.839
  %21 = load i32, i32* @y.840
  %22 = sub i32 %20, 1
  %23 = mul i32 %20, %22
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %25, %26
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %12
  br i1 %19, label %29, label %30

; <label>:29:                                     ; preds = %28
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:30:                                     ; preds = %28
  %31 = load i64, i64* %14, align 8
  %32 = mul i64 %31, 8
  %33 = call i8* @_Znwm(i64 %32)
  %34 = bitcast i8* %33 to double*
  ret double* %34

; <label>:35:                                     ; preds = %12, %3
  %36 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %37 = alloca i64, align 8
  %38 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %36, align 8
  store i64 %1, i64* %37, align 8
  store i8* %2, i8** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %36, align 8
  %40 = load i64, i64* %37, align 8
  %41 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %39) #3
  %42 = icmp ugt i64 %40, %41
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E(double*, double*, double*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.43", align 8
  %6 = alloca %"class.std::move_iterator.43", align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator.43", align 8
  %10 = alloca %"class.std::move_iterator.43", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %5, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %6, i32 0, i32 0
  store double* %1, double** %12, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.43"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.43"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.43"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load double*, double** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %9, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %10, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = call double* @_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double* %19, double* %21, double* %17)
  ret double* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_(double*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.43", align 8
  %3 = alloca double*, align 8
  store double* %0, double** %3, align 8
  %4 = load double*, double** %3, align 8
  call void @_ZNSt13move_iteratorIPdEC2ES0_(%"class.std::move_iterator.43"* %2, double* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %2, i32 0, i32 0
  %6 = load double*, double** %5, align 8
  ret double* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.845
  %5 = load i32, i32* @y.846
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %40

; <label>:12:                                     ; preds = %3, %40
  %13 = alloca %"class.std::move_iterator.43", align 8
  %14 = alloca %"class.std::move_iterator.43", align 8
  %15 = alloca double*, align 8
  %16 = alloca i8, align 1
  %17 = alloca %"class.std::move_iterator.43", align 8
  %18 = alloca %"class.std::move_iterator.43", align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %13, i32 0, i32 0
  store double* %0, double** %19, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %14, i32 0, i32 0
  store double* %1, double** %20, align 8
  store double* %2, double** %15, align 8
  store i8 1, i8* %16, align 1
  %21 = bitcast %"class.std::move_iterator.43"* %17 to i8*
  %22 = bitcast %"class.std::move_iterator.43"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.std::move_iterator.43"* %18 to i8*
  %24 = bitcast %"class.std::move_iterator.43"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = load double*, double** %15, align 8
  %26 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %17, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %18, i32 0, i32 0
  %29 = load double*, double** %28, align 8
  %30 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_(double* %27, double* %29, double* %25)
  %31 = load i32, i32* @x.845
  %32 = load i32, i32* @y.846
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %40

; <label>:39:                                     ; preds = %12
  ret double* %30

; <label>:40:                                     ; preds = %12, %3
  %41 = alloca %"class.std::move_iterator.43", align 8
  %42 = alloca %"class.std::move_iterator.43", align 8
  %43 = alloca double*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.std::move_iterator.43", align 8
  %46 = alloca %"class.std::move_iterator.43", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %41, i32 0, i32 0
  store double* %0, double** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %42, i32 0, i32 0
  store double* %1, double** %48, align 8
  store double* %2, double** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.std::move_iterator.43"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.43"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.43"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.43"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load double*, double** %43, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %45, i32 0, i32 0
  %55 = load double*, double** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %46, i32 0, i32 0
  %57 = load double*, double** %56, align 8
  %58 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_(double* %55, double* %57, double* %53)
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_(double*, double*, double*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.43", align 8
  %5 = alloca %"class.std::move_iterator.43", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.std::move_iterator.43", align 8
  %8 = alloca %"class.std::move_iterator.43", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.std::move_iterator.43"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.43"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.43"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load double*, double** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %7, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double* %17, double* %19, double* %15)
  ret double* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.43", align 8
  %5 = alloca %"class.std::move_iterator.43", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.std::move_iterator.43", align 8
  %8 = alloca %"class.std::move_iterator.43", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.std::move_iterator.43"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.43"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %7, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = call double* @_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_(double* %14)
  %16 = bitcast %"class.std::move_iterator.43"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_(double* %19)
  %21 = load double*, double** %6, align 8
  %22 = call double* @_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_(double* %15, double* %20, double* %21)
  ret double* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = load i32, i32* @x.851
  %5 = load i32, i32* @y.852
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %32

; <label>:12:                                     ; preds = %3, %32
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  store double* %0, double** %13, align 8
  store double* %1, double** %14, align 8
  store double* %2, double** %15, align 8
  %16 = load double*, double** %13, align 8
  %17 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %16)
  %18 = load double*, double** %14, align 8
  %19 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %18)
  %20 = load double*, double** %15, align 8
  %21 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %20)
  %22 = call double* @_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_(double* %17, double* %19, double* %21)
  %23 = load i32, i32* @x.851
  %24 = load i32, i32* @y.852
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %12
  ret double* %22

; <label>:32:                                     ; preds = %12, %3
  %33 = alloca double*, align 8
  %34 = alloca double*, align 8
  %35 = alloca double*, align 8
  store double* %0, double** %33, align 8
  store double* %1, double** %34, align 8
  store double* %2, double** %35, align 8
  %36 = load double*, double** %33, align 8
  %37 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %36)
  %38 = load double*, double** %34, align 8
  %39 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %38)
  %40 = load double*, double** %35, align 8
  %41 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %40)
  %42 = call double* @_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_(double* %37, double* %39, double* %41)
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_(double*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.43", align 8
  %3 = alloca %"class.std::move_iterator.43", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %2, i32 0, i32 0
  store double* %0, double** %4, align 8
  %5 = bitcast %"class.std::move_iterator.43"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.43"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %3, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  %9 = call double* @_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_(double* %8)
  ret double* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double*) #0 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  %4 = call double* @_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_(double* %3)
  ret double* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double*, double*, double*) #5 comdat align 2 {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i64, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %8 = load double*, double** %5, align 8
  %9 = load double*, double** %4, align 8
  %10 = ptrtoint double* %8 to i64
  %11 = ptrtoint double* %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %3
  %17 = load double*, double** %6, align 8
  %18 = bitcast double* %17 to i8*
  %19 = load double*, double** %4, align 8
  %20 = bitcast double* %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 8, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %22, i32 8, i1 false)
  br label %23

; <label>:23:                                     ; preds = %16, %3
  %24 = load double*, double** %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_(double*) #5 comdat align 2 {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  ret double* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_(double*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.43", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %2, i32 0, i32 0
  store double* %0, double** %3, align 8
  %4 = call double* @_ZNKSt13move_iteratorIPdE4baseEv(%"class.std::move_iterator.43"* %2)
  ret double* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNKSt13move_iteratorIPdE4baseEv(%"class.std::move_iterator.43"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.43"*, align 8
  store %"class.std::move_iterator.43"* %0, %"class.std::move_iterator.43"** %2, align 8
  %3 = load %"class.std::move_iterator.43"*, %"class.std::move_iterator.43"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %3, i32 0, i32 0
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPdEC2ES0_(%"class.std::move_iterator.43"*, double*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.43"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::move_iterator.43"* %0, %"class.std::move_iterator.43"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::move_iterator.43"*, %"class.std::move_iterator.43"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %5, i32 0, i32 0
  %7 = load double*, double** %4, align 8
  store double* %7, double** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_(%"class.__gnu_cxx::new_allocator.6"*, double*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca double*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPdEvT_S1_(double*, double*) #0 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %3, align 8
  %6 = load double*, double** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %5, double* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double*, double*) #5 comdat align 2 {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(%"class.std::allocator.5"* dereferenceable(1), double*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load double*, double** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.6"* %8, double* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.6"*, double*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast double* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_(%"class.std::vector.8"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %8, align 8
  %10 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %11, i32 0, i32 2
  %13 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8
  %14 = icmp ne %"class.std::__cxx11::basic_string"* %9, %13
  br i1 %14, label %15, label %30

; <label>:15:                                     ; preds = %2
  %16 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %17 to %"class.std::allocator.10"*
  %19 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %21, align 8
  %23 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %24 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %23) #3
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %18, %"class.std::__cxx11::basic_string"* %22, %"class.std::__cxx11::basic_string"* dereferenceable(32) %24)
  %25 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %28, i32 1
  store %"class.std::__cxx11::basic_string"* %29, %"class.std::__cxx11::basic_string"** %27, align 8
  br label %51

; <label>:30:                                     ; preds = %2
  %31 = load i32, i32* @x.879
  %32 = load i32, i32* @y.880
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %52

; <label>:39:                                     ; preds = %30, %52
  %40 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %41 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %40) #3
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_(%"class.std::vector.8"* %5, %"class.std::__cxx11::basic_string"* dereferenceable(32) %41)
  %42 = load i32, i32* @x.879
  %43 = load i32, i32* @y.880
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %50, label %52

; <label>:50:                                     ; preds = %39
  br label %51

; <label>:51:                                     ; preds = %50, %15
  ret void

; <label>:52:                                     ; preds = %39, %30
  %53 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %54 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %53) #3
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_(%"class.std::vector.8"* %5, %"class.std::__cxx11::basic_string"* dereferenceable(32) %54)
  br label %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = load i32, i32* @x.881
  %3 = load i32, i32* @y.882
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %11, align 8
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8
  %13 = load i32, i32* @x.881
  %14 = load i32, i32* @y.882
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret %"class.std::__cxx11::basic_string"* %12

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %23, align 8
  %24 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %11 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %8, %"class.std::__cxx11::basic_string"* %9, %"class.std::__cxx11::basic_string"* dereferenceable(32) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  ret %"class.std::__cxx11::basic_string"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_(%"class.std::vector.8"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.8"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %12, i64 %13)
  store %"class.std::__cxx11::basic_string"* %14, %"class.std::__cxx11::basic_string"** %6, align 8
  %15 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %7, align 8
  %16 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %17 to %"class.std::allocator.10"*
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 %20
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %23 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %22) #3
  invoke void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %18, %"class.std::__cxx11::basic_string"* %21, %"class.std::__cxx11::basic_string"* dereferenceable(32) %23)
          to label %24 unwind label %58

; <label>:24:                                     ; preds = %2
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %7, align 8
  %25 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %27, align 8
  %29 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %31, align 8
  %33 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %34 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %35 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %34) #3
  %36 = invoke %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"* %28, %"class.std::__cxx11::basic_string"* %32, %"class.std::__cxx11::basic_string"* %33, %"class.std::allocator.10"* dereferenceable(1) %35)
          to label %37 unwind label %58

; <label>:37:                                     ; preds = %24
  %38 = load i32, i32* @x.887
  %39 = load i32, i32* @y.888
  %40 = sub i32 %38, 1
  %41 = mul i32 %38, %40
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %196

; <label>:46:                                     ; preds = %37, %196
  store %"class.std::__cxx11::basic_string"* %36, %"class.std::__cxx11::basic_string"** %7, align 8
  %47 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %47, i32 1
  store %"class.std::__cxx11::basic_string"* %48, %"class.std::__cxx11::basic_string"** %7, align 8
  %49 = load i32, i32* @x.887
  %50 = load i32, i32* @y.888
  %51 = sub i32 %49, 1
  %52 = mul i32 %49, %51
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %54, %55
  br i1 %56, label %57, label %196

; <label>:57:                                     ; preds = %46
  br label %127

; <label>:58:                                     ; preds = %24, %2
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %8, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %9, align 4
  br label %62

; <label>:62:                                     ; preds = %58
  %63 = load i32, i32* @x.887
  %64 = load i32, i32* @y.888
  %65 = sub i32 %63, 1
  %66 = mul i32 %63, %65
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %68, %69
  br i1 %70, label %71, label %199

; <label>:71:                                     ; preds = %62, %199
  %72 = load i8*, i8** %8, align 8
  %73 = call i8* @__cxa_begin_catch(i8* %72) #3
  %74 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %75 = icmp ne %"class.std::__cxx11::basic_string"* %74, null
  %76 = load i32, i32* @x.887
  %77 = load i32, i32* @y.888
  %78 = sub i32 %76, 1
  %79 = mul i32 %76, %78
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %81, %82
  br i1 %83, label %84, label %199

; <label>:84:                                     ; preds = %71
  br i1 %75, label %115, label %85

; <label>:85:                                     ; preds = %84
  %86 = load i32, i32* @x.887
  %87 = load i32, i32* @y.888
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %94, label %204

; <label>:94:                                     ; preds = %85, %204
  %95 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %95, i32 0, i32 0
  %97 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %96 to %"class.std::allocator.10"*
  %98 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %99 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %100 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %98, i64 %99
  %101 = load i32, i32* @x.887
  %102 = load i32, i32* @y.888
  %103 = sub i32 %101, 1
  %104 = mul i32 %101, %103
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %106, %107
  br i1 %108, label %109, label %204

; <label>:109:                                    ; preds = %94
  invoke void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator.10"* dereferenceable(1) %97, %"class.std::__cxx11::basic_string"* %100)
          to label %110 unwind label %111

; <label>:110:                                    ; preds = %109
  br label %121

; <label>:111:                                    ; preds = %125, %121, %115, %109
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %8, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %126 unwind label %174

; <label>:115:                                    ; preds = %84
  %116 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %117 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %118 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %119 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %118) #3
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %116, %"class.std::__cxx11::basic_string"* %117, %"class.std::allocator.10"* dereferenceable(1) %119)
          to label %120 unwind label %111

; <label>:120:                                    ; preds = %115
  br label %121

; <label>:121:                                    ; preds = %120, %110
  %122 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %123 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %124 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.9"* %122, %"class.std::__cxx11::basic_string"* %123, i64 %124)
          to label %125 unwind label %111

; <label>:125:                                    ; preds = %121
  invoke void @__cxa_rethrow() #13
          to label %177 unwind label %111

; <label>:126:                                    ; preds = %111
  br label %169

; <label>:127:                                    ; preds = %57
  %128 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %129, i32 0, i32 0
  %131 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %130, align 8
  %132 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %133 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %132, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %133, i32 0, i32 1
  %135 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %134, align 8
  %136 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %137 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %136) #3
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %131, %"class.std::__cxx11::basic_string"* %135, %"class.std::allocator.10"* dereferenceable(1) %137)
  %138 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %139 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %140, i32 0, i32 0
  %142 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %141, align 8
  %143 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %144, i32 0, i32 2
  %146 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %145, align 8
  %147 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %148 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %148, i32 0, i32 0
  %150 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %149, align 8
  %151 = ptrtoint %"class.std::__cxx11::basic_string"* %146 to i64
  %152 = ptrtoint %"class.std::__cxx11::basic_string"* %150 to i64
  %153 = sub i64 %151, %152
  %154 = sdiv exact i64 %153, 32
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.9"* %138, %"class.std::__cxx11::basic_string"* %142, i64 %154)
  %155 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %156 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %156, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %157, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %155, %"class.std::__cxx11::basic_string"** %158, align 8
  %159 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %160 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %161, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %159, %"class.std::__cxx11::basic_string"** %162, align 8
  %163 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %164 = load i64, i64* %5, align 8
  %165 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %163, i64 %164
  %166 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %167 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %167, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %165, %"class.std::__cxx11::basic_string"** %168, align 8
  ret void

; <label>:169:                                    ; preds = %126
  %170 = load i8*, i8** %8, align 8
  %171 = load i32, i32* %9, align 4
  %172 = insertvalue { i8*, i32 } undef, i8* %170, 0
  %173 = insertvalue { i8*, i32 } %172, i32 %171, 1
  resume { i8*, i32 } %173

; <label>:174:                                    ; preds = %111
  %175 = landingpad { i8*, i32 }
          catch i8* null
  %176 = extractvalue { i8*, i32 } %175, 0
  call void @__clang_call_terminate(i8* %176) #10
  unreachable

; <label>:177:                                    ; preds = %125
  %178 = load i32, i32* @x.887
  %179 = load i32, i32* @y.888
  %180 = sub i32 %178, 1
  %181 = mul i32 %178, %180
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %183, %184
  br i1 %185, label %186, label %211

; <label>:186:                                    ; preds = %177, %211
  %187 = load i32, i32* @x.887
  %188 = load i32, i32* @y.888
  %189 = sub i32 %187, 1
  %190 = mul i32 %187, %189
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %192, %193
  br i1 %194, label %195, label %211

; <label>:195:                                    ; preds = %186
  unreachable

; <label>:196:                                    ; preds = %46, %37
  store %"class.std::__cxx11::basic_string"* %36, %"class.std::__cxx11::basic_string"** %7, align 8
  %197 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %198 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %197, i32 1
  store %"class.std::__cxx11::basic_string"* %198, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %46

; <label>:199:                                    ; preds = %71, %62
  %200 = load i8*, i8** %8, align 8
  %201 = call i8* @__cxa_begin_catch(i8* %200) #3
  %202 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %203 = icmp ne %"class.std::__cxx11::basic_string"* %202, null
  br label %71

; <label>:204:                                    ; preds = %94, %85
  %205 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %206 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %205, i32 0, i32 0
  %207 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %206 to %"class.std::allocator.10"*
  %208 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %209 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %210 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %208, i64 %209
  br label %94

; <label>:211:                                    ; preds = %186, %177
  br label %186
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %9 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %10 = bitcast i8* %9 to %"class.std::__cxx11::basic_string"*
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %12 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %11) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %10, %"class.std::__cxx11::basic_string"* dereferenceable(32) %12) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %9) #3
  %11 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %9) #3
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #13
  unreachable

; <label>:17:                                     ; preds = %3
  %18 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %9) #3
  %19 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %9) #3
  store i64 %19, i64* %8, align 8
  %20 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %9) #3
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %30, label %26

; <label>:26:                                     ; preds = %17
  %27 = load i64, i64* %7, align 8
  %28 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %9) #3
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %50

; <label>:30:                                     ; preds = %26, %17
  %31 = load i32, i32* @x.891
  %32 = load i32, i32* @y.892
  %33 = sub i32 %31, 1
  %34 = mul i32 %31, %33
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %54

; <label>:39:                                     ; preds = %30, %54
  %40 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %9) #3
  %41 = load i32, i32* @x.891
  %42 = load i32, i32* @y.892
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %49, label %54

; <label>:49:                                     ; preds = %39
  br label %52

; <label>:50:                                     ; preds = %26
  %51 = load i64, i64* %7, align 8
  br label %52

; <label>:52:                                     ; preds = %50, %49
  %53 = phi i64 [ %40, %49 ], [ %51, %50 ]
  ret i64 %53

; <label>:54:                                     ; preds = %39, %30
  %55 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %9) #3
  br label %39
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %9 to %"class.std::allocator.10"*
  %11 = load i64, i64* %4, align 8
  %12 = call %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.10"* dereferenceable(1) %10, i64 %11)
  br label %14

; <label>:13:                                     ; preds = %2
  br label %14

; <label>:14:                                     ; preds = %13, %8
  %15 = phi %"class.std::__cxx11::basic_string"* [ %12, %8 ], [ null, %13 ]
  ret %"class.std::__cxx11::basic_string"* %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %10, align 8
  %12 = ptrtoint %"class.std::__cxx11::basic_string"* %7 to i64
  %13 = ptrtoint %"class.std::__cxx11::basic_string"* %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 32
  ret i64 %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.44", align 8
  %10 = alloca %"class.std::move_iterator.44", align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %9, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %13, align 8
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %15 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %10, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %16, align 8
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %18 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %10, i32 0, i32 0
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %21, align 8
  %23 = call %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"* %20, %"class.std::__cxx11::basic_string"* %22, %"class.std::__cxx11::basic_string"* %17, %"class.std::allocator.10"* dereferenceable(1) %18)
  ret %"class.std::__cxx11::basic_string"* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.899
  %3 = load i32, i32* @y.900
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %11, align 8
  %12 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %13 to %"class.std::allocator.10"*
  %15 = load i32, i32* @x.899
  %16 = load i32, i32* @y.900
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"class.std::allocator.10"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %25, align 8
  %26 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %27 to %"class.std::allocator.10"*
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator.10"* dereferenceable(1), %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.std::__cxx11::basic_string"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.9"*, %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = load i32, i32* @x.905
  %5 = load i32, i32* @y.906
  %6 = sub i32 %4, 1
  %7 = mul i32 %4, %6
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %5, 10
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %52

; <label>:12:                                     ; preds = %3, %52
  %13 = alloca %"struct.std::_Vector_base.9"*, align 8
  %14 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %15 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %13, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %14, align 8
  store i64 %2, i64* %15, align 8
  %16 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %13, align 8
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %14, align 8
  %18 = icmp ne %"class.std::__cxx11::basic_string"* %17, null
  %19 = load i32, i32* @x.905
  %20 = load i32, i32* @y.906
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %52

; <label>:27:                                     ; preds = %12
  br i1 %18, label %28, label %51

; <label>:28:                                     ; preds = %27
  %29 = load i32, i32* @x.905
  %30 = load i32, i32* @y.906
  %31 = sub i32 %29, 1
  %32 = mul i32 %29, %31
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %34, %35
  br i1 %36, label %37, label %59

; <label>:37:                                     ; preds = %28, %59
  %38 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %38 to %"class.std::allocator.10"*
  %40 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %14, align 8
  %41 = load i64, i64* %15, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.10"* dereferenceable(1) %39, %"class.std::__cxx11::basic_string"* %40, i64 %41)
  %42 = load i32, i32* @x.905
  %43 = load i32, i32* @y.906
  %44 = sub i32 %42, 1
  %45 = mul i32 %42, %44
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %47, %48
  br i1 %49, label %50, label %59

; <label>:50:                                     ; preds = %37
  br label %51

; <label>:51:                                     ; preds = %50, %27
  ret void

; <label>:52:                                     ; preds = %12, %3
  %53 = alloca %"struct.std::_Vector_base.9"*, align 8
  %54 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %55 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %53, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %54, align 8
  store i64 %2, i64* %55, align 8
  %56 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %53, align 8
  %57 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %54, align 8
  %58 = icmp ne %"class.std::__cxx11::basic_string"* %57, null
  br label %12

; <label>:59:                                     ; preds = %37, %28
  %60 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %61 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %60 to %"class.std::allocator.10"*
  %62 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %14, align 8
  %63 = load i64, i64* %15, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.10"* dereferenceable(1) %61, %"class.std::__cxx11::basic_string"* %62, i64 %63)
  br label %37
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.911
  %3 = load i32, i32* @y.912
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %11, align 8
  %12 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %13 to %"class.std::allocator.10"*
  %15 = load i32, i32* @x.911
  %16 = load i32, i32* @y.912
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"class.std::allocator.10"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %25, align 8
  %26 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %26, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %27 to %"class.std::allocator.10"*
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.913
  %3 = load i32, i32* @y.914
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %11, align 8
  %12 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %11, align 8
  %13 = load i32, i32* @x.913
  %14 = load i32, i32* @y.914
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret i64 576460752303423487

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %23, align 8
  %24 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %23, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.10"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %6, i64 %7, i8* null)
  ret %"class.std::__cxx11::basic_string"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %7) #3
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @x.917
  %14 = load i32, i32* @y.918
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %35

; <label>:21:                                     ; preds = %12, %35
  %22 = load i64, i64* %5, align 8
  %23 = mul i64 %22, 32
  %24 = call i8* @_Znwm(i64 %23)
  %25 = bitcast i8* %24 to %"class.std::__cxx11::basic_string"*
  %26 = load i32, i32* @x.917
  %27 = load i32, i32* @y.918
  %28 = sub i32 %26, 1
  %29 = mul i32 %26, %28
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %35

; <label>:34:                                     ; preds = %21
  ret %"class.std::__cxx11::basic_string"* %25

; <label>:35:                                     ; preds = %21, %12
  %36 = load i64, i64* %5, align 8
  %37 = mul i64 %36, 32
  %38 = call i8* @_Znwm(i64 %37)
  %39 = bitcast i8* %38 to %"class.std::__cxx11::basic_string"*
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = load i32, i32* @x.919
  %6 = load i32, i32* @y.920
  %7 = sub i32 %5, 1
  %8 = mul i32 %5, %7
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %6, 10
  %12 = or i1 %10, %11
  br i1 %12, label %13, label %41

; <label>:13:                                     ; preds = %4, %41
  %14 = alloca %"class.std::move_iterator.44", align 8
  %15 = alloca %"class.std::move_iterator.44", align 8
  %16 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %17 = alloca %"class.std::allocator.10"*, align 8
  %18 = alloca %"class.std::move_iterator.44", align 8
  %19 = alloca %"class.std::move_iterator.44", align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %14, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %20, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %15, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %21, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %16, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %17, align 8
  %22 = bitcast %"class.std::move_iterator.44"* %18 to i8*
  %23 = bitcast %"class.std::move_iterator.44"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = bitcast %"class.std::move_iterator.44"* %19 to i8*
  %25 = bitcast %"class.std::move_iterator.44"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %16, align 8
  %27 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %18, i32 0, i32 0
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %27, align 8
  %29 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %19, i32 0, i32 0
  %30 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %29, align 8
  %31 = call %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"* %28, %"class.std::__cxx11::basic_string"* %30, %"class.std::__cxx11::basic_string"* %26)
  %32 = load i32, i32* @x.919
  %33 = load i32, i32* @y.920
  %34 = sub i32 %32, 1
  %35 = mul i32 %32, %34
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %41

; <label>:40:                                     ; preds = %13
  ret %"class.std::__cxx11::basic_string"* %31

; <label>:41:                                     ; preds = %13, %4
  %42 = alloca %"class.std::move_iterator.44", align 8
  %43 = alloca %"class.std::move_iterator.44", align 8
  %44 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %45 = alloca %"class.std::allocator.10"*, align 8
  %46 = alloca %"class.std::move_iterator.44", align 8
  %47 = alloca %"class.std::move_iterator.44", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %42, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %43, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %49, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %44, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %45, align 8
  %50 = bitcast %"class.std::move_iterator.44"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.44"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.44"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.44"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %46, i32 0, i32 0
  %56 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %47, i32 0, i32 0
  %58 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %57, align 8
  %59 = call %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"* %56, %"class.std::__cxx11::basic_string"* %58, %"class.std::__cxx11::basic_string"* %54)
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.44", align 8
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  call void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator.44"* %2, %"class.std::__cxx11::basic_string"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %2, i32 0, i32 0
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  ret %"class.std::__cxx11::basic_string"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.44", align 8
  %5 = alloca %"class.std::move_iterator.44", align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.44", align 8
  %9 = alloca %"class.std::move_iterator.44", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %4, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %11, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.44"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.44"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.44"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.44"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %8, i32 0, i32 0
  %18 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8
  %21 = call %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* %18, %"class.std::__cxx11::basic_string"* %20, %"class.std::__cxx11::basic_string"* %16)
  ret %"class.std::__cxx11::basic_string"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.44", align 8
  %5 = alloca %"class.std::move_iterator.44", align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %4, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %11, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %80, %3
  %14 = load i32, i32* @x.925
  %15 = load i32, i32* @y.926
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %144

; <label>:22:                                     ; preds = %13, %144
  %23 = load i32, i32* @x.925
  %24 = load i32, i32* @y.926
  %25 = sub i32 %23, 1
  %26 = mul i32 %23, %25
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %144

; <label>:31:                                     ; preds = %22
  %32 = invoke zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.44"* dereferenceable(8) %4, %"class.std::move_iterator.44"* dereferenceable(8) %5)
          to label %33 unwind label %81

; <label>:33:                                     ; preds = %31
  br i1 %32, label %34, label %109

; <label>:34:                                     ; preds = %33
  %35 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %36 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %35) #3
  %37 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator.44"* %4)
          to label %38 unwind label %81

; <label>:38:                                     ; preds = %34
  invoke void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"* %36, %"class.std::__cxx11::basic_string"* dereferenceable(32) %37)
          to label %39 unwind label %81

; <label>:39:                                     ; preds = %38
  br label %40

; <label>:40:                                     ; preds = %39
  %41 = load i32, i32* @x.925
  %42 = load i32, i32* @y.926
  %43 = sub i32 %41, 1
  %44 = mul i32 %41, %43
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %46, %47
  br i1 %48, label %49, label %145

; <label>:49:                                     ; preds = %40, %145
  %50 = load i32, i32* @x.925
  %51 = load i32, i32* @y.926
  %52 = sub i32 %50, 1
  %53 = mul i32 %50, %52
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %55, %56
  br i1 %57, label %58, label %145

; <label>:58:                                     ; preds = %49
  %59 = invoke dereferenceable(8) %"class.std::move_iterator.44"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator.44"* %4)
          to label %60 unwind label %81

; <label>:60:                                     ; preds = %58
  %61 = load i32, i32* @x.925
  %62 = load i32, i32* @y.926
  %63 = sub i32 %61, 1
  %64 = mul i32 %61, %63
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %62, 10
  %68 = or i1 %66, %67
  br i1 %68, label %69, label %146

; <label>:69:                                     ; preds = %60, %146
  %70 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %71 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %70, i32 1
  store %"class.std::__cxx11::basic_string"* %71, %"class.std::__cxx11::basic_string"** %7, align 8
  %72 = load i32, i32* @x.925
  %73 = load i32, i32* @y.926
  %74 = sub i32 %72, 1
  %75 = mul i32 %72, %74
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %73, 10
  %79 = or i1 %77, %78
  br i1 %79, label %80, label %146

; <label>:80:                                     ; preds = %69
  br label %13

; <label>:81:                                     ; preds = %58, %38, %34, %31
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %8, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %9, align 4
  br label %85

; <label>:85:                                     ; preds = %81
  %86 = load i32, i32* @x.925
  %87 = load i32, i32* @y.926
  %88 = sub i32 %86, 1
  %89 = mul i32 %86, %88
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %91, %92
  br i1 %93, label %94, label %149

; <label>:94:                                     ; preds = %85, %149
  %95 = load i8*, i8** %8, align 8
  %96 = call i8* @__cxa_begin_catch(i8* %95) #3
  %97 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %98 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %99 = load i32, i32* @x.925
  %100 = load i32, i32* @y.926
  %101 = sub i32 %99, 1
  %102 = mul i32 %99, %101
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %104, %105
  br i1 %106, label %107, label %149

; <label>:107:                                    ; preds = %94
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %97, %"class.std::__cxx11::basic_string"* %98)
          to label %108 unwind label %129

; <label>:108:                                    ; preds = %107
  invoke void @__cxa_rethrow() #13
          to label %143 unwind label %129

; <label>:109:                                    ; preds = %33
  %110 = load i32, i32* @x.925
  %111 = load i32, i32* @y.926
  %112 = sub i32 %110, 1
  %113 = mul i32 %110, %112
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %111, 10
  %117 = or i1 %115, %116
  br i1 %117, label %118, label %154

; <label>:118:                                    ; preds = %109, %154
  %119 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %120 = load i32, i32* @x.925
  %121 = load i32, i32* @y.926
  %122 = sub i32 %120, 1
  %123 = mul i32 %120, %122
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %121, 10
  %127 = or i1 %125, %126
  br i1 %127, label %128, label %154

; <label>:128:                                    ; preds = %118
  ret %"class.std::__cxx11::basic_string"* %119

; <label>:129:                                    ; preds = %108, %107
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %8, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %133 unwind label %140

; <label>:133:                                    ; preds = %129
  br label %135
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:135:                                    ; preds = %133
  %136 = load i8*, i8** %8, align 8
  %137 = load i32, i32* %9, align 4
  %138 = insertvalue { i8*, i32 } undef, i8* %136, 0
  %139 = insertvalue { i8*, i32 } %138, i32 %137, 1
  resume { i8*, i32 } %139

; <label>:140:                                    ; preds = %129
  %141 = landingpad { i8*, i32 }
          catch i8* null
  %142 = extractvalue { i8*, i32 } %141, 0
  call void @__clang_call_terminate(i8* %142) #10
  unreachable

; <label>:143:                                    ; preds = %108
  unreachable

; <label>:144:                                    ; preds = %22, %13
  br label %22

; <label>:145:                                    ; preds = %49, %40
  br label %49

; <label>:146:                                    ; preds = %69, %60
  %147 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %148 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %147, i32 1
  store %"class.std::__cxx11::basic_string"* %148, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %69

; <label>:149:                                    ; preds = %94, %85
  %150 = load i8*, i8** %8, align 8
  %151 = call i8* @__cxa_begin_catch(i8* %150) #3
  %152 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %153 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %94

; <label>:154:                                    ; preds = %118, %109
  %155 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %118
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.44"* dereferenceable(8), %"class.std::move_iterator.44"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.44"*, align 8
  %4 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %3, align 8
  store %"class.std::move_iterator.44"* %1, %"class.std::move_iterator.44"** %4, align 8
  %5 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %3, align 8
  %6 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.44"* dereferenceable(8) %5, %"class.std::move_iterator.44"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  ret i1 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %3 = load i32, i32* @x.929
  %4 = load i32, i32* @y.930
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %2, %28
  %12 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %13 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %12, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %13, align 8
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8
  %15 = bitcast %"class.std::__cxx11::basic_string"* %14 to i8*
  %16 = bitcast i8* %15 to %"class.std::__cxx11::basic_string"*
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %13, align 8
  %18 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %17) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %16, %"class.std::__cxx11::basic_string"* dereferenceable(32) %18) #3
  %19 = load i32, i32* @x.929
  %20 = load i32, i32* @y.930
  %21 = sub i32 %19, 1
  %22 = mul i32 %19, %21
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %11
  ret void

; <label>:28:                                     ; preds = %11, %2
  %29 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %30 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %29, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %30, align 8
  %31 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %29, align 8
  %32 = bitcast %"class.std::__cxx11::basic_string"* %31 to i8*
  %33 = bitcast i8* %32 to %"class.std::__cxx11::basic_string"*
  %34 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %30, align 8
  %35 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %34) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %33, %"class.std::__cxx11::basic_string"* dereferenceable(32) %35) #3
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = load i32, i32* @x.931
  %3 = load i32, i32* @y.932
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %24

; <label>:10:                                     ; preds = %1, %24
  %11 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %11, align 8
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8
  %13 = bitcast %"class.std::__cxx11::basic_string"* %12 to i8*
  %14 = bitcast i8* %13 to %"class.std::__cxx11::basic_string"*
  %15 = load i32, i32* @x.931
  %16 = load i32, i32* @y.932
  %17 = sub i32 %15, 1
  %18 = mul i32 %15, %17
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %10
  ret %"class.std::__cxx11::basic_string"* %14

; <label>:24:                                     ; preds = %10, %1
  %25 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %25, align 8
  %26 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %25, align 8
  %27 = bitcast %"class.std::__cxx11::basic_string"* %26 to i8*
  %28 = bitcast i8* %27 to %"class.std::__cxx11::basic_string"*
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator.44"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %2, align 8
  %3 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.44"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator.44"*) #5 comdat align 2 {
  %2 = load i32, i32* @x.935
  %3 = load i32, i32* @y.936
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %25

; <label>:10:                                     ; preds = %1, %25
  %11 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %11, align 8
  %12 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %11, align 8
  %13 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %12, i32 0, i32 0
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i32 1
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %13, align 8
  %16 = load i32, i32* @x.935
  %17 = load i32, i32* @y.936
  %18 = sub i32 %16, 1
  %19 = mul i32 %16, %18
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %10
  ret %"class.std::move_iterator.44"* %12

; <label>:25:                                     ; preds = %10, %1
  %26 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %26, align 8
  %27 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %26, align 8
  %28 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %27, i32 0, i32 0
  %29 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %29, i32 1
  store %"class.std::__cxx11::basic_string"* %30, %"class.std::__cxx11::basic_string"** %28, align 8
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"* %5, %"class.std::__cxx11::basic_string"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.44"* dereferenceable(8), %"class.std::move_iterator.44"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.44"*, align 8
  %4 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %3, align 8
  store %"class.std::move_iterator.44"* %1, %"class.std::move_iterator.44"** %4, align 8
  %5 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %3, align 8
  %6 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.44"* %5)
  %7 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.44"* %7)
  %9 = icmp eq %"class.std::__cxx11::basic_string"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.44"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %2, align 8
  %3 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = load i32, i32* @x.943
  %4 = load i32, i32* @y.944
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %34

; <label>:11:                                     ; preds = %2, %34
  %12 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %13 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %12, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %13, align 8
  %14 = load i32, i32* @x.943
  %15 = load i32, i32* @y.944
  %16 = sub i32 %14, 1
  %17 = mul i32 %14, %16
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %34

; <label>:22:                                     ; preds = %11
  br label %23

; <label>:23:                                     ; preds = %30, %22
  %24 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8
  %25 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %13, align 8
  %26 = icmp ne %"class.std::__cxx11::basic_string"* %24, %25
  br i1 %26, label %27, label %33

; <label>:27:                                     ; preds = %23
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8
  %29 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %28) #3
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %29)
  br label %30

; <label>:30:                                     ; preds = %27
  %31 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %31, i32 1
  store %"class.std::__cxx11::basic_string"* %32, %"class.std::__cxx11::basic_string"** %12, align 8
  br label %23

; <label>:33:                                     ; preds = %23
  ret void

; <label>:34:                                     ; preds = %11, %2
  %35 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %36 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %35, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %36, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"*) #5 comdat {
  %2 = load i32, i32* @x.945
  %3 = load i32, i32* @y.946
  %4 = sub i32 %2, 1
  %5 = mul i32 %2, %4
  %6 = urem i32 %5, 2
  %7 = icmp eq i32 %6, 0
  %8 = icmp slt i32 %3, 10
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %1, %22
  %11 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %11, align 8
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %11, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %12) #3
  %13 = load i32, i32* @x.945
  %14 = load i32, i32* @y.946
  %15 = sub i32 %13, 1
  %16 = mul i32 %13, %15
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %10
  ret void

; <label>:22:                                     ; preds = %10, %1
  %23 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %23, align 8
  %24 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %23, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %24) #3
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator.44"*, %"class.std::__cxx11::basic_string"*) unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* @x.947
  %4 = load i32, i32* @y.948
  %5 = sub i32 %3, 1
  %6 = mul i32 %3, %5
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %4, 10
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %26

; <label>:11:                                     ; preds = %2, %26
  %12 = alloca %"class.std::move_iterator.44"*, align 8
  %13 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %12, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %13, align 8
  %14 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %12, align 8
  %15 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %14, i32 0, i32 0
  %16 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %13, align 8
  store %"class.std::__cxx11::basic_string"* %16, %"class.std::__cxx11::basic_string"** %15, align 8
  %17 = load i32, i32* @x.947
  %18 = load i32, i32* @y.948
  %19 = sub i32 %17, 1
  %20 = mul i32 %17, %19
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %22, %23
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %11
  ret void

; <label>:26:                                     ; preds = %11, %2
  %27 = alloca %"class.std::move_iterator.44"*, align 8
  %28 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %27, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %28, align 8
  %29 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %27, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %29, i32 0, i32 0
  %31 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %28, align 8
  store %"class.std::__cxx11::basic_string"* %31, %"class.std::__cxx11::basic_string"** %30, align 8
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::__cxx11::basic_string"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.10"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.11"* %8, %"class.std::__cxx11::basic_string"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::__cxx11::basic_string"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %9 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s184136047.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn }
attributes #14 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
