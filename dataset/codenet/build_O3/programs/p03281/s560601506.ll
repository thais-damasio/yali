; ModuleID = 'Project_CodeNet_C++1400/p03281/s560601506.cpp'
source_filename = "Project_CodeNet_C++1400/p03281/s560601506.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%struct.Approx = type { [10001 x i32] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@__const.main.ap = private unnamed_addr constant %struct.Approx { [10001 x i32] [i32 0, i32 1, i32 2, i32 2, i32 3, i32 2, i32 4, i32 2, i32 4, i32 3, i32 4, i32 2, i32 6, i32 2, i32 4, i32 4, i32 5, i32 2, i32 6, i32 2, i32 6, i32 4, i32 4, i32 2, i32 8, i32 3, i32 4, i32 4, i32 6, i32 2, i32 8, i32 2, i32 6, i32 4, i32 4, i32 4, i32 9, i32 2, i32 4, i32 4, i32 8, i32 2, i32 8, i32 2, i32 6, i32 6, i32 4, i32 2, i32 10, i32 3, i32 6, i32 4, i32 6, i32 2, i32 8, i32 4, i32 8, i32 4, i32 4, i32 2, i32 12, i32 2, i32 4, i32 6, i32 7, i32 4, i32 8, i32 2, i32 6, i32 4, i32 8, i32 2, i32 12, i32 2, i32 4, i32 6, i32 6, i32 4, i32 8, i32 2, i32 10, i32 5, i32 4, i32 2, i32 12, i32 4, i32 4, i32 4, i32 8, i32 2, i32 12, i32 4, i32 6, i32 4, i32 4, i32 4, i32 12, i32 2, i32 6, i32 6, i32 9, i32 2, i32 8, i32 2, i32 8, i32 8, i32 4, i32 2, i32 12, i32 2, i32 8, i32 4, i32 10, i32 2, i32 8, i32 4, i32 6, i32 6, i32 4, i32 4, i32 16, i32 3, i32 4, i32 4, i32 6, i32 4, i32 12, i32 2, i32 8, i32 4, i32 8, i32 2, i32 12, i32 4, i32 4, i32 8, i32 8, i32 2, i32 8, i32 2, i32 12, i32 4, i32 4, i32 4, i32 15, i32 4, i32 4, i32 6, i32 6, i32 2, i32 12, i32 2, i32 8, i32 6, i32 8, i32 4, i32 12, i32 2, i32 4, i32 4, i32 12, i32 4, i32 10, i32 2, i32 6, i32 8, i32 4, i32 2, i32 16, i32 3, i32 8, i32 6, i32 6, i32 2, i32 8, i32 6, i32 10, i32 4, i32 4, i32 2, i32 18, i32 2, i32 8, i32 4, i32 8, i32 4, i32 8, i32 4, i32 6, i32 8, i32 8, i32 2, i32 14, i32 2, i32 4, i32 8, i32 9, i32 2, i32 12, i32 2, i32 12, i32 4, i32 4, i32 4, i32 12, i32 4, i32 4, i32 6, i32 10, i32 4, i32 16, i32 2, i32 6, i32 4, i32 4, i32 4, i32 16, i32 4, i32 4, i32 4, i32 12, i32 4, i32 8, i32 2, i32 12, i32 9, i32 4, i32 2, i32 12, i32 2, i32 8, i32 8, i32 8, i32 2, i32 12, i32 4, i32 6, i32 4, i32 8, i32 2, i32 20, i32 2, i32 6, i32 6, i32 6, i32 6, i32 8, i32 4, i32 8, i32 4, i32 8, i32 2, i32 18, i32 4, i32 4, i32 8, i32 9, i32 2, i32 8, i32 4, i32 12, i32 6, i32 4, i32 2, i32 16, i32 4, i32 8, i32 4, i32 6, i32 2, i32 16, i32 2, i32 10, i32 8, i32 4, i32 6, i32 12, i32 2, i32 4, i32 6, i32 16, i32 2, i32 8, i32 2, i32 6, i32 8, i32 8, i32 4, i32 18, i32 3, i32 8, i32 4, i32 6, i32 2, i32 12, i32 4, i32 8, i32 8, i32 4, i32 4, i32 18, i32 4, i32 4, i32 4, i32 10, i32 4, i32 12, i32 2, i32 12, i32 4, i32 8, i32 2, i32 16, i32 2, i32 4, i32 12, i32 6, i32 2, i32 8, i32 4, i32 14, i32 4, i32 8, i32 4, i32 15, i32 6, i32 4, i32 4, i32 8, i32 4, i32 16, i32 2, i32 6, i32 6, i32 4, i32 4, i32 20, i32 2, i32 6, i32 4, i32 12, i32 4, i32 12, i32 4, i32 8, i32 8, i32 4, i32 2, i32 12, i32 2, i32 12, i32 8, i32 12, i32 2, i32 8, i32 4, i32 6, i32 8, i32 4, i32 2, i32 24, i32 3, i32 4, i32 6, i32 12, i32 4, i32 8, i32 2, i32 10, i32 6, i32 8, i32 4, i32 12, i32 2, i32 8, i32 8, i32 8, i32 4, i32 16, i32 2, i32 12, i32 4, i32 4, i32 2, i32 16, i32 8, i32 4, i32 6, i32 6, i32 2, i32 16, i32 4, i32 12, i32 4, i32 4, i32 4, i32 18, i32 2, i32 4, i32 8, i32 15, i32 2, i32 8, i32 4, i32 6, i32 10, i32 8, i32 4, i32 16, i32 2, i32 8, i32 4, i32 6, i32 4, i32 12, i32 4, i32 12, i32 4, i32 8, i32 2, i32 24, i32 2, i32 4, i32 6, i32 8, i32 6, i32 8, i32 4, i32 6, i32 8, i32 8, i32 2, i32 20, i32 2, i32 8, i32 8, i32 6, i32 4, i32 8, i32 2, i32 16, i32 9, i32 8, i32 2, i32 12, i32 4, i32 4, i32 4, i32 14, i32 2, i32 18, i32 4, i32 6, i32 4, i32 4, i32 8, i32 16, i32 2, i32 4, i32 8, i32 12, i32 2, i32 16, i32 2, i32 10, i32 8, i32 4, i32 2, i32 18, i32 4, i32 8, i32 4, i32 8, i32 4, i32 8, i32 6, i32 12, i32 6, i32 4, i32 2, i32 24, i32 4, i32 4, i32 8, i32 9, i32 4, i32 12, i32 2, i32 8, i32 4, i32 12, i32 2, i32 12, i32 4, i32 8, i32 12, i32 10, i32 4, i32 8, i32 2, i32 12, i32 4, i32 4, i32 2, i32 24, i32 4, i32 8, i32 6, i32 6, i32 2, i32 16, i32 4, i32 10, i32 8, i32 4, i32 4, i32 12, i32 4, i32 8, i32 4, i32 16, i32 2, i32 12, i32 2, i32 6, i32 12, i32 4, i32 4, i32 20, i32 3, i32 8, i32 6, i32 12, i32 4, i32 8, i32 4, i32 8, i32 4, i32 4, i32 6, i32 24, i32 2, i32 4, i32 4, i32 12, i32 4, i32 16, i32 2, i32 6, i32 6, i32 12, i32 4, i32 16, i32 4, i32 4, i32 8, i32 6, i32 2, i32 12, i32 4, i32 20, i32 8, i32 4, i32 2, i32 12, i32 4, i32 4, i32 10, i32 8, i32 2, i32 16, i32 2, i32 12, i32 4, i32 8, i32 6, i32 21, i32 2, i32 6, i32 4, i32 12, i32 4, i32 8, i32 4, i32 8, i32 12, i32 4, i32 2, i32 18, i32 4, i32 8, i32 4, i32 10, i32 2, i32 16, i32 8, i32 6, i32 4, i32 8, i32 2, i32 24, i32 2, i32 8, i32 6, i32 6, i32 6, i32 8, i32 2, i32 12, i32 8, i32 8, i32 4, i32 18, i32 2, i32 4, i32 8, i32 16, i32 2, i32 8, i32 2, i32 12, i32 8, i32 4, i32 4, i32 20, i32 5, i32 4, i32 8, i32 6, i32 4, i32 24, i32 2, i32 8, i32 4, i32 4, i32 4, i32 12, i32 6, i32 8, i32 6, i32 16, i32 2, i32 8, i32 2, i32 12, i32 8, i32 8, i32 2, i32 20, i32 4, i32 12, i32 8, i32 6, i32 2, i32 8, i32 4, i32 10, i32 6, i32 8, i32 2, i32 24, i32 2, i32 4, i32 8, i32 8, i32 8, i32 12, i32 4, i32 6, i32 4, i32 8, i32 4, i32 24, i32 2, i32 4, i32 12, i32 9, i32 2, i32 8, i32 4, i32 16, i32 4, i32 8, i32 2, i32 18, i32 4, i32 8, i32 4, i32 10, i32 4, i32 16, i32 2, i32 6, i32 12, i32 4, i32 4, i32 16, i32 4, i32 4, i32 4, i32 18, i32 2, i32 16, i32 4, i32 14, i32 8, i32 4, i32 4, i32 12, i32 2, i32 8, i32 6, i32 8, i32 4, i32 16, i32 8, i32 6, i32 4, i32 4, i32 2, i32 30, i32 4, i32 6, i32 4, i32 6, i32 6, i32 12, i32 2, i32 16, i32 7, i32 8, i32 4, i32 12, i32 2, i32 4, i32 12, i32 12, i32 4, i32 12, i32 2, i32 12, i32 8, i32 8, i32 2, i32 16, i32 4, i32 4, i32 6, i32 12, i32 4, i32 16, i32 2, i32 10, i32 4, i32 8, i32 4, i32 24, i32 2, i32 4, i32 8, i32 16, i32 2, i32 8, i32 4, i32 6, i32 12, i32 4, i32 4, i32 18, i32 2, i32 16, i32 4, i32 6, i32 2, i32 12, i32 6, i32 8, i32 8, i32 4, i32 4, i32 24, i32 4, i32 8, i32 8, i32 15, i32 4, i32 8, i32 2, i32 6, i32 4, i32 8, i32 4, i32 24, i32 4, i32 4, i32 8, i32 6, i32 2, i32 16, i32 4, i32 18, i32 6, i32 4, i32 4, i32 12, i32 8, i32 8, i32 4, i32 8, i32 2, i32 20, i32 2, i32 12, i32 4, i32 8, i32 4, i32 20, i32 4, i32 4, i32 12, i32 12, i32 2, i32 8, i32 2, i32 8, i32 12, i32 8, i32 2, i32 18, i32 2, i32 8, i32 4, i32 14, i32 6, i32 8, i32 4, i32 12, i32 8, i32 4, i32 2, i32 32, i32 3, i32 4, i32 4, i32 6, i32 6, i32 12, i32 6, i32 10, i32 4, i32 12, i32 4, i32 12, i32 2, i32 8, i32 12, i32 8, i32 2, i32 16, i32 2, i32 12, i32 8, i32 4, i32 2, i32 24, i32 4, i32 4, i32 6, i32 12, i32 4, i32 16, i32 4, i32 8, i32 6, i32 8, i32 8, i32 12, i32 2, i32 4, i32 4, i32 20, i32 2, i32 18, i32 2, i32 12, i32 8, i32 4, i32 2, i32 16, i32 4, i32 8, i32 10, i32 6, i32 4, i32 8, i32 4, i32 16, i32 8, i32 4, i32 4, i32 27, i32 4, i32 8, i32 8, i32 8, i32 4, i32 8, i32 2, i32 6, i32 6, i32 16, i32 2, i32 20, i32 4, i32 4, i32 8, i32 6, i32 4, i32 16, i32 2, i32 16, i32 4, i32 4, i32 4, i32 24, i32 6, i32 4, i32 6, i32 12, i32 2, i32 16, i32 6, i32 6, i32 4, i32 4, i32 8, i32 24, i32 2, i32 8, i32 4, i32 12, i32 2, i32 8, i32 4, i32 10, i32 16, i32 8, i32 2, i32 12, i32 4, i32 12, i32 4, i32 16, i32 2, i32 12, i32 4, i32 6, i32 8, i32 4, i32 4, i32 28, i32 3, i32 8, i32 6, i32 6, i32 4, i32 16, i32 2, i32 12, i32 8, i32 8, i32 2, i32 18, i32 4, i32 4, i32 12, i32 10, i32 2, i32 8, i32 4, i32 18, i32 6, i32 4, i32 2, i32 16, i32 4, i32 8, i32 8, i32 12, i32 4, i32 24, i32 2, i32 12, i32 4, i32 8, i32 4, i32 12, i32 2, i32 4, i32 8, i32 16, i32 8, i32 8, i32 4, i32 6, i32 8, i32 4, i32 4, i32 30, i32 2, i32 8, i32 4, i32 12, i32 2, i32 12, i32 8, i32 8, i32 6, i32 4, i32 2, i32 24, i32 2, i32 8, i32 8, i32 11, i32 6, i32 16, i32 4, i32 6, i32 8, i32 8, i32 2, i32 16, i32 2, i32 8, i32 12, i32 12, i32 4, i32 8, i32 2, i32 20, i32 4, i32 4, i32 4, i32 18, i32 8, i32 4, i32 4, i32 8, i32 2, i32 24, i32 2, i32 6, i32 10, i32 8, i32 4, i32 24, i32 4, i32 6, i32 4, i32 12, i32 2, i32 12, i32 2, i32 16, i32 8, i32 8, i32 4, i32 12, i32 2, i32 8, i32 12, i32 10, i32 4, i32 8, i32 6, i32 6, i32 4, i32 12, i32 4, i32 32, i32 4, i32 4, i32 6, i32 6, i32 8, i32 8, i32 2, i32 14, i32 9, i32 8, i32 2, i32 24, i32 2, i32 4, i32 8, i32 8, i32 2, i32 12, i32 4, i32 18, i32 4, i32 8, i32 2, i32 20, i32 8, i32 8, i32 8, i32 6, i32 2, i32 16, i32 4, i32 8, i32 8, i32 4, i32 4, i32 18, i32 2, i32 8, i32 4, i32 24, i32 4, i32 16, i32 2, i32 6, i32 12, i32 4, i32 6, i32 16, i32 2, i32 8, i32 8, i32 6, i32 4, i32 20, i32 4, i32 10, i32 4, i32 4, i32 4, i32 24, i32 4, i32 4, i32 6, i32 16, i32 4, i32 8, i32 4, i32 12, i32 4, i32 12, i32 2, i32 24, i32 2, i32 4, i32 16, i32 9, i32 4, i32 8, i32 4, i32 16, i32 8, i32 8, i32 2, i32 12, i32 4, i32 8, i32 4, i32 10, i32 4, i32 24, i32 2, i32 6, i32 8, i32 4, i32 6, i32 24, i32 4, i32 8, i32 6, i32 12, i32 2, i32 8, i32 6, i32 12, i32 8, i32 4, i32 2, i32 24, i32 4, i32 16, i32 4, i32 8, i32 2, i32 8, i32 4, i32 12, i32 12, i32 4, i32 4, i32 30, i32 2, i32 4, i32 4, i32 12, i32 4, i32 12, i32 4, i32 8, i32 8, i32 12, i32 4, i32 12, i32 2, i32 4, i32 12, i32 14, i32 2, i32 16, i32 4, i32 12, i32 8, i32 8, i32 2, i32 24, i32 9, i32 4, i32 4, i32 6, i32 2, i32 16, i32 2, i32 20, i32 6, i32 4, i32 8, i32 12, i32 2, i32 4, i32 8, i32 16, i32 4, i32 16, i32 4, i32 6, i32 8, i32 8, i32 4, i32 24, i32 2, i32 10, i32 6, i32 6, i32 4, i32 16, i32 4, i32 8, i32 4, i32 8, i32 2, i32 36, i32 4, i32 4, i32 4, i32 10, i32 8, i32 8, i32 4, i32 6, i32 8, i32 8, i32 4, i32 16, i32 4, i32 12, i32 12, i32 12, i32 2, i32 12, i32 2, i32 18, i32 8, i32 4, i32 2, i32 12, i32 4, i32 4, i32 12, i32 16, i32 2, i32 16, i32 2, i32 12, i32 4, i32 4, i32 8, i32 25, i32 2, i32 8, i32 4, i32 18, i32 2, i32 16, i32 2, i32 8, i32 12, i32 4, i32 2, i32 12, i32 8, i32 8, i32 8, i32 12, i32 4, i32 12, i32 4, i32 12, i32 4, i32 4, i32 2, i32 32, i32 2, i32 4, i32 12, i32 6, i32 6, i32 16, i32 2, i32 10, i32 4, i32 16, i32 4, i32 18, i32 4, i32 8, i32 8, i32 8, i32 4, i32 8, i32 4, i32 12, i32 6, i32 8, i32 4, i32 28, i32 4, i32 4, i32 4, i32 6, i32 4, i32 24, i32 4, i32 12, i32 8, i32 4, i32 4, i32 12, i32 4, i32 8, i32 6, i32 20, i32 2, i32 8, i32 4, i32 12, i32 16, i32 4, i32 2, i32 24, i32 3, i32 8, i32 4, i32 12, i32 2, i32 8, i32 8, i32 12, i32 10, i32 8, i32 4, i32 24, i32 2, i32 4, i32 4, i32 8, i32 4, i32 24, i32 4, i32 6, i32 4, i32 8, i32 4, i32 20, i32 4, i32 8, i32 12, i32 6, i32 4, i32 8, i32 2, i32 24, i32 4, i32 4, i32 4, i32 24, i32 4, i32 8, i32 8, i32 16, i32 2, i32 16, i32 4, i32 6, i32 6, i32 8, i32 4, i32 16, i32 4, i32 4, i32 8, i32 12, i32 6, i32 12, i32 2, i32 10, i32 12, i32 8, i32 2, i32 24, i32 2, i32 16, i32 8, i32 8, i32 2, i32 8, i32 8, i32 6, i32 4, i32 4, i32 2, i32 36, i32 4, i32 8, i32 8, i32 9, i32 6, i32 8, i32 2, i32 8, i32 12, i32 12, i32 2, i32 18, i32 2, i32 4, i32 8, i32 20, i32 4, i32 14, i32 2, i32 12, i32 4, i32 8, i32 8, i32 16, i32 4, i32 4, i32 6, i32 6, i32 4, i32 24, i32 2, i32 14, i32 4, i32 8, i32 6, i32 18, i32 4, i32 4, i32 8, i32 16, i32 2, i32 16, i32 2, i32 12, i32 16, i32 4, i32 2, i32 20, i32 2, i32 8, i32 8, i32 6, i32 2, i32 12, i32 8, i32 16, i32 4, i32 8, i32 2, i32 24, i32 4, i32 4, i32 6, i32 12, i32 8, i32 8, i32 4, i32 12, i32 4, i32 8, i32 2, i32 32, i32 4, i32 4, i32 8, i32 6, i32 4, i32 16, i32 6, i32 20, i32 9, i32 4, i32 2, i32 12, i32 6, i32 8, i32 4, i32 8, i32 4, i32 24, i32 2, i32 6, i32 8, i32 8, i32 4, i32 20, i32 4, i32 4, i32 10, i32 24, i32 4, i32 8, i32 2, i32 8, i32 8, i32 4, i32 8, i32 18, i32 2, i32 12, i32 8, i32 10, i32 2, i32 16, i32 4, i32 6, i32 6, i32 8, i32 2, i32 32, i32 4, i32 8, i32 4, i32 12, i32 4, i32 16, i32 2, i32 18, i32 4, i32 8, i32 2, i32 12, i32 6, i32 4, i32 18, i32 8, i32 4, i32 8, i32 2, i32 12, i32 8, i32 8, i32 2, i32 30, i32 4, i32 8, i32 6, i32 6, i32 4, i32 16, i32 4, i32 8, i32 8, i32 4, i32 8, i32 24, i32 2, i32 8, i32 8, i32 21, i32 2, i32 12, i32 4, i32 6, i32 8, i32 8, i32 2, i32 16, i32 2, i32 16, i32 6, i32 12, i32 2, i32 8, i32 8, i32 10, i32 12, i32 4, i32 2, i32 30, i32 2, i32 4, i32 4, i32 16, i32 8, i32 8, i32 2, i32 12, i32 6, i32 8, i32 4, i32 24, i32 4, i32 8, i32 8, i32 6, i32 2, i32 24, i32 4, i32 16, i32 4, i32 4, i32 4, i32 12, i32 8, i32 4, i32 8, i32 10, i32 4, i32 24, i32 4, i32 12, i32 8, i32 4, i32 4, i32 24, i32 2, i32 4, i32 8, i32 12, i32 4, i32 8, i32 2, i32 16, i32 12, i32 12, i32 2, i32 12, i32 2, i32 8, i32 4, i32 16, i32 4, i32 16, i32 6, i32 6, i32 8, i32 4, i32 4, i32 40, i32 3, i32 6, i32 12, i32 6, i32 4, i32 8, i32 4, i32 8, i32 4, i32 12, i32 4, i32 18, i32 2, i32 12, i32 8, i32 12, i32 2, i32 8, i32 2, i32 18, i32 12, i32 8, i32 4, i32 16, i32 8, i32 4, i32 4, i32 12, i32 2, i32 24, i32 4, i32 10, i32 4, i32 4, i32 8, i32 24, i32 4, i32 4, i32 6, i32 16, i32 2, i32 16, i32 2, i32 6, i32 12, i32 4, i32 4, i32 28, i32 8, i32 8, i32 4, i32 6, i32 2, i32 12, i32 4, i32 16, i32 6, i32 8, i32 4, i32 24, i32 2, i32 8, i32 8, i32 10, i32 4, i32 12, i32 2, i32 12, i32 8, i32 16, i32 4, i32 16, i32 2, i32 4, i32 16, i32 6, i32 4, i32 8, i32 2, i32 24, i32 4, i32 4, i32 4, i32 27, i32 4, i32 4, i32 8, i32 16, i32 4, i32 16, i32 8, i32 6, i32 6, i32 4, i32 6, i32 20, i32 2, i32 8, i32 4, i32 12, i32 4, i32 20, i32 2, i32 8, i32 16, i32 8, i32 2, i32 12, i32 2, i32 8, i32 6, i32 18, i32 4, i32 16, i32 4, i32 6, i32 4, i32 8, i32 4, i32 36, i32 2, i32 8, i32 4, i32 12, i32 6, i32 16, i32 4, i32 10, i32 8, i32 8, i32 2, i32 12, i32 6, i32 4, i32 12, i32 8, i32 4, i32 12, i32 4, i32 24, i32 4, i32 4, i32 2, i32 24, i32 6, i32 8, i32 12, i32 6, i32 4, i32 16, i32 2, i32 8, i32 8, i32 8, i32 4, i32 24, i32 4, i32 4, i32 4, i32 20, i32 4, i32 8, i32 4, i32 6, i32 12, i32 8, i32 2, i32 32, i32 3, i32 12, i32 4, i32 6, i32 4, i32 12, i32 8, i32 14, i32 4, i32 4, i32 6, i32 24, i32 2, i32 12, i32 10, i32 8, i32 4, i32 8, i32 2, i32 6, i32 8, i32 16, i32 2, i32 30, i32 2, i32 4, i32 10, i32 12, i32 2, i32 8, i32 2, i32 16, i32 12, i32 4, i32 4, i32 12, i32 8, i32 8, i32 8, i32 12, i32 2, i32 32, i32 4, i32 12, i32 4, i32 4, i32 4, i32 16, i32 4, i32 8, i32 6, i32 18, i32 2, i32 8, i32 4, i32 20, i32 8, i32 4, i32 2, i32 18, i32 4, i32 8, i32 12, i32 8, i32 2, i32 16, i32 4, i32 6, i32 8, i32 8, i32 4, i32 32, i32 4, i32 6, i32 4, i32 12, i32 12, i32 12, i32 4, i32 8, i32 4, i32 8, i32 2, i32 24, i32 2, i32 4, i32 12, i32 15, i32 4, i32 16, i32 4, i32 12, i32 4, i32 4, i32 4, i32 24, i32 4, i32 8, i32 8, i32 6, i32 2, i32 24, i32 2, i32 12, i32 12, i32 4, i32 8, i32 12, i32 4, i32 8, i32 4, i32 24, i32 4, i32 12, i32 4, i32 6, i32 8, i32 4, i32 4, i32 20, i32 4, i32 8, i32 8, i32 12, i32 2, i32 16, i32 6, i32 16, i32 4, i32 8, i32 2, i32 36, i32 4, i32 4, i32 4, i32 14, i32 4, i32 8, i32 2, i32 12, i32 12, i32 8, i32 4, i32 16, i32 2, i32 4, i32 16, i32 6, i32 2, i32 16, i32 2, i32 20, i32 8, i32 16, i32 2, i32 12, i32 4, i32 8, i32 6, i32 8, i32 6, i32 16, i32 2, i32 6, i32 8, i32 8, i32 8, i32 36, i32 2, i32 4, i32 4, i32 12, i32 4, i32 8, i32 6, i32 16, i32 15, i32 4, i32 2, i32 18, i32 2, i32 16, i32 4, i32 10, i32 4, i32 12, i32 8, i32 6, i32 8, i32 4, i32 2, i32 32, i32 4, i32 4, i32 6, i32 12, i32 4, i32 16, i32 4, i32 12, i32 4, i32 12, i32 4, i32 24, i32 2, i32 8, i32 8, i32 8, i32 6, i32 16, i32 4, i32 12, i32 6, i32 4, i32 2, i32 20, i32 8, i32 4, i32 8, i32 12, i32 2, i32 24, i32 4, i32 16, i32 4, i32 8, i32 6, i32 12, i32 4, i32 4, i32 16, i32 24, i32 2, i32 8, i32 2, i32 6, i32 8, i32 8, i32 2, i32 24, i32 2, i32 16, i32 8, i32 6, i32 8, i32 8, i32 4, i32 10, i32 6, i32 4, i32 2, i32 36, i32 4, i32 4, i32 4, i32 8, i32 4, i32 20, i32 6, i32 12, i32 8, i32 8, i32 2, i32 28, i32 2, i32 8, i32 12, i32 9, i32 4, i32 8, i32 4, i32 16, i32 8, i32 4, i32 4, i32 18, i32 8, i32 4, i32 4, i32 20, i32 2, i32 16, i32 2, i32 12, i32 8, i32 8, i32 8, i32 16, i32 2, i32 4, i32 8, i32 12, i32 2, i32 24, i32 2, i32 12, i32 16, i32 8, i32 4, i32 12, i32 4, i32 12, i32 6, i32 8, i32 2, i32 8, i32 4, i32 18, i32 4, i32 8, i32 4, i32 40, i32 2, i32 8, i32 8, i32 6, i32 4, i32 12, i32 4, i32 8, i32 6, i32 16, i32 4, i32 12, i32 4, i32 4, i32 12, i32 16, i32 4, i32 18, i32 2, i32 12, i32 4, i32 4, i32 4, i32 32, i32 8, i32 4, i32 8, i32 6, i32 4, i32 16, i32 4, i32 10, i32 8, i32 4, i32 4, i32 18, i32 4, i32 8, i32 4, i32 24, i32 4, i32 8, i32 2, i32 12, i32 18, i32 4, i32 2, i32 24, i32 3, i32 16, i32 8, i32 12, i32 2, i32 16, i32 4, i32 8, i32 4, i32 4, i32 4, i32 24, i32 2, i32 8, i32 12, i32 10, i32 6, i32 16, i32 4, i32 6, i32 4, i32 8, i32 4, i32 24, i32 8, i32 4, i32 8, i32 12, i32 2, i32 8, i32 2, i32 28, i32 8, i32 8, i32 2, i32 24, i32 4, i32 4, i32 8, i32 8, i32 4, i32 24, i32 2, i32 6, i32 4, i32 12, i32 8, i32 20, i32 4, i32 4, i32 6, i32 12, i32 8, i32 16, i32 4, i32 8, i32 8, i32 8, i32 2, i32 30, i32 2, i32 8, i32 4, i32 12, i32 2, i32 8, i32 12, i32 6, i32 12, i32 8, i32 4, i32 32, i32 2, i32 8, i32 4, i32 6, i32 4, i32 12, i32 2, i32 20, i32 8, i32 8, i32 4, i32 12, i32 2, i32 8, i32 16, i32 16, i32 2, i32 8, i32 6, i32 18, i32 8, i32 4, i32 6, i32 27, i32 4, i32 4, i32 4, i32 6, i32 2, i32 32, i32 2, i32 12, i32 6, i32 8, i32 4, i32 12, i32 4, i32 8, i32 4, i32 20, i32 4, i32 16, i32 4, i32 12, i32 12, i32 4, i32 4, i32 16, i32 4, i32 8, i32 12, i32 12, i32 2, i32 8, i32 4, i32 12, i32 8, i32 8, i32 2, i32 36, i32 2, i32 4, i32 8, i32 8, i32 8, i32 16, i32 2, i32 6, i32 10, i32 12, i32 2, i32 30, i32 4, i32 8, i32 8, i32 12, i32 2, i32 12, i32 4, i32 16, i32 4, i32 4, i32 4, i32 12, i32 8, i32 12, i32 6, i32 14, i32 4, i32 16, i32 2, i32 6, i32 8, i32 4, i32 8, i32 32, i32 2, i32 8, i32 8, i32 24, i32 2, i32 8, i32 2, i32 10, i32 12, i32 4, i32 8, i32 12, i32 2, i32 8, i32 4, i32 16, i32 2, i32 24, i32 4, i32 6, i32 8, i32 8, i32 2, i32 36, i32 5, i32 4, i32 8, i32 6, i32 8, i32 8, i32 4, i32 16, i32 8, i32 8, i32 2, i32 18, i32 4, i32 8, i32 16, i32 10, i32 2, i32 16, i32 4, i32 18, i32 6, i32 8, i32 2, i32 16, i32 6, i32 4, i32 4, i32 6, i32 4, i32 24, i32 8, i32 16, i32 4, i32 4, i32 4, i32 24, i32 2, i32 8, i32 6, i32 16, i32 2, i32 16, i32 4, i32 12, i32 8, i32 4, i32 2, i32 30, i32 4, i32 18, i32 8, i32 6, i32 4, i32 8, i32 4, i32 8, i32 16, i32 4, i32 2, i32 24, i32 4, i32 4, i32 4, i32 24, i32 8, i32 12, i32 2, i32 6, i32 4, i32 16, i32 4, i32 16, i32 2, i32 4, i32 18, i32 6, i32 2, i32 16, i32 4, i32 20, i32 4, i32 8, i32 4, i32 24, i32 8, i32 8, i32 4, i32 8, i32 4, i32 16, i32 4, i32 12, i32 6, i32 8, i32 4, i32 28, i32 4, i32 4, i32 12, i32 15, i32 4, i32 12, i32 2, i32 8, i32 8, i32 8, i32 4, i32 24, i32 4, i32 8, i32 10, i32 10, i32 4, i32 8, i32 4, i32 12, i32 4, i32 4, i32 4, i32 48, i32 2, i32 8, i32 6, i32 6, i32 6, i32 8, i32 6, i32 12, i32 6, i32 16, i32 2, i32 12, i32 4, i32 8, i32 12, i32 8, i32 4, i32 16, i32 2, i32 12, i32 12, i32 8, i32 2, i32 20, i32 4, i32 8, i32 6, i32 18, i32 2, i32 24, i32 2, i32 16, i32 8, i32 4, i32 8, i32 18, i32 2, i32 4, i32 4, i32 20, i32 4, i32 16, i32 4, i32 6, i32 16, i32 4, i32 4, i32 16, i32 4, i32 8, i32 4, i32 6, i32 4, i32 24, i32 6, i32 20, i32 4, i32 4, i32 2, i32 24, i32 4, i32 4, i32 12, i32 16, i32 8, i32 8, i32 4, i32 6, i32 4, i32 16, i32 2, i32 30, i32 2, i32 4, i32 8, i32 12, i32 6, i32 8, i32 4, i32 24, i32 9, i32 4, i32 4, i32 24, i32 4, i32 4, i32 8, i32 10, i32 2, i32 24, i32 4, i32 6, i32 8, i32 4, i32 4, i32 16, i32 2, i32 16, i32 8, i32 12, i32 2, i32 16, i32 4, i32 14, i32 16, i32 8, i32 4, i32 18, i32 4, i32 8, i32 4, i32 16, i32 2, i32 8, i32 8, i32 6, i32 6, i32 4, i32 8, i32 40, i32 4, i32 4, i32 4, i32 6, i32 6, i32 24, i32 2, i32 8, i32 4, i32 12, i32 4, i32 24, i32 4, i32 4, i32 12, i32 12, i32 2, i32 8, i32 2, i32 24, i32 4, i32 8, i32 2, i32 24, i32 8, i32 8, i32 8, i32 12, i32 4, i32 16, i32 2, i32 10, i32 12, i32 8, i32 6, i32 12, i32 2, i32 8, i32 8, i32 16, i32 4, i32 12, i32 2, i32 12, i32 8, i32 8, i32 2, i32 32, i32 2, i32 8, i32 12, i32 6, i32 2, i32 8, i32 12, i32 8, i32 8, i32 8, i32 2, i32 36, i32 4, i32 8, i32 8, i32 15, i32 4, i32 16, i32 2, i32 6, i32 12, i32 8, i32 2, i32 16, i32 2, i32 8, i32 8, i32 12, i32 8, i32 12, i32 2, i32 24, i32 4, i32 4, i32 4, i32 12, i32 6, i32 8, i32 8, i32 16, i32 2, i32 32, i32 2, i32 6, i32 4, i32 4, i32 4, i32 30, i32 8, i32 6, i32 8, i32 12, i32 2, i32 8, i32 4, i32 16, i32 12, i32 4, i32 4, i32 12, i32 2, i32 16, i32 8, i32 14, i32 2, i32 20, i32 8, i32 12, i32 4, i32 8, i32 4, i32 32, i32 4, i32 4, i32 6, i32 6, i32 8, i32 8, i32 2, i32 10, i32 8, i32 8, i32 4, i32 36, i32 4, i32 8, i32 12, i32 8, i32 2, i32 8, i32 4, i32 12, i32 8, i32 8, i32 6, i32 24, i32 4, i32 8, i32 4, i32 12, i32 2, i32 24, i32 2, i32 8, i32 12, i32 8, i32 8, i32 12, i32 2, i32 4, i32 6, i32 30, i32 2, i32 8, i32 2, i32 6, i32 16, i32 8, i32 4, i32 32, i32 3, i32 8, i32 4, i32 12, i32 4, i32 16, i32 4, i32 18, i32 6, i32 4, i32 2, i32 24, i32 8, i32 8, i32 4, i32 8, i32 6, i32 12, i32 4, i32 12, i32 8, i32 8, i32 4, i32 20, i32 2, i32 8, i32 20, i32 6, i32 2, i32 16, i32 4, i32 16, i32 4, i32 12, i32 2, i32 18, i32 4, i32 4, i32 8, i32 12, i32 8, i32 24, i32 2, i32 12, i32 6, i32 4, i32 4, i32 32, i32 2, i32 4, i32 4, i32 24, i32 2, i32 16, i32 4, i32 10, i32 8, i32 4, i32 4, i32 12, i32 4, i32 16, i32 12, i32 8, i32 6, i32 8, i32 8, i32 6, i32 8, i32 4, i32 2, i32 42, i32 4, i32 8, i32 6, i32 12, i32 4, i32 16, i32 2, i32 12, i32 8, i32 12, i32 6, i32 12, i32 4, i32 4, i32 8, i32 10, i32 2, i32 24, i32 4, i32 18, i32 4, i32 4, i32 2, i32 24, i32 8, i32 4, i32 12, i32 6, i32 2, i32 16, i32 4, i32 24, i32 4, i32 8, i32 8, i32 21, i32 2, i32 4, i32 8, i32 16, i32 4, i32 8, i32 4, i32 12, i32 18, i32 16, i32 2, i32 20, i32 4, i32 8, i32 4, i32 6, i32 4, i32 12, i32 4, i32 8, i32 8, i32 8, i32 2, i32 36, i32 4, i32 4, i32 8, i32 16, i32 8, i32 8, i32 4, i32 12, i32 4, i32 12, i32 4, i32 24, i32 2, i32 8, i32 8, i32 6, i32 2, i32 16, i32 4, i32 20, i32 12, i32 4, i32 2, i32 24, i32 4, i32 4, i32 8, i32 16, i32 2, i32 32, i32 2, i32 6, i32 4, i32 4, i32 12, i32 24, i32 4, i32 4, i32 6, i32 12, i32 4, i32 16, i32 4, i32 8, i32 8, i32 4, i32 4, i32 18, i32 6, i32 16, i32 4, i32 20, i32 4, i32 8, i32 4, i32 12, i32 10, i32 4, i32 2, i32 32, i32 2, i32 8, i32 16, i32 6, i32 4, i32 12, i32 4, i32 14, i32 8, i32 16, i32 2, i32 12, i32 4, i32 8, i32 12, i32 16, i32 4, i32 8, i32 2, i32 12, i32 8, i32 4, i32 2, i32 40, i32 9, i32 8, i32 4, i32 6, i32 4, i32 16, i32 4, i32 8, i32 6, i32 8, i32 4, i32 24, i32 2, i32 12, i32 4, i32 24, i32 2, i32 18, i32 4, i32 6, i32 16, i32 4, i32 4, i32 16, i32 2, i32 12, i32 8, i32 12, i32 4, i32 8, i32 8, i32 10, i32 4, i32 8, i32 8, i32 36, i32 2, i32 4, i32 4, i32 8, i32 4, i32 16, i32 2, i32 12, i32 12, i32 8, i32 4, i32 22, i32 4, i32 8, i32 12, i32 6, i32 4, i32 20, i32 2, i32 32, i32 8, i32 8, i32 2, i32 12, i32 4, i32 4, i32 12, i32 10, i32 2, i32 16, i32 4, i32 6, i32 4, i32 16, i32 4, i32 24, i32 4, i32 4, i32 4, i32 18, i32 4, i32 16, i32 4, i32 12, i32 16, i32 4, i32 4, i32 24, i32 2, i32 8, i32 8, i32 8, i32 4, i32 12, i32 8, i32 12, i32 4, i32 4, i32 2, i32 40, i32 2, i32 8, i32 6, i32 12, i32 6, i32 8, i32 4, i32 16, i32 8, i32 8, i32 4, i32 24, i32 4, i32 4, i32 16, i32 21, i32 2, i32 8, i32 4, i32 12, i32 6, i32 4, i32 4, i32 16, i32 8, i32 12, i32 4, i32 6, i32 4, i32 36, i32 4, i32 10, i32 4, i32 8, i32 4, i32 12, i32 8, i32 4, i32 12, i32 16, i32 4, i32 16, i32 2, i32 12, i32 8, i32 4, i32 2, i32 36, i32 2, i32 8, i32 8, i32 12, i32 4, i32 12, i32 6, i32 8, i32 6, i32 8, i32 6, i32 24, i32 2, i32 8, i32 4, i32 10, i32 12, i32 16, i32 2, i32 6, i32 4, i32 16, i32 2, i32 32, i32 4, i32 4, i32 12, i32 12, i32 4, i32 16, i32 4, i32 24, i32 8, i32 4, i32 2, i32 18, i32 4, i32 8, i32 4, i32 8, i32 2, i32 16, i32 6, i32 12, i32 16, i32 4, i32 4, i32 20, i32 2, i32 4, i32 8, i32 24, i32 2, i32 12, i32 4, i32 16, i32 12, i32 4, i32 4, i32 12, i32 2, i32 16, i32 6, i32 12, i32 4, i32 24, i32 4, i32 6, i32 8, i32 4, i32 4, i32 40, i32 4, i32 4, i32 8, i32 6, i32 8, i32 8, i32 4, i32 20, i32 9, i32 16, i32 2, i32 12, i32 2, i32 4, i32 16, i32 16, i32 2, i32 12, i32 2, i32 12, i32 4, i32 8, i32 4, i32 28, i32 4, i32 8, i32 12, i32 12, i32 4, i32 16, i32 2, i32 8, i32 4, i32 4, i32 6, i32 36, i32 4, i32 8, i32 4, i32 20, i32 4, i32 8, i32 6, i32 6, i32 12, i32 8, i32 4, i32 16, i32 8, i32 16, i32 4, i32 6, i32 4, i32 16, i32 4, i32 12, i32 8, i32 8, i32 2, i32 36, i32 2, i32 8, i32 6, i32 16, i32 4, i32 16, i32 2, i32 6, i32 4, i32 8, i32 8, i32 30, i32 2, i32 4, i32 16, i32 6, i32 4, i32 16, i32 2, i32 16, i32 10, i32 8, i32 2, i32 12, i32 12, i32 4, i32 4, i32 18, i32 2, i32 24, i32 2, i32 18, i32 8, i32 4, i32 8, i32 16, i32 4, i32 4, i32 12, i32 12, i32 4, i32 8, i32 2, i32 20, i32 8, i32 8, i32 2, i32 24, i32 4, i32 12, i32 4, i32 8, i32 4, i32 16, i32 8, i32 6, i32 6, i32 8, i32 2, i32 48, i32 2, i32 6, i32 8, i32 9, i32 4, i32 24, i32 8, i32 8, i32 4, i32 8, i32 2, i32 12, i32 2, i32 8, i32 16, i32 10, i32 4, i32 8, i32 4, i32 18, i32 12, i32 8, i32 4, i32 24, i32 4, i32 4, i32 4, i32 18, i32 2, i32 16, i32 2, i32 14, i32 12, i32 4, i32 8, i32 12, i32 4, i32 4, i32 8, i32 24, i32 4, i32 24, i32 4, i32 12, i32 8, i32 8, i32 2, i32 20, i32 4, i32 16, i32 6, i32 6, i32 2, i32 8, i32 4, i32 16, i32 8, i32 4, i32 4, i32 36, i32 4, i32 8, i32 8, i32 12, i32 6, i32 8, i32 4, i32 6, i32 8, i32 16, i32 4, i32 32, i32 2, i32 8, i32 8, i32 6, i32 4, i32 12, i32 4, i32 20, i32 8, i32 4, i32 4, i32 24, i32 8, i32 4, i32 6, i32 8, i32 2, i32 24, i32 8, i32 6, i32 4, i32 8, i32 4, i32 32, i32 2, i32 16, i32 4, i32 12, i32 2, i32 8, i32 2, i32 8, i32 24, i32 4, i32 2, i32 18, i32 2, i32 8, i32 8, i32 20, i32 4, i32 12, i32 6, i32 12, i32 8, i32 8, i32 6, i32 32, i32 3, i32 4, i32 10, i32 12, i32 8, i32 16, i32 4, i32 12, i32 4, i32 8, i32 2, i32 18, i32 4, i32 4, i32 8, i32 16, i32 4, i32 16, i32 2, i32 24, i32 6, i32 8, i32 4, i32 20, i32 4, i32 4, i32 8, i32 6, i32 6, i32 32, i32 2, i32 8, i32 4, i32 8, i32 8, i32 12, i32 2, i32 4, i32 12, i32 28, i32 4, i32 8, i32 4, i32 6, i32 12, i32 8, i32 2, i32 36, i32 2, i32 8, i32 8, i32 6, i32 2, i32 16, i32 8, i32 20, i32 8, i32 8, i32 2, i32 24, i32 2, i32 16, i32 4, i32 8, i32 4, i32 12, i32 2, i32 6, i32 12, i32 12, i32 4, i32 24, i32 8, i32 4, i32 12, i32 12, i32 2, i32 8, i32 2, i32 16, i32 4, i32 8, i32 4, i32 30, i32 8, i32 4, i32 8, i32 10, i32 4, i32 32, i32 2, i32 12, i32 6, i32 4, i32 12, i32 16, i32 6, i32 4, i32 4, i32 12, i32 2, i32 12, i32 2, i32 20, i32 8, i32 8, i32 4, i32 24, i32 4, i32 8, i32 16, i32 8, i32 2, i32 8, i32 4, i32 12, i32 8, i32 8, i32 4, i32 45, i32 4, i32 4, i32 4, i32 12, i32 8, i32 8, i32 2, i32 16, i32 6, i32 12, i32 4, i32 24, i32 2, i32 8, i32 8, i32 12, i32 2, i32 16, i32 8, i32 12, i32 8, i32 4, i32 2, i32 16, i32 8, i32 12, i32 12, i32 6, i32 4, i32 24, i32 2, i32 10, i32 8, i32 8, i32 4, i32 18, i32 2, i32 8, i32 4, i32 32, i32 4, i32 8, i32 2, i32 6, i32 14, i32 4, i32 4, i32 28, i32 4, i32 12, i32 4, i32 12, i32 4, i32 24, i32 8, i32 8, i32 8, i32 8, i32 2, i32 24, i32 4, i32 4, i32 12, i32 10, i32 4, i32 16, i32 4, i32 12, i32 4, i32 8, i32 2, i32 32, i32 2, i32 8, i32 18, i32 6, i32 2, i32 8, i32 4, i32 24, i32 6, i32 8, i32 4, i32 12, i32 8, i32 8, i32 4, i32 8, i32 8, i32 24, i32 2, i32 12, i32 4, i32 4, i32 4, i32 40, i32 2, i32 6, i32 8, i32 18, i32 2, i32 8, i32 6, i32 8, i32 16, i32 8, i32 4, i32 18, i32 2, i32 16, i32 4, i32 16, i32 4, i32 8, i32 4, i32 6, i32 12, i32 12, i32 2, i32 32, i32 3, i32 4, i32 8, i32 18, i32 6, i32 20, i32 2, i32 10, i32 8, i32 8, i32 8, i32 12, i32 2, i32 4, i32 12, i32 8, i32 4, i32 16, i32 2, i32 24, i32 8, i32 4, i32 4, i32 36, i32 8, i32 4, i32 4, i32 6, i32 4, i32 20, i32 6, i32 16, i32 8, i32 4, i32 4, i32 12, i32 6, i32 4, i32 8, i32 20, i32 2, i32 24, i32 4, i32 6, i32 8, i32 8, i32 2, i32 16, i32 2, i32 16, i32 6, i32 12, i32 8, i32 16, i32 6, i32 14, i32 4, i32 4, i32 2, i32 48, i32 4, i32 8, i32 8, i32 16, i32 4, i32 8, i32 4, i32 6, i32 6, i32 8, i32 4, i32 20, i32 2, i32 8, i32 16, i32 12, i32 2, i32 12, i32 4, i32 24, i32 8, i32 4, i32 2, i32 12, i32 4, i32 8, i32 10, i32 24, i32 4, i32 16, i32 4, i32 6, i32 8, i32 4, i32 8, i32 24, i32 4, i32 8, i32 8, i32 12, i32 2, i32 24, i32 2, i32 10, i32 18, i32 4, i32 4, i32 24, i32 4, i32 8, i32 4, i32 8, i32 2, i32 16, i32 8, i32 12, i32 4, i32 8, i32 4, i32 36, i32 4, i32 8, i32 12, i32 9, i32 4, i32 8, i32 2, i32 16, i32 4, i32 24, i32 2, i32 18, i32 2, i32 8, i32 8, i32 10, i32 8, i32 8, i32 4, i32 12, i32 16, i32 4, i32 2, i32 32, i32 4, i32 4, i32 4, i32 6, i32 4, i32 24, i32 6, i32 18, i32 4, i32 8, i32 8, i32 24, i32 2, i32 8, i32 6, i32 16, i32 2, i32 8, i32 4, i32 6, i32 16, i32 8, i32 6, i32 30, i32 2, i32 8, i32 4, i32 12, i32 4, i32 16, i32 8, i32 8, i32 6, i32 4, i32 4, i32 36, i32 4, i32 4, i32 4, i32 14, i32 8, i32 24, i32 2, i32 6, i32 4, i32 16, i32 2, i32 16, i32 8, i32 8, i32 16, i32 12, i32 2, i32 8, i32 2, i32 30, i32 4, i32 8, i32 2, i32 18, i32 6, i32 8, i32 16, i32 8, i32 2, i32 16, i32 2, i32 6, i32 12, i32 8, i32 4, i32 24, i32 4, i32 8, i32 8, i32 12, i32 4, i32 16, i32 2, i32 16, i32 8, i32 4, i32 2, i32 24, i32 4, i32 12, i32 6, i32 20, i32 4, i32 8, i32 8, i32 12, i32 4, i32 4, i32 4, i32 48, i32 4, i32 8, i32 4, i32 6, i32 8, i32 8, i32 2, i32 16, i32 15, i32 8, i32 6, i32 12, i32 4, i32 4, i32 12, i32 16, i32 4, i32 24, i32 4, i32 12, i32 4, i32 8, i32 4, i32 20, i32 4, i32 4, i32 6, i32 6, i32 2, i32 32, i32 4, i32 8, i32 8, i32 4, i32 8, i32 24, i32 4, i32 4, i32 8, i32 24, i32 2, i32 16, i32 2, i32 24, i32 12, i32 4, i32 2, i32 16, i32 4, i32 8, i32 8, i32 12, i32 2, i32 12, i32 8, i32 10, i32 8, i32 12, i32 2, i32 24, i32 2, i32 4, i32 8, i32 8, i32 12, i32 16, i32 2, i32 12, i32 8, i32 16, i32 4, i32 42, i32 4, i32 4, i32 8, i32 6, i32 4, i32 8, i32 4, i32 16, i32 6, i32 8, i32 4, i32 12, i32 4, i32 12, i32 8, i32 20, i32 2, i32 30, i32 2, i32 6, i32 8, i32 4, i32 4, i32 24, i32 2, i32 4, i32 12, i32 24, i32 4, i32 8, i32 4, i32 12, i32 8, i32 8, i32 6, i32 18, i32 4, i32 16, i32 8, i32 8, i32 2, i32 16, i32 6, i32 6, i32 8, i32 4, i32 2, i32 40, i32 8, i32 8, i32 4, i32 6, i32 8, i32 12, i32 4, i32 16, i32 8, i32 8, i32 2, i32 24, i32 2, i32 8, i32 24, i32 13, i32 4, i32 8, i32 2, i32 18, i32 4, i32 8, i32 4, i32 32, i32 4, i32 4, i32 6, i32 12, i32 4, i32 16, i32 2, i32 10, i32 6, i32 12, i32 4, i32 24, i32 4, i32 8, i32 4, i32 16, i32 4, i32 12, i32 8, i32 6, i32 16, i32 4, i32 2, i32 24, i32 2, i32 16, i32 12, i32 6, i32 2, i32 16, i32 4, i32 16, i32 8, i32 4, i32 2, i32 36, i32 4, i32 8, i32 4, i32 20, i32 4, i32 8, i32 8, i32 12, i32 6, i32 12, i32 4, i32 16, i32 2, i32 8, i32 8, i32 6, i32 2, i32 32, i32 2, i32 28, i32 8, i32 4, i32 4, i32 12, i32 12, i32 4, i32 6, i32 8, i32 4, i32 16, i32 4, i32 12, i32 8, i32 4, i32 6, i32 30, i32 2, i32 4, i32 8, i32 24, i32 4, i32 16, i32 4, i32 8, i32 16, i32 16, i32 4, i32 12, i32 4, i32 8, i32 8, i32 12, i32 4, i32 12, i32 4, i32 6, i32 4, i32 4, i32 8, i32 48, i32 2, i32 8, i32 6, i32 6, i32 6, i32 8, i32 4, i32 10, i32 8, i32 8, i32 2, i32 30, i32 4, i32 12, i32 8, i32 16, i32 2, i32 16, i32 2, i32 12, i32 12, i32 4, i32 4, i32 32, i32 9, i32 4, i32 4, i32 12, i32 2, i32 24, i32 2, i32 12, i32 8, i32 8, i32 12, i32 12, i32 4, i32 8, i32 8, i32 20, i32 2, i32 16, i32 2, i32 6, i32 8, i32 8, i32 4, i32 24, i32 4, i32 16, i32 8, i32 6, i32 2, i32 8, i32 8, i32 24, i32 12, i32 4, i32 2, i32 24, i32 2, i32 4, i32 12, i32 16, i32 4, i32 16, i32 4, i32 12, i32 4, i32 16, i32 2, i32 20, i32 2, i32 4, i32 18, i32 6, i32 8, i32 16, i32 4, i32 16, i32 4, i32 4, i32 2, i32 36, i32 4, i32 4, i32 4, i32 14, i32 2, i32 32, i32 4, i32 12, i32 10, i32 8, i32 4, i32 16, i32 2, i32 8, i32 4, i32 18, i32 8, i32 12, i32 4, i32 10, i32 16, i32 4, i32 4, i32 12, i32 4, i32 8, i32 6, i32 24, i32 4, i32 8, i32 4, i32 12, i32 4, i32 8, i32 4, i32 48, i32 4, i32 4, i32 8, i32 12, i32 6, i32 16, i32 2, i32 8, i32 12, i32 8, i32 4, i32 18, i32 4, i32 8, i32 12, i32 10, i32 2, i32 12, i32 2, i32 24, i32 4, i32 8, i32 4, i32 16, i32 8, i32 8, i32 16, i32 6, i32 2, i32 24, i32 4, i32 18, i32 4, i32 8, i32 8, i32 27, i32 2, i32 4, i32 4, i32 16, i32 6, i32 8, i32 2, i32 6, i32 12, i32 8, i32 4, i32 40, i32 4, i32 16, i32 8, i32 6, i32 2, i32 16, i32 10, i32 8, i32 4, i32 8, i32 4, i32 24, i32 4, i32 8, i32 6, i32 12, i32 4, i32 16, i32 4, i32 6, i32 16, i32 8, i32 2, i32 24, i32 4, i32 8, i32 8, i32 12, i32 2, i32 8, i32 4, i32 30, i32 8, i32 8, i32 8, i32 12, i32 4, i32 4, i32 8, i32 16, i32 2, i32 36, i32 4, i32 6, i32 4, i32 4, i32 4, i32 28, i32 4, i32 6, i32 6, i32 24, i32 2, i32 16, i32 2, i32 16, i32 12, i32 4, i32 4, i32 24, i32 4, i32 8, i32 8, i32 10, i32 8, i32 8, i32 4, i32 6, i32 12, i32 8, i32 4, i32 32, i32 2, i32 4, i32 4, i32 12, i32 8, i32 24, i32 2, i32 12, i32 4, i32 12, i32 2, i32 24, i32 4, i32 8, i32 20, i32 8, i32 2, i32 8, i32 8, i32 12, i32 4, i32 8, i32 2, i32 30, i32 8, i32 16, i32 4, i32 6, i32 4, i32 16, i32 4, i32 16, i32 12, i32 4, i32 6, i32 12, i32 6, i32 4, i32 4, i32 32, i32 2, i32 16, i32 2, i32 12, i32 16, i32 4, i32 4, i32 32, i32 3, i32 8, i32 6, i32 6, i32 2, i32 16, i32 8, i32 10, i32 4, i32 8, i32 4, i32 36, i32 4, i32 4, i32 8, i32 8, i32 8, i32 8, i32 2, i32 18, i32 8, i32 16, i32 4, i32 24, i32 2, i32 8, i32 16, i32 6, i32 2, i32 12, i32 2, i32 16, i32 8, i32 16, i32 2, i32 24, i32 6, i32 8, i32 6, i32 10, i32 4, i32 16, i32 4, i32 12, i32 4, i32 4, i32 4, i32 40, i32 4, i32 4, i32 8, i32 12, i32 4, i32 8, i32 8, i32 14, i32 12, i32 4, i32 2, i32 12, i32 2, i32 24, i32 8, i32 8, i32 4, i32 24, i32 4, i32 12, i32 12, i32 8, i32 4, i32 40, i32 2, i32 4, i32 12, i32 12, i32 8, i32 8, i32 2, i32 8, i32 4, i32 8, i32 4, i32 18, i32 4, i32 4, i32 12, i32 24, i32 4, i32 16, i32 4, i32 12, i32 6, i32 8, i32 2, i32 16, i32 8, i32 4, i32 8, i32 12, i32 4, i32 32, i32 2, i32 20, i32 4, i32 4, i32 4, i32 12, i32 2, i32 12, i32 12, i32 24, i32 4, i32 16, i32 2, i32 6, i32 8, i32 12, i32 4, i32 30, i32 4, i32 8, i32 8, i32 6, i32 4, i32 8, i32 8, i32 8, i32 12, i32 4, i32 4, i32 48, i32 2, i32 4, i32 8, i32 15, i32 8, i32 12, i32 4, i32 12, i32 4, i32 8, i32 4, i32 16, i32 4, i32 8, i32 12, i32 12, i32 2, i32 8, i32 2, i32 24, i32 16, i32 8, i32 2, i32 24, i32 4, i32 8, i32 4, i32 16, i32 2, i32 24, i32 2, i32 6, i32 12, i32 8, i32 12, i32 20, i32 2, i32 8, i32 4, i32 12, i32 4, i32 24, i32 2, i32 16, i32 8, i32 4, i32 4, i32 12, i32 8, i32 8, i32 8, i32 14, i32 2, i32 16, i32 12, i32 12, i32 4, i32 4, i32 2, i32 48, i32 4, i32 4, i32 8, i32 6, i32 4, i32 16, i32 4, i32 10, i32 6, i32 16, i32 2, i32 24, i32 6, i32 4, i32 8, i32 8, i32 8, i32 20, i32 4, i32 18, i32 4, i32 4, i32 2, i32 36, i32 4, i32 8, i32 6, i32 12, i32 4, i32 16, i32 4, i32 16, i32 4, i32 4, i32 8, i32 18, i32 4, i32 8, i32 12, i32 20, i32 2, i32 8, i32 2, i32 6, i32 24, i32 8, i32 4, i32 16, i32 2, i32 16, i32 8, i32 18, i32 2, i32 12, i32 4, i32 16, i32 4, i32 8, i32 4, i32 24, i32 4, i32 4, i32 12, i32 8, i32 8, i32 16, i32 4, i32 6, i32 4, i32 16, i32 2, i32 40, i32 6, i32 4, i32 8, i32 12, i32 4, i32 16, i32 2, i32 32, i32 9, i32 4, i32 4, i32 12, i32 4, i32 4, i32 8, i32 12, i32 4, i32 24, i32 4, i32 6, i32 8, i32 16, i32 6, i32 16, i32 4, i32 4, i32 10, i32 12, i32 4, i32 8, i32 2, i32 20, i32 16, i32 4, i32 2, i32 36, i32 2, i32 8, i32 4, i32 8, i32 2, i32 16, i32 8, i32 12, i32 12, i32 4, i32 2, i32 42, i32 2, i32 10, i32 4, i32 6, i32 6, i32 16, i32 8, i32 8, i32 8, i32 16, i32 4, i32 12, i32 2, i32 8, i32 12, i32 20, i32 2, i32 16, i32 4, i32 12, i32 4, i32 4, i32 8, i32 24, i32 6, i32 8, i32 4, i32 12, i32 4, i32 32, i32 2, i32 12, i32 8, i32 4, i32 4, i32 24, i32 4, i32 8, i32 4, i32 24, i32 4, i32 12, i32 4, i32 12, i32 16, i32 4, i32 4, i32 20, i32 4, i32 12, i32 18, i32 6, i32 4, i32 8, i32 4, i32 8, i32 4, i32 8, i32 4, i32 36, i32 2, i32 16, i32 4, i32 18, i32 8, i32 8, i32 4, i32 6, i32 6, i32 8, i32 2, i32 32, i32 4, i32 4, i32 16, i32 12, i32 2, i32 12, i32 8, i32 20, i32 4, i32 4, i32 4, i32 24, i32 4, i32 8, i32 8, i32 16, i32 2, i32 16, i32 4, i32 6, i32 8, i32 4, i32 8, i32 36, i32 4, i32 8, i32 8, i32 27, i32 6, i32 16, i32 2, i32 8, i32 12, i32 8, i32 4, i32 12, i32 2, i32 8, i32 4, i32 10, i32 4, i32 32, i32 4, i32 6, i32 8, i32 4, i32 2, i32 32, i32 8, i32 8, i32 6, i32 6, i32 6, i32 8, i32 4, i32 28, i32 8, i32 16, i32 2, i32 18, i32 2, i32 4, i32 16, i32 8, i32 2, i32 8, i32 4, i32 24, i32 10, i32 8, i32 2, i32 20, i32 8, i32 4, i32 8, i32 6, i32 6, i32 36, i32 2, i32 8, i32 8, i32 4, i32 4, i32 24, i32 2, i32 8, i32 12, i32 24, i32 6, i32 8, i32 4, i32 12, i32 8, i32 8, i32 2, i32 32, i32 2, i32 16, i32 4, i32 12, i32 2, i32 8, i32 6, i32 10, i32 12, i32 8, i32 4, i32 24, i32 4, i32 8, i32 8, i32 16, i32 4, i32 12, i32 2, i32 12, i32 4, i32 8, i32 8, i32 32, i32 2, i32 8, i32 16, i32 6, i32 4, i32 24, i32 2, i32 20, i32 4, i32 8, i32 2, i32 18, i32 16, i32 4, i32 4, i32 10, i32 2, i32 16, i32 2, i32 12, i32 6, i32 8, i32 8, i32 32, i32 4, i32 8, i32 8, i32 12, i32 2, i32 20, i32 2, i32 12, i32 12, i32 8, i32 4, i32 12, i32 4, i32 8, i32 12, i32 16, i32 4, i32 8, i32 8, i32 6, i32 8, i32 8, i32 2, i32 60, i32 3, i32 4, i32 6, i32 12, i32 4, i32 12, i32 6, i32 8, i32 16, i32 12, i32 2, i32 12, i32 4, i32 12, i32 8, i32 14, i32 4, i32 12, i32 2, i32 24, i32 8, i32 4, i32 4, i32 16, i32 4, i32 8, i32 6, i32 12, i32 4, i32 24, i32 4, i32 10, i32 8, i32 8, i32 12, i32 24, i32 2, i32 4, i32 4, i32 16, i32 2, i32 24, i32 8, i32 12, i32 12, i32 4, i32 2, i32 24, i32 4, i32 8, i32 4, i32 12, i32 4, i32 12, i32 4, i32 24, i32 4, i32 4, i32 2, i32 36, i32 2, i32 4, i32 14, i32 20, i32 4, i32 16, i32 2, i32 6, i32 8, i32 16, i32 4, i32 24, i32 2, i32 4, i32 16, i32 6, i32 8, i32 8, i32 2, i32 22, i32 6, i32 8, i32 4, i32 24, i32 8, i32 8, i32 4, i32 8, i32 4, i32 32, i32 4, i32 6, i32 8, i32 8, i32 8, i32 20, i32 4, i32 8, i32 6, i32 12, i32 4, i32 8, i32 4, i32 8, i32 16, i32 8, i32 2, i32 36, i32 4, i32 12, i32 8, i32 24, i32 2, i32 8, i32 4, i32 6, i32 8, i32 4, i32 8, i32 32, i32 4, i32 8, i32 4, i32 6, i32 4, i32 24, i32 2, i32 20, i32 4, i32 16, i32 2, i32 12, i32 4, i32 8, i32 18, i32 8, i32 4, i32 8, i32 2, i32 24, i32 8, i32 4, i32 4, i32 35, i32 8, i32 4, i32 16, i32 6, i32 2, i32 16, i32 4, i32 16, i32 6, i32 12, i32 4, i32 12, i32 2, i32 8, i32 4, i32 30, i32 4, i32 18, i32 6, i32 6, i32 8, i32 8, i32 4, i32 32, i32 2, i32 8, i32 8, i32 6, i32 4, i32 16, i32 8, i32 12, i32 8, i32 4, i32 4, i32 36, i32 4, i32 8, i32 4, i32 8, i32 12, i32 16, i32 2, i32 6, i32 12, i32 8, i32 2, i32 20, i32 2, i32 4, i32 8, i32 24, i32 2, i32 16, i32 6, i32 16, i32 4, i32 4, i32 6, i32 24, i32 4, i32 8, i32 12, i32 16, i32 4, i32 32, i32 4, i32 12, i32 8, i32 8, i32 4, i32 24, i32 4, i32 8, i32 4, i32 12, i32 2, i32 8, i32 4, i32 20, i32 20, i32 4, i32 4, i32 12, i32 4, i32 16, i32 8, i32 8, i32 2, i32 12, i32 6, i32 6, i32 4, i32 16, i32 2, i32 48, i32 2, i32 8, i32 6, i32 6, i32 8, i32 8, i32 4, i32 8, i32 8, i32 12, i32 8, i32 36, i32 4, i32 4, i32 8, i32 10, i32 2, i32 8, i32 4, i32 18, i32 12, i32 8, i32 2, i32 32, i32 4, i32 8, i32 8, i32 6, i32 2, i32 24, i32 4, i32 14, i32 16, i32 4, i32 4, i32 12, i32 4, i32 4, i32 8, i32 32, i32 4, i32 8, i32 2, i32 12, i32 12, i32 4, i32 4, i32 30, i32 3, i32 16, i32 4, i32 12, i32 2, i32 16, i32 8, i32 16, i32 6, i32 8, i32 4, i32 24, i32 6, i32 4, i32 8, i32 12, i32 4, i32 24, i32 2, i32 12, i32 4, i32 12, i32 2, i32 16, i32 4, i32 4, i32 24, i32 12, i32 4, i32 16, i32 4, i32 20, i32 4, i32 8, i32 4, i32 18, i32 8, i32 4, i32 4, i32 16, i32 8, i32 16, i32 4, i32 12, i32 8, i32 4, i32 8, i32 36, i32 4, i32 4, i32 8, i32 12, i32 2, i32 24, i32 4, i32 8, i32 8, i32 4, i32 2, i32 12, i32 4, i32 24, i32 6, i32 10, i32 2, i32 16, i32 8, i32 12, i32 8, i32 4, i32 2, i32 48, i32 4, i32 8, i32 4, i32 12, i32 8, i32 16, i32 2, i32 18, i32 6, i32 8, i32 4, i32 24, i32 2, i32 4, i32 12, i32 8, i32 2, i32 24, i32 2, i32 12, i32 8, i32 4, i32 8, i32 20, i32 12, i32 4, i32 10, i32 12, i32 4, i32 16, i32 2, i32 16, i32 4, i32 16, i32 4, i32 18, i32 2, i32 4, i32 12, i32 28, i32 2, i32 8, i32 2, i32 6, i32 18, i32 8, i32 4, i32 16, i32 2, i32 12, i32 8, i32 12, i32 8, i32 16, i32 4, i32 20, i32 8, i32 4, i32 4, i32 48, i32 4, i32 4, i32 6, i32 8, i32 4, i32 8, i32 8, i32 6, i32 4, i32 8, i32 2, i32 36, i32 4, i32 16, i32 12, i32 9, i32 2, i32 16, i32 2, i32 16, i32 16, i32 4, i32 2, i32 12, i32 4, i32 8, i32 8, i32 20, i32 4, i32 24, i32 6, i32 6, i32 4, i32 8, i32 8, i32 16, i32 4, i32 4, i32 12, i32 24, i32 2, i32 16, i32 2, i32 16, i32 8, i32 4, i32 2, i32 30, i32 4, i32 16, i32 8, i32 16, i32 4, i32 8, i32 4, i32 12, i32 6, i32 8, i32 2, i32 40, i32 2, i32 8, i32 8, i32 6, i32 12, i32 12, i32 2, i32 8, i32 8, i32 16, i32 2, i32 12, i32 4, i32 4, i32 16, i32 12, i32 6, i32 16, i32 4, i32 12, i32 4, i32 8, i32 4, i32 48, i32 4, i32 8, i32 6, i32 12, i32 4, i32 24, i32 8, i32 10, i32 6, i32 4, i32 8, i32 12, i32 2, i32 8, i32 8, i32 16, i32 4, i32 16, i32 2, i32 12, i32 16, i32 12, i32 4, i32 28, i32 2, i32 8, i32 6, i32 12, i32 2, i32 8, i32 6, i32 16, i32 12, i32 4, i32 4, i32 36, i32 2, i32 4, i32 4, i32 10, i32 4, i32 24, i32 4, i32 12, i32 12, i32 16, i32 2, i32 16, i32 8, i32 4, i32 8, i32 6, i32 4, i32 12, i32 4, i32 36, i32 4, i32 4, i32 4, i32 12, i32 8, i32 4, i32 12, i32 8, i32 4, i32 32, i32 4, i32 12, i32 4, i32 8, i32 4, i32 40, i32 4, i32 6, i32 4, i32 12, i32 8, i32 8, i32 2, i32 16, i32 15, i32 8, i32 4, i32 24, i32 4, i32 8, i32 4, i32 20, i32 4, i32 12, i32 12, i32 6, i32 4, i32 4, i32 2, i32 32, i32 2, i32 16, i32 16, i32 12, i32 4, i32 8, i32 2, i32 10, i32 8, i32 12, i32 2, i32 18, i32 2, i32 8, i32 16, i32 16, i32 2, i32 16, i32 2, i32 12, i32 12, i32 8, i32 4, i32 24, i32 8, i32 4, i32 4, i32 12, i32 2, i32 40, i32 4, i32 8, i32 8, i32 4, i32 6, i32 24, i32 4, i32 8, i32 6, i32 20, i32 8, i32 8, i32 2, i32 18, i32 8, i32 4, i32 6, i32 24, i32 2, i32 8, i32 8, i32 6, i32 2, i32 16, i32 8, i32 14, i32 8, i32 16, i32 4, i32 36, i32 2, i32 4, i32 4, i32 16, i32 8, i32 12, i32 4, i32 6, i32 8, i32 8, i32 2, i32 40, i32 4, i32 4, i32 12, i32 6, i32 2, i32 8, i32 8, i32 32, i32 4, i32 4, i32 4, i32 24, i32 6, i32 8, i32 8, i32 12, i32 4, i32 16, i32 4, i32 6, i32 18, i32 8, i32 8, i32 16, i32 2, i32 8, i32 4, i32 24, i32 2, i32 24, i32 2, i32 10, i32 8, i32 12, i32 4, i32 12, i32 2, i32 16, i32 10, i32 8, i32 4, i32 16, i32 4, i32 6, i32 8, i32 4, i32 4, i32 48, i32 4, i32 8, i32 8, i32 12, i32 4, i32 12, i32 4, i32 16, i32 6, i32 8, i32 4, i32 24, i32 4, i32 4, i32 24, i32 15, i32 4, i32 16, i32 2, i32 18, i32 8, i32 12, i32 2, i32 16, i32 8, i32 8, i32 6, i32 6, i32 4, i32 16, i32 2, i32 12, i32 4, i32 4, i32 8, i32 36, i32 8, i32 8, i32 4, i32 24, i32 2, i32 8, i32 4, i32 6, i32 16, i32 4, i32 2, i32 30, i32 4, i32 16, i32 8, i32 6, i32 2, i32 24, i32 4, i32 8, i32 8, i32 4, i32 6, i32 24, i32 2, i32 8, i32 6, i32 28, i32 6, i32 8, i32 2, i32 12, i32 8, i32 16, i32 8, i32 28, i32 4, i32 4, i32 8, i32 6, i32 4, i32 16, i32 2, i32 20, i32 12, i32 8, i32 2, i32 12, i32 8, i32 8, i32 4, i32 16, i32 2, i32 36, i32 2, i32 24, i32 4, i32 4, i32 4, i32 24, i32 2, i32 8, i32 16, i32 12, i32 2, i32 8, i32 8, i32 8, i32 16, i32 8, i32 2, i32 18, i32 2, i32 8, i32 8, i32 10, i32 4, i32 16, i32 8, i32 12, i32 6, i32 4, i32 2, i32 48, i32 2, i32 8, i32 8, i32 6, i32 8, i32 16, i32 6, i32 18, i32 8, i32 16, i32 4, i32 12, i32 4, i32 8, i32 12, i32 16, i32 2, i32 8, i32 4, i32 18, i32 8, i32 8, i32 2, i32 30, i32 4, i32 4, i32 8, i32 12, i32 4, i32 16, i32 4, i32 8, i32 10, i32 4, i32 12, i32 24, i32 4, i32 8, i32 4, i32 24, i32 4, i32 24, i32 2, i32 6, i32 12, i32 4, i32 2, i32 32, i32 9, i32 8, i32 6, i32 6, i32 4, i32 16, i32 4, i32 20, i32 4, i32 4, i32 2, i32 48, i32 4, i32 4, i32 8, i32 8, i32 8, i32 8, i32 4, i32 6, i32 6, i32 24, i32 4, i32 28, i32 2, i32 8, i32 8, i32 6, i32 8, i32 12, i32 4, i32 16, i32 4, i32 8, i32 4, i32 24, i32 4, i32 8, i32 16, i32 10, i32 4, i32 16, i32 4, i32 6, i32 8, i32 8, i32 6, i32 24, i32 4, i32 12, i32 4, i32 24, i32 2, i32 8, i32 4, i32 24, i32 24, i32 8, i32 2, i32 12, i32 4, i32 8, i32 4, i32 16, i32 4, i32 20, i32 8, i32 6, i32 4, i32 4, i32 4, i32 40, i32 4, i32 4, i32 12, i32 12, i32 4, i32 32, i32 2, i32 8, i32 4, i32 8, i32 2, i32 18, i32 4, i32 8, i32 8, i32 16, i32 4, i32 16, i32 4, i32 24, i32 8, i32 4, i32 4, i32 16, i32 6, i32 8, i32 12, i32 12, i32 2, i32 24, i32 4, i32 20, i32 4, i32 8, i32 8, i32 12, i32 2, i32 4, i32 12, i32 16, i32 4, i32 16, i32 2, i32 6, i32 16, i32 4, i32 2, i32 48, i32 4, i32 18, i32 4, i32 12, i32 2, i32 8, i32 8, i32 8, i32 6, i32 8, i32 4, i32 24, i32 8, i32 8, i32 8, i32 10, i32 4, i32 12, i32 2, i32 12, i32 12, i32 8, i32 4, i32 32, i32 2, i32 4, i32 18, i32 18, i32 4, i32 8, i32 2, i32 28, i32 4, i32 4, i32 8, i32 27, i32 4, i32 8, i32 4, i32 8, i32 2, i32 32, i32 2, i32 6, i32 6, i32 8, i32 8, i32 20, i32 8, i32 4, i32 8, i32 18, i32 2, i32 16, i32 4, i32 16, i32 16, i32 8, i32 4, i32 12, i32 4, i32 16, i32 12, i32 12, i32 2, i32 8, i32 4, i32 12, i32 4, i32 16, i32 4, i32 48, i32 2, i32 4, i32 8, i32 6, i32 12, i32 8, i32 4, i32 10, i32 8, i32 8, i32 2, i32 24, i32 2, i32 4, i32 8, i32 16, i32 6, i32 24, i32 4, i32 12, i32 8, i32 8, i32 2, i32 24, i32 4, i32 8, i32 6, i32 12, i32 8, i32 24, i32 2, i32 8, i32 8, i32 8, i32 4, i32 30, i32 4, i32 4, i32 4, i32 40, i32 4, i32 16, i32 2, i32 12, i32 12, i32 4, i32 4, i32 16, i32 4, i32 8, i32 12, i32 6, i32 2, i32 24, i32 12, i32 12, i32 8, i32 4, i32 4, i32 24, i32 4, i32 8, i32 8, i32 8, i32 4, i32 8, i32 4, i32 24, i32 4, i32 8, i32 4, i32 30, i32 4, i32 8, i32 16, i32 6, i32 2, i32 8, i32 2, i32 24, i32 12, i32 8, i32 2, i32 24, i32 8, i32 8, i32 4, i32 14, i32 4, i32 32, i32 2, i32 6, i32 8, i32 8, i32 8, i32 32, i32 2, i32 4, i32 6, i32 12, i32 2, i32 16, i32 6, i32 10, i32 12, i32 8, i32 4, i32 18, i32 2, i32 16, i32 8, i32 16, i32 4, i32 8, i32 8, i32 6, i32 20, i32 4, i32 4, i32 48, i32 3, i32 4, i32 4, i32 12, i32 4, i32 12, i32 2, i32 16, i32 4, i32 12, i32 8, i32 12, i32 6, i32 8, i32 12, i32 20, i32 2, i32 16, i32 4, i32 12, i32 4, i32 8, i32 2, i32 32, i32 8, i32 8, i32 4, i32 6, i32 2, i32 32, i32 2, i32 24, i32 12, i32 4, i32 6, i32 12, i32 2, i32 8, i32 16, i32 16, i32 4, i32 12, i32 4, i32 6, i32 8, i32 8, i32 2, i32 20, i32 4, i32 16, i32 8, i32 18, i32 8, i32 8, i32 4, i32 8, i32 4, i32 8, i32 2, i32 54, i32 2, i32 8, i32 8, i32 12, i32 8, i32 8, i32 8, i32 12, i32 6, i32 8, i32 2, i32 16, i32 4, i32 16, i32 8, i32 6, i32 2, i32 24, i32 4, i32 20, i32 12, i32 8, i32 2, i32 24, i32 12, i32 4, i32 12, i32 16, i32 2, i32 16, i32 4, i32 6, i32 4, i32 4, i32 8, i32 42, i32 2, i32 4, i32 4, i32 12, i32 4, i32 16, i32 2, i32 16, i32 16, i32 8, i32 4, i32 18, i32 4, i32 12, i32 8, i32 10, i32 2, i32 12, i32 8, i32 12, i32 8, i32 12, i32 2, i32 32, i32 2, i32 4, i32 12, i32 12, i32 8, i32 8, i32 2, i32 12, i32 8, i32 24, i32 4, i32 24, i32 2, i32 4, i32 16, i32 8, i32 4, i32 8, i32 2, i32 24, i32 6, i32 4, i32 4, i32 40, i32 4, i32 8, i32 4, i32 6, i32 2, i32 24, i32 8, i32 16, i32 4, i32 8, i32 4, i32 24, i32 2, i32 8, i32 10, i32 27, i32 4, i32 16, i32 4, i32 6, i32 16, i32 4, i32 4, i32 24, i32 8, i32 8, i32 4, i32 12, i32 6, i32 8, i32 4, i32 10, i32 12, i32 4, i32 6, i32 24, i32 2, i32 12, i32 4, i32 16, i32 6, i32 32, i32 2, i32 6, i32 4, i32 8, i32 4, i32 24, i32 4, i32 4, i32 24, i32 6, i32 4, i32 16, i32 4, i32 32, i32 8, i32 4, i32 4, i32 18, i32 4, i32 8, i32 8, i32 20, i32 2, i32 24, i32 2, i32 6, i32 8, i32 8, i32 4, i32 16, i32 4, i32 4, i32 4, i32 24, i32 8, i32 12, i32 4, i32 14, i32 8, i32 8, i32 4, i32 36, i32 2, i32 8, i32 6, i32 8, i32 2, i32 16, i32 12, i32 6, i32 8, i32 8, i32 8, i32 50, i32 2, i32 8, i32 4, i32 6, i32 4, i32 16, i32 4, i32 8, i32 12, i32 16, i32 2, i32 12, i32 4, i32 8, i32 8, i32 24, i32 4, i32 18, i32 4, i32 24, i32 8, i32 4, i32 4, i32 16, i32 4, i32 4, i32 8, i32 6, i32 4, i32 32, i32 4, i32 20, i32 8, i32 4, i32 4, i32 18, i32 8, i32 4, i32 8, i32 16, i32 2, i32 8, i32 4, i32 12, i32 18, i32 8, i32 4, i32 32, i32 2, i32 8, i32 8, i32 12, i32 4, i32 24, i32 4, i32 16, i32 4, i32 8, i32 4, i32 24, i32 4, i32 4, i32 6, i32 10, i32 16, i32 8, i32 2, i32 6, i32 8, i32 12, i32 2, i32 48, i32 2, i32 8, i32 16, i32 12, i32 4, i32 8, i32 4, i32 24, i32 9, i32 8, i32 2, i32 12, i32 8, i32 12, i32 8, i32 8, i32 2, i32 24, i32 2, i32 12, i32 8, i32 8, i32 6, i32 20, i32 2, i32 16, i32 12, i32 24, i32 2, i32 8, i32 4, i32 8, i32 8, i32 8, i32 4, i32 24, i32 4, i32 8, i32 8, i32 14, i32 4, i32 16, i32 4, i32 12, i32 6, i32 4, i32 2, i32 48, i32 8, i32 4, i32 8, i32 12, i32 4, i32 12, i32 2, i32 20, i32 4, i32 8, i32 4, i32 24, i32 4, i32 4, i32 24, i32 8, i32 4, i32 8, i32 2, i32 12, i32 4, i32 16, i32 4, i32 36, i32 8, i32 4, i32 6, i32 6, i32 4, i32 32, i32 4, i32 8, i32 12, i32 8, i32 4, i32 24, i32 2, i32 4, i32 4, i32 20, i32 4, i32 20, i32 8, i32 12, i32 8, i32 4, i32 6, i32 16, i32 4, i32 24, i32 6, i32 6, i32 2, i32 8, i32 8, i32 20, i32 8, i32 4, i32 2, i32 36, i32 2, i32 4, i32 4, i32 24, i32 8, i32 16, i32 4, i32 6, i32 16, i32 16, i32 4, i32 20, i32 2, i32 8, i32 12, i32 6, i32 4, i32 24, i32 2, i32 16, i32 8, i32 8, i32 4, i32 12, i32 8, i32 4, i32 6, i32 24, i32 2, i32 16, i32 2, i32 12, i32 8, i32 4, i32 8, i32 32, i32 4, i32 8, i32 16, i32 18, i32 2, i32 8, i32 2, i32 10, i32 12, i32 8, i32 4, i32 24, i32 2, i32 16, i32 4, i32 8, i32 6, i32 12, i32 8, i32 12, i32 4, i32 4, i32 2, i32 56, i32 8, i32 4, i32 10, i32 9, i32 6, i32 16, i32 6, i32 12, i32 4, i32 8, i32 4, i32 36, i32 2, i32 16, i32 8, i32 10, i32 2, i32 8, i32 4, i32 12, i32 12, i32 4, i32 4, i32 16, i32 8, i32 4, i32 8, i32 12, i32 4, i32 32, i32 4, i32 12, i32 4, i32 8, i32 8, i32 12, i32 4, i32 8, i32 6, i32 24, i32 2, i32 24, i32 2, i32 12, i32 16, i32 8, i32 4, i32 30, i32 4, i32 8, i32 8, i32 6, i32 4, i32 8, i32 6, i32 24, i32 8, i32 4, i32 2, i32 24, i32 2, i32 4, i32 16, i32 16, i32 8, i32 24, i32 4, i32 6, i32 8, i32 16, i32 2, i32 16, i32 2, i32 8, i32 12, i32 6, i32 4, i32 16, i32 4, i32 30, i32 4, i32 8, i32 2, i32 36, i32 4, i32 8, i32 4, i32 16, i32 4, i32 16, i32 6, i32 12, i32 6, i32 4, i32 8, i32 24, i32 4, i32 8, i32 4, i32 24, i32 4, i32 12, i32 2, i32 8, i32 24, i32 4, i32 2, i32 12, i32 2, i32 8, i32 16, i32 20, i32 2, i32 16, i32 4, i32 6, i32 8, i32 8, i32 4, i32 48, i32 2, i32 8, i32 4, i32 12, i32 6, i32 16, i32 4, i32 14, i32 6, i32 12, i32 8, i32 12, i32 8, i32 8, i32 8, i32 8, i32 2, i32 16, i32 4, i32 24, i32 4, i32 8, i32 2, i32 40, i32 4, i32 4, i32 12, i32 12, i32 2, i32 16, i32 2, i32 8, i32 8, i32 8, i32 10, i32 18, i32 6, i32 8, i32 4, i32 24, i32 4, i32 16, i32 2, i32 6, i32 20, i32 8, i32 4, i32 32, i32 3, i32 16, i32 4, i32 6, i32 4, i32 12, i32 8, i32 10, i32 12, i32 4, i32 2, i32 36, i32 4, i32 16, i32 12, i32 8, i32 4, i32 8, i32 2, i32 12, i32 12, i32 8, i32 2, i32 36, i32 4, i32 4, i32 8, i32 24, i32 2, i32 8, i32 8, i32 16, i32 6, i32 4, i32 8, i32 12, i32 6, i32 4, i32 4, i32 10, i32 6, i32 48, i32 4, i32 6, i32 4, i32 4, i32 8, i32 24, i32 4, i32 4, i32 8, i32 12, i32 4, i32 16, i32 4, i32 24, i32 8, i32 8, i32 2, i32 18, i32 2, i32 12, i32 8, i32 16, i32 4, i32 16, i32 8, i32 12, i32 6, i32 12, i32 2, i32 40, i32 2, i32 6, i32 8, i32 6, i32 8, i32 20, i32 2, i32 16, i32 8, i32 16, i32 2, i32 24, i32 4, i32 8, i32 18, i32 14, i32 2, i32 8, i32 4, i32 12, i32 8, i32 4, i32 2, i32 24, i32 8, i32 8, i32 8, i32 6, i32 4, i32 16, i32 2, i32 20, i32 16, i32 8, i32 4, i32 24, i32 2, i32 4, i32 4, i32 32, i32 2, i32 12, i32 4, i32 12, i32 8, i32 8, i32 12, i32 24, i32 4, i32 8, i32 12, i32 6, i32 2, i32 16, i32 8, i32 8, i32 4, i32 12, i32 2, i32 48, i32 8, i32 4, i32 4, i32 10, i32 6, i32 8, i32 2, i32 12, i32 12, i32 16, i32 4, i32 16, i32 4, i32 4, i32 16, i32 6, i32 4, i32 24, i32 2, i32 32, i32 4, i32 8, i32 2, i32 12, i32 4, i32 8, i32 12, i32 8, i32 8, i32 24, i32 4, i32 12, i32 4, i32 4, i32 8, i32 45, i32 2, i32 4, i32 8, i32 12, i32 4, i32 16, i32 4, i32 8, i32 12, i32 4, i32 4, i32 24, i32 2, i32 16, i32 4, i32 24, i32 4, i32 16, i32 6, i32 12, i32 8, i32 4, i32 2, i32 32, i32 4, i32 4, i32 6, i32 24, i32 8, i32 8, i32 4, i32 10, i32 8, i32 8, i32 4, i32 18, i32 4, i32 4, i32 16, i32 8, i32 4, i32 24, i32 4, i32 18, i32 8, i32 8, i32 2, i32 28, i32 12, i32 16, i32 8, i32 6, i32 2, i32 24, i32 4, i32 16, i32 4, i32 4, i32 4, i32 12, i32 4, i32 4, i32 12, i32 20, i32 2, i32 8, i32 4, i32 12, i32 16, i32 8, i32 2, i32 40, i32 2, i32 16, i32 4, i32 6, i32 4, i32 16, i32 4, i32 12, i32 12, i32 8, i32 6, i32 48, i32 4, i32 4, i32 4, i32 16, i32 4, i32 12, i32 4, i32 6, i32 4, i32 24, i32 2, i32 20, i32 4, i32 12, i32 16, i32 6, i32 4, i32 8, i32 2, i32 16, i32 16, i32 4, i32 8, i32 18, i32 4, i32 4, i32 4, i32 22, i32 4, i32 16, i32 4, i32 12, i32 6, i32 8, i32 12, i32 32, i32 2, i32 8, i32 4, i32 12, i32 4, i32 32, i32 4, i32 10, i32 8, i32 4, i32 2, i32 12, i32 8, i32 8, i32 12, i32 16, i32 2, i32 16, i32 4, i32 12, i32 4, i32 8, i32 4, i32 54, i32 4, i32 8, i32 10, i32 6, i32 8, i32 8, i32 2, i32 16, i32 10, i32 16, i32 2, i32 12, i32 2, i32 4, i32 16, i32 20, i32 4, i32 12, i32 2, i32 18, i32 8, i32 8, i32 4, i32 32, i32 9, i32 4, i32 12, i32 12, i32 2, i32 16, i32 4, i32 14, i32 4, i32 4, i32 4, i32 24, i32 2, i32 16, i32 8, i32 16, i32 4, i32 16, i32 2, i32 6, i32 24, i32 4, i32 2, i32 20, i32 4, i32 16, i32 4, i32 18, i32 2, i32 24, i32 4, i32 8, i32 8, i32 8, i32 8, i32 36, i32 4, i32 4, i32 8, i32 12, i32 4, i32 16, i32 6, i32 12, i32 4, i32 8, i32 4, i32 24, i32 4, i32 4, i32 12, i32 12, i32 4, i32 8, i32 4, i32 40, i32 6, i32 8, i32 2, i32 12, i32 8, i32 4, i32 8, i32 8, i32 4, i32 28, i32 4, i32 6, i32 16, i32 8, i32 4, i32 32, i32 2, i32 8, i32 6, i32 18, i32 6, i32 8, i32 4, i32 16, i32 8, i32 8, i32 2, i32 36, i32 2, i32 16, i32 4, i32 10, i32 4, i32 16, i32 16, i32 12, i32 8, i32 4, i32 4, i32 32, i32 2, i32 8, i32 4, i32 6, i32 6, i32 24, i32 4, i32 12, i32 8, i32 8, i32 2, i32 24, i32 2, i32 8, i32 12, i32 16, i32 8, i32 8, i32 4, i32 12, i32 4, i32 4, i32 4, i32 40, i32 8, i32 4, i32 8, i32 12, i32 2, i32 36, i32 2, i32 8, i32 12, i32 4, i32 4, i32 12, i32 4, i32 8, i32 8, i32 28, i32 4, i32 12, i32 4, i32 12, i32 8, i32 8, i32 4, i32 16, i32 2, i32 16, i32 20, i32 12, i32 4, i32 8, i32 8, i32 10, i32 4, i32 16, i32 4, i32 36, i32 6, i32 4, i32 8, i32 16, i32 8, i32 8, i32 4, i32 6, i32 6, i32 8, i32 4, i32 48, i32 2, i32 4, i32 16, i32 9, i32 4, i32 16, i32 6, i32 24, i32 4, i32 4, i32 4, i32 12, i32 4, i32 12, i32 6, i32 10, i32 4, i32 32, i32 2, i32 12, i32 8, i32 8, i32 4, i32 24, i32 2, i32 4, i32 4, i32 24, i32 4, i32 8, i32 4, i32 18, i32 24, i32 8, i32 4, i32 12, i32 8, i32 8, i32 4, i32 8, i32 2, i32 24, i32 4, i32 18, i32 8, i32 4, i32 4, i32 40, i32 4, i32 6, i32 6, i32 6, i32 4, i32 16, i32 4, i32 24, i32 8, i32 12, i32 2, i32 30, i32 4, i32 4, i32 16, i32 12, i32 2, i32 16, i32 2, i32 12, i32 6, i32 16, i32 4, i32 16, i32 4, i32 4, i32 8, i32 6, i32 8, i32 24, i32 4, i32 10, i32 8, i32 8, i32 12, i32 24, i32 2, i32 4, i32 8, i32 32, i32 2, i32 16, i32 4, i32 6, i32 8, i32 8, i32 2, i32 42, i32 2, i32 16, i32 8, i32 6, i32 4, i32 8, i32 4, i32 8, i32 18, i32 8, i32 2, i32 30, i32 4, i32 12, i32 8, i32 20, i32 8, i32 16, i32 2, i32 6, i32 4, i32 8, i32 8, i32 16, i32 4, i32 12, i32 12, i32 6, i32 2, i32 16, i32 4, i32 24, i32 8, i32 4, i32 2, i32 36, i32 12, i32 8, i32 8, i32 8, i32 2, i32 16, i32 4, i32 12, i32 12, i32 4, i32 8, i32 20, i32 2, i32 4, i32 8, i32 24, i32 2, i32 12, i32 4, i32 16, i32 8, i32 16, i32 2, i32 24, i32 2, i32 12, i32 6, i32 16, i32 8, i32 8, i32 4, i32 6, i32 8, i32 4, i32 2, i32 64, i32 2, i32 8, i32 4, i32 12, i32 8, i32 16, i32 8, i32 20, i32 9, i32 8, i32 4, i32 12, i32 2, i32 8, i32 12, i32 8, i32 2, i32 12, i32 8, i32 12, i32 12, i32 8, i32 2, i32 24, i32 8, i32 4, i32 8, i32 12, i32 2, i32 32, i32 2, i32 16, i32 4, i32 4, i32 12, i32 18, i32 4, i32 8, i32 8, i32 30, i32 4, i32 16, i32 2, i32 6, i32 18, i32 4, i32 2, i32 16, i32 4, i32 8, i32 8, i32 12, i32 4, i32 20, i32 4, i32 28, i32 4, i32 8, i32 4, i32 24, i32 2, i32 8, i32 18, i32 8, i32 8, i32 16, i32 4, i32 6, i32 4, i32 16, i32 4, i32 30, i32 4, i32 8, i32 8, i32 12, i32 4, i32 16, i32 2, i32 16, i32 8, i32 4, i32 2, i32 36, i32 8, i32 4, i32 4, i32 12, i32 2, i32 36, i32 4, i32 6, i32 4, i32 8, i32 4, i32 32, i32 8, i32 8, i32 12, i32 12, i32 4, i32 8, i32 4, i32 10, i32 16, i32 4, i32 8, i32 24, i32 2, i32 16, i32 4, i32 16, i32 2, i32 8, i32 6, i32 12, i32 6, i32 8, i32 4, i32 40, i32 2, i32 8, i32 8, i32 12, i32 8, i32 24, i32 2, i32 12, i32 8, i32 8, i32 2, i32 12, i32 6, i32 4, i32 20, i32 20, i32 4, i32 8, i32 2, i32 36, i32 8, i32 4, i32 2, i32 24, i32 8, i32 4, i32 8, i32 12, i32 4, i32 16, i32 4, i32 12, i32 6, i32 16, i32 4, i32 12, i32 2, i32 8, i32 8, i32 16, i32 4, i32 32, i32 2, i32 6, i32 12, i32 4, i32 2, i32 40, i32 4, i32 8, i32 6, i32 6, i32 8, i32 8, i32 16, i32 8, i32 4, i32 8, i32 4, i32 36, i32 2, i32 12, i32 8, i32 21, i32 4, i32 8, i32 4, i32 12, i32 16, i32 16, i32 4, i32 32, i32 2, i32 4, i32 16, i32 12, i32 2, i32 12, i32 2, i32 20, i32 8, i32 4, i32 4, i32 12, i32 4, i32 8, i32 6, i32 8, i32 4, i32 32, i32 4, i32 12, i32 4, i32 12, i32 6, i32 36, i32 8, i32 4, i32 4, i32 12, i32 4, i32 8, i32 4, i32 16, i32 12, i32 8, i32 4, i32 24, i32 2, i32 16, i32 12, i32 10, i32 2, i32 12, i32 4, i32 6, i32 8, i32 8, i32 4, i32 48, i32 4, i32 8, i32 12, i32 6, i32 8, i32 8, i32 4, i32 16, i32 8, i32 16, i32 4, i32 36, i32 4, i32 4, i32 8, i32 8, i32 2, i32 8, i32 4, i32 24, i32 12, i32 4, i32 2, i32 20, i32 6, i32 16, i32 4, i32 12, i32 2, i32 32, i32 4, i32 16, i32 8, i32 4, i32 4, i32 12, i32 4, i32 4, i32 12, i32 36, i32 2, i32 8, i32 8, i32 12, i32 8, i32 4, i32 8, i32 24, i32 4, i32 12, i32 4, i32 12, i32 2, i32 32, i32 4, i32 10, i32 10, i32 4, i32 4, i32 24, i32 4, i32 4, i32 4, i32 8, i32 12, i32 24, i32 2, i32 12, i32 8, i32 8, i32 4, i32 28, i32 2, i32 8, i32 24, i32 12, i32 2, i32 16, i32 2, i32 16, i32 8, i32 8, i32 2, i32 24, i32 8, i32 4, i32 8, i32 20, i32 8, i32 16, i32 4, i32 6, i32 6, i32 4, i32 4, i32 32, i32 4, i32 8, i32 4, i32 18, i32 2, i32 12, i32 4, i32 24, i32 16, i32 8, i32 2, i32 12, i32 4, i32 16, i32 8, i32 16, i32 4, i32 8, i32 4, i32 6, i32 16, i32 8, i32 2, i32 60, i32 3, i32 8, i32 8, i32 12, i32 6, i32 8, i32 2, i32 8, i32 6, i32 16, i32 8, i32 12, i32 2, i32 4, i32 12, i32 18, i32 2, i32 30, i32 4, i32 12, i32 4, i32 12, i32 6, i32 16, i32 8, i32 8, i32 6, i32 6, i32 2, i32 24, i32 2, i32 20, i32 8, i32 8, i32 8, i32 36, i32 4, i32 8, i32 8, i32 16, i32 4, i32 8, i32 2, i32 12, i32 16, i32 8, i32 4, i32 24, i32 4, i32 8, i32 4, i32 6, i32 8, i32 12, i32 12, i32 8, i32 4, i32 4, i32 4, i32 48, i32 4, i32 8, i32 6, i32 10, i32 4, i32 16, i32 6, i32 6, i32 4, i32 16, i32 4, i32 32, i32 2, i32 8, i32 16, i32 6, i32 4, i32 16, i32 4, i32 28, i32 12, i32 4, i32 4, i32 24, i32 4, i32 4, i32 8, i32 32, i32 2, i32 24, i32 2, i32 6, i32 4, i32 4, i32 8, i32 20, i32 2, i32 8, i32 14, i32 12, i32 4, i32 16, i32 4, i32 16, i32 12, i32 4, i32 4, i32 18, i32 8, i32 16, i32 4, i32 12, i32 4, i32 16, i32 4, i32 18, i32 12, i32 4, i32 2, i32 32, i32 8, i32 4, i32 8, i32 6, i32 4, i32 16, i32 4, i32 10, i32 4, i32 24, i32 4, i32 24, i32 2, i32 4, i32 12, i32 16, i32 4, i32 16, i32 2, i32 24, i32 4, i32 8, i32 4, i32 48, i32 4, i32 8, i32 4, i32 6, i32 2, i32 16, i32 4, i32 8, i32 16, i32 8, i32 12, i32 12, i32 4, i32 8, i32 4, i32 20, i32 2, i32 12, i32 4, i32 12, i32 24, i32 8, i32 2, i32 16, i32 2, i32 8, i32 12, i32 18, i32 2, i32 16, i32 4, i32 24, i32 4, i32 4, i32 8, i32 45, i32 2, i32 4, i32 8, i32 8, i32 4, i32 16, i32 6, i32 6, i32 12, i32 8, i32 2, i32 30, i32 8, i32 4, i32 8, i32 6, i32 2, i32 24, i32 4, i32 32, i32 4, i32 8, i32 2, i32 12, i32 10, i32 8, i32 16, i32 14, i32 4, i32 16, i32 4, i32 12, i32 4, i32 12, i32 4, i32 24, i32 4, i32 8, i32 4, i32 24, i32 4, i32 16, i32 4, i32 10, i32 12, i32 4, i32 2, i32 24, i32 4, i32 12, i32 16, i32 8, i32 4, i32 16, i32 8, i32 6, i32 4, i32 4, i32 4, i32 48, i32 2, i32 16, i32 6, i32 12, i32 8, i32 8, i32 2, i32 8, i32 8, i32 16, i32 2, i32 18, i32 4, i32 8, i32 12, i32 20, i32 8, i32 16, i32 2, i32 12, i32 10, i32 4, i32 6, i32 32, i32 4, i32 4, i32 4, i32 12, i32 4, i32 48, i32 2, i32 14, i32 4, i32 8, i32 8, i32 12, i32 4, i32 4, i32 6, i32 24, i32 4, i32 8, i32 4, i32 12, i32 8, i32 8, i32 4, i32 40, i32 2, i32 8, i32 16, i32 6, i32 4, i32 12, i32 8, i32 16, i32 12, i32 8, i32 2, i32 24, i32 2, i32 4, i32 4, i32 12, i32 12, i32 12, i32 4, i32 18, i32 8, i32 8, i32 2, i32 32, i32 2, i32 8, i32 16, i32 12, i32 2, i32 8, i32 8, i32 20, i32 8, i32 8, i32 2, i32 18, i32 8, i32 16, i32 4, i32 8, i32 4, i32 32, i32 4, i32 6, i32 12, i32 4, i32 8, i32 28, i32 4, i32 4, i32 4, i32 24, i32 4, i32 24, i32 2, i32 8, i32 16, i32 4, i32 4, i32 24, i32 2, i32 8, i32 6, i32 20, i32 2, i32 16, i32 6, i32 6, i32 8, i32 4, i32 4, i32 48, i32 9, i32 8, i32 8, i32 12, i32 4, i32 8, i32 2, i32 24, i32 8, i32 8, i32 2, i32 12, i32 2, i32 16, i32 16, i32 16, i32 2, i32 12, i32 4, i32 18, i32 4, i32 8, i32 6, i32 20, i32 8, i32 4, i32 12, i32 12, i32 4, i32 16, i32 2, i32 8, i32 8, i32 4, i32 4, i32 48, i32 2, i32 4, i32 8, i32 32, i32 4, i32 16, i32 8, i32 6, i32 18, i32 8, i32 4, i32 16, i32 2, i32 24, i32 4, i32 6, i32 4, i32 12, i32 4, i32 10, i32 8, i32 8, i32 4, i32 24, i32 4, i32 8, i32 10, i32 16, i32 4, i32 16, i32 4, i32 6, i32 12, i32 12, i32 4, i32 36, i32 2, i32 4, i32 8, i32 6, i32 4, i32 16, i32 4, i32 32, i32 6, i32 8, i32 2, i32 24, i32 8, i32 8, i32 4, i32 10, i32 2, i32 32, i32 4, i32 24, i32 4, i32 8, i32 8, i32 16, i32 2, i32 8, i32 18, i32 12, i32 6, i32 16, i32 4, i32 14, i32 16, i32 8, i32 2, i32 18, i32 2, i32 8, i32 4, i32 8, i32 8, i32 8, i32 8, i32 6, i32 8, i32 16, i32 4, i32 60, i32 4, i32 4, i32 4, i32 12, i32 6, i32 12, i32 4, i32 8, i32 4, i32 12, i32 4, i32 12, i32 4, i32 8, i32 24, i32 12, i32 4, i32 16, i32 2, i32 12, i32 8, i32 4, i32 2, i32 40, i32 6, i32 8, i32 6, i32 18, i32 2, i32 16, i32 2, i32 20, i32 6, i32 4, i32 8, i32 24, i32 8, i32 4, i32 8, i32 16, i32 4, i32 24, i32 2, i32 6, i32 8, i32 8, i32 2, i32 36, i32 8, i32 18, i32 8, i32 6, i32 4, i32 8, i32 8, i32 16, i32 4, i32 4, i32 4, i32 36, i32 2, i32 4, i32 16, i32 15, i32 4, i32 16, i32 2, i32 12, i32 6, i32 24, i32 4, i32 16, i32 4, i32 8, i32 12, i32 12, i32 6, i32 16, i32 4, i32 24, i32 8, i32 4, i32 4, i32 24, i32 4, i32 4, i32 12, i32 8, i32 4, i32 16, i32 4, i32 12, i32 8, i32 8, i32 4, i32 30, i32 4, i32 8, i32 4, i32 24, i32 2, i32 16, i32 4, i32 8, i32 24, i32 4, i32 4, i32 12, i32 4, i32 16, i32 4, i32 28, i32 2, i32 24, i32 8, i32 6, i32 8, i32 4, i32 4, i32 32, i32 2, i32 4, i32 6, i32 6, i32 12, i32 24, i32 2, i32 20, i32 4, i32 8, i32 4, i32 24, i32 8, i32 8, i32 8, i32 16, i32 2, i32 8, i32 2, i32 24, i32 12, i32 4, i32 2, i32 24, i32 4, i32 4, i32 16, i32 6, i32 4, i32 36, i32 4, i32 8, i32 4, i32 16, i32 8, i32 24, i32 4, i32 8, i32 8, i32 20, i32 4, i32 8, i32 2, i32 6, i32 8, i32 4, i32 4, i32 48, i32 8, i32 8, i32 4, i32 6, i32 2, i32 8, i32 12, i32 16, i32 6, i32 4, i32 4, i32 48, i32 2, i32 8, i32 4, i32 16, i32 8, i32 20, i32 4, i32 12, i32 8, i32 8, i32 6, i32 20, i32 4, i32 4, i32 12, i32 12, i32 2, i32 8, i32 2, i32 24, i32 8, i32 16, i32 4, i32 18, i32 4, i32 8, i32 8, i32 12, i32 2, i32 32, i32 4, i32 6, i32 16, i32 8, i32 4, i32 16, i32 4, i32 8, i32 12, i32 12, i32 4, i32 12, i32 2, i32 30, i32 16, i32 8, i32 2, i32 12, i32 2, i32 8, i32 12, i32 16, i32 4, i32 8, i32 8, i32 12, i32 4, i32 8, i32 4, i32 56, i32 2, i32 8, i32 8, i32 6, i32 16, i32 16, i32 2, i32 16, i32 9, i32 12, i32 4, i32 24, i32 4, i32 4, i32 8, i32 10, i32 4, i32 24, i32 4, i32 12, i32 4, i32 8, i32 2, i32 24, i32 4, i32 8, i32 10, i32 12, i32 2, i32 24, i32 8, i32 12, i32 12, i32 4, i32 6, i32 18, i32 2, i32 4, i32 8, i32 32, i32 2, i32 8, i32 4, i32 12, i32 12, i32 8, i32 8, i32 20, i32 2, i32 16, i32 4, i32 12, i32 2, i32 32, i32 8, i32 8, i32 8, i32 4, i32 2, i32 36, i32 8, i32 8, i32 6, i32 20, i32 4, i32 8, i32 2, i32 12, i32 4, i32 16, i32 4, i32 36, i32 2, i32 4, i32 16, i32 6, i32 4, i32 8, i32 2, i32 20, i32 16, i32 12, i32 8, i32 12, i32 6, i32 4, i32 4, i32 8, i32 8, i32 24, i32 2, i32 12, i32 8, i32 8, i32 4, i32 48, i32 2, i32 8, i32 6, i32 24, i32 2, i32 16, i32 4, i32 8, i32 16, i32 4, i32 2, i32 24, i32 4, i32 20, i32 4, i32 10, i32 2, i32 8, i32 8, i32 12, i32 12, i32 8, i32 4, i32 32, i32 2, i32 8, i32 8, i32 12, i32 4, i32 12, i32 4, i32 14, i32 8, i32 8, i32 6, i32 24, i32 4, i32 8, i32 24, i32 8, i32 4, i32 32, i32 2, i32 12, i32 4, i32 4, i32 2, i32 30, i32 8, i32 8, i32 8, i32 12, i32 8, i32 16, i32 4, i32 16, i32 6, i32 4, i32 4, i32 12, i32 4, i32 8, i32 8, i32 36, i32 4, i32 16, i32 2, i32 12, i32 8, i32 16, i32 2, i32 16, i32 4, i32 8, i32 12, i32 6, i32 4, i32 16, i32 8, i32 20, i32 4, i32 4, i32 2, i32 54, i32 2, i32 8, i32 8, i32 8, i32 6, i32 8, i32 8, i32 6, i32 10, i32 8, i32 2, i32 32, i32 6, i32 8, i32 16, i32 9, i32 2, i32 12, i32 2, i32 32, i32 8, i32 4, i32 4, i32 24, i32 8, i32 4, i32 6, i32 20, i32 2, i32 24, i32 4, i32 6, i32 8, i32 8, i32 16, i32 32, i32 4, i32 8, i32 4, i32 12, i32 2, i32 16, i32 2, i32 12, i32 12, i32 16, i32 2, i32 12, i32 6, i32 8, i32 4, i32 8, i32 4, i32 24, i32 8, i32 12, i32 8, i32 8, i32 4, i32 40, i32 4, i32 4, i32 16, i32 6, i32 4, i32 8, i32 2, i32 16, i32 4, i32 16, i32 4, i32 36, i32 2, i32 4, i32 8, i32 14, i32 8, i32 8, i32 4, i32 18, i32 12, i32 4, i32 4, i32 32, i32 8, i32 8, i32 4, i32 12, i32 4, i32 40, i32 8, i32 10, i32 4, i32 4, i32 4, i32 12, i32 4, i32 16, i32 6, i32 16, i32 4, i32 8, i32 2, i32 12, i32 24, i32 4, i32 4, i32 36, i32 2, i32 16, i32 8, i32 24, i32 2, i32 8, i32 4, i32 8, i32 8, i32 8, i32 4, i32 24, i32 2, i32 8, i32 8, i32 20, i32 4, i32 24, i32 4, i32 6, i32 8, i32 12, i32 2, i32 16, i32 4, i32 12, i32 12, i32 6, i32 6, i32 8, i32 6, i32 36, i32 8, i32 4, i32 2, i32 24, i32 8, i32 4, i32 12, i32 16, i32 2, i32 32, i32 2, i32 6, i32 6, i32 8, i32 6, i32 40, i32 4, i32 6, i32 8, i32 12, i32 4, i32 12, i32 4, i32 8, i32 8, i32 4, i32 8, i32 24, i32 4, i32 16, i32 12, i32 12, i32 6, i32 8, i32 8, i32 12, i32 4, i32 8, i32 2, i32 48, i32 2, i32 8, i32 4, i32 6, i32 4, i32 16, i32 2, i32 10, i32 24, i32 16, i32 2, i32 12, i32 2, i32 4, i32 8, i32 24, i32 4, i32 16, i32 4, i32 24, i32 8, i32 8, i32 4, i32 28, i32 9, i32 4, i32 12, i32 12, i32 2, i32 32, i32 4, i32 8, i32 4, i32 4, i32 8, i32 18, i32 4, i32 4, i32 8, i32 20, i32 2, i32 16, i32 2, i32 24, i32 16, i32 4, i32 4, i32 32, i32 2, i32 12, i32 8, i32 12, i32 4, i32 12, i32 4, i32 12, i32 4, i32 8, i32 2, i32 24, i32 8, i32 8, i32 12, i32 16, i32 12, i32 8, i32 2, i32 6, i32 4, i32 8, i32 4, i32 50, i32 4, i32 8, i32 18, i32 6, i32 4, i32 16, i32 4, i32 16, i32 6, i32 8, i32 4, i32 12, i32 8, i32 16, i32 8, i32 16, i32 4, i32 24, i32 2, i32 6, i32 8, i32 4, i32 8, i32 16, i32 4, i32 4, i32 8, i32 36, i32 4, i32 16, i32 2, i32 10, i32 8, i32 8, i32 4, i32 36, i32 2, i32 8, i32 4, i32 16, i32 4, i32 24, i32 4, i32 12, i32 6, i32 8, i32 4, i32 48, i32 4, i32 4, i32 4, i32 6, i32 8, i32 24, i32 2, i32 16, i32 8, i32 16, i32 4, i32 12, i32 2, i32 4, i32 24, i32 10, i32 2, i32 8, i32 8, i32 12, i32 8, i32 8, i32 4, i32 24, i32 8, i32 8, i32 4, i32 6, i32 4, i32 24, i32 2, i32 28, i32 10, i32 8, i32 4, i32 24, i32 2, i32 8, i32 8, i32 16, i32 2, i32 12, i32 12, i32 12, i32 16, i32 4, i32 4, i32 20, i32 4, i32 16, i32 6, i32 6, i32 2, i32 16, i32 6, i32 16, i32 16, i32 8, i32 4, i32 48, i32 2, i32 4, i32 4, i32 24, i32 8, i32 8, i32 2, i32 6, i32 6, i32 8, i32 8, i32 16, i32 4, i32 4, i32 8, i32 18, i32 4, i32 24, i32 2, i32 30, i32 4, i32 8, i32 2, i32 24, i32 8, i32 4, i32 16, i32 8, i32 2, i32 16, i32 4, i32 18, i32 8, i32 8, i32 8, i32 33, i32 4, i32 8, i32 8, i32 12, i32 2, i32 16, i32 4, i32 8, i32 18, i32 8, i32 2, i32 12, i32 4, i32 16, i32 8, i32 10, i32 4, i32 24, i32 4, i32 6, i32 4, i32 8, i32 2, i32 64, i32 2, i32 4, i32 12, i32 6, i32 6, i32 16, i32 4, i32 18, i32 4, i32 16, i32 6, i32 18, i32 4, i32 8, i32 8, i32 16, i32 2, i32 8, i32 4, i32 12, i32 16, i32 8, i32 4, i32 20, i32 8, i32 8, i32 4, i32 12, i32 8, i32 24, i32 4, i32 16, i32 8, i32 4, i32 12, i32 12, i32 2, i32 4, i32 6, i32 28, i32 2, i32 32, i32 2, i32 12, i32 8, i32 4, i32 4, i32 32, i32 4, i32 8, i32 8, i32 12, i32 2, i32 8, i32 12, i32 20, i32 6, i32 4, i32 4, i32 36, i32 4, i32 4, i32 8, i32 8, i32 4, i32 24, i32 4, i32 12, i32 8, i32 24, i32 2, i32 24, i32 4, i32 4, i32 20, i32 12, i32 8, i32 8, i32 2, i32 16, i32 8, i32 8, i32 2, i32 36, i32 6, i32 4, i32 4, i32 20, i32 4, i32 16, i32 8, i32 6, i32 12, i32 8, i32 4, i32 16, i32 2, i32 16, i32 8, i32 12, i32 2, i32 16, i32 2, i32 16, i32 16, i32 4, i32 4, i32 24, i32 2, i32 24, i32 6, i32 16, i32 4, i32 8, i32 4, i32 6, i32 4, i32 4, i32 6, i32 60, i32 8, i32 8, i32 4, i32 6, i32 4, i32 16, i32 8, i32 8, i32 8, i32 8, i32 2, i32 24, i32 8, i32 8, i32 12, i32 12, i32 2, i32 12, i32 4, i32 24, i32 8, i32 4, i32 4, i32 32, i32 4, i32 12, i32 12, i32 6, i32 4, i32 16, i32 2, i32 10, i32 8, i32 16, i32 4, i32 30, i32 2, i32 8, i32 8, i32 24, i32 8, i32 8, i32 2, i32 6, i32 24, i32 4, i32 4, i32 42, i32 3, i32 8, i32 4, i32 12, i32 2, i32 12, i32 8, i32 16, i32 8, i32 8, i32 2, i32 24, i32 2, i32 8, i32 8, i32 20, i32 12, i32 8, i32 4, i32 6, i32 8, i32 16, i32 2, i32 24, i32 2, i32 8, i32 16, i32 12, i32 2, i32 24, i32 2, i32 24, i32 6, i32 4, i32 8, i32 12, i32 4, i32 4, i32 8, i32 8, i32 4, i32 48, i32 4, i32 12, i32 8, i32 8, i32 8, i32 20, i32 6, i32 4, i32 6, i32 24, i32 2, i32 16, i32 2, i32 24, i32 8, i32 4, i32 2, i32 18, i32 4, i32 8, i32 16, i32 18, i32 2, i32 8, i32 6, i32 12, i32 14, i32 8, i32 2, i32 32, i32 4, i32 8, i32 8, i32 6, i32 8, i32 24, i32 4, i32 10, i32 4, i32 16, i32 2, i32 24, i32 4, i32 8, i32 12, i32 8, i32 2, i32 8, i32 8, i32 24, i32 4, i32 4, i32 8, i32 48, i32 4, i32 12, i32 4, i32 6, i32 4, i32 16, i32 2, i32 16, i32 12, i32 8, i32 8, i32 24, i32 4, i32 4, i32 8, i32 40, i32 2, i32 18, i32 4, i32 6, i32 12, i32 8, i32 4, i32 16, i32 4, i32 8, i32 8, i32 6, i32 2, i32 16, i32 4, i32 14, i32 12, i32 8, i32 2, i32 36, i32 8, i32 8, i32 4, i32 8, i32 8, i32 16, i32 2, i32 24, i32 6, i32 12, i32 2, i32 20, i32 4, i32 8, i32 24, i32 6, i32 4, i32 20, i32 6, i32 16, i32 4, i32 8, i32 4, i32 12, i32 4, i32 4, i32 6, i32 24, i32 4, i32 32, i32 4, i32 6, i32 4, i32 4, i32 6, i32 48, i32 4, i32 4, i32 8, i32 12, i32 8, i32 8, i32 6, i32 10, i32 16, i32 4, i32 2, i32 24, i32 4, i32 16, i32 8, i32 16, i32 4, i32 24, i32 8, i32 6, i32 8, i32 4, i32 4, i32 48, i32 2, i32 4, i32 12, i32 15, i32 8, i32 8, i32 4, i32 8, i32 4, i32 12, i32 4, i32 24, i32 2, i32 16, i32 8, i32 10, i32 4, i32 16, i32 2, i32 24, i32 6, i32 8, i32 2, i32 16, i32 16, i32 4, i32 4, i32 12, i32 2, i32 24, i32 2, i32 24, i32 12, i32 4, i32 8, i32 24, i32 4, i32 8, i32 20, i32 16, i32 4, i32 8, i32 2, i32 6, i32 8, i32 16, i32 4, i32 30, i32 2, i32 12, i32 4, i32 12, i32 6, i32 8, i32 4, i32 16, i32 12, i32 8, i32 4, i32 48, i32 2, i32 4, i32 4, i32 14, i32 4, i32 16, i32 4, i32 6, i32 8, i32 8, i32 4, i32 32, i32 4, i32 8, i32 18, i32 12, i32 2, i32 8, i32 2, i32 30, i32 8, i32 8, i32 4, i32 18, i32 8, i32 8, i32 4, i32 16, i32 2, i32 32, i32 4, i32 6, i32 8, i32 8, i32 8, i32 24, i32 2, i32 8, i32 8, i32 18, i32 4, i32 36, i32 4, i32 8, i32 8, i32 8, i32 4, i32 12, i32 8, i32 8, i32 12, i32 10, i32 4, i32 8, i32 8, i32 12, i32 8, i32 8, i32 2, i32 48, i32 2, i32 4, i32 8, i32 24, i32 6, i32 8, i32 4, i32 20, i32 12, i32 16, i32 4, i32 12, i32 2, i32 8, i32 16, i32 8, i32 8, i32 12, i32 2, i32 12, i32 8, i32 4, i32 2, i32 40, i32 4, i32 8, i32 12, i32 6, i32 2, i32 32, i32 6, i32 16, i32 4, i32 4, i32 4, i32 18, i32 4, i32 16, i32 4, i32 24, i32 4, i32 8, i32 4, i32 6, i32 24, i32 8, i32 2, i32 32, i32 2, i32 8, i32 4, i32 12, i32 4, i32 16, i32 12, i32 20, i32 4, i32 4, i32 8, i32 24, i32 2, i32 8, i32 6, i32 8, i32 8, i32 16, i32 2, i32 6, i32 8, i32 16, i32 2, i32 42, i32 4, i32 8, i32 8, i32 12, i32 4, i32 16, i32 4, i32 36, i32 15, i32 12, i32 2, i32 24, i32 8, i32 4, i32 8, i32 10, i32 4, i32 24, i32 2, i32 12, i32 4, i32 8, i32 8, i32 16, i32 2, i32 4, i32 6, i32 12, i32 8, i32 8, i32 8, i32 12, i32 12, i32 8, i32 4, i32 48, i32 2, i32 8, i32 8, i32 8, i32 2, i32 16, i32 8, i32 6, i32 6, i32 4, i32 2, i32 40, i32 4, i32 16, i32 8, i32 12, i32 8, i32 12, i32 4, i32 8, i32 12, i32 12, i32 2, i32 12, i32 4, i32 8, i32 16, i32 32, i32 2, i32 16, i32 2, i32 24, i32 8, i32 4, i32 4, i32 24, i32 4, i32 4, i32 16, i32 6, i32 4, i32 32, i32 2, i32 10, i32 6, i32 4, i32 8, i32 12, i32 8, i32 8, i32 8, i32 32, i32 4, i32 20, i32 2, i32 12, i32 8, i32 4, i32 2, i32 24, i32 8, i32 16, i32 12, i32 6, i32 4, i32 16, i32 4, i32 8, i32 4, i32 12, i32 4, i32 54, i32 2, i32 4, i32 4, i32 10, i32 8, i32 16, i32 2, i32 6, i32 8, i32 8, i32 8, i32 32, i32 4, i32 4, i32 8, i32 12, i32 4, i32 24, i32 8, i32 28, i32 4, i32 12, i32 2, i32 12, i32 6, i32 8, i32 6, i32 16, i32 2, i32 16, i32 2, i32 12, i32 16, i32 4, i32 4, i32 40, i32 4, i32 4, i32 4, i32 24, i32 2, i32 8, i32 4, i32 16, i32 24, i32 4, i32 8, i32 12, i32 2, i32 12, i32 8, i32 12, i32 4, i32 24, i32 8, i32 12, i32 4, i32 8, i32 4, i32 32, i32 4, i32 8, i32 12, i32 12, i32 4, i32 16, i32 2, i32 20, i32 4, i32 8, i32 6, i32 18, i32 2, i32 4, i32 24, i32 16, i32 4, i32 8, i32 4, i32 12, i32 6, i32 16, i32 4, i32 36, i32 4, i32 4, i32 4, i32 12, i32 4, i32 32, i32 4, i32 8, i32 4, i32 8, i32 4, i32 36, i32 4, i32 4, i32 12, i32 25] }, align 4
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s560601506.cpp, i8* null }]

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress norecurse sspstrong uwtable
define dso_local i32 @main() local_unnamed_addr #3 {
  %1 = alloca i32, align 4
  %2 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %3 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8, !tbaa !5
  %4 = getelementptr i8, i8* %3, i64 -24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = add nsw i64 %6, 216
  %8 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %7
  %9 = bitcast i8* %8 to %"class.std::basic_ostream"**
  store %"class.std::basic_ostream"* null, %"class.std::basic_ostream"** %9, align 8, !tbaa !8
  %10 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #7
  %11 = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %1)
  %12 = load i32, i32* %1, align 4, !tbaa !13
  %13 = icmp slt i32 %12, 105
  br i1 %13, label %16, label %14

14:                                               ; preds = %0
  %15 = zext i32 %12 to i64
  br label %48

16:                                               ; preds = %48, %0
  %17 = phi i32 [ 0, %0 ], [ %55, %48 ]
  %18 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %17)
  %19 = bitcast %"class.std::basic_ostream"* %18 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !5
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::basic_ostream"* %18 to i8*
  %25 = add nsw i64 %23, 240
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to %"class.std::ctype"**
  %28 = load %"class.std::ctype"*, %"class.std::ctype"** %27, align 8, !tbaa !15
  %29 = icmp eq %"class.std::ctype"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %16
  call void @_ZSt16__throw_bad_castv() #8
  unreachable

31:                                               ; preds = %16
  %32 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %28, i64 0, i32 8
  %33 = load i8, i8* %32, align 8, !tbaa !16
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %28, i64 0, i32 9, i64 10
  %37 = load i8, i8* %36, align 1, !tbaa !18
  br label %44

38:                                               ; preds = %31
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %28)
  %39 = bitcast %"class.std::ctype"* %28 to i8 (%"class.std::ctype"*, i8)***
  %40 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %39, align 8, !tbaa !5
  %41 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %40, i64 6
  %42 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %41, align 8
  %43 = call signext i8 %42(%"class.std::ctype"* nonnull align 8 dereferenceable(570) %28, i8 signext 10)
  br label %44

44:                                               ; preds = %35, %38
  %45 = phi i8 [ %37, %35 ], [ %43, %38 ]
  %46 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %18, i8 signext %45)
  %47 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %46)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #7
  ret i32 0

48:                                               ; preds = %14, %48
  %49 = phi i64 [ 105, %14 ], [ %56, %48 ]
  %50 = phi i32 [ 0, %14 ], [ %55, %48 ]
  %51 = getelementptr inbounds %struct.Approx, %struct.Approx* @__const.main.ap, i64 0, i32 0, i64 %49
  %52 = load i32, i32* %51, align 4, !tbaa !13
  %53 = icmp eq i32 %52, 8
  %54 = zext i1 %53 to i32
  %55 = add nuw nsw i32 %50, %54
  %56 = add nuw nsw i64 %49, 2
  %57 = icmp ugt i64 %56, %15
  br i1 %57, label %16, label %48, !llvm.loop !19
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16), i32* nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) local_unnamed_addr #0

declare nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8 signext) local_unnamed_addr #0

declare nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #5

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

; Function Attrs: sspstrong uwtable
define internal void @_GLOBAL__sub_I_s560601506.cpp() #6 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress norecurse sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { sspstrong uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind }
attributes #8 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"clang version 13.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"vtable pointer", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !10, i64 216}
!9 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !10, i64 216, !11, i64 224, !12, i64 225, !10, i64 232, !10, i64 240, !10, i64 248, !10, i64 256}
!10 = !{!"any pointer", !11, i64 0}
!11 = !{!"omnipotent char", !7, i64 0}
!12 = !{!"bool", !11, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !11, i64 0}
!15 = !{!9, !10, i64 240}
!16 = !{!17, !11, i64 56}
!17 = !{!"_ZTSSt5ctypeIcE", !10, i64 16, !12, i64 24, !10, i64 32, !10, i64 40, !10, i64 48, !11, i64 56, !11, i64 57, !11, i64 313, !11, i64 569}
!18 = !{!11, !11, i64 0}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.mustprogress"}
