; ModuleID = 'Project_CodeNet_C++1400/p03707/s206195915.cpp'
source_filename = "Project_CodeNet_C++1400/p03707/s206195915.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@m = global i32 0, align 4
@q = global i32 0, align 4
@color = global [2050 x [2050 x i8]] zeroinitializer, align 16
@tot = global [2050 x [2050 x i32]] zeroinitializer, align 16
@lin = global [2050 x [2050 x [4 x i32]]] zeroinitializer, align 16
@.str = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"%d%d%d%d\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s206195915.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [2050 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  %15 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32* @n, i32* @m, i32* @q)
  store i32 1, i32* %4, align 4
  %16 = alloca i32
  store i32 -1913245860, i32* %16
  br label %17

; <label>:17:                                     ; preds = %0, %2225
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1913245860, label %20
    i32 1928173787, label %36
    i32 -454082071, label %55
    i32 -1479533989, label %58
    i32 880213849, label %85
    i32 1770314956, label %103
    i32 2135790031, label %104
    i32 1250414945, label %109
    i32 -1991240368, label %137
    i32 -1667214837, label %170
    i32 1207150628, label %171
    i32 -203186727, label %178
    i32 1001698620, label %179
    i32 153807727, label %194
    i32 1543680316, label %226
    i32 1693123513, label %227
    i32 36460777, label %228
    i32 -601186556, label %233
    i32 1787368530, label %234
    i32 1927578678, label %261
    i32 728982389, label %280
    i32 1091977456, label %283
    i32 -1712038889, label %311
    i32 1139937874, label %726
    i32 1960263527, label %727
    i32 529370, label %732
    i32 -1532928667, label %733
    i32 -880632844, label %739
    i32 -1231048997, label %740
    i32 1783224388, label %745
    i32 2083840817, label %919
    i32 -1860800970, label %946
    i32 1065976025, label %967
    i32 1252286568, label %968
    i32 1990786000, label %969
    i32 1596813899, label %973
    i32 996082538, label %976
    i32 30997736, label %1006
    i32 1097397526, label %1013
    i32 289516608, label %1017
    i32 -1908951792, label %2210
  ]

; <label>:19:                                     ; preds = %17
  br label %2225

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* @x.4
  %22 = load i32, i32* @y.5
  %23 = sub i32 %21, 1333907675
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 1333907675
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 1928173787, i32 1990786000
  store i32 %35, i32* %16
  br label %2225

; <label>:36:                                     ; preds = %17
  %37 = load i32, i32* %4, align 4
  %38 = load i32, i32* @n, align 4
  %39 = icmp sle i32 %37, %38
  store i1 %39, i1* %2
  %40 = load i32, i32* @x.4
  %41 = load i32, i32* @y.5
  %42 = add i32 %40, -1665394667
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1665394667
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -454082071, i32 1990786000
  store i32 %54, i32* %16
  br label %2225

; <label>:55:                                     ; preds = %17
  %56 = load volatile i1, i1* %2
  %57 = select i1 %56, i32 -1479533989, i32 1693123513
  store i32 %57, i32* %16
  br label %2225

; <label>:58:                                     ; preds = %17
  %59 = load i32, i32* @x.4
  %60 = load i32, i32* @y.5
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 880213849, i32 1596813899
  store i32 %84, i32* %16
  br label %2225

; <label>:85:                                     ; preds = %17
  %86 = getelementptr inbounds [2050 x i8], [2050 x i8]* %5, i32 0, i32 0
  %87 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* %86)
  store i32 1, i32* %6, align 4
  %88 = load i32, i32* @x.4
  %89 = load i32, i32* @y.5
  %90 = add i32 %88, 1425596488
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 1425596488
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 1770314956, i32 1596813899
  store i32 %102, i32* %16
  br label %2225

; <label>:103:                                    ; preds = %17
  store i32 2135790031, i32* %16
  br label %2225

; <label>:104:                                    ; preds = %17
  %105 = load i32, i32* %6, align 4
  %106 = load i32, i32* @m, align 4
  %107 = icmp sle i32 %105, %106
  %108 = select i1 %107, i32 1250414945, i32 -203186727
  store i32 %108, i32* %16
  br label %2225

; <label>:109:                                    ; preds = %17
  %110 = load i32, i32* @x.4
  %111 = load i32, i32* @y.5
  %112 = sub i32 %110, 1254263520
  %113 = sub i32 %112, 1
  %114 = add i32 %113, 1254263520
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 false, true
  %123 = and i1 %120, false
  %124 = and i1 %118, %122
  %125 = and i1 %121, false
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 false, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  %136 = select i1 %134, i32 -1991240368, i32 996082538
  store i32 %136, i32* %16
  br label %2225

; <label>:137:                                    ; preds = %17
  %138 = load i32, i32* %6, align 4
  %139 = sub i32 %138, 411511715
  %140 = sub i32 %139, 1
  %141 = add i32 %140, 411511715
  %142 = sub nsw i32 %138, 1
  %143 = sext i32 %141 to i64
  %144 = getelementptr inbounds [2050 x i8], [2050 x i8]* %5, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp eq i32 %146, 49
  %148 = load i32, i32* %4, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %149
  %151 = load i32, i32* %6, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [2050 x i8], [2050 x i8]* %150, i64 0, i64 %152
  %154 = zext i1 %147 to i8
  store i8 %154, i8* %153, align 1
  %155 = load i32, i32* @x.4
  %156 = load i32, i32* @y.5
  %157 = add i32 %155, -2119503507
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, -2119503507
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  %169 = select i1 %167, i32 -1667214837, i32 996082538
  store i32 %169, i32* %16
  br label %2225

; <label>:170:                                    ; preds = %17
  store i32 1207150628, i32* %16
  br label %2225

; <label>:171:                                    ; preds = %17
  %172 = load i32, i32* %6, align 4
  %173 = sub i32 0, %172
  %174 = sub i32 0, 1
  %175 = add i32 %173, %174
  %176 = sub i32 0, %175
  %177 = add nsw i32 %172, 1
  store i32 %176, i32* %6, align 4
  store i32 2135790031, i32* %16
  br label %2225

; <label>:178:                                    ; preds = %17
  store i32 1001698620, i32* %16
  br label %2225

; <label>:179:                                    ; preds = %17
  %180 = load i32, i32* @x.4
  %181 = load i32, i32* @y.5
  %182 = sub i32 0, 1
  %183 = add i32 %180, %182
  %184 = sub i32 %180, 1
  %185 = mul i32 %180, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %181, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  %193 = select i1 %191, i32 153807727, i32 30997736
  store i32 %193, i32* %16
  br label %2225

; <label>:194:                                    ; preds = %17
  %195 = load i32, i32* %4, align 4
  %196 = sub i32 0, 1
  %197 = sub i32 %195, %196
  %198 = add nsw i32 %195, 1
  store i32 %197, i32* %4, align 4
  %199 = load i32, i32* @x.4
  %200 = load i32, i32* @y.5
  %201 = sub i32 %199, 1345867793
  %202 = sub i32 %201, 1
  %203 = add i32 %202, 1345867793
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = xor i1 %207, true
  %210 = xor i1 %208, true
  %211 = xor i1 true, true
  %212 = and i1 %209, true
  %213 = and i1 %207, %211
  %214 = and i1 %210, true
  %215 = and i1 %208, %211
  %216 = or i1 %212, %213
  %217 = or i1 %214, %215
  %218 = xor i1 %216, %217
  %219 = or i1 %209, %210
  %220 = xor i1 %219, true
  %221 = or i1 true, %211
  %222 = and i1 %220, %221
  %223 = or i1 %218, %222
  %224 = or i1 %207, %208
  %225 = select i1 %223, i32 1543680316, i32 30997736
  store i32 %225, i32* %16
  br label %2225

; <label>:226:                                    ; preds = %17
  store i32 -1913245860, i32* %16
  br label %2225

; <label>:227:                                    ; preds = %17
  store i32 1, i32* %7, align 4
  store i32 36460777, i32* %16
  br label %2225

; <label>:228:                                    ; preds = %17
  %229 = load i32, i32* %7, align 4
  %230 = load i32, i32* @n, align 4
  %231 = icmp sle i32 %229, %230
  %232 = select i1 %231, i32 -601186556, i32 -880632844
  store i32 %232, i32* %16
  br label %2225

; <label>:233:                                    ; preds = %17
  store i32 1, i32* %8, align 4
  store i32 1787368530, i32* %16
  br label %2225

; <label>:234:                                    ; preds = %17
  %235 = load i32, i32* @x.4
  %236 = load i32, i32* @y.5
  %237 = sub i32 0, 1
  %238 = add i32 %235, %237
  %239 = sub i32 %235, 1
  %240 = mul i32 %235, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %236, 10
  %244 = xor i1 %242, true
  %245 = xor i1 %243, true
  %246 = xor i1 false, true
  %247 = and i1 %244, false
  %248 = and i1 %242, %246
  %249 = and i1 %245, false
  %250 = and i1 %243, %246
  %251 = or i1 %247, %248
  %252 = or i1 %249, %250
  %253 = xor i1 %251, %252
  %254 = or i1 %244, %245
  %255 = xor i1 %254, true
  %256 = or i1 false, %246
  %257 = and i1 %255, %256
  %258 = or i1 %253, %257
  %259 = or i1 %242, %243
  %260 = select i1 %258, i32 1927578678, i32 1097397526
  store i32 %260, i32* %16
  br label %2225

; <label>:261:                                    ; preds = %17
  %262 = load i32, i32* %8, align 4
  %263 = load i32, i32* @m, align 4
  %264 = icmp sle i32 %262, %263
  store i1 %264, i1* %1
  %265 = load i32, i32* @x.4
  %266 = load i32, i32* @y.5
  %267 = sub i32 %265, 283940511
  %268 = sub i32 %267, 1
  %269 = add i32 %268, 283940511
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = and i1 %273, %274
  %276 = xor i1 %273, %274
  %277 = or i1 %275, %276
  %278 = or i1 %273, %274
  %279 = select i1 %277, i32 728982389, i32 1097397526
  store i32 %279, i32* %16
  br label %2225

; <label>:280:                                    ; preds = %17
  %281 = load volatile i1, i1* %1
  %282 = select i1 %281, i32 1091977456, i32 529370
  store i32 %282, i32* %16
  br label %2225

; <label>:283:                                    ; preds = %17
  %284 = load i32, i32* @x.4
  %285 = load i32, i32* @y.5
  %286 = sub i32 %284, -1160951458
  %287 = sub i32 %286, 1
  %288 = add i32 %287, -1160951458
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = xor i1 %292, true
  %295 = xor i1 %293, true
  %296 = xor i1 false, true
  %297 = and i1 %294, false
  %298 = and i1 %292, %296
  %299 = and i1 %295, false
  %300 = and i1 %293, %296
  %301 = or i1 %297, %298
  %302 = or i1 %299, %300
  %303 = xor i1 %301, %302
  %304 = or i1 %294, %295
  %305 = xor i1 %304, true
  %306 = or i1 false, %296
  %307 = and i1 %305, %306
  %308 = or i1 %303, %307
  %309 = or i1 %292, %293
  %310 = select i1 %308, i32 -1712038889, i32 289516608
  store i32 %310, i32* %16
  br label %2225

; <label>:311:                                    ; preds = %17
  %312 = load i32, i32* %7, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %313
  %315 = load i32, i32* %8, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [2050 x i8], [2050 x i8]* %314, i64 0, i64 %316
  %318 = load i8, i8* %317, align 1
  %319 = trunc i8 %318 to i1
  %320 = zext i1 %319 to i32
  %321 = load i32, i32* %7, align 4
  %322 = add i32 %321, 898112645
  %323 = sub i32 %322, 1
  %324 = sub i32 %323, 898112645
  %325 = sub nsw i32 %321, 1
  %326 = sext i32 %324 to i64
  %327 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %326
  %328 = load i32, i32* %8, align 4
  %329 = add i32 %328, -744286486
  %330 = sub i32 %329, 1
  %331 = sub i32 %330, -744286486
  %332 = sub nsw i32 %328, 1
  %333 = sext i32 %331 to i64
  %334 = getelementptr inbounds [2050 x i32], [2050 x i32]* %327, i64 0, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = sub i32 0, %335
  %337 = add i32 %320, %336
  %338 = sub nsw i32 %320, %335
  %339 = load i32, i32* %7, align 4
  %340 = sub i32 %339, -2037648607
  %341 = sub i32 %340, 1
  %342 = add i32 %341, -2037648607
  %343 = sub nsw i32 %339, 1
  %344 = sext i32 %342 to i64
  %345 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %344
  %346 = load i32, i32* %8, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds [2050 x i32], [2050 x i32]* %345, i64 0, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = sub i32 %337, -1025487261
  %351 = add i32 %350, %349
  %352 = add i32 %351, -1025487261
  %353 = add nsw i32 %337, %349
  %354 = load i32, i32* %7, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %355
  %357 = load i32, i32* %8, align 4
  %358 = add i32 %357, 249992474
  %359 = sub i32 %358, 1
  %360 = sub i32 %359, 249992474
  %361 = sub nsw i32 %357, 1
  %362 = sext i32 %360 to i64
  %363 = getelementptr inbounds [2050 x i32], [2050 x i32]* %356, i64 0, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = sub i32 0, %364
  %366 = sub i32 %352, %365
  %367 = add nsw i32 %352, %364
  %368 = load i32, i32* %7, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %369
  %371 = load i32, i32* %8, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds [2050 x i32], [2050 x i32]* %370, i64 0, i64 %372
  store i32 %366, i32* %373, align 4
  %374 = load i32, i32* %7, align 4
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %375
  %377 = load i32, i32* %8, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [2050 x i8], [2050 x i8]* %376, i64 0, i64 %378
  %380 = load i8, i8* %379, align 1
  %381 = trunc i8 %380 to i1
  %382 = zext i1 %381 to i32
  %383 = load i32, i32* %7, align 4
  %384 = sub i32 %383, 1613950735
  %385 = sub i32 %384, 1
  %386 = add i32 %385, 1613950735
  %387 = sub nsw i32 %383, 1
  %388 = sext i32 %386 to i64
  %389 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %388
  %390 = load i32, i32* %8, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [2050 x i8], [2050 x i8]* %389, i64 0, i64 %391
  %393 = load i8, i8* %392, align 1
  %394 = trunc i8 %393 to i1
  %395 = zext i1 %394 to i32
  %396 = xor i32 %395, -1
  %397 = xor i32 %382, %396
  %398 = and i32 %397, %382
  %399 = and i32 %382, %395
  %400 = load i32, i32* %7, align 4
  %401 = sub i32 %400, -1126891377
  %402 = sub i32 %401, 1
  %403 = add i32 %402, -1126891377
  %404 = sub nsw i32 %400, 1
  %405 = sext i32 %403 to i64
  %406 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %405
  %407 = load i32, i32* %8, align 4
  %408 = add i32 %407, 2016553151
  %409 = sub i32 %408, 1
  %410 = sub i32 %409, 2016553151
  %411 = sub nsw i32 %407, 1
  %412 = sext i32 %410 to i64
  %413 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %406, i64 0, i64 %412
  %414 = getelementptr inbounds [4 x i32], [4 x i32]* %413, i64 0, i64 0
  %415 = load i32, i32* %414, align 16
  %416 = add i32 %398, -659642137
  %417 = sub i32 %416, %415
  %418 = sub i32 %417, -659642137
  %419 = sub nsw i32 %398, %415
  %420 = load i32, i32* %7, align 4
  %421 = sub i32 %420, 1169228177
  %422 = sub i32 %421, 1
  %423 = add i32 %422, 1169228177
  %424 = sub nsw i32 %420, 1
  %425 = sext i32 %423 to i64
  %426 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %425
  %427 = load i32, i32* %8, align 4
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %426, i64 0, i64 %428
  %430 = getelementptr inbounds [4 x i32], [4 x i32]* %429, i64 0, i64 0
  %431 = load i32, i32* %430, align 16
  %432 = sub i32 0, %418
  %433 = sub i32 0, %431
  %434 = add i32 %432, %433
  %435 = sub i32 0, %434
  %436 = add nsw i32 %418, %431
  %437 = load i32, i32* %7, align 4
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %438
  %440 = load i32, i32* %8, align 4
  %441 = sub i32 0, 1
  %442 = add i32 %440, %441
  %443 = sub nsw i32 %440, 1
  %444 = sext i32 %442 to i64
  %445 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %439, i64 0, i64 %444
  %446 = getelementptr inbounds [4 x i32], [4 x i32]* %445, i64 0, i64 0
  %447 = load i32, i32* %446, align 16
  %448 = sub i32 %435, 1326562131
  %449 = add i32 %448, %447
  %450 = add i32 %449, 1326562131
  %451 = add nsw i32 %435, %447
  %452 = load i32, i32* %7, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %453
  %455 = load i32, i32* %8, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %454, i64 0, i64 %456
  %458 = getelementptr inbounds [4 x i32], [4 x i32]* %457, i64 0, i64 0
  store i32 %450, i32* %458, align 16
  %459 = load i32, i32* %7, align 4
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %460
  %462 = load i32, i32* %8, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds [2050 x i8], [2050 x i8]* %461, i64 0, i64 %463
  %465 = load i8, i8* %464, align 1
  %466 = trunc i8 %465 to i1
  %467 = zext i1 %466 to i32
  %468 = load i32, i32* %7, align 4
  %469 = sub i32 0, %468
  %470 = sub i32 0, 1
  %471 = add i32 %469, %470
  %472 = sub i32 0, %471
  %473 = add nsw i32 %468, 1
  %474 = sext i32 %472 to i64
  %475 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %474
  %476 = load i32, i32* %8, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds [2050 x i8], [2050 x i8]* %475, i64 0, i64 %477
  %479 = load i8, i8* %478, align 1
  %480 = trunc i8 %479 to i1
  %481 = zext i1 %480 to i32
  %482 = xor i32 %481, -1
  %483 = xor i32 %467, %482
  %484 = and i32 %483, %467
  %485 = and i32 %467, %481
  %486 = load i32, i32* %7, align 4
  %487 = add i32 %486, -299375764
  %488 = sub i32 %487, 1
  %489 = sub i32 %488, -299375764
  %490 = sub nsw i32 %486, 1
  %491 = sext i32 %489 to i64
  %492 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %491
  %493 = load i32, i32* %8, align 4
  %494 = add i32 %493, -747781149
  %495 = sub i32 %494, 1
  %496 = sub i32 %495, -747781149
  %497 = sub nsw i32 %493, 1
  %498 = sext i32 %496 to i64
  %499 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %492, i64 0, i64 %498
  %500 = getelementptr inbounds [4 x i32], [4 x i32]* %499, i64 0, i64 1
  %501 = load i32, i32* %500, align 4
  %502 = sub i32 %484, -1251845034
  %503 = sub i32 %502, %501
  %504 = add i32 %503, -1251845034
  %505 = sub nsw i32 %484, %501
  %506 = load i32, i32* %7, align 4
  %507 = sub i32 0, 1
  %508 = add i32 %506, %507
  %509 = sub nsw i32 %506, 1
  %510 = sext i32 %508 to i64
  %511 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %510
  %512 = load i32, i32* %8, align 4
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %511, i64 0, i64 %513
  %515 = getelementptr inbounds [4 x i32], [4 x i32]* %514, i64 0, i64 1
  %516 = load i32, i32* %515, align 4
  %517 = sub i32 0, %516
  %518 = sub i32 %504, %517
  %519 = add nsw i32 %504, %516
  %520 = load i32, i32* %7, align 4
  %521 = sext i32 %520 to i64
  %522 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %521
  %523 = load i32, i32* %8, align 4
  %524 = add i32 %523, 1971942552
  %525 = sub i32 %524, 1
  %526 = sub i32 %525, 1971942552
  %527 = sub nsw i32 %523, 1
  %528 = sext i32 %526 to i64
  %529 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %522, i64 0, i64 %528
  %530 = getelementptr inbounds [4 x i32], [4 x i32]* %529, i64 0, i64 1
  %531 = load i32, i32* %530, align 4
  %532 = sub i32 0, %531
  %533 = sub i32 %518, %532
  %534 = add nsw i32 %518, %531
  %535 = load i32, i32* %7, align 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %536
  %538 = load i32, i32* %8, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %537, i64 0, i64 %539
  %541 = getelementptr inbounds [4 x i32], [4 x i32]* %540, i64 0, i64 1
  store i32 %533, i32* %541, align 4
  %542 = load i32, i32* %7, align 4
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %543
  %545 = load i32, i32* %8, align 4
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds [2050 x i8], [2050 x i8]* %544, i64 0, i64 %546
  %548 = load i8, i8* %547, align 1
  %549 = trunc i8 %548 to i1
  %550 = zext i1 %549 to i32
  %551 = load i32, i32* %7, align 4
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %552
  %554 = load i32, i32* %8, align 4
  %555 = sub i32 0, 1
  %556 = add i32 %554, %555
  %557 = sub nsw i32 %554, 1
  %558 = sext i32 %556 to i64
  %559 = getelementptr inbounds [2050 x i8], [2050 x i8]* %553, i64 0, i64 %558
  %560 = load i8, i8* %559, align 1
  %561 = trunc i8 %560 to i1
  %562 = zext i1 %561 to i32
  %563 = xor i32 %550, -1
  %564 = xor i32 %562, -1
  %565 = xor i32 -536501203, -1
  %566 = or i32 %563, %564
  %567 = or i32 -536501203, %565
  %568 = xor i32 %566, -1
  %569 = and i32 %568, %567
  %570 = and i32 %550, %562
  %571 = load i32, i32* %7, align 4
  %572 = sub i32 %571, 1759247998
  %573 = sub i32 %572, 1
  %574 = add i32 %573, 1759247998
  %575 = sub nsw i32 %571, 1
  %576 = sext i32 %574 to i64
  %577 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %576
  %578 = load i32, i32* %8, align 4
  %579 = sub i32 %578, 1993340154
  %580 = sub i32 %579, 1
  %581 = add i32 %580, 1993340154
  %582 = sub nsw i32 %578, 1
  %583 = sext i32 %581 to i64
  %584 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %577, i64 0, i64 %583
  %585 = getelementptr inbounds [4 x i32], [4 x i32]* %584, i64 0, i64 2
  %586 = load i32, i32* %585, align 8
  %587 = sub i32 0, %586
  %588 = add i32 %569, %587
  %589 = sub nsw i32 %569, %586
  %590 = load i32, i32* %7, align 4
  %591 = sub i32 0, 1
  %592 = add i32 %590, %591
  %593 = sub nsw i32 %590, 1
  %594 = sext i32 %592 to i64
  %595 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %594
  %596 = load i32, i32* %8, align 4
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %595, i64 0, i64 %597
  %599 = getelementptr inbounds [4 x i32], [4 x i32]* %598, i64 0, i64 2
  %600 = load i32, i32* %599, align 8
  %601 = sub i32 0, %588
  %602 = sub i32 0, %600
  %603 = add i32 %601, %602
  %604 = sub i32 0, %603
  %605 = add nsw i32 %588, %600
  %606 = load i32, i32* %7, align 4
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %607
  %609 = load i32, i32* %8, align 4
  %610 = sub i32 0, 1
  %611 = add i32 %609, %610
  %612 = sub nsw i32 %609, 1
  %613 = sext i32 %611 to i64
  %614 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %608, i64 0, i64 %613
  %615 = getelementptr inbounds [4 x i32], [4 x i32]* %614, i64 0, i64 2
  %616 = load i32, i32* %615, align 8
  %617 = sub i32 %604, 838893862
  %618 = add i32 %617, %616
  %619 = add i32 %618, 838893862
  %620 = add nsw i32 %604, %616
  %621 = load i32, i32* %7, align 4
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %622
  %624 = load i32, i32* %8, align 4
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %623, i64 0, i64 %625
  %627 = getelementptr inbounds [4 x i32], [4 x i32]* %626, i64 0, i64 2
  store i32 %619, i32* %627, align 8
  %628 = load i32, i32* %7, align 4
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %629
  %631 = load i32, i32* %8, align 4
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds [2050 x i8], [2050 x i8]* %630, i64 0, i64 %632
  %634 = load i8, i8* %633, align 1
  %635 = trunc i8 %634 to i1
  %636 = zext i1 %635 to i32
  %637 = load i32, i32* %7, align 4
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %638
  %640 = load i32, i32* %8, align 4
  %641 = sub i32 0, 1
  %642 = sub i32 %640, %641
  %643 = add nsw i32 %640, 1
  %644 = sext i32 %642 to i64
  %645 = getelementptr inbounds [2050 x i8], [2050 x i8]* %639, i64 0, i64 %644
  %646 = load i8, i8* %645, align 1
  %647 = trunc i8 %646 to i1
  %648 = zext i1 %647 to i32
  %649 = xor i32 %636, -1
  %650 = xor i32 %648, -1
  %651 = xor i32 1506447257, -1
  %652 = or i32 %649, %650
  %653 = or i32 1506447257, %651
  %654 = xor i32 %652, -1
  %655 = and i32 %654, %653
  %656 = and i32 %636, %648
  %657 = load i32, i32* %7, align 4
  %658 = sub i32 0, 1
  %659 = add i32 %657, %658
  %660 = sub nsw i32 %657, 1
  %661 = sext i32 %659 to i64
  %662 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %661
  %663 = load i32, i32* %8, align 4
  %664 = add i32 %663, 1183658483
  %665 = sub i32 %664, 1
  %666 = sub i32 %665, 1183658483
  %667 = sub nsw i32 %663, 1
  %668 = sext i32 %666 to i64
  %669 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %662, i64 0, i64 %668
  %670 = getelementptr inbounds [4 x i32], [4 x i32]* %669, i64 0, i64 3
  %671 = load i32, i32* %670, align 4
  %672 = sub i32 0, %671
  %673 = add i32 %655, %672
  %674 = sub nsw i32 %655, %671
  %675 = load i32, i32* %7, align 4
  %676 = sub i32 0, 1
  %677 = add i32 %675, %676
  %678 = sub nsw i32 %675, 1
  %679 = sext i32 %677 to i64
  %680 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %679
  %681 = load i32, i32* %8, align 4
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %680, i64 0, i64 %682
  %684 = getelementptr inbounds [4 x i32], [4 x i32]* %683, i64 0, i64 3
  %685 = load i32, i32* %684, align 4
  %686 = add i32 %673, 253600574
  %687 = add i32 %686, %685
  %688 = sub i32 %687, 253600574
  %689 = add nsw i32 %673, %685
  %690 = load i32, i32* %7, align 4
  %691 = sext i32 %690 to i64
  %692 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %691
  %693 = load i32, i32* %8, align 4
  %694 = add i32 %693, 526679445
  %695 = sub i32 %694, 1
  %696 = sub i32 %695, 526679445
  %697 = sub nsw i32 %693, 1
  %698 = sext i32 %696 to i64
  %699 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %692, i64 0, i64 %698
  %700 = getelementptr inbounds [4 x i32], [4 x i32]* %699, i64 0, i64 3
  %701 = load i32, i32* %700, align 4
  %702 = sub i32 0, %701
  %703 = sub i32 %688, %702
  %704 = add nsw i32 %688, %701
  %705 = load i32, i32* %7, align 4
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %706
  %708 = load i32, i32* %8, align 4
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %707, i64 0, i64 %709
  %711 = getelementptr inbounds [4 x i32], [4 x i32]* %710, i64 0, i64 3
  store i32 %703, i32* %711, align 4
  %712 = load i32, i32* @x.4
  %713 = load i32, i32* @y.5
  %714 = sub i32 0, 1
  %715 = add i32 %712, %714
  %716 = sub i32 %712, 1
  %717 = mul i32 %712, %715
  %718 = urem i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = icmp slt i32 %713, 10
  %721 = and i1 %719, %720
  %722 = xor i1 %719, %720
  %723 = or i1 %721, %722
  %724 = or i1 %719, %720
  %725 = select i1 %723, i32 1139937874, i32 289516608
  store i32 %725, i32* %16
  br label %2225

; <label>:726:                                    ; preds = %17
  store i32 1960263527, i32* %16
  br label %2225

; <label>:727:                                    ; preds = %17
  %728 = load i32, i32* %8, align 4
  %729 = sub i32 0, 1
  %730 = sub i32 %728, %729
  %731 = add nsw i32 %728, 1
  store i32 %730, i32* %8, align 4
  store i32 1787368530, i32* %16
  br label %2225

; <label>:732:                                    ; preds = %17
  store i32 -1532928667, i32* %16
  br label %2225

; <label>:733:                                    ; preds = %17
  %734 = load i32, i32* %7, align 4
  %735 = add i32 %734, -81538597
  %736 = add i32 %735, 1
  %737 = sub i32 %736, -81538597
  %738 = add nsw i32 %734, 1
  store i32 %737, i32* %7, align 4
  store i32 36460777, i32* %16
  br label %2225

; <label>:739:                                    ; preds = %17
  store i32 1, i32* %9, align 4
  store i32 -1231048997, i32* %16
  br label %2225

; <label>:740:                                    ; preds = %17
  %741 = load i32, i32* %9, align 4
  %742 = load i32, i32* @q, align 4
  %743 = icmp sle i32 %741, %742
  %744 = select i1 %743, i32 1783224388, i32 1252286568
  store i32 %744, i32* %16
  br label %2225

; <label>:745:                                    ; preds = %17
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  %746 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i32* %10, i32* %11, i32* %12, i32* %13)
  %747 = load i32, i32* %12, align 4
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %748
  %750 = load i32, i32* %13, align 4
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds [2050 x i32], [2050 x i32]* %749, i64 0, i64 %751
  %753 = load i32, i32* %752, align 4
  %754 = load i32, i32* %10, align 4
  %755 = sub i32 0, 1
  %756 = add i32 %754, %755
  %757 = sub nsw i32 %754, 1
  %758 = sext i32 %756 to i64
  %759 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %758
  %760 = load i32, i32* %11, align 4
  %761 = sub i32 0, 1
  %762 = add i32 %760, %761
  %763 = sub nsw i32 %760, 1
  %764 = sext i32 %762 to i64
  %765 = getelementptr inbounds [2050 x i32], [2050 x i32]* %759, i64 0, i64 %764
  %766 = load i32, i32* %765, align 4
  %767 = sub i32 0, %753
  %768 = sub i32 0, %766
  %769 = add i32 %767, %768
  %770 = sub i32 0, %769
  %771 = add nsw i32 %753, %766
  %772 = load i32, i32* %10, align 4
  %773 = add i32 %772, 1895801958
  %774 = sub i32 %773, 1
  %775 = sub i32 %774, 1895801958
  %776 = sub nsw i32 %772, 1
  %777 = sext i32 %775 to i64
  %778 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %777
  %779 = load i32, i32* %13, align 4
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds [2050 x i32], [2050 x i32]* %778, i64 0, i64 %780
  %782 = load i32, i32* %781, align 4
  %783 = sub i32 0, %782
  %784 = add i32 %770, %783
  %785 = sub nsw i32 %770, %782
  %786 = load i32, i32* %12, align 4
  %787 = sext i32 %786 to i64
  %788 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %787
  %789 = load i32, i32* %11, align 4
  %790 = sub i32 0, 1
  %791 = add i32 %789, %790
  %792 = sub nsw i32 %789, 1
  %793 = sext i32 %791 to i64
  %794 = getelementptr inbounds [2050 x i32], [2050 x i32]* %788, i64 0, i64 %793
  %795 = load i32, i32* %794, align 4
  %796 = add i32 %784, 614188593
  %797 = sub i32 %796, %795
  %798 = sub i32 %797, 614188593
  %799 = sub nsw i32 %784, %795
  %800 = load i32, i32* %14, align 4
  %801 = add i32 %800, 901300332
  %802 = add i32 %801, %798
  %803 = sub i32 %802, 901300332
  %804 = add nsw i32 %800, %798
  store i32 %803, i32* %14, align 4
  %805 = load i32, i32* %12, align 4
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %806
  %808 = load i32, i32* %13, align 4
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %807, i64 0, i64 %809
  %811 = getelementptr inbounds [4 x i32], [4 x i32]* %810, i64 0, i64 0
  %812 = load i32, i32* %811, align 16
  %813 = load i32, i32* %10, align 4
  %814 = sext i32 %813 to i64
  %815 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %814
  %816 = load i32, i32* %11, align 4
  %817 = add i32 %816, 837877167
  %818 = sub i32 %817, 1
  %819 = sub i32 %818, 837877167
  %820 = sub nsw i32 %816, 1
  %821 = sext i32 %819 to i64
  %822 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %815, i64 0, i64 %821
  %823 = getelementptr inbounds [4 x i32], [4 x i32]* %822, i64 0, i64 0
  %824 = load i32, i32* %823, align 16
  %825 = sub i32 0, %812
  %826 = sub i32 0, %824
  %827 = add i32 %825, %826
  %828 = sub i32 0, %827
  %829 = add nsw i32 %812, %824
  %830 = load i32, i32* %10, align 4
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %831
  %833 = load i32, i32* %13, align 4
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %832, i64 0, i64 %834
  %836 = getelementptr inbounds [4 x i32], [4 x i32]* %835, i64 0, i64 0
  %837 = load i32, i32* %836, align 16
  %838 = sub i32 0, %837
  %839 = add i32 %828, %838
  %840 = sub nsw i32 %828, %837
  %841 = load i32, i32* %12, align 4
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %842
  %844 = load i32, i32* %11, align 4
  %845 = sub i32 0, 1
  %846 = add i32 %844, %845
  %847 = sub nsw i32 %844, 1
  %848 = sext i32 %846 to i64
  %849 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %843, i64 0, i64 %848
  %850 = getelementptr inbounds [4 x i32], [4 x i32]* %849, i64 0, i64 0
  %851 = load i32, i32* %850, align 16
  %852 = add i32 %839, -1274603459
  %853 = sub i32 %852, %851
  %854 = sub i32 %853, -1274603459
  %855 = sub nsw i32 %839, %851
  %856 = load i32, i32* %14, align 4
  %857 = add i32 %856, 1999223281
  %858 = sub i32 %857, %854
  %859 = sub i32 %858, 1999223281
  %860 = sub nsw i32 %856, %854
  store i32 %859, i32* %14, align 4
  %861 = load i32, i32* %12, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %862
  %864 = load i32, i32* %13, align 4
  %865 = sext i32 %864 to i64
  %866 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %863, i64 0, i64 %865
  %867 = getelementptr inbounds [4 x i32], [4 x i32]* %866, i64 0, i64 2
  %868 = load i32, i32* %867, align 8
  %869 = load i32, i32* %10, align 4
  %870 = sub i32 0, 1
  %871 = add i32 %869, %870
  %872 = sub nsw i32 %869, 1
  %873 = sext i32 %871 to i64
  %874 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %873
  %875 = load i32, i32* %11, align 4
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %874, i64 0, i64 %876
  %878 = getelementptr inbounds [4 x i32], [4 x i32]* %877, i64 0, i64 2
  %879 = load i32, i32* %878, align 8
  %880 = sub i32 0, %868
  %881 = sub i32 0, %879
  %882 = add i32 %880, %881
  %883 = sub i32 0, %882
  %884 = add nsw i32 %868, %879
  %885 = load i32, i32* %10, align 4
  %886 = sub i32 %885, -488928471
  %887 = sub i32 %886, 1
  %888 = add i32 %887, -488928471
  %889 = sub nsw i32 %885, 1
  %890 = sext i32 %888 to i64
  %891 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %890
  %892 = load i32, i32* %13, align 4
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %891, i64 0, i64 %893
  %895 = getelementptr inbounds [4 x i32], [4 x i32]* %894, i64 0, i64 2
  %896 = load i32, i32* %895, align 8
  %897 = add i32 %883, -962147471
  %898 = sub i32 %897, %896
  %899 = sub i32 %898, -962147471
  %900 = sub nsw i32 %883, %896
  %901 = load i32, i32* %12, align 4
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %902
  %904 = load i32, i32* %11, align 4
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %903, i64 0, i64 %905
  %907 = getelementptr inbounds [4 x i32], [4 x i32]* %906, i64 0, i64 2
  %908 = load i32, i32* %907, align 8
  %909 = sub i32 0, %908
  %910 = add i32 %899, %909
  %911 = sub nsw i32 %899, %908
  %912 = load i32, i32* %14, align 4
  %913 = add i32 %912, 1503935626
  %914 = sub i32 %913, %910
  %915 = sub i32 %914, 1503935626
  %916 = sub nsw i32 %912, %910
  store i32 %915, i32* %14, align 4
  %917 = load i32, i32* %14, align 4
  %918 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), i32 %917)
  store i32 2083840817, i32* %16
  br label %2225

; <label>:919:                                    ; preds = %17
  %920 = load i32, i32* @x.4
  %921 = load i32, i32* @y.5
  %922 = sub i32 0, 1
  %923 = add i32 %920, %922
  %924 = sub i32 %920, 1
  %925 = mul i32 %920, %923
  %926 = urem i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = icmp slt i32 %921, 10
  %929 = xor i1 %927, true
  %930 = xor i1 %928, true
  %931 = xor i1 false, true
  %932 = and i1 %929, false
  %933 = and i1 %927, %931
  %934 = and i1 %930, false
  %935 = and i1 %928, %931
  %936 = or i1 %932, %933
  %937 = or i1 %934, %935
  %938 = xor i1 %936, %937
  %939 = or i1 %929, %930
  %940 = xor i1 %939, true
  %941 = or i1 false, %931
  %942 = and i1 %940, %941
  %943 = or i1 %938, %942
  %944 = or i1 %927, %928
  %945 = select i1 %943, i32 -1860800970, i32 -1908951792
  store i32 %945, i32* %16
  br label %2225

; <label>:946:                                    ; preds = %17
  %947 = load i32, i32* %9, align 4
  %948 = sub i32 %947, 2018261690
  %949 = add i32 %948, 1
  %950 = add i32 %949, 2018261690
  %951 = add nsw i32 %947, 1
  store i32 %950, i32* %9, align 4
  %952 = load i32, i32* @x.4
  %953 = load i32, i32* @y.5
  %954 = sub i32 %952, 233632757
  %955 = sub i32 %954, 1
  %956 = add i32 %955, 233632757
  %957 = sub i32 %952, 1
  %958 = mul i32 %952, %956
  %959 = urem i32 %958, 2
  %960 = icmp eq i32 %959, 0
  %961 = icmp slt i32 %953, 10
  %962 = and i1 %960, %961
  %963 = xor i1 %960, %961
  %964 = or i1 %962, %963
  %965 = or i1 %960, %961
  %966 = select i1 %964, i32 1065976025, i32 -1908951792
  store i32 %966, i32* %16
  br label %2225

; <label>:967:                                    ; preds = %17
  store i32 -1231048997, i32* %16
  br label %2225

; <label>:968:                                    ; preds = %17
  ret i32 0

; <label>:969:                                    ; preds = %17
  %970 = load i32, i32* %4, align 4
  %971 = load i32, i32* @n, align 4
  %972 = icmp sle i32 %970, %971
  store i32 1928173787, i32* %16
  br label %2225

; <label>:973:                                    ; preds = %17
  %974 = getelementptr inbounds [2050 x i8], [2050 x i8]* %5, i32 0, i32 0
  %975 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* %974)
  store i32 1, i32* %6, align 4
  store i32 880213849, i32* %16
  br label %2225

; <label>:976:                                    ; preds = %17
  %977 = load i32, i32* %6, align 4
  %978 = sub i32 0, %977
  %979 = add i32 0, %978
  %980 = sub i32 0, %977
  %981 = sub i32 %979, 1220678018
  %982 = add i32 %981, 1
  %983 = add i32 %982, 1220678018
  %984 = add i32 %979, 1
  %985 = shl i32 %977, 1
  %986 = sub i32 0, 1
  %987 = add i32 %977, %986
  %988 = sub i32 %977, 1
  %989 = mul i32 %987, 1
  %990 = add i32 %977, -1418129692
  %991 = sub i32 %990, 1
  %992 = sub i32 %991, -1418129692
  %993 = sub nsw i32 %977, 1
  %994 = sext i32 %992 to i64
  %995 = getelementptr inbounds [2050 x i8], [2050 x i8]* %5, i64 0, i64 %994
  %996 = load i8, i8* %995, align 1
  %997 = sext i8 %996 to i32
  %998 = icmp eq i32 %997, 49
  %999 = load i32, i32* %4, align 4
  %1000 = sext i32 %999 to i64
  %1001 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1000
  %1002 = load i32, i32* %6, align 4
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1001, i64 0, i64 %1003
  %1005 = zext i1 %998 to i8
  store i8 %1005, i8* %1004, align 1
  store i32 -1991240368, i32* %16
  br label %2225

; <label>:1006:                                   ; preds = %17
  %1007 = load i32, i32* %4, align 4
  %1008 = shl i32 %1007, 1
  %1009 = add i32 %1007, 1882089153
  %1010 = add i32 %1009, 1
  %1011 = sub i32 %1010, 1882089153
  %1012 = add nsw i32 %1007, 1
  store i32 %1011, i32* %4, align 4
  store i32 153807727, i32* %16
  br label %2225

; <label>:1013:                                   ; preds = %17
  %1014 = load i32, i32* %8, align 4
  %1015 = load i32, i32* @m, align 4
  %1016 = icmp sle i32 %1014, %1015
  store i32 1927578678, i32* %16
  br label %2225

; <label>:1017:                                   ; preds = %17
  %1018 = load i32, i32* %7, align 4
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1019
  %1021 = load i32, i32* %8, align 4
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1020, i64 0, i64 %1022
  %1024 = load i8, i8* %1023, align 1
  %1025 = trunc i8 %1024 to i1
  %1026 = zext i1 %1025 to i32
  %1027 = load i32, i32* %7, align 4
  %1028 = sub i32 0, 2115932130
  %1029 = sub i32 %1028, %1027
  %1030 = add i32 %1029, 2115932130
  %1031 = sub i32 0, %1027
  %1032 = sub i32 0, 1
  %1033 = sub i32 %1030, %1032
  %1034 = add i32 %1030, 1
  %1035 = add i32 %1027, 2106151854
  %1036 = sub i32 %1035, 1
  %1037 = sub i32 %1036, 2106151854
  %1038 = sub i32 %1027, 1
  %1039 = mul i32 %1037, 1
  %1040 = add i32 %1027, -230569899
  %1041 = sub i32 %1040, 1
  %1042 = sub i32 %1041, -230569899
  %1043 = sub nsw i32 %1027, 1
  %1044 = sext i32 %1042 to i64
  %1045 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %1044
  %1046 = load i32, i32* %8, align 4
  %1047 = shl i32 %1046, 1
  %1048 = sub i32 0, 1
  %1049 = add i32 %1046, %1048
  %1050 = sub i32 %1046, 1
  %1051 = mul i32 %1049, 1
  %1052 = sub i32 0, 1
  %1053 = add i32 %1046, %1052
  %1054 = sub i32 %1046, 1
  %1055 = mul i32 %1053, 1
  %1056 = sub i32 0, 1032569059
  %1057 = sub i32 %1056, %1046
  %1058 = add i32 %1057, 1032569059
  %1059 = sub i32 0, %1046
  %1060 = sub i32 %1058, 56078601
  %1061 = add i32 %1060, 1
  %1062 = add i32 %1061, 56078601
  %1063 = add i32 %1058, 1
  %1064 = sub i32 0, %1046
  %1065 = add i32 0, %1064
  %1066 = sub i32 0, %1046
  %1067 = sub i32 %1065, -1606826925
  %1068 = add i32 %1067, 1
  %1069 = add i32 %1068, -1606826925
  %1070 = add i32 %1065, 1
  %1071 = add i32 0, -182656401
  %1072 = sub i32 %1071, %1046
  %1073 = sub i32 %1072, -182656401
  %1074 = sub i32 0, %1046
  %1075 = add i32 %1073, 521376772
  %1076 = add i32 %1075, 1
  %1077 = sub i32 %1076, 521376772
  %1078 = add i32 %1073, 1
  %1079 = shl i32 %1046, 1
  %1080 = sub i32 0, 1
  %1081 = add i32 %1046, %1080
  %1082 = sub nsw i32 %1046, 1
  %1083 = sext i32 %1081 to i64
  %1084 = getelementptr inbounds [2050 x i32], [2050 x i32]* %1045, i64 0, i64 %1083
  %1085 = load i32, i32* %1084, align 4
  %1086 = shl i32 %1026, %1085
  %1087 = sub i32 0, %1026
  %1088 = add i32 0, %1087
  %1089 = sub i32 0, %1026
  %1090 = sub i32 %1088, 2060051466
  %1091 = add i32 %1090, %1085
  %1092 = add i32 %1091, 2060051466
  %1093 = add i32 %1088, %1085
  %1094 = sub i32 %1026, 1996171725
  %1095 = sub i32 %1094, %1085
  %1096 = add i32 %1095, 1996171725
  %1097 = sub i32 %1026, %1085
  %1098 = mul i32 %1096, %1085
  %1099 = sub i32 0, 1115780854
  %1100 = sub i32 %1099, %1026
  %1101 = add i32 %1100, 1115780854
  %1102 = sub i32 0, %1026
  %1103 = add i32 %1101, 333540210
  %1104 = add i32 %1103, %1085
  %1105 = sub i32 %1104, 333540210
  %1106 = add i32 %1101, %1085
  %1107 = shl i32 %1026, %1085
  %1108 = add i32 0, -1790966967
  %1109 = sub i32 %1108, %1026
  %1110 = sub i32 %1109, -1790966967
  %1111 = sub i32 0, %1026
  %1112 = sub i32 %1110, -1878427373
  %1113 = add i32 %1112, %1085
  %1114 = add i32 %1113, -1878427373
  %1115 = add i32 %1110, %1085
  %1116 = sub i32 0, %1026
  %1117 = add i32 0, %1116
  %1118 = sub i32 0, %1026
  %1119 = sub i32 0, %1117
  %1120 = sub i32 0, %1085
  %1121 = add i32 %1119, %1120
  %1122 = sub i32 0, %1121
  %1123 = add i32 %1117, %1085
  %1124 = sub i32 0, %1085
  %1125 = add i32 %1026, %1124
  %1126 = sub nsw i32 %1026, %1085
  %1127 = load i32, i32* %7, align 4
  %1128 = sub i32 0, -142360800
  %1129 = sub i32 %1128, %1127
  %1130 = add i32 %1129, -142360800
  %1131 = sub i32 0, %1127
  %1132 = add i32 %1130, 4114255
  %1133 = add i32 %1132, 1
  %1134 = sub i32 %1133, 4114255
  %1135 = add i32 %1130, 1
  %1136 = add i32 0, -541695908
  %1137 = sub i32 %1136, %1127
  %1138 = sub i32 %1137, -541695908
  %1139 = sub i32 0, %1127
  %1140 = sub i32 0, 1
  %1141 = sub i32 %1138, %1140
  %1142 = add i32 %1138, 1
  %1143 = add i32 %1127, 767341638
  %1144 = sub i32 %1143, 1
  %1145 = sub i32 %1144, 767341638
  %1146 = sub nsw i32 %1127, 1
  %1147 = sext i32 %1145 to i64
  %1148 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %1147
  %1149 = load i32, i32* %8, align 4
  %1150 = sext i32 %1149 to i64
  %1151 = getelementptr inbounds [2050 x i32], [2050 x i32]* %1148, i64 0, i64 %1150
  %1152 = load i32, i32* %1151, align 4
  %1153 = shl i32 %1125, %1152
  %1154 = sub i32 %1125, -1278267235
  %1155 = add i32 %1154, %1152
  %1156 = add i32 %1155, -1278267235
  %1157 = add nsw i32 %1125, %1152
  %1158 = load i32, i32* %7, align 4
  %1159 = sext i32 %1158 to i64
  %1160 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %1159
  %1161 = load i32, i32* %8, align 4
  %1162 = sub i32 0, 250252026
  %1163 = sub i32 %1162, %1161
  %1164 = add i32 %1163, 250252026
  %1165 = sub i32 0, %1161
  %1166 = add i32 %1164, 398621615
  %1167 = add i32 %1166, 1
  %1168 = sub i32 %1167, 398621615
  %1169 = add i32 %1164, 1
  %1170 = sub i32 0, 1
  %1171 = add i32 %1161, %1170
  %1172 = sub nsw i32 %1161, 1
  %1173 = sext i32 %1171 to i64
  %1174 = getelementptr inbounds [2050 x i32], [2050 x i32]* %1160, i64 0, i64 %1173
  %1175 = load i32, i32* %1174, align 4
  %1176 = sub i32 0, -457352370
  %1177 = sub i32 %1176, %1156
  %1178 = add i32 %1177, -457352370
  %1179 = sub i32 0, %1156
  %1180 = sub i32 0, %1178
  %1181 = sub i32 0, %1175
  %1182 = add i32 %1180, %1181
  %1183 = sub i32 0, %1182
  %1184 = add i32 %1178, %1175
  %1185 = shl i32 %1156, %1175
  %1186 = sub i32 %1156, 1403877260
  %1187 = sub i32 %1186, %1175
  %1188 = add i32 %1187, 1403877260
  %1189 = sub i32 %1156, %1175
  %1190 = mul i32 %1188, %1175
  %1191 = sub i32 0, %1156
  %1192 = sub i32 0, %1175
  %1193 = add i32 %1191, %1192
  %1194 = sub i32 0, %1193
  %1195 = add nsw i32 %1156, %1175
  %1196 = load i32, i32* %7, align 4
  %1197 = sext i32 %1196 to i64
  %1198 = getelementptr inbounds [2050 x [2050 x i32]], [2050 x [2050 x i32]]* @tot, i64 0, i64 %1197
  %1199 = load i32, i32* %8, align 4
  %1200 = sext i32 %1199 to i64
  %1201 = getelementptr inbounds [2050 x i32], [2050 x i32]* %1198, i64 0, i64 %1200
  store i32 %1194, i32* %1201, align 4
  %1202 = load i32, i32* %7, align 4
  %1203 = sext i32 %1202 to i64
  %1204 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1203
  %1205 = load i32, i32* %8, align 4
  %1206 = sext i32 %1205 to i64
  %1207 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1204, i64 0, i64 %1206
  %1208 = load i8, i8* %1207, align 1
  %1209 = trunc i8 %1208 to i1
  %1210 = zext i1 %1209 to i32
  %1211 = load i32, i32* %7, align 4
  %1212 = add i32 %1211, 1518754568
  %1213 = sub i32 %1212, 1
  %1214 = sub i32 %1213, 1518754568
  %1215 = sub i32 %1211, 1
  %1216 = mul i32 %1214, 1
  %1217 = add i32 %1211, 1812158540
  %1218 = sub i32 %1217, 1
  %1219 = sub i32 %1218, 1812158540
  %1220 = sub i32 %1211, 1
  %1221 = mul i32 %1219, 1
  %1222 = add i32 %1211, -1283301469
  %1223 = sub i32 %1222, 1
  %1224 = sub i32 %1223, -1283301469
  %1225 = sub nsw i32 %1211, 1
  %1226 = sext i32 %1224 to i64
  %1227 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1226
  %1228 = load i32, i32* %8, align 4
  %1229 = sext i32 %1228 to i64
  %1230 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1227, i64 0, i64 %1229
  %1231 = load i8, i8* %1230, align 1
  %1232 = trunc i8 %1231 to i1
  %1233 = zext i1 %1232 to i32
  %1234 = add i32 0, -144010870
  %1235 = sub i32 %1234, %1210
  %1236 = sub i32 %1235, -144010870
  %1237 = sub i32 0, %1210
  %1238 = sub i32 %1236, 1606796338
  %1239 = add i32 %1238, %1233
  %1240 = add i32 %1239, 1606796338
  %1241 = add i32 %1236, %1233
  %1242 = sub i32 0, %1233
  %1243 = add i32 %1210, %1242
  %1244 = sub i32 %1210, %1233
  %1245 = mul i32 %1243, %1233
  %1246 = xor i32 %1210, -1
  %1247 = xor i32 %1233, -1
  %1248 = xor i32 -290984312, -1
  %1249 = or i32 %1246, %1247
  %1250 = or i32 -290984312, %1248
  %1251 = xor i32 %1249, -1
  %1252 = and i32 %1251, %1250
  %1253 = and i32 %1210, %1233
  %1254 = load i32, i32* %7, align 4
  %1255 = sub i32 0, 681225968
  %1256 = sub i32 %1255, %1254
  %1257 = add i32 %1256, 681225968
  %1258 = sub i32 0, %1254
  %1259 = sub i32 %1257, -639898903
  %1260 = add i32 %1259, 1
  %1261 = add i32 %1260, -639898903
  %1262 = add i32 %1257, 1
  %1263 = sub i32 %1254, -760043741
  %1264 = sub i32 %1263, 1
  %1265 = add i32 %1264, -760043741
  %1266 = sub nsw i32 %1254, 1
  %1267 = sext i32 %1265 to i64
  %1268 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1267
  %1269 = load i32, i32* %8, align 4
  %1270 = shl i32 %1269, 1
  %1271 = sub i32 0, 1
  %1272 = add i32 %1269, %1271
  %1273 = sub nsw i32 %1269, 1
  %1274 = sext i32 %1272 to i64
  %1275 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1268, i64 0, i64 %1274
  %1276 = getelementptr inbounds [4 x i32], [4 x i32]* %1275, i64 0, i64 0
  %1277 = load i32, i32* %1276, align 16
  %1278 = shl i32 %1252, %1277
  %1279 = shl i32 %1252, %1277
  %1280 = add i32 %1252, 1300436017
  %1281 = sub i32 %1280, %1277
  %1282 = sub i32 %1281, 1300436017
  %1283 = sub i32 %1252, %1277
  %1284 = mul i32 %1282, %1277
  %1285 = sub i32 %1252, -1981989856
  %1286 = sub i32 %1285, %1277
  %1287 = add i32 %1286, -1981989856
  %1288 = sub i32 %1252, %1277
  %1289 = mul i32 %1287, %1277
  %1290 = sub i32 0, 1981767016
  %1291 = sub i32 %1290, %1252
  %1292 = add i32 %1291, 1981767016
  %1293 = sub i32 0, %1252
  %1294 = sub i32 0, %1292
  %1295 = sub i32 0, %1277
  %1296 = add i32 %1294, %1295
  %1297 = sub i32 0, %1296
  %1298 = add i32 %1292, %1277
  %1299 = add i32 0, -881300674
  %1300 = sub i32 %1299, %1252
  %1301 = sub i32 %1300, -881300674
  %1302 = sub i32 0, %1252
  %1303 = sub i32 0, %1301
  %1304 = sub i32 0, %1277
  %1305 = add i32 %1303, %1304
  %1306 = sub i32 0, %1305
  %1307 = add i32 %1301, %1277
  %1308 = sub i32 %1252, 466373780
  %1309 = sub i32 %1308, %1277
  %1310 = add i32 %1309, 466373780
  %1311 = sub nsw i32 %1252, %1277
  %1312 = load i32, i32* %7, align 4
  %1313 = add i32 0, 2102020631
  %1314 = sub i32 %1313, %1312
  %1315 = sub i32 %1314, 2102020631
  %1316 = sub i32 0, %1312
  %1317 = sub i32 %1315, 1239341619
  %1318 = add i32 %1317, 1
  %1319 = add i32 %1318, 1239341619
  %1320 = add i32 %1315, 1
  %1321 = shl i32 %1312, 1
  %1322 = sub i32 %1312, 918562916
  %1323 = sub i32 %1322, 1
  %1324 = add i32 %1323, 918562916
  %1325 = sub i32 %1312, 1
  %1326 = mul i32 %1324, 1
  %1327 = add i32 %1312, 715147943
  %1328 = sub i32 %1327, 1
  %1329 = sub i32 %1328, 715147943
  %1330 = sub i32 %1312, 1
  %1331 = mul i32 %1329, 1
  %1332 = shl i32 %1312, 1
  %1333 = sub i32 0, 1
  %1334 = add i32 %1312, %1333
  %1335 = sub i32 %1312, 1
  %1336 = mul i32 %1334, 1
  %1337 = sub i32 %1312, -1622104500
  %1338 = sub i32 %1337, 1
  %1339 = add i32 %1338, -1622104500
  %1340 = sub nsw i32 %1312, 1
  %1341 = sext i32 %1339 to i64
  %1342 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1341
  %1343 = load i32, i32* %8, align 4
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1342, i64 0, i64 %1344
  %1346 = getelementptr inbounds [4 x i32], [4 x i32]* %1345, i64 0, i64 0
  %1347 = load i32, i32* %1346, align 16
  %1348 = sub i32 0, %1310
  %1349 = add i32 0, %1348
  %1350 = sub i32 0, %1310
  %1351 = sub i32 %1349, 374089688
  %1352 = add i32 %1351, %1347
  %1353 = add i32 %1352, 374089688
  %1354 = add i32 %1349, %1347
  %1355 = sub i32 0, %1347
  %1356 = sub i32 %1310, %1355
  %1357 = add nsw i32 %1310, %1347
  %1358 = load i32, i32* %7, align 4
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1359
  %1361 = load i32, i32* %8, align 4
  %1362 = add i32 %1361, -1676871553
  %1363 = sub i32 %1362, 1
  %1364 = sub i32 %1363, -1676871553
  %1365 = sub i32 %1361, 1
  %1366 = mul i32 %1364, 1
  %1367 = shl i32 %1361, 1
  %1368 = sub i32 0, 1
  %1369 = add i32 %1361, %1368
  %1370 = sub i32 %1361, 1
  %1371 = mul i32 %1369, 1
  %1372 = sub i32 %1361, 865465970
  %1373 = sub i32 %1372, 1
  %1374 = add i32 %1373, 865465970
  %1375 = sub nsw i32 %1361, 1
  %1376 = sext i32 %1374 to i64
  %1377 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1360, i64 0, i64 %1376
  %1378 = getelementptr inbounds [4 x i32], [4 x i32]* %1377, i64 0, i64 0
  %1379 = load i32, i32* %1378, align 16
  %1380 = shl i32 %1356, %1379
  %1381 = sub i32 %1356, -2132119309
  %1382 = sub i32 %1381, %1379
  %1383 = add i32 %1382, -2132119309
  %1384 = sub i32 %1356, %1379
  %1385 = mul i32 %1383, %1379
  %1386 = sub i32 0, 1796042272
  %1387 = sub i32 %1386, %1356
  %1388 = add i32 %1387, 1796042272
  %1389 = sub i32 0, %1356
  %1390 = sub i32 0, %1379
  %1391 = sub i32 %1388, %1390
  %1392 = add i32 %1388, %1379
  %1393 = shl i32 %1356, %1379
  %1394 = sub i32 0, %1379
  %1395 = add i32 %1356, %1394
  %1396 = sub i32 %1356, %1379
  %1397 = mul i32 %1395, %1379
  %1398 = sub i32 0, %1356
  %1399 = add i32 0, %1398
  %1400 = sub i32 0, %1356
  %1401 = sub i32 %1399, -1356893799
  %1402 = add i32 %1401, %1379
  %1403 = add i32 %1402, -1356893799
  %1404 = add i32 %1399, %1379
  %1405 = add i32 %1356, -702566759
  %1406 = sub i32 %1405, %1379
  %1407 = sub i32 %1406, -702566759
  %1408 = sub i32 %1356, %1379
  %1409 = mul i32 %1407, %1379
  %1410 = sub i32 0, -1079659782
  %1411 = sub i32 %1410, %1356
  %1412 = add i32 %1411, -1079659782
  %1413 = sub i32 0, %1356
  %1414 = sub i32 %1412, -1634027167
  %1415 = add i32 %1414, %1379
  %1416 = add i32 %1415, -1634027167
  %1417 = add i32 %1412, %1379
  %1418 = shl i32 %1356, %1379
  %1419 = sub i32 0, %1379
  %1420 = sub i32 %1356, %1419
  %1421 = add nsw i32 %1356, %1379
  %1422 = load i32, i32* %7, align 4
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1423
  %1425 = load i32, i32* %8, align 4
  %1426 = sext i32 %1425 to i64
  %1427 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1424, i64 0, i64 %1426
  %1428 = getelementptr inbounds [4 x i32], [4 x i32]* %1427, i64 0, i64 0
  store i32 %1420, i32* %1428, align 16
  %1429 = load i32, i32* %7, align 4
  %1430 = sext i32 %1429 to i64
  %1431 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1430
  %1432 = load i32, i32* %8, align 4
  %1433 = sext i32 %1432 to i64
  %1434 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1431, i64 0, i64 %1433
  %1435 = load i8, i8* %1434, align 1
  %1436 = trunc i8 %1435 to i1
  %1437 = zext i1 %1436 to i32
  %1438 = load i32, i32* %7, align 4
  %1439 = shl i32 %1438, 1
  %1440 = shl i32 %1438, 1
  %1441 = add i32 %1438, 1668525910
  %1442 = add i32 %1441, 1
  %1443 = sub i32 %1442, 1668525910
  %1444 = add nsw i32 %1438, 1
  %1445 = sext i32 %1443 to i64
  %1446 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1445
  %1447 = load i32, i32* %8, align 4
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1446, i64 0, i64 %1448
  %1450 = load i8, i8* %1449, align 1
  %1451 = trunc i8 %1450 to i1
  %1452 = zext i1 %1451 to i32
  %1453 = xor i32 %1437, -1
  %1454 = xor i32 %1452, -1
  %1455 = xor i32 1098278539, -1
  %1456 = or i32 %1453, %1454
  %1457 = or i32 1098278539, %1455
  %1458 = xor i32 %1456, -1
  %1459 = and i32 %1458, %1457
  %1460 = and i32 %1437, %1452
  %1461 = load i32, i32* %7, align 4
  %1462 = shl i32 %1461, 1
  %1463 = shl i32 %1461, 1
  %1464 = sub i32 0, 1122462291
  %1465 = sub i32 %1464, %1461
  %1466 = add i32 %1465, 1122462291
  %1467 = sub i32 0, %1461
  %1468 = sub i32 0, 1
  %1469 = sub i32 %1466, %1468
  %1470 = add i32 %1466, 1
  %1471 = shl i32 %1461, 1
  %1472 = sub i32 %1461, -1977373739
  %1473 = sub i32 %1472, 1
  %1474 = add i32 %1473, -1977373739
  %1475 = sub nsw i32 %1461, 1
  %1476 = sext i32 %1474 to i64
  %1477 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1476
  %1478 = load i32, i32* %8, align 4
  %1479 = sub i32 0, %1478
  %1480 = add i32 0, %1479
  %1481 = sub i32 0, %1478
  %1482 = sub i32 %1480, 291969701
  %1483 = add i32 %1482, 1
  %1484 = add i32 %1483, 291969701
  %1485 = add i32 %1480, 1
  %1486 = sub i32 0, %1478
  %1487 = add i32 0, %1486
  %1488 = sub i32 0, %1478
  %1489 = sub i32 0, 1
  %1490 = sub i32 %1487, %1489
  %1491 = add i32 %1487, 1
  %1492 = sub i32 %1478, 2024117379
  %1493 = sub i32 %1492, 1
  %1494 = add i32 %1493, 2024117379
  %1495 = sub nsw i32 %1478, 1
  %1496 = sext i32 %1494 to i64
  %1497 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1477, i64 0, i64 %1496
  %1498 = getelementptr inbounds [4 x i32], [4 x i32]* %1497, i64 0, i64 1
  %1499 = load i32, i32* %1498, align 4
  %1500 = sub i32 0, %1459
  %1501 = add i32 0, %1500
  %1502 = sub i32 0, %1459
  %1503 = sub i32 0, %1501
  %1504 = sub i32 0, %1499
  %1505 = add i32 %1503, %1504
  %1506 = sub i32 0, %1505
  %1507 = add i32 %1501, %1499
  %1508 = shl i32 %1459, %1499
  %1509 = shl i32 %1459, %1499
  %1510 = sub i32 0, %1499
  %1511 = add i32 %1459, %1510
  %1512 = sub nsw i32 %1459, %1499
  %1513 = load i32, i32* %7, align 4
  %1514 = shl i32 %1513, 1
  %1515 = add i32 0, -368009755
  %1516 = sub i32 %1515, %1513
  %1517 = sub i32 %1516, -368009755
  %1518 = sub i32 0, %1513
  %1519 = add i32 %1517, 30892364
  %1520 = add i32 %1519, 1
  %1521 = sub i32 %1520, 30892364
  %1522 = add i32 %1517, 1
  %1523 = sub i32 0, 1
  %1524 = add i32 %1513, %1523
  %1525 = sub nsw i32 %1513, 1
  %1526 = sext i32 %1524 to i64
  %1527 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1526
  %1528 = load i32, i32* %8, align 4
  %1529 = sext i32 %1528 to i64
  %1530 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1527, i64 0, i64 %1529
  %1531 = getelementptr inbounds [4 x i32], [4 x i32]* %1530, i64 0, i64 1
  %1532 = load i32, i32* %1531, align 4
  %1533 = sub i32 0, %1532
  %1534 = add i32 %1511, %1533
  %1535 = sub i32 %1511, %1532
  %1536 = mul i32 %1534, %1532
  %1537 = shl i32 %1511, %1532
  %1538 = sub i32 %1511, 1481576928
  %1539 = sub i32 %1538, %1532
  %1540 = add i32 %1539, 1481576928
  %1541 = sub i32 %1511, %1532
  %1542 = mul i32 %1540, %1532
  %1543 = add i32 %1511, -1099843958
  %1544 = sub i32 %1543, %1532
  %1545 = sub i32 %1544, -1099843958
  %1546 = sub i32 %1511, %1532
  %1547 = mul i32 %1545, %1532
  %1548 = shl i32 %1511, %1532
  %1549 = sub i32 0, %1511
  %1550 = add i32 0, %1549
  %1551 = sub i32 0, %1511
  %1552 = sub i32 %1550, 1898438734
  %1553 = add i32 %1552, %1532
  %1554 = add i32 %1553, 1898438734
  %1555 = add i32 %1550, %1532
  %1556 = add i32 %1511, 1348645519
  %1557 = add i32 %1556, %1532
  %1558 = sub i32 %1557, 1348645519
  %1559 = add nsw i32 %1511, %1532
  %1560 = load i32, i32* %7, align 4
  %1561 = sext i32 %1560 to i64
  %1562 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1561
  %1563 = load i32, i32* %8, align 4
  %1564 = add i32 0, -2039312498
  %1565 = sub i32 %1564, %1563
  %1566 = sub i32 %1565, -2039312498
  %1567 = sub i32 0, %1563
  %1568 = add i32 %1566, 1635090724
  %1569 = add i32 %1568, 1
  %1570 = sub i32 %1569, 1635090724
  %1571 = add i32 %1566, 1
  %1572 = sub i32 0, 1
  %1573 = add i32 %1563, %1572
  %1574 = sub i32 %1563, 1
  %1575 = mul i32 %1573, 1
  %1576 = sub i32 %1563, 1348302209
  %1577 = sub i32 %1576, 1
  %1578 = add i32 %1577, 1348302209
  %1579 = sub i32 %1563, 1
  %1580 = mul i32 %1578, 1
  %1581 = shl i32 %1563, 1
  %1582 = sub i32 0, 1
  %1583 = add i32 %1563, %1582
  %1584 = sub i32 %1563, 1
  %1585 = mul i32 %1583, 1
  %1586 = shl i32 %1563, 1
  %1587 = sub i32 0, 1
  %1588 = add i32 %1563, %1587
  %1589 = sub i32 %1563, 1
  %1590 = mul i32 %1588, 1
  %1591 = add i32 0, 2108580130
  %1592 = sub i32 %1591, %1563
  %1593 = sub i32 %1592, 2108580130
  %1594 = sub i32 0, %1563
  %1595 = sub i32 0, 1
  %1596 = sub i32 %1593, %1595
  %1597 = add i32 %1593, 1
  %1598 = add i32 %1563, -1955038974
  %1599 = sub i32 %1598, 1
  %1600 = sub i32 %1599, -1955038974
  %1601 = sub nsw i32 %1563, 1
  %1602 = sext i32 %1600 to i64
  %1603 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1562, i64 0, i64 %1602
  %1604 = getelementptr inbounds [4 x i32], [4 x i32]* %1603, i64 0, i64 1
  %1605 = load i32, i32* %1604, align 4
  %1606 = sub i32 0, %1605
  %1607 = add i32 %1558, %1606
  %1608 = sub i32 %1558, %1605
  %1609 = mul i32 %1607, %1605
  %1610 = sub i32 0, 500305386
  %1611 = sub i32 %1610, %1558
  %1612 = add i32 %1611, 500305386
  %1613 = sub i32 0, %1558
  %1614 = sub i32 %1612, -2076206053
  %1615 = add i32 %1614, %1605
  %1616 = add i32 %1615, -2076206053
  %1617 = add i32 %1612, %1605
  %1618 = shl i32 %1558, %1605
  %1619 = sub i32 %1558, -1564897805
  %1620 = add i32 %1619, %1605
  %1621 = add i32 %1620, -1564897805
  %1622 = add nsw i32 %1558, %1605
  %1623 = load i32, i32* %7, align 4
  %1624 = sext i32 %1623 to i64
  %1625 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1624
  %1626 = load i32, i32* %8, align 4
  %1627 = sext i32 %1626 to i64
  %1628 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1625, i64 0, i64 %1627
  %1629 = getelementptr inbounds [4 x i32], [4 x i32]* %1628, i64 0, i64 1
  store i32 %1621, i32* %1629, align 4
  %1630 = load i32, i32* %7, align 4
  %1631 = sext i32 %1630 to i64
  %1632 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1631
  %1633 = load i32, i32* %8, align 4
  %1634 = sext i32 %1633 to i64
  %1635 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1632, i64 0, i64 %1634
  %1636 = load i8, i8* %1635, align 1
  %1637 = trunc i8 %1636 to i1
  %1638 = zext i1 %1637 to i32
  %1639 = load i32, i32* %7, align 4
  %1640 = sext i32 %1639 to i64
  %1641 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1640
  %1642 = load i32, i32* %8, align 4
  %1643 = add i32 0, -1114051228
  %1644 = sub i32 %1643, %1642
  %1645 = sub i32 %1644, -1114051228
  %1646 = sub i32 0, %1642
  %1647 = sub i32 %1645, -1579755848
  %1648 = add i32 %1647, 1
  %1649 = add i32 %1648, -1579755848
  %1650 = add i32 %1645, 1
  %1651 = sub i32 %1642, 99963596
  %1652 = sub i32 %1651, 1
  %1653 = add i32 %1652, 99963596
  %1654 = sub nsw i32 %1642, 1
  %1655 = sext i32 %1653 to i64
  %1656 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1641, i64 0, i64 %1655
  %1657 = load i8, i8* %1656, align 1
  %1658 = trunc i8 %1657 to i1
  %1659 = zext i1 %1658 to i32
  %1660 = add i32 0, -1360178794
  %1661 = sub i32 %1660, %1638
  %1662 = sub i32 %1661, -1360178794
  %1663 = sub i32 0, %1638
  %1664 = sub i32 %1662, 1903575755
  %1665 = add i32 %1664, %1659
  %1666 = add i32 %1665, 1903575755
  %1667 = add i32 %1662, %1659
  %1668 = shl i32 %1638, %1659
  %1669 = add i32 0, 2004121153
  %1670 = sub i32 %1669, %1638
  %1671 = sub i32 %1670, 2004121153
  %1672 = sub i32 0, %1638
  %1673 = add i32 %1671, -888845047
  %1674 = add i32 %1673, %1659
  %1675 = sub i32 %1674, -888845047
  %1676 = add i32 %1671, %1659
  %1677 = shl i32 %1638, %1659
  %1678 = add i32 0, -1527711238
  %1679 = sub i32 %1678, %1638
  %1680 = sub i32 %1679, -1527711238
  %1681 = sub i32 0, %1638
  %1682 = sub i32 0, %1659
  %1683 = sub i32 %1680, %1682
  %1684 = add i32 %1680, %1659
  %1685 = shl i32 %1638, %1659
  %1686 = sub i32 0, -406386148
  %1687 = sub i32 %1686, %1638
  %1688 = add i32 %1687, -406386148
  %1689 = sub i32 0, %1638
  %1690 = sub i32 0, %1688
  %1691 = sub i32 0, %1659
  %1692 = add i32 %1690, %1691
  %1693 = sub i32 0, %1692
  %1694 = add i32 %1688, %1659
  %1695 = sub i32 %1638, 1550839057
  %1696 = sub i32 %1695, %1659
  %1697 = add i32 %1696, 1550839057
  %1698 = sub i32 %1638, %1659
  %1699 = mul i32 %1697, %1659
  %1700 = xor i32 %1659, -1
  %1701 = xor i32 %1638, %1700
  %1702 = and i32 %1701, %1638
  %1703 = and i32 %1638, %1659
  %1704 = load i32, i32* %7, align 4
  %1705 = sub i32 %1704, 587238875
  %1706 = sub i32 %1705, 1
  %1707 = add i32 %1706, 587238875
  %1708 = sub i32 %1704, 1
  %1709 = mul i32 %1707, 1
  %1710 = shl i32 %1704, 1
  %1711 = sub i32 0, 1
  %1712 = add i32 %1704, %1711
  %1713 = sub nsw i32 %1704, 1
  %1714 = sext i32 %1712 to i64
  %1715 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1714
  %1716 = load i32, i32* %8, align 4
  %1717 = add i32 0, 1374063239
  %1718 = sub i32 %1717, %1716
  %1719 = sub i32 %1718, 1374063239
  %1720 = sub i32 0, %1716
  %1721 = sub i32 %1719, 1142742732
  %1722 = add i32 %1721, 1
  %1723 = add i32 %1722, 1142742732
  %1724 = add i32 %1719, 1
  %1725 = add i32 %1716, 79013662
  %1726 = sub i32 %1725, 1
  %1727 = sub i32 %1726, 79013662
  %1728 = sub i32 %1716, 1
  %1729 = mul i32 %1727, 1
  %1730 = sub i32 0, 1
  %1731 = add i32 %1716, %1730
  %1732 = sub i32 %1716, 1
  %1733 = mul i32 %1731, 1
  %1734 = add i32 %1716, -1174312521
  %1735 = sub i32 %1734, 1
  %1736 = sub i32 %1735, -1174312521
  %1737 = sub nsw i32 %1716, 1
  %1738 = sext i32 %1736 to i64
  %1739 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1715, i64 0, i64 %1738
  %1740 = getelementptr inbounds [4 x i32], [4 x i32]* %1739, i64 0, i64 2
  %1741 = load i32, i32* %1740, align 8
  %1742 = add i32 0, 2084901851
  %1743 = sub i32 %1742, %1702
  %1744 = sub i32 %1743, 2084901851
  %1745 = sub i32 0, %1702
  %1746 = sub i32 %1744, -282665350
  %1747 = add i32 %1746, %1741
  %1748 = add i32 %1747, -282665350
  %1749 = add i32 %1744, %1741
  %1750 = sub i32 0, %1702
  %1751 = add i32 0, %1750
  %1752 = sub i32 0, %1702
  %1753 = add i32 %1751, -1093470287
  %1754 = add i32 %1753, %1741
  %1755 = sub i32 %1754, -1093470287
  %1756 = add i32 %1751, %1741
  %1757 = add i32 %1702, 1170272959
  %1758 = sub i32 %1757, %1741
  %1759 = sub i32 %1758, 1170272959
  %1760 = sub i32 %1702, %1741
  %1761 = mul i32 %1759, %1741
  %1762 = shl i32 %1702, %1741
  %1763 = sub i32 %1702, -800141307
  %1764 = sub i32 %1763, %1741
  %1765 = add i32 %1764, -800141307
  %1766 = sub nsw i32 %1702, %1741
  %1767 = load i32, i32* %7, align 4
  %1768 = shl i32 %1767, 1
  %1769 = sub i32 0, %1767
  %1770 = add i32 0, %1769
  %1771 = sub i32 0, %1767
  %1772 = sub i32 0, 1
  %1773 = sub i32 %1770, %1772
  %1774 = add i32 %1770, 1
  %1775 = add i32 0, 827719695
  %1776 = sub i32 %1775, %1767
  %1777 = sub i32 %1776, 827719695
  %1778 = sub i32 0, %1767
  %1779 = sub i32 0, %1777
  %1780 = sub i32 0, 1
  %1781 = add i32 %1779, %1780
  %1782 = sub i32 0, %1781
  %1783 = add i32 %1777, 1
  %1784 = sub i32 0, -1252758839
  %1785 = sub i32 %1784, %1767
  %1786 = add i32 %1785, -1252758839
  %1787 = sub i32 0, %1767
  %1788 = sub i32 %1786, -1671198274
  %1789 = add i32 %1788, 1
  %1790 = add i32 %1789, -1671198274
  %1791 = add i32 %1786, 1
  %1792 = add i32 %1767, -1780956966
  %1793 = sub i32 %1792, 1
  %1794 = sub i32 %1793, -1780956966
  %1795 = sub i32 %1767, 1
  %1796 = mul i32 %1794, 1
  %1797 = add i32 %1767, -2109089462
  %1798 = sub i32 %1797, 1
  %1799 = sub i32 %1798, -2109089462
  %1800 = sub i32 %1767, 1
  %1801 = mul i32 %1799, 1
  %1802 = shl i32 %1767, 1
  %1803 = sub i32 %1767, 2119385228
  %1804 = sub i32 %1803, 1
  %1805 = add i32 %1804, 2119385228
  %1806 = sub i32 %1767, 1
  %1807 = mul i32 %1805, 1
  %1808 = shl i32 %1767, 1
  %1809 = add i32 %1767, 1042525255
  %1810 = sub i32 %1809, 1
  %1811 = sub i32 %1810, 1042525255
  %1812 = sub nsw i32 %1767, 1
  %1813 = sext i32 %1811 to i64
  %1814 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1813
  %1815 = load i32, i32* %8, align 4
  %1816 = sext i32 %1815 to i64
  %1817 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1814, i64 0, i64 %1816
  %1818 = getelementptr inbounds [4 x i32], [4 x i32]* %1817, i64 0, i64 2
  %1819 = load i32, i32* %1818, align 8
  %1820 = shl i32 %1765, %1819
  %1821 = shl i32 %1765, %1819
  %1822 = sub i32 %1765, 672596749
  %1823 = sub i32 %1822, %1819
  %1824 = add i32 %1823, 672596749
  %1825 = sub i32 %1765, %1819
  %1826 = mul i32 %1824, %1819
  %1827 = add i32 %1765, 1478546934
  %1828 = sub i32 %1827, %1819
  %1829 = sub i32 %1828, 1478546934
  %1830 = sub i32 %1765, %1819
  %1831 = mul i32 %1829, %1819
  %1832 = add i32 %1765, -102747078
  %1833 = sub i32 %1832, %1819
  %1834 = sub i32 %1833, -102747078
  %1835 = sub i32 %1765, %1819
  %1836 = mul i32 %1834, %1819
  %1837 = sub i32 %1765, -2137270012
  %1838 = sub i32 %1837, %1819
  %1839 = add i32 %1838, -2137270012
  %1840 = sub i32 %1765, %1819
  %1841 = mul i32 %1839, %1819
  %1842 = sub i32 0, -444544902
  %1843 = sub i32 %1842, %1765
  %1844 = add i32 %1843, -444544902
  %1845 = sub i32 0, %1765
  %1846 = sub i32 0, %1844
  %1847 = sub i32 0, %1819
  %1848 = add i32 %1846, %1847
  %1849 = sub i32 0, %1848
  %1850 = add i32 %1844, %1819
  %1851 = sub i32 0, %1819
  %1852 = sub i32 %1765, %1851
  %1853 = add nsw i32 %1765, %1819
  %1854 = load i32, i32* %7, align 4
  %1855 = sext i32 %1854 to i64
  %1856 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1855
  %1857 = load i32, i32* %8, align 4
  %1858 = add i32 0, 1413780681
  %1859 = sub i32 %1858, %1857
  %1860 = sub i32 %1859, 1413780681
  %1861 = sub i32 0, %1857
  %1862 = sub i32 0, %1860
  %1863 = sub i32 0, 1
  %1864 = add i32 %1862, %1863
  %1865 = sub i32 0, %1864
  %1866 = add i32 %1860, 1
  %1867 = sub i32 %1857, -1044782381
  %1868 = sub i32 %1867, 1
  %1869 = add i32 %1868, -1044782381
  %1870 = sub i32 %1857, 1
  %1871 = mul i32 %1869, 1
  %1872 = sub i32 0, -1905779955
  %1873 = sub i32 %1872, %1857
  %1874 = add i32 %1873, -1905779955
  %1875 = sub i32 0, %1857
  %1876 = sub i32 %1874, -2010110717
  %1877 = add i32 %1876, 1
  %1878 = add i32 %1877, -2010110717
  %1879 = add i32 %1874, 1
  %1880 = shl i32 %1857, 1
  %1881 = add i32 0, -1313928660
  %1882 = sub i32 %1881, %1857
  %1883 = sub i32 %1882, -1313928660
  %1884 = sub i32 0, %1857
  %1885 = sub i32 0, 1
  %1886 = sub i32 %1883, %1885
  %1887 = add i32 %1883, 1
  %1888 = shl i32 %1857, 1
  %1889 = sub i32 0, %1857
  %1890 = add i32 0, %1889
  %1891 = sub i32 0, %1857
  %1892 = add i32 %1890, -1620654149
  %1893 = add i32 %1892, 1
  %1894 = sub i32 %1893, -1620654149
  %1895 = add i32 %1890, 1
  %1896 = sub i32 %1857, 1062062690
  %1897 = sub i32 %1896, 1
  %1898 = add i32 %1897, 1062062690
  %1899 = sub nsw i32 %1857, 1
  %1900 = sext i32 %1898 to i64
  %1901 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1856, i64 0, i64 %1900
  %1902 = getelementptr inbounds [4 x i32], [4 x i32]* %1901, i64 0, i64 2
  %1903 = load i32, i32* %1902, align 8
  %1904 = sub i32 0, %1852
  %1905 = add i32 0, %1904
  %1906 = sub i32 0, %1852
  %1907 = add i32 %1905, 106666630
  %1908 = add i32 %1907, %1903
  %1909 = sub i32 %1908, 106666630
  %1910 = add i32 %1905, %1903
  %1911 = add i32 0, 709842858
  %1912 = sub i32 %1911, %1852
  %1913 = sub i32 %1912, 709842858
  %1914 = sub i32 0, %1852
  %1915 = sub i32 %1913, -1524600849
  %1916 = add i32 %1915, %1903
  %1917 = add i32 %1916, -1524600849
  %1918 = add i32 %1913, %1903
  %1919 = sub i32 %1852, -1712881505
  %1920 = add i32 %1919, %1903
  %1921 = add i32 %1920, -1712881505
  %1922 = add nsw i32 %1852, %1903
  %1923 = load i32, i32* %7, align 4
  %1924 = sext i32 %1923 to i64
  %1925 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %1924
  %1926 = load i32, i32* %8, align 4
  %1927 = sext i32 %1926 to i64
  %1928 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %1925, i64 0, i64 %1927
  %1929 = getelementptr inbounds [4 x i32], [4 x i32]* %1928, i64 0, i64 2
  store i32 %1921, i32* %1929, align 8
  %1930 = load i32, i32* %7, align 4
  %1931 = sext i32 %1930 to i64
  %1932 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1931
  %1933 = load i32, i32* %8, align 4
  %1934 = sext i32 %1933 to i64
  %1935 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1932, i64 0, i64 %1934
  %1936 = load i8, i8* %1935, align 1
  %1937 = trunc i8 %1936 to i1
  %1938 = zext i1 %1937 to i32
  %1939 = load i32, i32* %7, align 4
  %1940 = sext i32 %1939 to i64
  %1941 = getelementptr inbounds [2050 x [2050 x i8]], [2050 x [2050 x i8]]* @color, i64 0, i64 %1940
  %1942 = load i32, i32* %8, align 4
  %1943 = sub i32 %1942, 1418369378
  %1944 = sub i32 %1943, 1
  %1945 = add i32 %1944, 1418369378
  %1946 = sub i32 %1942, 1
  %1947 = mul i32 %1945, 1
  %1948 = add i32 0, -1813126038
  %1949 = sub i32 %1948, %1942
  %1950 = sub i32 %1949, -1813126038
  %1951 = sub i32 0, %1942
  %1952 = add i32 %1950, 2010071325
  %1953 = add i32 %1952, 1
  %1954 = sub i32 %1953, 2010071325
  %1955 = add i32 %1950, 1
  %1956 = sub i32 %1942, -6243593
  %1957 = sub i32 %1956, 1
  %1958 = add i32 %1957, -6243593
  %1959 = sub i32 %1942, 1
  %1960 = mul i32 %1958, 1
  %1961 = shl i32 %1942, 1
  %1962 = shl i32 %1942, 1
  %1963 = sub i32 0, 1
  %1964 = add i32 %1942, %1963
  %1965 = sub i32 %1942, 1
  %1966 = mul i32 %1964, 1
  %1967 = sub i32 %1942, -1555792672
  %1968 = add i32 %1967, 1
  %1969 = add i32 %1968, -1555792672
  %1970 = add nsw i32 %1942, 1
  %1971 = sext i32 %1969 to i64
  %1972 = getelementptr inbounds [2050 x i8], [2050 x i8]* %1941, i64 0, i64 %1971
  %1973 = load i8, i8* %1972, align 1
  %1974 = trunc i8 %1973 to i1
  %1975 = zext i1 %1974 to i32
  %1976 = add i32 %1938, -1174527031
  %1977 = sub i32 %1976, %1975
  %1978 = sub i32 %1977, -1174527031
  %1979 = sub i32 %1938, %1975
  %1980 = mul i32 %1978, %1975
  %1981 = add i32 %1938, 551053257
  %1982 = sub i32 %1981, %1975
  %1983 = sub i32 %1982, 551053257
  %1984 = sub i32 %1938, %1975
  %1985 = mul i32 %1983, %1975
  %1986 = shl i32 %1938, %1975
  %1987 = shl i32 %1938, %1975
  %1988 = sub i32 0, %1975
  %1989 = add i32 %1938, %1988
  %1990 = sub i32 %1938, %1975
  %1991 = mul i32 %1989, %1975
  %1992 = add i32 0, -1122942235
  %1993 = sub i32 %1992, %1938
  %1994 = sub i32 %1993, -1122942235
  %1995 = sub i32 0, %1938
  %1996 = add i32 %1994, 375938327
  %1997 = add i32 %1996, %1975
  %1998 = sub i32 %1997, 375938327
  %1999 = add i32 %1994, %1975
  %2000 = xor i32 %1938, -1
  %2001 = xor i32 %1975, -1
  %2002 = xor i32 285831798, -1
  %2003 = or i32 %2000, %2001
  %2004 = or i32 285831798, %2002
  %2005 = xor i32 %2003, -1
  %2006 = and i32 %2005, %2004
  %2007 = and i32 %1938, %1975
  %2008 = load i32, i32* %7, align 4
  %2009 = shl i32 %2008, 1
  %2010 = sub i32 0, 1
  %2011 = add i32 %2008, %2010
  %2012 = sub i32 %2008, 1
  %2013 = mul i32 %2011, 1
  %2014 = add i32 0, -558145909
  %2015 = sub i32 %2014, %2008
  %2016 = sub i32 %2015, -558145909
  %2017 = sub i32 0, %2008
  %2018 = sub i32 %2016, 1214168485
  %2019 = add i32 %2018, 1
  %2020 = add i32 %2019, 1214168485
  %2021 = add i32 %2016, 1
  %2022 = shl i32 %2008, 1
  %2023 = add i32 %2008, -1065222259
  %2024 = sub i32 %2023, 1
  %2025 = sub i32 %2024, -1065222259
  %2026 = sub i32 %2008, 1
  %2027 = mul i32 %2025, 1
  %2028 = shl i32 %2008, 1
  %2029 = sub i32 0, -1595035971
  %2030 = sub i32 %2029, %2008
  %2031 = add i32 %2030, -1595035971
  %2032 = sub i32 0, %2008
  %2033 = add i32 %2031, 2040156724
  %2034 = add i32 %2033, 1
  %2035 = sub i32 %2034, 2040156724
  %2036 = add i32 %2031, 1
  %2037 = shl i32 %2008, 1
  %2038 = add i32 %2008, 629786555
  %2039 = sub i32 %2038, 1
  %2040 = sub i32 %2039, 629786555
  %2041 = sub i32 %2008, 1
  %2042 = mul i32 %2040, 1
  %2043 = sub i32 %2008, 2103319015
  %2044 = sub i32 %2043, 1
  %2045 = add i32 %2044, 2103319015
  %2046 = sub nsw i32 %2008, 1
  %2047 = sext i32 %2045 to i64
  %2048 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %2047
  %2049 = load i32, i32* %8, align 4
  %2050 = add i32 0, 1089954585
  %2051 = sub i32 %2050, %2049
  %2052 = sub i32 %2051, 1089954585
  %2053 = sub i32 0, %2049
  %2054 = sub i32 0, 1
  %2055 = sub i32 %2052, %2054
  %2056 = add i32 %2052, 1
  %2057 = sub i32 0, 1
  %2058 = add i32 %2049, %2057
  %2059 = sub i32 %2049, 1
  %2060 = mul i32 %2058, 1
  %2061 = sub i32 %2049, 1954824132
  %2062 = sub i32 %2061, 1
  %2063 = add i32 %2062, 1954824132
  %2064 = sub i32 %2049, 1
  %2065 = mul i32 %2063, 1
  %2066 = sub i32 0, 1
  %2067 = add i32 %2049, %2066
  %2068 = sub i32 %2049, 1
  %2069 = mul i32 %2067, 1
  %2070 = shl i32 %2049, 1
  %2071 = add i32 %2049, 308268941
  %2072 = sub i32 %2071, 1
  %2073 = sub i32 %2072, 308268941
  %2074 = sub nsw i32 %2049, 1
  %2075 = sext i32 %2073 to i64
  %2076 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %2048, i64 0, i64 %2075
  %2077 = getelementptr inbounds [4 x i32], [4 x i32]* %2076, i64 0, i64 3
  %2078 = load i32, i32* %2077, align 4
  %2079 = add i32 0, 967778716
  %2080 = sub i32 %2079, %2006
  %2081 = sub i32 %2080, 967778716
  %2082 = sub i32 0, %2006
  %2083 = add i32 %2081, -1512858171
  %2084 = add i32 %2083, %2078
  %2085 = sub i32 %2084, -1512858171
  %2086 = add i32 %2081, %2078
  %2087 = shl i32 %2006, %2078
  %2088 = sub i32 0, %2078
  %2089 = add i32 %2006, %2088
  %2090 = sub i32 %2006, %2078
  %2091 = mul i32 %2089, %2078
  %2092 = add i32 %2006, -603446696
  %2093 = sub i32 %2092, %2078
  %2094 = sub i32 %2093, -603446696
  %2095 = sub i32 %2006, %2078
  %2096 = mul i32 %2094, %2078
  %2097 = sub i32 0, %2078
  %2098 = add i32 %2006, %2097
  %2099 = sub nsw i32 %2006, %2078
  %2100 = load i32, i32* %7, align 4
  %2101 = shl i32 %2100, 1
  %2102 = add i32 %2100, -382471490
  %2103 = sub i32 %2102, 1
  %2104 = sub i32 %2103, -382471490
  %2105 = sub i32 %2100, 1
  %2106 = mul i32 %2104, 1
  %2107 = sub i32 %2100, -1035119278
  %2108 = sub i32 %2107, 1
  %2109 = add i32 %2108, -1035119278
  %2110 = sub i32 %2100, 1
  %2111 = mul i32 %2109, 1
  %2112 = sub i32 0, 1
  %2113 = add i32 %2100, %2112
  %2114 = sub i32 %2100, 1
  %2115 = mul i32 %2113, 1
  %2116 = sub i32 0, 1
  %2117 = add i32 %2100, %2116
  %2118 = sub nsw i32 %2100, 1
  %2119 = sext i32 %2117 to i64
  %2120 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %2119
  %2121 = load i32, i32* %8, align 4
  %2122 = sext i32 %2121 to i64
  %2123 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %2120, i64 0, i64 %2122
  %2124 = getelementptr inbounds [4 x i32], [4 x i32]* %2123, i64 0, i64 3
  %2125 = load i32, i32* %2124, align 4
  %2126 = sub i32 0, %2098
  %2127 = add i32 0, %2126
  %2128 = sub i32 0, %2098
  %2129 = sub i32 0, %2127
  %2130 = sub i32 0, %2125
  %2131 = add i32 %2129, %2130
  %2132 = sub i32 0, %2131
  %2133 = add i32 %2127, %2125
  %2134 = sub i32 0, 20175183
  %2135 = sub i32 %2134, %2098
  %2136 = add i32 %2135, 20175183
  %2137 = sub i32 0, %2098
  %2138 = add i32 %2136, 2088861585
  %2139 = add i32 %2138, %2125
  %2140 = sub i32 %2139, 2088861585
  %2141 = add i32 %2136, %2125
  %2142 = add i32 %2098, 1145750310
  %2143 = add i32 %2142, %2125
  %2144 = sub i32 %2143, 1145750310
  %2145 = add nsw i32 %2098, %2125
  %2146 = load i32, i32* %7, align 4
  %2147 = sext i32 %2146 to i64
  %2148 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %2147
  %2149 = load i32, i32* %8, align 4
  %2150 = sub i32 0, 1
  %2151 = add i32 %2149, %2150
  %2152 = sub i32 %2149, 1
  %2153 = mul i32 %2151, 1
  %2154 = sub i32 %2149, -1036627015
  %2155 = sub i32 %2154, 1
  %2156 = add i32 %2155, -1036627015
  %2157 = sub i32 %2149, 1
  %2158 = mul i32 %2156, 1
  %2159 = shl i32 %2149, 1
  %2160 = shl i32 %2149, 1
  %2161 = sub i32 0, %2149
  %2162 = add i32 0, %2161
  %2163 = sub i32 0, %2149
  %2164 = add i32 %2162, -1703944585
  %2165 = add i32 %2164, 1
  %2166 = sub i32 %2165, -1703944585
  %2167 = add i32 %2162, 1
  %2168 = sub i32 %2149, -1910576040
  %2169 = sub i32 %2168, 1
  %2170 = add i32 %2169, -1910576040
  %2171 = sub i32 %2149, 1
  %2172 = mul i32 %2170, 1
  %2173 = add i32 0, 964521389
  %2174 = sub i32 %2173, %2149
  %2175 = sub i32 %2174, 964521389
  %2176 = sub i32 0, %2149
  %2177 = sub i32 0, 1
  %2178 = sub i32 %2175, %2177
  %2179 = add i32 %2175, 1
  %2180 = add i32 %2149, 881349602
  %2181 = sub i32 %2180, 1
  %2182 = sub i32 %2181, 881349602
  %2183 = sub nsw i32 %2149, 1
  %2184 = sext i32 %2182 to i64
  %2185 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %2148, i64 0, i64 %2184
  %2186 = getelementptr inbounds [4 x i32], [4 x i32]* %2185, i64 0, i64 3
  %2187 = load i32, i32* %2186, align 4
  %2188 = add i32 0, -720293603
  %2189 = sub i32 %2188, %2144
  %2190 = sub i32 %2189, -720293603
  %2191 = sub i32 0, %2144
  %2192 = add i32 %2190, -1667019427
  %2193 = add i32 %2192, %2187
  %2194 = sub i32 %2193, -1667019427
  %2195 = add i32 %2190, %2187
  %2196 = sub i32 0, %2187
  %2197 = add i32 %2144, %2196
  %2198 = sub i32 %2144, %2187
  %2199 = mul i32 %2197, %2187
  %2200 = sub i32 0, %2187
  %2201 = sub i32 %2144, %2200
  %2202 = add nsw i32 %2144, %2187
  %2203 = load i32, i32* %7, align 4
  %2204 = sext i32 %2203 to i64
  %2205 = getelementptr inbounds [2050 x [2050 x [4 x i32]]], [2050 x [2050 x [4 x i32]]]* @lin, i64 0, i64 %2204
  %2206 = load i32, i32* %8, align 4
  %2207 = sext i32 %2206 to i64
  %2208 = getelementptr inbounds [2050 x [4 x i32]], [2050 x [4 x i32]]* %2205, i64 0, i64 %2207
  %2209 = getelementptr inbounds [4 x i32], [4 x i32]* %2208, i64 0, i64 3
  store i32 %2201, i32* %2209, align 4
  store i32 -1712038889, i32* %16
  br label %2225

; <label>:2210:                                   ; preds = %17
  %2211 = load i32, i32* %9, align 4
  %2212 = add i32 0, -979202482
  %2213 = sub i32 %2212, %2211
  %2214 = sub i32 %2213, -979202482
  %2215 = sub i32 0, %2211
  %2216 = add i32 %2214, 221451121
  %2217 = add i32 %2216, 1
  %2218 = sub i32 %2217, 221451121
  %2219 = add i32 %2214, 1
  %2220 = sub i32 0, %2211
  %2221 = sub i32 0, 1
  %2222 = add i32 %2220, %2221
  %2223 = sub i32 0, %2222
  %2224 = add nsw i32 %2211, 1
  store i32 %2223, i32* %9, align 4
  store i32 -1860800970, i32* %16
  br label %2225

; <label>:2225:                                   ; preds = %2210, %1017, %1013, %1006, %976, %973, %969, %967, %946, %919, %745, %740, %739, %733, %732, %727, %726, %311, %283, %280, %261, %234, %233, %228, %227, %226, %194, %179, %178, %171, %170, %137, %109, %104, %103, %85, %58, %55, %36, %20, %19
  br label %17
}

declare i32 @scanf(i8*, ...) #1

declare i32 @printf(i8*, ...) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s206195915.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
