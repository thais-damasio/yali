; ModuleID = 'Project_CodeNet_C++1400/p02787/s864484413.cpp'
source_filename = "Project_CodeNet_C++1400/p02787/s864484413.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.33" }
%"struct.std::_Vector_base.33" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::vector.1" = type { %"struct.std::_Vector_base.2" }
%"struct.std::_Vector_base.2" = type { %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl" = type { %"class.std::set"*, %"class.std::set"*, %"class.std::set"* }
%"class.std::set" = type { %"class.std::_Rb_tree.37" }
%"class.std::_Rb_tree.37" = type { %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl" = type { %"struct.std::less.41", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less.41" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::vector.6" = type { %"struct.std::_Vector_base.7" }
%"struct.std::_Vector_base.7" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::vector.11" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", i64* }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less" = type { i8 }
%"class.std::map.18" = type { %"class.std::_Rb_tree.19" }
%"class.std::_Rb_tree.19" = type { %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"struct.std::piecewise_construct_t" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.std::allocator.3" = type { i8 }
%"class.std::allocator.8" = type { i8 }
%"struct.std::_Bit_reference" = type { i64*, i64 }
%"struct.std::_Bit_const_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base" = type <{ i64*, i32, [4 x i8] }>
%"class.std::set.23" = type { %"class.std::_Rb_tree.24" }
%"class.std::_Rb_tree.24" = type { %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"class.std::initializer_list" = type { i64*, i64 }
%"class.std::map.28" = type { %"class.std::_Rb_tree.29" }
%"class.std::_Rb_tree.29" = type { %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::pair" = type <{ %"struct.std::_Rb_tree_const_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.__gnu_cxx::new_allocator.9" = type { i8 }
%"struct.std::pair.56" = type <{ %"struct.std::_Rb_tree_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::tuple.60" = type { i8 }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i64* }
%"struct.std::_Rb_tree_const_iterator.59" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_iterator.58" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair.49" = type { i64, i64 }
%"class.std::tuple.63" = type { %"struct.std::_Tuple_impl.64" }
%"struct.std::_Tuple_impl.64" = type { %"struct.std::_Head_base.65" }
%"struct.std::_Head_base.65" = type { i64* }
%"struct.std::_Rb_tree_const_iterator.67" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_iterator.66" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair.43" = type { i64, %"class.std::set.23" }
%"struct.std::_Rb_tree_const_iterator.71" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_iterator.70" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair.46" = type { i64, %"class.std::map.28" }
%"class.std::basic_ifstream" = type { %"class.std::basic_istream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_filebuf" = type { %"class.std::basic_streambuf", %union.pthread_mutex_t, %"class.std::__basic_file", i32, %struct.__mbstate_t, %struct.__mbstate_t, %struct.__mbstate_t, i8*, i64, i8, i8, i8, i8, i8*, i8*, i8, %"class.std::codecvt"*, i8*, i64, i8*, i8* }
%union.pthread_mutex_t = type { %"struct.(anonymous union)::__pthread_mutex_s" }
%"struct.(anonymous union)::__pthread_mutex_s" = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__basic_file" = type <{ %struct._IO_FILE*, i8, [7 x i8] }>
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%"class.std::codecvt" = type { %"class.std::__codecvt_abstract_base.base", %struct.__locale_struct* }
%"class.std::__codecvt_abstract_base.base" = type { %"class.std::locale::facet.base" }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [56 x i8] }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"struct.std::_Rb_tree_node.44" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.45" }
%"struct.__gnu_cxx::__aligned_membuf.45" = type { [56 x i8] }
%"class.std::allocator.20" = type { i8 }
%"class.__gnu_cxx::new_allocator.21" = type { i8 }
%"struct.std::_Rb_tree_node.47" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.48" }
%"struct.__gnu_cxx::__aligned_membuf.48" = type { [16 x i8] }
%"class.std::allocator.30" = type { i8 }
%"class.__gnu_cxx::new_allocator.31" = type { i8 }
%"struct.std::_Rb_tree_node.50" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.51" }
%"struct.__gnu_cxx::__aligned_membuf.51" = type { [8 x i8] }
%"class.std::allocator.25" = type { i8 }
%"class.__gnu_cxx::new_allocator.26" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.34" = type { i8 }
%"class.__gnu_cxx::new_allocator.35" = type { i8 }
%"class.__gnu_cxx::new_allocator.4" = type { i8 }
%"struct.std::_Rb_tree_node.52" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.53" }
%"struct.__gnu_cxx::__aligned_membuf.53" = type { [8 x i8] }
%"class.std::allocator.38" = type { i8 }
%"struct.std::pair.54" = type { i32, i32 }
%"class.__gnu_cxx::new_allocator.39" = type { i8 }
%"class.std::move_iterator" = type { i64* }
%"class.std::allocator.12" = type { i8 }
%"class.__gnu_cxx::new_allocator.13" = type { i8 }
%"struct.std::iterator" = type { i8 }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node" = type { %"class.std::_Rb_tree.24"* }
%"struct.std::pair.55" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Identity" = type { i8 }
%"struct.std::_Select1st" = type { i8 }
%"struct.std::_Index_tuple" = type { i8 }
%"struct.std::_Index_tuple.62" = type { i8 }
%"struct.std::_Select1st.68" = type { i8 }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::_Rb_tree.24"* }
%"struct.std::_Select1st.72" = type { i8 }
%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::_Rb_tree.29"* }

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EEC2Ev = comdat any

$_ZNSt6vectorISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EED2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSt6vectorIxSaIxEE6resizeEm = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt6vectorIbSaIbEEC2Ev = comdat any

$_ZNSt6vectorIbSaIbEED2Ev = comdat any

$_ZNSt6vectorIbSaIbEE5clearEv = comdat any

$_ZNSt6vectorIbSaIbEE6resizeEmb = comdat any

$_ZNSt6vectorIbSaIbEEixEm = comdat any

$_ZNSt14_Bit_referenceaSEb = comdat any

$_ZNSt14_Bit_referenceaSERKS_ = comdat any

$_ZNKSt14_Bit_referencecvbEv = comdat any

$_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEEC2Ev = comdat any

$_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEED2Ev = comdat any

$_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEEC2Ev = comdat any

$_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEED2Ev = comdat any

$_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE5clearEv = comdat any

$_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE5clearEv = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZNSt3setIxSt4lessIxESaIxEEC2ESt16initializer_listIxERKS1_RKS2_ = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev = comdat any

$_ZNSt3setIxSt4lessIxESaIxEE6insertERKx = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixEOx = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_ = comdat any

$_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEEixERS6_ = comdat any

$_ZNSt3setIxSt4lessIxESaIxEEaSERKS3_ = comdat any

$_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEEixERS3_ = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEaSERKS6_ = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev = comdat any

$_ZNSt3setIxSt4lessIxESaIxEED2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_ = comdat any

$_Z5chminIxEbRT_S0_ = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS7_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS7_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE7destroyIS8_EEvRSA_PT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE7destroyIS9_EEvPT_ = comdat any

$_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEED2Ev = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE10deallocateERSA_PS9_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE10deallocateEPSA_m = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE7destroyIS9_EEvRSB_PT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE7destroyISA_EEvPT_ = comdat any

$_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEED2Ev = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE10deallocateERSB_PSA_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE10deallocateEPSB_m = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE7destroyIS3_EEvRS5_PT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_ = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m = comdat any

$_ZNSaISt6vectorIiSaIiEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt3setISt4pairIiiESt4lessIS1_ESaIS1_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEEC2Ev = comdat any

$_ZSt8_DestroyIPSt3setISt4pairIiiESt4lessIS2_ESaIS2_EES6_EvT_S8_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EED2Ev = comdat any

$_ZSt8_DestroyIPSt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEvT_S8_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3setISt4pairIiiESt4lessIS4_ESaIS4_EEEEvT_SA_ = comdat any

$_ZSt8_DestroyISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEvPT_ = comdat any

$_ZSt11__addressofISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEPT_RS7_ = comdat any

$_ZNSt3setISt4pairIiiESt4lessIS1_ESaIS1_EED2Ev = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIiiEEEE7destroyIS2_EEvRS4_PT_ = comdat any

$_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIiiEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE7destroyIS3_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIiiEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIiiEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIiiEEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE10deallocateEPS4_m = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIiiEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE13_M_deallocateEPS6_m = comdat any

$_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEE10deallocateERS7_PS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEE10deallocateEPS7_m = comdat any

$_ZNSaISt3setISt4pairIiiESt4lessIS1_ESaIS1_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZNSt6vectorIxSaIxEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx = comdat any

$_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPxmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_ = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNKSt6vectorIxSaIxEE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPxE4baseEv = comdat any

$_ZNSt13move_iteratorIPxEC2ES0_ = comdat any

$_ZNSt13_Bvector_baseISaIbEEC2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev = comdat any

$_ZNSaImEC2Ev = comdat any

$_ZNSt13_Bit_iteratorC2Ev = comdat any

$_ZNSaImED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2Ev = comdat any

$_ZNSt18_Bit_iterator_baseC2EPmj = comdat any

$_ZN9__gnu_cxx13new_allocatorImED2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEED2Ev = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv = comdat any

$_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev = comdat any

$_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv = comdat any

$_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm = comdat any

$_ZSt11__addressofImEPT_RS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm = comdat any

$_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator = comdat any

$_ZNSt6vectorIbSaIbEE5beginEv = comdat any

$_ZNKSt6vectorIbSaIbEE4sizeEv = comdat any

$_ZNKSt13_Bit_iteratorplEl = comdat any

$_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratormRKb = comdat any

$_ZNSt6vectorIbSaIbEE3endEv = comdat any

$_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator = comdat any

$_ZStmiRKSt18_Bit_iterator_baseS1_ = comdat any

$_ZNKSt6vectorIbSaIbEE3endEv = comdat any

$_ZNKSt6vectorIbSaIbEE5beginEv = comdat any

$_ZNSt13_Bit_iteratorpLEl = comdat any

$_ZNSt18_Bit_iterator_base7_M_incrEl = comdat any

$_ZNKSt6vectorIbSaIbEE6cbeginEv = comdat any

$_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb = comdat any

$_ZNKSt19_Bit_const_iterator13_M_const_castEv = comdat any

$_ZNKSt6vectorIbSaIbEE8capacityEv = comdat any

$_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_ = comdat any

$_ZSt4fillSt13_Bit_iteratorS_RKb = comdat any

$_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc = comdat any

$_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm = comdat any

$_ZNSt13_Bit_iteratorC2EPmj = comdat any

$_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator = comdat any

$_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_ = comdat any

$_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm = comdat any

$_ZNSt19_Bit_const_iteratorC2EPmj = comdat any

$_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_ = comdat any

$_ZNSt13_Bit_iteratormmEv = comdat any

$_ZNKSt13_Bit_iteratordeEv = comdat any

$_ZNSt18_Bit_iterator_base12_M_bump_downEv = comdat any

$_ZNSt14_Bit_referenceC2EPmm = comdat any

$_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_ = comdat any

$_ZSt4fillIPmiEvT_S1_RKT0_ = comdat any

$_ZSt14__fill_bvectorSt13_Bit_iteratorS_b = comdat any

$_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_ = comdat any

$_ZNKSt18_Bit_iterator_baseneERKS_ = comdat any

$_ZNSt13_Bit_iteratorppEv = comdat any

$_ZNKSt18_Bit_iterator_baseeqERKS_ = comdat any

$_ZNSt18_Bit_iterator_base10_M_bump_upEv = comdat any

$_ZNKSt6vectorIbSaIbEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_ = comdat any

$_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaImEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv = comdat any

$_ZSt4copyIPmS0_ET0_T_S2_S1_ = comdat any

$_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_ = comdat any

$_ZNKSt19_Bit_const_iteratordeEv = comdat any

$_ZNSt19_Bit_const_iteratorppEv = comdat any

$_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE5clearEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EE8_M_resetEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE5clearEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EE8_M_resetEv = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2ERKS3_RKS4_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIPKxEEvT_S9_ = comdat any

$_ZNKSt16initializer_listIxE5beginEv = comdat any

$_ZNKSt16initializer_listIxE3endEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEEC2IxEERKSaIT_E = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_OSaISt13_Rb_tree_nodeIxEE = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZSt4moveIRSaISt13_Rb_tree_nodeIxEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEEC2ERKS1_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2ERKS3_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_insert_unique_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxESt23_Rb_tree_const_iteratorIxEOT_RT0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIxERKx = comdat any

$_ZNKSt9_IdentityIxEclERKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_ = comdat any

$_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv = comdat any

$_ZNKSt4lessIxEclERKxS2_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_rightmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_leftmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIxEmmEv = comdat any

$_ZNSt17_Rb_tree_iteratorIxEppEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_ = comdat any

$_ZNKSt16initializer_listIxE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_ = comdat any

$_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_ = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_ = comdat any

$_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_ = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv = comdat any

$_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E = comdat any

$_ZSt16forward_as_tupleIJxEESt5tupleIJDpOT_EES3_ = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvRS5_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJOxEEC2EOS1_ = comdat any

$_ZNSt4pairIKxxEC2IJOxEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJOxEEC2EOS1_ = comdat any

$_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_ = comdat any

$_ZNSt10_Head_baseILm0EOxLb0EEC2IxEEOT_ = comdat any

$_ZNSt10_Head_baseILm0EOxLb0EE7_M_headERS1_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairIKxxEC2IJOxEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJOxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_ = comdat any

$_ZSt12__get_helperILm0EOxJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxxEE13_M_const_castEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt5tupleIJOxEEC2IJxEvEEDpOT_ = comdat any

$_ZNSt11_Tuple_implILm0EJOxEEC2IxEEOT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_ = comdat any

$_ZNSt5tupleIJRKxEEC2ES1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJRKxEEC2EOS2_ = comdat any

$_ZNSt4pairIKxxEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_ = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_ = comdat any

$_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_ = comdat any

$_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_ = comdat any

$_ZNSt4pairIKxxEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_ = comdat any

$_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_ = comdat any

$_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE11lower_boundERS6_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEeqERKS8_ = comdat any

$_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE3endEv = comdat any

$_ZNKSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE8key_compEv = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEdeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEESt17_Rb_tree_iteratorIS7_ESt23_Rb_tree_const_iteratorIS7_EDpOT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2ERKSt17_Rb_tree_iteratorIS7_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11lower_boundERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS7_ESE_RS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_M_endEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt10_Select1stISt4pairIKxSt3setIxSt4lessIxESaIxEEEEclERKS7_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_valueEPKSt13_Rb_tree_nodeIS7_E = comdat any

$_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE7_M_addrEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE3endEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8key_compEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEEPSt13_Rb_tree_nodeIS7_EDpOT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS7_ERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS7_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEEvPSt13_Rb_tree_nodeIS7_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE8allocateERSA_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE9constructIS8_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESG_IJEEEEEvRSA_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESG_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESA_IJDpT0_EE = comdat any

$_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS9_IJDpT1_EESt12_Index_tupleIJXspT0_EEESI_IJXspT2_EEE = comdat any

$_ZNSt3setIxSt4lessIxESaIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEE13_M_const_castEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_rightmostEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE24_M_get_insert_unique_posERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_leftmostEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEmmEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEppEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3setIxSt4lessIxESaIxEEEESE_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEOT_RNSt16remove_referenceISC_E4typeE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEaSERKS5_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeC2ERS5_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_SA_RT_ = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_S_minimumEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_S_maximumEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeD2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_M_clone_nodeINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_RT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_node10_M_extractEv = comdat any

$_ZNSt18_Rb_tree_node_base10_S_minimumEPS_ = comdat any

$_ZNSt18_Rb_tree_node_base10_S_maximumEPS_ = comdat any

$_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE11lower_boundERS3_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEeqERKS9_ = comdat any

$_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE3endEv = comdat any

$_ZNKSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE8key_compEv = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEdeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESH_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11lower_boundERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_ESF_RS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_M_endEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt10_Select1stISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEclERKS8_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE7_M_addrEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE3endEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8key_compEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESH_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESH_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE8allocateERSB_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESH_IJEEEEEvRSB_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE = comdat any

$_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE13_M_const_castEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_rightmostEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE24_M_get_insert_unique_posERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_leftmostEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEmmEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEppEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3mapIxxSt4lessIxESaIS_IS5_xEEEEESF_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEOT_RNSt16remove_referenceISD_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEaSERKS8_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeC2ERS8_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE8_M_resetEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_SD_RT_ = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE10_S_minimumEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE10_S_maximumEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeD2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_M_clone_nodeINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_RT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZSt7forwardIRKSt4pairIKxxEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKS3_EEEvRS5_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKS4_EEEvPT_DpOT0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [4 x i8] c"Yes\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"No\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"NO\00", align 1
@adjMat = global %"class.std::vector" zeroinitializer, align 8
@adjList = global %"class.std::vector.1" zeroinitializer, align 8
@fac = global %"class.std::vector.6" zeroinitializer, align 8
@finv = global %"class.std::vector.6" zeroinitializer, align 8
@inv = global %"class.std::vector.6" zeroinitializer, align 8
@sieve = global %"class.std::vector.11" zeroinitializer, align 8
@primeFactorSet = global %"class.std::map" zeroinitializer, align 8
@primeFactorMap = global %"class.std::map.18" zeroinitializer, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZL5INF_L = internal constant i64 1152921504606846976, align 8
@.str.12 = private unnamed_addr constant [10 x i8] c"input.txt\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"vector<bool>::_M_fill_insert\00", align 1
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s864484413.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0
@x.905 = common global i32 0
@y.906 = common global i32 0
@x.907 = common global i32 0
@y.908 = common global i32 0
@x.909 = common global i32 0
@y.910 = common global i32 0
@x.911 = common global i32 0
@y.912 = common global i32 0
@x.913 = common global i32 0
@y.914 = common global i32 0
@x.915 = common global i32 0
@y.916 = common global i32 0
@x.917 = common global i32 0
@y.918 = common global i32 0
@x.919 = common global i32 0
@y.920 = common global i32 0
@x.921 = common global i32 0
@y.922 = common global i32 0
@x.923 = common global i32 0
@y.924 = common global i32 0
@x.925 = common global i32 0
@y.926 = common global i32 0
@x.927 = common global i32 0
@y.928 = common global i32 0
@x.929 = common global i32 0
@y.930 = common global i32 0
@x.931 = common global i32 0
@y.932 = common global i32 0
@x.933 = common global i32 0
@y.934 = common global i32 0
@x.935 = common global i32 0
@y.936 = common global i32 0
@x.937 = common global i32 0
@y.938 = common global i32 0
@x.939 = common global i32 0
@y.940 = common global i32 0
@x.941 = common global i32 0
@y.942 = common global i32 0
@x.943 = common global i32 0
@y.944 = common global i32 0
@x.945 = common global i32 0
@y.946 = common global i32 0
@x.947 = common global i32 0
@y.948 = common global i32 0
@x.949 = common global i32 0
@y.950 = common global i32 0
@x.951 = common global i32 0
@y.952 = common global i32 0
@x.953 = common global i32 0
@y.954 = common global i32 0
@x.955 = common global i32 0
@y.956 = common global i32 0
@x.957 = common global i32 0
@y.958 = common global i32 0
@x.959 = common global i32 0
@y.960 = common global i32 0
@x.961 = common global i32 0
@y.962 = common global i32 0
@x.963 = common global i32 0
@y.964 = common global i32 0
@x.965 = common global i32 0
@y.966 = common global i32 0
@x.967 = common global i32 0
@y.968 = common global i32 0
@x.969 = common global i32 0
@y.970 = common global i32 0
@x.971 = common global i32 0
@y.972 = common global i32 0
@x.973 = common global i32 0
@y.974 = common global i32 0
@x.975 = common global i32 0
@y.976 = common global i32 0
@x.977 = common global i32 0
@y.978 = common global i32 0
@x.979 = common global i32 0
@y.980 = common global i32 0
@x.981 = common global i32 0
@y.982 = common global i32 0
@x.983 = common global i32 0
@y.984 = common global i32 0
@x.985 = common global i32 0
@y.986 = common global i32 0
@x.987 = common global i32 0
@y.988 = common global i32 0
@x.989 = common global i32 0
@y.990 = common global i32 0
@x.991 = common global i32 0
@y.992 = common global i32 0
@x.993 = common global i32 0
@y.994 = common global i32 0
@x.995 = common global i32 0
@y.996 = common global i32 0
@x.997 = common global i32 0
@y.998 = common global i32 0
@x.999 = common global i32 0
@y.1000 = common global i32 0
@x.1001 = common global i32 0
@y.1002 = common global i32 0
@x.1003 = common global i32 0
@y.1004 = common global i32 0
@x.1005 = common global i32 0
@y.1006 = common global i32 0
@x.1007 = common global i32 0
@y.1008 = common global i32 0
@x.1009 = common global i32 0
@y.1010 = common global i32 0
@x.1011 = common global i32 0
@y.1012 = common global i32 0
@x.1013 = common global i32 0
@y.1014 = common global i32 0
@x.1015 = common global i32 0
@y.1016 = common global i32 0
@x.1017 = common global i32 0
@y.1018 = common global i32 0
@x.1019 = common global i32 0
@y.1020 = common global i32 0
@x.1021 = common global i32 0
@y.1022 = common global i32 0
@x.1023 = common global i32 0
@y.1024 = common global i32 0
@x.1025 = common global i32 0
@y.1026 = common global i32 0
@x.1027 = common global i32 0
@y.1028 = common global i32 0
@x.1029 = common global i32 0
@y.1030 = common global i32 0
@x.1031 = common global i32 0
@y.1032 = common global i32 0
@x.1033 = common global i32 0
@y.1034 = common global i32 0
@x.1035 = common global i32 0
@y.1036 = common global i32 0
@x.1037 = common global i32 0
@y.1038 = common global i32 0
@x.1039 = common global i32 0
@y.1040 = common global i32 0
@x.1041 = common global i32 0
@y.1042 = common global i32 0
@x.1043 = common global i32 0
@y.1044 = common global i32 0
@x.1045 = common global i32 0
@y.1046 = common global i32 0
@x.1047 = common global i32 0
@y.1048 = common global i32 0
@x.1049 = common global i32 0
@y.1050 = common global i32 0
@x.1051 = common global i32 0
@y.1052 = common global i32 0
@x.1053 = common global i32 0
@y.1054 = common global i32 0
@x.1055 = common global i32 0
@y.1056 = common global i32 0
@x.1057 = common global i32 0
@y.1058 = common global i32 0
@x.1059 = common global i32 0
@y.1060 = common global i32 0
@x.1061 = common global i32 0
@y.1062 = common global i32 0
@x.1063 = common global i32 0
@y.1064 = common global i32 0
@x.1065 = common global i32 0
@y.1066 = common global i32 0
@x.1067 = common global i32 0
@y.1068 = common global i32 0
@x.1069 = common global i32 0
@y.1070 = common global i32 0
@x.1071 = common global i32 0
@y.1072 = common global i32 0
@x.1073 = common global i32 0
@y.1074 = common global i32 0
@x.1075 = common global i32 0
@y.1076 = common global i32 0
@x.1077 = common global i32 0
@y.1078 = common global i32 0
@x.1079 = common global i32 0
@y.1080 = common global i32 0
@x.1081 = common global i32 0
@y.1082 = common global i32 0
@x.1083 = common global i32 0
@y.1084 = common global i32 0
@x.1085 = common global i32 0
@y.1086 = common global i32 0
@x.1087 = common global i32 0
@y.1088 = common global i32 0
@x.1089 = common global i32 0
@y.1090 = common global i32 0
@x.1091 = common global i32 0
@y.1092 = common global i32 0
@x.1093 = common global i32 0
@y.1094 = common global i32 0
@x.1095 = common global i32 0
@y.1096 = common global i32 0
@x.1097 = common global i32 0
@y.1098 = common global i32 0
@x.1099 = common global i32 0
@y.1100 = common global i32 0
@x.1101 = common global i32 0
@y.1102 = common global i32 0
@x.1103 = common global i32 0
@y.1104 = common global i32 0
@x.1105 = common global i32 0
@y.1106 = common global i32 0
@x.1107 = common global i32 0
@y.1108 = common global i32 0
@x.1109 = common global i32 0
@y.1110 = common global i32 0
@x.1111 = common global i32 0
@y.1112 = common global i32 0
@x.1113 = common global i32 0
@y.1114 = common global i32 0
@x.1115 = common global i32 0
@y.1116 = common global i32 0
@x.1117 = common global i32 0
@y.1118 = common global i32 0
@x.1119 = common global i32 0
@y.1120 = common global i32 0
@x.1121 = common global i32 0
@y.1122 = common global i32 0
@x.1123 = common global i32 0
@y.1124 = common global i32 0
@x.1125 = common global i32 0
@y.1126 = common global i32 0
@x.1127 = common global i32 0
@y.1128 = common global i32 0
@x.1129 = common global i32 0
@y.1130 = common global i32 0
@x.1131 = common global i32 0
@y.1132 = common global i32 0
@x.1133 = common global i32 0
@y.1134 = common global i32 0
@x.1135 = common global i32 0
@y.1136 = common global i32 0
@x.1137 = common global i32 0
@y.1138 = common global i32 0
@x.1139 = common global i32 0
@y.1140 = common global i32 0
@x.1141 = common global i32 0
@y.1142 = common global i32 0
@x.1143 = common global i32 0
@y.1144 = common global i32 0
@x.1145 = common global i32 0
@y.1146 = common global i32 0
@x.1147 = common global i32 0
@y.1148 = common global i32 0
@x.1149 = common global i32 0
@y.1150 = common global i32 0
@x.1151 = common global i32 0
@y.1152 = common global i32 0
@x.1153 = common global i32 0
@y.1154 = common global i32 0
@x.1155 = common global i32 0
@y.1156 = common global i32 0
@x.1157 = common global i32 0
@y.1158 = common global i32 0
@x.1159 = common global i32 0
@y.1160 = common global i32 0
@x.1161 = common global i32 0
@y.1162 = common global i32 0
@x.1163 = common global i32 0
@y.1164 = common global i32 0
@x.1165 = common global i32 0
@y.1166 = common global i32 0
@x.1167 = common global i32 0
@y.1168 = common global i32 0
@x.1169 = common global i32 0
@y.1170 = common global i32 0
@x.1171 = common global i32 0
@y.1172 = common global i32 0
@x.1173 = common global i32 0
@y.1174 = common global i32 0
@x.1175 = common global i32 0
@y.1176 = common global i32 0
@x.1177 = common global i32 0
@y.1178 = common global i32 0
@x.1179 = common global i32 0
@y.1180 = common global i32 0
@x.1181 = common global i32 0
@y.1182 = common global i32 0
@x.1183 = common global i32 0
@y.1184 = common global i32 0
@x.1185 = common global i32 0
@y.1186 = common global i32 0
@x.1187 = common global i32 0
@y.1188 = common global i32 0
@x.1189 = common global i32 0
@y.1190 = common global i32 0
@x.1191 = common global i32 0
@y.1192 = common global i32 0
@x.1193 = common global i32 0
@y.1194 = common global i32 0
@x.1195 = common global i32 0
@y.1196 = common global i32 0
@x.1197 = common global i32 0
@y.1198 = common global i32 0
@x.1199 = common global i32 0
@y.1200 = common global i32 0
@x.1201 = common global i32 0
@y.1202 = common global i32 0
@x.1203 = common global i32 0
@y.1204 = common global i32 0
@x.1205 = common global i32 0
@y.1206 = common global i32 0
@x.1207 = common global i32 0
@y.1208 = common global i32 0
@x.1209 = common global i32 0
@y.1210 = common global i32 0
@x.1211 = common global i32 0
@y.1212 = common global i32 0
@x.1213 = common global i32 0
@y.1214 = common global i32 0
@x.1215 = common global i32 0
@y.1216 = common global i32 0
@x.1217 = common global i32 0
@y.1218 = common global i32 0
@x.1219 = common global i32 0
@y.1220 = common global i32 0
@x.1221 = common global i32 0
@y.1222 = common global i32 0
@x.1223 = common global i32 0
@y.1224 = common global i32 0
@x.1225 = common global i32 0
@y.1226 = common global i32 0
@x.1227 = common global i32 0
@y.1228 = common global i32 0
@x.1229 = common global i32 0
@y.1230 = common global i32 0
@x.1231 = common global i32 0
@y.1232 = common global i32 0
@x.1233 = common global i32 0
@y.1234 = common global i32 0
@x.1235 = common global i32 0
@y.1236 = common global i32 0
@x.1237 = common global i32 0
@y.1238 = common global i32 0
@x.1239 = common global i32 0
@y.1240 = common global i32 0
@x.1241 = common global i32 0
@y.1242 = common global i32 0
@x.1243 = common global i32 0
@y.1244 = common global i32 0
@x.1245 = common global i32 0
@y.1246 = common global i32 0
@x.1247 = common global i32 0
@y.1248 = common global i32 0
@x.1249 = common global i32 0
@y.1250 = common global i32 0
@x.1251 = common global i32 0
@y.1252 = common global i32 0
@x.1253 = common global i32 0
@y.1254 = common global i32 0
@x.1255 = common global i32 0
@y.1256 = common global i32 0
@x.1257 = common global i32 0
@y.1258 = common global i32 0
@x.1259 = common global i32 0
@y.1260 = common global i32 0
@x.1261 = common global i32 0
@y.1262 = common global i32 0
@x.1263 = common global i32 0
@y.1264 = common global i32 0
@x.1265 = common global i32 0
@y.1266 = common global i32 0
@x.1267 = common global i32 0
@y.1268 = common global i32 0
@x.1269 = common global i32 0
@y.1270 = common global i32 0
@x.1271 = common global i32 0
@y.1272 = common global i32 0
@x.1273 = common global i32 0
@y.1274 = common global i32 0
@x.1275 = common global i32 0
@y.1276 = common global i32 0
@x.1277 = common global i32 0
@y.1278 = common global i32 0
@x.1279 = common global i32 0
@y.1280 = common global i32 0
@x.1281 = common global i32 0
@y.1282 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define void @_Z8cout_ynlb(i1 zeroext) #0 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  %4 = load i8, i8* %2, align 1
  %5 = trunc i8 %4 to i1
  %6 = select i1 %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0)
  %7 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* %6)
  %8 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %7, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define void @_Z8cout_YNUb(i1 zeroext) #0 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  %4 = load i8, i8* %2, align 1
  %5 = trunc i8 %4 to i1
  %6 = select i1 %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0)
  %7 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* %6)
  %8 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %7, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @_Z4ctoic(i8 signext) #4 {
  %2 = alloca i1
  %3 = alloca i8*
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.19
  %8 = load i32, i32* @y.20
  %9 = sub i32 %7, -1398489493
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1398489493
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -459153095, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %261
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -459153095, label %21
    i32 -1936102262, label %41
    i32 -2058186744, label %77
    i32 -122631460, label %80
    i32 -737034438, label %89
    i32 406475981, label %96
    i32 778597882, label %111
    i32 814776492, label %147
    i32 -2111139223, label %148
    i32 568140984, label %155
    i32 -1391463617, label %164
    i32 408632495, label %179
    i32 413332883, label %208
    i32 -741656084, label %209
    i32 1018045051, label %212
    i32 911091137, label %219
    i32 356010515, label %259
  ]

; <label>:20:                                     ; preds = %18
  br label %261

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1936102262, i32 1018045051
  store i32 %40, i32* %17
  br label %261

; <label>:41:                                     ; preds = %18
  %42 = alloca i32, align 4
  store i32* %42, i32** %4
  %43 = alloca i8, align 1
  store i8* %43, i8** %3
  %44 = load volatile i8*, i8** %3
  store i8 %0, i8* %44, align 1
  %45 = load volatile i8*, i8** %3
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = call i32 @isdigit(i32 %47) #13
  %49 = icmp ne i32 %48, 0
  store i1 %49, i1* %2
  %50 = load i32, i32* @x.19
  %51 = load i32, i32* @y.20
  %52 = add i32 %50, 2103162415
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 2103162415
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -2058186744, i32 1018045051
  store i32 %76, i32* %17
  br label %261

; <label>:77:                                     ; preds = %18
  %78 = load volatile i1, i1* %2
  %79 = select i1 %78, i32 -122631460, i32 -737034438
  store i32 %79, i32* %17
  br label %261

; <label>:80:                                     ; preds = %18
  %81 = load volatile i8*, i8** %3
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = sub i32 %83, -684748597
  %85 = sub i32 %84, 48
  %86 = add i32 %85, -684748597
  %87 = sub nsw i32 %83, 48
  %88 = load volatile i32*, i32** %4
  store i32 %86, i32* %88, align 4
  store i32 -741656084, i32* %17
  br label %261

; <label>:89:                                     ; preds = %18
  %90 = load volatile i8*, i8** %3
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = call i32 @islower(i32 %92) #13
  %94 = icmp ne i32 %93, 0
  %95 = select i1 %94, i32 406475981, i32 -2111139223
  store i32 %95, i32* %17
  br label %261

; <label>:96:                                     ; preds = %18
  %97 = load i32, i32* @x.19
  %98 = load i32, i32* @y.20
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  %110 = select i1 %108, i32 778597882, i32 911091137
  store i32 %110, i32* %17
  br label %261

; <label>:111:                                    ; preds = %18
  %112 = load volatile i8*, i8** %3
  %113 = load i8, i8* %112, align 1
  %114 = sext i8 %113 to i32
  %115 = sub i32 %114, 65105195
  %116 = sub i32 %115, 97
  %117 = add i32 %116, 65105195
  %118 = sub nsw i32 %114, 97
  %119 = load volatile i32*, i32** %4
  store i32 %117, i32* %119, align 4
  %120 = load i32, i32* @x.19
  %121 = load i32, i32* @y.20
  %122 = sub i32 %120, -827616632
  %123 = sub i32 %122, 1
  %124 = add i32 %123, -827616632
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  %146 = select i1 %144, i32 814776492, i32 911091137
  store i32 %146, i32* %17
  br label %261

; <label>:147:                                    ; preds = %18
  store i32 -741656084, i32* %17
  br label %261

; <label>:148:                                    ; preds = %18
  %149 = load volatile i8*, i8** %3
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = call i32 @isupper(i32 %151) #13
  %153 = icmp ne i32 %152, 0
  %154 = select i1 %153, i32 568140984, i32 -1391463617
  store i32 %154, i32* %17
  br label %261

; <label>:155:                                    ; preds = %18
  %156 = load volatile i8*, i8** %3
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  %159 = add i32 %158, 2098946331
  %160 = sub i32 %159, 65
  %161 = sub i32 %160, 2098946331
  %162 = sub nsw i32 %158, 65
  %163 = load volatile i32*, i32** %4
  store i32 %161, i32* %163, align 4
  store i32 -741656084, i32* %17
  br label %261

; <label>:164:                                    ; preds = %18
  %165 = load i32, i32* @x.19
  %166 = load i32, i32* @y.20
  %167 = sub i32 0, 1
  %168 = add i32 %165, %167
  %169 = sub i32 %165, 1
  %170 = mul i32 %165, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %166, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  %178 = select i1 %176, i32 408632495, i32 356010515
  store i32 %178, i32* %17
  br label %261

; <label>:179:                                    ; preds = %18
  %180 = load volatile i32*, i32** %4
  store i32 -1, i32* %180, align 4
  %181 = load i32, i32* @x.19
  %182 = load i32, i32* @y.20
  %183 = sub i32 %181, 660038936
  %184 = sub i32 %183, 1
  %185 = add i32 %184, 660038936
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 false, true
  %194 = and i1 %191, false
  %195 = and i1 %189, %193
  %196 = and i1 %192, false
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 false, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  %207 = select i1 %205, i32 413332883, i32 356010515
  store i32 %207, i32* %17
  br label %261

; <label>:208:                                    ; preds = %18
  store i32 -741656084, i32* %17
  br label %261

; <label>:209:                                    ; preds = %18
  %210 = load volatile i32*, i32** %4
  %211 = load i32, i32* %210, align 4
  ret i32 %211

; <label>:212:                                    ; preds = %18
  %213 = alloca i32, align 4
  %214 = alloca i8, align 1
  store i8 %0, i8* %214, align 1
  %215 = load i8, i8* %214, align 1
  %216 = sext i8 %215 to i32
  %217 = call i32 @isdigit(i32 %216) #13
  %218 = icmp ne i32 %217, 0
  store i32 -1936102262, i32* %17
  br label %261

; <label>:219:                                    ; preds = %18
  %220 = load volatile i8*, i8** %3
  %221 = load i8, i8* %220, align 1
  %222 = sext i8 %221 to i32
  %223 = shl i32 %222, 97
  %224 = shl i32 %222, 97
  %225 = sub i32 %222, 155849886
  %226 = sub i32 %225, 97
  %227 = add i32 %226, 155849886
  %228 = sub i32 %222, 97
  %229 = mul i32 %227, 97
  %230 = sub i32 0, -1991325134
  %231 = sub i32 %230, %222
  %232 = add i32 %231, -1991325134
  %233 = sub i32 0, %222
  %234 = sub i32 0, %232
  %235 = sub i32 0, 97
  %236 = add i32 %234, %235
  %237 = sub i32 0, %236
  %238 = add i32 %232, 97
  %239 = sub i32 0, 97
  %240 = add i32 %222, %239
  %241 = sub i32 %222, 97
  %242 = mul i32 %240, 97
  %243 = add i32 %222, 231778951
  %244 = sub i32 %243, 97
  %245 = sub i32 %244, 231778951
  %246 = sub i32 %222, 97
  %247 = mul i32 %245, 97
  %248 = shl i32 %222, 97
  %249 = sub i32 %222, -1687691150
  %250 = sub i32 %249, 97
  %251 = add i32 %250, -1687691150
  %252 = sub i32 %222, 97
  %253 = mul i32 %251, 97
  %254 = add i32 %222, -1946711238
  %255 = sub i32 %254, 97
  %256 = sub i32 %255, -1946711238
  %257 = sub nsw i32 %222, 97
  %258 = load volatile i32*, i32** %4
  store i32 %256, i32* %258, align 4
  store i32 778597882, i32* %17
  br label %261

; <label>:259:                                    ; preds = %18
  %260 = load volatile i32*, i32** %4
  store i32 -1, i32* %260, align 4
  store i32 408632495, i32* %17
  br label %261

; <label>:261:                                    ; preds = %259, %219, %212, %208, %179, %164, %155, %148, %147, %111, %96, %89, %80, %77, %41, %21, %20
  br label %18
}

; Function Attrs: nounwind readonly
declare i32 @isdigit(i32) #5

; Function Attrs: nounwind readonly
declare i32 @islower(i32) #5

; Function Attrs: nounwind readonly
declare i32 @isupper(i32) #5

; Function Attrs: noinline nounwind uwtable
define signext i8 @_Z5itocdi(i32) #4 {
  %2 = alloca i8
  %3 = alloca i32
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store i32 %0, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = sub i32 %7, 1284735601
  %9 = add i32 %8, 48
  %10 = add i32 %9, 1284735601
  %11 = add nsw i32 %7, 48
  %12 = trunc i32 %10 to i8
  store i8 %12, i8* %6, align 1
  %13 = load i8, i8* %6, align 1
  %14 = sext i8 %13 to i32
  %15 = call i32 @isdigit(i32 %14) #13
  store i32 %15, i32* %3
  %16 = alloca i32
  store i32 -1238468897, i32* %16
  br label %17

; <label>:17:                                     ; preds = %1, %142
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1238468897, label %20
    i32 828196113, label %24
    i32 -1179759056, label %26
    i32 -1955724051, label %53
    i32 593387788, label %80
    i32 -1754302878, label %81
    i32 1122927775, label %108
    i32 569515265, label %137
    i32 778552567, label %139
    i32 1872989346, label %140
  ]

; <label>:19:                                     ; preds = %17
  br label %142

; <label>:20:                                     ; preds = %17
  %21 = load volatile i32, i32* %3
  %22 = icmp ne i32 %21, 0
  %23 = select i1 %22, i32 828196113, i32 -1179759056
  store i32 %23, i32* %16
  br label %142

; <label>:24:                                     ; preds = %17
  %25 = load i8, i8* %6, align 1
  store i8 %25, i8* %4, align 1
  store i32 -1754302878, i32* %16
  br label %142

; <label>:26:                                     ; preds = %17
  %27 = load i32, i32* @x.21
  %28 = load i32, i32* @y.22
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -1955724051, i32 778552567
  store i32 %52, i32* %16
  br label %142

; <label>:53:                                     ; preds = %17
  store i8 0, i8* %4, align 1
  %54 = load i32, i32* @x.21
  %55 = load i32, i32* @y.22
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 593387788, i32 778552567
  store i32 %79, i32* %16
  br label %142

; <label>:80:                                     ; preds = %17
  store i32 -1754302878, i32* %16
  br label %142

; <label>:81:                                     ; preds = %17
  %82 = load i32, i32* @x.21
  %83 = load i32, i32* @y.22
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 1122927775, i32 1872989346
  store i32 %107, i32* %16
  br label %142

; <label>:108:                                    ; preds = %17
  %109 = load i8, i8* %4, align 1
  store i8 %109, i8* %2
  %110 = load i32, i32* @x.21
  %111 = load i32, i32* @y.22
  %112 = sub i32 %110, -140680839
  %113 = sub i32 %112, 1
  %114 = add i32 %113, -140680839
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 true, true
  %123 = and i1 %120, true
  %124 = and i1 %118, %122
  %125 = and i1 %121, true
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 true, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  %136 = select i1 %134, i32 569515265, i32 1872989346
  store i32 %136, i32* %16
  br label %142

; <label>:137:                                    ; preds = %17
  %138 = load volatile i8, i8* %2
  ret i8 %138

; <label>:139:                                    ; preds = %17
  store i8 0, i8* %4, align 1
  store i32 -1955724051, i32* %16
  br label %142

; <label>:140:                                    ; preds = %17
  %141 = load i8, i8* %4, align 1
  store i32 1122927775, i32* %16
  br label %142

; <label>:142:                                    ; preds = %140, %139, %108, %81, %80, %53, %26, %24, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @_Z5itocli(i32) #4 {
  %2 = alloca i32
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = sub i32 %6, -1808001107
  %8 = add i32 %7, 97
  %9 = add i32 %8, -1808001107
  %10 = add nsw i32 %6, 97
  %11 = trunc i32 %9 to i8
  store i8 %11, i8* %5, align 1
  %12 = load i8, i8* %5, align 1
  %13 = sext i8 %12 to i32
  %14 = call i32 @islower(i32 %13) #13
  store i32 %14, i32* %2
  %15 = alloca i32
  store i32 -2117468925, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %28
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2117468925, label %19
    i32 1342240038, label %23
    i32 -1701592480, label %25
    i32 -1831300597, label %26
  ]

; <label>:18:                                     ; preds = %16
  br label %28

; <label>:19:                                     ; preds = %16
  %20 = load volatile i32, i32* %2
  %21 = icmp ne i32 %20, 0
  %22 = select i1 %21, i32 1342240038, i32 -1701592480
  store i32 %22, i32* %15
  br label %28

; <label>:23:                                     ; preds = %16
  %24 = load i8, i8* %5, align 1
  store i8 %24, i8* %3, align 1
  store i32 -1831300597, i32* %15
  br label %28

; <label>:25:                                     ; preds = %16
  store i8 0, i8* %3, align 1
  store i32 -1831300597, i32* %15
  br label %28

; <label>:26:                                     ; preds = %16
  %27 = load i8, i8* %3, align 1
  ret i8 %27

; <label>:28:                                     ; preds = %25, %23, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define signext i8 @_Z5itocui(i32) #4 {
  %2 = alloca i8
  %3 = alloca i32
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store i32 %0, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = sub i32 0, %7
  %9 = sub i32 0, 65
  %10 = add i32 %8, %9
  %11 = sub i32 0, %10
  %12 = add nsw i32 %7, 65
  %13 = trunc i32 %11 to i8
  store i8 %13, i8* %6, align 1
  %14 = load i8, i8* %6, align 1
  %15 = sext i8 %14 to i32
  %16 = call i32 @isupper(i32 %15) #13
  store i32 %16, i32* %3
  %17 = alloca i32
  store i32 -1986664234, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %122
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1986664234, label %21
    i32 418907344, label %25
    i32 -427066270, label %27
    i32 -1341987050, label %55
    i32 -898155811, label %71
    i32 -1643216612, label %72
    i32 908563113, label %88
    i32 626359713, label %117
    i32 1486948287, label %119
    i32 1813193834, label %120
  ]

; <label>:20:                                     ; preds = %18
  br label %122

; <label>:21:                                     ; preds = %18
  %22 = load volatile i32, i32* %3
  %23 = icmp ne i32 %22, 0
  %24 = select i1 %23, i32 418907344, i32 -427066270
  store i32 %24, i32* %17
  br label %122

; <label>:25:                                     ; preds = %18
  %26 = load i8, i8* %6, align 1
  store i8 %26, i8* %4, align 1
  store i32 -1643216612, i32* %17
  br label %122

; <label>:27:                                     ; preds = %18
  %28 = load i32, i32* @x.25
  %29 = load i32, i32* @y.26
  %30 = sub i32 %28, -1936868054
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1936868054
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1341987050, i32 1486948287
  store i32 %54, i32* %17
  br label %122

; <label>:55:                                     ; preds = %18
  store i8 0, i8* %4, align 1
  %56 = load i32, i32* @x.25
  %57 = load i32, i32* @y.26
  %58 = add i32 %56, 494139752
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 494139752
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -898155811, i32 1486948287
  store i32 %70, i32* %17
  br label %122

; <label>:71:                                     ; preds = %18
  store i32 -1643216612, i32* %17
  br label %122

; <label>:72:                                     ; preds = %18
  %73 = load i32, i32* @x.25
  %74 = load i32, i32* @y.26
  %75 = add i32 %73, -1767314444
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -1767314444
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 908563113, i32 1813193834
  store i32 %87, i32* %17
  br label %122

; <label>:88:                                     ; preds = %18
  %89 = load i8, i8* %4, align 1
  store i8 %89, i8* %2
  %90 = load i32, i32* @x.25
  %91 = load i32, i32* @y.26
  %92 = sub i32 %90, -1702996497
  %93 = sub i32 %92, 1
  %94 = add i32 %93, -1702996497
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 626359713, i32 1813193834
  store i32 %116, i32* %17
  br label %122

; <label>:117:                                    ; preds = %18
  %118 = load volatile i8, i8* %2
  ret i8 %118

; <label>:119:                                    ; preds = %18
  store i8 0, i8* %4, align 1
  store i32 -1341987050, i32* %17
  br label %122

; <label>:120:                                    ; preds = %18
  %121 = load i8, i8* %4, align 1
  store i32 908563113, i32* %17
  br label %122

; <label>:122:                                    ; preds = %120, %119, %88, %72, %71, %55, %27, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.4() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.27
  %4 = load i32, i32* @y.28
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -1149716545, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %56
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1149716545, label %16
    i32 -1400520968, label %36
    i32 -918415835, label %53
    i32 131807795, label %54
  ]

; <label>:15:                                     ; preds = %13
  br label %56

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 false, true
  %22 = and i1 %19, false
  %23 = and i1 %17, %21
  %24 = and i1 %20, false
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 false, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  %35 = select i1 %33, i32 -1400520968, i32 131807795
  store i32 %35, i32* %12
  br label %56

; <label>:36:                                     ; preds = %13
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector"* @adjMat) #3
  %37 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @adjMat to i8*), i8* @__dso_handle) #3
  %38 = load i32, i32* @x.27
  %39 = load i32, i32* @y.28
  %40 = add i32 %38, -436812308
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -436812308
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -918415835, i32 131807795
  store i32 %52, i32* %12
  br label %56

; <label>:53:                                     ; preds = %13
  ret void

; <label>:54:                                     ; preds = %13
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector"* @adjMat) #3
  %55 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @adjMat to i8*), i8* @__dso_handle) #3
  store i32 -1400520968, i32* %12
  br label %56

; <label>:56:                                     ; preds = %54, %36, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = add i32 %2, 1026998485
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1026998485
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %111

; <label>:16:                                     ; preds = %1, %111
  %17 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %17, align 8
  %18 = load %"class.std::vector"*, %"class.std::vector"** %17, align 8
  %19 = bitcast %"class.std::vector"* %18 to %"struct.std::_Vector_base"*
  %20 = load i32, i32* @x.29
  %21 = load i32, i32* @y.30
  %22 = add i32 %20, 1529158271
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1529158271
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %111

; <label>:46:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base"* %19)
          to label %47 unwind label %78

; <label>:47:                                     ; preds = %46
  %48 = load i32, i32* @x.29
  %49 = load i32, i32* @y.30
  %50 = add i32 %48, -448635108
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -448635108
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %115

; <label>:62:                                     ; preds = %47, %115
  %63 = load i32, i32* @x.29
  %64 = load i32, i32* @y.30
  %65 = add i32 %63, -1630977728
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, -1630977728
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %115

; <label>:77:                                     ; preds = %62
  ret void

; <label>:78:                                     ; preds = %46
  %79 = load i32, i32* @x.29
  %80 = load i32, i32* @y.30
  %81 = sub i32 %79, 1400981382
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 1400981382
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %116

; <label>:93:                                     ; preds = %78, %116
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #12
  %96 = load i32, i32* @x.29
  %97 = load i32, i32* @y.30
  %98 = sub i32 %96, -990923415
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -990923415
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %116

; <label>:110:                                    ; preds = %93
  unreachable

; <label>:111:                                    ; preds = %16, %1
  %112 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %112, align 8
  %113 = load %"class.std::vector"*, %"class.std::vector"** %112, align 8
  %114 = bitcast %"class.std::vector"* %113 to %"struct.std::_Vector_base"*
  br label %16

; <label>:115:                                    ; preds = %62, %47
  br label %62

; <label>:116:                                    ; preds = %93, %78
  %117 = landingpad { i8*, i32 }
          catch i8* null
  %118 = extractvalue { i8*, i32 } %117, 0
  call void @__clang_call_terminate(i8* %118) #12
  br label %93
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.31
  %3 = load i32, i32* @y.32
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %136

; <label>:15:                                     ; preds = %1, %136
  %16 = alloca %"class.std::vector"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %16, align 8
  %19 = load %"class.std::vector"*, %"class.std::vector"** %16, align 8
  %20 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %24 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %25, i32 0, i32 1
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %26, align 8
  %28 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  %29 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %28) #3
  %30 = load i32, i32* @x.31
  %31 = load i32, i32* @y.32
  %32 = add i32 %30, 1466202231
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1466202231
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %136

; <label>:44:                                     ; preds = %15
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.0"* %23, %"class.std::vector.0"* %27, %"class.std::allocator"* dereferenceable(1) %29)
          to label %45 unwind label %88

; <label>:45:                                     ; preds = %44
  %46 = load i32, i32* @x.31
  %47 = load i32, i32* @y.32
  %48 = sub i32 %46, 8983050
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 8983050
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %151

; <label>:60:                                     ; preds = %45, %151
  %61 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %61) #3
  %62 = load i32, i32* @x.31
  %63 = load i32, i32* @y.32
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %151

; <label>:87:                                     ; preds = %60
  ret void

; <label>:88:                                     ; preds = %44
  %89 = landingpad { i8*, i32 }
          catch i8* null
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %17, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %18, align 4
  %92 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %92) #3
  br label %93

; <label>:93:                                     ; preds = %88
  %94 = load i32, i32* @x.31
  %95 = load i32, i32* @y.32
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  br i1 %117, label %119, label %153

; <label>:119:                                    ; preds = %93, %153
  %120 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %120) #12
  %121 = load i32, i32* @x.31
  %122 = load i32, i32* @y.32
  %123 = add i32 %121, -1948209188
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, -1948209188
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %153

; <label>:135:                                    ; preds = %119
  unreachable

; <label>:136:                                    ; preds = %15, %1
  %137 = alloca %"class.std::vector"*, align 8
  %138 = alloca i8*
  %139 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %137, align 8
  %140 = load %"class.std::vector"*, %"class.std::vector"** %137, align 8
  %141 = bitcast %"class.std::vector"* %140 to %"struct.std::_Vector_base"*
  %142 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %141, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %142, i32 0, i32 0
  %144 = load %"class.std::vector.0"*, %"class.std::vector.0"** %143, align 8
  %145 = bitcast %"class.std::vector"* %140 to %"struct.std::_Vector_base"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %146, i32 0, i32 1
  %148 = load %"class.std::vector.0"*, %"class.std::vector.0"** %147, align 8
  %149 = bitcast %"class.std::vector"* %140 to %"struct.std::_Vector_base"*
  %150 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %149) #3
  br label %15

; <label>:151:                                    ; preds = %60, %45
  %152 = bitcast %"class.std::vector"* %19 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %152) #3
  br label %60

; <label>:153:                                    ; preds = %119, %93
  %154 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %154) #12
  br label %119
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.5() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.33
  %4 = load i32, i32* @y.34
  %5 = add i32 %3, -745021736
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -745021736
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 1430405649, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %45
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1430405649, label %17
    i32 -1375748538, label %25
    i32 -1363386660, label %42
    i32 147002007, label %43
  ]

; <label>:16:                                     ; preds = %14
  br label %45

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1375748538, i32 147002007
  store i32 %24, i32* %13
  br label %45

; <label>:25:                                     ; preds = %14
  call void @_ZNSt6vectorISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EEC2Ev(%"class.std::vector.1"* @adjList) #3
  %26 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.1"*)* @_ZNSt6vectorISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.1"* @adjList to i8*), i8* @__dso_handle) #3
  %27 = load i32, i32* @x.33
  %28 = load i32, i32* @y.34
  %29 = sub i32 %27, -2121390698
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -2121390698
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -1363386660, i32 147002007
  store i32 %41, i32* %13
  br label %45

; <label>:42:                                     ; preds = %14
  ret void

; <label>:43:                                     ; preds = %14
  call void @_ZNSt6vectorISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EEC2Ev(%"class.std::vector.1"* @adjList) #3
  %44 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.1"*)* @_ZNSt6vectorISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.1"* @adjList to i8*), i8* @__dso_handle) #3
  store i32 -1375748538, i32* %13
  br label %45

; <label>:45:                                     ; preds = %43, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EEC2Ev(%"class.std::vector.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.1"*, align 8
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %2, align 8
  %3 = load %"class.std::vector.1"*, %"class.std::vector.1"** %2, align 8
  %4 = bitcast %"class.std::vector.1"* %3 to %"struct.std::_Vector_base.2"*
  invoke void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EEC2Ev(%"struct.std::_Vector_base.2"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.35
  %8 = load i32, i32* @y.36
  %9 = add i32 %7, -654636807
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -654636807
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = and i1 %15, %16
  %18 = xor i1 %15, %16
  %19 = or i1 %17, %18
  %20 = or i1 %15, %16
  br i1 %19, label %21, label %39

; <label>:21:                                     ; preds = %6, %39
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  call void @__clang_call_terminate(i8* %23) #12
  %24 = load i32, i32* @x.35
  %25 = load i32, i32* @y.36
  %26 = sub i32 %24, -1110956543
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1110956543
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %39

; <label>:38:                                     ; preds = %21
  unreachable

; <label>:39:                                     ; preds = %21, %6
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  call void @__clang_call_terminate(i8* %41) #12
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EED2Ev(%"class.std::vector.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.37
  %3 = load i32, i32* @y.38
  %4 = add i32 %2, -595937082
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -595937082
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %67

; <label>:28:                                     ; preds = %1, %67
  %29 = alloca %"class.std::vector.1"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %29, align 8
  %32 = load %"class.std::vector.1"*, %"class.std::vector.1"** %29, align 8
  %33 = bitcast %"class.std::vector.1"* %32 to %"struct.std::_Vector_base.2"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::set"*, %"class.std::set"** %35, align 8
  %37 = bitcast %"class.std::vector.1"* %32 to %"struct.std::_Vector_base.2"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"class.std::set"*, %"class.std::set"** %39, align 8
  %41 = bitcast %"class.std::vector.1"* %32 to %"struct.std::_Vector_base.2"*
  %42 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"* %41) #3
  %43 = load i32, i32* @x.37
  %44 = load i32, i32* @y.38
  %45 = add i32 %43, 2119856484
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 2119856484
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %67

; <label>:57:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPSt3setISt4pairIiiESt4lessIS2_ESaIS2_EES6_EvT_S8_RSaIT0_E(%"class.std::set"* %36, %"class.std::set"* %40, %"class.std::allocator.3"* dereferenceable(1) %42)
          to label %58 unwind label %60

; <label>:58:                                     ; preds = %57
  %59 = bitcast %"class.std::vector.1"* %32 to %"struct.std::_Vector_base.2"*
  call void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EED2Ev(%"struct.std::_Vector_base.2"* %59) #3
  ret void

; <label>:60:                                     ; preds = %57
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %30, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %31, align 4
  %64 = bitcast %"class.std::vector.1"* %32 to %"struct.std::_Vector_base.2"*
  call void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EED2Ev(%"struct.std::_Vector_base.2"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %66) #12
  unreachable

; <label>:67:                                     ; preds = %28, %1
  %68 = alloca %"class.std::vector.1"*, align 8
  %69 = alloca i8*
  %70 = alloca i32
  store %"class.std::vector.1"* %0, %"class.std::vector.1"** %68, align 8
  %71 = load %"class.std::vector.1"*, %"class.std::vector.1"** %68, align 8
  %72 = bitcast %"class.std::vector.1"* %71 to %"struct.std::_Vector_base.2"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %73, i32 0, i32 0
  %75 = load %"class.std::set"*, %"class.std::set"** %74, align 8
  %76 = bitcast %"class.std::vector.1"* %71 to %"struct.std::_Vector_base.2"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load %"class.std::set"*, %"class.std::set"** %78, align 8
  %80 = bitcast %"class.std::vector.1"* %71 to %"struct.std::_Vector_base.2"*
  %81 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"* %80) #3
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define void @_Z13graphDijkstrav() #4 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.39
  %4 = load i32, i32* @y.40
  %5 = sub i32 %3, -538413095
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -538413095
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 145361527, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %55
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 145361527, label %17
    i32 -140549250, label %37
    i32 1594103539, label %53
    i32 739675850, label %54
  ]

; <label>:16:                                     ; preds = %14
  br label %55

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -140549250, i32 739675850
  store i32 %36, i32* %13
  br label %55

; <label>:37:                                     ; preds = %14
  %38 = load i32, i32* @x.39
  %39 = load i32, i32* @y.40
  %40 = add i32 %38, -1590222045
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1590222045
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1594103539, i32 739675850
  store i32 %52, i32* %13
  br label %55

; <label>:53:                                     ; preds = %14
  ret void

; <label>:54:                                     ; preds = %14
  store i32 -140549250, i32* %13
  br label %55

; <label>:55:                                     ; preds = %54, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define void @_Z16graphBellmanFordv() #4 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.41
  %4 = load i32, i32* @y.42
  %5 = sub i32 %3, 1131498238
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1131498238
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1670591017, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %43
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1670591017, label %17
    i32 -59005554, label %25
    i32 1160171761, label %41
    i32 2053422662, label %42
  ]

; <label>:16:                                     ; preds = %14
  br label %43

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -59005554, i32 2053422662
  store i32 %24, i32* %13
  br label %43

; <label>:25:                                     ; preds = %14
  %26 = load i32, i32* @x.41
  %27 = load i32, i32* @y.42
  %28 = sub i32 %26, 1266550351
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 1266550351
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 1160171761, i32 2053422662
  store i32 %40, i32* %13
  br label %43

; <label>:41:                                     ; preds = %14
  ret void

; <label>:42:                                     ; preds = %14
  store i32 -59005554, i32* %13
  br label %43

; <label>:43:                                     ; preds = %42, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define void @_Z18graphWarshallFloydv() #4 {
  ret void
}

; Function Attrs: noinline uwtable
define i64 @_Z3gcdxx(i64, i64) #0 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i64 %0, i64* %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load i64, i64* %6, align 8
  %9 = load i64, i64* %7, align 8
  %10 = srem i64 %8, %9
  store i64 %10, i64* %4
  %11 = alloca i32
  store i32 -405585554, i32* %11
  br label %12

; <label>:12:                                     ; preds = %2, %108
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -405585554, label %15
    i32 862659931, label %19
    i32 -256056589, label %34
    i32 -1217222495, label %51
    i32 120202476, label %52
    i32 437025781, label %58
    i32 -926534480, label %73
    i32 1625770236, label %102
    i32 -2035816884, label %104
    i32 -1340720319, label %106
  ]

; <label>:14:                                     ; preds = %12
  br label %108

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp eq i64 %16, 0
  %18 = select i1 %17, i32 862659931, i32 120202476
  store i32 %18, i32* %11
  br label %108

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.45
  %21 = load i32, i32* @y.46
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -256056589, i32 -2035816884
  store i32 %33, i32* %11
  br label %108

; <label>:34:                                     ; preds = %12
  %35 = load i64, i64* %7, align 8
  store i64 %35, i64* %5, align 8
  %36 = load i32, i32* @x.45
  %37 = load i32, i32* @y.46
  %38 = add i32 %36, -1344908282
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1344908282
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1217222495, i32 -2035816884
  store i32 %50, i32* %11
  br label %108

; <label>:51:                                     ; preds = %12
  store i32 437025781, i32* %11
  br label %108

; <label>:52:                                     ; preds = %12
  %53 = load i64, i64* %7, align 8
  %54 = load i64, i64* %6, align 8
  %55 = load i64, i64* %7, align 8
  %56 = srem i64 %54, %55
  %57 = call i64 @_Z3gcdxx(i64 %53, i64 %56)
  store i64 %57, i64* %5, align 8
  store i32 437025781, i32* %11
  br label %108

; <label>:58:                                     ; preds = %12
  %59 = load i32, i32* @x.45
  %60 = load i32, i32* @y.46
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -926534480, i32 -1340720319
  store i32 %72, i32* %11
  br label %108

; <label>:73:                                     ; preds = %12
  %74 = load i64, i64* %5, align 8
  store i64 %74, i64* %3
  %75 = load i32, i32* @x.45
  %76 = load i32, i32* @y.46
  %77 = sub i32 %75, 1092153765
  %78 = sub i32 %77, 1
  %79 = add i32 %78, 1092153765
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 1625770236, i32 -1340720319
  store i32 %101, i32* %11
  br label %108

; <label>:102:                                    ; preds = %12
  %103 = load volatile i64, i64* %3
  ret i64 %103

; <label>:104:                                    ; preds = %12
  %105 = load i64, i64* %7, align 8
  store i64 %105, i64* %5, align 8
  store i32 -256056589, i32* %11
  br label %108

; <label>:106:                                    ; preds = %12
  %107 = load i64, i64* %5, align 8
  store i32 -926534480, i32* %11
  br label %108

; <label>:108:                                    ; preds = %106, %104, %73, %58, %52, %51, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define i64 @_Z3lcmxx(i64, i64) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = mul nsw i64 %5, %6
  %8 = load i64, i64* %3, align 8
  %9 = load i64, i64* %4, align 8
  %10 = call i64 @_Z3gcdxx(i64 %8, i64 %9)
  %11 = sdiv i64 %7, %10
  ret i64 %11
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z8divTimesxx(i64, i64) #4 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %6 = alloca i32
  store i32 -1316961064, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %27
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -1316961064, label %10
    i32 586569719, label %16
    i32 1880089424, label %25
  ]

; <label>:9:                                      ; preds = %7
  br label %27

; <label>:10:                                     ; preds = %7
  %11 = load i64, i64* %3, align 8
  %12 = load i64, i64* %4, align 8
  %13 = srem i64 %11, %12
  %14 = icmp eq i64 %13, 0
  %15 = select i1 %14, i32 586569719, i32 1880089424
  store i32 %15, i32* %6
  br label %27

; <label>:16:                                     ; preds = %7
  %17 = load i64, i64* %4, align 8
  %18 = load i64, i64* %3, align 8
  %19 = sdiv i64 %18, %17
  store i64 %19, i64* %3, align 8
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 %20, 8822143677787552177
  %22 = add i64 %21, 1
  %23 = add i64 %22, 8822143677787552177
  %24 = add nsw i64 %20, 1
  store i64 %23, i64* %5, align 8
  store i32 -1316961064, i32* %6
  br label %27

; <label>:25:                                     ; preds = %7
  %26 = load i64, i64* %5, align 8
  ret i64 %26

; <label>:27:                                     ; preds = %16, %10, %9
  br label %7
}

; Function Attrs: noinline uwtable
define i64 @_Z6powModxx(i64, i64) #0 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.51
  %13 = load i32, i32* @y.52
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %11
  %20 = icmp slt i32 %13, 10
  store i1 %20, i1* %10
  %21 = alloca i32
  store i32 1129243277, i32* %21
  br label %22

; <label>:22:                                     ; preds = %2, %347
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 1129243277, label %25
    i32 1744589160, label %45
    i32 -513500145, label %70
    i32 1651331487, label %73
    i32 -1710242467, label %75
    i32 565330984, label %103
    i32 -1974427367, label %135
    i32 -171415399, label %138
    i32 -793508815, label %153
    i32 -101225198, label %181
    i32 -964283488, label %222
    i32 -1335927857, label %223
    i32 634809855, label %251
    i32 -2029369334, label %269
    i32 41248668, label %271
    i32 -1430693478, label %278
    i32 -1091605693, label %288
    i32 1962859767, label %344
  ]

; <label>:24:                                     ; preds = %22
  br label %347

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %11
  %27 = load volatile i1, i1* %10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 1744589160, i32 41248668
  store i32 %44, i32* %21
  br label %347

; <label>:45:                                     ; preds = %22
  %46 = alloca i64, align 8
  store i64* %46, i64** %9
  %47 = alloca i64, align 8
  store i64* %47, i64** %8
  %48 = alloca i64, align 8
  store i64* %48, i64** %7
  %49 = alloca i64, align 8
  store i64* %49, i64** %6
  %50 = load volatile i64*, i64** %8
  store i64 %0, i64* %50, align 8
  %51 = load volatile i64*, i64** %7
  store i64 %1, i64* %51, align 8
  %52 = load volatile i64*, i64** %7
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  store i1 %54, i1* %5
  %55 = load i32, i32* @x.51
  %56 = load i32, i32* @y.52
  %57 = sub i32 %55, 547023011
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 547023011
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -513500145, i32 41248668
  store i32 %69, i32* %21
  br label %347

; <label>:70:                                     ; preds = %22
  %71 = load volatile i1, i1* %5
  %72 = select i1 %71, i32 1651331487, i32 -1710242467
  store i32 %72, i32* %21
  br label %347

; <label>:73:                                     ; preds = %22
  %74 = load volatile i64*, i64** %9
  store i64 1, i64* %74, align 8
  store i32 -1335927857, i32* %21
  br label %347

; <label>:75:                                     ; preds = %22
  %76 = load i32, i32* @x.51
  %77 = load i32, i32* @y.52
  %78 = sub i32 %76, 538470245
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 538470245
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  %102 = select i1 %100, i32 565330984, i32 -1430693478
  store i32 %102, i32* %21
  br label %347

; <label>:103:                                    ; preds = %22
  %104 = load volatile i64*, i64** %7
  %105 = load i64, i64* %104, align 8
  %106 = srem i64 %105, 2
  %107 = icmp eq i64 %106, 0
  store i1 %107, i1* %4
  %108 = load i32, i32* @x.51
  %109 = load i32, i32* @y.52
  %110 = sub i32 %108, 556713919
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 556713919
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -1974427367, i32 -1430693478
  store i32 %134, i32* %21
  br label %347

; <label>:135:                                    ; preds = %22
  %136 = load volatile i1, i1* %4
  %137 = select i1 %136, i32 -171415399, i32 -793508815
  store i32 %137, i32* %21
  br label %347

; <label>:138:                                    ; preds = %22
  %139 = load volatile i64*, i64** %8
  %140 = load i64, i64* %139, align 8
  %141 = load volatile i64*, i64** %7
  %142 = load i64, i64* %141, align 8
  %143 = sdiv i64 %142, 2
  %144 = call i64 @_Z6powModxx(i64 %140, i64 %143)
  %145 = load volatile i64*, i64** %6
  store i64 %144, i64* %145, align 8
  %146 = load volatile i64*, i64** %6
  %147 = load i64, i64* %146, align 8
  %148 = load volatile i64*, i64** %6
  %149 = load i64, i64* %148, align 8
  %150 = mul nsw i64 %147, %149
  %151 = srem i64 %150, 1000000007
  %152 = load volatile i64*, i64** %9
  store i64 %151, i64* %152, align 8
  store i32 -1335927857, i32* %21
  br label %347

; <label>:153:                                    ; preds = %22
  %154 = load i32, i32* @x.51
  %155 = load i32, i32* @y.52
  %156 = sub i32 %154, 2093801030
  %157 = sub i32 %156, 1
  %158 = add i32 %157, 2093801030
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 true, true
  %167 = and i1 %164, true
  %168 = and i1 %162, %166
  %169 = and i1 %165, true
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 true, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  %180 = select i1 %178, i32 -101225198, i32 -1091605693
  store i32 %180, i32* %21
  br label %347

; <label>:181:                                    ; preds = %22
  %182 = load volatile i64*, i64** %8
  %183 = load i64, i64* %182, align 8
  %184 = load volatile i64*, i64** %8
  %185 = load i64, i64* %184, align 8
  %186 = load volatile i64*, i64** %7
  %187 = load i64, i64* %186, align 8
  %188 = sub i64 %187, 2063646023267566687
  %189 = sub i64 %188, 1
  %190 = add i64 %189, 2063646023267566687
  %191 = sub nsw i64 %187, 1
  %192 = call i64 @_Z6powModxx(i64 %185, i64 %190)
  %193 = mul nsw i64 %183, %192
  %194 = srem i64 %193, 1000000007
  %195 = load volatile i64*, i64** %9
  store i64 %194, i64* %195, align 8
  %196 = load i32, i32* @x.51
  %197 = load i32, i32* @y.52
  %198 = sub i32 0, 1
  %199 = add i32 %196, %198
  %200 = sub i32 %196, 1
  %201 = mul i32 %196, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %197, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 true, true
  %208 = and i1 %205, true
  %209 = and i1 %203, %207
  %210 = and i1 %206, true
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 true, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  %221 = select i1 %219, i32 -964283488, i32 -1091605693
  store i32 %221, i32* %21
  br label %347

; <label>:222:                                    ; preds = %22
  store i32 -1335927857, i32* %21
  br label %347

; <label>:223:                                    ; preds = %22
  %224 = load i32, i32* @x.51
  %225 = load i32, i32* @y.52
  %226 = add i32 %224, -470110257
  %227 = sub i32 %226, 1
  %228 = sub i32 %227, -470110257
  %229 = sub i32 %224, 1
  %230 = mul i32 %224, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %225, 10
  %234 = xor i1 %232, true
  %235 = xor i1 %233, true
  %236 = xor i1 true, true
  %237 = and i1 %234, true
  %238 = and i1 %232, %236
  %239 = and i1 %235, true
  %240 = and i1 %233, %236
  %241 = or i1 %237, %238
  %242 = or i1 %239, %240
  %243 = xor i1 %241, %242
  %244 = or i1 %234, %235
  %245 = xor i1 %244, true
  %246 = or i1 true, %236
  %247 = and i1 %245, %246
  %248 = or i1 %243, %247
  %249 = or i1 %232, %233
  %250 = select i1 %248, i32 634809855, i32 1962859767
  store i32 %250, i32* %21
  br label %347

; <label>:251:                                    ; preds = %22
  %252 = load volatile i64*, i64** %9
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %3
  %254 = load i32, i32* @x.51
  %255 = load i32, i32* @y.52
  %256 = sub i32 %254, 507049598
  %257 = sub i32 %256, 1
  %258 = add i32 %257, 507049598
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = and i1 %262, %263
  %265 = xor i1 %262, %263
  %266 = or i1 %264, %265
  %267 = or i1 %262, %263
  %268 = select i1 %266, i32 -2029369334, i32 1962859767
  store i32 %268, i32* %21
  br label %347

; <label>:269:                                    ; preds = %22
  %270 = load volatile i64, i64* %3
  ret i64 %270

; <label>:271:                                    ; preds = %22
  %272 = alloca i64, align 8
  %273 = alloca i64, align 8
  %274 = alloca i64, align 8
  %275 = alloca i64, align 8
  store i64 %0, i64* %273, align 8
  store i64 %1, i64* %274, align 8
  %276 = load i64, i64* %274, align 8
  %277 = icmp eq i64 %276, 0
  store i32 1744589160, i32* %21
  br label %347

; <label>:278:                                    ; preds = %22
  %279 = load volatile i64*, i64** %7
  %280 = load i64, i64* %279, align 8
  %281 = add i64 %280, -6204988150462028875
  %282 = sub i64 %281, 2
  %283 = sub i64 %282, -6204988150462028875
  %284 = sub i64 %280, 2
  %285 = mul i64 %283, 2
  %286 = srem i64 %280, 2
  %287 = icmp eq i64 %286, 0
  store i32 565330984, i32* %21
  br label %347

; <label>:288:                                    ; preds = %22
  %289 = load volatile i64*, i64** %8
  %290 = load i64, i64* %289, align 8
  %291 = load volatile i64*, i64** %8
  %292 = load i64, i64* %291, align 8
  %293 = load volatile i64*, i64** %7
  %294 = load i64, i64* %293, align 8
  %295 = shl i64 %294, 1
  %296 = sub i64 0, -4342483183331517431
  %297 = sub i64 %296, %294
  %298 = add i64 %297, -4342483183331517431
  %299 = sub i64 0, %294
  %300 = sub i64 0, %298
  %301 = sub i64 0, 1
  %302 = add i64 %300, %301
  %303 = sub i64 0, %302
  %304 = add i64 %298, 1
  %305 = sub i64 %294, -8005170005433579011
  %306 = sub i64 %305, 1
  %307 = add i64 %306, -8005170005433579011
  %308 = sub i64 %294, 1
  %309 = mul i64 %307, 1
  %310 = shl i64 %294, 1
  %311 = add i64 %294, -4212347386789240890
  %312 = sub i64 %311, 1
  %313 = sub i64 %312, -4212347386789240890
  %314 = sub nsw i64 %294, 1
  %315 = call i64 @_Z6powModxx(i64 %292, i64 %313)
  %316 = shl i64 %290, %315
  %317 = shl i64 %290, %315
  %318 = sub i64 0, %290
  %319 = add i64 0, %318
  %320 = sub i64 0, %290
  %321 = sub i64 0, %319
  %322 = sub i64 0, %315
  %323 = add i64 %321, %322
  %324 = sub i64 0, %323
  %325 = add i64 %319, %315
  %326 = mul nsw i64 %290, %315
  %327 = shl i64 %326, 1000000007
  %328 = add i64 %326, 5220791368854923885
  %329 = sub i64 %328, 1000000007
  %330 = sub i64 %329, 5220791368854923885
  %331 = sub i64 %326, 1000000007
  %332 = mul i64 %330, 1000000007
  %333 = shl i64 %326, 1000000007
  %334 = shl i64 %326, 1000000007
  %335 = sub i64 0, 1392987294380217698
  %336 = sub i64 %335, %326
  %337 = add i64 %336, 1392987294380217698
  %338 = sub i64 0, %326
  %339 = sub i64 0, 1000000007
  %340 = sub i64 %337, %339
  %341 = add i64 %337, 1000000007
  %342 = srem i64 %326, 1000000007
  %343 = load volatile i64*, i64** %9
  store i64 %342, i64* %343, align 8
  store i32 -101225198, i32* %21
  br label %347

; <label>:344:                                    ; preds = %22
  %345 = load volatile i64*, i64** %9
  %346 = load i64, i64* %345, align 8
  store i32 634809855, i32* %21
  br label %347

; <label>:347:                                    ; preds = %344, %288, %278, %271, %251, %223, %222, %181, %153, %138, %135, %103, %75, %73, %70, %45, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.6() #0 section ".text.startup" {
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.6"* @fac) #3
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.6"*)* @_ZNSt6vectorIxSaIxEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.6"* @fac to i8*), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.6"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %4 = bitcast %"class.std::vector.6"* %3 to %"struct.std::_Vector_base.7"*
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.7"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.55
  %8 = load i32, i32* @y.56
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %8, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %62

; <label>:32:                                     ; preds = %6, %62
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #12
  %35 = load i32, i32* @x.55
  %36 = load i32, i32* @y.56
  %37 = add i32 %35, 546904365
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 546904365
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %32
  unreachable

; <label>:62:                                     ; preds = %32, %6
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #12
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.6"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %6 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %15 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %14) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.8"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.7"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.7"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #12
  unreachable
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.7() #0 section ".text.startup" {
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.6"* @finv) #3
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.6"*)* @_ZNSt6vectorIxSaIxEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.6"* @finv to i8*), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.8() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.61
  %4 = load i32, i32* @y.62
  %5 = sub i32 %3, -63791504
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -63791504
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -506135312, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %57
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -506135312, label %17
    i32 1048183304, label %25
    i32 -1567132175, label %54
    i32 -1219186895, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %57

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1048183304, i32 -1219186895
  store i32 %24, i32* %13
  br label %57

; <label>:25:                                     ; preds = %14
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.6"* @inv) #3
  %26 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.6"*)* @_ZNSt6vectorIxSaIxEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.6"* @inv to i8*), i8* @__dso_handle) #3
  %27 = load i32, i32* @x.61
  %28 = load i32, i32* @y.62
  %29 = add i32 %27, 1019037582
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 1019037582
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1567132175, i32 -1219186895
  store i32 %53, i32* %13
  br label %57

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.6"* @inv) #3
  %56 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.6"*)* @_ZNSt6vectorIxSaIxEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.6"* @inv to i8*), i8* @__dso_handle) #3
  store i32 1048183304, i32* %13
  br label %57

; <label>:57:                                     ; preds = %55, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define void @_Z11factModInitv() #0 {
  %1 = alloca i32, align 4
  call void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.6"* @fac, i64 1000009)
  call void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.6"* @finv, i64 1000009)
  call void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.6"* @inv, i64 1000009)
  %2 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @fac, i64 1) #3
  store i64 1, i64* %2, align 8
  %3 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @fac, i64 0) #3
  store i64 1, i64* %3, align 8
  %4 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @finv, i64 1) #3
  store i64 1, i64* %4, align 8
  %5 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @finv, i64 0) #3
  store i64 1, i64* %5, align 8
  %6 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @inv, i64 1) #3
  store i64 1, i64* %6, align 8
  store i32 2, i32* %1, align 4
  %7 = alloca i32
  store i32 1934642196, i32* %7
  br label %8

; <label>:8:                                      ; preds = %0, %189
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 1934642196, label %11
    i32 -1767866848, label %15
    i32 -1116264615, label %64
    i32 1634107253, label %91
    i32 -48496311, label %112
    i32 -1050159647, label %113
    i32 -487264009, label %128
    i32 1895257963, label %155
    i32 -1232350920, label %156
    i32 -723163467, label %188
  ]

; <label>:10:                                     ; preds = %8
  br label %189

; <label>:11:                                     ; preds = %8
  %12 = load i32, i32* %1, align 4
  %13 = icmp slt i32 %12, 1000009
  %14 = select i1 %13, i32 -1767866848, i32 -1050159647
  store i32 %14, i32* %7
  br label %189

; <label>:15:                                     ; preds = %8
  %16 = load i32, i32* %1, align 4
  %17 = sub i32 %16, 1671284877
  %18 = sub i32 %17, 1
  %19 = add i32 %18, 1671284877
  %20 = sub nsw i32 %16, 1
  %21 = sext i32 %19 to i64
  %22 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @fac, i64 %21) #3
  %23 = load i64, i64* %22, align 8
  %24 = load i32, i32* %1, align 4
  %25 = sext i32 %24 to i64
  %26 = mul nsw i64 %23, %25
  %27 = srem i64 %26, 1000000007
  %28 = load i32, i32* %1, align 4
  %29 = sext i32 %28 to i64
  %30 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @fac, i64 %29) #3
  store i64 %27, i64* %30, align 8
  %31 = load i32, i32* %1, align 4
  %32 = srem i32 1000000007, %31
  %33 = sext i32 %32 to i64
  %34 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @inv, i64 %33) #3
  %35 = load i64, i64* %34, align 8
  %36 = load i32, i32* %1, align 4
  %37 = sdiv i32 1000000007, %36
  %38 = sext i32 %37 to i64
  %39 = mul nsw i64 %35, %38
  %40 = srem i64 %39, 1000000007
  %41 = sub i64 1000000007, -1488968285080920842
  %42 = sub i64 %41, %40
  %43 = add i64 %42, -1488968285080920842
  %44 = sub nsw i64 1000000007, %40
  %45 = load i32, i32* %1, align 4
  %46 = sext i32 %45 to i64
  %47 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @inv, i64 %46) #3
  store i64 %43, i64* %47, align 8
  %48 = load i32, i32* %1, align 4
  %49 = sub i32 0, 1
  %50 = add i32 %48, %49
  %51 = sub nsw i32 %48, 1
  %52 = sext i32 %50 to i64
  %53 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @finv, i64 %52) #3
  %54 = load i64, i64* %53, align 8
  %55 = load i32, i32* %1, align 4
  %56 = sext i32 %55 to i64
  %57 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @inv, i64 %56) #3
  %58 = load i64, i64* %57, align 8
  %59 = mul nsw i64 %54, %58
  %60 = srem i64 %59, 1000000007
  %61 = load i32, i32* %1, align 4
  %62 = sext i32 %61 to i64
  %63 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @finv, i64 %62) #3
  store i64 %60, i64* %63, align 8
  store i32 -1116264615, i32* %7
  br label %189

; <label>:64:                                     ; preds = %8
  %65 = load i32, i32* @x.63
  %66 = load i32, i32* @y.64
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 1634107253, i32 -1232350920
  store i32 %90, i32* %7
  br label %189

; <label>:91:                                     ; preds = %8
  %92 = load i32, i32* %1, align 4
  %93 = sub i32 0, %92
  %94 = sub i32 0, 1
  %95 = add i32 %93, %94
  %96 = sub i32 0, %95
  %97 = add nsw i32 %92, 1
  store i32 %96, i32* %1, align 4
  %98 = load i32, i32* @x.63
  %99 = load i32, i32* @y.64
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 -48496311, i32 -1232350920
  store i32 %111, i32* %7
  br label %189

; <label>:112:                                    ; preds = %8
  store i32 1934642196, i32* %7
  br label %189

; <label>:113:                                    ; preds = %8
  %114 = load i32, i32* @x.63
  %115 = load i32, i32* @y.64
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 -487264009, i32 -723163467
  store i32 %127, i32* %7
  br label %189

; <label>:128:                                    ; preds = %8
  %129 = load i32, i32* @x.63
  %130 = load i32, i32* @y.64
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 false, true
  %141 = and i1 %138, false
  %142 = and i1 %136, %140
  %143 = and i1 %139, false
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 false, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  %154 = select i1 %152, i32 1895257963, i32 -723163467
  store i32 %154, i32* %7
  br label %189

; <label>:155:                                    ; preds = %8
  ret void

; <label>:156:                                    ; preds = %8
  %157 = load i32, i32* %1, align 4
  %158 = add i32 0, 109447769
  %159 = sub i32 %158, %157
  %160 = sub i32 %159, 109447769
  %161 = sub i32 0, %157
  %162 = sub i32 0, 1
  %163 = sub i32 %160, %162
  %164 = add i32 %160, 1
  %165 = sub i32 0, %157
  %166 = add i32 0, %165
  %167 = sub i32 0, %157
  %168 = sub i32 %166, 1223304137
  %169 = add i32 %168, 1
  %170 = add i32 %169, 1223304137
  %171 = add i32 %166, 1
  %172 = sub i32 0, 1
  %173 = add i32 %157, %172
  %174 = sub i32 %157, 1
  %175 = mul i32 %173, 1
  %176 = sub i32 0, -489849926
  %177 = sub i32 %176, %157
  %178 = add i32 %177, -489849926
  %179 = sub i32 0, %157
  %180 = add i32 %178, 1856640715
  %181 = add i32 %180, 1
  %182 = sub i32 %181, 1856640715
  %183 = add i32 %178, 1
  %184 = add i32 %157, -1237219443
  %185 = add i32 %184, 1
  %186 = sub i32 %185, -1237219443
  %187 = add nsw i32 %157, 1
  store i32 %186, i32* %1, align 4
  store i32 1634107253, i32* %7
  br label %189

; <label>:188:                                    ; preds = %8
  store i32 -487264009, i32* %7
  br label %189

; <label>:189:                                    ; preds = %188, %156, %128, %113, %112, %91, %64, %15, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.6"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector.6"*
  %6 = alloca %"class.std::vector.6"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::vector.6"*, %"class.std::vector.6"** %6, align 8
  store %"class.std::vector.6"* %8, %"class.std::vector.6"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %11 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"* %10) #3
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 179175317, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %91
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 179175317, label %16
    i32 1398017727, label %21
    i32 -1210681776, label %29
    i32 -1126257785, label %35
    i32 1268847928, label %44
    i32 1400507628, label %60
    i32 391180958, label %88
    i32 813760238, label %89
    i32 1729036378, label %90
  ]

; <label>:15:                                     ; preds = %13
  br label %91

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1398017727, i32 -1210681776
  store i32 %20, i32* %12
  br label %91

; <label>:21:                                     ; preds = %13
  %22 = load i64, i64* %7, align 8
  %23 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %24 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"* %23) #3
  %25 = sub i64 0, %24
  %26 = add i64 %22, %25
  %27 = sub i64 %22, %24
  %28 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  call void @_ZNSt6vectorIxSaIxEE17_M_default_appendEm(%"class.std::vector.6"* %28, i64 %26)
  store i32 813760238, i32* %12
  br label %91

; <label>:29:                                     ; preds = %13
  %30 = load i64, i64* %7, align 8
  %31 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %32 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"* %31) #3
  %33 = icmp ult i64 %30, %32
  %34 = select i1 %33, i32 -1126257785, i32 1268847928
  store i32 %34, i32* %12
  br label %91

; <label>:35:                                     ; preds = %13
  %36 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  %37 = bitcast %"class.std::vector.6"* %36 to %"struct.std::_Vector_base.7"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = load i64, i64* %7, align 8
  %42 = getelementptr inbounds i64, i64* %40, i64 %41
  %43 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  call void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.6"* %43, i64* %42) #3
  store i32 1268847928, i32* %12
  br label %91

; <label>:44:                                     ; preds = %13
  %45 = load i32, i32* @x.65
  %46 = load i32, i32* @y.66
  %47 = sub i32 %45, 712535161
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 712535161
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1400507628, i32 1729036378
  store i32 %59, i32* %12
  br label %91

; <label>:60:                                     ; preds = %13
  %61 = load i32, i32* @x.65
  %62 = load i32, i32* @y.66
  %63 = sub i32 %61, 1016919404
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 1016919404
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 391180958, i32 1729036378
  store i32 %87, i32* %12
  br label %91

; <label>:88:                                     ; preds = %13
  store i32 813760238, i32* %12
  br label %91

; <label>:89:                                     ; preds = %13
  ret void

; <label>:90:                                     ; preds = %13
  store i32 1400507628, i32* %12
  br label %91

; <label>:91:                                     ; preds = %90, %88, %60, %44, %35, %29, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %6 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z7factModx(i64) #4 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.69
  %6 = load i32, i32* @y.70
  %7 = sub i32 %5, -180067590
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -180067590
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1562496990, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %112
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1562496990, label %19
    i32 -1532687645, label %27
    i32 1298976161, label %60
    i32 -941445722, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %112

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1532687645, i32 -941445722
  store i32 %26, i32* %15
  br label %112

; <label>:27:                                     ; preds = %16
  %28 = alloca i64, align 8
  store i64 %0, i64* %28, align 8
  %29 = load i64, i64* %28, align 8
  %30 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @fac, i64 %29) #3
  %31 = load i64, i64* %30, align 8
  %32 = srem i64 %31, 1000000007
  store i64 %32, i64* %2
  %33 = load i32, i32* @x.69
  %34 = load i32, i32* @y.70
  %35 = sub i32 %33, 1106054557
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1106054557
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1298976161, i32 -941445722
  store i32 %59, i32* %15
  br label %112

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca i64, align 8
  store i64 %0, i64* %63, align 8
  %64 = load i64, i64* %63, align 8
  %65 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @fac, i64 %64) #3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 0, %66
  %68 = add i64 0, %67
  %69 = sub i64 0, %66
  %70 = sub i64 0, %68
  %71 = sub i64 0, 1000000007
  %72 = add i64 %70, %71
  %73 = sub i64 0, %72
  %74 = add i64 %68, 1000000007
  %75 = sub i64 0, %66
  %76 = add i64 0, %75
  %77 = sub i64 0, %66
  %78 = sub i64 0, 1000000007
  %79 = sub i64 %76, %78
  %80 = add i64 %76, 1000000007
  %81 = add i64 0, 3236204589144169967
  %82 = sub i64 %81, %66
  %83 = sub i64 %82, 3236204589144169967
  %84 = sub i64 0, %66
  %85 = sub i64 0, 1000000007
  %86 = sub i64 %83, %85
  %87 = add i64 %83, 1000000007
  %88 = shl i64 %66, 1000000007
  %89 = shl i64 %66, 1000000007
  %90 = add i64 %66, 4930570070880196221
  %91 = sub i64 %90, 1000000007
  %92 = sub i64 %91, 4930570070880196221
  %93 = sub i64 %66, 1000000007
  %94 = mul i64 %92, 1000000007
  %95 = shl i64 %66, 1000000007
  %96 = add i64 0, 3855553293450089125
  %97 = sub i64 %96, %66
  %98 = sub i64 %97, 3855553293450089125
  %99 = sub i64 0, %66
  %100 = sub i64 0, 1000000007
  %101 = sub i64 %98, %100
  %102 = add i64 %98, 1000000007
  %103 = sub i64 0, 7054935597205754450
  %104 = sub i64 %103, %66
  %105 = add i64 %104, 7054935597205754450
  %106 = sub i64 0, %66
  %107 = add i64 %105, -934457412200967335
  %108 = add i64 %107, 1000000007
  %109 = sub i64 %108, -934457412200967335
  %110 = add i64 %105, 1000000007
  %111 = srem i64 %66, 1000000007
  store i32 -1532687645, i32* %15
  br label %112

; <label>:112:                                    ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z10factInvModx(i64) #4 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* @finv, i64 %3) #3
  %5 = load i64, i64* %4, align 8
  %6 = srem i64 %5, 1000000007
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z7permModxx(i64, i64) #4 {
  %3 = alloca i64
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %3
  %8 = alloca i32
  store i32 2049606091, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %40
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 2049606091, label %12
    i32 678775656, label %16
    i32 -981912150, label %20
    i32 -262924773, label %25
    i32 1077218301, label %26
    i32 -835377729, label %38
  ]

; <label>:11:                                     ; preds = %9
  br label %40

; <label>:12:                                     ; preds = %9
  %13 = load volatile i64, i64* %3
  %14 = icmp slt i64 %13, 0
  %15 = select i1 %14, i32 -262924773, i32 678775656
  store i32 %15, i32* %8
  br label %40

; <label>:16:                                     ; preds = %9
  %17 = load i64, i64* %6, align 8
  %18 = icmp slt i64 %17, 0
  %19 = select i1 %18, i32 -262924773, i32 -981912150
  store i32 %19, i32* %8
  br label %40

; <label>:20:                                     ; preds = %9
  %21 = load i64, i64* %5, align 8
  %22 = load i64, i64* %6, align 8
  %23 = icmp slt i64 %21, %22
  %24 = select i1 %23, i32 -262924773, i32 1077218301
  store i32 %24, i32* %8
  br label %40

; <label>:25:                                     ; preds = %9
  store i64 0, i64* %4, align 8
  store i32 -835377729, i32* %8
  br label %40

; <label>:26:                                     ; preds = %9
  %27 = load i64, i64* %5, align 8
  %28 = call i64 @_Z7factModx(i64 %27)
  %29 = load i64, i64* %5, align 8
  %30 = load i64, i64* %6, align 8
  %31 = sub i64 %29, -3819252055592372077
  %32 = sub i64 %31, %30
  %33 = add i64 %32, -3819252055592372077
  %34 = sub nsw i64 %29, %30
  %35 = call i64 @_Z10factInvModx(i64 %33)
  %36 = mul nsw i64 %28, %35
  %37 = srem i64 %36, 1000000007
  store i64 %37, i64* %4, align 8
  store i32 -835377729, i32* %8
  br label %40

; <label>:38:                                     ; preds = %9
  %39 = load i64, i64* %4, align 8
  ret i64 %39

; <label>:40:                                     ; preds = %26, %25, %20, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z7combModxx(i64, i64) #4 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store i64 %0, i64* %6, align 8
  store i64 %1, i64* %7, align 8
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1552376255, i32* %12
  %13 = alloca i64
  br label %14

; <label>:14:                                     ; preds = %2, %216
  %15 = load i32, i32* %12
  switch i32 %15, label %16 [
    i32 -1552376255, label %17
    i32 -1804640696, label %21
    i32 702691511, label %25
    i32 -1220094875, label %30
    i32 428115245, label %31
    i32 -335071116, label %35
    i32 -134852830, label %51
    i32 -958260014, label %61
    i32 451715022, label %76
    i32 -1715228057, label %104
    i32 909977870, label %106
    i32 1688973182, label %112
    i32 -1322644748, label %115
    i32 1776494129, label %125
    i32 295295443, label %153
    i32 -20994155, label %174
    i32 -80350479, label %175
    i32 1062933942, label %182
    i32 946736180, label %188
    i32 2063038759, label %190
    i32 1694089613, label %192
  ]

; <label>:16:                                     ; preds = %14
  br label %216

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %4
  %19 = icmp slt i64 %18, 0
  %20 = select i1 %19, i32 -1220094875, i32 -1804640696
  store i32 %20, i32* %12
  br label %216

; <label>:21:                                     ; preds = %14
  %22 = load i64, i64* %7, align 8
  %23 = icmp slt i64 %22, 0
  %24 = select i1 %23, i32 -1220094875, i32 702691511
  store i32 %24, i32* %12
  br label %216

; <label>:25:                                     ; preds = %14
  %26 = load i64, i64* %6, align 8
  %27 = load i64, i64* %7, align 8
  %28 = icmp slt i64 %26, %27
  %29 = select i1 %28, i32 -1220094875, i32 428115245
  store i32 %29, i32* %12
  br label %216

; <label>:30:                                     ; preds = %14
  store i64 0, i64* %5, align 8
  store i32 946736180, i32* %12
  br label %216

; <label>:31:                                     ; preds = %14
  %32 = load i64, i64* %6, align 8
  %33 = icmp slt i64 %32, 1000009
  %34 = select i1 %33, i32 -335071116, i32 -134852830
  store i32 %34, i32* %12
  br label %216

; <label>:35:                                     ; preds = %14
  %36 = load i64, i64* %6, align 8
  %37 = call i64 @_Z7factModx(i64 %36)
  %38 = load i64, i64* %7, align 8
  %39 = call i64 @_Z10factInvModx(i64 %38)
  %40 = load i64, i64* %6, align 8
  %41 = load i64, i64* %7, align 8
  %42 = sub i64 %40, 2256142146350085728
  %43 = sub i64 %42, %41
  %44 = add i64 %43, 2256142146350085728
  %45 = sub nsw i64 %40, %41
  %46 = call i64 @_Z10factInvModx(i64 %44)
  %47 = mul nsw i64 %39, %46
  %48 = srem i64 %47, 1000000007
  %49 = mul nsw i64 %37, %48
  %50 = srem i64 %49, 1000000007
  store i64 %50, i64* %5, align 8
  store i32 946736180, i32* %12
  br label %216

; <label>:51:                                     ; preds = %14
  store i64 1, i64* %8, align 8
  %52 = load i64, i64* %7, align 8
  %53 = load i64, i64* %6, align 8
  %54 = load i64, i64* %7, align 8
  %55 = add i64 %53, -4054049318248037540
  %56 = sub i64 %55, %54
  %57 = sub i64 %56, -4054049318248037540
  %58 = sub nsw i64 %53, %54
  %59 = icmp slt i64 %52, %57
  %60 = select i1 %59, i32 -958260014, i32 909977870
  store i32 %60, i32* %12
  br label %216

; <label>:61:                                     ; preds = %14
  %62 = load i32, i32* @x.75
  %63 = load i32, i32* @y.76
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 451715022, i32 2063038759
  store i32 %75, i32* %12
  br label %216

; <label>:76:                                     ; preds = %14
  %77 = load i64, i64* %7, align 8
  store i64 %77, i64* %3
  %78 = load i32, i32* @x.75
  %79 = load i32, i32* @y.76
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 -1715228057, i32 2063038759
  store i32 %103, i32* %12
  br label %216

; <label>:104:                                    ; preds = %14
  store i32 1688973182, i32* %12
  %105 = load volatile i64, i64* %3
  store i64 %105, i64* %13
  br label %216

; <label>:106:                                    ; preds = %14
  %107 = load i64, i64* %6, align 8
  %108 = load i64, i64* %7, align 8
  %109 = sub i64 0, %108
  %110 = add i64 %107, %109
  %111 = sub nsw i64 %107, %108
  store i32 1688973182, i32* %12
  store i64 %110, i64* %13
  br label %216

; <label>:112:                                    ; preds = %14
  %113 = load i64, i64* %13
  store i64 %113, i64* %9, align 8
  %114 = load i64, i64* %6, align 8
  store i64 %114, i64* %10, align 8
  store i32 -1322644748, i32* %12
  br label %216

; <label>:115:                                    ; preds = %14
  %116 = load i64, i64* %10, align 8
  %117 = load i64, i64* %6, align 8
  %118 = load i64, i64* %9, align 8
  %119 = sub i64 %117, -4916299343992379889
  %120 = sub i64 %119, %118
  %121 = add i64 %120, -4916299343992379889
  %122 = sub nsw i64 %117, %118
  %123 = icmp sgt i64 %116, %121
  %124 = select i1 %123, i32 1776494129, i32 1062933942
  store i32 %124, i32* %12
  br label %216

; <label>:125:                                    ; preds = %14
  %126 = load i32, i32* @x.75
  %127 = load i32, i32* @y.76
  %128 = sub i32 %126, 1875045493
  %129 = sub i32 %128, 1
  %130 = add i32 %129, 1875045493
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 295295443, i32 1694089613
  store i32 %152, i32* %12
  br label %216

; <label>:153:                                    ; preds = %14
  %154 = load i64, i64* %10, align 8
  %155 = load i64, i64* %8, align 8
  %156 = mul nsw i64 %155, %154
  store i64 %156, i64* %8, align 8
  %157 = load i64, i64* %8, align 8
  %158 = srem i64 %157, 1000000007
  store i64 %158, i64* %8, align 8
  %159 = load i32, i32* @x.75
  %160 = load i32, i32* @y.76
  %161 = add i32 %159, -585563661
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, -585563661
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  %173 = select i1 %171, i32 -20994155, i32 1694089613
  store i32 %173, i32* %12
  br label %216

; <label>:174:                                    ; preds = %14
  store i32 -80350479, i32* %12
  br label %216

; <label>:175:                                    ; preds = %14
  %176 = load i64, i64* %10, align 8
  %177 = sub i64 0, %176
  %178 = sub i64 0, -1
  %179 = add i64 %177, %178
  %180 = sub i64 0, %179
  %181 = add nsw i64 %176, -1
  store i64 %180, i64* %10, align 8
  store i32 -1322644748, i32* %12
  br label %216

; <label>:182:                                    ; preds = %14
  %183 = load i64, i64* %8, align 8
  %184 = load i64, i64* %9, align 8
  %185 = call i64 @_Z10factInvModx(i64 %184)
  %186 = mul nsw i64 %183, %185
  %187 = srem i64 %186, 1000000007
  store i64 %187, i64* %5, align 8
  store i32 946736180, i32* %12
  br label %216

; <label>:188:                                    ; preds = %14
  %189 = load i64, i64* %5, align 8
  ret i64 %189

; <label>:190:                                    ; preds = %14
  %191 = load i64, i64* %7, align 8
  store i32 451715022, i32* %12
  br label %216

; <label>:192:                                    ; preds = %14
  %193 = load i64, i64* %10, align 8
  %194 = load i64, i64* %8, align 8
  %195 = add i64 %194, 4225207712985059693
  %196 = sub i64 %195, %193
  %197 = sub i64 %196, 4225207712985059693
  %198 = sub i64 %194, %193
  %199 = mul i64 %197, %193
  %200 = mul nsw i64 %194, %193
  store i64 %200, i64* %8, align 8
  %201 = load i64, i64* %8, align 8
  %202 = sub i64 0, 8186203692217389544
  %203 = sub i64 %202, %201
  %204 = add i64 %203, 8186203692217389544
  %205 = sub i64 0, %201
  %206 = sub i64 %204, 7631328534586767241
  %207 = add i64 %206, 1000000007
  %208 = add i64 %207, 7631328534586767241
  %209 = add i64 %204, 1000000007
  %210 = add i64 %201, 2771888889946342582
  %211 = sub i64 %210, 1000000007
  %212 = sub i64 %211, 2771888889946342582
  %213 = sub i64 %201, 1000000007
  %214 = mul i64 %212, 1000000007
  %215 = srem i64 %201, 1000000007
  store i64 %215, i64* %8, align 8
  store i32 295295443, i32* %12
  br label %216

; <label>:216:                                    ; preds = %192, %190, %182, %175, %174, %153, %125, %115, %112, %106, %104, %76, %61, %51, %35, %31, %30, %25, %21, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.9() #0 section ".text.startup" {
  call void @_ZNSt6vectorIbSaIbEEC2Ev(%"class.std::vector.11"* @sieve) #3
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.11"*)* @_ZNSt6vectorIbSaIbEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.11"* @sieve to i8*), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEEC2Ev(%"class.std::vector.11"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to %"struct.std::_Bvector_base"*
  invoke void @_ZNSt13_Bvector_baseISaIbEEC2Ev(%"struct.std::_Bvector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEED2Ev(%"class.std::vector.11"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %3 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %4 = bitcast %"class.std::vector.11"* %3 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z9sieveInitx(i64) #0 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca i1
  %10 = alloca i1
  %11 = alloca i1
  %12 = alloca %"struct.std::_Bit_reference"*
  %13 = alloca i32*
  %14 = alloca %"struct.std::_Bit_reference"*
  %15 = alloca i32*
  %16 = alloca %"struct.std::_Bit_reference"*
  %17 = alloca %"struct.std::_Bit_reference"*
  %18 = alloca i32*
  %19 = alloca i32*
  %20 = alloca i32*
  %21 = alloca %"struct.std::_Bit_reference"*
  %22 = alloca %"struct.std::_Bit_reference"*
  %23 = alloca i32*
  %24 = alloca %"struct.std::_Bit_reference"*
  %25 = alloca %"struct.std::_Bit_reference"*
  %26 = alloca i32*
  %27 = alloca i32*
  %28 = alloca i32*
  %29 = alloca %"struct.std::_Bit_reference"*
  %30 = alloca %"struct.std::_Bit_reference"*
  %31 = alloca i32*
  %32 = alloca %"struct.std::_Bit_reference"*
  %33 = alloca %"struct.std::_Bit_reference"*
  %34 = alloca i32*
  %35 = alloca i32*
  %36 = alloca i32*
  %37 = alloca i32*
  %38 = alloca %"struct.std::_Bit_reference"*
  %39 = alloca %"struct.std::_Bit_reference"*
  %40 = alloca i32*
  %41 = alloca i32*
  %42 = alloca i64*
  %43 = alloca i1
  %44 = alloca i1
  %45 = load i32, i32* @x.83
  %46 = load i32, i32* @y.84
  %47 = add i32 %45, 465829234
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 465829234
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  store i1 %53, i1* %44
  %54 = icmp slt i32 %46, 10
  store i1 %54, i1* %43
  %55 = alloca i32
  store i32 -2135560948, i32* %55
  %56 = alloca i1
  %57 = alloca i1
  %58 = alloca i1
  %59 = alloca i1
  %60 = alloca i1
  br label %61

; <label>:61:                                     ; preds = %1, %2318
  %62 = load i32, i32* %55
  switch i32 %62, label %63 [
    i32 -2135560948, label %64
    i32 753181019, label %84
    i32 1344517318, label %134
    i32 -939551259, label %137
    i32 -844644358, label %165
    i32 -811425934, label %184
    i32 -1723594816, label %187
    i32 1417682809, label %188
    i32 1404869550, label %228
    i32 1172481784, label %233
    i32 -1505295693, label %237
    i32 1812423036, label %244
    i32 -1932818052, label %246
    i32 -1040460078, label %253
    i32 989258446, label %269
    i32 698909769, label %305
    i32 -1025882350, label %307
    i32 1562106424, label %310
    i32 947009404, label %326
    i32 -567666708, label %371
    i32 -2068510501, label %372
    i32 546745345, label %388
    i32 -1964758217, label %422
    i32 -533159858, label %423
    i32 814311432, label %431
    i32 1023104795, label %438
    i32 1355846436, label %453
    i32 -465495377, label %500
    i32 1626309941, label %502
    i32 -812894242, label %505
    i32 438948455, label %532
    i32 1709955845, label %583
    i32 1950156708, label %584
    i32 773363994, label %591
    i32 1721624415, label %619
    i32 -2021848811, label %647
    i32 -752347509, label %648
    i32 584371796, label %656
    i32 519948948, label %657
    i32 1791591247, label %664
    i32 2031629642, label %666
    i32 826016054, label %671
    i32 -1618977995, label %675
    i32 -1652971546, label %703
    i32 -1874239944, label %724
    i32 38342689, label %727
    i32 186819536, label %729
    i32 2014146969, label %744
    i32 -164393221, label %777
    i32 1958209850, label %780
    i32 -950197852, label %800
    i32 360559706, label %829
    i32 807372995, label %857
    i32 -1880620577, label %860
    i32 -1184542816, label %875
    i32 1747513767, label %921
    i32 -1425203850, label %922
    i32 -1691285616, label %929
    i32 -1117879231, label %938
    i32 -466556035, label %945
    i32 1582195900, label %965
    i32 -696393350, label %982
    i32 466049085, label %1009
    i32 1833422543, label %1012
    i32 1747796937, label %1048
    i32 1812411103, label %1056
    i32 -1135726137, label %1057
    i32 -335337212, label %1066
    i32 1535866360, label %1067
    i32 706143760, label %1076
    i32 772704755, label %1078
    i32 1738380735, label %1083
    i32 1430498372, label %1110
    i32 1944400799, label %1139
    i32 -1730016848, label %1140
    i32 -1825471635, label %1147
    i32 -1540398437, label %1174
    i32 468816305, label %1192
    i32 568039084, label %1193
    i32 1200257977, label %1220
    i32 -928387989, label %1252
    i32 -979457317, label %1255
    i32 1165863787, label %1283
    i32 1133430413, label %1318
    i32 1403547569, label %1320
    i32 -274714411, label %1323
    i32 168147324, label %1351
    i32 -2046722317, label %1402
    i32 -375016381, label %1403
    i32 1108679749, label %1411
    i32 -823237853, label %1412
    i32 1876486432, label %1440
    i32 1061127644, label %1464
    i32 -435533749, label %1465
    i32 -597640925, label %1466
    i32 -1800659800, label %1475
    i32 674739064, label %1503
    i32 662112623, label %1531
    i32 -2127138966, label %1532
    i32 -1332186858, label %1539
    i32 -2078858047, label %1553
    i32 -882229456, label %1581
    i32 -301555227, label %1615
    i32 1875079354, label %1616
    i32 -185506106, label %1623
    i32 -1284678181, label %1636
    i32 -1509754493, label %1649
    i32 -445607269, label %1650
    i32 -1995673134, label %1651
    i32 -1104492555, label %1659
    i32 -223560301, label %1674
    i32 1274824955, label %1702
    i32 756011555, label %1703
    i32 -1475885819, label %1737
    i32 1251593834, label %1741
    i32 -159092502, label %1837
    i32 -1386243728, label %1898
    i32 -176325361, label %1933
    i32 812763647, label %1997
    i32 -1969408934, label %2054
    i32 -1473903038, label %2055
    i32 -246335055, label %2061
    i32 1528439780, label %2067
    i32 -1743951801, label %2068
    i32 1895431825, label %2137
    i32 -772133232, label %2138
    i32 2108690218, label %2140
    i32 -463305022, label %2144
    i32 1518368984, label %2150
    i32 -503756739, label %2228
    i32 -1514809380, label %2268
    i32 -2085275579, label %2289
    i32 -1238079287, label %2291
    i32 1359808904, label %2317
  ]

; <label>:63:                                     ; preds = %61
  br label %2318

; <label>:64:                                     ; preds = %61
  %65 = load volatile i1, i1* %44
  %66 = load volatile i1, i1* %43
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 753181019, i32 756011555
  store i32 %83, i32* %55
  br label %2318

; <label>:84:                                     ; preds = %61
  %85 = alloca i64, align 8
  store i64* %85, i64** %42
  %86 = alloca i32, align 4
  store i32* %86, i32** %41
  %87 = alloca i32, align 4
  store i32* %87, i32** %40
  %88 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %88, %"struct.std::_Bit_reference"** %39
  %89 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %89, %"struct.std::_Bit_reference"** %38
  %90 = alloca i32, align 4
  store i32* %90, i32** %37
  %91 = alloca i32, align 4
  store i32* %91, i32** %36
  %92 = alloca i32, align 4
  store i32* %92, i32** %35
  %93 = alloca i32, align 4
  store i32* %93, i32** %34
  %94 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %94, %"struct.std::_Bit_reference"** %33
  %95 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %95, %"struct.std::_Bit_reference"** %32
  %96 = alloca i32, align 4
  store i32* %96, i32** %31
  %97 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %97, %"struct.std::_Bit_reference"** %30
  %98 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %98, %"struct.std::_Bit_reference"** %29
  %99 = alloca i32, align 4
  store i32* %99, i32** %28
  %100 = alloca i32, align 4
  store i32* %100, i32** %27
  %101 = alloca i32, align 4
  store i32* %101, i32** %26
  %102 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %102, %"struct.std::_Bit_reference"** %25
  %103 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %103, %"struct.std::_Bit_reference"** %24
  %104 = alloca i32, align 4
  store i32* %104, i32** %23
  %105 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %105, %"struct.std::_Bit_reference"** %22
  %106 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %106, %"struct.std::_Bit_reference"** %21
  %107 = alloca i32, align 4
  store i32* %107, i32** %20
  %108 = alloca i32, align 4
  store i32* %108, i32** %19
  %109 = alloca i32, align 4
  store i32* %109, i32** %18
  %110 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %110, %"struct.std::_Bit_reference"** %17
  %111 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %111, %"struct.std::_Bit_reference"** %16
  %112 = alloca i32, align 4
  store i32* %112, i32** %15
  %113 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %113, %"struct.std::_Bit_reference"** %14
  %114 = alloca i32, align 4
  store i32* %114, i32** %13
  %115 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %115, %"struct.std::_Bit_reference"** %12
  %116 = load volatile i64*, i64** %42
  store i64 %0, i64* %116, align 8
  call void @_ZNSt6vectorIbSaIbEE5clearEv(%"class.std::vector.11"* @sieve) #3
  %117 = load volatile i64*, i64** %42
  %118 = load i64, i64* %117, align 8
  %119 = icmp slt i64 %118, 0
  store i1 %119, i1* %11
  %120 = load i32, i32* @x.83
  %121 = load i32, i32* @y.84
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 1344517318, i32 756011555
  store i32 %133, i32* %55
  br label %2318

; <label>:134:                                    ; preds = %61
  %135 = load volatile i1, i1* %11
  %136 = select i1 %135, i32 -1723594816, i32 -939551259
  store i32 %136, i32* %55
  br label %2318

; <label>:137:                                    ; preds = %61
  %138 = load i32, i32* @x.83
  %139 = load i32, i32* @y.84
  %140 = sub i32 %138, 1570060
  %141 = sub i32 %140, 1
  %142 = add i32 %141, 1570060
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  %164 = select i1 %162, i32 -844644358, i32 -1475885819
  store i32 %164, i32* %55
  br label %2318

; <label>:165:                                    ; preds = %61
  %166 = load volatile i64*, i64** %42
  %167 = load i64, i64* %166, align 8
  %168 = icmp sgt i64 %167, 1073741824
  store i1 %168, i1* %10
  %169 = load i32, i32* @x.83
  %170 = load i32, i32* @y.84
  %171 = sub i32 %169, 1594935546
  %172 = sub i32 %171, 1
  %173 = add i32 %172, 1594935546
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  %183 = select i1 %181, i32 -811425934, i32 -1475885819
  store i32 %183, i32* %55
  br label %2318

; <label>:184:                                    ; preds = %61
  %185 = load volatile i1, i1* %10
  %186 = select i1 %185, i32 -1723594816, i32 1417682809
  store i32 %186, i32* %55
  br label %2318

; <label>:187:                                    ; preds = %61
  store i32 -1104492555, i32* %55
  br label %2318

; <label>:188:                                    ; preds = %61
  %189 = load volatile i64*, i64** %42
  %190 = load i64, i64* %189, align 8
  %191 = trunc i64 %190 to i32
  %192 = sub i32 0, %191
  %193 = sub i32 0, 9
  %194 = add i32 %192, %193
  %195 = sub i32 0, %194
  %196 = add nsw i32 %191, 9
  %197 = load volatile i32*, i32** %41
  store i32 %195, i32* %197, align 4
  %198 = load volatile i32*, i32** %41
  %199 = load i32, i32* %198, align 4
  %200 = sitofp i32 %199 to double
  %201 = fadd double %200, 1.000000e-01
  %202 = call double @sqrt(double %201) #3
  %203 = fptosi double %202 to i32
  %204 = load volatile i32*, i32** %40
  store i32 %203, i32* %204, align 4
  %205 = load volatile i32*, i32** %41
  %206 = load i32, i32* %205, align 4
  %207 = sext i32 %206 to i64
  call void @_ZNSt6vectorIbSaIbEE6resizeEmb(%"class.std::vector.11"* @sieve, i64 %207, i1 zeroext false)
  %208 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 3)
  %209 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %39
  %210 = bitcast %"struct.std::_Bit_reference"* %209 to { i64*, i64 }*
  %211 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %210, i32 0, i32 0
  %212 = extractvalue { i64*, i64 } %208, 0
  store i64* %212, i64** %211, align 8
  %213 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %210, i32 0, i32 1
  %214 = extractvalue { i64*, i64 } %208, 1
  store i64 %214, i64* %213, align 8
  %215 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %39
  %216 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %215, i1 zeroext true) #3
  %217 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 2)
  %218 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %38
  %219 = bitcast %"struct.std::_Bit_reference"* %218 to { i64*, i64 }*
  %220 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %219, i32 0, i32 0
  %221 = extractvalue { i64*, i64 } %217, 0
  store i64* %221, i64** %220, align 8
  %222 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %219, i32 0, i32 1
  %223 = extractvalue { i64*, i64 } %217, 1
  store i64 %223, i64* %222, align 8
  %224 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %38
  %225 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"* %224, %"struct.std::_Bit_reference"* dereferenceable(16) %216) #3
  %226 = load volatile i32*, i32** %37
  store i32 0, i32* %226, align 4
  %227 = load volatile i32*, i32** %36
  store i32 1, i32* %227, align 4
  store i32 1404869550, i32* %55
  br label %2318

; <label>:228:                                    ; preds = %61
  %229 = load volatile i32*, i32** %36
  %230 = load i32, i32* %229, align 4
  %231 = icmp sle i32 %230, 5
  %232 = select i1 %231, i32 1172481784, i32 1791591247
  store i32 %232, i32* %55
  br label %2318

; <label>:233:                                    ; preds = %61
  %234 = load volatile i32*, i32** %36
  %235 = load i32, i32* %234, align 4
  %236 = load volatile i32*, i32** %35
  store i32 %235, i32* %236, align 4
  store i32 -1505295693, i32* %55
  br label %2318

; <label>:237:                                    ; preds = %61
  %238 = load volatile i32*, i32** %35
  %239 = load i32, i32* %238, align 4
  %240 = load volatile i32*, i32** %40
  %241 = load i32, i32* %240, align 4
  %242 = icmp sle i32 %239, %241
  %243 = select i1 %242, i32 1812423036, i32 584371796
  store i32 %243, i32* %55
  br label %2318

; <label>:244:                                    ; preds = %61
  %245 = load volatile i32*, i32** %34
  store i32 1, i32* %245, align 4
  store i32 -1932818052, i32* %55
  br label %2318

; <label>:246:                                    ; preds = %61
  %247 = load volatile i32*, i32** %34
  %248 = load i32, i32* %247, align 4
  %249 = load volatile i32*, i32** %40
  %250 = load i32, i32* %249, align 4
  %251 = icmp sle i32 %248, %250
  %252 = select i1 %251, i32 -1040460078, i32 -1025882350
  store i32 %252, i32* %55
  store i1 false, i1* %56
  br label %2318

; <label>:253:                                    ; preds = %61
  %254 = load i32, i32* @x.83
  %255 = load i32, i32* @y.84
  %256 = add i32 %254, -1553196239
  %257 = sub i32 %256, 1
  %258 = sub i32 %257, -1553196239
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = and i1 %262, %263
  %265 = xor i1 %262, %263
  %266 = or i1 %264, %265
  %267 = or i1 %262, %263
  %268 = select i1 %266, i32 989258446, i32 1251593834
  store i32 %268, i32* %55
  br label %2318

; <label>:269:                                    ; preds = %61
  %270 = load volatile i32*, i32** %34
  %271 = load i32, i32* %270, align 4
  %272 = mul nsw i32 4, %271
  %273 = load volatile i32*, i32** %34
  %274 = load i32, i32* %273, align 4
  %275 = mul nsw i32 %272, %274
  %276 = load volatile i32*, i32** %35
  %277 = load i32, i32* %276, align 4
  %278 = load volatile i32*, i32** %35
  %279 = load i32, i32* %278, align 4
  %280 = mul nsw i32 %277, %279
  %281 = sub i32 0, %275
  %282 = sub i32 0, %280
  %283 = add i32 %281, %282
  %284 = sub i32 0, %283
  %285 = add nsw i32 %275, %280
  %286 = load volatile i32*, i32** %37
  store i32 %284, i32* %286, align 4
  %287 = load volatile i32*, i32** %41
  %288 = load i32, i32* %287, align 4
  %289 = icmp slt i32 %284, %288
  store i1 %289, i1* %9
  %290 = load i32, i32* @x.83
  %291 = load i32, i32* @y.84
  %292 = sub i32 %290, -761869457
  %293 = sub i32 %292, 1
  %294 = add i32 %293, -761869457
  %295 = sub i32 %290, 1
  %296 = mul i32 %290, %294
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %291, 10
  %300 = and i1 %298, %299
  %301 = xor i1 %298, %299
  %302 = or i1 %300, %301
  %303 = or i1 %298, %299
  %304 = select i1 %302, i32 698909769, i32 1251593834
  store i32 %304, i32* %55
  br label %2318

; <label>:305:                                    ; preds = %61
  store i32 -1025882350, i32* %55
  %306 = load volatile i1, i1* %9
  store i1 %306, i1* %56
  br label %2318

; <label>:307:                                    ; preds = %61
  %308 = load i1, i1* %56
  %309 = select i1 %308, i32 1562106424, i32 -533159858
  store i32 %309, i32* %55
  br label %2318

; <label>:310:                                    ; preds = %61
  %311 = load i32, i32* @x.83
  %312 = load i32, i32* @y.84
  %313 = sub i32 %311, 1252492874
  %314 = sub i32 %313, 1
  %315 = add i32 %314, 1252492874
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = and i1 %319, %320
  %322 = xor i1 %319, %320
  %323 = or i1 %321, %322
  %324 = or i1 %319, %320
  %325 = select i1 %323, i32 947009404, i32 -159092502
  store i32 %325, i32* %55
  br label %2318

; <label>:326:                                    ; preds = %61
  %327 = load volatile i32*, i32** %37
  %328 = load i32, i32* %327, align 4
  %329 = sext i32 %328 to i64
  %330 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %329)
  %331 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %33
  %332 = bitcast %"struct.std::_Bit_reference"* %331 to { i64*, i64 }*
  %333 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %332, i32 0, i32 0
  %334 = extractvalue { i64*, i64 } %330, 0
  store i64* %334, i64** %333, align 8
  %335 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %332, i32 0, i32 1
  %336 = extractvalue { i64*, i64 } %330, 1
  store i64 %336, i64* %335, align 8
  %337 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %33
  %338 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %337) #3
  %339 = xor i1 %338, true
  %340 = and i1 true, %339
  %341 = xor i1 true, true
  %342 = and i1 %338, %341
  %343 = or i1 %340, %342
  %344 = xor i1 %338, true
  %345 = load volatile i32*, i32** %37
  %346 = load i32, i32* %345, align 4
  %347 = sext i32 %346 to i64
  %348 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %347)
  %349 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %32
  %350 = bitcast %"struct.std::_Bit_reference"* %349 to { i64*, i64 }*
  %351 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %350, i32 0, i32 0
  %352 = extractvalue { i64*, i64 } %348, 0
  store i64* %352, i64** %351, align 8
  %353 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %350, i32 0, i32 1
  %354 = extractvalue { i64*, i64 } %348, 1
  store i64 %354, i64* %353, align 8
  %355 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %32
  %356 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %355, i1 zeroext %343) #3
  %357 = load i32, i32* @x.83
  %358 = load i32, i32* @y.84
  %359 = sub i32 0, 1
  %360 = add i32 %357, %359
  %361 = sub i32 %357, 1
  %362 = mul i32 %357, %360
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %358, 10
  %366 = and i1 %364, %365
  %367 = xor i1 %364, %365
  %368 = or i1 %366, %367
  %369 = or i1 %364, %365
  %370 = select i1 %368, i32 -567666708, i32 -159092502
  store i32 %370, i32* %55
  br label %2318

; <label>:371:                                    ; preds = %61
  store i32 -2068510501, i32* %55
  br label %2318

; <label>:372:                                    ; preds = %61
  %373 = load i32, i32* @x.83
  %374 = load i32, i32* @y.84
  %375 = add i32 %373, 845950181
  %376 = sub i32 %375, 1
  %377 = sub i32 %376, 845950181
  %378 = sub i32 %373, 1
  %379 = mul i32 %373, %377
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %374, 10
  %383 = and i1 %381, %382
  %384 = xor i1 %381, %382
  %385 = or i1 %383, %384
  %386 = or i1 %381, %382
  %387 = select i1 %385, i32 546745345, i32 -1386243728
  store i32 %387, i32* %55
  br label %2318

; <label>:388:                                    ; preds = %61
  %389 = load volatile i32*, i32** %34
  %390 = load i32, i32* %389, align 4
  %391 = add i32 %390, 1354632206
  %392 = add i32 %391, 1
  %393 = sub i32 %392, 1354632206
  %394 = add nsw i32 %390, 1
  %395 = load volatile i32*, i32** %34
  store i32 %393, i32* %395, align 4
  %396 = load i32, i32* @x.83
  %397 = load i32, i32* @y.84
  %398 = sub i32 0, 1
  %399 = add i32 %396, %398
  %400 = sub i32 %396, 1
  %401 = mul i32 %396, %399
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %397, 10
  %405 = xor i1 %403, true
  %406 = xor i1 %404, true
  %407 = xor i1 true, true
  %408 = and i1 %405, true
  %409 = and i1 %403, %407
  %410 = and i1 %406, true
  %411 = and i1 %404, %407
  %412 = or i1 %408, %409
  %413 = or i1 %410, %411
  %414 = xor i1 %412, %413
  %415 = or i1 %405, %406
  %416 = xor i1 %415, true
  %417 = or i1 true, %407
  %418 = and i1 %416, %417
  %419 = or i1 %414, %418
  %420 = or i1 %403, %404
  %421 = select i1 %419, i32 -1964758217, i32 -1386243728
  store i32 %421, i32* %55
  br label %2318

; <label>:422:                                    ; preds = %61
  store i32 -1932818052, i32* %55
  br label %2318

; <label>:423:                                    ; preds = %61
  %424 = load volatile i32*, i32** %35
  %425 = load i32, i32* %424, align 4
  %426 = sub i32 %425, -1969637944
  %427 = add i32 %426, 1
  %428 = add i32 %427, -1969637944
  %429 = add nsw i32 %425, 1
  %430 = load volatile i32*, i32** %31
  store i32 %428, i32* %430, align 4
  store i32 814311432, i32* %55
  br label %2318

; <label>:431:                                    ; preds = %61
  %432 = load volatile i32*, i32** %31
  %433 = load i32, i32* %432, align 4
  %434 = load volatile i32*, i32** %40
  %435 = load i32, i32* %434, align 4
  %436 = icmp sle i32 %433, %435
  %437 = select i1 %436, i32 1023104795, i32 1626309941
  store i32 %437, i32* %55
  store i1 false, i1* %57
  br label %2318

; <label>:438:                                    ; preds = %61
  %439 = load i32, i32* @x.83
  %440 = load i32, i32* @y.84
  %441 = sub i32 0, 1
  %442 = add i32 %439, %441
  %443 = sub i32 %439, 1
  %444 = mul i32 %439, %442
  %445 = urem i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %440, 10
  %448 = and i1 %446, %447
  %449 = xor i1 %446, %447
  %450 = or i1 %448, %449
  %451 = or i1 %446, %447
  %452 = select i1 %450, i32 1355846436, i32 -176325361
  store i32 %452, i32* %55
  br label %2318

; <label>:453:                                    ; preds = %61
  %454 = load volatile i32*, i32** %31
  %455 = load i32, i32* %454, align 4
  %456 = mul nsw i32 3, %455
  %457 = load volatile i32*, i32** %31
  %458 = load i32, i32* %457, align 4
  %459 = mul nsw i32 %456, %458
  %460 = load volatile i32*, i32** %35
  %461 = load i32, i32* %460, align 4
  %462 = load volatile i32*, i32** %35
  %463 = load i32, i32* %462, align 4
  %464 = mul nsw i32 %461, %463
  %465 = sub i32 %459, 151127476
  %466 = sub i32 %465, %464
  %467 = add i32 %466, 151127476
  %468 = sub nsw i32 %459, %464
  %469 = load volatile i32*, i32** %37
  store i32 %467, i32* %469, align 4
  %470 = load volatile i32*, i32** %41
  %471 = load i32, i32* %470, align 4
  %472 = icmp slt i32 %467, %471
  store i1 %472, i1* %8
  %473 = load i32, i32* @x.83
  %474 = load i32, i32* @y.84
  %475 = sub i32 %473, 1496890032
  %476 = sub i32 %475, 1
  %477 = add i32 %476, 1496890032
  %478 = sub i32 %473, 1
  %479 = mul i32 %473, %477
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %474, 10
  %483 = xor i1 %481, true
  %484 = xor i1 %482, true
  %485 = xor i1 true, true
  %486 = and i1 %483, true
  %487 = and i1 %481, %485
  %488 = and i1 %484, true
  %489 = and i1 %482, %485
  %490 = or i1 %486, %487
  %491 = or i1 %488, %489
  %492 = xor i1 %490, %491
  %493 = or i1 %483, %484
  %494 = xor i1 %493, true
  %495 = or i1 true, %485
  %496 = and i1 %494, %495
  %497 = or i1 %492, %496
  %498 = or i1 %481, %482
  %499 = select i1 %497, i32 -465495377, i32 -176325361
  store i32 %499, i32* %55
  br label %2318

; <label>:500:                                    ; preds = %61
  store i32 1626309941, i32* %55
  %501 = load volatile i1, i1* %8
  store i1 %501, i1* %57
  br label %2318

; <label>:502:                                    ; preds = %61
  %503 = load i1, i1* %57
  %504 = select i1 %503, i32 -812894242, i32 773363994
  store i32 %504, i32* %55
  br label %2318

; <label>:505:                                    ; preds = %61
  %506 = load i32, i32* @x.83
  %507 = load i32, i32* @y.84
  %508 = sub i32 0, 1
  %509 = add i32 %506, %508
  %510 = sub i32 %506, 1
  %511 = mul i32 %506, %509
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %507, 10
  %515 = xor i1 %513, true
  %516 = xor i1 %514, true
  %517 = xor i1 false, true
  %518 = and i1 %515, false
  %519 = and i1 %513, %517
  %520 = and i1 %516, false
  %521 = and i1 %514, %517
  %522 = or i1 %518, %519
  %523 = or i1 %520, %521
  %524 = xor i1 %522, %523
  %525 = or i1 %515, %516
  %526 = xor i1 %525, true
  %527 = or i1 false, %517
  %528 = and i1 %526, %527
  %529 = or i1 %524, %528
  %530 = or i1 %513, %514
  %531 = select i1 %529, i32 438948455, i32 812763647
  store i32 %531, i32* %55
  br label %2318

; <label>:532:                                    ; preds = %61
  %533 = load volatile i32*, i32** %37
  %534 = load i32, i32* %533, align 4
  %535 = sext i32 %534 to i64
  %536 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %535)
  %537 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %30
  %538 = bitcast %"struct.std::_Bit_reference"* %537 to { i64*, i64 }*
  %539 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %538, i32 0, i32 0
  %540 = extractvalue { i64*, i64 } %536, 0
  store i64* %540, i64** %539, align 8
  %541 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %538, i32 0, i32 1
  %542 = extractvalue { i64*, i64 } %536, 1
  store i64 %542, i64* %541, align 8
  %543 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %30
  %544 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %543) #3
  %545 = xor i1 %544, true
  %546 = and i1 true, %545
  %547 = xor i1 true, true
  %548 = and i1 %544, %547
  %549 = xor i1 true, true
  %550 = and i1 %549, true
  %551 = and i1 true, %547
  %552 = or i1 %546, %548
  %553 = or i1 %550, %551
  %554 = xor i1 %552, %553
  %555 = xor i1 %544, true
  %556 = load volatile i32*, i32** %37
  %557 = load i32, i32* %556, align 4
  %558 = sext i32 %557 to i64
  %559 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %558)
  %560 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %29
  %561 = bitcast %"struct.std::_Bit_reference"* %560 to { i64*, i64 }*
  %562 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %561, i32 0, i32 0
  %563 = extractvalue { i64*, i64 } %559, 0
  store i64* %563, i64** %562, align 8
  %564 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %561, i32 0, i32 1
  %565 = extractvalue { i64*, i64 } %559, 1
  store i64 %565, i64* %564, align 8
  %566 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %29
  %567 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %566, i1 zeroext %554) #3
  %568 = load i32, i32* @x.83
  %569 = load i32, i32* @y.84
  %570 = add i32 %568, -1139809962
  %571 = sub i32 %570, 1
  %572 = sub i32 %571, -1139809962
  %573 = sub i32 %568, 1
  %574 = mul i32 %568, %572
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %569, 10
  %578 = and i1 %576, %577
  %579 = xor i1 %576, %577
  %580 = or i1 %578, %579
  %581 = or i1 %576, %577
  %582 = select i1 %580, i32 1709955845, i32 812763647
  store i32 %582, i32* %55
  br label %2318

; <label>:583:                                    ; preds = %61
  store i32 1950156708, i32* %55
  br label %2318

; <label>:584:                                    ; preds = %61
  %585 = load volatile i32*, i32** %31
  %586 = load i32, i32* %585, align 4
  %587 = sub i32 0, 2
  %588 = sub i32 %586, %587
  %589 = add nsw i32 %586, 2
  %590 = load volatile i32*, i32** %31
  store i32 %588, i32* %590, align 4
  store i32 814311432, i32* %55
  br label %2318

; <label>:591:                                    ; preds = %61
  %592 = load i32, i32* @x.83
  %593 = load i32, i32* @y.84
  %594 = sub i32 %592, -150364395
  %595 = sub i32 %594, 1
  %596 = add i32 %595, -150364395
  %597 = sub i32 %592, 1
  %598 = mul i32 %592, %596
  %599 = urem i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %593, 10
  %602 = xor i1 %600, true
  %603 = xor i1 %601, true
  %604 = xor i1 false, true
  %605 = and i1 %602, false
  %606 = and i1 %600, %604
  %607 = and i1 %603, false
  %608 = and i1 %601, %604
  %609 = or i1 %605, %606
  %610 = or i1 %607, %608
  %611 = xor i1 %609, %610
  %612 = or i1 %602, %603
  %613 = xor i1 %612, true
  %614 = or i1 false, %604
  %615 = and i1 %613, %614
  %616 = or i1 %611, %615
  %617 = or i1 %600, %601
  %618 = select i1 %616, i32 1721624415, i32 -1969408934
  store i32 %618, i32* %55
  br label %2318

; <label>:619:                                    ; preds = %61
  %620 = load i32, i32* @x.83
  %621 = load i32, i32* @y.84
  %622 = add i32 %620, 1529334324
  %623 = sub i32 %622, 1
  %624 = sub i32 %623, 1529334324
  %625 = sub i32 %620, 1
  %626 = mul i32 %620, %624
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %621, 10
  %630 = xor i1 %628, true
  %631 = xor i1 %629, true
  %632 = xor i1 false, true
  %633 = and i1 %630, false
  %634 = and i1 %628, %632
  %635 = and i1 %631, false
  %636 = and i1 %629, %632
  %637 = or i1 %633, %634
  %638 = or i1 %635, %636
  %639 = xor i1 %637, %638
  %640 = or i1 %630, %631
  %641 = xor i1 %640, true
  %642 = or i1 false, %632
  %643 = and i1 %641, %642
  %644 = or i1 %639, %643
  %645 = or i1 %628, %629
  %646 = select i1 %644, i32 -2021848811, i32 -1969408934
  store i32 %646, i32* %55
  br label %2318

; <label>:647:                                    ; preds = %61
  store i32 -752347509, i32* %55
  br label %2318

; <label>:648:                                    ; preds = %61
  %649 = load volatile i32*, i32** %35
  %650 = load i32, i32* %649, align 4
  %651 = add i32 %650, -1005578218
  %652 = add i32 %651, 6
  %653 = sub i32 %652, -1005578218
  %654 = add nsw i32 %650, 6
  %655 = load volatile i32*, i32** %35
  store i32 %653, i32* %655, align 4
  store i32 -1505295693, i32* %55
  br label %2318

; <label>:656:                                    ; preds = %61
  store i32 519948948, i32* %55
  br label %2318

; <label>:657:                                    ; preds = %61
  %658 = load volatile i32*, i32** %36
  %659 = load i32, i32* %658, align 4
  %660 = sub i32 0, 4
  %661 = sub i32 %659, %660
  %662 = add nsw i32 %659, 4
  %663 = load volatile i32*, i32** %36
  store i32 %661, i32* %663, align 4
  store i32 1404869550, i32* %55
  br label %2318

; <label>:664:                                    ; preds = %61
  %665 = load volatile i32*, i32** %28
  store i32 2, i32* %665, align 4
  store i32 2031629642, i32* %55
  br label %2318

; <label>:666:                                    ; preds = %61
  %667 = load volatile i32*, i32** %28
  %668 = load i32, i32* %667, align 4
  %669 = icmp sle i32 %668, 4
  %670 = select i1 %669, i32 826016054, i32 706143760
  store i32 %670, i32* %55
  br label %2318

; <label>:671:                                    ; preds = %61
  %672 = load volatile i32*, i32** %28
  %673 = load i32, i32* %672, align 4
  %674 = load volatile i32*, i32** %27
  store i32 %673, i32* %674, align 4
  store i32 -1618977995, i32* %55
  br label %2318

; <label>:675:                                    ; preds = %61
  %676 = load i32, i32* @x.83
  %677 = load i32, i32* @y.84
  %678 = sub i32 %676, 609343631
  %679 = sub i32 %678, 1
  %680 = add i32 %679, 609343631
  %681 = sub i32 %676, 1
  %682 = mul i32 %676, %680
  %683 = urem i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = icmp slt i32 %677, 10
  %686 = xor i1 %684, true
  %687 = xor i1 %685, true
  %688 = xor i1 false, true
  %689 = and i1 %686, false
  %690 = and i1 %684, %688
  %691 = and i1 %687, false
  %692 = and i1 %685, %688
  %693 = or i1 %689, %690
  %694 = or i1 %691, %692
  %695 = xor i1 %693, %694
  %696 = or i1 %686, %687
  %697 = xor i1 %696, true
  %698 = or i1 false, %688
  %699 = and i1 %697, %698
  %700 = or i1 %695, %699
  %701 = or i1 %684, %685
  %702 = select i1 %700, i32 -1652971546, i32 -1473903038
  store i32 %702, i32* %55
  br label %2318

; <label>:703:                                    ; preds = %61
  %704 = load volatile i32*, i32** %27
  %705 = load i32, i32* %704, align 4
  %706 = load volatile i32*, i32** %40
  %707 = load i32, i32* %706, align 4
  %708 = icmp sle i32 %705, %707
  store i1 %708, i1* %7
  %709 = load i32, i32* @x.83
  %710 = load i32, i32* @y.84
  %711 = add i32 %709, -1658161989
  %712 = sub i32 %711, 1
  %713 = sub i32 %712, -1658161989
  %714 = sub i32 %709, 1
  %715 = mul i32 %709, %713
  %716 = urem i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = icmp slt i32 %710, 10
  %719 = and i1 %717, %718
  %720 = xor i1 %717, %718
  %721 = or i1 %719, %720
  %722 = or i1 %717, %718
  %723 = select i1 %721, i32 -1874239944, i32 -1473903038
  store i32 %723, i32* %55
  br label %2318

; <label>:724:                                    ; preds = %61
  %725 = load volatile i1, i1* %7
  %726 = select i1 %725, i32 38342689, i32 -335337212
  store i32 %726, i32* %55
  br label %2318

; <label>:727:                                    ; preds = %61
  %728 = load volatile i32*, i32** %26
  store i32 1, i32* %728, align 4
  store i32 186819536, i32* %55
  br label %2318

; <label>:729:                                    ; preds = %61
  %730 = load i32, i32* @x.83
  %731 = load i32, i32* @y.84
  %732 = sub i32 0, 1
  %733 = add i32 %730, %732
  %734 = sub i32 %730, 1
  %735 = mul i32 %730, %733
  %736 = urem i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = icmp slt i32 %731, 10
  %739 = and i1 %737, %738
  %740 = xor i1 %737, %738
  %741 = or i1 %739, %740
  %742 = or i1 %737, %738
  %743 = select i1 %741, i32 2014146969, i32 -246335055
  store i32 %743, i32* %55
  br label %2318

; <label>:744:                                    ; preds = %61
  %745 = load volatile i32*, i32** %26
  %746 = load i32, i32* %745, align 4
  %747 = load volatile i32*, i32** %40
  %748 = load i32, i32* %747, align 4
  %749 = icmp sle i32 %746, %748
  store i1 %749, i1* %6
  %750 = load i32, i32* @x.83
  %751 = load i32, i32* @y.84
  %752 = sub i32 %750, 1487423758
  %753 = sub i32 %752, 1
  %754 = add i32 %753, 1487423758
  %755 = sub i32 %750, 1
  %756 = mul i32 %750, %754
  %757 = urem i32 %756, 2
  %758 = icmp eq i32 %757, 0
  %759 = icmp slt i32 %751, 10
  %760 = xor i1 %758, true
  %761 = xor i1 %759, true
  %762 = xor i1 false, true
  %763 = and i1 %760, false
  %764 = and i1 %758, %762
  %765 = and i1 %761, false
  %766 = and i1 %759, %762
  %767 = or i1 %763, %764
  %768 = or i1 %765, %766
  %769 = xor i1 %767, %768
  %770 = or i1 %760, %761
  %771 = xor i1 %770, true
  %772 = or i1 false, %762
  %773 = and i1 %771, %772
  %774 = or i1 %769, %773
  %775 = or i1 %758, %759
  %776 = select i1 %774, i32 -164393221, i32 -246335055
  store i32 %776, i32* %55
  br label %2318

; <label>:777:                                    ; preds = %61
  %778 = load volatile i1, i1* %6
  %779 = select i1 %778, i32 1958209850, i32 -950197852
  store i32 %779, i32* %55
  store i1 false, i1* %58
  br label %2318

; <label>:780:                                    ; preds = %61
  %781 = load volatile i32*, i32** %26
  %782 = load i32, i32* %781, align 4
  %783 = mul nsw i32 3, %782
  %784 = load volatile i32*, i32** %26
  %785 = load i32, i32* %784, align 4
  %786 = mul nsw i32 %783, %785
  %787 = load volatile i32*, i32** %27
  %788 = load i32, i32* %787, align 4
  %789 = load volatile i32*, i32** %27
  %790 = load i32, i32* %789, align 4
  %791 = mul nsw i32 %788, %790
  %792 = add i32 %786, -2120268583
  %793 = add i32 %792, %791
  %794 = sub i32 %793, -2120268583
  %795 = add nsw i32 %786, %791
  %796 = load volatile i32*, i32** %37
  store i32 %794, i32* %796, align 4
  %797 = load volatile i32*, i32** %41
  %798 = load i32, i32* %797, align 4
  %799 = icmp slt i32 %794, %798
  store i32 -950197852, i32* %55
  store i1 %799, i1* %58
  br label %2318

; <label>:800:                                    ; preds = %61
  %801 = load i1, i1* %58
  store i1 %801, i1* %3
  %802 = load i32, i32* @x.83
  %803 = load i32, i32* @y.84
  %804 = sub i32 %802, 1227041513
  %805 = sub i32 %804, 1
  %806 = add i32 %805, 1227041513
  %807 = sub i32 %802, 1
  %808 = mul i32 %802, %806
  %809 = urem i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = icmp slt i32 %803, 10
  %812 = xor i1 %810, true
  %813 = xor i1 %811, true
  %814 = xor i1 true, true
  %815 = and i1 %812, true
  %816 = and i1 %810, %814
  %817 = and i1 %813, true
  %818 = and i1 %811, %814
  %819 = or i1 %815, %816
  %820 = or i1 %817, %818
  %821 = xor i1 %819, %820
  %822 = or i1 %812, %813
  %823 = xor i1 %822, true
  %824 = or i1 true, %814
  %825 = and i1 %823, %824
  %826 = or i1 %821, %825
  %827 = or i1 %810, %811
  %828 = select i1 %826, i32 360559706, i32 1528439780
  store i32 %828, i32* %55
  br label %2318

; <label>:829:                                    ; preds = %61
  %830 = load i32, i32* @x.83
  %831 = load i32, i32* @y.84
  %832 = sub i32 %830, 453033744
  %833 = sub i32 %832, 1
  %834 = add i32 %833, 453033744
  %835 = sub i32 %830, 1
  %836 = mul i32 %830, %834
  %837 = urem i32 %836, 2
  %838 = icmp eq i32 %837, 0
  %839 = icmp slt i32 %831, 10
  %840 = xor i1 %838, true
  %841 = xor i1 %839, true
  %842 = xor i1 true, true
  %843 = and i1 %840, true
  %844 = and i1 %838, %842
  %845 = and i1 %841, true
  %846 = and i1 %839, %842
  %847 = or i1 %843, %844
  %848 = or i1 %845, %846
  %849 = xor i1 %847, %848
  %850 = or i1 %840, %841
  %851 = xor i1 %850, true
  %852 = or i1 true, %842
  %853 = and i1 %851, %852
  %854 = or i1 %849, %853
  %855 = or i1 %838, %839
  %856 = select i1 %854, i32 807372995, i32 1528439780
  store i32 %856, i32* %55
  br label %2318

; <label>:857:                                    ; preds = %61
  %858 = load volatile i1, i1* %3
  %859 = select i1 %858, i32 -1880620577, i32 -1691285616
  store i32 %859, i32* %55
  br label %2318

; <label>:860:                                    ; preds = %61
  %861 = load i32, i32* @x.83
  %862 = load i32, i32* @y.84
  %863 = sub i32 0, 1
  %864 = add i32 %861, %863
  %865 = sub i32 %861, 1
  %866 = mul i32 %861, %864
  %867 = urem i32 %866, 2
  %868 = icmp eq i32 %867, 0
  %869 = icmp slt i32 %862, 10
  %870 = and i1 %868, %869
  %871 = xor i1 %868, %869
  %872 = or i1 %870, %871
  %873 = or i1 %868, %869
  %874 = select i1 %872, i32 -1184542816, i32 -1743951801
  store i32 %874, i32* %55
  br label %2318

; <label>:875:                                    ; preds = %61
  %876 = load volatile i32*, i32** %37
  %877 = load i32, i32* %876, align 4
  %878 = sext i32 %877 to i64
  %879 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %878)
  %880 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %25
  %881 = bitcast %"struct.std::_Bit_reference"* %880 to { i64*, i64 }*
  %882 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %881, i32 0, i32 0
  %883 = extractvalue { i64*, i64 } %879, 0
  store i64* %883, i64** %882, align 8
  %884 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %881, i32 0, i32 1
  %885 = extractvalue { i64*, i64 } %879, 1
  store i64 %885, i64* %884, align 8
  %886 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %25
  %887 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %886) #3
  %888 = xor i1 %887, true
  %889 = and i1 true, %888
  %890 = xor i1 true, true
  %891 = and i1 %887, %890
  %892 = or i1 %889, %891
  %893 = xor i1 %887, true
  %894 = load volatile i32*, i32** %37
  %895 = load i32, i32* %894, align 4
  %896 = sext i32 %895 to i64
  %897 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %896)
  %898 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %24
  %899 = bitcast %"struct.std::_Bit_reference"* %898 to { i64*, i64 }*
  %900 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %899, i32 0, i32 0
  %901 = extractvalue { i64*, i64 } %897, 0
  store i64* %901, i64** %900, align 8
  %902 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %899, i32 0, i32 1
  %903 = extractvalue { i64*, i64 } %897, 1
  store i64 %903, i64* %902, align 8
  %904 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %24
  %905 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %904, i1 zeroext %892) #3
  %906 = load i32, i32* @x.83
  %907 = load i32, i32* @y.84
  %908 = add i32 %906, 1281476290
  %909 = sub i32 %908, 1
  %910 = sub i32 %909, 1281476290
  %911 = sub i32 %906, 1
  %912 = mul i32 %906, %910
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %907, 10
  %916 = and i1 %914, %915
  %917 = xor i1 %914, %915
  %918 = or i1 %916, %917
  %919 = or i1 %914, %915
  %920 = select i1 %918, i32 1747513767, i32 -1743951801
  store i32 %920, i32* %55
  br label %2318

; <label>:921:                                    ; preds = %61
  store i32 -1425203850, i32* %55
  br label %2318

; <label>:922:                                    ; preds = %61
  %923 = load volatile i32*, i32** %26
  %924 = load i32, i32* %923, align 4
  %925 = sub i32 0, 2
  %926 = sub i32 %924, %925
  %927 = add nsw i32 %924, 2
  %928 = load volatile i32*, i32** %26
  store i32 %926, i32* %928, align 4
  store i32 186819536, i32* %55
  br label %2318

; <label>:929:                                    ; preds = %61
  %930 = load volatile i32*, i32** %27
  %931 = load i32, i32* %930, align 4
  %932 = sub i32 0, %931
  %933 = sub i32 0, 1
  %934 = add i32 %932, %933
  %935 = sub i32 0, %934
  %936 = add nsw i32 %931, 1
  %937 = load volatile i32*, i32** %23
  store i32 %935, i32* %937, align 4
  store i32 -1117879231, i32* %55
  br label %2318

; <label>:938:                                    ; preds = %61
  %939 = load volatile i32*, i32** %23
  %940 = load i32, i32* %939, align 4
  %941 = load volatile i32*, i32** %40
  %942 = load i32, i32* %941, align 4
  %943 = icmp sle i32 %940, %942
  %944 = select i1 %943, i32 -466556035, i32 1582195900
  store i32 %944, i32* %55
  store i1 false, i1* %59
  br label %2318

; <label>:945:                                    ; preds = %61
  %946 = load volatile i32*, i32** %23
  %947 = load i32, i32* %946, align 4
  %948 = mul nsw i32 3, %947
  %949 = load volatile i32*, i32** %23
  %950 = load i32, i32* %949, align 4
  %951 = mul nsw i32 %948, %950
  %952 = load volatile i32*, i32** %27
  %953 = load i32, i32* %952, align 4
  %954 = load volatile i32*, i32** %27
  %955 = load i32, i32* %954, align 4
  %956 = mul nsw i32 %953, %955
  %957 = sub i32 %951, 1055007168
  %958 = sub i32 %957, %956
  %959 = add i32 %958, 1055007168
  %960 = sub nsw i32 %951, %956
  %961 = load volatile i32*, i32** %37
  store i32 %959, i32* %961, align 4
  %962 = load volatile i32*, i32** %41
  %963 = load i32, i32* %962, align 4
  %964 = icmp slt i32 %959, %963
  store i32 1582195900, i32* %55
  store i1 %964, i1* %59
  br label %2318

; <label>:965:                                    ; preds = %61
  %966 = load i1, i1* %59
  store i1 %966, i1* %2
  %967 = load i32, i32* @x.83
  %968 = load i32, i32* @y.84
  %969 = add i32 %967, -1470456919
  %970 = sub i32 %969, 1
  %971 = sub i32 %970, -1470456919
  %972 = sub i32 %967, 1
  %973 = mul i32 %967, %971
  %974 = urem i32 %973, 2
  %975 = icmp eq i32 %974, 0
  %976 = icmp slt i32 %968, 10
  %977 = and i1 %975, %976
  %978 = xor i1 %975, %976
  %979 = or i1 %977, %978
  %980 = or i1 %975, %976
  %981 = select i1 %979, i32 -696393350, i32 1895431825
  store i32 %981, i32* %55
  br label %2318

; <label>:982:                                    ; preds = %61
  %983 = load i32, i32* @x.83
  %984 = load i32, i32* @y.84
  %985 = sub i32 0, 1
  %986 = add i32 %983, %985
  %987 = sub i32 %983, 1
  %988 = mul i32 %983, %986
  %989 = urem i32 %988, 2
  %990 = icmp eq i32 %989, 0
  %991 = icmp slt i32 %984, 10
  %992 = xor i1 %990, true
  %993 = xor i1 %991, true
  %994 = xor i1 false, true
  %995 = and i1 %992, false
  %996 = and i1 %990, %994
  %997 = and i1 %993, false
  %998 = and i1 %991, %994
  %999 = or i1 %995, %996
  %1000 = or i1 %997, %998
  %1001 = xor i1 %999, %1000
  %1002 = or i1 %992, %993
  %1003 = xor i1 %1002, true
  %1004 = or i1 false, %994
  %1005 = and i1 %1003, %1004
  %1006 = or i1 %1001, %1005
  %1007 = or i1 %990, %991
  %1008 = select i1 %1006, i32 466049085, i32 1895431825
  store i32 %1008, i32* %55
  br label %2318

; <label>:1009:                                   ; preds = %61
  %1010 = load volatile i1, i1* %2
  %1011 = select i1 %1010, i32 1833422543, i32 1812411103
  store i32 %1011, i32* %55
  br label %2318

; <label>:1012:                                   ; preds = %61
  %1013 = load volatile i32*, i32** %37
  %1014 = load i32, i32* %1013, align 4
  %1015 = sext i32 %1014 to i64
  %1016 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %1015)
  %1017 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %22
  %1018 = bitcast %"struct.std::_Bit_reference"* %1017 to { i64*, i64 }*
  %1019 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1018, i32 0, i32 0
  %1020 = extractvalue { i64*, i64 } %1016, 0
  store i64* %1020, i64** %1019, align 8
  %1021 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1018, i32 0, i32 1
  %1022 = extractvalue { i64*, i64 } %1016, 1
  store i64 %1022, i64* %1021, align 8
  %1023 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %22
  %1024 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %1023) #3
  %1025 = xor i1 %1024, true
  %1026 = and i1 false, %1025
  %1027 = xor i1 false, true
  %1028 = and i1 %1024, %1027
  %1029 = xor i1 true, true
  %1030 = and i1 %1029, false
  %1031 = and i1 true, %1027
  %1032 = or i1 %1026, %1028
  %1033 = or i1 %1030, %1031
  %1034 = xor i1 %1032, %1033
  %1035 = xor i1 %1024, true
  %1036 = load volatile i32*, i32** %37
  %1037 = load i32, i32* %1036, align 4
  %1038 = sext i32 %1037 to i64
  %1039 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %1038)
  %1040 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %21
  %1041 = bitcast %"struct.std::_Bit_reference"* %1040 to { i64*, i64 }*
  %1042 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1041, i32 0, i32 0
  %1043 = extractvalue { i64*, i64 } %1039, 0
  store i64* %1043, i64** %1042, align 8
  %1044 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1041, i32 0, i32 1
  %1045 = extractvalue { i64*, i64 } %1039, 1
  store i64 %1045, i64* %1044, align 8
  %1046 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %21
  %1047 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %1046, i1 zeroext %1034) #3
  store i32 1747796937, i32* %55
  br label %2318

; <label>:1048:                                   ; preds = %61
  %1049 = load volatile i32*, i32** %23
  %1050 = load i32, i32* %1049, align 4
  %1051 = sub i32 %1050, 374222686
  %1052 = add i32 %1051, 2
  %1053 = add i32 %1052, 374222686
  %1054 = add nsw i32 %1050, 2
  %1055 = load volatile i32*, i32** %23
  store i32 %1053, i32* %1055, align 4
  store i32 -1117879231, i32* %55
  br label %2318

; <label>:1056:                                   ; preds = %61
  store i32 -1135726137, i32* %55
  br label %2318

; <label>:1057:                                   ; preds = %61
  %1058 = load volatile i32*, i32** %27
  %1059 = load i32, i32* %1058, align 4
  %1060 = sub i32 0, %1059
  %1061 = sub i32 0, 6
  %1062 = add i32 %1060, %1061
  %1063 = sub i32 0, %1062
  %1064 = add nsw i32 %1059, 6
  %1065 = load volatile i32*, i32** %27
  store i32 %1063, i32* %1065, align 4
  store i32 -1618977995, i32* %55
  br label %2318

; <label>:1066:                                   ; preds = %61
  store i32 1535866360, i32* %55
  br label %2318

; <label>:1067:                                   ; preds = %61
  %1068 = load volatile i32*, i32** %28
  %1069 = load i32, i32* %1068, align 4
  %1070 = sub i32 0, %1069
  %1071 = sub i32 0, 2
  %1072 = add i32 %1070, %1071
  %1073 = sub i32 0, %1072
  %1074 = add nsw i32 %1069, 2
  %1075 = load volatile i32*, i32** %28
  store i32 %1073, i32* %1075, align 4
  store i32 2031629642, i32* %55
  br label %2318

; <label>:1076:                                   ; preds = %61
  %1077 = load volatile i32*, i32** %20
  store i32 1, i32* %1077, align 4
  store i32 772704755, i32* %55
  br label %2318

; <label>:1078:                                   ; preds = %61
  %1079 = load volatile i32*, i32** %20
  %1080 = load i32, i32* %1079, align 4
  %1081 = icmp sle i32 %1080, 2
  %1082 = select i1 %1081, i32 1738380735, i32 -1800659800
  store i32 %1082, i32* %55
  br label %2318

; <label>:1083:                                   ; preds = %61
  %1084 = load i32, i32* @x.83
  %1085 = load i32, i32* @y.84
  %1086 = sub i32 0, 1
  %1087 = add i32 %1084, %1086
  %1088 = sub i32 %1084, 1
  %1089 = mul i32 %1084, %1087
  %1090 = urem i32 %1089, 2
  %1091 = icmp eq i32 %1090, 0
  %1092 = icmp slt i32 %1085, 10
  %1093 = xor i1 %1091, true
  %1094 = xor i1 %1092, true
  %1095 = xor i1 false, true
  %1096 = and i1 %1093, false
  %1097 = and i1 %1091, %1095
  %1098 = and i1 %1094, false
  %1099 = and i1 %1092, %1095
  %1100 = or i1 %1096, %1097
  %1101 = or i1 %1098, %1099
  %1102 = xor i1 %1100, %1101
  %1103 = or i1 %1093, %1094
  %1104 = xor i1 %1103, true
  %1105 = or i1 false, %1095
  %1106 = and i1 %1104, %1105
  %1107 = or i1 %1102, %1106
  %1108 = or i1 %1091, %1092
  %1109 = select i1 %1107, i32 1430498372, i32 -772133232
  store i32 %1109, i32* %55
  br label %2318

; <label>:1110:                                   ; preds = %61
  %1111 = load volatile i32*, i32** %19
  store i32 3, i32* %1111, align 4
  %1112 = load i32, i32* @x.83
  %1113 = load i32, i32* @y.84
  %1114 = add i32 %1112, 1450636474
  %1115 = sub i32 %1114, 1
  %1116 = sub i32 %1115, 1450636474
  %1117 = sub i32 %1112, 1
  %1118 = mul i32 %1112, %1116
  %1119 = urem i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = icmp slt i32 %1113, 10
  %1122 = xor i1 %1120, true
  %1123 = xor i1 %1121, true
  %1124 = xor i1 true, true
  %1125 = and i1 %1122, true
  %1126 = and i1 %1120, %1124
  %1127 = and i1 %1123, true
  %1128 = and i1 %1121, %1124
  %1129 = or i1 %1125, %1126
  %1130 = or i1 %1127, %1128
  %1131 = xor i1 %1129, %1130
  %1132 = or i1 %1122, %1123
  %1133 = xor i1 %1132, true
  %1134 = or i1 true, %1124
  %1135 = and i1 %1133, %1134
  %1136 = or i1 %1131, %1135
  %1137 = or i1 %1120, %1121
  %1138 = select i1 %1136, i32 1944400799, i32 -772133232
  store i32 %1138, i32* %55
  br label %2318

; <label>:1139:                                   ; preds = %61
  store i32 -1730016848, i32* %55
  br label %2318

; <label>:1140:                                   ; preds = %61
  %1141 = load volatile i32*, i32** %19
  %1142 = load i32, i32* %1141, align 4
  %1143 = load volatile i32*, i32** %40
  %1144 = load i32, i32* %1143, align 4
  %1145 = icmp sle i32 %1142, %1144
  %1146 = select i1 %1145, i32 -1825471635, i32 -435533749
  store i32 %1146, i32* %55
  br label %2318

; <label>:1147:                                   ; preds = %61
  %1148 = load i32, i32* @x.83
  %1149 = load i32, i32* @y.84
  %1150 = sub i32 0, 1
  %1151 = add i32 %1148, %1150
  %1152 = sub i32 %1148, 1
  %1153 = mul i32 %1148, %1151
  %1154 = urem i32 %1153, 2
  %1155 = icmp eq i32 %1154, 0
  %1156 = icmp slt i32 %1149, 10
  %1157 = xor i1 %1155, true
  %1158 = xor i1 %1156, true
  %1159 = xor i1 true, true
  %1160 = and i1 %1157, true
  %1161 = and i1 %1155, %1159
  %1162 = and i1 %1158, true
  %1163 = and i1 %1156, %1159
  %1164 = or i1 %1160, %1161
  %1165 = or i1 %1162, %1163
  %1166 = xor i1 %1164, %1165
  %1167 = or i1 %1157, %1158
  %1168 = xor i1 %1167, true
  %1169 = or i1 true, %1159
  %1170 = and i1 %1168, %1169
  %1171 = or i1 %1166, %1170
  %1172 = or i1 %1155, %1156
  %1173 = select i1 %1171, i32 -1540398437, i32 2108690218
  store i32 %1173, i32* %55
  br label %2318

; <label>:1174:                                   ; preds = %61
  %1175 = load volatile i32*, i32** %20
  %1176 = load i32, i32* %1175, align 4
  %1177 = load volatile i32*, i32** %18
  store i32 %1176, i32* %1177, align 4
  %1178 = load i32, i32* @x.83
  %1179 = load i32, i32* @y.84
  %1180 = sub i32 0, 1
  %1181 = add i32 %1178, %1180
  %1182 = sub i32 %1178, 1
  %1183 = mul i32 %1178, %1181
  %1184 = urem i32 %1183, 2
  %1185 = icmp eq i32 %1184, 0
  %1186 = icmp slt i32 %1179, 10
  %1187 = and i1 %1185, %1186
  %1188 = xor i1 %1185, %1186
  %1189 = or i1 %1187, %1188
  %1190 = or i1 %1185, %1186
  %1191 = select i1 %1189, i32 468816305, i32 2108690218
  store i32 %1191, i32* %55
  br label %2318

; <label>:1192:                                   ; preds = %61
  store i32 568039084, i32* %55
  br label %2318

; <label>:1193:                                   ; preds = %61
  %1194 = load i32, i32* @x.83
  %1195 = load i32, i32* @y.84
  %1196 = sub i32 0, 1
  %1197 = add i32 %1194, %1196
  %1198 = sub i32 %1194, 1
  %1199 = mul i32 %1194, %1197
  %1200 = urem i32 %1199, 2
  %1201 = icmp eq i32 %1200, 0
  %1202 = icmp slt i32 %1195, 10
  %1203 = xor i1 %1201, true
  %1204 = xor i1 %1202, true
  %1205 = xor i1 true, true
  %1206 = and i1 %1203, true
  %1207 = and i1 %1201, %1205
  %1208 = and i1 %1204, true
  %1209 = and i1 %1202, %1205
  %1210 = or i1 %1206, %1207
  %1211 = or i1 %1208, %1209
  %1212 = xor i1 %1210, %1211
  %1213 = or i1 %1203, %1204
  %1214 = xor i1 %1213, true
  %1215 = or i1 true, %1205
  %1216 = and i1 %1214, %1215
  %1217 = or i1 %1212, %1216
  %1218 = or i1 %1201, %1202
  %1219 = select i1 %1217, i32 1200257977, i32 -463305022
  store i32 %1219, i32* %55
  br label %2318

; <label>:1220:                                   ; preds = %61
  %1221 = load volatile i32*, i32** %18
  %1222 = load i32, i32* %1221, align 4
  %1223 = load volatile i32*, i32** %40
  %1224 = load i32, i32* %1223, align 4
  %1225 = icmp sle i32 %1222, %1224
  store i1 %1225, i1* %5
  %1226 = load i32, i32* @x.83
  %1227 = load i32, i32* @y.84
  %1228 = sub i32 0, 1
  %1229 = add i32 %1226, %1228
  %1230 = sub i32 %1226, 1
  %1231 = mul i32 %1226, %1229
  %1232 = urem i32 %1231, 2
  %1233 = icmp eq i32 %1232, 0
  %1234 = icmp slt i32 %1227, 10
  %1235 = xor i1 %1233, true
  %1236 = xor i1 %1234, true
  %1237 = xor i1 false, true
  %1238 = and i1 %1235, false
  %1239 = and i1 %1233, %1237
  %1240 = and i1 %1236, false
  %1241 = and i1 %1234, %1237
  %1242 = or i1 %1238, %1239
  %1243 = or i1 %1240, %1241
  %1244 = xor i1 %1242, %1243
  %1245 = or i1 %1235, %1236
  %1246 = xor i1 %1245, true
  %1247 = or i1 false, %1237
  %1248 = and i1 %1246, %1247
  %1249 = or i1 %1244, %1248
  %1250 = or i1 %1233, %1234
  %1251 = select i1 %1249, i32 -928387989, i32 -463305022
  store i32 %1251, i32* %55
  br label %2318

; <label>:1252:                                   ; preds = %61
  %1253 = load volatile i1, i1* %5
  %1254 = select i1 %1253, i32 -979457317, i32 1403547569
  store i32 %1254, i32* %55
  store i1 false, i1* %60
  br label %2318

; <label>:1255:                                   ; preds = %61
  %1256 = load i32, i32* @x.83
  %1257 = load i32, i32* @y.84
  %1258 = add i32 %1256, 583864631
  %1259 = sub i32 %1258, 1
  %1260 = sub i32 %1259, 583864631
  %1261 = sub i32 %1256, 1
  %1262 = mul i32 %1256, %1260
  %1263 = urem i32 %1262, 2
  %1264 = icmp eq i32 %1263, 0
  %1265 = icmp slt i32 %1257, 10
  %1266 = xor i1 %1264, true
  %1267 = xor i1 %1265, true
  %1268 = xor i1 false, true
  %1269 = and i1 %1266, false
  %1270 = and i1 %1264, %1268
  %1271 = and i1 %1267, false
  %1272 = and i1 %1265, %1268
  %1273 = or i1 %1269, %1270
  %1274 = or i1 %1271, %1272
  %1275 = xor i1 %1273, %1274
  %1276 = or i1 %1266, %1267
  %1277 = xor i1 %1276, true
  %1278 = or i1 false, %1268
  %1279 = and i1 %1277, %1278
  %1280 = or i1 %1275, %1279
  %1281 = or i1 %1264, %1265
  %1282 = select i1 %1280, i32 1165863787, i32 1518368984
  store i32 %1282, i32* %55
  br label %2318

; <label>:1283:                                   ; preds = %61
  %1284 = load volatile i32*, i32** %18
  %1285 = load i32, i32* %1284, align 4
  %1286 = mul nsw i32 4, %1285
  %1287 = load volatile i32*, i32** %18
  %1288 = load i32, i32* %1287, align 4
  %1289 = mul nsw i32 %1286, %1288
  %1290 = load volatile i32*, i32** %19
  %1291 = load i32, i32* %1290, align 4
  %1292 = load volatile i32*, i32** %19
  %1293 = load i32, i32* %1292, align 4
  %1294 = mul nsw i32 %1291, %1293
  %1295 = sub i32 %1289, 1454888408
  %1296 = add i32 %1295, %1294
  %1297 = add i32 %1296, 1454888408
  %1298 = add nsw i32 %1289, %1294
  %1299 = load volatile i32*, i32** %37
  store i32 %1297, i32* %1299, align 4
  %1300 = load volatile i32*, i32** %41
  %1301 = load i32, i32* %1300, align 4
  %1302 = icmp slt i32 %1297, %1301
  store i1 %1302, i1* %4
  %1303 = load i32, i32* @x.83
  %1304 = load i32, i32* @y.84
  %1305 = add i32 %1303, -1488703772
  %1306 = sub i32 %1305, 1
  %1307 = sub i32 %1306, -1488703772
  %1308 = sub i32 %1303, 1
  %1309 = mul i32 %1303, %1307
  %1310 = urem i32 %1309, 2
  %1311 = icmp eq i32 %1310, 0
  %1312 = icmp slt i32 %1304, 10
  %1313 = and i1 %1311, %1312
  %1314 = xor i1 %1311, %1312
  %1315 = or i1 %1313, %1314
  %1316 = or i1 %1311, %1312
  %1317 = select i1 %1315, i32 1133430413, i32 1518368984
  store i32 %1317, i32* %55
  br label %2318

; <label>:1318:                                   ; preds = %61
  store i32 1403547569, i32* %55
  %1319 = load volatile i1, i1* %4
  store i1 %1319, i1* %60
  br label %2318

; <label>:1320:                                   ; preds = %61
  %1321 = load i1, i1* %60
  %1322 = select i1 %1321, i32 -274714411, i32 1108679749
  store i32 %1322, i32* %55
  br label %2318

; <label>:1323:                                   ; preds = %61
  %1324 = load i32, i32* @x.83
  %1325 = load i32, i32* @y.84
  %1326 = add i32 %1324, 233748509
  %1327 = sub i32 %1326, 1
  %1328 = sub i32 %1327, 233748509
  %1329 = sub i32 %1324, 1
  %1330 = mul i32 %1324, %1328
  %1331 = urem i32 %1330, 2
  %1332 = icmp eq i32 %1331, 0
  %1333 = icmp slt i32 %1325, 10
  %1334 = xor i1 %1332, true
  %1335 = xor i1 %1333, true
  %1336 = xor i1 false, true
  %1337 = and i1 %1334, false
  %1338 = and i1 %1332, %1336
  %1339 = and i1 %1335, false
  %1340 = and i1 %1333, %1336
  %1341 = or i1 %1337, %1338
  %1342 = or i1 %1339, %1340
  %1343 = xor i1 %1341, %1342
  %1344 = or i1 %1334, %1335
  %1345 = xor i1 %1344, true
  %1346 = or i1 false, %1336
  %1347 = and i1 %1345, %1346
  %1348 = or i1 %1343, %1347
  %1349 = or i1 %1332, %1333
  %1350 = select i1 %1348, i32 168147324, i32 -503756739
  store i32 %1350, i32* %55
  br label %2318

; <label>:1351:                                   ; preds = %61
  %1352 = load volatile i32*, i32** %37
  %1353 = load i32, i32* %1352, align 4
  %1354 = sext i32 %1353 to i64
  %1355 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %1354)
  %1356 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %17
  %1357 = bitcast %"struct.std::_Bit_reference"* %1356 to { i64*, i64 }*
  %1358 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1357, i32 0, i32 0
  %1359 = extractvalue { i64*, i64 } %1355, 0
  store i64* %1359, i64** %1358, align 8
  %1360 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1357, i32 0, i32 1
  %1361 = extractvalue { i64*, i64 } %1355, 1
  store i64 %1361, i64* %1360, align 8
  %1362 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %17
  %1363 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %1362) #3
  %1364 = xor i1 %1363, true
  %1365 = and i1 false, %1364
  %1366 = xor i1 false, true
  %1367 = and i1 %1363, %1366
  %1368 = xor i1 true, true
  %1369 = and i1 %1368, false
  %1370 = and i1 true, %1366
  %1371 = or i1 %1365, %1367
  %1372 = or i1 %1369, %1370
  %1373 = xor i1 %1371, %1372
  %1374 = xor i1 %1363, true
  %1375 = load volatile i32*, i32** %37
  %1376 = load i32, i32* %1375, align 4
  %1377 = sext i32 %1376 to i64
  %1378 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %1377)
  %1379 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %16
  %1380 = bitcast %"struct.std::_Bit_reference"* %1379 to { i64*, i64 }*
  %1381 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1380, i32 0, i32 0
  %1382 = extractvalue { i64*, i64 } %1378, 0
  store i64* %1382, i64** %1381, align 8
  %1383 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1380, i32 0, i32 1
  %1384 = extractvalue { i64*, i64 } %1378, 1
  store i64 %1384, i64* %1383, align 8
  %1385 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %16
  %1386 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %1385, i1 zeroext %1373) #3
  %1387 = load i32, i32* @x.83
  %1388 = load i32, i32* @y.84
  %1389 = add i32 %1387, 936099714
  %1390 = sub i32 %1389, 1
  %1391 = sub i32 %1390, 936099714
  %1392 = sub i32 %1387, 1
  %1393 = mul i32 %1387, %1391
  %1394 = urem i32 %1393, 2
  %1395 = icmp eq i32 %1394, 0
  %1396 = icmp slt i32 %1388, 10
  %1397 = and i1 %1395, %1396
  %1398 = xor i1 %1395, %1396
  %1399 = or i1 %1397, %1398
  %1400 = or i1 %1395, %1396
  %1401 = select i1 %1399, i32 -2046722317, i32 -503756739
  store i32 %1401, i32* %55
  br label %2318

; <label>:1402:                                   ; preds = %61
  store i32 -375016381, i32* %55
  br label %2318

; <label>:1403:                                   ; preds = %61
  %1404 = load volatile i32*, i32** %18
  %1405 = load i32, i32* %1404, align 4
  %1406 = sub i32 %1405, 428976595
  %1407 = add i32 %1406, 3
  %1408 = add i32 %1407, 428976595
  %1409 = add nsw i32 %1405, 3
  %1410 = load volatile i32*, i32** %18
  store i32 %1408, i32* %1410, align 4
  store i32 568039084, i32* %55
  br label %2318

; <label>:1411:                                   ; preds = %61
  store i32 -823237853, i32* %55
  br label %2318

; <label>:1412:                                   ; preds = %61
  %1413 = load i32, i32* @x.83
  %1414 = load i32, i32* @y.84
  %1415 = sub i32 %1413, 2039088840
  %1416 = sub i32 %1415, 1
  %1417 = add i32 %1416, 2039088840
  %1418 = sub i32 %1413, 1
  %1419 = mul i32 %1413, %1417
  %1420 = urem i32 %1419, 2
  %1421 = icmp eq i32 %1420, 0
  %1422 = icmp slt i32 %1414, 10
  %1423 = xor i1 %1421, true
  %1424 = xor i1 %1422, true
  %1425 = xor i1 false, true
  %1426 = and i1 %1423, false
  %1427 = and i1 %1421, %1425
  %1428 = and i1 %1424, false
  %1429 = and i1 %1422, %1425
  %1430 = or i1 %1426, %1427
  %1431 = or i1 %1428, %1429
  %1432 = xor i1 %1430, %1431
  %1433 = or i1 %1423, %1424
  %1434 = xor i1 %1433, true
  %1435 = or i1 false, %1425
  %1436 = and i1 %1434, %1435
  %1437 = or i1 %1432, %1436
  %1438 = or i1 %1421, %1422
  %1439 = select i1 %1437, i32 1876486432, i32 -1514809380
  store i32 %1439, i32* %55
  br label %2318

; <label>:1440:                                   ; preds = %61
  %1441 = load volatile i32*, i32** %19
  %1442 = load i32, i32* %1441, align 4
  %1443 = sub i32 0, %1442
  %1444 = sub i32 0, 6
  %1445 = add i32 %1443, %1444
  %1446 = sub i32 0, %1445
  %1447 = add nsw i32 %1442, 6
  %1448 = load volatile i32*, i32** %19
  store i32 %1446, i32* %1448, align 4
  %1449 = load i32, i32* @x.83
  %1450 = load i32, i32* @y.84
  %1451 = add i32 %1449, -1477371835
  %1452 = sub i32 %1451, 1
  %1453 = sub i32 %1452, -1477371835
  %1454 = sub i32 %1449, 1
  %1455 = mul i32 %1449, %1453
  %1456 = urem i32 %1455, 2
  %1457 = icmp eq i32 %1456, 0
  %1458 = icmp slt i32 %1450, 10
  %1459 = and i1 %1457, %1458
  %1460 = xor i1 %1457, %1458
  %1461 = or i1 %1459, %1460
  %1462 = or i1 %1457, %1458
  %1463 = select i1 %1461, i32 1061127644, i32 -1514809380
  store i32 %1463, i32* %55
  br label %2318

; <label>:1464:                                   ; preds = %61
  store i32 -1730016848, i32* %55
  br label %2318

; <label>:1465:                                   ; preds = %61
  store i32 -597640925, i32* %55
  br label %2318

; <label>:1466:                                   ; preds = %61
  %1467 = load volatile i32*, i32** %20
  %1468 = load i32, i32* %1467, align 4
  %1469 = sub i32 0, %1468
  %1470 = sub i32 0, 1
  %1471 = add i32 %1469, %1470
  %1472 = sub i32 0, %1471
  %1473 = add nsw i32 %1468, 1
  %1474 = load volatile i32*, i32** %20
  store i32 %1472, i32* %1474, align 4
  store i32 772704755, i32* %55
  br label %2318

; <label>:1475:                                   ; preds = %61
  %1476 = load i32, i32* @x.83
  %1477 = load i32, i32* @y.84
  %1478 = sub i32 %1476, -951599409
  %1479 = sub i32 %1478, 1
  %1480 = add i32 %1479, -951599409
  %1481 = sub i32 %1476, 1
  %1482 = mul i32 %1476, %1480
  %1483 = urem i32 %1482, 2
  %1484 = icmp eq i32 %1483, 0
  %1485 = icmp slt i32 %1477, 10
  %1486 = xor i1 %1484, true
  %1487 = xor i1 %1485, true
  %1488 = xor i1 true, true
  %1489 = and i1 %1486, true
  %1490 = and i1 %1484, %1488
  %1491 = and i1 %1487, true
  %1492 = and i1 %1485, %1488
  %1493 = or i1 %1489, %1490
  %1494 = or i1 %1491, %1492
  %1495 = xor i1 %1493, %1494
  %1496 = or i1 %1486, %1487
  %1497 = xor i1 %1496, true
  %1498 = or i1 true, %1488
  %1499 = and i1 %1497, %1498
  %1500 = or i1 %1495, %1499
  %1501 = or i1 %1484, %1485
  %1502 = select i1 %1500, i32 674739064, i32 -2085275579
  store i32 %1502, i32* %55
  br label %2318

; <label>:1503:                                   ; preds = %61
  %1504 = load volatile i32*, i32** %15
  store i32 5, i32* %1504, align 4
  %1505 = load i32, i32* @x.83
  %1506 = load i32, i32* @y.84
  %1507 = sub i32 0, 1
  %1508 = add i32 %1505, %1507
  %1509 = sub i32 %1505, 1
  %1510 = mul i32 %1505, %1508
  %1511 = urem i32 %1510, 2
  %1512 = icmp eq i32 %1511, 0
  %1513 = icmp slt i32 %1506, 10
  %1514 = xor i1 %1512, true
  %1515 = xor i1 %1513, true
  %1516 = xor i1 true, true
  %1517 = and i1 %1514, true
  %1518 = and i1 %1512, %1516
  %1519 = and i1 %1515, true
  %1520 = and i1 %1513, %1516
  %1521 = or i1 %1517, %1518
  %1522 = or i1 %1519, %1520
  %1523 = xor i1 %1521, %1522
  %1524 = or i1 %1514, %1515
  %1525 = xor i1 %1524, true
  %1526 = or i1 true, %1516
  %1527 = and i1 %1525, %1526
  %1528 = or i1 %1523, %1527
  %1529 = or i1 %1512, %1513
  %1530 = select i1 %1528, i32 662112623, i32 -2085275579
  store i32 %1530, i32* %55
  br label %2318

; <label>:1531:                                   ; preds = %61
  store i32 -2127138966, i32* %55
  br label %2318

; <label>:1532:                                   ; preds = %61
  %1533 = load volatile i32*, i32** %15
  %1534 = load i32, i32* %1533, align 4
  %1535 = load volatile i32*, i32** %40
  %1536 = load i32, i32* %1535, align 4
  %1537 = icmp sle i32 %1534, %1536
  %1538 = select i1 %1537, i32 -1332186858, i32 -1104492555
  store i32 %1538, i32* %55
  br label %2318

; <label>:1539:                                   ; preds = %61
  %1540 = load volatile i32*, i32** %15
  %1541 = load i32, i32* %1540, align 4
  %1542 = sext i32 %1541 to i64
  %1543 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %1542)
  %1544 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %14
  %1545 = bitcast %"struct.std::_Bit_reference"* %1544 to { i64*, i64 }*
  %1546 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1545, i32 0, i32 0
  %1547 = extractvalue { i64*, i64 } %1543, 0
  store i64* %1547, i64** %1546, align 8
  %1548 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1545, i32 0, i32 1
  %1549 = extractvalue { i64*, i64 } %1543, 1
  store i64 %1549, i64* %1548, align 8
  %1550 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %14
  %1551 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %1550) #3
  %1552 = select i1 %1551, i32 -2078858047, i32 -445607269
  store i32 %1552, i32* %55
  br label %2318

; <label>:1553:                                   ; preds = %61
  %1554 = load i32, i32* @x.83
  %1555 = load i32, i32* @y.84
  %1556 = add i32 %1554, 2072327873
  %1557 = sub i32 %1556, 1
  %1558 = sub i32 %1557, 2072327873
  %1559 = sub i32 %1554, 1
  %1560 = mul i32 %1554, %1558
  %1561 = urem i32 %1560, 2
  %1562 = icmp eq i32 %1561, 0
  %1563 = icmp slt i32 %1555, 10
  %1564 = xor i1 %1562, true
  %1565 = xor i1 %1563, true
  %1566 = xor i1 false, true
  %1567 = and i1 %1564, false
  %1568 = and i1 %1562, %1566
  %1569 = and i1 %1565, false
  %1570 = and i1 %1563, %1566
  %1571 = or i1 %1567, %1568
  %1572 = or i1 %1569, %1570
  %1573 = xor i1 %1571, %1572
  %1574 = or i1 %1564, %1565
  %1575 = xor i1 %1574, true
  %1576 = or i1 false, %1566
  %1577 = and i1 %1575, %1576
  %1578 = or i1 %1573, %1577
  %1579 = or i1 %1562, %1563
  %1580 = select i1 %1578, i32 -882229456, i32 -1238079287
  store i32 %1580, i32* %55
  br label %2318

; <label>:1581:                                   ; preds = %61
  %1582 = load volatile i32*, i32** %15
  %1583 = load i32, i32* %1582, align 4
  %1584 = load volatile i32*, i32** %15
  %1585 = load i32, i32* %1584, align 4
  %1586 = mul nsw i32 %1583, %1585
  %1587 = load volatile i32*, i32** %13
  store i32 %1586, i32* %1587, align 4
  %1588 = load i32, i32* @x.83
  %1589 = load i32, i32* @y.84
  %1590 = sub i32 %1588, 283253722
  %1591 = sub i32 %1590, 1
  %1592 = add i32 %1591, 283253722
  %1593 = sub i32 %1588, 1
  %1594 = mul i32 %1588, %1592
  %1595 = urem i32 %1594, 2
  %1596 = icmp eq i32 %1595, 0
  %1597 = icmp slt i32 %1589, 10
  %1598 = xor i1 %1596, true
  %1599 = xor i1 %1597, true
  %1600 = xor i1 true, true
  %1601 = and i1 %1598, true
  %1602 = and i1 %1596, %1600
  %1603 = and i1 %1599, true
  %1604 = and i1 %1597, %1600
  %1605 = or i1 %1601, %1602
  %1606 = or i1 %1603, %1604
  %1607 = xor i1 %1605, %1606
  %1608 = or i1 %1598, %1599
  %1609 = xor i1 %1608, true
  %1610 = or i1 true, %1600
  %1611 = and i1 %1609, %1610
  %1612 = or i1 %1607, %1611
  %1613 = or i1 %1596, %1597
  %1614 = select i1 %1612, i32 -301555227, i32 -1238079287
  store i32 %1614, i32* %55
  br label %2318

; <label>:1615:                                   ; preds = %61
  store i32 1875079354, i32* %55
  br label %2318

; <label>:1616:                                   ; preds = %61
  %1617 = load volatile i32*, i32** %13
  %1618 = load i32, i32* %1617, align 4
  %1619 = load volatile i32*, i32** %41
  %1620 = load i32, i32* %1619, align 4
  %1621 = icmp slt i32 %1618, %1620
  %1622 = select i1 %1621, i32 -185506106, i32 -1509754493
  store i32 %1622, i32* %55
  br label %2318

; <label>:1623:                                   ; preds = %61
  %1624 = load volatile i32*, i32** %13
  %1625 = load i32, i32* %1624, align 4
  %1626 = sext i32 %1625 to i64
  %1627 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %1626)
  %1628 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %12
  %1629 = bitcast %"struct.std::_Bit_reference"* %1628 to { i64*, i64 }*
  %1630 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1629, i32 0, i32 0
  %1631 = extractvalue { i64*, i64 } %1627, 0
  store i64* %1631, i64** %1630, align 8
  %1632 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1629, i32 0, i32 1
  %1633 = extractvalue { i64*, i64 } %1627, 1
  store i64 %1633, i64* %1632, align 8
  %1634 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %12
  %1635 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %1634, i1 zeroext false) #3
  store i32 -1284678181, i32* %55
  br label %2318

; <label>:1636:                                   ; preds = %61
  %1637 = load volatile i32*, i32** %15
  %1638 = load i32, i32* %1637, align 4
  %1639 = load volatile i32*, i32** %15
  %1640 = load i32, i32* %1639, align 4
  %1641 = mul nsw i32 %1638, %1640
  %1642 = load volatile i32*, i32** %13
  %1643 = load i32, i32* %1642, align 4
  %1644 = add i32 %1643, -952587660
  %1645 = add i32 %1644, %1641
  %1646 = sub i32 %1645, -952587660
  %1647 = add nsw i32 %1643, %1641
  %1648 = load volatile i32*, i32** %13
  store i32 %1646, i32* %1648, align 4
  store i32 1875079354, i32* %55
  br label %2318

; <label>:1649:                                   ; preds = %61
  store i32 -445607269, i32* %55
  br label %2318

; <label>:1650:                                   ; preds = %61
  store i32 -1995673134, i32* %55
  br label %2318

; <label>:1651:                                   ; preds = %61
  %1652 = load volatile i32*, i32** %15
  %1653 = load i32, i32* %1652, align 4
  %1654 = sub i32 %1653, 1997024423
  %1655 = add i32 %1654, 1
  %1656 = add i32 %1655, 1997024423
  %1657 = add nsw i32 %1653, 1
  %1658 = load volatile i32*, i32** %15
  store i32 %1656, i32* %1658, align 4
  store i32 -2127138966, i32* %55
  br label %2318

; <label>:1659:                                   ; preds = %61
  %1660 = load i32, i32* @x.83
  %1661 = load i32, i32* @y.84
  %1662 = sub i32 0, 1
  %1663 = add i32 %1660, %1662
  %1664 = sub i32 %1660, 1
  %1665 = mul i32 %1660, %1663
  %1666 = urem i32 %1665, 2
  %1667 = icmp eq i32 %1666, 0
  %1668 = icmp slt i32 %1661, 10
  %1669 = and i1 %1667, %1668
  %1670 = xor i1 %1667, %1668
  %1671 = or i1 %1669, %1670
  %1672 = or i1 %1667, %1668
  %1673 = select i1 %1671, i32 -223560301, i32 1359808904
  store i32 %1673, i32* %55
  br label %2318

; <label>:1674:                                   ; preds = %61
  %1675 = load i32, i32* @x.83
  %1676 = load i32, i32* @y.84
  %1677 = sub i32 %1675, -1073888793
  %1678 = sub i32 %1677, 1
  %1679 = add i32 %1678, -1073888793
  %1680 = sub i32 %1675, 1
  %1681 = mul i32 %1675, %1679
  %1682 = urem i32 %1681, 2
  %1683 = icmp eq i32 %1682, 0
  %1684 = icmp slt i32 %1676, 10
  %1685 = xor i1 %1683, true
  %1686 = xor i1 %1684, true
  %1687 = xor i1 true, true
  %1688 = and i1 %1685, true
  %1689 = and i1 %1683, %1687
  %1690 = and i1 %1686, true
  %1691 = and i1 %1684, %1687
  %1692 = or i1 %1688, %1689
  %1693 = or i1 %1690, %1691
  %1694 = xor i1 %1692, %1693
  %1695 = or i1 %1685, %1686
  %1696 = xor i1 %1695, true
  %1697 = or i1 true, %1687
  %1698 = and i1 %1696, %1697
  %1699 = or i1 %1694, %1698
  %1700 = or i1 %1683, %1684
  %1701 = select i1 %1699, i32 1274824955, i32 1359808904
  store i32 %1701, i32* %55
  br label %2318

; <label>:1702:                                   ; preds = %61
  ret void

; <label>:1703:                                   ; preds = %61
  %1704 = alloca i64, align 8
  %1705 = alloca i32, align 4
  %1706 = alloca i32, align 4
  %1707 = alloca %"struct.std::_Bit_reference", align 8
  %1708 = alloca %"struct.std::_Bit_reference", align 8
  %1709 = alloca i32, align 4
  %1710 = alloca i32, align 4
  %1711 = alloca i32, align 4
  %1712 = alloca i32, align 4
  %1713 = alloca %"struct.std::_Bit_reference", align 8
  %1714 = alloca %"struct.std::_Bit_reference", align 8
  %1715 = alloca i32, align 4
  %1716 = alloca %"struct.std::_Bit_reference", align 8
  %1717 = alloca %"struct.std::_Bit_reference", align 8
  %1718 = alloca i32, align 4
  %1719 = alloca i32, align 4
  %1720 = alloca i32, align 4
  %1721 = alloca %"struct.std::_Bit_reference", align 8
  %1722 = alloca %"struct.std::_Bit_reference", align 8
  %1723 = alloca i32, align 4
  %1724 = alloca %"struct.std::_Bit_reference", align 8
  %1725 = alloca %"struct.std::_Bit_reference", align 8
  %1726 = alloca i32, align 4
  %1727 = alloca i32, align 4
  %1728 = alloca i32, align 4
  %1729 = alloca %"struct.std::_Bit_reference", align 8
  %1730 = alloca %"struct.std::_Bit_reference", align 8
  %1731 = alloca i32, align 4
  %1732 = alloca %"struct.std::_Bit_reference", align 8
  %1733 = alloca i32, align 4
  %1734 = alloca %"struct.std::_Bit_reference", align 8
  store i64 %0, i64* %1704, align 8
  call void @_ZNSt6vectorIbSaIbEE5clearEv(%"class.std::vector.11"* @sieve) #3
  %1735 = load i64, i64* %1704, align 8
  %1736 = icmp slt i64 %1735, 0
  store i32 753181019, i32* %55
  br label %2318

; <label>:1737:                                   ; preds = %61
  %1738 = load volatile i64*, i64** %42
  %1739 = load i64, i64* %1738, align 8
  %1740 = icmp sgt i64 %1739, 1073741824
  store i32 -844644358, i32* %55
  br label %2318

; <label>:1741:                                   ; preds = %61
  %1742 = load volatile i32*, i32** %34
  %1743 = load i32, i32* %1742, align 4
  %1744 = shl i32 4, %1743
  %1745 = mul nsw i32 4, %1743
  %1746 = load volatile i32*, i32** %34
  %1747 = load i32, i32* %1746, align 4
  %1748 = sub i32 0, %1745
  %1749 = add i32 0, %1748
  %1750 = sub i32 0, %1745
  %1751 = sub i32 0, %1747
  %1752 = sub i32 %1749, %1751
  %1753 = add i32 %1749, %1747
  %1754 = sub i32 0, %1747
  %1755 = add i32 %1745, %1754
  %1756 = sub i32 %1745, %1747
  %1757 = mul i32 %1755, %1747
  %1758 = sub i32 0, %1747
  %1759 = add i32 %1745, %1758
  %1760 = sub i32 %1745, %1747
  %1761 = mul i32 %1759, %1747
  %1762 = sub i32 0, 301715263
  %1763 = sub i32 %1762, %1745
  %1764 = add i32 %1763, 301715263
  %1765 = sub i32 0, %1745
  %1766 = sub i32 %1764, 1841671118
  %1767 = add i32 %1766, %1747
  %1768 = add i32 %1767, 1841671118
  %1769 = add i32 %1764, %1747
  %1770 = sub i32 0, %1747
  %1771 = add i32 %1745, %1770
  %1772 = sub i32 %1745, %1747
  %1773 = mul i32 %1771, %1747
  %1774 = sub i32 %1745, -1964087043
  %1775 = sub i32 %1774, %1747
  %1776 = add i32 %1775, -1964087043
  %1777 = sub i32 %1745, %1747
  %1778 = mul i32 %1776, %1747
  %1779 = sub i32 0, %1745
  %1780 = add i32 0, %1779
  %1781 = sub i32 0, %1745
  %1782 = sub i32 0, %1780
  %1783 = sub i32 0, %1747
  %1784 = add i32 %1782, %1783
  %1785 = sub i32 0, %1784
  %1786 = add i32 %1780, %1747
  %1787 = mul nsw i32 %1745, %1747
  %1788 = load volatile i32*, i32** %35
  %1789 = load i32, i32* %1788, align 4
  %1790 = load volatile i32*, i32** %35
  %1791 = load i32, i32* %1790, align 4
  %1792 = sub i32 0, %1791
  %1793 = add i32 %1789, %1792
  %1794 = sub i32 %1789, %1791
  %1795 = mul i32 %1793, %1791
  %1796 = sub i32 0, -608727039
  %1797 = sub i32 %1796, %1789
  %1798 = add i32 %1797, -608727039
  %1799 = sub i32 0, %1789
  %1800 = sub i32 %1798, 1697679290
  %1801 = add i32 %1800, %1791
  %1802 = add i32 %1801, 1697679290
  %1803 = add i32 %1798, %1791
  %1804 = shl i32 %1789, %1791
  %1805 = sub i32 0, 1454598578
  %1806 = sub i32 %1805, %1789
  %1807 = add i32 %1806, 1454598578
  %1808 = sub i32 0, %1789
  %1809 = sub i32 %1807, -812614537
  %1810 = add i32 %1809, %1791
  %1811 = add i32 %1810, -812614537
  %1812 = add i32 %1807, %1791
  %1813 = mul nsw i32 %1789, %1791
  %1814 = sub i32 %1787, -1891877277
  %1815 = sub i32 %1814, %1813
  %1816 = add i32 %1815, -1891877277
  %1817 = sub i32 %1787, %1813
  %1818 = mul i32 %1816, %1813
  %1819 = add i32 0, 337936215
  %1820 = sub i32 %1819, %1787
  %1821 = sub i32 %1820, 337936215
  %1822 = sub i32 0, %1787
  %1823 = sub i32 0, %1821
  %1824 = sub i32 0, %1813
  %1825 = add i32 %1823, %1824
  %1826 = sub i32 0, %1825
  %1827 = add i32 %1821, %1813
  %1828 = shl i32 %1787, %1813
  %1829 = add i32 %1787, -754044455
  %1830 = add i32 %1829, %1813
  %1831 = sub i32 %1830, -754044455
  %1832 = add nsw i32 %1787, %1813
  %1833 = load volatile i32*, i32** %37
  store i32 %1831, i32* %1833, align 4
  %1834 = load volatile i32*, i32** %41
  %1835 = load i32, i32* %1834, align 4
  %1836 = icmp slt i32 %1831, %1835
  store i32 989258446, i32* %55
  br label %2318

; <label>:1837:                                   ; preds = %61
  %1838 = load volatile i32*, i32** %37
  %1839 = load i32, i32* %1838, align 4
  %1840 = sext i32 %1839 to i64
  %1841 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %1840)
  %1842 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %33
  %1843 = bitcast %"struct.std::_Bit_reference"* %1842 to { i64*, i64 }*
  %1844 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1843, i32 0, i32 0
  %1845 = extractvalue { i64*, i64 } %1841, 0
  store i64* %1845, i64** %1844, align 8
  %1846 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1843, i32 0, i32 1
  %1847 = extractvalue { i64*, i64 } %1841, 1
  store i64 %1847, i64* %1846, align 8
  %1848 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %33
  %1849 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %1848) #3
  %1850 = add i1 false, false
  %1851 = sub i1 %1850, %1849
  %1852 = sub i1 %1851, false
  %1853 = sub i1 false, %1849
  %1854 = sub i1 false, %1852
  %1855 = sub i1 false, true
  %1856 = add i1 %1854, %1855
  %1857 = sub i1 false, %1856
  %1858 = add i1 %1852, true
  %1859 = add i1 false, false
  %1860 = sub i1 %1859, %1849
  %1861 = sub i1 %1860, false
  %1862 = sub i1 false, %1849
  %1863 = add i1 %1861, false
  %1864 = add i1 %1863, true
  %1865 = sub i1 %1864, false
  %1866 = add i1 %1861, true
  %1867 = sub i1 false, %1849
  %1868 = add i1 false, %1867
  %1869 = sub i1 false, %1849
  %1870 = sub i1 false, true
  %1871 = sub i1 %1868, %1870
  %1872 = add i1 %1868, true
  %1873 = shl i1 %1849, true
  %1874 = sub i1 %1849, false
  %1875 = sub i1 %1874, true
  %1876 = add i1 %1875, false
  %1877 = sub i1 %1849, true
  %1878 = mul i1 %1876, true
  %1879 = shl i1 %1849, true
  %1880 = xor i1 %1849, true
  %1881 = and i1 true, %1880
  %1882 = xor i1 true, true
  %1883 = and i1 %1849, %1882
  %1884 = or i1 %1881, %1883
  %1885 = xor i1 %1849, true
  %1886 = load volatile i32*, i32** %37
  %1887 = load i32, i32* %1886, align 4
  %1888 = sext i32 %1887 to i64
  %1889 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %1888)
  %1890 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %32
  %1891 = bitcast %"struct.std::_Bit_reference"* %1890 to { i64*, i64 }*
  %1892 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1891, i32 0, i32 0
  %1893 = extractvalue { i64*, i64 } %1889, 0
  store i64* %1893, i64** %1892, align 8
  %1894 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1891, i32 0, i32 1
  %1895 = extractvalue { i64*, i64 } %1889, 1
  store i64 %1895, i64* %1894, align 8
  %1896 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %32
  %1897 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %1896, i1 zeroext %1884) #3
  store i32 947009404, i32* %55
  br label %2318

; <label>:1898:                                   ; preds = %61
  %1899 = load volatile i32*, i32** %34
  %1900 = load i32, i32* %1899, align 4
  %1901 = sub i32 0, -1554897727
  %1902 = sub i32 %1901, %1900
  %1903 = add i32 %1902, -1554897727
  %1904 = sub i32 0, %1900
  %1905 = add i32 %1903, 1150869909
  %1906 = add i32 %1905, 1
  %1907 = sub i32 %1906, 1150869909
  %1908 = add i32 %1903, 1
  %1909 = sub i32 0, %1900
  %1910 = add i32 0, %1909
  %1911 = sub i32 0, %1900
  %1912 = sub i32 0, %1910
  %1913 = sub i32 0, 1
  %1914 = add i32 %1912, %1913
  %1915 = sub i32 0, %1914
  %1916 = add i32 %1910, 1
  %1917 = sub i32 %1900, -384488707
  %1918 = sub i32 %1917, 1
  %1919 = add i32 %1918, -384488707
  %1920 = sub i32 %1900, 1
  %1921 = mul i32 %1919, 1
  %1922 = shl i32 %1900, 1
  %1923 = shl i32 %1900, 1
  %1924 = sub i32 %1900, 1172184641
  %1925 = sub i32 %1924, 1
  %1926 = add i32 %1925, 1172184641
  %1927 = sub i32 %1900, 1
  %1928 = mul i32 %1926, 1
  %1929 = sub i32 0, 1
  %1930 = sub i32 %1900, %1929
  %1931 = add nsw i32 %1900, 1
  %1932 = load volatile i32*, i32** %34
  store i32 %1930, i32* %1932, align 4
  store i32 546745345, i32* %55
  br label %2318

; <label>:1933:                                   ; preds = %61
  %1934 = load volatile i32*, i32** %31
  %1935 = load i32, i32* %1934, align 4
  %1936 = shl i32 3, %1935
  %1937 = mul nsw i32 3, %1935
  %1938 = load volatile i32*, i32** %31
  %1939 = load i32, i32* %1938, align 4
  %1940 = sub i32 0, %1937
  %1941 = add i32 0, %1940
  %1942 = sub i32 0, %1937
  %1943 = sub i32 0, %1941
  %1944 = sub i32 0, %1939
  %1945 = add i32 %1943, %1944
  %1946 = sub i32 0, %1945
  %1947 = add i32 %1941, %1939
  %1948 = add i32 0, -119452900
  %1949 = sub i32 %1948, %1937
  %1950 = sub i32 %1949, -119452900
  %1951 = sub i32 0, %1937
  %1952 = sub i32 %1950, -1492573467
  %1953 = add i32 %1952, %1939
  %1954 = add i32 %1953, -1492573467
  %1955 = add i32 %1950, %1939
  %1956 = sub i32 0, %1937
  %1957 = add i32 0, %1956
  %1958 = sub i32 0, %1937
  %1959 = sub i32 0, %1957
  %1960 = sub i32 0, %1939
  %1961 = add i32 %1959, %1960
  %1962 = sub i32 0, %1961
  %1963 = add i32 %1957, %1939
  %1964 = mul nsw i32 %1937, %1939
  %1965 = load volatile i32*, i32** %35
  %1966 = load i32, i32* %1965, align 4
  %1967 = load volatile i32*, i32** %35
  %1968 = load i32, i32* %1967, align 4
  %1969 = shl i32 %1966, %1968
  %1970 = add i32 0, 1828607342
  %1971 = sub i32 %1970, %1966
  %1972 = sub i32 %1971, 1828607342
  %1973 = sub i32 0, %1966
  %1974 = sub i32 0, %1972
  %1975 = sub i32 0, %1968
  %1976 = add i32 %1974, %1975
  %1977 = sub i32 0, %1976
  %1978 = add i32 %1972, %1968
  %1979 = sub i32 %1966, -893043155
  %1980 = sub i32 %1979, %1968
  %1981 = add i32 %1980, -893043155
  %1982 = sub i32 %1966, %1968
  %1983 = mul i32 %1981, %1968
  %1984 = sub i32 0, %1968
  %1985 = add i32 %1966, %1984
  %1986 = sub i32 %1966, %1968
  %1987 = mul i32 %1985, %1968
  %1988 = mul nsw i32 %1966, %1968
  %1989 = shl i32 %1964, %1988
  %1990 = sub i32 0, %1988
  %1991 = add i32 %1964, %1990
  %1992 = sub nsw i32 %1964, %1988
  %1993 = load volatile i32*, i32** %37
  store i32 %1991, i32* %1993, align 4
  %1994 = load volatile i32*, i32** %41
  %1995 = load i32, i32* %1994, align 4
  %1996 = icmp slt i32 %1991, %1995
  store i32 1355846436, i32* %55
  br label %2318

; <label>:1997:                                   ; preds = %61
  %1998 = load volatile i32*, i32** %37
  %1999 = load i32, i32* %1998, align 4
  %2000 = sext i32 %1999 to i64
  %2001 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %2000)
  %2002 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %30
  %2003 = bitcast %"struct.std::_Bit_reference"* %2002 to { i64*, i64 }*
  %2004 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2003, i32 0, i32 0
  %2005 = extractvalue { i64*, i64 } %2001, 0
  store i64* %2005, i64** %2004, align 8
  %2006 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2003, i32 0, i32 1
  %2007 = extractvalue { i64*, i64 } %2001, 1
  store i64 %2007, i64* %2006, align 8
  %2008 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %30
  %2009 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %2008) #3
  %2010 = sub i1 false, false
  %2011 = sub i1 %2010, %2009
  %2012 = add i1 %2011, false
  %2013 = sub i1 false, %2009
  %2014 = sub i1 false, true
  %2015 = sub i1 %2012, %2014
  %2016 = add i1 %2012, true
  %2017 = shl i1 %2009, true
  %2018 = shl i1 %2009, true
  %2019 = sub i1 false, true
  %2020 = add i1 %2009, %2019
  %2021 = sub i1 %2009, true
  %2022 = mul i1 %2020, true
  %2023 = sub i1 false, true
  %2024 = sub i1 %2023, %2009
  %2025 = add i1 %2024, true
  %2026 = sub i1 false, %2009
  %2027 = sub i1 %2025, true
  %2028 = add i1 %2027, true
  %2029 = add i1 %2028, true
  %2030 = add i1 %2025, true
  %2031 = xor i1 %2009, true
  %2032 = and i1 false, %2031
  %2033 = xor i1 false, true
  %2034 = and i1 %2009, %2033
  %2035 = xor i1 true, true
  %2036 = and i1 %2035, false
  %2037 = and i1 true, %2033
  %2038 = or i1 %2032, %2034
  %2039 = or i1 %2036, %2037
  %2040 = xor i1 %2038, %2039
  %2041 = xor i1 %2009, true
  %2042 = load volatile i32*, i32** %37
  %2043 = load i32, i32* %2042, align 4
  %2044 = sext i32 %2043 to i64
  %2045 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %2044)
  %2046 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %29
  %2047 = bitcast %"struct.std::_Bit_reference"* %2046 to { i64*, i64 }*
  %2048 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2047, i32 0, i32 0
  %2049 = extractvalue { i64*, i64 } %2045, 0
  store i64* %2049, i64** %2048, align 8
  %2050 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2047, i32 0, i32 1
  %2051 = extractvalue { i64*, i64 } %2045, 1
  store i64 %2051, i64* %2050, align 8
  %2052 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %29
  %2053 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %2052, i1 zeroext %2040) #3
  store i32 438948455, i32* %55
  br label %2318

; <label>:2054:                                   ; preds = %61
  store i32 1721624415, i32* %55
  br label %2318

; <label>:2055:                                   ; preds = %61
  %2056 = load volatile i32*, i32** %27
  %2057 = load i32, i32* %2056, align 4
  %2058 = load volatile i32*, i32** %40
  %2059 = load i32, i32* %2058, align 4
  %2060 = icmp sle i32 %2057, %2059
  store i32 -1652971546, i32* %55
  br label %2318

; <label>:2061:                                   ; preds = %61
  %2062 = load volatile i32*, i32** %26
  %2063 = load i32, i32* %2062, align 4
  %2064 = load volatile i32*, i32** %40
  %2065 = load i32, i32* %2064, align 4
  %2066 = icmp sle i32 %2063, %2065
  store i32 2014146969, i32* %55
  br label %2318

; <label>:2067:                                   ; preds = %61
  store i32 360559706, i32* %55
  br label %2318

; <label>:2068:                                   ; preds = %61
  %2069 = load volatile i32*, i32** %37
  %2070 = load i32, i32* %2069, align 4
  %2071 = sext i32 %2070 to i64
  %2072 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %2071)
  %2073 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %25
  %2074 = bitcast %"struct.std::_Bit_reference"* %2073 to { i64*, i64 }*
  %2075 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2074, i32 0, i32 0
  %2076 = extractvalue { i64*, i64 } %2072, 0
  store i64* %2076, i64** %2075, align 8
  %2077 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2074, i32 0, i32 1
  %2078 = extractvalue { i64*, i64 } %2072, 1
  store i64 %2078, i64* %2077, align 8
  %2079 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %25
  %2080 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %2079) #3
  %2081 = sub i1 false, %2080
  %2082 = add i1 false, %2081
  %2083 = sub i1 false, %2080
  %2084 = sub i1 %2082, true
  %2085 = add i1 %2084, true
  %2086 = add i1 %2085, true
  %2087 = add i1 %2082, true
  %2088 = sub i1 false, true
  %2089 = sub i1 %2088, %2080
  %2090 = add i1 %2089, true
  %2091 = sub i1 false, %2080
  %2092 = add i1 %2090, false
  %2093 = add i1 %2092, true
  %2094 = sub i1 %2093, false
  %2095 = add i1 %2090, true
  %2096 = sub i1 false, true
  %2097 = sub i1 %2096, %2080
  %2098 = add i1 %2097, true
  %2099 = sub i1 false, %2080
  %2100 = sub i1 %2098, true
  %2101 = add i1 %2100, true
  %2102 = add i1 %2101, true
  %2103 = add i1 %2098, true
  %2104 = sub i1 %2080, false
  %2105 = sub i1 %2104, true
  %2106 = add i1 %2105, false
  %2107 = sub i1 %2080, true
  %2108 = mul i1 %2106, true
  %2109 = sub i1 %2080, true
  %2110 = sub i1 %2109, true
  %2111 = add i1 %2110, true
  %2112 = sub i1 %2080, true
  %2113 = mul i1 %2111, true
  %2114 = xor i1 %2080, true
  %2115 = and i1 false, %2114
  %2116 = xor i1 false, true
  %2117 = and i1 %2080, %2116
  %2118 = xor i1 true, true
  %2119 = and i1 %2118, false
  %2120 = and i1 true, %2116
  %2121 = or i1 %2115, %2117
  %2122 = or i1 %2119, %2120
  %2123 = xor i1 %2121, %2122
  %2124 = xor i1 %2080, true
  %2125 = load volatile i32*, i32** %37
  %2126 = load i32, i32* %2125, align 4
  %2127 = sext i32 %2126 to i64
  %2128 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %2127)
  %2129 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %24
  %2130 = bitcast %"struct.std::_Bit_reference"* %2129 to { i64*, i64 }*
  %2131 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2130, i32 0, i32 0
  %2132 = extractvalue { i64*, i64 } %2128, 0
  store i64* %2132, i64** %2131, align 8
  %2133 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2130, i32 0, i32 1
  %2134 = extractvalue { i64*, i64 } %2128, 1
  store i64 %2134, i64* %2133, align 8
  %2135 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %24
  %2136 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %2135, i1 zeroext %2123) #3
  store i32 -1184542816, i32* %55
  br label %2318

; <label>:2137:                                   ; preds = %61
  store i32 -696393350, i32* %55
  br label %2318

; <label>:2138:                                   ; preds = %61
  %2139 = load volatile i32*, i32** %19
  store i32 3, i32* %2139, align 4
  store i32 1430498372, i32* %55
  br label %2318

; <label>:2140:                                   ; preds = %61
  %2141 = load volatile i32*, i32** %20
  %2142 = load i32, i32* %2141, align 4
  %2143 = load volatile i32*, i32** %18
  store i32 %2142, i32* %2143, align 4
  store i32 -1540398437, i32* %55
  br label %2318

; <label>:2144:                                   ; preds = %61
  %2145 = load volatile i32*, i32** %18
  %2146 = load i32, i32* %2145, align 4
  %2147 = load volatile i32*, i32** %40
  %2148 = load i32, i32* %2147, align 4
  %2149 = icmp sle i32 %2146, %2148
  store i32 1200257977, i32* %55
  br label %2318

; <label>:2150:                                   ; preds = %61
  %2151 = load volatile i32*, i32** %18
  %2152 = load i32, i32* %2151, align 4
  %2153 = sub i32 0, %2152
  %2154 = add i32 4, %2153
  %2155 = sub i32 4, %2152
  %2156 = mul i32 %2154, %2152
  %2157 = shl i32 4, %2152
  %2158 = shl i32 4, %2152
  %2159 = sub i32 0, -461181137
  %2160 = sub i32 %2159, 4
  %2161 = add i32 %2160, -461181137
  %2162 = sub i32 0, 4
  %2163 = sub i32 0, %2152
  %2164 = sub i32 %2161, %2163
  %2165 = add i32 %2161, %2152
  %2166 = shl i32 4, %2152
  %2167 = sub i32 0, %2152
  %2168 = add i32 4, %2167
  %2169 = sub i32 4, %2152
  %2170 = mul i32 %2168, %2152
  %2171 = mul nsw i32 4, %2152
  %2172 = load volatile i32*, i32** %18
  %2173 = load i32, i32* %2172, align 4
  %2174 = add i32 0, -1412488811
  %2175 = sub i32 %2174, %2171
  %2176 = sub i32 %2175, -1412488811
  %2177 = sub i32 0, %2171
  %2178 = add i32 %2176, -1485840453
  %2179 = add i32 %2178, %2173
  %2180 = sub i32 %2179, -1485840453
  %2181 = add i32 %2176, %2173
  %2182 = mul nsw i32 %2171, %2173
  %2183 = load volatile i32*, i32** %19
  %2184 = load i32, i32* %2183, align 4
  %2185 = load volatile i32*, i32** %19
  %2186 = load i32, i32* %2185, align 4
  %2187 = sub i32 %2184, 443878347
  %2188 = sub i32 %2187, %2186
  %2189 = add i32 %2188, 443878347
  %2190 = sub i32 %2184, %2186
  %2191 = mul i32 %2189, %2186
  %2192 = add i32 %2184, 651237965
  %2193 = sub i32 %2192, %2186
  %2194 = sub i32 %2193, 651237965
  %2195 = sub i32 %2184, %2186
  %2196 = mul i32 %2194, %2186
  %2197 = sub i32 0, -1806270254
  %2198 = sub i32 %2197, %2184
  %2199 = add i32 %2198, -1806270254
  %2200 = sub i32 0, %2184
  %2201 = sub i32 %2199, 930881112
  %2202 = add i32 %2201, %2186
  %2203 = add i32 %2202, 930881112
  %2204 = add i32 %2199, %2186
  %2205 = shl i32 %2184, %2186
  %2206 = sub i32 0, %2186
  %2207 = add i32 %2184, %2206
  %2208 = sub i32 %2184, %2186
  %2209 = mul i32 %2207, %2186
  %2210 = shl i32 %2184, %2186
  %2211 = add i32 %2184, 878526449
  %2212 = sub i32 %2211, %2186
  %2213 = sub i32 %2212, 878526449
  %2214 = sub i32 %2184, %2186
  %2215 = mul i32 %2213, %2186
  %2216 = mul nsw i32 %2184, %2186
  %2217 = sub i32 0, %2216
  %2218 = add i32 %2182, %2217
  %2219 = sub i32 %2182, %2216
  %2220 = mul i32 %2218, %2216
  %2221 = sub i32 0, %2216
  %2222 = sub i32 %2182, %2221
  %2223 = add nsw i32 %2182, %2216
  %2224 = load volatile i32*, i32** %37
  store i32 %2222, i32* %2224, align 4
  %2225 = load volatile i32*, i32** %41
  %2226 = load i32, i32* %2225, align 4
  %2227 = icmp slt i32 %2222, %2226
  store i32 1165863787, i32* %55
  br label %2318

; <label>:2228:                                   ; preds = %61
  %2229 = load volatile i32*, i32** %37
  %2230 = load i32, i32* %2229, align 4
  %2231 = sext i32 %2230 to i64
  %2232 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %2231)
  %2233 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %17
  %2234 = bitcast %"struct.std::_Bit_reference"* %2233 to { i64*, i64 }*
  %2235 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2234, i32 0, i32 0
  %2236 = extractvalue { i64*, i64 } %2232, 0
  store i64* %2236, i64** %2235, align 8
  %2237 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2234, i32 0, i32 1
  %2238 = extractvalue { i64*, i64 } %2232, 1
  store i64 %2238, i64* %2237, align 8
  %2239 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %17
  %2240 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %2239) #3
  %2241 = sub i1 false, true
  %2242 = add i1 %2240, %2241
  %2243 = sub i1 %2240, true
  %2244 = mul i1 %2242, true
  %2245 = xor i1 %2240, true
  %2246 = and i1 false, %2245
  %2247 = xor i1 false, true
  %2248 = and i1 %2240, %2247
  %2249 = xor i1 true, true
  %2250 = and i1 %2249, false
  %2251 = and i1 true, %2247
  %2252 = or i1 %2246, %2248
  %2253 = or i1 %2250, %2251
  %2254 = xor i1 %2252, %2253
  %2255 = xor i1 %2240, true
  %2256 = load volatile i32*, i32** %37
  %2257 = load i32, i32* %2256, align 4
  %2258 = sext i32 %2257 to i64
  %2259 = call { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"* @sieve, i64 %2258)
  %2260 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %16
  %2261 = bitcast %"struct.std::_Bit_reference"* %2260 to { i64*, i64 }*
  %2262 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2261, i32 0, i32 0
  %2263 = extractvalue { i64*, i64 } %2259, 0
  store i64* %2263, i64** %2262, align 8
  %2264 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2261, i32 0, i32 1
  %2265 = extractvalue { i64*, i64 } %2259, 1
  store i64 %2265, i64* %2264, align 8
  %2266 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %16
  %2267 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %2266, i1 zeroext %2254) #3
  store i32 168147324, i32* %55
  br label %2318

; <label>:2268:                                   ; preds = %61
  %2269 = load volatile i32*, i32** %19
  %2270 = load i32, i32* %2269, align 4
  %2271 = add i32 0, 619191926
  %2272 = sub i32 %2271, %2270
  %2273 = sub i32 %2272, 619191926
  %2274 = sub i32 0, %2270
  %2275 = add i32 %2273, -665506187
  %2276 = add i32 %2275, 6
  %2277 = sub i32 %2276, -665506187
  %2278 = add i32 %2273, 6
  %2279 = sub i32 0, 6
  %2280 = add i32 %2270, %2279
  %2281 = sub i32 %2270, 6
  %2282 = mul i32 %2280, 6
  %2283 = shl i32 %2270, 6
  %2284 = add i32 %2270, 1487228727
  %2285 = add i32 %2284, 6
  %2286 = sub i32 %2285, 1487228727
  %2287 = add nsw i32 %2270, 6
  %2288 = load volatile i32*, i32** %19
  store i32 %2286, i32* %2288, align 4
  store i32 1876486432, i32* %55
  br label %2318

; <label>:2289:                                   ; preds = %61
  %2290 = load volatile i32*, i32** %15
  store i32 5, i32* %2290, align 4
  store i32 674739064, i32* %55
  br label %2318

; <label>:2291:                                   ; preds = %61
  %2292 = load volatile i32*, i32** %15
  %2293 = load i32, i32* %2292, align 4
  %2294 = load volatile i32*, i32** %15
  %2295 = load i32, i32* %2294, align 4
  %2296 = shl i32 %2293, %2295
  %2297 = sub i32 0, %2295
  %2298 = add i32 %2293, %2297
  %2299 = sub i32 %2293, %2295
  %2300 = mul i32 %2298, %2295
  %2301 = shl i32 %2293, %2295
  %2302 = sub i32 0, %2295
  %2303 = add i32 %2293, %2302
  %2304 = sub i32 %2293, %2295
  %2305 = mul i32 %2303, %2295
  %2306 = sub i32 0, %2295
  %2307 = add i32 %2293, %2306
  %2308 = sub i32 %2293, %2295
  %2309 = mul i32 %2307, %2295
  %2310 = shl i32 %2293, %2295
  %2311 = sub i32 0, %2295
  %2312 = add i32 %2293, %2311
  %2313 = sub i32 %2293, %2295
  %2314 = mul i32 %2312, %2295
  %2315 = mul nsw i32 %2293, %2295
  %2316 = load volatile i32*, i32** %13
  store i32 %2315, i32* %2316, align 4
  store i32 -882229456, i32* %55
  br label %2318

; <label>:2317:                                   ; preds = %61
  store i32 -223560301, i32* %55
  br label %2318

; <label>:2318:                                   ; preds = %2317, %2291, %2289, %2268, %2228, %2150, %2144, %2140, %2138, %2137, %2068, %2067, %2061, %2055, %2054, %1997, %1933, %1898, %1837, %1741, %1737, %1703, %1674, %1659, %1651, %1650, %1649, %1636, %1623, %1616, %1615, %1581, %1553, %1539, %1532, %1531, %1503, %1475, %1466, %1465, %1464, %1440, %1412, %1411, %1403, %1402, %1351, %1323, %1320, %1318, %1283, %1255, %1252, %1220, %1193, %1192, %1174, %1147, %1140, %1139, %1110, %1083, %1078, %1076, %1067, %1066, %1057, %1056, %1048, %1012, %1009, %982, %965, %945, %938, %929, %922, %921, %875, %860, %857, %829, %800, %780, %777, %744, %729, %727, %724, %703, %675, %671, %666, %664, %657, %656, %648, %647, %619, %591, %584, %583, %532, %505, %502, %500, %453, %438, %431, %423, %422, %388, %372, %371, %326, %310, %307, %305, %269, %253, %246, %244, %237, %233, %228, %188, %187, %184, %165, %137, %134, %84, %64, %63
  br label %61
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE5clearEv(%"class.std::vector.11"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.11"*, align 8
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %5 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"* %4) #3
  %6 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  %8 = extractvalue { i64*, i32 } %5, 0
  store i64* %8, i64** %7, align 8
  %9 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  %10 = extractvalue { i64*, i32 } %5, 1
  store i32 %10, i32* %9, align 8
  %11 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  invoke void @_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator(%"class.std::vector.11"* %4, i64* %13, i32 %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %1
  ret void

; <label>:17:                                     ; preds = %1
  %18 = load i32, i32* @x.85
  %19 = load i32, i32* @y.86
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %73

; <label>:43:                                     ; preds = %17, %73
  %44 = landingpad { i8*, i32 }
          catch i8* null
  %45 = extractvalue { i8*, i32 } %44, 0
  call void @__clang_call_terminate(i8* %45) #12
  %46 = load i32, i32* @x.85
  %47 = load i32, i32* @y.86
  %48 = sub i32 %46, -597161025
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -597161025
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %73

; <label>:72:                                     ; preds = %43
  unreachable

; <label>:73:                                     ; preds = %43, %17
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  call void @__clang_call_terminate(i8* %75) #12
  br label %43
}

; Function Attrs: nounwind
declare double @sqrt(double) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE6resizeEmb(%"class.std::vector.11"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.11"*
  %7 = alloca %"class.std::vector.11"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %7, align 8
  store i64 %1, i64* %8, align 8
  %15 = zext i1 %2 to i8
  store i8 %15, i8* %9, align 1
  %16 = load %"class.std::vector.11"*, %"class.std::vector.11"** %7, align 8
  store %"class.std::vector.11"* %16, %"class.std::vector.11"** %6
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %5
  %18 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %6
  %19 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %18) #3
  store i64 %19, i64* %4
  %20 = alloca i32
  store i32 271128017, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %78
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 271128017, label %24
    i32 -1095298306, label %29
    i32 1724464170, label %50
    i32 1260532693, label %77
  ]

; <label>:23:                                     ; preds = %21
  br label %78

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = load volatile i64, i64* %4
  %27 = icmp ult i64 %25, %26
  %28 = select i1 %27, i32 -1095298306, i32 1724464170
  store i32 %28, i32* %20
  br label %78

; <label>:29:                                     ; preds = %21
  %30 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %6
  %31 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"* %30) #3
  %32 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %32, i32 0, i32 0
  %34 = extractvalue { i64*, i32 } %31, 0
  store i64* %34, i64** %33, align 8
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %32, i32 0, i32 1
  %36 = extractvalue { i64*, i32 } %31, 1
  store i32 %36, i32* %35, align 8
  %37 = load i64, i64* %8, align 8
  %38 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %11, i64 %37)
  %39 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %40 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %39, i32 0, i32 0
  %41 = extractvalue { i64*, i32 } %38, 0
  store i64* %41, i64** %40, align 8
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %39, i32 0, i32 1
  %43 = extractvalue { i64*, i32 } %38, 1
  store i32 %43, i32* %42, align 8
  %44 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %6
  call void @_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator(%"class.std::vector.11"* %49, i64* %46, i32 %48)
  store i32 1260532693, i32* %20
  br label %78

; <label>:50:                                     ; preds = %21
  %51 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %6
  %52 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.11"* %51) #3
  %53 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = extractvalue { i64*, i32 } %52, 0
  store i64* %55, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = extractvalue { i64*, i32 } %52, 1
  store i32 %57, i32* %56, align 8
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %12, %"struct.std::_Bit_iterator"* dereferenceable(16) %13)
  %58 = load i64, i64* %8, align 8
  %59 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %6
  %60 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %59) #3
  %61 = add i64 %58, 8977698390603049727
  %62 = sub i64 %61, %60
  %63 = sub i64 %62, 8977698390603049727
  %64 = sub i64 %58, %60
  %65 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %6
  %71 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratormRKb(%"class.std::vector.11"* %70, i64* %67, i32 %69, i64 %63, i8* dereferenceable(1) %9)
  %72 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 0
  %74 = extractvalue { i64*, i32 } %71, 0
  store i64* %74, i64** %73, align 8
  %75 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 1
  %76 = extractvalue { i64*, i32 } %71, 1
  store i32 %76, i32* %75, align 8
  store i32 1260532693, i32* %20
  br label %78

; <label>:77:                                     ; preds = %21
  ret void

; <label>:78:                                     ; preds = %50, %29, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNSt6vectorIbSaIbEEixEm(%"class.std::vector.11"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_reference", align 8
  %4 = alloca %"class.std::vector.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  %8 = bitcast %"class.std::vector.11"* %7 to %"struct.std::_Bvector_base"*
  %9 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Bit_iterator"* %10 to %"struct.std::_Bit_iterator_base"*
  %12 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %5, align 8
  %15 = udiv i64 %14, 64
  %16 = getelementptr inbounds i64, i64* %13, i64 %15
  %17 = load i64, i64* %5, align 8
  %18 = urem i64 %17, 64
  %19 = trunc i64 %18 to i32
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %6, i64* %16, i32 %19)
  %20 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %21 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %22 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %21, i32 0, i32 0
  %23 = extractvalue { i64*, i64 } %20, 0
  store i64* %23, i64** %22, align 8
  %24 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %21, i32 0, i32 1
  %25 = extractvalue { i64*, i64 } %20, 1
  store i64 %25, i64* %24, align 8
  %26 = bitcast %"struct.std::_Bit_reference"* %3 to { i64*, i64 }*
  %27 = load { i64*, i64 }, { i64*, i64 }* %26, align 8
  ret { i64*, i64 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"*, i1 zeroext) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Bit_reference"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.91
  %8 = load i32, i32* @y.92
  %9 = add i32 %7, -784586214
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -784586214
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1807154911, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %226
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1807154911, label %21
    i32 695477412, label %41
    i32 1950645840, label %75
    i32 2108335818, label %78
    i32 -1963551582, label %102
    i32 771333858, label %129
    i32 881059965, label %178
    i32 261899083, label %179
    i32 -2108927465, label %181
    i32 86563431, label %188
  ]

; <label>:20:                                     ; preds = %18
  br label %226

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 695477412, i32 -2108927465
  store i32 %40, i32* %17
  br label %226

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::_Bit_reference"*, align 8
  %43 = alloca i8, align 1
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %42, align 8
  %44 = zext i1 %1 to i8
  store i8 %44, i8* %43, align 1
  %45 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %42, align 8
  store %"struct.std::_Bit_reference"* %45, %"struct.std::_Bit_reference"** %4
  %46 = load i8, i8* %43, align 1
  %47 = trunc i8 %46 to i1
  store i1 %47, i1* %3
  %48 = load i32, i32* @x.91
  %49 = load i32, i32* @y.92
  %50 = sub i32 %48, -760635009
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -760635009
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1950645840, i32 -2108927465
  store i32 %74, i32* %17
  br label %226

; <label>:75:                                     ; preds = %18
  %76 = load volatile i1, i1* %3
  %77 = select i1 %76, i32 2108335818, i32 -1963551582
  store i32 %77, i32* %17
  br label %226

; <label>:78:                                     ; preds = %18
  %79 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %80 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %79, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %83 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %82, i32 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = load i64, i64* %84, align 8
  %86 = xor i64 %85, -1
  %87 = xor i64 %81, -1
  %88 = xor i64 391193747936645252, -1
  %89 = and i64 %86, 391193747936645252
  %90 = and i64 %85, %88
  %91 = and i64 %87, 391193747936645252
  %92 = and i64 %81, %88
  %93 = or i64 %89, %90
  %94 = or i64 %91, %92
  %95 = xor i64 %93, %94
  %96 = or i64 %86, %87
  %97 = xor i64 %96, -1
  %98 = or i64 391193747936645252, %88
  %99 = and i64 %97, %98
  %100 = or i64 %95, %99
  %101 = or i64 %85, %81
  store i64 %100, i64* %84, align 8
  store i32 261899083, i32* %17
  br label %226

; <label>:102:                                    ; preds = %18
  %103 = load i32, i32* @x.91
  %104 = load i32, i32* @y.92
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 771333858, i32 86563431
  store i32 %128, i32* %17
  br label %226

; <label>:129:                                    ; preds = %18
  %130 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %131 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %130, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = xor i64 %132, -1
  %134 = and i64 -1, %133
  %135 = xor i64 -1, -1
  %136 = and i64 %132, %135
  %137 = or i64 %134, %136
  %138 = xor i64 %132, -1
  %139 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %140 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %139, i32 0, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = load i64, i64* %141, align 8
  %143 = xor i64 %142, -1
  %144 = xor i64 %137, -1
  %145 = xor i64 2400181139506110293, -1
  %146 = or i64 %143, %144
  %147 = or i64 2400181139506110293, %145
  %148 = xor i64 %146, -1
  %149 = and i64 %148, %147
  %150 = and i64 %142, %137
  store i64 %149, i64* %141, align 8
  %151 = load i32, i32* @x.91
  %152 = load i32, i32* @y.92
  %153 = add i32 %151, -1593370263
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, -1593370263
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  %177 = select i1 %175, i32 881059965, i32 86563431
  store i32 %177, i32* %17
  br label %226

; <label>:178:                                    ; preds = %18
  store i32 261899083, i32* %17
  br label %226

; <label>:179:                                    ; preds = %18
  %180 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  ret %"struct.std::_Bit_reference"* %180

; <label>:181:                                    ; preds = %18
  %182 = alloca %"struct.std::_Bit_reference"*, align 8
  %183 = alloca i8, align 1
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %182, align 8
  %184 = zext i1 %1 to i8
  store i8 %184, i8* %183, align 1
  %185 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %182, align 8
  %186 = load i8, i8* %183, align 1
  %187 = trunc i8 %186 to i1
  store i32 695477412, i32* %17
  br label %226

; <label>:188:                                    ; preds = %18
  %189 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %190 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %189, i32 0, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = add i64 0, -7946715709116996856
  %193 = sub i64 %192, %191
  %194 = sub i64 %193, -7946715709116996856
  %195 = sub i64 0, %191
  %196 = sub i64 %194, -8054579125613187147
  %197 = add i64 %196, -1
  %198 = add i64 %197, -8054579125613187147
  %199 = add i64 %194, -1
  %200 = sub i64 %191, 4056230191950178484
  %201 = sub i64 %200, -1
  %202 = add i64 %201, 4056230191950178484
  %203 = sub i64 %191, -1
  %204 = mul i64 %202, -1
  %205 = shl i64 %191, -1
  %206 = xor i64 %191, -1
  %207 = and i64 -1, %206
  %208 = xor i64 -1, -1
  %209 = and i64 %191, %208
  %210 = or i64 %207, %209
  %211 = xor i64 %191, -1
  %212 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4
  %213 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %212, i32 0, i32 0
  %214 = load i64*, i64** %213, align 8
  %215 = load i64, i64* %214, align 8
  %216 = shl i64 %215, %210
  %217 = add i64 %215, -6934476377114705237
  %218 = sub i64 %217, %210
  %219 = sub i64 %218, -6934476377114705237
  %220 = sub i64 %215, %210
  %221 = mul i64 %219, %210
  %222 = xor i64 %210, -1
  %223 = xor i64 %215, %222
  %224 = and i64 %223, %215
  %225 = and i64 %215, %210
  store i64 %224, i64* %214, align 8
  store i32 771333858, i32* %17
  br label %226

; <label>:226:                                    ; preds = %188, %181, %178, %129, %102, %78, %75, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_reference"*, align 8
  %4 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %3, align 8
  store %"struct.std::_Bit_reference"* %1, %"struct.std::_Bit_reference"** %4, align 8
  %5 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %3, align 8
  %6 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4, align 8
  %7 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %6) #3
  %8 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %5, i1 zeroext %7) #3
  ret %"struct.std::_Bit_reference"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.95
  %6 = load i32, i32* @y.96
  %7 = add i32 %5, -1901933799
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1901933799
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1137370157, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %137
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1137370157, label %19
    i32 414693808, label %27
    i32 1829237855, label %72
    i32 -1753154762, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %137

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 414693808, i32 -1753154762
  store i32 %26, i32* %15
  br label %137

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %28, align 8
  %29 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %29, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %29, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = xor i64 %34, -1
  %36 = xor i64 %32, %35
  %37 = and i64 %36, %32
  %38 = and i64 %32, %34
  %39 = icmp ne i64 %37, 0
  %40 = xor i1 %39, true
  %41 = and i1 true, %40
  %42 = xor i1 true, true
  %43 = and i1 %39, %42
  %44 = xor i1 true, true
  %45 = and i1 %44, true
  %46 = and i1 true, %42
  %47 = or i1 %41, %43
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = xor i1 %39, true
  %51 = xor i1 %49, true
  %52 = and i1 true, %51
  %53 = xor i1 true, true
  %54 = and i1 %49, %53
  %55 = or i1 %52, %54
  %56 = xor i1 %49, true
  store i1 %55, i1* %2
  %57 = load i32, i32* @x.95
  %58 = load i32, i32* @y.96
  %59 = add i32 %57, -1814235523
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, -1814235523
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 1829237855, i32 -1753154762
  store i32 %71, i32* %15
  br label %137

; <label>:72:                                     ; preds = %16
  %73 = load volatile i1, i1* %2
  ret i1 %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Bit_reference"*, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %75, align 8
  %76 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %76, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %76, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %79, 7289601087191868110
  %83 = sub i64 %82, %81
  %84 = sub i64 %83, 7289601087191868110
  %85 = sub i64 %79, %81
  %86 = mul i64 %84, %81
  %87 = xor i64 %79, -1
  %88 = xor i64 %81, -1
  %89 = xor i64 -2630379468098468947, -1
  %90 = or i64 %87, %88
  %91 = or i64 -2630379468098468947, %89
  %92 = xor i64 %90, -1
  %93 = and i64 %92, %91
  %94 = and i64 %79, %81
  %95 = icmp ne i64 %93, 0
  %96 = sub i1 %95, false
  %97 = sub i1 %96, true
  %98 = add i1 %97, false
  %99 = sub i1 %95, true
  %100 = mul i1 %98, true
  %101 = shl i1 %95, true
  %102 = sub i1 false, true
  %103 = sub i1 %102, %95
  %104 = add i1 %103, true
  %105 = sub i1 false, %95
  %106 = add i1 %104, true
  %107 = add i1 %106, true
  %108 = sub i1 %107, true
  %109 = add i1 %104, true
  %110 = xor i1 %95, true
  %111 = and i1 true, %110
  %112 = xor i1 true, true
  %113 = and i1 %95, %112
  %114 = xor i1 true, true
  %115 = and i1 %114, true
  %116 = and i1 true, %112
  %117 = or i1 %111, %113
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = xor i1 %95, true
  %121 = shl i1 %119, true
  %122 = sub i1 false, %119
  %123 = add i1 false, %122
  %124 = sub i1 false, %119
  %125 = sub i1 false, %123
  %126 = sub i1 false, true
  %127 = add i1 %125, %126
  %128 = sub i1 false, %127
  %129 = add i1 %123, true
  %130 = shl i1 %119, true
  %131 = xor i1 %119, true
  %132 = and i1 true, %131
  %133 = xor i1 true, true
  %134 = and i1 %119, %133
  %135 = or i1 %132, %134
  %136 = xor i1 %119, true
  store i32 414693808, i32* %15
  br label %137

; <label>:137:                                    ; preds = %74, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.10() #0 section ".text.startup" {
  call void @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEEC2Ev(%"class.std::map"* @primeFactorSet) #3
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::map"*)* @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEED2Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::map", %"class.std::map"* @primeFactorSet, i32 0, i32 0, i32 0, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEEC2Ev(%"class.std::map"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EEC2Ev(%"class.std::_Rb_tree"* %4)
          to label %5 unwind label %34

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.99
  %7 = load i32, i32* @y.100
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %37

; <label>:19:                                     ; preds = %5, %37
  %20 = load i32, i32* @x.99
  %21 = load i32, i32* @y.100
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %37

; <label>:33:                                     ; preds = %19
  ret void

; <label>:34:                                     ; preds = %1
  %35 = landingpad { i8*, i32 }
          catch i8* null
  %36 = extractvalue { i8*, i32 } %35, 0
  call void @__clang_call_terminate(i8* %36) #12
  unreachable

; <label>:37:                                     ; preds = %19, %5
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEED2Ev(%"class.std::map"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EED2Ev(%"class.std::_Rb_tree"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.11() #0 section ".text.startup" {
  call void @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEEC2Ev(%"class.std::map.18"* @primeFactorMap) #3
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::map.18"*)* @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEED2Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::map.18", %"class.std::map.18"* @primeFactorMap, i32 0, i32 0, i32 0, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEEC2Ev(%"class.std::map.18"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::map.18"*, align 8
  store %"class.std::map.18"* %0, %"class.std::map.18"** %2, align 8
  %3 = load %"class.std::map.18"*, %"class.std::map.18"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map.18", %"class.std::map.18"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EEC2Ev(%"class.std::_Rb_tree.19"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.105
  %8 = load i32, i32* @y.106
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %8, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %62

; <label>:32:                                     ; preds = %6, %62
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #12
  %35 = load i32, i32* @x.105
  %36 = load i32, i32* @y.106
  %37 = add i32 %35, 1827840296
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1827840296
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %32
  unreachable

; <label>:62:                                     ; preds = %32, %6
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #12
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEED2Ev(%"class.std::map.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::map.18"*, align 8
  store %"class.std::map.18"* %0, %"class.std::map.18"** %2, align 8
  %3 = load %"class.std::map.18"*, %"class.std::map.18"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map.18", %"class.std::map.18"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EED2Ev(%"class.std::_Rb_tree.19"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @_Z15primeFactorInitv() #4 {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.109
  %4 = load i32, i32* @y.110
  %5 = add i32 %3, -1073892328
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1073892328
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 250909698, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %43
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 250909698, label %17
    i32 1815067630, label %25
    i32 -1325668895, label %41
    i32 1451059296, label %42
  ]

; <label>:16:                                     ; preds = %14
  br label %43

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1815067630, i32 1451059296
  store i32 %24, i32* %13
  br label %43

; <label>:25:                                     ; preds = %14
  call void @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE5clearEv(%"class.std::map.18"* @primeFactorMap) #3
  call void @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE5clearEv(%"class.std::map"* @primeFactorSet) #3
  %26 = load i32, i32* @x.109
  %27 = load i32, i32* @y.110
  %28 = add i32 %26, -113233032
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -113233032
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -1325668895, i32 1451059296
  store i32 %40, i32* %13
  br label %43

; <label>:41:                                     ; preds = %14
  ret void

; <label>:42:                                     ; preds = %14
  call void @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE5clearEv(%"class.std::map.18"* @primeFactorMap) #3
  call void @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE5clearEv(%"class.std::map"* @primeFactorSet) #3
  store i32 1815067630, i32* %13
  br label %43

; <label>:43:                                     ; preds = %42, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE5clearEv(%"class.std::map.18"*) #4 comdat align 2 {
  %2 = alloca %"class.std::map.18"*, align 8
  store %"class.std::map.18"* %0, %"class.std::map.18"** %2, align 8
  %3 = load %"class.std::map.18"*, %"class.std::map.18"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map.18", %"class.std::map.18"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE5clearEv(%"class.std::_Rb_tree.19"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE5clearEv(%"class.std::map"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.113
  %5 = load i32, i32* @y.114
  %6 = sub i32 %4, 2064770907
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 2064770907
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 830744930, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 830744930, label %18
    i32 495550693, label %38
    i32 584066262, label %57
    i32 -1449898315, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 495550693, i32 -1449898315
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %39, align 8
  %40 = load %"class.std::map"*, %"class.std::map"** %39, align 8
  %41 = getelementptr inbounds %"class.std::map", %"class.std::map"* %40, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE5clearEv(%"class.std::_Rb_tree"* %41) #3
  %42 = load i32, i32* @x.113
  %43 = load i32, i32* @y.114
  %44 = sub i32 %42, 1258225528
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1258225528
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 584066262, i32 -1449898315
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %59, align 8
  %60 = load %"class.std::map"*, %"class.std::map"** %59, align 8
  %61 = getelementptr inbounds %"class.std::map", %"class.std::map"* %60, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE5clearEv(%"class.std::_Rb_tree"* %61) #3
  store i32 495550693, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define void @_Z11primeFactorx(i64) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::set.23", align 8
  %6 = alloca %"class.std::initializer_list", align 8
  %7 = alloca [2 x i64], align 8
  %8 = alloca %"struct.std::less", align 1
  %9 = alloca %"class.std::allocator.8", align 1
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %"class.std::map.28", align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %"struct.std::pair", align 8
  %17 = alloca i64, align 8
  %18 = alloca %"struct.std::pair", align 8
  store i64 %0, i64* %2, align 8
  %19 = load i64, i64* %2, align 8
  %20 = icmp slt i64 %19, 0
  br i1 %20, label %53, label %21

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.115
  %23 = load i32, i32* @y.116
  %24 = add i32 %22, -673750384
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -673750384
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %410

; <label>:36:                                     ; preds = %21, %410
  %37 = load i64, i64* %2, align 8
  %38 = icmp sgt i64 %37, 1152921504606846976
  %39 = load i32, i32* @x.115
  %40 = load i32, i32* @y.116
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %410

; <label>:52:                                     ; preds = %36
  br i1 %38, label %53, label %54

; <label>:53:                                     ; preds = %52, %1
  br label %351

; <label>:54:                                     ; preds = %52
  %55 = load i64, i64* %2, align 8
  store i64 %55, i64* %3, align 8
  %56 = load i64, i64* %2, align 8
  %57 = sitofp i64 %56 to double
  %58 = fadd double %57, 1.000000e-01
  %59 = call double @sqrt(double %58) #3
  %60 = fptosi double %59 to i64
  store i64 %60, i64* %4, align 8
  %61 = getelementptr inbounds [2 x i64], [2 x i64]* %7, i64 0, i64 0
  store i64 1, i64* %61, align 8
  %62 = getelementptr inbounds i64, i64* %61, i64 1
  %63 = load i64, i64* %2, align 8
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %6, i32 0, i32 0
  %65 = getelementptr inbounds [2 x i64], [2 x i64]* %7, i64 0, i64 0
  store i64* %65, i64** %64, align 8
  %66 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %6, i32 0, i32 1
  store i64 2, i64* %66, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.8"* %9) #3
  %67 = bitcast %"class.std::initializer_list"* %6 to { i64*, i64 }*
  %68 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %67, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %67, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  invoke void @_ZNSt3setIxSt4lessIxESaIxEEC2ESt16initializer_listIxERKS1_RKS2_(%"class.std::set.23"* %5, i64* %69, i64 %71, %"struct.std::less"* dereferenceable(1) %8, %"class.std::allocator.8"* dereferenceable(1) %9)
          to label %72 unwind label %218

; <label>:72:                                     ; preds = %54
  call void @_ZNSaIxED2Ev(%"class.std::allocator.8"* %9) #3
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev(%"class.std::map.28"* %12) #3
  store i32 2, i32* %13, align 4
  br label %73

; <label>:73:                                     ; preds = %269, %72
  %74 = load i32, i32* %13, align 4
  %75 = sext i32 %74 to i64
  %76 = load i64, i64* %4, align 8
  %77 = icmp sle i64 %75, %76
  br i1 %77, label %78, label %275

; <label>:78:                                     ; preds = %73
  %79 = load i32, i32* @x.115
  %80 = load i32, i32* @y.116
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %413

; <label>:104:                                    ; preds = %78, %413
  store i64 0, i64* %14, align 8
  store i64 1, i64* %15, align 8
  %105 = load i32, i32* @x.115
  %106 = load i32, i32* @y.116
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %413

; <label>:118:                                    ; preds = %104
  br label %119

; <label>:119:                                    ; preds = %217, %118
  %120 = load i32, i32* @x.115
  %121 = load i32, i32* @y.116
  %122 = add i32 %120, 1019411073
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, 1019411073
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %414

; <label>:134:                                    ; preds = %119, %414
  %135 = load i64, i64* %3, align 8
  %136 = load i32, i32* %13, align 4
  %137 = sext i32 %136 to i64
  %138 = srem i64 %135, %137
  %139 = icmp eq i64 %138, 0
  %140 = load i32, i32* @x.115
  %141 = load i32, i32* @y.116
  %142 = add i32 %140, -891945660
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, -891945660
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %414

; <label>:154:                                    ; preds = %134
  br i1 %139, label %155, label %255

; <label>:155:                                    ; preds = %154
  %156 = load i64, i64* %14, align 8
  %157 = sub i64 0, %156
  %158 = sub i64 0, 1
  %159 = add i64 %157, %158
  %160 = sub i64 0, %159
  %161 = add nsw i64 %156, 1
  store i64 %160, i64* %14, align 8
  %162 = load i32, i32* %13, align 4
  %163 = sext i32 %162 to i64
  %164 = load i64, i64* %15, align 8
  %165 = mul nsw i64 %164, %163
  store i64 %165, i64* %15, align 8
  %166 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set.23"* %5, i64* dereferenceable(8) %15)
          to label %167 unwind label %251

; <label>:167:                                    ; preds = %155
  %168 = load i32, i32* @x.115
  %169 = load i32, i32* @y.116
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  br i1 %179, label %181, label %446

; <label>:181:                                    ; preds = %167, %446
  %182 = bitcast %"struct.std::pair"* %16 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %183 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %182, i32 0, i32 0
  %184 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %166, 0
  store %"struct.std::_Rb_tree_node_base"* %184, %"struct.std::_Rb_tree_node_base"** %183, align 8
  %185 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %182, i32 0, i32 1
  %186 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %166, 1
  store i8 %186, i8* %185, align 8
  %187 = load i32, i32* %13, align 4
  %188 = sext i32 %187 to i64
  %189 = load i64, i64* %3, align 8
  %190 = sdiv i64 %189, %188
  store i64 %190, i64* %3, align 8
  %191 = load i32, i32* @x.115
  %192 = load i32, i32* @y.116
  %193 = sub i32 %191, 1991809063
  %194 = sub i32 %193, 1
  %195 = add i32 %194, 1991809063
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 false, true
  %204 = and i1 %201, false
  %205 = and i1 %199, %203
  %206 = and i1 %202, false
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 false, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  br i1 %215, label %217, label %446

; <label>:217:                                    ; preds = %181
  br label %119

; <label>:218:                                    ; preds = %54
  %219 = load i32, i32* @x.115
  %220 = load i32, i32* @y.116
  %221 = add i32 %219, 170275005
  %222 = sub i32 %221, 1
  %223 = sub i32 %222, 170275005
  %224 = sub i32 %219, 1
  %225 = mul i32 %219, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %220, 10
  %229 = and i1 %227, %228
  %230 = xor i1 %227, %228
  %231 = or i1 %229, %230
  %232 = or i1 %227, %228
  br i1 %231, label %233, label %468

; <label>:233:                                    ; preds = %218, %468
  %234 = landingpad { i8*, i32 }
          cleanup
  %235 = extractvalue { i8*, i32 } %234, 0
  store i8* %235, i8** %10, align 8
  %236 = extractvalue { i8*, i32 } %234, 1
  store i32 %236, i32* %11, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.8"* %9) #3
  %237 = load i32, i32* @x.115
  %238 = load i32, i32* @y.116
  %239 = sub i32 0, 1
  %240 = add i32 %237, %239
  %241 = sub i32 %237, 1
  %242 = mul i32 %237, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %238, 10
  %246 = and i1 %244, %245
  %247 = xor i1 %244, %245
  %248 = or i1 %246, %247
  %249 = or i1 %244, %245
  br i1 %248, label %250, label %468

; <label>:250:                                    ; preds = %233
  br label %405

; <label>:251:                                    ; preds = %348, %346, %344, %288, %280, %278, %258, %155
  %252 = landingpad { i8*, i32 }
          cleanup
  %253 = extractvalue { i8*, i32 } %252, 0
  store i8* %253, i8** %10, align 8
  %254 = extractvalue { i8*, i32 } %252, 1
  store i32 %254, i32* %11, align 4
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev(%"class.std::map.28"* %12) #3
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set.23"* %5) #3
  br label %405

; <label>:255:                                    ; preds = %154
  %256 = load i64, i64* %14, align 8
  %257 = icmp sgt i64 %256, 0
  br i1 %257, label %258, label %264

; <label>:258:                                    ; preds = %255
  %259 = load i64, i64* %14, align 8
  %260 = load i32, i32* %13, align 4
  %261 = sext i32 %260 to i64
  store i64 %261, i64* %17, align 8
  %262 = invoke dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixEOx(%"class.std::map.28"* %12, i64* dereferenceable(8) %17)
          to label %263 unwind label %251

; <label>:263:                                    ; preds = %258
  store i64 %259, i64* %262, align 8
  br label %264

; <label>:264:                                    ; preds = %263, %255
  %265 = load i64, i64* %3, align 8
  %266 = icmp eq i64 %265, 1
  br i1 %266, label %267, label %268

; <label>:267:                                    ; preds = %264
  br label %275

; <label>:268:                                    ; preds = %264
  br label %269

; <label>:269:                                    ; preds = %268
  %270 = load i32, i32* %13, align 4
  %271 = add i32 %270, 1771164856
  %272 = add i32 %271, 1
  %273 = sub i32 %272, 1771164856
  %274 = add nsw i32 %270, 1
  store i32 %273, i32* %13, align 4
  br label %73

; <label>:275:                                    ; preds = %267, %73
  %276 = load i64, i64* %3, align 8
  %277 = icmp ne i64 %276, 1
  br i1 %277, label %278, label %288

; <label>:278:                                    ; preds = %275
  %279 = invoke dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_(%"class.std::map.28"* %12, i64* dereferenceable(8) %3)
          to label %280 unwind label %251

; <label>:280:                                    ; preds = %278
  store i64 1, i64* %279, align 8
  %281 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set.23"* %5, i64* dereferenceable(8) %3)
          to label %282 unwind label %251

; <label>:282:                                    ; preds = %280
  %283 = bitcast %"struct.std::pair"* %18 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %284 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %283, i32 0, i32 0
  %285 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %281, 0
  store %"struct.std::_Rb_tree_node_base"* %285, %"struct.std::_Rb_tree_node_base"** %284, align 8
  %286 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %283, i32 0, i32 1
  %287 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %281, 1
  store i8 %287, i8* %286, align 8
  br label %288

; <label>:288:                                    ; preds = %282, %275
  %289 = invoke dereferenceable(48) %"class.std::set.23"* @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEEixERS6_(%"class.std::map"* @primeFactorSet, i64* dereferenceable(8) %2)
          to label %290 unwind label %251

; <label>:290:                                    ; preds = %288
  %291 = load i32, i32* @x.115
  %292 = load i32, i32* @y.116
  %293 = add i32 %291, 1939886303
  %294 = sub i32 %293, 1
  %295 = sub i32 %294, 1939886303
  %296 = sub i32 %291, 1
  %297 = mul i32 %291, %295
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %292, 10
  %301 = xor i1 %299, true
  %302 = xor i1 %300, true
  %303 = xor i1 true, true
  %304 = and i1 %301, true
  %305 = and i1 %299, %303
  %306 = and i1 %302, true
  %307 = and i1 %300, %303
  %308 = or i1 %304, %305
  %309 = or i1 %306, %307
  %310 = xor i1 %308, %309
  %311 = or i1 %301, %302
  %312 = xor i1 %311, true
  %313 = or i1 true, %303
  %314 = and i1 %312, %313
  %315 = or i1 %310, %314
  %316 = or i1 %299, %300
  br i1 %315, label %317, label %472

; <label>:317:                                    ; preds = %290, %472
  %318 = load i32, i32* @x.115
  %319 = load i32, i32* @y.116
  %320 = sub i32 %318, -1740670641
  %321 = sub i32 %320, 1
  %322 = add i32 %321, -1740670641
  %323 = sub i32 %318, 1
  %324 = mul i32 %318, %322
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %319, 10
  %328 = xor i1 %326, true
  %329 = xor i1 %327, true
  %330 = xor i1 false, true
  %331 = and i1 %328, false
  %332 = and i1 %326, %330
  %333 = and i1 %329, false
  %334 = and i1 %327, %330
  %335 = or i1 %331, %332
  %336 = or i1 %333, %334
  %337 = xor i1 %335, %336
  %338 = or i1 %328, %329
  %339 = xor i1 %338, true
  %340 = or i1 false, %330
  %341 = and i1 %339, %340
  %342 = or i1 %337, %341
  %343 = or i1 %326, %327
  br i1 %342, label %344, label %472

; <label>:344:                                    ; preds = %317
  %345 = invoke dereferenceable(48) %"class.std::set.23"* @_ZNSt3setIxSt4lessIxESaIxEEaSERKS3_(%"class.std::set.23"* %289, %"class.std::set.23"* dereferenceable(48) %5)
          to label %346 unwind label %251

; <label>:346:                                    ; preds = %344
  %347 = invoke dereferenceable(48) %"class.std::map.28"* @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEEixERS3_(%"class.std::map.18"* @primeFactorMap, i64* dereferenceable(8) %2)
          to label %348 unwind label %251

; <label>:348:                                    ; preds = %346
  %349 = invoke dereferenceable(48) %"class.std::map.28"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEaSERKS6_(%"class.std::map.28"* %347, %"class.std::map.28"* dereferenceable(48) %12)
          to label %350 unwind label %251

; <label>:350:                                    ; preds = %348
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev(%"class.std::map.28"* %12) #3
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set.23"* %5) #3
  br label %351

; <label>:351:                                    ; preds = %350, %53
  %352 = load i32, i32* @x.115
  %353 = load i32, i32* @y.116
  %354 = add i32 %352, 747539680
  %355 = sub i32 %354, 1
  %356 = sub i32 %355, 747539680
  %357 = sub i32 %352, 1
  %358 = mul i32 %352, %356
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %353, 10
  %362 = xor i1 %360, true
  %363 = xor i1 %361, true
  %364 = xor i1 false, true
  %365 = and i1 %362, false
  %366 = and i1 %360, %364
  %367 = and i1 %363, false
  %368 = and i1 %361, %364
  %369 = or i1 %365, %366
  %370 = or i1 %367, %368
  %371 = xor i1 %369, %370
  %372 = or i1 %362, %363
  %373 = xor i1 %372, true
  %374 = or i1 false, %364
  %375 = and i1 %373, %374
  %376 = or i1 %371, %375
  %377 = or i1 %360, %361
  br i1 %376, label %378, label %473

; <label>:378:                                    ; preds = %351, %473
  %379 = load i32, i32* @x.115
  %380 = load i32, i32* @y.116
  %381 = sub i32 0, 1
  %382 = add i32 %379, %381
  %383 = sub i32 %379, 1
  %384 = mul i32 %379, %382
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %380, 10
  %388 = xor i1 %386, true
  %389 = xor i1 %387, true
  %390 = xor i1 true, true
  %391 = and i1 %388, true
  %392 = and i1 %386, %390
  %393 = and i1 %389, true
  %394 = and i1 %387, %390
  %395 = or i1 %391, %392
  %396 = or i1 %393, %394
  %397 = xor i1 %395, %396
  %398 = or i1 %388, %389
  %399 = xor i1 %398, true
  %400 = or i1 true, %390
  %401 = and i1 %399, %400
  %402 = or i1 %397, %401
  %403 = or i1 %386, %387
  br i1 %402, label %404, label %473

; <label>:404:                                    ; preds = %378
  ret void

; <label>:405:                                    ; preds = %251, %250
  %406 = load i8*, i8** %10, align 8
  %407 = load i32, i32* %11, align 4
  %408 = insertvalue { i8*, i32 } undef, i8* %406, 0
  %409 = insertvalue { i8*, i32 } %408, i32 %407, 1
  resume { i8*, i32 } %409

; <label>:410:                                    ; preds = %36, %21
  %411 = load i64, i64* %2, align 8
  %412 = icmp sgt i64 %411, 1152921504606846976
  br label %36

; <label>:413:                                    ; preds = %104, %78
  store i64 0, i64* %14, align 8
  store i64 1, i64* %15, align 8
  br label %104

; <label>:414:                                    ; preds = %134, %119
  %415 = load i64, i64* %3, align 8
  %416 = load i32, i32* %13, align 4
  %417 = sext i32 %416 to i64
  %418 = sub i64 0, %417
  %419 = add i64 %415, %418
  %420 = sub i64 %415, %417
  %421 = mul i64 %419, %417
  %422 = shl i64 %415, %417
  %423 = shl i64 %415, %417
  %424 = shl i64 %415, %417
  %425 = sub i64 0, %417
  %426 = add i64 %415, %425
  %427 = sub i64 %415, %417
  %428 = mul i64 %426, %417
  %429 = add i64 %415, -9037798539912343491
  %430 = sub i64 %429, %417
  %431 = sub i64 %430, -9037798539912343491
  %432 = sub i64 %415, %417
  %433 = mul i64 %431, %417
  %434 = add i64 %415, -5678997956831793238
  %435 = sub i64 %434, %417
  %436 = sub i64 %435, -5678997956831793238
  %437 = sub i64 %415, %417
  %438 = mul i64 %436, %417
  %439 = sub i64 %415, -8217422469942679681
  %440 = sub i64 %439, %417
  %441 = add i64 %440, -8217422469942679681
  %442 = sub i64 %415, %417
  %443 = mul i64 %441, %417
  %444 = srem i64 %415, %417
  %445 = icmp eq i64 %444, 0
  br label %134

; <label>:446:                                    ; preds = %181, %167
  %447 = bitcast %"struct.std::pair"* %16 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %448 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %447, i32 0, i32 0
  %449 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %166, 0
  store %"struct.std::_Rb_tree_node_base"* %449, %"struct.std::_Rb_tree_node_base"** %448, align 8
  %450 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %447, i32 0, i32 1
  %451 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %166, 1
  store i8 %451, i8* %450, align 8
  %452 = load i32, i32* %13, align 4
  %453 = sext i32 %452 to i64
  %454 = load i64, i64* %3, align 8
  %455 = shl i64 %454, %453
  %456 = add i64 %454, 5240114396008620733
  %457 = sub i64 %456, %453
  %458 = sub i64 %457, 5240114396008620733
  %459 = sub i64 %454, %453
  %460 = mul i64 %458, %453
  %461 = sub i64 0, %454
  %462 = add i64 0, %461
  %463 = sub i64 0, %454
  %464 = sub i64 0, %453
  %465 = sub i64 %462, %464
  %466 = add i64 %462, %453
  %467 = sdiv i64 %454, %453
  store i64 %467, i64* %3, align 8
  br label %181

; <label>:468:                                    ; preds = %233, %218
  %469 = landingpad { i8*, i32 }
          cleanup
  %470 = extractvalue { i8*, i32 } %469, 0
  store i8* %470, i8** %10, align 8
  %471 = extractvalue { i8*, i32 } %469, 1
  store i32 %471, i32* %11, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.8"* %9) #3
  br label %233

; <label>:472:                                    ; preds = %317, %290
  br label %317

; <label>:473:                                    ; preds = %378, %351
  br label %378
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.117
  %5 = load i32, i32* @y.118
  %6 = sub i32 %4, -1584617755
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1584617755
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 571376725, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 571376725, label %18
    i32 1024441105, label %26
    i32 1365621467, label %57
    i32 -93131851, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1024441105, i32 -93131851
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %27, align 8
  %28 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %27, align 8
  %29 = bitcast %"class.std::allocator.8"* %28 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.9"* %29) #3
  %30 = load i32, i32* @x.117
  %31 = load i32, i32* @y.118
  %32 = add i32 %30, 322284080
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 322284080
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1365621467, i32 -93131851
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %59, align 8
  %60 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %59, align 8
  %61 = bitcast %"class.std::allocator.8"* %60 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.9"* %61) #3
  store i32 1024441105, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEEC2ESt16initializer_listIxERKS1_RKS2_(%"class.std::set.23"*, i64*, i64, %"struct.std::less"* dereferenceable(1), %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = load i32, i32* @x.119
  %7 = load i32, i32* @y.120
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %149

; <label>:19:                                     ; preds = %5, %149
  %20 = alloca %"class.std::initializer_list", align 8
  %21 = alloca %"class.std::set.23"*, align 8
  %22 = alloca %"struct.std::less"*, align 8
  %23 = alloca %"class.std::allocator.8"*, align 8
  %24 = alloca %"class.std::allocator.8", align 1
  %25 = alloca i8*
  %26 = alloca i32
  %27 = bitcast %"class.std::initializer_list"* %20 to { i64*, i64 }*
  %28 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %27, i32 0, i32 0
  store i64* %1, i64** %28, align 8
  %29 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %27, i32 0, i32 1
  store i64 %2, i64* %29, align 8
  store %"class.std::set.23"* %0, %"class.std::set.23"** %21, align 8
  store %"struct.std::less"* %3, %"struct.std::less"** %22, align 8
  store %"class.std::allocator.8"* %4, %"class.std::allocator.8"** %23, align 8
  %30 = load %"class.std::set.23"*, %"class.std::set.23"** %21, align 8
  %31 = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %30, i32 0, i32 0
  %32 = load %"struct.std::less"*, %"struct.std::less"** %22, align 8
  %33 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %23, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.8"* %24, %"class.std::allocator.8"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.119
  %35 = load i32, i32* @y.120
  %36 = sub i32 %34, -653176223
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -653176223
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %149

; <label>:60:                                     ; preds = %19
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2ERKS3_RKS4_(%"class.std::_Rb_tree.24"* %31, %"struct.std::less"* dereferenceable(1) %32, %"class.std::allocator.8"* dereferenceable(1) %24)
          to label %61 unwind label %66

; <label>:61:                                     ; preds = %60
  call void @_ZNSaIxED2Ev(%"class.std::allocator.8"* %24) #3
  %62 = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %30, i32 0, i32 0
  %63 = call i64* @_ZNKSt16initializer_listIxE5beginEv(%"class.std::initializer_list"* %20) #3
  %64 = call i64* @_ZNKSt16initializer_listIxE3endEv(%"class.std::initializer_list"* %20) #3
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIPKxEEvT_S9_(%"class.std::_Rb_tree.24"* %62, i64* %63, i64* %64)
          to label %65 unwind label %99

; <label>:65:                                     ; preds = %61
  ret void

; <label>:66:                                     ; preds = %60
  %67 = load i32, i32* @x.119
  %68 = load i32, i32* @y.120
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %164

; <label>:80:                                     ; preds = %66, %164
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %25, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %26, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.8"* %24) #3
  %84 = load i32, i32* @x.119
  %85 = load i32, i32* @y.120
  %86 = add i32 %84, -1184553740
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -1184553740
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %164

; <label>:98:                                     ; preds = %80
  br label %103

; <label>:99:                                     ; preds = %61
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %25, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %26, align 4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree.24"* %31) #3
  br label %103

; <label>:103:                                    ; preds = %99, %98
  %104 = load i32, i32* @x.119
  %105 = load i32, i32* @y.120
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %168

; <label>:129:                                    ; preds = %103, %168
  %130 = load i8*, i8** %25, align 8
  %131 = load i32, i32* %26, align 4
  %132 = insertvalue { i8*, i32 } undef, i8* %130, 0
  %133 = insertvalue { i8*, i32 } %132, i32 %131, 1
  %134 = load i32, i32* @x.119
  %135 = load i32, i32* @y.120
  %136 = add i32 %134, 2070534797
  %137 = sub i32 %136, 1
  %138 = sub i32 %137, 2070534797
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  br i1 %146, label %148, label %168

; <label>:148:                                    ; preds = %129
  resume { i8*, i32 } %133

; <label>:149:                                    ; preds = %19, %5
  %150 = alloca %"class.std::initializer_list", align 8
  %151 = alloca %"class.std::set.23"*, align 8
  %152 = alloca %"struct.std::less"*, align 8
  %153 = alloca %"class.std::allocator.8"*, align 8
  %154 = alloca %"class.std::allocator.8", align 1
  %155 = alloca i8*
  %156 = alloca i32
  %157 = bitcast %"class.std::initializer_list"* %150 to { i64*, i64 }*
  %158 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %157, i32 0, i32 0
  store i64* %1, i64** %158, align 8
  %159 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %157, i32 0, i32 1
  store i64 %2, i64* %159, align 8
  store %"class.std::set.23"* %0, %"class.std::set.23"** %151, align 8
  store %"struct.std::less"* %3, %"struct.std::less"** %152, align 8
  store %"class.std::allocator.8"* %4, %"class.std::allocator.8"** %153, align 8
  %160 = load %"class.std::set.23"*, %"class.std::set.23"** %151, align 8
  %161 = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %160, i32 0, i32 0
  %162 = load %"struct.std::less"*, %"struct.std::less"** %152, align 8
  %163 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %153, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.8"* %154, %"class.std::allocator.8"* dereferenceable(1) %163) #3
  br label %19

; <label>:164:                                    ; preds = %80, %66
  %165 = landingpad { i8*, i32 }
          cleanup
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %25, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %26, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.8"* %24) #3
  br label %80

; <label>:168:                                    ; preds = %129, %103
  %169 = load i8*, i8** %25, align 8
  %170 = load i32, i32* %26, align 4
  %171 = insertvalue { i8*, i32 } undef, i8* %169, 0
  %172 = insertvalue { i8*, i32 } %171, i32 %170, 1
  br label %129
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.121
  %5 = load i32, i32* @y.122
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -677824179, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %72
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -677824179, label %17
    i32 788141265, label %37
    i32 414547563, label %67
    i32 -1283494324, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %72

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 788141265, i32 -1283494324
  store i32 %36, i32* %13
  br label %72

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %38, align 8
  %39 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %38, align 8
  %40 = bitcast %"class.std::allocator.8"* %39 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.9"* %40) #3
  %41 = load i32, i32* @x.121
  %42 = load i32, i32* @y.122
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 414547563, i32 -1283494324
  store i32 %66, i32* %13
  br label %72

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %69, align 8
  %70 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %69, align 8
  %71 = bitcast %"class.std::allocator.8"* %70 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.9"* %71) #3
  store i32 788141265, i32* %13
  br label %72

; <label>:72:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev(%"class.std::map.28"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.123
  %3 = load i32, i32* @y.124
  %4 = add i32 %2, -1019114263
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1019114263
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %63

; <label>:28:                                     ; preds = %1, %63
  %29 = alloca %"class.std::map.28"*, align 8
  store %"class.std::map.28"* %0, %"class.std::map.28"** %29, align 8
  %30 = load %"class.std::map.28"*, %"class.std::map.28"** %29, align 8
  %31 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %30, i32 0, i32 0
  %32 = load i32, i32* @x.123
  %33 = load i32, i32* @y.124
  %34 = sub i32 %32, -1293038642
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1293038642
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %63

; <label>:58:                                     ; preds = %28
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEC2Ev(%"class.std::_Rb_tree.29"* %31)
          to label %59 unwind label %60

; <label>:59:                                     ; preds = %58
  ret void

; <label>:60:                                     ; preds = %58
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #12
  unreachable

; <label>:63:                                     ; preds = %28, %1
  %64 = alloca %"class.std::map.28"*, align 8
  store %"class.std::map.28"* %0, %"class.std::map.28"** %64, align 8
  %65 = load %"class.std::map.28"*, %"class.std::map.28"** %64, align 8
  %66 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %65, i32 0, i32 0
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set.23"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca { %"struct.std::_Rb_tree_node_base"*, i8 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.125
  %7 = load i32, i32* @y.126
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 910212155, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 910212155, label %19
    i32 1796577317, label %27
    i32 281462217, label %60
    i32 829956594, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1796577317, i32 829956594
  store i32 %26, i32* %15
  br label %80

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair", align 8
  %29 = alloca %"class.std::set.23"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca %"struct.std::pair.56", align 8
  store %"class.std::set.23"* %0, %"class.std::set.23"** %29, align 8
  store i64* %1, i64** %30, align 8
  %32 = load %"class.std::set.23"*, %"class.std::set.23"** %29, align 8
  %33 = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %32, i32 0, i32 0
  %34 = load i64*, i64** %30, align 8
  %35 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree.24"* %33, i64* dereferenceable(8) %34)
  %36 = bitcast %"struct.std::pair.56"* %31 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %37 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %36, i32 0, i32 0
  %38 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %35, 0
  store %"struct.std::_Rb_tree_node_base"* %38, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %39 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %36, i32 0, i32 1
  %40 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %35, 1
  store i8 %40, i8* %39, align 8
  %41 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %31, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %31, i32 0, i32 1
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"* %28, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %41, i8* dereferenceable(1) %42)
  %43 = bitcast %"struct.std::pair"* %28 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %44 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %43, align 8
  store { %"struct.std::_Rb_tree_node_base"*, i8 } %44, { %"struct.std::_Rb_tree_node_base"*, i8 }* %3
  %45 = load i32, i32* @x.125
  %46 = load i32, i32* @y.126
  %47 = sub i32 %45, 1217450644
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1217450644
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 281462217, i32 829956594
  store i32 %59, i32* %15
  br label %80

; <label>:60:                                     ; preds = %16
  %61 = load volatile { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %3
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::pair", align 8
  %64 = alloca %"class.std::set.23"*, align 8
  %65 = alloca i64*, align 8
  %66 = alloca %"struct.std::pair.56", align 8
  store %"class.std::set.23"* %0, %"class.std::set.23"** %64, align 8
  store i64* %1, i64** %65, align 8
  %67 = load %"class.std::set.23"*, %"class.std::set.23"** %64, align 8
  %68 = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %67, i32 0, i32 0
  %69 = load i64*, i64** %65, align 8
  %70 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree.24"* %68, i64* dereferenceable(8) %69)
  %71 = bitcast %"struct.std::pair.56"* %66 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %72 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %71, i32 0, i32 0
  %73 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %70, 0
  store %"struct.std::_Rb_tree_node_base"* %73, %"struct.std::_Rb_tree_node_base"** %72, align 8
  %74 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %71, i32 0, i32 1
  %75 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %70, 1
  store i8 %75, i8* %74, align 8
  %76 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %66, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %66, i32 0, i32 1
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"* %63, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %76, i8* dereferenceable(1) %77)
  %78 = bitcast %"struct.std::pair"* %63 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %79 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %78, align 8
  store i32 1796577317, i32* %15
  br label %80

; <label>:80:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixEOx(%"class.std::map.28"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::map.28"*
  %6 = alloca %"class.std::tuple.60"*
  %7 = alloca %"class.std::tuple"*
  %8 = alloca %"struct.std::_Rb_tree_const_iterator.59"*
  %9 = alloca %"struct.std::_Rb_tree_iterator.58"*
  %10 = alloca %"struct.std::less"*
  %11 = alloca %"struct.std::_Rb_tree_iterator.58"*
  %12 = alloca i64**
  %13 = alloca i1
  %14 = alloca i1
  %15 = load i32, i32* @x.127
  %16 = load i32, i32* @y.128
  %17 = sub i32 %15, 1278858841
  %18 = sub i32 %17, 1
  %19 = add i32 %18, 1278858841
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  store i1 %23, i1* %14
  %24 = icmp slt i32 %16, 10
  store i1 %24, i1* %13
  %25 = alloca i32
  store i32 -2072517704, i32* %25
  %26 = alloca i1
  br label %27

; <label>:27:                                     ; preds = %2, %183
  %28 = load i32, i32* %25
  switch i32 %28, label %29 [
    i32 -2072517704, label %30
    i32 1496249402, label %50
    i32 -1497642839, label %88
    i32 -524704241, label %91
    i32 -1119269327, label %100
    i32 -1416217755, label %117
    i32 -190281216, label %133
    i32 -216032854, label %136
    i32 -1059284569, label %161
    i32 286376123, label %165
    i32 -1517269346, label %182
  ]

; <label>:29:                                     ; preds = %27
  br label %183

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %14
  %32 = load volatile i1, i1* %13
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 1496249402, i32 286376123
  store i32 %49, i32* %25
  br label %183

; <label>:50:                                     ; preds = %27
  %51 = alloca %"class.std::map.28"*, align 8
  %52 = alloca i64*, align 8
  store i64** %52, i64*** %12
  %53 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  store %"struct.std::_Rb_tree_iterator.58"* %53, %"struct.std::_Rb_tree_iterator.58"** %11
  %54 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %55 = alloca %"struct.std::less", align 1
  store %"struct.std::less"* %55, %"struct.std::less"** %10
  %56 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  store %"struct.std::_Rb_tree_iterator.58"* %56, %"struct.std::_Rb_tree_iterator.58"** %9
  %57 = alloca %"struct.std::_Rb_tree_const_iterator.59", align 8
  store %"struct.std::_Rb_tree_const_iterator.59"* %57, %"struct.std::_Rb_tree_const_iterator.59"** %8
  %58 = alloca %"class.std::tuple", align 8
  store %"class.std::tuple"* %58, %"class.std::tuple"** %7
  %59 = alloca %"class.std::tuple.60", align 1
  store %"class.std::tuple.60"* %59, %"class.std::tuple.60"** %6
  store %"class.std::map.28"* %0, %"class.std::map.28"** %51, align 8
  %60 = load volatile i64**, i64*** %12
  store i64* %1, i64** %60, align 8
  %61 = load %"class.std::map.28"*, %"class.std::map.28"** %51, align 8
  store %"class.std::map.28"* %61, %"class.std::map.28"** %5
  %62 = load volatile i64**, i64*** %12
  %63 = load i64*, i64** %62, align 8
  %64 = load volatile %"class.std::map.28"*, %"class.std::map.28"** %5
  %65 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_(%"class.std::map.28"* %64, i64* dereferenceable(8) %63)
  %66 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %66, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %65, %"struct.std::_Rb_tree_node_base"** %67, align 8
  %68 = load volatile %"class.std::map.28"*, %"class.std::map.28"** %5
  %69 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv(%"class.std::map.28"* %68) #3
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %54, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %69, %"struct.std::_Rb_tree_node_base"** %70, align 8
  %71 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  %72 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.58"* %71, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8) %54) #3
  store i1 %72, i1* %4
  %73 = load i32, i32* @x.127
  %74 = load i32, i32* @y.128
  %75 = add i32 %73, -2022789424
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -2022789424
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 -1497642839, i32 286376123
  store i32 %87, i32* %25
  br label %183

; <label>:88:                                     ; preds = %27
  %89 = load volatile i1, i1* %4
  %90 = select i1 %89, i32 -1119269327, i32 -524704241
  store i32 %90, i32* %25
  store i1 true, i1* %26
  br label %183

; <label>:91:                                     ; preds = %27
  %92 = load volatile %"class.std::map.28"*, %"class.std::map.28"** %5
  call void @_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv(%"class.std::map.28"* %92)
  %93 = load volatile i64**, i64*** %12
  %94 = load i64*, i64** %93, align 8
  %95 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  %96 = call dereferenceable(16) %"struct.std::pair.49"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.58"* %95) #3
  %97 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %96, i32 0, i32 0
  %98 = load volatile %"struct.std::less"*, %"struct.std::less"** %10
  %99 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %98, i64* dereferenceable(8) %94, i64* dereferenceable(8) %97)
  store i32 -1119269327, i32* %25
  store i1 %99, i1* %26
  br label %183

; <label>:100:                                    ; preds = %27
  %101 = load i1, i1* %26
  store i1 %101, i1* %3
  %102 = load i32, i32* @x.127
  %103 = load i32, i32* @y.128
  %104 = sub i32 %102, 1038366273
  %105 = sub i32 %104, 1
  %106 = add i32 %105, 1038366273
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 -1416217755, i32 -1517269346
  store i32 %116, i32* %25
  br label %183

; <label>:117:                                    ; preds = %27
  %118 = load i32, i32* @x.127
  %119 = load i32, i32* @y.128
  %120 = add i32 %118, -1676535543
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, -1676535543
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 -190281216, i32 -1517269346
  store i32 %132, i32* %25
  br label %183

; <label>:133:                                    ; preds = %27
  %134 = load volatile i1, i1* %3
  %135 = select i1 %134, i32 -216032854, i32 -1059284569
  store i32 %135, i32* %25
  br label %183

; <label>:136:                                    ; preds = %27
  %137 = load volatile %"class.std::map.28"*, %"class.std::map.28"** %5
  %138 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %137, i32 0, i32 0
  %139 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  %140 = load volatile %"struct.std::_Rb_tree_const_iterator.59"*, %"struct.std::_Rb_tree_const_iterator.59"** %8
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator.59"* %140, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8) %139) #3
  %141 = load volatile i64**, i64*** %12
  %142 = load i64*, i64** %141, align 8
  %143 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %142) #3
  %144 = call i64* @_ZSt16forward_as_tupleIJxEESt5tupleIJDpOT_EES3_(i64* dereferenceable(8) %143) #3
  %145 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %7
  %146 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %146, i32 0, i32 0
  %148 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %147, i32 0, i32 0
  store i64* %144, i64** %148, align 8
  %149 = load volatile %"struct.std::_Rb_tree_const_iterator.59"*, %"struct.std::_Rb_tree_const_iterator.59"** %8
  %150 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %149, i32 0, i32 0
  %151 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %150, align 8
  %152 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %7
  %153 = load volatile %"class.std::tuple.60"*, %"class.std::tuple.60"** %6
  %154 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree.29"* %138, %"struct.std::_Rb_tree_node_base"* %151, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %152, %"class.std::tuple.60"* dereferenceable(1) %153)
  %155 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %9
  %156 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %155, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %154, %"struct.std::_Rb_tree_node_base"** %156, align 8
  %157 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  %158 = bitcast %"struct.std::_Rb_tree_iterator.58"* %157 to i8*
  %159 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %9
  %160 = bitcast %"struct.std::_Rb_tree_iterator.58"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %158, i8* %160, i64 8, i32 8, i1 false)
  store i32 -1059284569, i32* %25
  br label %183

; <label>:161:                                    ; preds = %27
  %162 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  %163 = call dereferenceable(16) %"struct.std::pair.49"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.58"* %162) #3
  %164 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %163, i32 0, i32 1
  ret i64* %164

; <label>:165:                                    ; preds = %27
  %166 = alloca %"class.std::map.28"*, align 8
  %167 = alloca i64*, align 8
  %168 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %169 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %170 = alloca %"struct.std::less", align 1
  %171 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %172 = alloca %"struct.std::_Rb_tree_const_iterator.59", align 8
  %173 = alloca %"class.std::tuple", align 8
  %174 = alloca %"class.std::tuple.60", align 1
  store %"class.std::map.28"* %0, %"class.std::map.28"** %166, align 8
  store i64* %1, i64** %167, align 8
  %175 = load %"class.std::map.28"*, %"class.std::map.28"** %166, align 8
  %176 = load i64*, i64** %167, align 8
  %177 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_(%"class.std::map.28"* %175, i64* dereferenceable(8) %176)
  %178 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %168, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %177, %"struct.std::_Rb_tree_node_base"** %178, align 8
  %179 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv(%"class.std::map.28"* %175) #3
  %180 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %169, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %179, %"struct.std::_Rb_tree_node_base"** %180, align 8
  %181 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.58"* %168, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8) %169) #3
  store i32 1496249402, i32* %25
  br label %183

; <label>:182:                                    ; preds = %27
  store i32 -1416217755, i32* %25
  br label %183

; <label>:183:                                    ; preds = %182, %165, %136, %133, %117, %100, %91, %88, %50, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_(%"class.std::map.28"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::map.28"*
  %4 = alloca %"class.std::map.28"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %7 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %8 = alloca %"struct.std::less", align 1
  %9 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator.59", align 8
  %11 = alloca %"class.std::tuple.63", align 8
  %12 = alloca %"class.std::tuple.60", align 1
  store %"class.std::map.28"* %0, %"class.std::map.28"** %4, align 8
  store i64* %1, i64** %5, align 8
  %13 = load %"class.std::map.28"*, %"class.std::map.28"** %4, align 8
  store %"class.std::map.28"* %13, %"class.std::map.28"** %3
  %14 = load i64*, i64** %5, align 8
  %15 = load volatile %"class.std::map.28"*, %"class.std::map.28"** %3
  %16 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_(%"class.std::map.28"* %15, i64* dereferenceable(8) %14)
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %18 = load volatile %"class.std::map.28"*, %"class.std::map.28"** %3
  %19 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv(%"class.std::map.28"* %18) #3
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %19, %"struct.std::_Rb_tree_node_base"** %20, align 8
  %21 = alloca i32
  store i32 436441924, i32* %21
  %22 = alloca i1
  br label %23

; <label>:23:                                     ; preds = %2, %116
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 436441924, label %26
    i32 1111212774, label %29
    i32 -1139260152, label %35
    i32 -817749581, label %38
    i32 2065526807, label %65
    i32 1655900881, label %102
    i32 -592826732, label %103
    i32 -1586857916, label %106
  ]

; <label>:25:                                     ; preds = %23
  br label %116

; <label>:26:                                     ; preds = %23
  %27 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.58"* %6, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8) %7) #3
  %28 = select i1 %27, i32 -1139260152, i32 1111212774
  store i32 %28, i32* %21
  store i1 true, i1* %22
  br label %116

; <label>:29:                                     ; preds = %23
  %30 = load volatile %"class.std::map.28"*, %"class.std::map.28"** %3
  call void @_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv(%"class.std::map.28"* %30)
  %31 = load i64*, i64** %5, align 8
  %32 = call dereferenceable(16) %"struct.std::pair.49"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.58"* %6) #3
  %33 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %32, i32 0, i32 0
  %34 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %8, i64* dereferenceable(8) %31, i64* dereferenceable(8) %33)
  store i32 -1139260152, i32* %21
  store i1 %34, i1* %22
  br label %116

; <label>:35:                                     ; preds = %23
  %36 = load i1, i1* %22
  %37 = select i1 %36, i32 -817749581, i32 -592826732
  store i32 %37, i32* %21
  br label %116

; <label>:38:                                     ; preds = %23
  %39 = load i32, i32* @x.129
  %40 = load i32, i32* @y.130
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 2065526807, i32 -1586857916
  store i32 %64, i32* %21
  br label %116

; <label>:65:                                     ; preds = %23
  %66 = load volatile %"class.std::map.28"*, %"class.std::map.28"** %3
  %67 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %66, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator.59"* %10, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8) %6) #3
  %68 = load i64*, i64** %5, align 8
  call void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple.63"* %11, i64* dereferenceable(8) %68)
  %69 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %10, i32 0, i32 0
  %70 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %69, align 8
  %71 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree.29"* %67, %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.63"* dereferenceable(8) %11, %"class.std::tuple.60"* dereferenceable(1) %12)
  %72 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %71, %"struct.std::_Rb_tree_node_base"** %72, align 8
  %73 = bitcast %"struct.std::_Rb_tree_iterator.58"* %6 to i8*
  %74 = bitcast %"struct.std::_Rb_tree_iterator.58"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = load i32, i32* @x.129
  %76 = load i32, i32* @y.130
  %77 = sub i32 %75, -1405145819
  %78 = sub i32 %77, 1
  %79 = add i32 %78, -1405145819
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 1655900881, i32 -1586857916
  store i32 %101, i32* %21
  br label %116

; <label>:102:                                    ; preds = %23
  store i32 -592826732, i32* %21
  br label %116

; <label>:103:                                    ; preds = %23
  %104 = call dereferenceable(16) %"struct.std::pair.49"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.58"* %6) #3
  %105 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %104, i32 0, i32 1
  ret i64* %105

; <label>:106:                                    ; preds = %23
  %107 = load volatile %"class.std::map.28"*, %"class.std::map.28"** %3
  %108 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %107, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator.59"* %10, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8) %6) #3
  %109 = load i64*, i64** %5, align 8
  call void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple.63"* %11, i64* dereferenceable(8) %109)
  %110 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %10, i32 0, i32 0
  %111 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %110, align 8
  %112 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree.29"* %108, %"struct.std::_Rb_tree_node_base"* %111, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.63"* dereferenceable(8) %11, %"class.std::tuple.60"* dereferenceable(1) %12)
  %113 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %112, %"struct.std::_Rb_tree_node_base"** %113, align 8
  %114 = bitcast %"struct.std::_Rb_tree_iterator.58"* %6 to i8*
  %115 = bitcast %"struct.std::_Rb_tree_iterator.58"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 8, i32 8, i1 false)
  store i32 2065526807, i32* %21
  br label %116

; <label>:116:                                    ; preds = %106, %102, %65, %38, %35, %29, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %"class.std::set.23"* @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEEixERS6_(%"class.std::map"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::map"*
  %5 = alloca %"class.std::tuple.60"*
  %6 = alloca %"class.std::tuple.63"*
  %7 = alloca %"struct.std::_Rb_tree_const_iterator.67"*
  %8 = alloca %"struct.std::_Rb_tree_iterator.66"*
  %9 = alloca %"struct.std::less"*
  %10 = alloca %"struct.std::_Rb_tree_iterator.66"*
  %11 = alloca i64**
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.131
  %15 = load i32, i32* @y.132
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %13
  %22 = icmp slt i32 %15, 10
  store i1 %22, i1* %12
  %23 = alloca i32
  store i32 1467130583, i32* %23
  %24 = alloca i1
  br label %25

; <label>:25:                                     ; preds = %2, %141
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 1467130583, label %28
    i32 -1178568946, label %36
    i32 -1400229900, label %85
    i32 475698161, label %88
    i32 -1547019730, label %97
    i32 -1568671096, label %100
    i32 -999298472, label %120
    i32 1821629502, label %124
  ]

; <label>:27:                                     ; preds = %25
  br label %141

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -1178568946, i32 1821629502
  store i32 %35, i32* %23
  br label %141

; <label>:36:                                     ; preds = %25
  %37 = alloca %"class.std::map"*, align 8
  %38 = alloca i64*, align 8
  store i64** %38, i64*** %11
  %39 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  store %"struct.std::_Rb_tree_iterator.66"* %39, %"struct.std::_Rb_tree_iterator.66"** %10
  %40 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %41 = alloca %"struct.std::less", align 1
  store %"struct.std::less"* %41, %"struct.std::less"** %9
  %42 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  store %"struct.std::_Rb_tree_iterator.66"* %42, %"struct.std::_Rb_tree_iterator.66"** %8
  %43 = alloca %"struct.std::_Rb_tree_const_iterator.67", align 8
  store %"struct.std::_Rb_tree_const_iterator.67"* %43, %"struct.std::_Rb_tree_const_iterator.67"** %7
  %44 = alloca %"class.std::tuple.63", align 8
  store %"class.std::tuple.63"* %44, %"class.std::tuple.63"** %6
  %45 = alloca %"class.std::tuple.60", align 1
  store %"class.std::tuple.60"* %45, %"class.std::tuple.60"** %5
  store %"class.std::map"* %0, %"class.std::map"** %37, align 8
  %46 = load volatile i64**, i64*** %11
  store i64* %1, i64** %46, align 8
  %47 = load %"class.std::map"*, %"class.std::map"** %37, align 8
  store %"class.std::map"* %47, %"class.std::map"** %4
  %48 = load volatile i64**, i64*** %11
  %49 = load i64*, i64** %48, align 8
  %50 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %51 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE11lower_boundERS6_(%"class.std::map"* %50, i64* dereferenceable(8) %49)
  %52 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %10
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %52, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %51, %"struct.std::_Rb_tree_node_base"** %53, align 8
  %54 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %55 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE3endEv(%"class.std::map"* %54) #3
  %56 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %40, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %55, %"struct.std::_Rb_tree_node_base"** %56, align 8
  %57 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %10
  %58 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEeqERKS8_(%"struct.std::_Rb_tree_iterator.66"* %57, %"struct.std::_Rb_tree_iterator.66"* dereferenceable(8) %40) #3
  store i1 %58, i1* %3
  %59 = load i32, i32* @x.131
  %60 = load i32, i32* @y.132
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1400229900, i32 1821629502
  store i32 %84, i32* %23
  br label %141

; <label>:85:                                     ; preds = %25
  %86 = load volatile i1, i1* %3
  %87 = select i1 %86, i32 -1547019730, i32 475698161
  store i32 %87, i32* %23
  store i1 true, i1* %24
  br label %141

; <label>:88:                                     ; preds = %25
  %89 = load volatile %"class.std::map"*, %"class.std::map"** %4
  call void @_ZNKSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE8key_compEv(%"class.std::map"* %89)
  %90 = load volatile i64**, i64*** %11
  %91 = load i64*, i64** %90, align 8
  %92 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %10
  %93 = call dereferenceable(56) %"struct.std::pair.43"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEdeEv(%"struct.std::_Rb_tree_iterator.66"* %92) #3
  %94 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %93, i32 0, i32 0
  %95 = load volatile %"struct.std::less"*, %"struct.std::less"** %9
  %96 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %95, i64* dereferenceable(8) %91, i64* dereferenceable(8) %94)
  store i32 -1547019730, i32* %23
  store i1 %96, i1* %24
  br label %141

; <label>:97:                                     ; preds = %25
  %98 = load i1, i1* %24
  %99 = select i1 %98, i32 -1568671096, i32 -999298472
  store i32 %99, i32* %23
  br label %141

; <label>:100:                                    ; preds = %25
  %101 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %102 = getelementptr inbounds %"class.std::map", %"class.std::map"* %101, i32 0, i32 0
  %103 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %10
  %104 = load volatile %"struct.std::_Rb_tree_const_iterator.67"*, %"struct.std::_Rb_tree_const_iterator.67"** %7
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2ERKSt17_Rb_tree_iteratorIS7_E(%"struct.std::_Rb_tree_const_iterator.67"* %104, %"struct.std::_Rb_tree_iterator.66"* dereferenceable(8) %103) #3
  %105 = load volatile i64**, i64*** %11
  %106 = load i64*, i64** %105, align 8
  %107 = load volatile %"class.std::tuple.63"*, %"class.std::tuple.63"** %6
  call void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple.63"* %107, i64* dereferenceable(8) %106)
  %108 = load volatile %"struct.std::_Rb_tree_const_iterator.67"*, %"struct.std::_Rb_tree_const_iterator.67"** %7
  %109 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.67", %"struct.std::_Rb_tree_const_iterator.67"* %108, i32 0, i32 0
  %110 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %109, align 8
  %111 = load volatile %"class.std::tuple.63"*, %"class.std::tuple.63"** %6
  %112 = load volatile %"class.std::tuple.60"*, %"class.std::tuple.60"** %5
  %113 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEESt17_Rb_tree_iteratorIS7_ESt23_Rb_tree_const_iteratorIS7_EDpOT_(%"class.std::_Rb_tree"* %102, %"struct.std::_Rb_tree_node_base"* %110, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.63"* dereferenceable(8) %111, %"class.std::tuple.60"* dereferenceable(1) %112)
  %114 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %8
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %114, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %113, %"struct.std::_Rb_tree_node_base"** %115, align 8
  %116 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %10
  %117 = bitcast %"struct.std::_Rb_tree_iterator.66"* %116 to i8*
  %118 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %8
  %119 = bitcast %"struct.std::_Rb_tree_iterator.66"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %117, i8* %119, i64 8, i32 8, i1 false)
  store i32 -999298472, i32* %23
  br label %141

; <label>:120:                                    ; preds = %25
  %121 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %10
  %122 = call dereferenceable(56) %"struct.std::pair.43"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEdeEv(%"struct.std::_Rb_tree_iterator.66"* %121) #3
  %123 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %122, i32 0, i32 1
  ret %"class.std::set.23"* %123

; <label>:124:                                    ; preds = %25
  %125 = alloca %"class.std::map"*, align 8
  %126 = alloca i64*, align 8
  %127 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %128 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %129 = alloca %"struct.std::less", align 1
  %130 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %131 = alloca %"struct.std::_Rb_tree_const_iterator.67", align 8
  %132 = alloca %"class.std::tuple.63", align 8
  %133 = alloca %"class.std::tuple.60", align 1
  store %"class.std::map"* %0, %"class.std::map"** %125, align 8
  store i64* %1, i64** %126, align 8
  %134 = load %"class.std::map"*, %"class.std::map"** %125, align 8
  %135 = load i64*, i64** %126, align 8
  %136 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE11lower_boundERS6_(%"class.std::map"* %134, i64* dereferenceable(8) %135)
  %137 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %127, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %136, %"struct.std::_Rb_tree_node_base"** %137, align 8
  %138 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE3endEv(%"class.std::map"* %134) #3
  %139 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %128, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %138, %"struct.std::_Rb_tree_node_base"** %139, align 8
  %140 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEeqERKS8_(%"struct.std::_Rb_tree_iterator.66"* %127, %"struct.std::_Rb_tree_iterator.66"* dereferenceable(8) %128) #3
  store i32 -1178568946, i32* %23
  br label %141

; <label>:141:                                    ; preds = %124, %100, %97, %88, %85, %36, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %"class.std::set.23"* @_ZNSt3setIxSt4lessIxESaIxEEaSERKS3_(%"class.std::set.23"*, %"class.std::set.23"* dereferenceable(48)) #0 comdat align 2 {
  %3 = alloca %"class.std::set.23"*, align 8
  %4 = alloca %"class.std::set.23"*, align 8
  store %"class.std::set.23"* %0, %"class.std::set.23"** %3, align 8
  store %"class.std::set.23"* %1, %"class.std::set.23"** %4, align 8
  %5 = load %"class.std::set.23"*, %"class.std::set.23"** %3, align 8
  %6 = load %"class.std::set.23"*, %"class.std::set.23"** %4, align 8
  %7 = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %5, i32 0, i32 0
  %9 = call dereferenceable(48) %"class.std::_Rb_tree.24"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEaSERKS5_(%"class.std::_Rb_tree.24"* %8, %"class.std::_Rb_tree.24"* dereferenceable(48) %7)
  ret %"class.std::set.23"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %"class.std::map.28"* @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEEixERS3_(%"class.std::map.18"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::map.18"*
  %5 = alloca %"class.std::tuple.60"*
  %6 = alloca %"class.std::tuple.63"*
  %7 = alloca %"struct.std::_Rb_tree_const_iterator.71"*
  %8 = alloca %"struct.std::_Rb_tree_iterator.70"*
  %9 = alloca %"struct.std::less"*
  %10 = alloca %"struct.std::_Rb_tree_iterator.70"*
  %11 = alloca i64**
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.135
  %15 = load i32, i32* @y.136
  %16 = add i32 %14, 463510822
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 463510822
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 1909897273, i32* %24
  %25 = alloca i1
  br label %26

; <label>:26:                                     ; preds = %2, %142
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 1909897273, label %29
    i32 -284408642, label %37
    i32 105615398, label %86
    i32 265168321, label %89
    i32 1189930662, label %98
    i32 793721517, label %101
    i32 77431366, label %121
    i32 -866664610, label %125
  ]

; <label>:28:                                     ; preds = %26
  br label %142

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %13
  %31 = load volatile i1, i1* %12
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -284408642, i32 -866664610
  store i32 %36, i32* %24
  br label %142

; <label>:37:                                     ; preds = %26
  %38 = alloca %"class.std::map.18"*, align 8
  %39 = alloca i64*, align 8
  store i64** %39, i64*** %11
  %40 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  store %"struct.std::_Rb_tree_iterator.70"* %40, %"struct.std::_Rb_tree_iterator.70"** %10
  %41 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %42 = alloca %"struct.std::less", align 1
  store %"struct.std::less"* %42, %"struct.std::less"** %9
  %43 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  store %"struct.std::_Rb_tree_iterator.70"* %43, %"struct.std::_Rb_tree_iterator.70"** %8
  %44 = alloca %"struct.std::_Rb_tree_const_iterator.71", align 8
  store %"struct.std::_Rb_tree_const_iterator.71"* %44, %"struct.std::_Rb_tree_const_iterator.71"** %7
  %45 = alloca %"class.std::tuple.63", align 8
  store %"class.std::tuple.63"* %45, %"class.std::tuple.63"** %6
  %46 = alloca %"class.std::tuple.60", align 1
  store %"class.std::tuple.60"* %46, %"class.std::tuple.60"** %5
  store %"class.std::map.18"* %0, %"class.std::map.18"** %38, align 8
  %47 = load volatile i64**, i64*** %11
  store i64* %1, i64** %47, align 8
  %48 = load %"class.std::map.18"*, %"class.std::map.18"** %38, align 8
  store %"class.std::map.18"* %48, %"class.std::map.18"** %4
  %49 = load volatile i64**, i64*** %11
  %50 = load i64*, i64** %49, align 8
  %51 = load volatile %"class.std::map.18"*, %"class.std::map.18"** %4
  %52 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE11lower_boundERS3_(%"class.std::map.18"* %51, i64* dereferenceable(8) %50)
  %53 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  %54 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %53, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %52, %"struct.std::_Rb_tree_node_base"** %54, align 8
  %55 = load volatile %"class.std::map.18"*, %"class.std::map.18"** %4
  %56 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE3endEv(%"class.std::map.18"* %55) #3
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %41, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %56, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %58 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  %59 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEeqERKS9_(%"struct.std::_Rb_tree_iterator.70"* %58, %"struct.std::_Rb_tree_iterator.70"* dereferenceable(8) %41) #3
  store i1 %59, i1* %3
  %60 = load i32, i32* @x.135
  %61 = load i32, i32* @y.136
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 105615398, i32 -866664610
  store i32 %85, i32* %24
  br label %142

; <label>:86:                                     ; preds = %26
  %87 = load volatile i1, i1* %3
  %88 = select i1 %87, i32 1189930662, i32 265168321
  store i32 %88, i32* %24
  store i1 true, i1* %25
  br label %142

; <label>:89:                                     ; preds = %26
  %90 = load volatile %"class.std::map.18"*, %"class.std::map.18"** %4
  call void @_ZNKSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE8key_compEv(%"class.std::map.18"* %90)
  %91 = load volatile i64**, i64*** %11
  %92 = load i64*, i64** %91, align 8
  %93 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  %94 = call dereferenceable(56) %"struct.std::pair.46"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEdeEv(%"struct.std::_Rb_tree_iterator.70"* %93) #3
  %95 = getelementptr inbounds %"struct.std::pair.46", %"struct.std::pair.46"* %94, i32 0, i32 0
  %96 = load volatile %"struct.std::less"*, %"struct.std::less"** %9
  %97 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %96, i64* dereferenceable(8) %92, i64* dereferenceable(8) %95)
  store i32 1189930662, i32* %24
  store i1 %97, i1* %25
  br label %142

; <label>:98:                                     ; preds = %26
  %99 = load i1, i1* %25
  %100 = select i1 %99, i32 793721517, i32 77431366
  store i32 %100, i32* %24
  br label %142

; <label>:101:                                    ; preds = %26
  %102 = load volatile %"class.std::map.18"*, %"class.std::map.18"** %4
  %103 = getelementptr inbounds %"class.std::map.18", %"class.std::map.18"* %102, i32 0, i32 0
  %104 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  %105 = load volatile %"struct.std::_Rb_tree_const_iterator.71"*, %"struct.std::_Rb_tree_const_iterator.71"** %7
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E(%"struct.std::_Rb_tree_const_iterator.71"* %105, %"struct.std::_Rb_tree_iterator.70"* dereferenceable(8) %104) #3
  %106 = load volatile i64**, i64*** %11
  %107 = load i64*, i64** %106, align 8
  %108 = load volatile %"class.std::tuple.63"*, %"class.std::tuple.63"** %6
  call void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple.63"* %108, i64* dereferenceable(8) %107)
  %109 = load volatile %"struct.std::_Rb_tree_const_iterator.71"*, %"struct.std::_Rb_tree_const_iterator.71"** %7
  %110 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.71", %"struct.std::_Rb_tree_const_iterator.71"* %109, i32 0, i32 0
  %111 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %110, align 8
  %112 = load volatile %"class.std::tuple.63"*, %"class.std::tuple.63"** %6
  %113 = load volatile %"class.std::tuple.60"*, %"class.std::tuple.60"** %5
  %114 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESH_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_(%"class.std::_Rb_tree.19"* %103, %"struct.std::_Rb_tree_node_base"* %111, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple.63"* dereferenceable(8) %112, %"class.std::tuple.60"* dereferenceable(1) %113)
  %115 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %8
  %116 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %115, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %114, %"struct.std::_Rb_tree_node_base"** %116, align 8
  %117 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  %118 = bitcast %"struct.std::_Rb_tree_iterator.70"* %117 to i8*
  %119 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %8
  %120 = bitcast %"struct.std::_Rb_tree_iterator.70"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %120, i64 8, i32 8, i1 false)
  store i32 77431366, i32* %24
  br label %142

; <label>:121:                                    ; preds = %26
  %122 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  %123 = call dereferenceable(56) %"struct.std::pair.46"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEdeEv(%"struct.std::_Rb_tree_iterator.70"* %122) #3
  %124 = getelementptr inbounds %"struct.std::pair.46", %"struct.std::pair.46"* %123, i32 0, i32 1
  ret %"class.std::map.28"* %124

; <label>:125:                                    ; preds = %26
  %126 = alloca %"class.std::map.18"*, align 8
  %127 = alloca i64*, align 8
  %128 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %129 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %130 = alloca %"struct.std::less", align 1
  %131 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %132 = alloca %"struct.std::_Rb_tree_const_iterator.71", align 8
  %133 = alloca %"class.std::tuple.63", align 8
  %134 = alloca %"class.std::tuple.60", align 1
  store %"class.std::map.18"* %0, %"class.std::map.18"** %126, align 8
  store i64* %1, i64** %127, align 8
  %135 = load %"class.std::map.18"*, %"class.std::map.18"** %126, align 8
  %136 = load i64*, i64** %127, align 8
  %137 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE11lower_boundERS3_(%"class.std::map.18"* %135, i64* dereferenceable(8) %136)
  %138 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %128, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %137, %"struct.std::_Rb_tree_node_base"** %138, align 8
  %139 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE3endEv(%"class.std::map.18"* %135) #3
  %140 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %129, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %139, %"struct.std::_Rb_tree_node_base"** %140, align 8
  %141 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEeqERKS9_(%"struct.std::_Rb_tree_iterator.70"* %128, %"struct.std::_Rb_tree_iterator.70"* dereferenceable(8) %129) #3
  store i32 -284408642, i32* %24
  br label %142

; <label>:142:                                    ; preds = %125, %101, %98, %89, %86, %37, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %"class.std::map.28"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEaSERKS6_(%"class.std::map.28"*, %"class.std::map.28"* dereferenceable(48)) #0 comdat align 2 {
  %3 = alloca %"class.std::map.28"*, align 8
  %4 = alloca %"class.std::map.28"*, align 8
  store %"class.std::map.28"* %0, %"class.std::map.28"** %3, align 8
  store %"class.std::map.28"* %1, %"class.std::map.28"** %4, align 8
  %5 = load %"class.std::map.28"*, %"class.std::map.28"** %3, align 8
  %6 = load %"class.std::map.28"*, %"class.std::map.28"** %4, align 8
  %7 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %5, i32 0, i32 0
  %9 = call dereferenceable(48) %"class.std::_Rb_tree.29"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEaSERKS8_(%"class.std::_Rb_tree.29"* %8, %"class.std::_Rb_tree.29"* dereferenceable(48) %7)
  ret %"class.std::map.28"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev(%"class.std::map.28"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::map.28"*, align 8
  store %"class.std::map.28"* %0, %"class.std::map.28"** %2, align 8
  %3 = load %"class.std::map.28"*, %"class.std::map.28"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev(%"class.std::_Rb_tree.29"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set.23"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::set.23"*, align 8
  store %"class.std::set.23"* %0, %"class.std::set.23"** %2, align 8
  %3 = load %"class.std::set.23"*, %"class.std::set.23"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree.24"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z5solvev() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector.6", align 8
  %6 = alloca %"class.std::allocator.8", align 1
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %1)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %13, i32* dereferenceable(4) %2)
  %15 = load i32, i32* %2, align 4
  %16 = zext i32 %15 to i64
  %17 = call i8* @llvm.stacksave()
  store i8* %17, i8** %3, align 8
  %18 = alloca i64, i64 %16, align 16
  %19 = load i32, i32* %2, align 4
  %20 = zext i32 %19 to i64
  %21 = alloca i64, i64 %20, align 16
  store i32 0, i32* %4, align 4
  br label %22

; <label>:22:                                     ; preds = %35, %0
  %23 = load i32, i32* %4, align 4
  %24 = load i32, i32* %2, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %40

; <label>:26:                                     ; preds = %22
  %27 = load i32, i32* %4, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i64, i64* %18, i64 %28
  %30 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %29)
  %31 = load i32, i32* %4, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i64, i64* %21, i64 %32
  %34 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %30, i64* dereferenceable(8) %33)
  br label %35

; <label>:35:                                     ; preds = %26
  %36 = load i32, i32* %4, align 4
  %37 = sub i32 0, 1
  %38 = sub i32 %36, %37
  %39 = add nsw i32 %36, 1
  store i32 %38, i32* %4, align 4
  br label %22

; <label>:40:                                     ; preds = %22
  %41 = load i32, i32* @x.143
  %42 = load i32, i32* @y.144
  %43 = sub i32 %41, 883523730
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 883523730
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %238

; <label>:55:                                     ; preds = %40, %238
  %56 = load i32, i32* %1, align 4
  %57 = sub i32 %56, -236163711
  %58 = add i32 %57, 1
  %59 = add i32 %58, -236163711
  %60 = add nsw i32 %56, 1
  %61 = sext i32 %59 to i64
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.8"* %6) #3
  %62 = load i32, i32* @x.143
  %63 = load i32, i32* @y.144
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %238

; <label>:75:                                     ; preds = %55
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.6"* %5, i64 %61, i64* dereferenceable(8) @_ZL5INF_L, %"class.std::allocator.8"* dereferenceable(1) %6)
          to label %76 unwind label %128

; <label>:76:                                     ; preds = %75
  call void @_ZNSaIxED2Ev(%"class.std::allocator.8"* %6) #3
  %77 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* %5, i64 0) #3
  store i64 0, i64* %77, align 8
  store i32 0, i32* %9, align 4
  br label %78

; <label>:78:                                     ; preds = %217, %76
  %79 = load i32, i32* %9, align 4
  %80 = load i32, i32* %1, align 4
  %81 = sub i32 0, 1
  %82 = sub i32 %80, %81
  %83 = add nsw i32 %80, 1
  %84 = icmp slt i32 %79, %82
  br i1 %84, label %85, label %223

; <label>:85:                                     ; preds = %78
  store i32 0, i32* %10, align 4
  br label %86

; <label>:86:                                     ; preds = %121, %85
  %87 = load i32, i32* %10, align 4
  %88 = load i32, i32* %2, align 4
  %89 = icmp slt i32 %87, %88
  br i1 %89, label %90, label %176

; <label>:90:                                     ; preds = %86
  %91 = load i32, i32* %9, align 4
  %92 = sext i32 %91 to i64
  %93 = load i32, i32* %10, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i64, i64* %18, i64 %94
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %92, 7740659039523047060
  %98 = add i64 %97, %96
  %99 = sub i64 %98, 7740659039523047060
  %100 = add nsw i64 %92, %96
  store i64 %99, i64* %11, align 8
  %101 = load i32, i32* %1, align 4
  %102 = sext i32 %101 to i64
  store i64 %102, i64* %12, align 8
  %103 = invoke dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %12)
          to label %104 unwind label %132

; <label>:104:                                    ; preds = %90
  %105 = load i64, i64* %103, align 8
  %106 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* %5, i64 %105) #3
  %107 = load i32, i32* %9, align 4
  %108 = sext i32 %107 to i64
  %109 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* %5, i64 %108) #3
  %110 = load i64, i64* %109, align 8
  %111 = load i32, i32* %10, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i64, i64* %21, i64 %112
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 %110, -3199947968429688987
  %116 = add i64 %115, %114
  %117 = add i64 %116, -3199947968429688987
  %118 = add nsw i64 %110, %114
  %119 = invoke zeroext i1 @_Z5chminIxEbRT_S0_(i64* dereferenceable(8) %106, i64 %117)
          to label %120 unwind label %132

; <label>:120:                                    ; preds = %104
  br label %121

; <label>:121:                                    ; preds = %120
  %122 = load i32, i32* %10, align 4
  %123 = sub i32 0, %122
  %124 = sub i32 0, 1
  %125 = add i32 %123, %124
  %126 = sub i32 0, %125
  %127 = add nsw i32 %122, 1
  store i32 %126, i32* %10, align 4
  br label %86

; <label>:128:                                    ; preds = %75
  %129 = landingpad { i8*, i32 }
          cleanup
  %130 = extractvalue { i8*, i32 } %129, 0
  store i8* %130, i8** %7, align 8
  %131 = extractvalue { i8*, i32 } %129, 1
  store i32 %131, i32* %8, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.8"* %6) #3
  br label %233

; <label>:132:                                    ; preds = %229, %223, %104, %90
  %133 = load i32, i32* @x.143
  %134 = load i32, i32* @y.144
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %251

; <label>:158:                                    ; preds = %132, %251
  %159 = landingpad { i8*, i32 }
          cleanup
  %160 = extractvalue { i8*, i32 } %159, 0
  store i8* %160, i8** %7, align 8
  %161 = extractvalue { i8*, i32 } %159, 1
  store i32 %161, i32* %8, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.6"* %5) #3
  %162 = load i32, i32* @x.143
  %163 = load i32, i32* @y.144
  %164 = sub i32 0, 1
  %165 = add i32 %162, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 %162, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %163, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %251

; <label>:175:                                    ; preds = %158
  br label %233

; <label>:176:                                    ; preds = %86
  %177 = load i32, i32* @x.143
  %178 = load i32, i32* @y.144
  %179 = sub i32 0, 1
  %180 = add i32 %177, %179
  %181 = sub i32 %177, 1
  %182 = mul i32 %177, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %178, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  br i1 %188, label %190, label %255

; <label>:190:                                    ; preds = %176, %255
  %191 = load i32, i32* @x.143
  %192 = load i32, i32* @y.144
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 true, true
  %203 = and i1 %200, true
  %204 = and i1 %198, %202
  %205 = and i1 %201, true
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 true, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  br i1 %214, label %216, label %255

; <label>:216:                                    ; preds = %190
  br label %217

; <label>:217:                                    ; preds = %216
  %218 = load i32, i32* %9, align 4
  %219 = add i32 %218, 1592632715
  %220 = add i32 %219, 1
  %221 = sub i32 %220, 1592632715
  %222 = add nsw i32 %218, 1
  store i32 %221, i32* %9, align 4
  br label %78

; <label>:223:                                    ; preds = %78
  %224 = load i32, i32* %1, align 4
  %225 = sext i32 %224 to i64
  %226 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.6"* %5, i64 %225) #3
  %227 = load i64, i64* %226, align 8
  %228 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %227)
          to label %229 unwind label %132

; <label>:229:                                    ; preds = %223
  %230 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %228, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %231 unwind label %132

; <label>:231:                                    ; preds = %229
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.6"* %5) #3
  %232 = load i8*, i8** %3, align 8
  call void @llvm.stackrestore(i8* %232)
  ret void

; <label>:233:                                    ; preds = %175, %128
  %234 = load i8*, i8** %7, align 8
  %235 = load i32, i32* %8, align 4
  %236 = insertvalue { i8*, i32 } undef, i8* %234, 0
  %237 = insertvalue { i8*, i32 } %236, i32 %235, 1
  resume { i8*, i32 } %237

; <label>:238:                                    ; preds = %55, %40
  %239 = load i32, i32* %1, align 4
  %240 = shl i32 %239, 1
  %241 = sub i32 %239, -71230819
  %242 = sub i32 %241, 1
  %243 = add i32 %242, -71230819
  %244 = sub i32 %239, 1
  %245 = mul i32 %243, 1
  %246 = add i32 %239, 1292287561
  %247 = add i32 %246, 1
  %248 = sub i32 %247, 1292287561
  %249 = add nsw i32 %239, 1
  %250 = sext i32 %248 to i64
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.8"* %6) #3
  br label %55

; <label>:251:                                    ; preds = %158, %132
  %252 = landingpad { i8*, i32 }
          cleanup
  %253 = extractvalue { i8*, i32 } %252, 0
  store i8* %253, i8** %7, align 8
  %254 = extractvalue { i8*, i32 } %252, 1
  store i32 %254, i32* %8, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.6"* %5) #3
  br label %158

; <label>:255:                                    ; preds = %190, %176
  br label %190
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #3

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.6"*, i64, i64* dereferenceable(8), %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.145
  %6 = load i32, i32* @y.146
  %7 = sub i32 %5, 1850723529
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1850723529
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %111

; <label>:19:                                     ; preds = %4, %111
  %20 = alloca %"class.std::vector.6"*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64*, align 8
  %23 = alloca %"class.std::allocator.8"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %20, align 8
  store i64 %1, i64* %21, align 8
  store i64* %2, i64** %22, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %23, align 8
  %26 = load %"class.std::vector.6"*, %"class.std::vector.6"** %20, align 8
  %27 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  %28 = load i64, i64* %21, align 8
  %29 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %23, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.7"* %27, i64 %28, %"class.std::allocator.8"* dereferenceable(1) %29)
  %30 = load i64, i64* %21, align 8
  %31 = load i64*, i64** %22, align 8
  %32 = load i32, i32* @x.145
  %33 = load i32, i32* @y.146
  %34 = add i32 %32, -408450447
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -408450447
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %111

; <label>:58:                                     ; preds = %19
  invoke void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.6"* %26, i64 %30, i64* dereferenceable(8) %31)
          to label %59 unwind label %60

; <label>:59:                                     ; preds = %58
  ret void

; <label>:60:                                     ; preds = %58
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %24, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %25, align 4
  %64 = bitcast %"class.std::vector.6"* %26 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.7"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i32, i32* @x.145
  %67 = load i32, i32* @y.146
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %124

; <label>:79:                                     ; preds = %65, %124
  %80 = load i8*, i8** %24, align 8
  %81 = load i32, i32* %25, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  %84 = load i32, i32* @x.145
  %85 = load i32, i32* @y.146
  %86 = sub i32 %84, 154314141
  %87 = sub i32 %86, 1
  %88 = add i32 %87, 154314141
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %124

; <label>:110:                                    ; preds = %79
  resume { i8*, i32 } %83

; <label>:111:                                    ; preds = %19, %4
  %112 = alloca %"class.std::vector.6"*, align 8
  %113 = alloca i64, align 8
  %114 = alloca i64*, align 8
  %115 = alloca %"class.std::allocator.8"*, align 8
  %116 = alloca i8*
  %117 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %112, align 8
  store i64 %1, i64* %113, align 8
  store i64* %2, i64** %114, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %115, align 8
  %118 = load %"class.std::vector.6"*, %"class.std::vector.6"** %112, align 8
  %119 = bitcast %"class.std::vector.6"* %118 to %"struct.std::_Vector_base.7"*
  %120 = load i64, i64* %113, align 8
  %121 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %115, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.7"* %119, i64 %120, %"class.std::allocator.8"* dereferenceable(1) %121)
  %122 = load i64, i64* %113, align 8
  %123 = load i64*, i64** %114, align 8
  br label %19

; <label>:124:                                    ; preds = %79, %65
  %125 = load i8*, i8** %24, align 8
  %126 = load i32, i32* %25, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  br label %79
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_Z5chminIxEbRT_S0_(i64* dereferenceable(8), i64) #4 comdat {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1, align 1
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1794047352, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %85
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1794047352, label %16
    i32 -1608508442, label %21
    i32 212530177, label %24
    i32 -96403509, label %25
    i32 -1618728702, label %53
    i32 1967697221, label %81
    i32 549421683, label %83
  ]

; <label>:15:                                     ; preds = %13
  br label %85

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp sgt i64 %17, %18
  %20 = select i1 %19, i32 -1608508442, i32 212530177
  store i32 %20, i32* %12
  br label %85

; <label>:21:                                     ; preds = %13
  %22 = load i64, i64* %8, align 8
  %23 = load i64*, i64** %7, align 8
  store i64 %22, i64* %23, align 8
  store i1 true, i1* %6, align 1
  store i32 -96403509, i32* %12
  br label %85

; <label>:24:                                     ; preds = %13
  store i1 false, i1* %6, align 1
  store i32 -96403509, i32* %12
  br label %85

; <label>:25:                                     ; preds = %13
  %26 = load i32, i32* @x.147
  %27 = load i32, i32* @y.148
  %28 = sub i32 %26, -982979213
  %29 = sub i32 %28, 1
  %30 = add i32 %29, -982979213
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -1618728702, i32 549421683
  store i32 %52, i32* %12
  br label %85

; <label>:53:                                     ; preds = %13
  %54 = load i1, i1* %6, align 1
  store i1 %54, i1* %3
  %55 = load i32, i32* @x.147
  %56 = load i32, i32* @y.148
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 1967697221, i32 549421683
  store i32 %80, i32* %12
  br label %85

; <label>:81:                                     ; preds = %13
  %82 = load volatile i1, i1* %3
  ret i1 %82

; <label>:83:                                     ; preds = %13
  %84 = load i1, i1* %6, align 1
  store i32 -1618728702, i32* %12
  br label %85

; <label>:85:                                     ; preds = %83, %53, %25, %24, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i64**
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.149
  %10 = load i32, i32* @y.150
  %11 = sub i32 %9, -1428583603
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -1428583603
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 1114724323, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %94
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1114724323, label %23
    i32 514084245, label %43
    i32 60715197, label %71
    i32 266991255, label %74
    i32 -1567821648, label %78
    i32 -694594506, label %82
    i32 2094024893, label %85
  ]

; <label>:22:                                     ; preds = %20
  br label %94

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 514084245, i32 2094024893
  store i32 %42, i32* %19
  br label %94

; <label>:43:                                     ; preds = %20
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %6
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %5
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %4
  %47 = load volatile i64**, i64*** %5
  store i64* %0, i64** %47, align 8
  %48 = load volatile i64**, i64*** %4
  store i64* %1, i64** %48, align 8
  %49 = load volatile i64**, i64*** %4
  %50 = load i64*, i64** %49, align 8
  %51 = load i64, i64* %50, align 8
  %52 = load volatile i64**, i64*** %5
  %53 = load i64*, i64** %52, align 8
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %51, %54
  store i1 %55, i1* %3
  %56 = load i32, i32* @x.149
  %57 = load i32, i32* @y.150
  %58 = add i32 %56, -1355346879
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -1355346879
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 60715197, i32 2094024893
  store i32 %70, i32* %19
  br label %94

; <label>:71:                                     ; preds = %20
  %72 = load volatile i1, i1* %3
  %73 = select i1 %72, i32 266991255, i32 -1567821648
  store i32 %73, i32* %19
  br label %94

; <label>:74:                                     ; preds = %20
  %75 = load volatile i64**, i64*** %4
  %76 = load i64*, i64** %75, align 8
  %77 = load volatile i64**, i64*** %6
  store i64* %76, i64** %77, align 8
  store i32 -694594506, i32* %19
  br label %94

; <label>:78:                                     ; preds = %20
  %79 = load volatile i64**, i64*** %5
  %80 = load i64*, i64** %79, align 8
  %81 = load volatile i64**, i64*** %6
  store i64* %80, i64** %81, align 8
  store i32 -694594506, i32* %19
  br label %94

; <label>:82:                                     ; preds = %20
  %83 = load volatile i64**, i64*** %6
  %84 = load i64*, i64** %83, align 8
  ret i64* %84

; <label>:85:                                     ; preds = %20
  %86 = alloca i64*, align 8
  %87 = alloca i64*, align 8
  %88 = alloca i64*, align 8
  store i64* %0, i64** %87, align 8
  store i64* %1, i64** %88, align 8
  %89 = load i64*, i64** %88, align 8
  %90 = load i64, i64* %89, align 8
  %91 = load i64*, i64** %87, align 8
  %92 = load i64, i64* %91, align 8
  %93 = icmp slt i64 %90, %92
  store i32 514084245, i32* %19
  br label %94

; <label>:94:                                     ; preds = %85, %78, %74, %71, %43, %23, %22
  br label %20
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #6 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca %"class.std::basic_ifstream", align 8
  %3 = alloca i8*
  %4 = alloca i32
  store i32 0, i32* %1, align 4
  call void @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode(%"class.std::basic_ifstream"* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i32 8)
  %5 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %6 = getelementptr i8, i8* %5, i64 -24
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %8
  %10 = bitcast i8* %9 to %"class.std::basic_ios"*
  %11 = invoke %"class.std::basic_filebuf"* @_ZNKSt14basic_ifstreamIcSt11char_traitsIcEE5rdbufEv(%"class.std::basic_ifstream"* %2)
          to label %12 unwind label %98

; <label>:12:                                     ; preds = %0
  %13 = bitcast %"class.std::basic_filebuf"* %11 to %"class.std::basic_streambuf"*
  %14 = invoke %"class.std::basic_streambuf"* @_ZNSt9basic_iosIcSt11char_traitsIcEE5rdbufEPSt15basic_streambufIcS1_E(%"class.std::basic_ios"* %10, %"class.std::basic_streambuf"* %13)
          to label %15 unwind label %98

; <label>:15:                                     ; preds = %12
  %16 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %19
  %21 = bitcast i8* %20 to %"class.std::basic_ios"*
  %22 = invoke %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %21, %"class.std::basic_ostream"* null)
          to label %23 unwind label %98

; <label>:23:                                     ; preds = %15
  %24 = invoke zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
          to label %25 unwind label %98

; <label>:25:                                     ; preds = %23
  %26 = load i32, i32* @x.151
  %27 = load i32, i32* @y.152
  %28 = add i32 %26, 1618355092
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, 1618355092
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %202

; <label>:40:                                     ; preds = %25, %202
  %41 = load i32, i32* @x.151
  %42 = load i32, i32* @y.152
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %202

; <label>:54:                                     ; preds = %40
  invoke void @_Z5solvev()
          to label %55 unwind label %98

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* @x.151
  %57 = load i32, i32* @y.152
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %203

; <label>:69:                                     ; preds = %55, %203
  store i32 0, i32* %1, align 4
  call void @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%"class.std::basic_ifstream"* %2) #3
  %70 = load i32, i32* %1, align 4
  %71 = load i32, i32* @x.151
  %72 = load i32, i32* @y.152
  %73 = sub i32 %71, 1910352135
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 1910352135
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %203

; <label>:97:                                     ; preds = %69
  ret i32 %70

; <label>:98:                                     ; preds = %54, %23, %15, %12, %0
  %99 = load i32, i32* @x.151
  %100 = load i32, i32* @y.152
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %205

; <label>:124:                                    ; preds = %98, %205
  %125 = landingpad { i8*, i32 }
          cleanup
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %3, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %4, align 4
  call void @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%"class.std::basic_ifstream"* %2) #3
  %128 = load i32, i32* @x.151
  %129 = load i32, i32* @y.152
  %130 = sub i32 %128, 979322553
  %131 = sub i32 %130, 1
  %132 = add i32 %131, 979322553
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 false, true
  %141 = and i1 %138, false
  %142 = and i1 %136, %140
  %143 = and i1 %139, false
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 false, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  br i1 %152, label %154, label %205

; <label>:154:                                    ; preds = %124
  br label %155

; <label>:155:                                    ; preds = %154
  %156 = load i32, i32* @x.151
  %157 = load i32, i32* @y.152
  %158 = sub i32 %156, -1288248566
  %159 = sub i32 %158, 1
  %160 = add i32 %159, -1288248566
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = and i1 %164, %165
  %167 = xor i1 %164, %165
  %168 = or i1 %166, %167
  %169 = or i1 %164, %165
  br i1 %168, label %170, label %209

; <label>:170:                                    ; preds = %155, %209
  %171 = load i8*, i8** %3, align 8
  %172 = load i32, i32* %4, align 4
  %173 = insertvalue { i8*, i32 } undef, i8* %171, 0
  %174 = insertvalue { i8*, i32 } %173, i32 %172, 1
  %175 = load i32, i32* @x.151
  %176 = load i32, i32* @y.152
  %177 = add i32 %175, -1377905528
  %178 = sub i32 %177, 1
  %179 = sub i32 %178, -1377905528
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = xor i1 %183, true
  %186 = xor i1 %184, true
  %187 = xor i1 true, true
  %188 = and i1 %185, true
  %189 = and i1 %183, %187
  %190 = and i1 %186, true
  %191 = and i1 %184, %187
  %192 = or i1 %188, %189
  %193 = or i1 %190, %191
  %194 = xor i1 %192, %193
  %195 = or i1 %185, %186
  %196 = xor i1 %195, true
  %197 = or i1 true, %187
  %198 = and i1 %196, %197
  %199 = or i1 %194, %198
  %200 = or i1 %183, %184
  br i1 %199, label %201, label %209

; <label>:201:                                    ; preds = %170
  resume { i8*, i32 } %174

; <label>:202:                                    ; preds = %40, %25
  br label %40

; <label>:203:                                    ; preds = %69, %55
  store i32 0, i32* %1, align 4
  call void @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%"class.std::basic_ifstream"* %2) #3
  %204 = load i32, i32* %1, align 4
  br label %69

; <label>:205:                                    ; preds = %124, %98
  %206 = landingpad { i8*, i32 }
          cleanup
  %207 = extractvalue { i8*, i32 } %206, 0
  store i8* %207, i8** %3, align 8
  %208 = extractvalue { i8*, i32 } %206, 1
  store i32 %208, i32* %4, align 4
  call void @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%"class.std::basic_ifstream"* %2) #3
  br label %124

; <label>:209:                                    ; preds = %170, %155
  %210 = load i8*, i8** %3, align 8
  %211 = load i32, i32* %4, align 4
  %212 = insertvalue { i8*, i32 } undef, i8* %210, 0
  %213 = insertvalue { i8*, i32 } %212, i32 %211, 1
  br label %170
}

declare void @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode(%"class.std::basic_ifstream"*, i8*, i32) unnamed_addr #1

declare %"class.std::basic_streambuf"* @_ZNSt9basic_iosIcSt11char_traitsIcEE5rdbufEPSt15basic_streambufIcS1_E(%"class.std::basic_ios"*, %"class.std::basic_streambuf"*) #1

declare %"class.std::basic_filebuf"* @_ZNKSt14basic_ifstreamIcSt11char_traitsIcEE5rdbufEv(%"class.std::basic_ifstream"*) #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

; Function Attrs: nounwind
declare void @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%"class.std::basic_ifstream"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EED2Ev(%"class.std::_Rb_tree"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_beginEv(%"class.std::_Rb_tree"* %5) #3
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6)
          to label %7 unwind label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %8) #3
  ret void

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.153
  %11 = load i32, i32* @y.154
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %11, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  br i1 %21, label %23, label %57

; <label>:23:                                     ; preds = %9, %57
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %27) #3
  %28 = load i32, i32* @x.153
  %29 = load i32, i32* @y.154
  %30 = sub i32 %28, -223348572
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -223348572
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %57

; <label>:54:                                     ; preds = %23
  br label %55

; <label>:55:                                     ; preds = %54
  %56 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %56) #12
  unreachable

; <label>:57:                                     ; preds = %23, %9
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %3, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %4, align 4
  %61 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %61) #3
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  store %"class.std::_Rb_tree"* %7, %"class.std::_Rb_tree"** %3
  %8 = alloca i32
  store i32 -1916317328, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %28
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -1916317328, label %12
    i32 -507053183, label %16
    i32 1170698186, label %27
  ]

; <label>:11:                                     ; preds = %9
  br label %28

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %14 = icmp ne %"struct.std::_Rb_tree_node"* %13, null
  %15 = select i1 %14, i32 -507053183, i32 1170698186
  store i32 %15, i32* %8
  br label %28

; <label>:16:                                     ; preds = %9
  %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %18) #3
  %20 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %20, %"struct.std::_Rb_tree_node"* %19)
  %21 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %22 = bitcast %"struct.std::_Rb_tree_node"* %21 to %"struct.std::_Rb_tree_node_base"*
  %23 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %22) #3
  store %"struct.std::_Rb_tree_node"* %23, %"struct.std::_Rb_tree_node"** %6, align 8
  %24 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %25 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %25, %"struct.std::_Rb_tree_node"* %24) #3
  %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %26, %"struct.std::_Rb_tree_node"** %5, align 8
  store i32 -1916317328, i32* %8
  br label %28

; <label>:27:                                     ; preds = %9
  ret void

; <label>:28:                                     ; preds = %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.159
  %5 = load i32, i32* @y.160
  %6 = add i32 %4, 858495636
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 858495636
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1723031567, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1723031567, label %18
    i32 1402283117, label %26
    i32 -1485330670, label %45
    i32 -1806483841, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1402283117, i32 -1806483841
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %27, align 8
  %28 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %28 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEED2Ev(%"class.std::allocator.15"* %29) #3
  %30 = load i32, i32* @x.159
  %31 = load i32, i32* @y.160
  %32 = sub i32 %30, -142422115
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -142422115
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1485330670, i32 -1806483841
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %47, align 8
  %48 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %48 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEED2Ev(%"class.std::allocator.15"* %49) #3
  store i32 1402283117, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #12
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %8 = invoke %"struct.std::pair.43"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %7)
          to label %9 unwind label %12

; <label>:9:                                      ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE7destroyIS8_EEvRSA_PT_(%"class.std::allocator.15"* dereferenceable(1) %6, %"struct.std::pair.43"* %8)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %9
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  ret void

; <label>:12:                                     ; preds = %9, %2
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  call void @__clang_call_terminate(i8* %14) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.171
  %4 = load i32, i32* @y.172
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %107

; <label>:16:                                     ; preds = %2, %107
  %17 = alloca %"class.std::_Rb_tree"*, align 8
  %18 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %17, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %18, align 8
  %19 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %17, align 8
  %20 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %19) #3
  %21 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %18, align 8
  %22 = load i32, i32* @x.171
  %23 = load i32, i32* @y.172
  %24 = add i32 %22, -877379081
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -877379081
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %107

; <label>:48:                                     ; preds = %16
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE10deallocateERSA_PS9_m(%"class.std::allocator.15"* dereferenceable(1) %20, %"struct.std::_Rb_tree_node"* %21, i64 1)
          to label %49 unwind label %104

; <label>:49:                                     ; preds = %48
  %50 = load i32, i32* @x.171
  %51 = load i32, i32* @y.172
  %52 = sub i32 %50, -171099350
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -171099350
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %113

; <label>:76:                                     ; preds = %49, %113
  %77 = load i32, i32* @x.171
  %78 = load i32, i32* @y.172
  %79 = sub i32 %77, -503435749
  %80 = sub i32 %79, 1
  %81 = add i32 %80, -503435749
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %113

; <label>:103:                                    ; preds = %76
  ret void

; <label>:104:                                    ; preds = %48
  %105 = landingpad { i8*, i32 }
          catch i8* null
  %106 = extractvalue { i8*, i32 } %105, 0
  call void @__clang_call_terminate(i8* %106) #12
  unreachable

; <label>:107:                                    ; preds = %16, %2
  %108 = alloca %"class.std::_Rb_tree"*, align 8
  %109 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %108, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %109, align 8
  %110 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %108, align 8
  %111 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %110) #3
  %112 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %109, align 8
  br label %16

; <label>:113:                                    ; preds = %76, %49
  br label %76
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE7destroyIS8_EEvRSA_PT_(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::pair.43"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca %"struct.std::pair.43"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE7destroyIS9_EEvPT_(%"class.__gnu_cxx::new_allocator.16"* %6, %"struct.std::pair.43"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.175
  %6 = load i32, i32* @y.176
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -587131281, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -587131281, label %18
    i32 -1851500552, label %26
    i32 631256665, label %58
    i32 1737981011, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1851500552, i32 1737981011
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %27, align 8
  %28 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %27, align 8
  %29 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %29 to %"class.std::allocator.15"*
  store %"class.std::allocator.15"* %30, %"class.std::allocator.15"** %2
  %31 = load i32, i32* @x.175
  %32 = load i32, i32* @y.176
  %33 = sub i32 %31, 648362989
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 648362989
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 631256665, i32 1737981011
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator.15"*, %"class.std::allocator.15"** %2
  ret %"class.std::allocator.15"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %61, align 8
  %62 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %61, align 8
  %63 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %63 to %"class.std::allocator.15"*
  store i32 -1851500552, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.43"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.43"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret %"struct.std::pair.43"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE7destroyIS9_EEvPT_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::pair.43"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %4 = alloca %"struct.std::pair.43"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  %6 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %4, align 8
  call void @_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEED2Ev(%"struct.std::pair.43"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEED2Ev(%"struct.std::pair.43"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.43"*, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %2, align 8
  %3 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %3, i32 0, i32 1
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set.23"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.43"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.43"*
  ret %"struct.std::pair.43"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [56 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE10deallocateERSA_PS9_m(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE10deallocateEPSA_m(%"class.__gnu_cxx::new_allocator.16"* %8, %"struct.std::_Rb_tree_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE10deallocateEPSA_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::_Rb_tree_node"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.189
  %7 = load i32, i32* @y.190
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 202485203, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 202485203, label %19
    i32 1626120697, label %27
    i32 -194086812, label %61
    i32 -1935705426, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1626120697, i32 -1935705426
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %28, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %28, align 8
  %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %29, align 8
  %33 = bitcast %"struct.std::_Rb_tree_node"* %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.189
  %35 = load i32, i32* @y.190
  %36 = add i32 %34, 1824755847
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 1824755847
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -194086812, i32 -1935705426
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %64 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %63, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %63, align 8
  %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %64, align 8
  %68 = bitcast %"struct.std::_Rb_tree_node"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 1626120697, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEED2Ev(%"class.std::allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.193
  %5 = load i32, i32* @y.194
  %6 = sub i32 %4, 598536969
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 598536969
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 327483507, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 327483507, label %18
    i32 -1660058646, label %38
    i32 1715442937, label %55
    i32 -575162648, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1660058646, i32 -575162648
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %41 = load i32, i32* @x.193
  %42 = load i32, i32* @y.194
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1715442937, i32 -575162648
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %57, align 8
  store i32 -1660058646, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EED2Ev(%"class.std::_Rb_tree.19"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.195
  %3 = load i32, i32* @y.196
  %4 = sub i32 %2, -903274351
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -903274351
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %123

; <label>:28:                                     ; preds = %1, %123
  %29 = alloca %"class.std::_Rb_tree.19"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %29, align 8
  %32 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %29, align 8
  %33 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_beginEv(%"class.std::_Rb_tree.19"* %32) #3
  %34 = load i32, i32* @x.195
  %35 = load i32, i32* @y.196
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %123

; <label>:59:                                     ; preds = %28
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %32, %"struct.std::_Rb_tree_node.44"* %33)
          to label %60 unwind label %116

; <label>:60:                                     ; preds = %59
  %61 = load i32, i32* @x.195
  %62 = load i32, i32* @y.196
  %63 = add i32 %61, 828246723
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 828246723
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %129

; <label>:87:                                     ; preds = %60, %129
  %88 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %32, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %88) #3
  %89 = load i32, i32* @x.195
  %90 = load i32, i32* @y.196
  %91 = add i32 %89, -669265994
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -669265994
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %129

; <label>:115:                                    ; preds = %87
  ret void

; <label>:116:                                    ; preds = %59
  %117 = landingpad { i8*, i32 }
          catch i8* null
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %30, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %31, align 4
  %120 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %32, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %120) #3
  br label %121

; <label>:121:                                    ; preds = %116
  %122 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %122) #12
  unreachable

; <label>:123:                                    ; preds = %28, %1
  %124 = alloca %"class.std::_Rb_tree.19"*, align 8
  %125 = alloca i8*
  %126 = alloca i32
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %124, align 8
  %127 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %124, align 8
  %128 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_beginEv(%"class.std::_Rb_tree.19"* %127) #3
  br label %28

; <label>:129:                                    ; preds = %87, %60
  %130 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %32, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %130) #3
  br label %87
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"*, %"struct.std::_Rb_tree_node.44"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.19"*
  %4 = alloca %"class.std::_Rb_tree.19"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %4, align 8
  store %"struct.std::_Rb_tree_node.44"* %1, %"struct.std::_Rb_tree_node.44"** %5, align 8
  %7 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %4, align 8
  store %"class.std::_Rb_tree.19"* %7, %"class.std::_Rb_tree.19"** %3
  %8 = alloca i32
  store i32 257230652, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %28
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 257230652, label %12
    i32 1827657732, label %16
    i32 968952285, label %27
  ]

; <label>:11:                                     ; preds = %9
  br label %28

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %5, align 8
  %14 = icmp ne %"struct.std::_Rb_tree_node.44"* %13, null
  %15 = select i1 %14, i32 1827657732, i32 968952285
  store i32 %15, i32* %8
  br label %28

; <label>:16:                                     ; preds = %9
  %17 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %5, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node.44"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %18) #3
  %20 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %20, %"struct.std::_Rb_tree_node.44"* %19)
  %21 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %5, align 8
  %22 = bitcast %"struct.std::_Rb_tree_node.44"* %21 to %"struct.std::_Rb_tree_node_base"*
  %23 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %22) #3
  store %"struct.std::_Rb_tree_node.44"* %23, %"struct.std::_Rb_tree_node.44"** %6, align 8
  %24 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %5, align 8
  %25 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %25, %"struct.std::_Rb_tree_node.44"* %24) #3
  %26 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %6, align 8
  store %"struct.std::_Rb_tree_node.44"* %26, %"struct.std::_Rb_tree_node.44"** %5, align 8
  store i32 257230652, i32* %8
  br label %28

; <label>:27:                                     ; preds = %9
  ret void

; <label>:28:                                     ; preds = %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_beginEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %2, align 8
  %3 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.44"*
  ret %"struct.std::_Rb_tree_node.44"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.201
  %5 = load i32, i32* @y.202
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 954212746, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 954212746, label %17
    i32 -2138153011, label %37
    i32 -333548134, label %56
    i32 -2005346033, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -2138153011, i32 -2005346033
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %38, align 8
  %39 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %39 to %"class.std::allocator.20"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEED2Ev(%"class.std::allocator.20"* %40) #3
  %41 = load i32, i32* @x.201
  %42 = load i32, i32* @y.202
  %43 = add i32 %41, -390399252
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -390399252
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -333548134, i32 -2005346033
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %58, align 8
  %59 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %59 to %"class.std::allocator.20"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEED2Ev(%"class.std::allocator.20"* %60) #3
  store i32 -2138153011, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.44"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.203
  %6 = load i32, i32* @y.204
  %7 = sub i32 %5, 1779427350
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1779427350
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -394631616, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -394631616, label %19
    i32 1815674183, label %39
    i32 -1451615959, label %59
    i32 -1433464797, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1815674183, i32 -1433464797
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %41, i32 0, i32 3
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = bitcast %"struct.std::_Rb_tree_node_base"* %43 to %"struct.std::_Rb_tree_node.44"*
  store %"struct.std::_Rb_tree_node.44"* %44, %"struct.std::_Rb_tree_node.44"** %2
  %45 = load i32, i32* @x.203
  %46 = load i32, i32* @y.204
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1451615959, i32 -1433464797
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %2
  ret %"struct.std::_Rb_tree_node.44"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %63 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %63, i32 0, i32 3
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %66 = bitcast %"struct.std::_Rb_tree_node_base"* %65 to %"struct.std::_Rb_tree_node.44"*
  store i32 1815674183, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.44"*
  ret %"struct.std::_Rb_tree_node.44"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"*, %"struct.std::_Rb_tree_node.44"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.19"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %3, align 8
  store %"struct.std::_Rb_tree_node.44"* %1, %"struct.std::_Rb_tree_node.44"** %4, align 8
  %5 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %5, %"struct.std::_Rb_tree_node.44"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %5, %"struct.std::_Rb_tree_node.44"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"*, %"struct.std::_Rb_tree_node.44"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.19"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %3, align 8
  store %"struct.std::_Rb_tree_node.44"* %1, %"struct.std::_Rb_tree_node.44"** %4, align 8
  %5 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.19"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %4, align 8
  %8 = invoke %"struct.std::pair.46"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.44"* %7)
          to label %9 unwind label %12

; <label>:9:                                      ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE7destroyIS9_EEvRSB_PT_(%"class.std::allocator.20"* dereferenceable(1) %6, %"struct.std::pair.46"* %8)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %9
  %11 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %4, align 8
  ret void

; <label>:12:                                     ; preds = %9, %2
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  call void @__clang_call_terminate(i8* %14) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"*, %"struct.std::_Rb_tree_node.44"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.19"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %3, align 8
  store %"struct.std::_Rb_tree_node.44"* %1, %"struct.std::_Rb_tree_node.44"** %4, align 8
  %5 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.19"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE10deallocateERSB_PSA_m(%"class.std::allocator.20"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node.44"* %7, i64 1)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %2
  ret void

; <label>:9:                                      ; preds = %2
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE7destroyIS9_EEvRSB_PT_(%"class.std::allocator.20"* dereferenceable(1), %"struct.std::pair.46"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.213
  %6 = load i32, i32* @y.214
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 683562592, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 683562592, label %18
    i32 -1274329839, label %38
    i32 1802942837, label %71
    i32 973845475, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1274329839, i32 973845475
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.20"*, align 8
  %40 = alloca %"struct.std::pair.46"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %39, align 8
  store %"struct.std::pair.46"* %1, %"struct.std::pair.46"** %40, align 8
  %41 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %39, align 8
  %42 = bitcast %"class.std::allocator.20"* %41 to %"class.__gnu_cxx::new_allocator.21"*
  %43 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %40, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE7destroyISA_EEvPT_(%"class.__gnu_cxx::new_allocator.21"* %42, %"struct.std::pair.46"* %43)
  %44 = load i32, i32* @x.213
  %45 = load i32, i32* @y.214
  %46 = add i32 %44, -1928441710
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1928441710
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1802942837, i32 973845475
  store i32 %70, i32* %14
  br label %78

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::allocator.20"*, align 8
  %74 = alloca %"struct.std::pair.46"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %73, align 8
  store %"struct.std::pair.46"* %1, %"struct.std::pair.46"** %74, align 8
  %75 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %73, align 8
  %76 = bitcast %"class.std::allocator.20"* %75 to %"class.__gnu_cxx::new_allocator.21"*
  %77 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %74, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE7destroyISA_EEvPT_(%"class.__gnu_cxx::new_allocator.21"* %76, %"struct.std::pair.46"* %77)
  store i32 -1274329839, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.215
  %6 = load i32, i32* @y.216
  %7 = sub i32 %5, 389402989
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 389402989
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -497723483, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -497723483, label %19
    i32 837348031, label %39
    i32 1807476561, label %71
    i32 -750036823, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 837348031, i32 -750036823
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %40, align 8
  %41 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %42 to %"class.std::allocator.20"*
  store %"class.std::allocator.20"* %43, %"class.std::allocator.20"** %2
  %44 = load i32, i32* @x.215
  %45 = load i32, i32* @y.216
  %46 = add i32 %44, 946474443
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 946474443
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1807476561, i32 -750036823
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator.20"*, %"class.std::allocator.20"** %2
  ret %"class.std::allocator.20"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %74, align 8
  %75 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %74, align 8
  %76 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %76 to %"class.std::allocator.20"*
  store i32 837348031, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.46"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.44"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"struct.std::_Rb_tree_node.44"* %0, %"struct.std::_Rb_tree_node.44"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", %"struct.std::_Rb_tree_node.44"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.46"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.45"* %4) #3
  ret %"struct.std::pair.46"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE7destroyISA_EEvPT_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.std::pair.46"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.219
  %6 = load i32, i32* @y.220
  %7 = sub i32 %5, -1791517228
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1791517228
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -309532690, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -309532690, label %19
    i32 2098320121, label %39
    i32 -1400000396, label %71
    i32 -1090288412, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2098320121, i32 -1090288412
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %41 = alloca %"struct.std::pair.46"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %40, align 8
  store %"struct.std::pair.46"* %1, %"struct.std::pair.46"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %40, align 8
  %43 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %41, align 8
  call void @_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEED2Ev(%"struct.std::pair.46"* %43) #3
  %44 = load i32, i32* @x.219
  %45 = load i32, i32* @y.220
  %46 = add i32 %44, 341707386
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 341707386
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1400000396, i32 -1090288412
  store i32 %70, i32* %15
  br label %77

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %74 = alloca %"struct.std::pair.46"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %73, align 8
  store %"struct.std::pair.46"* %1, %"struct.std::pair.46"** %74, align 8
  %75 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %73, align 8
  %76 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %74, align 8
  call void @_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEED2Ev(%"struct.std::pair.46"* %76) #3
  store i32 2098320121, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEED2Ev(%"struct.std::pair.46"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.46"*, align 8
  store %"struct.std::pair.46"* %0, %"struct.std::pair.46"** %2, align 8
  %3 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair.46", %"struct.std::pair.46"* %3, i32 0, i32 1
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev(%"class.std::map.28"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.46"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.45"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.45"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.45"* %0, %"struct.__gnu_cxx::__aligned_membuf.45"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.45"*, %"struct.__gnu_cxx::__aligned_membuf.45"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.45"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.46"*
  ret %"struct.std::pair.46"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.45"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.45"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.45"* %0, %"struct.__gnu_cxx::__aligned_membuf.45"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.45"*, %"struct.__gnu_cxx::__aligned_membuf.45"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.45", %"struct.__gnu_cxx::__aligned_membuf.45"* %3, i32 0, i32 0
  %5 = bitcast [56 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE10deallocateERSB_PSA_m(%"class.std::allocator.20"* dereferenceable(1), %"struct.std::_Rb_tree_node.44"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %"struct.std::_Rb_tree_node.44"* %1, %"struct.std::_Rb_tree_node.44"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE10deallocateEPSB_m(%"class.__gnu_cxx::new_allocator.21"* %8, %"struct.std::_Rb_tree_node.44"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE10deallocateEPSB_m(%"class.__gnu_cxx::new_allocator.21"*, %"struct.std::_Rb_tree_node.44"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %"struct.std::_Rb_tree_node.44"* %1, %"struct.std::_Rb_tree_node.44"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node.44"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEED2Ev(%"class.std::allocator.20"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEED2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEED2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev(%"class.std::_Rb_tree.29"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree.29"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %2, align 8
  %5 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.29"* %5) #3
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %5, %"struct.std::_Rb_tree_node.47"* %6)
          to label %7 unwind label %62

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.235
  %9 = load i32, i32* @y.236
  %10 = sub i32 %8, -298497234
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -298497234
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = xor i1 %16, true
  %19 = xor i1 %17, true
  %20 = xor i1 true, true
  %21 = and i1 %18, true
  %22 = and i1 %16, %20
  %23 = and i1 %19, true
  %24 = and i1 %17, %20
  %25 = or i1 %21, %22
  %26 = or i1 %23, %24
  %27 = xor i1 %25, %26
  %28 = or i1 %18, %19
  %29 = xor i1 %28, true
  %30 = or i1 true, %20
  %31 = and i1 %29, %30
  %32 = or i1 %27, %31
  %33 = or i1 %16, %17
  br i1 %32, label %34, label %165

; <label>:34:                                     ; preds = %7, %165
  %35 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %35) #3
  %36 = load i32, i32* @x.235
  %37 = load i32, i32* @y.236
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %165

; <label>:61:                                     ; preds = %34
  ret void

; <label>:62:                                     ; preds = %1
  %63 = load i32, i32* @x.235
  %64 = load i32, i32* @y.236
  %65 = sub i32 %63, -1152099697
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1152099697
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %167

; <label>:89:                                     ; preds = %62, %167
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  store i8* %91, i8** %3, align 8
  %92 = extractvalue { i8*, i32 } %90, 1
  store i32 %92, i32* %4, align 4
  %93 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %93) #3
  %94 = load i32, i32* @x.235
  %95 = load i32, i32* @y.236
  %96 = sub i32 %94, 107128885
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 107128885
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %167

; <label>:120:                                    ; preds = %89
  br label %121

; <label>:121:                                    ; preds = %120
  %122 = load i32, i32* @x.235
  %123 = load i32, i32* @y.236
  %124 = add i32 %122, -771607961
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, -771607961
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 true, true
  %135 = and i1 %132, true
  %136 = and i1 %130, %134
  %137 = and i1 %133, true
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 true, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  br i1 %146, label %148, label %172

; <label>:148:                                    ; preds = %121, %172
  %149 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %149) #12
  %150 = load i32, i32* @x.235
  %151 = load i32, i32* @y.236
  %152 = add i32 %150, -806865499
  %153 = sub i32 %152, 1
  %154 = sub i32 %153, -806865499
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  br i1 %162, label %164, label %172

; <label>:164:                                    ; preds = %148
  unreachable

; <label>:165:                                    ; preds = %34, %7
  %166 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %166) #3
  br label %34

; <label>:167:                                    ; preds = %89, %62
  %168 = landingpad { i8*, i32 }
          catch i8* null
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %3, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %4, align 4
  %171 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %171) #3
  br label %89

; <label>:172:                                    ; preds = %148, %121
  %173 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %173) #12
  br label %148
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Rb_tree.29"*
  %5 = alloca %"class.std::_Rb_tree.29"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %5, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %8 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %5, align 8
  store %"class.std::_Rb_tree.29"* %8, %"class.std::_Rb_tree.29"** %4
  %9 = alloca i32
  store i32 -304703368, i32* %9
  br label %10

; <label>:10:                                     ; preds = %2, %143
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 -304703368, label %13
    i32 -1688244854, label %29
    i32 -1832036802, label %59
    i32 1684929012, label %62
    i32 1156747666, label %89
    i32 1308928096, label %127
    i32 -326900110, label %128
    i32 -1468704321, label %129
    i32 1773516193, label %132
  ]

; <label>:12:                                     ; preds = %10
  br label %143

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* @x.237
  %15 = load i32, i32* @y.238
  %16 = sub i32 %14, 597659838
  %17 = sub i32 %16, 1
  %18 = add i32 %17, 597659838
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1688244854, i32 -1468704321
  store i32 %28, i32* %9
  br label %143

; <label>:29:                                     ; preds = %10
  %30 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %31 = icmp ne %"struct.std::_Rb_tree_node.47"* %30, null
  store i1 %31, i1* %3
  %32 = load i32, i32* @x.237
  %33 = load i32, i32* @y.238
  %34 = sub i32 %32, 2114181696
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 2114181696
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1832036802, i32 -1468704321
  store i32 %58, i32* %9
  br label %143

; <label>:59:                                     ; preds = %10
  %60 = load volatile i1, i1* %3
  %61 = select i1 %60, i32 1684929012, i32 -326900110
  store i32 %61, i32* %9
  br label %143

; <label>:62:                                     ; preds = %10
  %63 = load i32, i32* @x.237
  %64 = load i32, i32* @y.238
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 1156747666, i32 1773516193
  store i32 %88, i32* %9
  br label %143

; <label>:89:                                     ; preds = %10
  %90 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %91 = bitcast %"struct.std::_Rb_tree_node.47"* %90 to %"struct.std::_Rb_tree_node_base"*
  %92 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %91) #3
  %93 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %4
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %93, %"struct.std::_Rb_tree_node.47"* %92)
  %94 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %95 = bitcast %"struct.std::_Rb_tree_node.47"* %94 to %"struct.std::_Rb_tree_node_base"*
  %96 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %95) #3
  store %"struct.std::_Rb_tree_node.47"* %96, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %97 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %98 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %4
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %98, %"struct.std::_Rb_tree_node.47"* %97) #3
  %99 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  store %"struct.std::_Rb_tree_node.47"* %99, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %100 = load i32, i32* @x.237
  %101 = load i32, i32* @y.238
  %102 = sub i32 %100, 1574256471
  %103 = sub i32 %102, 1
  %104 = add i32 %103, 1574256471
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 true, true
  %113 = and i1 %110, true
  %114 = and i1 %108, %112
  %115 = and i1 %111, true
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 true, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  %126 = select i1 %124, i32 1308928096, i32 1773516193
  store i32 %126, i32* %9
  br label %143

; <label>:127:                                    ; preds = %10
  store i32 -304703368, i32* %9
  br label %143

; <label>:128:                                    ; preds = %10
  ret void

; <label>:129:                                    ; preds = %10
  %130 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %131 = icmp ne %"struct.std::_Rb_tree_node.47"* %130, null
  store i32 -1688244854, i32* %9
  br label %143

; <label>:132:                                    ; preds = %10
  %133 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %134 = bitcast %"struct.std::_Rb_tree_node.47"* %133 to %"struct.std::_Rb_tree_node_base"*
  %135 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %134) #3
  %136 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %4
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %136, %"struct.std::_Rb_tree_node.47"* %135)
  %137 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %138 = bitcast %"struct.std::_Rb_tree_node.47"* %137 to %"struct.std::_Rb_tree_node_base"*
  %139 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %138) #3
  store %"struct.std::_Rb_tree_node.47"* %139, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %140 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %141 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %4
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %141, %"struct.std::_Rb_tree_node.47"* %140) #3
  %142 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  store %"struct.std::_Rb_tree_node.47"* %142, %"struct.std::_Rb_tree_node.47"** %6, align 8
  store i32 1156747666, i32* %9
  br label %143

; <label>:143:                                    ; preds = %132, %129, %127, %89, %62, %59, %29, %13, %12
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.47"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.239
  %6 = load i32, i32* @y.240
  %7 = add i32 %5, 359027834
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 359027834
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1679981473, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1679981473, label %19
    i32 -796379963, label %39
    i32 -2071525111, label %62
    i32 1187207783, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -796379963, i32 1187207783
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %40, align 8
  %41 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 1
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  %46 = bitcast %"struct.std::_Rb_tree_node_base"* %45 to %"struct.std::_Rb_tree_node.47"*
  store %"struct.std::_Rb_tree_node.47"* %46, %"struct.std::_Rb_tree_node.47"** %2
  %47 = load i32, i32* @x.239
  %48 = load i32, i32* @y.240
  %49 = add i32 %47, -643886289
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -643886289
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -2071525111, i32 1187207783
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %2
  ret %"struct.std::_Rb_tree_node.47"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %65, align 8
  %66 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %65, align 8
  %67 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %67, i32 0, i32 1
  %69 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %68, i32 0, i32 1
  %70 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %69, align 8
  %71 = bitcast %"struct.std::_Rb_tree_node_base"* %70 to %"struct.std::_Rb_tree_node.47"*
  store i32 -796379963, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.std::allocator.30"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.47"*
  ret %"struct.std::_Rb_tree_node.47"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.47"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.245
  %6 = load i32, i32* @y.246
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1169564902, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1169564902, label %18
    i32 -1383634515, label %38
    i32 1151050115, label %71
    i32 1342950729, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1383634515, i32 1342950729
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %40 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %40, i32 0, i32 2
  %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %43 = bitcast %"struct.std::_Rb_tree_node_base"* %42 to %"struct.std::_Rb_tree_node.47"*
  store %"struct.std::_Rb_tree_node.47"* %43, %"struct.std::_Rb_tree_node.47"** %2
  %44 = load i32, i32* @x.245
  %45 = load i32, i32* @y.246
  %46 = sub i32 %44, -486685987
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -486685987
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1151050115, i32 1342950729
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  %72 = load volatile %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %2
  ret %"struct.std::_Rb_tree_node.47"* %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %75, i32 0, i32 2
  %77 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %78 = bitcast %"struct.std::_Rb_tree_node_base"* %77 to %"struct.std::_Rb_tree_node.47"*
  store i32 -1383634515, i32* %14
  br label %79

; <label>:79:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.247
  %6 = load i32, i32* @y.248
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 576152455, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 576152455, label %18
    i32 -1734247308, label %26
    i32 235106163, label %59
    i32 -1717605158, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1734247308, i32 -1717605158
  store i32 %25, i32* %14
  br label %66

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Rb_tree.29"*, align 8
  %28 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %27, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %28, align 8
  %29 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %27, align 8
  %30 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %28, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %29, %"struct.std::_Rb_tree_node.47"* %30) #3
  %31 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %28, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %29, %"struct.std::_Rb_tree_node.47"* %31) #3
  %32 = load i32, i32* @x.247
  %33 = load i32, i32* @y.248
  %34 = sub i32 %32, 431846628
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 431846628
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 235106163, i32 -1717605158
  store i32 %58, i32* %14
  br label %66

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::_Rb_tree.29"*, align 8
  %62 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %61, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %62, align 8
  %63 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %61, align 8
  %64 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %62, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %63, %"struct.std::_Rb_tree_node.47"* %64) #3
  %65 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %62, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %63, %"struct.std::_Rb_tree_node.47"* %65) #3
  store i32 -1734247308, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.29"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %3, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %4, align 8
  %5 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.29"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %4, align 8
  %8 = invoke %"struct.std::pair.49"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"* %7)
          to label %9 unwind label %41

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.249
  %11 = load i32, i32* @y.250
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %11, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  br i1 %21, label %23, label %44

; <label>:23:                                     ; preds = %9, %44
  %24 = load i32, i32* @x.249
  %25 = load i32, i32* @y.250
  %26 = sub i32 %24, -138597919
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -138597919
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %44

; <label>:38:                                     ; preds = %23
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE7destroyIS3_EEvRS5_PT_(%"class.std::allocator.30"* dereferenceable(1) %6, %"struct.std::pair.49"* %8)
          to label %39 unwind label %41

; <label>:39:                                     ; preds = %38
  %40 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %4, align 8
  ret void

; <label>:41:                                     ; preds = %38, %2
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  call void @__clang_call_terminate(i8* %43) #12
  unreachable

; <label>:44:                                     ; preds = %23, %9
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.29"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %3, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %4, align 8
  %5 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.29"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE10deallocateERS5_PS4_m(%"class.std::allocator.30"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node.47"* %7, i64 1)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %2
  ret void

; <label>:9:                                      ; preds = %2
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE7destroyIS3_EEvRS5_PT_(%"class.std::allocator.30"* dereferenceable(1), %"struct.std::pair.49"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.253
  %6 = load i32, i32* @y.254
  %7 = add i32 %5, -1497632952
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1497632952
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2099580098, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2099580098, label %19
    i32 2136529558, label %27
    i32 -309794722, label %48
    i32 -1209406870, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2136529558, i32 -1209406870
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.30"*, align 8
  %29 = alloca %"struct.std::pair.49"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %28, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %29, align 8
  %30 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %28, align 8
  %31 = bitcast %"class.std::allocator.30"* %30 to %"class.__gnu_cxx::new_allocator.31"*
  %32 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.31"* %31, %"struct.std::pair.49"* %32)
  %33 = load i32, i32* @x.253
  %34 = load i32, i32* @y.254
  %35 = sub i32 %33, 1272377329
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1272377329
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -309794722, i32 -1209406870
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::allocator.30"*, align 8
  %51 = alloca %"struct.std::pair.49"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %50, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %51, align 8
  %52 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %50, align 8
  %53 = bitcast %"class.std::allocator.30"* %52 to %"class.__gnu_cxx::new_allocator.31"*
  %54 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %51, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.31"* %53, %"struct.std::pair.49"* %54)
  store i32 2136529558, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %2, align 8
  %3 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4 to %"class.std::allocator.30"*
  ret %"class.std::allocator.30"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.49"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.49"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.257
  %6 = load i32, i32* @y.258
  %7 = add i32 %5, -151731100
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -151731100
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1847206869, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1847206869, label %19
    i32 -39377375, label %27
    i32 -1461130560, label %47
    i32 -1582654388, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -39377375, i32 -1582654388
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"struct.std::_Rb_tree_node.47"* %0, %"struct.std::_Rb_tree_node.47"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node.47", %"struct.std::_Rb_tree_node.47"* %29, i32 0, i32 1
  %31 = call %"struct.std::pair.49"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.48"* %30) #3
  store %"struct.std::pair.49"* %31, %"struct.std::pair.49"** %2
  %32 = load i32, i32* @x.257
  %33 = load i32, i32* @y.258
  %34 = sub i32 %32, 860200589
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 860200589
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1461130560, i32 -1582654388
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"struct.std::pair.49"*, %"struct.std::pair.49"** %2
  ret %"struct.std::pair.49"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"struct.std::_Rb_tree_node.47"* %0, %"struct.std::_Rb_tree_node.47"** %50, align 8
  %51 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node.47", %"struct.std::_Rb_tree_node.47"* %51, i32 0, i32 1
  %53 = call %"struct.std::pair.49"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.48"* %52) #3
  store i32 -39377375, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.31"*, %"struct.std::pair.49"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %4 = alloca %"struct.std::pair.49"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  %6 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.49"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.48"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.48"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.48"* %0, %"struct.__gnu_cxx::__aligned_membuf.48"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.48"*, %"struct.__gnu_cxx::__aligned_membuf.48"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.48"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.49"*
  ret %"struct.std::pair.49"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.48"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.48"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.48"* %0, %"struct.__gnu_cxx::__aligned_membuf.48"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.48"*, %"struct.__gnu_cxx::__aligned_membuf.48"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.48", %"struct.__gnu_cxx::__aligned_membuf.48"* %3, i32 0, i32 0
  %5 = bitcast [16 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE10deallocateERS5_PS4_m(%"class.std::allocator.30"* dereferenceable(1), %"struct.std::_Rb_tree_node.47"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.30"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %4, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  %8 = bitcast %"class.std::allocator.30"* %7 to %"class.__gnu_cxx::new_allocator.31"*
  %9 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.31"* %8, %"struct.std::_Rb_tree_node.47"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.31"*, %"struct.std::_Rb_tree_node.47"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node.47"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.std::allocator.30"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %2, align 8
  %3 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %2, align 8
  %4 = bitcast %"class.std::allocator.30"* %3 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.__gnu_cxx::new_allocator.31"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree.24"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.273
  %3 = load i32, i32* @y.274
  %4 = add i32 %2, 815252170
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 815252170
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %58

; <label>:28:                                     ; preds = %1, %58
  %29 = alloca %"class.std::_Rb_tree.24"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %29, align 8
  %32 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %29, align 8
  %33 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.24"* %32) #3
  %34 = load i32, i32* @x.273
  %35 = load i32, i32* @y.274
  %36 = sub i32 %34, -1316938157
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1316938157
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %58

; <label>:48:                                     ; preds = %28
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %32, %"struct.std::_Rb_tree_node.50"* %33)
          to label %49 unwind label %51

; <label>:49:                                     ; preds = %48
  %50 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %32, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %50) #3
  ret void

; <label>:51:                                     ; preds = %48
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %30, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %31, align 4
  %55 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %32, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %55) #3
  br label %56

; <label>:56:                                     ; preds = %51
  %57 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %57) #12
  unreachable

; <label>:58:                                     ; preds = %28, %1
  %59 = alloca %"class.std::_Rb_tree.24"*, align 8
  %60 = alloca i8*
  %61 = alloca i32
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %59, align 8
  %62 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %59, align 8
  %63 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.24"* %62) #3
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node.50"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Rb_tree.24"*
  %5 = alloca %"class.std::_Rb_tree.24"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %5, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %8 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %5, align 8
  store %"class.std::_Rb_tree.24"* %8, %"class.std::_Rb_tree.24"** %4
  %9 = alloca i32
  store i32 1539326713, i32* %9
  br label %10

; <label>:10:                                     ; preds = %2, %175
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 1539326713, label %13
    i32 493161842, label %28
    i32 1583650553, label %58
    i32 640671777, label %61
    i32 -882175825, label %89
    i32 171550478, label %115
    i32 853661762, label %116
    i32 806808869, label %143
    i32 1827558676, label %159
    i32 -1128739339, label %160
    i32 747853823, label %163
    i32 1221180103, label %174
  ]

; <label>:12:                                     ; preds = %10
  br label %175

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* @x.275
  %15 = load i32, i32* @y.276
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 493161842, i32 -1128739339
  store i32 %27, i32* %9
  br label %175

; <label>:28:                                     ; preds = %10
  %29 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %30 = icmp ne %"struct.std::_Rb_tree_node.50"* %29, null
  store i1 %30, i1* %3
  %31 = load i32, i32* @x.275
  %32 = load i32, i32* @y.276
  %33 = sub i32 %31, 492442725
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 492442725
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1583650553, i32 -1128739339
  store i32 %57, i32* %9
  br label %175

; <label>:58:                                     ; preds = %10
  %59 = load volatile i1, i1* %3
  %60 = select i1 %59, i32 640671777, i32 853661762
  store i32 %60, i32* %9
  br label %175

; <label>:61:                                     ; preds = %10
  %62 = load i32, i32* @x.275
  %63 = load i32, i32* @y.276
  %64 = sub i32 %62, -297785122
  %65 = sub i32 %64, 1
  %66 = add i32 %65, -297785122
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -882175825, i32 747853823
  store i32 %88, i32* %9
  br label %175

; <label>:89:                                     ; preds = %10
  %90 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %91 = bitcast %"struct.std::_Rb_tree_node.50"* %90 to %"struct.std::_Rb_tree_node_base"*
  %92 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %91) #3
  %93 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %93, %"struct.std::_Rb_tree_node.50"* %92)
  %94 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %95 = bitcast %"struct.std::_Rb_tree_node.50"* %94 to %"struct.std::_Rb_tree_node_base"*
  %96 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %95) #3
  store %"struct.std::_Rb_tree_node.50"* %96, %"struct.std::_Rb_tree_node.50"** %7, align 8
  %97 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %98 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %98, %"struct.std::_Rb_tree_node.50"* %97) #3
  %99 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %7, align 8
  store %"struct.std::_Rb_tree_node.50"* %99, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %100 = load i32, i32* @x.275
  %101 = load i32, i32* @y.276
  %102 = add i32 %100, 1107979226
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, 1107979226
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 171550478, i32 747853823
  store i32 %114, i32* %9
  br label %175

; <label>:115:                                    ; preds = %10
  store i32 1539326713, i32* %9
  br label %175

; <label>:116:                                    ; preds = %10
  %117 = load i32, i32* @x.275
  %118 = load i32, i32* @y.276
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 806808869, i32 1221180103
  store i32 %142, i32* %9
  br label %175

; <label>:143:                                    ; preds = %10
  %144 = load i32, i32* @x.275
  %145 = load i32, i32* @y.276
  %146 = add i32 %144, -711445440
  %147 = sub i32 %146, 1
  %148 = sub i32 %147, -711445440
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 1827558676, i32 1221180103
  store i32 %158, i32* %9
  br label %175

; <label>:159:                                    ; preds = %10
  ret void

; <label>:160:                                    ; preds = %10
  %161 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %162 = icmp ne %"struct.std::_Rb_tree_node.50"* %161, null
  store i32 493161842, i32* %9
  br label %175

; <label>:163:                                    ; preds = %10
  %164 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %165 = bitcast %"struct.std::_Rb_tree_node.50"* %164 to %"struct.std::_Rb_tree_node_base"*
  %166 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %165) #3
  %167 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %167, %"struct.std::_Rb_tree_node.50"* %166)
  %168 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %169 = bitcast %"struct.std::_Rb_tree_node.50"* %168 to %"struct.std::_Rb_tree_node_base"*
  %170 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %169) #3
  store %"struct.std::_Rb_tree_node.50"* %170, %"struct.std::_Rb_tree_node.50"** %7, align 8
  %171 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %6, align 8
  %172 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %172, %"struct.std::_Rb_tree_node.50"* %171) #3
  %173 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %7, align 8
  store %"struct.std::_Rb_tree_node.50"* %173, %"struct.std::_Rb_tree_node.50"** %6, align 8
  store i32 -882175825, i32* %9
  br label %175

; <label>:174:                                    ; preds = %10
  store i32 806808869, i32* %9
  br label %175

; <label>:175:                                    ; preds = %174, %163, %160, %143, %116, %115, %89, %61, %58, %28, %13, %12
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %2, align 8
  %3 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.50"*
  ret %"struct.std::_Rb_tree_node.50"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3 to %"class.std::allocator.25"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.25"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.50"*
  ret %"struct.std::_Rb_tree_node.50"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.50"*
  ret %"struct.std::_Rb_tree_node.50"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node.50"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.285
  %6 = load i32, i32* @y.286
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1484953279, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1484953279, label %18
    i32 1124280507, label %38
    i32 -1991532609, label %71
    i32 -1267267174, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1124280507, i32 -1267267174
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Rb_tree.24"*, align 8
  %40 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %39, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %40, align 8
  %41 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %39, align 8
  %42 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %40, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %41, %"struct.std::_Rb_tree_node.50"* %42) #3
  %43 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %40, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %41, %"struct.std::_Rb_tree_node.50"* %43) #3
  %44 = load i32, i32* @x.285
  %45 = load i32, i32* @y.286
  %46 = sub i32 %44, 921237741
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 921237741
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1991532609, i32 -1267267174
  store i32 %70, i32* %14
  br label %78

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::_Rb_tree.24"*, align 8
  %74 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %73, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %74, align 8
  %75 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %73, align 8
  %76 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %74, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %75, %"struct.std::_Rb_tree_node.50"* %76) #3
  %77 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %74, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %75, %"struct.std::_Rb_tree_node.50"* %77) #3
  store i32 1124280507, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node.50"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.24"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %3, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %4, align 8
  %5 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %4, align 8
  %8 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node.50"* %7)
          to label %9 unwind label %40

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.287
  %11 = load i32, i32* @y.288
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %11, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  br i1 %21, label %23, label %43

; <label>:23:                                     ; preds = %9, %43
  %24 = load i32, i32* @x.287
  %25 = load i32, i32* @y.288
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %43

; <label>:37:                                     ; preds = %23
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.25"* dereferenceable(1) %6, i64* %8)
          to label %38 unwind label %40

; <label>:38:                                     ; preds = %37
  %39 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %4, align 8
  ret void

; <label>:40:                                     ; preds = %37, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  call void @__clang_call_terminate(i8* %42) #12
  unreachable

; <label>:43:                                     ; preds = %23, %9
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node.50"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.24"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %3, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %4, align 8
  %5 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.25"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node.50"* %7, i64 1)
          to label %8 unwind label %49

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.289
  %10 = load i32, i32* @y.290
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %10, 10
  %18 = xor i1 %16, true
  %19 = xor i1 %17, true
  %20 = xor i1 true, true
  %21 = and i1 %18, true
  %22 = and i1 %16, %20
  %23 = and i1 %19, true
  %24 = and i1 %17, %20
  %25 = or i1 %21, %22
  %26 = or i1 %23, %24
  %27 = xor i1 %25, %26
  %28 = or i1 %18, %19
  %29 = xor i1 %28, true
  %30 = or i1 true, %20
  %31 = and i1 %29, %30
  %32 = or i1 %27, %31
  %33 = or i1 %16, %17
  br i1 %32, label %34, label %52

; <label>:34:                                     ; preds = %8, %52
  %35 = load i32, i32* @x.289
  %36 = load i32, i32* @y.290
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %52

; <label>:48:                                     ; preds = %34
  ret void

; <label>:49:                                     ; preds = %2
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  call void @__clang_call_terminate(i8* %51) #12
  unreachable

; <label>:52:                                     ; preds = %34, %8
  br label %34
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.25"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.26"* %6, i64* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %2, align 8
  %3 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4 to %"class.std::allocator.25"*
  ret %"class.std::allocator.25"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node.50"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"struct.std::_Rb_tree_node.50"* %0, %"struct.std::_Rb_tree_node.50"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.50", %"struct.std::_Rb_tree_node.50"* %3, i32 0, i32 1
  %5 = call i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.51"* %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.26"*, i64*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.297
  %6 = load i32, i32* @y.298
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 689514798, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 689514798, label %18
    i32 -1110058875, label %26
    i32 -160321617, label %44
    i32 -1864682152, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1110058875, i32 -1864682152
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %28 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %27, align 8
  store i64* %1, i64** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %27, align 8
  %30 = load i32, i32* @x.297
  %31 = load i32, i32* @y.298
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -160321617, i32 -1864682152
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %47 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %46, align 8
  store i64* %1, i64** %47, align 8
  %48 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %46, align 8
  store i32 -1110058875, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.51"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.51"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.51"* %0, %"struct.__gnu_cxx::__aligned_membuf.51"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.51"*, %"struct.__gnu_cxx::__aligned_membuf.51"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.51"* %3) #3
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.51"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.51"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.51"* %0, %"struct.__gnu_cxx::__aligned_membuf.51"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.51"*, %"struct.__gnu_cxx::__aligned_membuf.51"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.51", %"struct.__gnu_cxx::__aligned_membuf.51"* %3, i32 0, i32 0
  %5 = bitcast [8 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.25"* dereferenceable(1), %"struct.std::_Rb_tree_node.50"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.303
  %7 = load i32, i32* @y.304
  %8 = sub i32 %6, -1358414972
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1358414972
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 593208343, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 593208343, label %20
    i32 1205435571, label %28
    i32 -1800567880, label %63
    i32 -1190931736, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1205435571, i32 -1190931736
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.25"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %29, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %29, align 8
  %33 = bitcast %"class.std::allocator.25"* %32 to %"class.__gnu_cxx::new_allocator.26"*
  %34 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.26"* %33, %"struct.std::_Rb_tree_node.50"* %34, i64 %35)
  %36 = load i32, i32* @x.303
  %37 = load i32, i32* @y.304
  %38 = sub i32 %36, 1408410395
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1408410395
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1800567880, i32 -1190931736
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.25"*, align 8
  %66 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %65, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %65, align 8
  %69 = bitcast %"class.std::allocator.25"* %68 to %"class.__gnu_cxx::new_allocator.26"*
  %70 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.26"* %69, %"struct.std::_Rb_tree_node.50"* %70, i64 %71)
  store i32 1205435571, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.26"*, %"struct.std::_Rb_tree_node.50"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node.50"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.309
  %5 = load i32, i32* @y.310
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -2023492075, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2023492075, label %17
    i32 -266145798, label %25
    i32 -1064878702, label %44
    i32 -1662584843, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -266145798, i32 -1662584843
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %26, align 8
  %27 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %27, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %28)
  %29 = load i32, i32* @x.309
  %30 = load i32, i32* @y.310
  %31 = sub i32 %29, -1028516133
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1028516133
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1064878702, i32 -1662584843
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %46, align 8
  %47 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %47, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %48)
  store i32 -266145798, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.315
  %5 = load i32, i32* @y.316
  %6 = add i32 %4, -1250474465
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1250474465
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 414429968, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 414429968, label %18
    i32 1359185980, label %26
    i32 79507487, label %56
    i32 -69624549, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1359185980, i32 -69624549
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %29 = load i32, i32* @x.315
  %30 = load i32, i32* @y.316
  %31 = sub i32 %29, 1501774550
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1501774550
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 79507487, i32 -69624549
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %58, align 8
  store i32 1359185980, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.0"* %7, %"class.std::vector.0"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %15 = ptrtoint %"class.std::vector.0"* %11 to i64
  %16 = ptrtoint %"class.std::vector.0"* %14 to i64
  %17 = add i64 %15, -4585148312112057894
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -4585148312112057894
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.0"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.0"* %5, %"class.std::vector.0"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"**
  %4 = alloca %"class.std::vector.0"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.325
  %8 = load i32, i32* @y.326
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -428244044, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %129
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -428244044, label %20
    i32 1573649985, label %28
    i32 1491856779, label %48
    i32 729236463, label %49
    i32 -2062704880, label %56
    i32 -1426530826, label %60
    i32 1342234364, label %87
    i32 -1089422606, label %119
    i32 750261862, label %120
    i32 -296620339, label %121
    i32 -1751105110, label %124
  ]

; <label>:19:                                     ; preds = %17
  br label %129

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1573649985, i32 -296620339
  store i32 %27, i32* %16
  br label %129

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %29, %"class.std::vector.0"*** %4
  %30 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %30, %"class.std::vector.0"*** %3
  %31 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %31, align 8
  %32 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %3
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %32, align 8
  %33 = load i32, i32* @x.325
  %34 = load i32, i32* @y.326
  %35 = add i32 %33, 2088117110
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 2088117110
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1491856779, i32 -296620339
  store i32 %47, i32* %16
  br label %129

; <label>:48:                                     ; preds = %17
  store i32 729236463, i32* %16
  br label %129

; <label>:49:                                     ; preds = %17
  %50 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  %51 = load %"class.std::vector.0"*, %"class.std::vector.0"** %50, align 8
  %52 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %3
  %53 = load %"class.std::vector.0"*, %"class.std::vector.0"** %52, align 8
  %54 = icmp ne %"class.std::vector.0"* %51, %53
  %55 = select i1 %54, i32 -2062704880, i32 750261862
  store i32 %55, i32* %16
  br label %129

; <label>:56:                                     ; preds = %17
  %57 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  %58 = load %"class.std::vector.0"*, %"class.std::vector.0"** %57, align 8
  %59 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24) %58) #3
  call void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.0"* %59)
  store i32 -1426530826, i32* %16
  br label %129

; <label>:60:                                     ; preds = %17
  %61 = load i32, i32* @x.325
  %62 = load i32, i32* @y.326
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 1342234364, i32 -1751105110
  store i32 %86, i32* %16
  br label %129

; <label>:87:                                     ; preds = %17
  %88 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  %89 = load %"class.std::vector.0"*, %"class.std::vector.0"** %88, align 8
  %90 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %89, i32 1
  %91 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  store %"class.std::vector.0"* %90, %"class.std::vector.0"** %91, align 8
  %92 = load i32, i32* @x.325
  %93 = load i32, i32* @y.326
  %94 = sub i32 %92, 638775760
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 638775760
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 -1089422606, i32 -1751105110
  store i32 %118, i32* %16
  br label %129

; <label>:119:                                    ; preds = %17
  store i32 729236463, i32* %16
  br label %129

; <label>:120:                                    ; preds = %17
  ret void

; <label>:121:                                    ; preds = %17
  %122 = alloca %"class.std::vector.0"*, align 8
  %123 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %122, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %123, align 8
  store i32 1573649985, i32* %16
  br label %129

; <label>:124:                                    ; preds = %17
  %125 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  %126 = load %"class.std::vector.0"*, %"class.std::vector.0"** %125, align 8
  %127 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %126, i32 1
  %128 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %4
  store %"class.std::vector.0"* %127, %"class.std::vector.0"** %128, align 8
  store i32 1342234364, i32* %16
  br label %129

; <label>:129:                                    ; preds = %124, %121, %119, %87, %60, %56, %49, %48, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.0"*) #4 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.0"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.0"*
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.331
  %3 = load i32, i32* @y.332
  %4 = sub i32 %2, 10826500
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 10826500
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %137

; <label>:16:                                     ; preds = %1, %137
  %17 = alloca %"class.std::vector.0"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %17, align 8
  %20 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %21 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.33"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.33"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load i32*, i32** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.33"*
  %30 = call dereferenceable(1) %"class.std::allocator.34"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.33"* %29) #3
  %31 = load i32, i32* @x.331
  %32 = load i32, i32* @y.332
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %137

; <label>:44:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %24, i32* %28, %"class.std::allocator.34"* dereferenceable(1) %30)
          to label %45 unwind label %47

; <label>:45:                                     ; preds = %44
  %46 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.33"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.33"* %46) #3
  ret void

; <label>:47:                                     ; preds = %44
  %48 = load i32, i32* @x.331
  %49 = load i32, i32* @y.332
  %50 = add i32 %48, 179280643
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 179280643
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %152

; <label>:74:                                     ; preds = %47, %152
  %75 = landingpad { i8*, i32 }
          catch i8* null
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %18, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %19, align 4
  %78 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.33"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.33"* %78) #3
  %79 = load i32, i32* @x.331
  %80 = load i32, i32* @y.332
  %81 = add i32 %79, -413405205
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, -413405205
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %152

; <label>:93:                                     ; preds = %74
  br label %94

; <label>:94:                                     ; preds = %93
  %95 = load i32, i32* @x.331
  %96 = load i32, i32* @y.332
  %97 = sub i32 %95, -1019345674
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -1019345674
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %157

; <label>:121:                                    ; preds = %94, %157
  %122 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %122) #12
  %123 = load i32, i32* @x.331
  %124 = load i32, i32* @y.332
  %125 = sub i32 0, 1
  %126 = add i32 %123, %125
  %127 = sub i32 %123, 1
  %128 = mul i32 %123, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %124, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %157

; <label>:136:                                    ; preds = %121
  unreachable

; <label>:137:                                    ; preds = %16, %1
  %138 = alloca %"class.std::vector.0"*, align 8
  %139 = alloca i8*
  %140 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %138, align 8
  %141 = load %"class.std::vector.0"*, %"class.std::vector.0"** %138, align 8
  %142 = bitcast %"class.std::vector.0"* %141 to %"struct.std::_Vector_base.33"*
  %143 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %142, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %143, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = bitcast %"class.std::vector.0"* %141 to %"struct.std::_Vector_base.33"*
  %147 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %146, i32 0, i32 0
  %148 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %147, i32 0, i32 1
  %149 = load i32*, i32** %148, align 8
  %150 = bitcast %"class.std::vector.0"* %141 to %"struct.std::_Vector_base.33"*
  %151 = call dereferenceable(1) %"class.std::allocator.34"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.33"* %150) #3
  br label %16

; <label>:152:                                    ; preds = %74, %47
  %153 = landingpad { i8*, i32 }
          catch i8* null
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %18, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %19, align 4
  %156 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.33"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.33"* %156) #3
  br label %74

; <label>:157:                                    ; preds = %121, %94
  %158 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %158) #12
  br label %121
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.34"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.34"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.34"* %2, %"class.std::allocator.34"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.34"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.33"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.33"*, align 8
  store %"struct.std::_Vector_base.33"* %0, %"struct.std::_Vector_base.33"** %2, align 8
  %3 = load %"struct.std::_Vector_base.33"*, %"struct.std::_Vector_base.33"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.34"*
  ret %"class.std::allocator.34"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.33"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.337
  %3 = load i32, i32* @y.338
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %83

; <label>:27:                                     ; preds = %1, %83
  %28 = alloca %"struct.std::_Vector_base.33"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base.33"* %0, %"struct.std::_Vector_base.33"** %28, align 8
  %31 = load %"struct.std::_Vector_base.33"*, %"struct.std::_Vector_base.33"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = ptrtoint i32* %37 to i64
  %42 = ptrtoint i32* %40 to i64
  %43 = sub i64 %41, -7988318343043847825
  %44 = sub i64 %43, %42
  %45 = add i64 %44, -7988318343043847825
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 4
  %48 = load i32, i32* @x.337
  %49 = load i32, i32* @y.338
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %83

; <label>:73:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.33"* %31, i32* %34, i64 %47)
          to label %74 unwind label %76

; <label>:74:                                     ; preds = %73
  %75 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75) #3
  ret void

; <label>:76:                                     ; preds = %73
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %29, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %30, align 4
  %80 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80) #3
  br label %81

; <label>:81:                                     ; preds = %76
  %82 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %82) #12
  unreachable

; <label>:83:                                     ; preds = %27, %1
  %84 = alloca %"struct.std::_Vector_base.33"*, align 8
  %85 = alloca i8*
  %86 = alloca i32
  store %"struct.std::_Vector_base.33"* %0, %"struct.std::_Vector_base.33"** %84, align 8
  %87 = load %"struct.std::_Vector_base.33"*, %"struct.std::_Vector_base.33"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %87, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %91, i32 0, i32 2
  %93 = load i32*, i32** %92, align 8
  %94 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %87, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %94, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = ptrtoint i32* %93 to i64
  %98 = ptrtoint i32* %96 to i64
  %99 = add i64 0, -4097384820239795110
  %100 = sub i64 %99, %97
  %101 = sub i64 %100, -4097384820239795110
  %102 = sub i64 0, %97
  %103 = sub i64 0, %98
  %104 = sub i64 %101, %103
  %105 = add i64 %101, %98
  %106 = sub i64 %97, 5594689825741895842
  %107 = sub i64 %106, %98
  %108 = add i64 %107, 5594689825741895842
  %109 = sub i64 %97, %98
  %110 = mul i64 %108, %98
  %111 = shl i64 %97, %98
  %112 = add i64 0, -7803292392307239503
  %113 = sub i64 %112, %97
  %114 = sub i64 %113, -7803292392307239503
  %115 = sub i64 0, %97
  %116 = sub i64 0, %114
  %117 = sub i64 0, %98
  %118 = add i64 %116, %117
  %119 = sub i64 0, %118
  %120 = add i64 %114, %98
  %121 = sub i64 %97, -9202473265857903627
  %122 = sub i64 %121, %98
  %123 = add i64 %122, -9202473265857903627
  %124 = sub i64 %97, %98
  %125 = mul i64 %123, %98
  %126 = sub i64 %97, 9128745504845143434
  %127 = sub i64 %126, %98
  %128 = add i64 %127, 9128745504845143434
  %129 = sub i64 %97, %98
  %130 = shl i64 %128, 4
  %131 = sub i64 0, 4
  %132 = add i64 %128, %131
  %133 = sub i64 %128, 4
  %134 = mul i64 %132, 4
  %135 = sub i64 0, 4
  %136 = add i64 %128, %135
  %137 = sub i64 %128, 4
  %138 = mul i64 %136, 4
  %139 = sdiv exact i64 %128, 4
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #4 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.33"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.33"*
  %6 = alloca %"struct.std::_Vector_base.33"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.33"* %0, %"struct.std::_Vector_base.33"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.33"*, %"struct.std::_Vector_base.33"** %6, align 8
  store %"struct.std::_Vector_base.33"* %9, %"struct.std::_Vector_base.33"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 1756418782, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %87
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1756418782, label %15
    i32 1971458724, label %19
    i32 -448497769, label %47
    i32 -1370419073, label %79
    i32 1746873857, label %80
    i32 557975376, label %81
  ]

; <label>:14:                                     ; preds = %12
  br label %87

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 1971458724, i32 1746873857
  store i32 %18, i32* %11
  br label %87

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.343
  %21 = load i32, i32* @y.344
  %22 = add i32 %20, -1782289271
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1782289271
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -448497769, i32 557975376
  store i32 %46, i32* %11
  br label %87

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.33"*, %"struct.std::_Vector_base.33"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %49 to %"class.std::allocator.34"*
  %51 = load i32*, i32** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.34"* dereferenceable(1) %50, i32* %51, i64 %52)
  %53 = load i32, i32* @x.343
  %54 = load i32, i32* @y.344
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1370419073, i32 557975376
  store i32 %78, i32* %11
  br label %87

; <label>:79:                                     ; preds = %12
  store i32 1746873857, i32* %11
  br label %87

; <label>:80:                                     ; preds = %12
  ret void

; <label>:81:                                     ; preds = %12
  %82 = load volatile %"struct.std::_Vector_base.33"*, %"struct.std::_Vector_base.33"** %5
  %83 = getelementptr inbounds %"struct.std::_Vector_base.33", %"struct.std::_Vector_base.33"* %82, i32 0, i32 0
  %84 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %83 to %"class.std::allocator.34"*
  %85 = load i32*, i32** %7, align 8
  %86 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.34"* dereferenceable(1) %84, i32* %85, i64 %86)
  store i32 -448497769, i32* %11
  br label %87

; <label>:87:                                     ; preds = %81, %79, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.34"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.34"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.34"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.34"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %4, align 8
  %8 = bitcast %"class.std::allocator.34"* %7 to %"class.__gnu_cxx::new_allocator.35"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.35"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.35"*, i32*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.349
  %7 = load i32, i32* @y.350
  %8 = add i32 %6, 564130309
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 564130309
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1265649648, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1265649648, label %20
    i32 2015513246, label %40
    i32 450631206, label %74
    i32 1905116203, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 2015513246, i32 1905116203
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %41, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = bitcast i32* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.349
  %48 = load i32, i32* @y.350
  %49 = sub i32 %47, -1673223790
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1673223790
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 450631206, i32 1905116203
  store i32 %73, i32* %16
  br label %82

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  %77 = alloca i32*, align 8
  %78 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %76, align 8
  store i32* %1, i32** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %76, align 8
  %80 = load i32*, i32** %77, align 8
  %81 = bitcast i32* %80 to i8*
  call void @_ZdlPv(i8* %81) #3
  store i32 2015513246, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.34"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.34"*, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %2, align 8
  %3 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %2, align 8
  %4 = bitcast %"class.std::allocator.34"* %3 to %"class.__gnu_cxx::new_allocator.35"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.35"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.35"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.353
  %5 = load i32, i32* @y.354
  %6 = add i32 %4, -1789361981
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1789361981
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -150320925, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -150320925, label %18
    i32 -82269214, label %26
    i32 -1559412071, label %44
    i32 585960277, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -82269214, i32 585960277
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %27, align 8
  %29 = load i32, i32* @x.353
  %30 = load i32, i32* @y.354
  %31 = sub i32 %29, 1853825069
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1853825069
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1559412071, i32 585960277
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %46, align 8
  store i32 -82269214, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"*, %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %4
  %11 = alloca i32
  store i32 1012916491, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %131
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1012916491, label %15
    i32 166782211, label %19
    i32 -2071548833, label %46
    i32 1851877331, label %79
    i32 1314261332, label %80
    i32 -187856990, label %108
    i32 1386257523, label %123
    i32 1973242076, label %124
    i32 -468429288, label %130
  ]

; <label>:14:                                     ; preds = %12
  br label %131

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %17 = icmp ne %"class.std::vector.0"* %16, null
  %18 = select i1 %17, i32 166782211, i32 1314261332
  store i32 %18, i32* %11
  br label %131

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.355
  %21 = load i32, i32* @y.356
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 -2071548833, i32 1973242076
  store i32 %45, i32* %11
  br label %131

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %48 to %"class.std::allocator"*
  %50 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %51 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator"* dereferenceable(1) %49, %"class.std::vector.0"* %50, i64 %51)
  %52 = load i32, i32* @x.355
  %53 = load i32, i32* @y.356
  %54 = add i32 %52, -242973391
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -242973391
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1851877331, i32 1973242076
  store i32 %78, i32* %11
  br label %131

; <label>:79:                                     ; preds = %12
  store i32 1314261332, i32* %11
  br label %131

; <label>:80:                                     ; preds = %12
  %81 = load i32, i32* @x.355
  %82 = load i32, i32* @y.356
  %83 = add i32 %81, 1159145933
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 1159145933
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 false, true
  %94 = and i1 %91, false
  %95 = and i1 %89, %93
  %96 = and i1 %92, false
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 false, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 -187856990, i32 -468429288
  store i32 %107, i32* %11
  br label %131

; <label>:108:                                    ; preds = %12
  %109 = load i32, i32* @x.355
  %110 = load i32, i32* @y.356
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 1386257523, i32 -468429288
  store i32 %122, i32* %11
  br label %131

; <label>:123:                                    ; preds = %12
  ret void

; <label>:124:                                    ; preds = %12
  %125 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %126 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %125, i32 0, i32 0
  %127 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %126 to %"class.std::allocator"*
  %128 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %129 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator"* dereferenceable(1) %127, %"class.std::vector.0"* %128, i64 %129)
  store i32 -2071548833, i32* %11
  br label %131

; <label>:130:                                    ; preds = %12
  store i32 -187856990, i32* %11
  br label %131

; <label>:131:                                    ; preds = %130, %124, %108, %80, %79, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::vector.0"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %9 = bitcast %"class.std::vector.0"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.363
  %5 = load i32, i32* @y.364
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1097458439, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1097458439, label %17
    i32 -102190592, label %37
    i32 -827095680, label %56
    i32 -973125747, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -102190592, i32 -973125747
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %38, align 8
  %39 = load %"class.std::allocator"*, %"class.std::allocator"** %38, align 8
  %40 = bitcast %"class.std::allocator"* %39 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator"* %40) #3
  %41 = load i32, i32* @x.363
  %42 = load i32, i32* @y.364
  %43 = add i32 %41, 13497149
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 13497149
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -827095680, i32 -973125747
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %58, align 8
  %59 = load %"class.std::allocator"*, %"class.std::allocator"** %58, align 8
  %60 = bitcast %"class.std::allocator"* %59 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator"* %60) #3
  store i32 -102190592, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EEC2Ev(%"struct.std::_Vector_base.2"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.367
  %5 = load i32, i32* @y.368
  %6 = add i32 %4, 643856731
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 643856731
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1035051438, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1035051438, label %18
    i32 -526180723, label %38
    i32 -593486810, label %57
    i32 880954087, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -526180723, i32 880954087
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.2"*, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %39, align 8
  %40 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %41)
  %42 = load i32, i32* @x.367
  %43 = load i32, i32* @y.368
  %44 = add i32 %42, 1436760507
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1436760507
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -593486810, i32 880954087
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base.2"*, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %59, align 8
  %60 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %60, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %61)
  store i32 -526180723, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.369
  %5 = load i32, i32* @y.370
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2146779774, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %67
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2146779774, label %17
    i32 1768248843, label %25
    i32 364249330, label %59
    i32 -1679377445, label %60
  ]

; <label>:16:                                     ; preds = %14
  br label %67

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1768248843, i32 -1679377445
  store i32 %24, i32* %13
  br label %67

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %27 to %"class.std::allocator.3"*
  call void @_ZNSaISt3setISt4pairIiiESt4lessIS1_ESaIS1_EEEC2Ev(%"class.std::allocator.3"* %28) #3
  %29 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %27, i32 0, i32 0
  store %"class.std::set"* null, %"class.std::set"** %29, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %27, i32 0, i32 1
  store %"class.std::set"* null, %"class.std::set"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %27, i32 0, i32 2
  store %"class.std::set"* null, %"class.std::set"** %31, align 8
  %32 = load i32, i32* @x.369
  %33 = load i32, i32* @y.370
  %34 = add i32 %32, 613501508
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 613501508
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 364249330, i32 -1679377445
  store i32 %58, i32* %13
  br label %67

; <label>:59:                                     ; preds = %14
  ret void

; <label>:60:                                     ; preds = %14
  %61 = alloca %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %61, align 8
  %62 = load %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %61, align 8
  %63 = bitcast %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %62 to %"class.std::allocator.3"*
  call void @_ZNSaISt3setISt4pairIiiESt4lessIS1_ESaIS1_EEEC2Ev(%"class.std::allocator.3"* %63) #3
  %64 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %62, i32 0, i32 0
  store %"class.std::set"* null, %"class.std::set"** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %62, i32 0, i32 1
  store %"class.std::set"* null, %"class.std::set"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %62, i32 0, i32 2
  store %"class.std::set"* null, %"class.std::set"** %66, align 8
  store i32 1768248843, i32* %13
  br label %67

; <label>:67:                                     ; preds = %60, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3setISt4pairIiiESt4lessIS1_ESaIS1_EEEC2Ev(%"class.std::allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %2, align 8
  %3 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %2, align 8
  %4 = bitcast %"class.std::allocator.3"* %3 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.4"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.4"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3setISt4pairIiiESt4lessIS2_ESaIS2_EES6_EvT_S8_RSaIT0_E(%"class.std::set"*, %"class.std::set"*, %"class.std::allocator.3"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.375
  %7 = load i32, i32* @y.376
  %8 = add i32 %6, -886069726
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -886069726
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 662750730, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 662750730, label %20
    i32 1206250826, label %40
    i32 702537823, label %60
    i32 -1822099306, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1206250826, i32 -1822099306
  store i32 %39, i32* %16
  br label %67

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::set"*, align 8
  %42 = alloca %"class.std::set"*, align 8
  %43 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %41, align 8
  store %"class.std::set"* %1, %"class.std::set"** %42, align 8
  store %"class.std::allocator.3"* %2, %"class.std::allocator.3"** %43, align 8
  %44 = load %"class.std::set"*, %"class.std::set"** %41, align 8
  %45 = load %"class.std::set"*, %"class.std::set"** %42, align 8
  call void @_ZSt8_DestroyIPSt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEvT_S8_(%"class.std::set"* %44, %"class.std::set"* %45)
  %46 = load i32, i32* @x.375
  %47 = load i32, i32* @y.376
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 702537823, i32 -1822099306
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca %"class.std::set"*, align 8
  %63 = alloca %"class.std::set"*, align 8
  %64 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %62, align 8
  store %"class.std::set"* %1, %"class.std::set"** %63, align 8
  store %"class.std::allocator.3"* %2, %"class.std::allocator.3"** %64, align 8
  %65 = load %"class.std::set"*, %"class.std::set"** %62, align 8
  %66 = load %"class.std::set"*, %"class.std::set"** %63, align 8
  call void @_ZSt8_DestroyIPSt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEvT_S8_(%"class.std::set"* %65, %"class.std::set"* %66)
  store i32 1206250826, i32* %16
  br label %67

; <label>:67:                                     ; preds = %61, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.2"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.3"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.377
  %6 = load i32, i32* @y.378
  %7 = add i32 %5, 1923066581
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1923066581
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1065952015, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1065952015, label %19
    i32 -1354198323, label %27
    i32 -722961033, label %58
    i32 -291508892, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1354198323, i32 -291508892
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.2"*, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %28, align 8
  %29 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %30 to %"class.std::allocator.3"*
  store %"class.std::allocator.3"* %31, %"class.std::allocator.3"** %2
  %32 = load i32, i32* @x.377
  %33 = load i32, i32* @y.378
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -722961033, i32 -291508892
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.3"*, %"class.std::allocator.3"** %2
  ret %"class.std::allocator.3"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.2"*, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %61, align 8
  %62 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %63 to %"class.std::allocator.3"*
  store i32 -1354198323, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EED2Ev(%"struct.std::_Vector_base.2"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.2"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %2, align 8
  %5 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::set"*, %"class.std::set"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::set"*, %"class.std::set"** %13, align 8
  %15 = ptrtoint %"class.std::set"* %11 to i64
  %16 = ptrtoint %"class.std::set"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 48
  invoke void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE13_M_deallocateEPS6_m(%"struct.std::_Vector_base.2"* %5, %"class.std::set"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.379
  %25 = load i32, i32* @y.380
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %71

; <label>:49:                                     ; preds = %23, %71
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %53) #3
  %54 = load i32, i32* @x.379
  %55 = load i32, i32* @y.380
  %56 = add i32 %54, -1351435213
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -1351435213
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %71

; <label>:68:                                     ; preds = %49
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %70) #12
  unreachable

; <label>:71:                                     ; preds = %49, %23
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %3, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %4, align 4
  %75 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %75) #3
  br label %49
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEvT_S8_(%"class.std::set"*, %"class.std::set"*) #0 comdat {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %5 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %6 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3setISt4pairIiiESt4lessIS4_ESaIS4_EEEEvT_SA_(%"class.std::set"* %5, %"class.std::set"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3setISt4pairIiiESt4lessIS4_ESaIS4_EEEEvT_SA_(%"class.std::set"*, %"class.std::set"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::set"**
  %5 = alloca %"class.std::set"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.383
  %9 = load i32, i32* @y.384
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1790966536, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %145
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1790966536, label %21
    i32 -1925779529, label %41
    i32 -1197737456, label %73
    i32 762411354, label %74
    i32 -1255453150, label %90
    i32 -1597619984, label %123
    i32 -109705273, label %126
    i32 1950034739, label %130
    i32 925375521, label %135
    i32 -1913177315, label %136
    i32 -1234093915, label %139
  ]

; <label>:20:                                     ; preds = %18
  br label %145

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1925779529, i32 -1913177315
  store i32 %40, i32* %17
  br label %145

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::set"*, align 8
  store %"class.std::set"** %42, %"class.std::set"*** %5
  %43 = alloca %"class.std::set"*, align 8
  store %"class.std::set"** %43, %"class.std::set"*** %4
  %44 = load volatile %"class.std::set"**, %"class.std::set"*** %5
  store %"class.std::set"* %0, %"class.std::set"** %44, align 8
  %45 = load volatile %"class.std::set"**, %"class.std::set"*** %4
  store %"class.std::set"* %1, %"class.std::set"** %45, align 8
  %46 = load i32, i32* @x.383
  %47 = load i32, i32* @y.384
  %48 = add i32 %46, -1065155228
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1065155228
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1197737456, i32 -1913177315
  store i32 %72, i32* %17
  br label %145

; <label>:73:                                     ; preds = %18
  store i32 762411354, i32* %17
  br label %145

; <label>:74:                                     ; preds = %18
  %75 = load i32, i32* @x.383
  %76 = load i32, i32* @y.384
  %77 = add i32 %75, -90187549
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -90187549
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  %89 = select i1 %87, i32 -1255453150, i32 -1234093915
  store i32 %89, i32* %17
  br label %145

; <label>:90:                                     ; preds = %18
  %91 = load volatile %"class.std::set"**, %"class.std::set"*** %5
  %92 = load %"class.std::set"*, %"class.std::set"** %91, align 8
  %93 = load volatile %"class.std::set"**, %"class.std::set"*** %4
  %94 = load %"class.std::set"*, %"class.std::set"** %93, align 8
  %95 = icmp ne %"class.std::set"* %92, %94
  store i1 %95, i1* %3
  %96 = load i32, i32* @x.383
  %97 = load i32, i32* @y.384
  %98 = sub i32 %96, -417927594
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -417927594
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 -1597619984, i32 -1234093915
  store i32 %122, i32* %17
  br label %145

; <label>:123:                                    ; preds = %18
  %124 = load volatile i1, i1* %3
  %125 = select i1 %124, i32 -109705273, i32 925375521
  store i32 %125, i32* %17
  br label %145

; <label>:126:                                    ; preds = %18
  %127 = load volatile %"class.std::set"**, %"class.std::set"*** %5
  %128 = load %"class.std::set"*, %"class.std::set"** %127, align 8
  %129 = call %"class.std::set"* @_ZSt11__addressofISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEPT_RS7_(%"class.std::set"* dereferenceable(48) %128) #3
  call void @_ZSt8_DestroyISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEvPT_(%"class.std::set"* %129)
  store i32 1950034739, i32* %17
  br label %145

; <label>:130:                                    ; preds = %18
  %131 = load volatile %"class.std::set"**, %"class.std::set"*** %5
  %132 = load %"class.std::set"*, %"class.std::set"** %131, align 8
  %133 = getelementptr inbounds %"class.std::set", %"class.std::set"* %132, i32 1
  %134 = load volatile %"class.std::set"**, %"class.std::set"*** %5
  store %"class.std::set"* %133, %"class.std::set"** %134, align 8
  store i32 762411354, i32* %17
  br label %145

; <label>:135:                                    ; preds = %18
  ret void

; <label>:136:                                    ; preds = %18
  %137 = alloca %"class.std::set"*, align 8
  %138 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %137, align 8
  store %"class.std::set"* %1, %"class.std::set"** %138, align 8
  store i32 -1925779529, i32* %17
  br label %145

; <label>:139:                                    ; preds = %18
  %140 = load volatile %"class.std::set"**, %"class.std::set"*** %5
  %141 = load %"class.std::set"*, %"class.std::set"** %140, align 8
  %142 = load volatile %"class.std::set"**, %"class.std::set"*** %4
  %143 = load %"class.std::set"*, %"class.std::set"** %142, align 8
  %144 = icmp ne %"class.std::set"* %141, %143
  store i32 -1255453150, i32* %17
  br label %145

; <label>:145:                                    ; preds = %139, %136, %130, %126, %123, %90, %74, %73, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEvPT_(%"class.std::set"*) #4 comdat {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  call void @_ZNSt3setISt4pairIiiESt4lessIS1_ESaIS1_EED2Ev(%"class.std::set"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::set"* @_ZSt11__addressofISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEPT_RS7_(%"class.std::set"* dereferenceable(48)) #4 comdat {
  %2 = alloca %"class.std::set"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.387
  %6 = load i32, i32* @y.388
  %7 = sub i32 %5, 805716276
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 805716276
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2009436688, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2009436688, label %19
    i32 -1910846777, label %27
    i32 1084283498, label %47
    i32 1111594274, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1910846777, i32 1111594274
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %28, align 8
  %29 = load %"class.std::set"*, %"class.std::set"** %28, align 8
  %30 = bitcast %"class.std::set"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::set"*
  store %"class.std::set"* %31, %"class.std::set"** %2
  %32 = load i32, i32* @x.387
  %33 = load i32, i32* @y.388
  %34 = add i32 %32, 210166926
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 210166926
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1084283498, i32 1111594274
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::set"*, %"class.std::set"** %2
  ret %"class.std::set"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %50, align 8
  %51 = load %"class.std::set"*, %"class.std::set"** %50, align 8
  %52 = bitcast %"class.std::set"* %51 to i8*
  %53 = bitcast i8* %52 to %"class.std::set"*
  store i32 -1910846777, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setISt4pairIiiESt4lessIS1_ESaIS1_EED2Ev(%"class.std::set"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev(%"class.std::_Rb_tree.37"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev(%"class.std::_Rb_tree.37"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.391
  %3 = load i32, i32* @y.392
  %4 = sub i32 %2, 881749068
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 881749068
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %140

; <label>:28:                                     ; preds = %1, %140
  %29 = alloca %"class.std::_Rb_tree.37"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %29, align 8
  %32 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %29, align 8
  %33 = call %"struct.std::_Rb_tree_node.52"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.37"* %32) #3
  %34 = load i32, i32* @x.391
  %35 = load i32, i32* @y.392
  %36 = sub i32 %34, 643020517
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 643020517
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %140

; <label>:60:                                     ; preds = %28
  invoke void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"* %32, %"struct.std::_Rb_tree_node.52"* %33)
          to label %61 unwind label %104

; <label>:61:                                     ; preds = %60
  %62 = load i32, i32* @x.391
  %63 = load i32, i32* @y.392
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %146

; <label>:87:                                     ; preds = %61, %146
  %88 = getelementptr inbounds %"class.std::_Rb_tree.37", %"class.std::_Rb_tree.37"* %32, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %88) #3
  %89 = load i32, i32* @x.391
  %90 = load i32, i32* @y.392
  %91 = sub i32 %89, 1100009958
  %92 = sub i32 %91, 1
  %93 = add i32 %92, 1100009958
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %146

; <label>:103:                                    ; preds = %87
  ret void

; <label>:104:                                    ; preds = %60
  %105 = load i32, i32* @x.391
  %106 = load i32, i32* @y.392
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %148

; <label>:118:                                    ; preds = %104, %148
  %119 = landingpad { i8*, i32 }
          catch i8* null
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %30, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %31, align 4
  %122 = getelementptr inbounds %"class.std::_Rb_tree.37", %"class.std::_Rb_tree.37"* %32, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %122) #3
  %123 = load i32, i32* @x.391
  %124 = load i32, i32* @y.392
  %125 = add i32 %123, -197124762
  %126 = sub i32 %125, 1
  %127 = sub i32 %126, -197124762
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  br i1 %135, label %137, label %148

; <label>:137:                                    ; preds = %118
  br label %138

; <label>:138:                                    ; preds = %137
  %139 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %139) #12
  unreachable

; <label>:140:                                    ; preds = %28, %1
  %141 = alloca %"class.std::_Rb_tree.37"*, align 8
  %142 = alloca i8*
  %143 = alloca i32
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %141, align 8
  %144 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %141, align 8
  %145 = call %"struct.std::_Rb_tree_node.52"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.37"* %144) #3
  br label %28

; <label>:146:                                    ; preds = %87, %61
  %147 = getelementptr inbounds %"class.std::_Rb_tree.37", %"class.std::_Rb_tree.37"* %32, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %147) #3
  br label %87

; <label>:148:                                    ; preds = %118, %104
  %149 = landingpad { i8*, i32 }
          catch i8* null
  %150 = extractvalue { i8*, i32 } %149, 0
  store i8* %150, i8** %30, align 8
  %151 = extractvalue { i8*, i32 } %149, 1
  store i32 %151, i32* %31, align 4
  %152 = getelementptr inbounds %"class.std::_Rb_tree.37", %"class.std::_Rb_tree.37"* %32, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %152) #3
  br label %118
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"*, %"struct.std::_Rb_tree_node.52"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.37"*
  %4 = alloca %"class.std::_Rb_tree.37"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %4, align 8
  store %"struct.std::_Rb_tree_node.52"* %1, %"struct.std::_Rb_tree_node.52"** %5, align 8
  %7 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %4, align 8
  store %"class.std::_Rb_tree.37"* %7, %"class.std::_Rb_tree.37"** %3
  %8 = alloca i32
  store i32 532857117, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %73
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 532857117, label %12
    i32 1556994968, label %16
    i32 1810797703, label %27
    i32 -1435580023, label %55
    i32 904796644, label %71
    i32 -1905658076, label %72
  ]

; <label>:11:                                     ; preds = %9
  br label %73

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %5, align 8
  %14 = icmp ne %"struct.std::_Rb_tree_node.52"* %13, null
  %15 = select i1 %14, i32 1556994968, i32 1810797703
  store i32 %15, i32* %8
  br label %73

; <label>:16:                                     ; preds = %9
  %17 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %5, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node.52"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = call %"struct.std::_Rb_tree_node.52"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %18) #3
  %20 = load volatile %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %3
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"* %20, %"struct.std::_Rb_tree_node.52"* %19)
  %21 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %5, align 8
  %22 = bitcast %"struct.std::_Rb_tree_node.52"* %21 to %"struct.std::_Rb_tree_node_base"*
  %23 = call %"struct.std::_Rb_tree_node.52"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %22) #3
  store %"struct.std::_Rb_tree_node.52"* %23, %"struct.std::_Rb_tree_node.52"** %6, align 8
  %24 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %5, align 8
  %25 = load volatile %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %3
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"* %25, %"struct.std::_Rb_tree_node.52"* %24) #3
  %26 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %6, align 8
  store %"struct.std::_Rb_tree_node.52"* %26, %"struct.std::_Rb_tree_node.52"** %5, align 8
  store i32 532857117, i32* %8
  br label %73

; <label>:27:                                     ; preds = %9
  %28 = load i32, i32* @x.393
  %29 = load i32, i32* @y.394
  %30 = add i32 %28, 2008863203
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 2008863203
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1435580023, i32 -1905658076
  store i32 %54, i32* %8
  br label %73

; <label>:55:                                     ; preds = %9
  %56 = load i32, i32* @x.393
  %57 = load i32, i32* @y.394
  %58 = sub i32 %56, -716637920
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -716637920
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 904796644, i32 -1905658076
  store i32 %70, i32* %8
  br label %73

; <label>:71:                                     ; preds = %9
  ret void

; <label>:72:                                     ; preds = %9
  store i32 -1435580023, i32* %8
  br label %73

; <label>:73:                                     ; preds = %72, %55, %27, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.52"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.37"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.37"*, align 8
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %2, align 8
  %3 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.37", %"class.std::_Rb_tree.37"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.52"*
  ret %"struct.std::_Rb_tree_node.52"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.397
  %5 = load i32, i32* @y.398
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1880234420, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1880234420, label %17
    i32 -935600616, label %25
    i32 -872258419, label %44
    i32 687774005, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -935600616, i32 687774005
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"** %26, align 8
  %27 = load %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %27 to %"class.std::allocator.38"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIiiEEED2Ev(%"class.std::allocator.38"* %28) #3
  %29 = load i32, i32* @x.397
  %30 = load i32, i32* @y.398
  %31 = add i32 %29, 1611735603
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1611735603
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -872258419, i32 687774005
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"** %46, align 8
  %47 = load %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"** %46, align 8
  %48 = bitcast %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %47 to %"class.std::allocator.38"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIiiEEED2Ev(%"class.std::allocator.38"* %48) #3
  store i32 -935600616, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.52"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.52"*
  ret %"struct.std::_Rb_tree_node.52"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.52"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.52"*
  ret %"struct.std::_Rb_tree_node.52"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"*, %"struct.std::_Rb_tree_node.52"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.403
  %6 = load i32, i32* @y.404
  %7 = add i32 %5, 1803547013
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1803547013
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -966847777, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -966847777, label %19
    i32 -1634851584, label %39
    i32 47868809, label %59
    i32 -1364490856, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1634851584, i32 -1364490856
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.37"*, align 8
  %41 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %40, align 8
  store %"struct.std::_Rb_tree_node.52"* %1, %"struct.std::_Rb_tree_node.52"** %41, align 8
  %42 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %40, align 8
  %43 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %41, align 8
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"* %42, %"struct.std::_Rb_tree_node.52"* %43) #3
  %44 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %41, align 8
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"* %42, %"struct.std::_Rb_tree_node.52"* %44) #3
  %45 = load i32, i32* @x.403
  %46 = load i32, i32* @y.404
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 47868809, i32 -1364490856
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::_Rb_tree.37"*, align 8
  %62 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %61, align 8
  store %"struct.std::_Rb_tree_node.52"* %1, %"struct.std::_Rb_tree_node.52"** %62, align 8
  %63 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %61, align 8
  %64 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %62, align 8
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"* %63, %"struct.std::_Rb_tree_node.52"* %64) #3
  %65 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %62, align 8
  call void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"* %63, %"struct.std::_Rb_tree_node.52"* %65) #3
  store i32 -1634851584, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"*, %"struct.std::_Rb_tree_node.52"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.405
  %4 = load i32, i32* @y.406
  %5 = sub i32 %3, 663600633
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 663600633
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %86

; <label>:17:                                     ; preds = %2, %86
  %18 = alloca %"class.std::_Rb_tree.37"*, align 8
  %19 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %18, align 8
  store %"struct.std::_Rb_tree_node.52"* %1, %"struct.std::_Rb_tree_node.52"** %19, align 8
  %20 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %18, align 8
  %21 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.37"* %20) #3
  %22 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %19, align 8
  %23 = load i32, i32* @x.405
  %24 = load i32, i32* @y.406
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %86

; <label>:48:                                     ; preds = %17
  %49 = invoke %"struct.std::pair.54"* @_ZNSt13_Rb_tree_nodeISt4pairIiiEE9_M_valptrEv(%"struct.std::_Rb_tree_node.52"* %22)
          to label %50 unwind label %83

; <label>:50:                                     ; preds = %48
  %51 = load i32, i32* @x.405
  %52 = load i32, i32* @y.406
  %53 = add i32 %51, 356697256
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 356697256
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %92

; <label>:65:                                     ; preds = %50, %92
  %66 = load i32, i32* @x.405
  %67 = load i32, i32* @y.406
  %68 = sub i32 %66, -132706289
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -132706289
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %92

; <label>:80:                                     ; preds = %65
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIiiEEEE7destroyIS2_EEvRS4_PT_(%"class.std::allocator.38"* dereferenceable(1) %21, %"struct.std::pair.54"* %49)
          to label %81 unwind label %83

; <label>:81:                                     ; preds = %80
  %82 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %19, align 8
  ret void

; <label>:83:                                     ; preds = %80, %48
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  call void @__clang_call_terminate(i8* %85) #12
  unreachable

; <label>:86:                                     ; preds = %17, %2
  %87 = alloca %"class.std::_Rb_tree.37"*, align 8
  %88 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %87, align 8
  store %"struct.std::_Rb_tree_node.52"* %1, %"struct.std::_Rb_tree_node.52"** %88, align 8
  %89 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %87, align 8
  %90 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.37"* %89) #3
  %91 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %88, align 8
  br label %17

; <label>:92:                                     ; preds = %65, %50
  br label %65
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.37"*, %"struct.std::_Rb_tree_node.52"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.407
  %4 = load i32, i32* @y.408
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %41

; <label>:16:                                     ; preds = %2, %41
  %17 = alloca %"class.std::_Rb_tree.37"*, align 8
  %18 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %17, align 8
  store %"struct.std::_Rb_tree_node.52"* %1, %"struct.std::_Rb_tree_node.52"** %18, align 8
  %19 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %17, align 8
  %20 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.37"* %19) #3
  %21 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %18, align 8
  %22 = load i32, i32* @x.407
  %23 = load i32, i32* @y.408
  %24 = sub i32 %22, 349518979
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 349518979
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %41

; <label>:36:                                     ; preds = %16
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIiiEEEE10deallocateERS4_PS3_m(%"class.std::allocator.38"* dereferenceable(1) %20, %"struct.std::_Rb_tree_node.52"* %21, i64 1)
          to label %37 unwind label %38

; <label>:37:                                     ; preds = %36
  ret void

; <label>:38:                                     ; preds = %36
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  call void @__clang_call_terminate(i8* %40) #12
  unreachable

; <label>:41:                                     ; preds = %16, %2
  %42 = alloca %"class.std::_Rb_tree.37"*, align 8
  %43 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %42, align 8
  store %"struct.std::_Rb_tree_node.52"* %1, %"struct.std::_Rb_tree_node.52"** %43, align 8
  %44 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %42, align 8
  %45 = call dereferenceable(1) %"class.std::allocator.38"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.37"* %44) #3
  %46 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %43, align 8
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIiiEEEE7destroyIS2_EEvRS4_PT_(%"class.std::allocator.38"* dereferenceable(1), %"struct.std::pair.54"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.38"*, align 8
  %4 = alloca %"struct.std::pair.54"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %3, align 8
  store %"struct.std::pair.54"* %1, %"struct.std::pair.54"** %4, align 8
  %5 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %3, align 8
  %6 = bitcast %"class.std::allocator.38"* %5 to %"class.__gnu_cxx::new_allocator.39"*
  %7 = load %"struct.std::pair.54"*, %"struct.std::pair.54"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.39"* %6, %"struct.std::pair.54"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.38"* @_ZNSt8_Rb_treeISt4pairIiiES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.37"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.37"*, align 8
  store %"class.std::_Rb_tree.37"* %0, %"class.std::_Rb_tree.37"** %2, align 8
  %3 = load %"class.std::_Rb_tree.37"*, %"class.std::_Rb_tree.37"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.37", %"class.std::_Rb_tree.37"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl"* %4 to %"class.std::allocator.38"*
  ret %"class.std::allocator.38"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.54"* @_ZNSt13_Rb_tree_nodeISt4pairIiiEE9_M_valptrEv(%"struct.std::_Rb_tree_node.52"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.54"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.413
  %6 = load i32, i32* @y.414
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 259483000, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 259483000, label %18
    i32 -686818874, label %26
    i32 119529170, label %58
    i32 880463808, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -686818874, i32 880463808
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  store %"struct.std::_Rb_tree_node.52"* %0, %"struct.std::_Rb_tree_node.52"** %27, align 8
  %28 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node.52", %"struct.std::_Rb_tree_node.52"* %28, i32 0, i32 1
  %30 = call %"struct.std::pair.54"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIiiEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.53"* %29) #3
  store %"struct.std::pair.54"* %30, %"struct.std::pair.54"** %2
  %31 = load i32, i32* @x.413
  %32 = load i32, i32* @y.414
  %33 = sub i32 %31, 468707184
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 468707184
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 119529170, i32 880463808
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"struct.std::pair.54"*, %"struct.std::pair.54"** %2
  ret %"struct.std::pair.54"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  store %"struct.std::_Rb_tree_node.52"* %0, %"struct.std::_Rb_tree_node.52"** %61, align 8
  %62 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Rb_tree_node.52", %"struct.std::_Rb_tree_node.52"* %62, i32 0, i32 1
  %64 = call %"struct.std::pair.54"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIiiEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.53"* %63) #3
  store i32 -686818874, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.39"*, %"struct.std::pair.54"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  %4 = alloca %"struct.std::pair.54"*, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %3, align 8
  store %"struct.std::pair.54"* %1, %"struct.std::pair.54"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %3, align 8
  %6 = load %"struct.std::pair.54"*, %"struct.std::pair.54"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.54"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIiiEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.53"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.53"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.53"* %0, %"struct.__gnu_cxx::__aligned_membuf.53"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.53"*, %"struct.__gnu_cxx::__aligned_membuf.53"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIiiEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.53"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.54"*
  ret %"struct.std::pair.54"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIiiEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.53"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.53"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.53"* %0, %"struct.__gnu_cxx::__aligned_membuf.53"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.53"*, %"struct.__gnu_cxx::__aligned_membuf.53"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.53", %"struct.__gnu_cxx::__aligned_membuf.53"* %3, i32 0, i32 0
  %5 = bitcast [8 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIiiEEEE10deallocateERS4_PS3_m(%"class.std::allocator.38"* dereferenceable(1), %"struct.std::_Rb_tree_node.52"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.38"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %4, align 8
  store %"struct.std::_Rb_tree_node.52"* %1, %"struct.std::_Rb_tree_node.52"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %4, align 8
  %8 = bitcast %"class.std::allocator.38"* %7 to %"class.__gnu_cxx::new_allocator.39"*
  %9 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.39"* %8, %"struct.std::_Rb_tree_node.52"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.39"*, %"struct.std::_Rb_tree_node.52"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.52"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %4, align 8
  store %"struct.std::_Rb_tree_node.52"* %1, %"struct.std::_Rb_tree_node.52"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node.52"*, %"struct.std::_Rb_tree_node.52"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node.52"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIiiEEED2Ev(%"class.std::allocator.38"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.425
  %5 = load i32, i32* @y.426
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1594826099, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1594826099, label %17
    i32 -1182220450, label %25
    i32 472843991, label %55
    i32 -829902749, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1182220450, i32 -829902749
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.38"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %26, align 8
  %27 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %26, align 8
  %28 = bitcast %"class.std::allocator.38"* %27 to %"class.__gnu_cxx::new_allocator.39"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEED2Ev(%"class.__gnu_cxx::new_allocator.39"* %28) #3
  %29 = load i32, i32* @x.425
  %30 = load i32, i32* @y.426
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 472843991, i32 -829902749
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.std::allocator.38"*, align 8
  store %"class.std::allocator.38"* %0, %"class.std::allocator.38"** %57, align 8
  %58 = load %"class.std::allocator.38"*, %"class.std::allocator.38"** %57, align 8
  %59 = bitcast %"class.std::allocator.38"* %58 to %"class.__gnu_cxx::new_allocator.39"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEED2Ev(%"class.__gnu_cxx::new_allocator.39"* %59) #3
  store i32 -1182220450, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEED2Ev(%"class.__gnu_cxx::new_allocator.39"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.39"*, align 8
  store %"class.__gnu_cxx::new_allocator.39"* %0, %"class.__gnu_cxx::new_allocator.39"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.39"*, %"class.__gnu_cxx::new_allocator.39"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE13_M_deallocateEPS6_m(%"struct.std::_Vector_base.2"*, %"class.std::set"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.2"*
  %6 = alloca i64*
  %7 = alloca %"class.std::set"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.429
  %11 = load i32, i32* @y.430
  %12 = sub i32 %10, 854672999
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 854672999
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -818176329, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %126
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -818176329, label %24
    i32 -111262489, label %44
    i32 1346398724, label %69
    i32 862859422, label %72
    i32 1922858123, label %87
    i32 721988740, label %109
    i32 -1953215865, label %110
    i32 -2005797116, label %111
    i32 -317779541, label %118
  ]

; <label>:23:                                     ; preds = %21
  br label %126

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -111262489, i32 -2005797116
  store i32 %43, i32* %20
  br label %126

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.2"*, align 8
  %46 = alloca %"class.std::set"*, align 8
  store %"class.std::set"** %46, %"class.std::set"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %45, align 8
  %48 = load volatile %"class.std::set"**, %"class.std::set"*** %7
  store %"class.std::set"* %1, %"class.std::set"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %45, align 8
  store %"struct.std::_Vector_base.2"* %50, %"struct.std::_Vector_base.2"** %5
  %51 = load volatile %"class.std::set"**, %"class.std::set"*** %7
  %52 = load %"class.std::set"*, %"class.std::set"** %51, align 8
  %53 = icmp ne %"class.std::set"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.429
  %55 = load i32, i32* @y.430
  %56 = sub i32 %54, 2108350808
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 2108350808
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 1346398724, i32 -2005797116
  store i32 %68, i32* %20
  br label %126

; <label>:69:                                     ; preds = %21
  %70 = load volatile i1, i1* %4
  %71 = select i1 %70, i32 862859422, i32 -1953215865
  store i32 %71, i32* %20
  br label %126

; <label>:72:                                     ; preds = %21
  %73 = load i32, i32* @x.429
  %74 = load i32, i32* @y.430
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 1922858123, i32 -317779541
  store i32 %86, i32* %20
  br label %126

; <label>:87:                                     ; preds = %21
  %88 = load volatile %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %5
  %89 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %88, i32 0, i32 0
  %90 = bitcast %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %89 to %"class.std::allocator.3"*
  %91 = load volatile %"class.std::set"**, %"class.std::set"*** %7
  %92 = load %"class.std::set"*, %"class.std::set"** %91, align 8
  %93 = load volatile i64*, i64** %6
  %94 = load i64, i64* %93, align 8
  call void @_ZNSt16allocator_traitsISaISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEE10deallocateERS7_PS6_m(%"class.std::allocator.3"* dereferenceable(1) %90, %"class.std::set"* %92, i64 %94)
  %95 = load i32, i32* @x.429
  %96 = load i32, i32* @y.430
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 721988740, i32 -317779541
  store i32 %108, i32* %20
  br label %126

; <label>:109:                                    ; preds = %21
  store i32 -1953215865, i32* %20
  br label %126

; <label>:110:                                    ; preds = %21
  ret void

; <label>:111:                                    ; preds = %21
  %112 = alloca %"struct.std::_Vector_base.2"*, align 8
  %113 = alloca %"class.std::set"*, align 8
  %114 = alloca i64, align 8
  store %"struct.std::_Vector_base.2"* %0, %"struct.std::_Vector_base.2"** %112, align 8
  store %"class.std::set"* %1, %"class.std::set"** %113, align 8
  store i64 %2, i64* %114, align 8
  %115 = load %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %112, align 8
  %116 = load %"class.std::set"*, %"class.std::set"** %113, align 8
  %117 = icmp ne %"class.std::set"* %116, null
  store i32 -111262489, i32* %20
  br label %126

; <label>:118:                                    ; preds = %21
  %119 = load volatile %"struct.std::_Vector_base.2"*, %"struct.std::_Vector_base.2"** %5
  %120 = getelementptr inbounds %"struct.std::_Vector_base.2", %"struct.std::_Vector_base.2"* %119, i32 0, i32 0
  %121 = bitcast %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %120 to %"class.std::allocator.3"*
  %122 = load volatile %"class.std::set"**, %"class.std::set"*** %7
  %123 = load %"class.std::set"*, %"class.std::set"** %122, align 8
  %124 = load volatile i64*, i64** %6
  %125 = load i64, i64* %124, align 8
  call void @_ZNSt16allocator_traitsISaISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEE10deallocateERS7_PS6_m(%"class.std::allocator.3"* dereferenceable(1) %121, %"class.std::set"* %123, i64 %125)
  store i32 1922858123, i32* %20
  br label %126

; <label>:126:                                    ; preds = %118, %111, %109, %87, %72, %69, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setISt4pairIiiESt4lessIS2_ESaIS2_EESaIS6_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >, std::allocator<std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %3 to %"class.std::allocator.3"*
  call void @_ZNSaISt3setISt4pairIiiESt4lessIS1_ESaIS1_EEED2Ev(%"class.std::allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt3setISt4pairIiiESt4lessIS2_ESaIS2_EEEE10deallocateERS7_PS6_m(%"class.std::allocator.3"* dereferenceable(1), %"class.std::set"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.3"*, align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %4, align 8
  store %"class.std::set"* %1, %"class.std::set"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %4, align 8
  %8 = bitcast %"class.std::allocator.3"* %7 to %"class.__gnu_cxx::new_allocator.4"*
  %9 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEE10deallocateEPS7_m(%"class.__gnu_cxx::new_allocator.4"* %8, %"class.std::set"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEE10deallocateEPS7_m(%"class.__gnu_cxx::new_allocator.4"*, %"class.std::set"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %4, align 8
  store %"class.std::set"* %1, %"class.std::set"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %4, align 8
  %8 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %9 = bitcast %"class.std::set"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3setISt4pairIiiESt4lessIS1_ESaIS1_EEED2Ev(%"class.std::allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.437
  %5 = load i32, i32* @y.438
  %6 = sub i32 %4, -1866699860
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1866699860
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1604192143, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1604192143, label %18
    i32 -360485874, label %38
    i32 1984438523, label %57
    i32 559583765, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -360485874, i32 559583765
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %39, align 8
  %40 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %39, align 8
  %41 = bitcast %"class.std::allocator.3"* %40 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.4"* %41) #3
  %42 = load i32, i32* @x.437
  %43 = load i32, i32* @y.438
  %44 = add i32 %42, 1719317853
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1719317853
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1984438523, i32 559583765
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %59, align 8
  %60 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %59, align 8
  %61 = bitcast %"class.std::allocator.3"* %60 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.4"* %61) #3
  store i32 -360485874, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.4"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.439
  %5 = load i32, i32* @y.440
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1669967016, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1669967016, label %17
    i32 540748514, label %25
    i32 -1298018493, label %54
    i32 1066678204, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 540748514, i32 1066678204
  store i32 %24, i32* %13
  br label %58

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %26, align 8
  %28 = load i32, i32* @x.439
  %29 = load i32, i32* @y.440
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1298018493, i32 1066678204
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %56, align 8
  store i32 540748514, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.7"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %3 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.8"*
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.8"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 1
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 2
  store i64* null, i64** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.445
  %5 = load i32, i32* @y.446
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -944716174, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -944716174, label %17
    i32 -907370249, label %25
    i32 1290504836, label %55
    i32 378230891, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -907370249, i32 378230891
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %26, align 8
  %28 = load i32, i32* @x.445
  %29 = load i32, i32* @y.446
  %30 = sub i32 %28, 222225875
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 222225875
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1290504836, i32 378230891
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %57, align 8
  store i32 -907370249, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.447
  %7 = load i32, i32* @y.448
  %8 = add i32 %6, -1246486034
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1246486034
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1537527794, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1537527794, label %20
    i32 -1535326305, label %40
    i32 581851232, label %60
    i32 -637930870, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1535326305, i32 -637930870
  store i32 %39, i32* %16
  br label %67

; <label>:40:                                     ; preds = %17
  %41 = alloca i64*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca %"class.std::allocator.8"*, align 8
  store i64* %0, i64** %41, align 8
  store i64* %1, i64** %42, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %43, align 8
  %44 = load i64*, i64** %41, align 8
  %45 = load i64*, i64** %42, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %44, i64* %45)
  %46 = load i32, i32* @x.447
  %47 = load i32, i32* @y.448
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 581851232, i32 -637930870
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca i64*, align 8
  %63 = alloca i64*, align 8
  %64 = alloca %"class.std::allocator.8"*, align 8
  store i64* %0, i64** %62, align 8
  store i64* %1, i64** %63, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %64, align 8
  %65 = load i64*, i64** %62, align 8
  %66 = load i64*, i64** %63, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %65, i64* %66)
  store i32 -1535326305, i32* %16
  br label %67

; <label>:67:                                     ; preds = %61, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %3 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.8"*
  ret %"class.std::allocator.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.7"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %5 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = sub i64 %15, -1075293465279803988
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -1075293465279803988
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.7"* %5, i64* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.451
  %26 = load i32, i32* @y.452
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %60

; <label>:38:                                     ; preds = %24, %60
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %3, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %4, align 4
  %42 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42) #3
  %43 = load i32, i32* @x.451
  %44 = load i32, i32* @y.452
  %45 = add i32 %43, -875016739
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -875016739
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %60

; <label>:57:                                     ; preds = %38
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %59) #12
  unreachable

; <label>:60:                                     ; preds = %38, %24
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  %64 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %64) #3
  br label %38
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.455
  %6 = load i32, i32* @y.456
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1582005924, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1582005924, label %18
    i32 65152882, label %26
    i32 -1214384170, label %56
    i32 -729112664, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 65152882, i32 -729112664
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca i64*, align 8
  %28 = alloca i64*, align 8
  store i64* %0, i64** %27, align 8
  store i64* %1, i64** %28, align 8
  %29 = load i32, i32* @x.455
  %30 = load i32, i32* @y.456
  %31 = sub i32 %29, -788579193
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -788579193
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1214384170, i32 -729112664
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca i64*, align 8
  %59 = alloca i64*, align 8
  store i64* %0, i64** %58, align 8
  store i64* %1, i64** %59, align 8
  store i32 65152882, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.7"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.7"*
  %6 = alloca i64*
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.457
  %11 = load i32, i32* @y.458
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 962996154, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %86
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 962996154, label %23
    i32 1632172391, label %43
    i32 550209229, label %67
    i32 -2117408815, label %70
    i32 -1208623090, label %78
    i32 -613346926, label %79
  ]

; <label>:22:                                     ; preds = %20
  br label %86

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1632172391, i32 -613346926
  store i32 %42, i32* %19
  br label %86

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.7"*, align 8
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %7
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %44, align 8
  %47 = load volatile i64**, i64*** %7
  store i64* %1, i64** %47, align 8
  %48 = load volatile i64*, i64** %6
  store i64 %2, i64* %48, align 8
  %49 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %44, align 8
  store %"struct.std::_Vector_base.7"* %49, %"struct.std::_Vector_base.7"** %5
  %50 = load volatile i64**, i64*** %7
  %51 = load i64*, i64** %50, align 8
  %52 = icmp ne i64* %51, null
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.457
  %54 = load i32, i32* @y.458
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 550209229, i32 -613346926
  store i32 %66, i32* %19
  br label %86

; <label>:67:                                     ; preds = %20
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -2117408815, i32 -1208623090
  store i32 %69, i32* %19
  br label %86

; <label>:70:                                     ; preds = %20
  %71 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %5
  %72 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %72 to %"class.std::allocator.8"*
  %74 = load volatile i64**, i64*** %7
  %75 = load i64*, i64** %74, align 8
  %76 = load volatile i64*, i64** %6
  %77 = load i64, i64* %76, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.8"* dereferenceable(1) %73, i64* %75, i64 %77)
  store i32 -1208623090, i32* %19
  br label %86

; <label>:78:                                     ; preds = %20
  ret void

; <label>:79:                                     ; preds = %20
  %80 = alloca %"struct.std::_Vector_base.7"*, align 8
  %81 = alloca i64*, align 8
  %82 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %80, align 8
  store i64* %1, i64** %81, align 8
  store i64 %2, i64* %82, align 8
  %83 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %80, align 8
  %84 = load i64*, i64** %81, align 8
  %85 = icmp ne i64* %84, null
  store i32 1632172391, i32* %19
  br label %86

; <label>:86:                                     ; preds = %79, %70, %67, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.8"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.8"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.8"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.9"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.9"*, i64*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.463
  %7 = load i32, i32* @y.464
  %8 = sub i32 %6, -727687858
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -727687858
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -257735730, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -257735730, label %20
    i32 -1543462443, label %28
    i32 1559990266, label %61
    i32 1889299680, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1543462443, i32 1889299680
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %29, align 8
  %33 = load i64*, i64** %30, align 8
  %34 = bitcast i64* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.463
  %36 = load i32, i32* @y.464
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1559990266, i32 1889299680
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %64 = alloca i64*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %63, align 8
  store i64* %1, i64** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %63, align 8
  %67 = load i64*, i64** %64, align 8
  %68 = bitcast i64* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 -1543462443, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.467
  %6 = load i32, i32* @y.468
  %7 = add i32 %5, 1331090669
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1331090669
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 826701295, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %130
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 826701295, label %19
    i32 -2007562055, label %39
    i32 1260206382, label %71
    i32 1642494237, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %130

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2007562055, i32 1642494237
  store i32 %38, i32* %15
  br label %130

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %40, align 8
  %41 = load %"class.std::vector.6"*, %"class.std::vector.6"** %40, align 8
  %42 = bitcast %"class.std::vector.6"* %41 to %"struct.std::_Vector_base.7"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::vector.6"* %41 to %"struct.std::_Vector_base.7"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = ptrtoint i64* %45 to i64
  %51 = ptrtoint i64* %49 to i64
  %52 = add i64 %50, -2915181595397388396
  %53 = sub i64 %52, %51
  %54 = sub i64 %53, -2915181595397388396
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 8
  store i64 %56, i64* %2
  %57 = load i32, i32* @x.467
  %58 = load i32, i32* @y.468
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 1260206382, i32 1642494237
  store i32 %70, i32* %15
  br label %130

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %74, align 8
  %75 = load %"class.std::vector.6"*, %"class.std::vector.6"** %74, align 8
  %76 = bitcast %"class.std::vector.6"* %75 to %"struct.std::_Vector_base.7"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load i64*, i64** %78, align 8
  %80 = bitcast %"class.std::vector.6"* %75 to %"struct.std::_Vector_base.7"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = ptrtoint i64* %79 to i64
  %85 = ptrtoint i64* %83 to i64
  %86 = sub i64 %84, 7640110251920755581
  %87 = sub i64 %86, %85
  %88 = add i64 %87, 7640110251920755581
  %89 = sub i64 %84, %85
  %90 = mul i64 %88, %85
  %91 = add i64 %84, -5016253781464038463
  %92 = sub i64 %91, %85
  %93 = sub i64 %92, -5016253781464038463
  %94 = sub i64 %84, %85
  %95 = mul i64 %93, %85
  %96 = add i64 %84, -8968324796488108953
  %97 = sub i64 %96, %85
  %98 = sub i64 %97, -8968324796488108953
  %99 = sub i64 %84, %85
  %100 = sub i64 %98, 875213655545583962
  %101 = sub i64 %100, 8
  %102 = add i64 %101, 875213655545583962
  %103 = sub i64 %98, 8
  %104 = mul i64 %102, 8
  %105 = sub i64 %98, -2003731769128803564
  %106 = sub i64 %105, 8
  %107 = add i64 %106, -2003731769128803564
  %108 = sub i64 %98, 8
  %109 = mul i64 %107, 8
  %110 = sub i64 0, 8
  %111 = add i64 %98, %110
  %112 = sub i64 %98, 8
  %113 = mul i64 %111, 8
  %114 = add i64 %98, -3280252077254079273
  %115 = sub i64 %114, 8
  %116 = sub i64 %115, -3280252077254079273
  %117 = sub i64 %98, 8
  %118 = mul i64 %116, 8
  %119 = add i64 %98, -4708495349174081878
  %120 = sub i64 %119, 8
  %121 = sub i64 %120, -4708495349174081878
  %122 = sub i64 %98, 8
  %123 = mul i64 %121, 8
  %124 = add i64 %98, 8582050608423535053
  %125 = sub i64 %124, 8
  %126 = sub i64 %125, 8582050608423535053
  %127 = sub i64 %98, 8
  %128 = mul i64 %126, 8
  %129 = sdiv exact i64 %98, 8
  store i32 -2007562055, i32* %15
  br label %130

; <label>:130:                                    ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE17_M_default_appendEm(%"class.std::vector.6"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %11 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %12 = load i64, i64* %4, align 8
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %427

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* @x.469
  %16 = load i32, i32* @y.470
  %17 = sub i32 %15, -771869632
  %18 = sub i32 %17, 1
  %19 = add i32 %18, -771869632
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %517

; <label>:41:                                     ; preds = %14, %517
  %42 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %43, i32 0, i32 2
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %47, i32 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = ptrtoint i64* %45 to i64
  %51 = ptrtoint i64* %49 to i64
  %52 = sub i64 %50, -8005219610624616126
  %53 = sub i64 %52, %51
  %54 = add i64 %53, -8005219610624616126
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 8
  %57 = load i64, i64* %4, align 8
  %58 = icmp uge i64 %56, %57
  %59 = load i32, i32* @x.469
  %60 = load i32, i32* @y.470
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %517

; <label>:72:                                     ; preds = %41
  br i1 %58, label %73, label %85

; <label>:73:                                     ; preds = %72
  %74 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %75 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %74, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %75, i32 0, i32 1
  %77 = load i64*, i64** %76, align 8
  %78 = load i64, i64* %4, align 8
  %79 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %80 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %79) #3
  %81 = call i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64* %77, i64 %78, %"class.std::allocator.8"* dereferenceable(1) %80)
  %82 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %83, i32 0, i32 1
  store i64* %81, i64** %84, align 8
  br label %385

; <label>:85:                                     ; preds = %72
  %86 = load i32, i32* @x.469
  %87 = load i32, i32* @y.470
  %88 = sub i32 %86, -804711225
  %89 = sub i32 %88, 1
  %90 = add i32 %89, -804711225
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %589

; <label>:100:                                    ; preds = %85, %589
  %101 = load i64, i64* %4, align 8
  %102 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.6"* %11, i64 %101, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i32 0, i32 0))
  store i64 %102, i64* %5, align 8
  %103 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"* %11) #3
  store i64 %103, i64* %6, align 8
  %104 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %105 = load i64, i64* %5, align 8
  %106 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.7"* %104, i64 %105)
  store i64* %106, i64** %7, align 8
  %107 = load i64*, i64** %7, align 8
  store i64* %107, i64** %8, align 8
  %108 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %109, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %113 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %112, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %113, i32 0, i32 1
  %115 = load i64*, i64** %114, align 8
  %116 = load i64*, i64** %7, align 8
  %117 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %118 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %117) #3
  %119 = load i32, i32* @x.469
  %120 = load i32, i32* @y.470
  %121 = sub i32 0, 1
  %122 = add i32 %119, %121
  %123 = sub i32 %119, 1
  %124 = mul i32 %119, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %120, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %589

; <label>:144:                                    ; preds = %100
  %145 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %111, i64* %115, i64* %116, %"class.std::allocator.8"* dereferenceable(1) %118)
          to label %146 unwind label %182

; <label>:146:                                    ; preds = %144
  %147 = load i32, i32* @x.469
  %148 = load i32, i32* @y.470
  %149 = sub i32 0, 1
  %150 = add i32 %147, %149
  %151 = sub i32 %147, 1
  %152 = mul i32 %147, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %148, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  br i1 %158, label %160, label %608

; <label>:160:                                    ; preds = %146, %608
  store i64* %145, i64** %8, align 8
  %161 = load i64*, i64** %8, align 8
  %162 = load i64, i64* %4, align 8
  %163 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %164 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %163) #3
  %165 = load i32, i32* @x.469
  %166 = load i32, i32* @y.470
  %167 = sub i32 %165, -2027476086
  %168 = sub i32 %167, 1
  %169 = add i32 %168, -2027476086
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = and i1 %173, %174
  %176 = xor i1 %173, %174
  %177 = or i1 %175, %176
  %178 = or i1 %173, %174
  br i1 %177, label %179, label %608

; <label>:179:                                    ; preds = %160
  %180 = invoke i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64* %161, i64 %162, %"class.std::allocator.8"* dereferenceable(1) %164)
          to label %181 unwind label %182

; <label>:181:                                    ; preds = %179
  store i64* %180, i64** %8, align 8
  br label %341

; <label>:182:                                    ; preds = %179, %144
  %183 = load i32, i32* @x.469
  %184 = load i32, i32* @y.470
  %185 = add i32 %183, 552385894
  %186 = sub i32 %185, 1
  %187 = sub i32 %186, 552385894
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 false, true
  %196 = and i1 %193, false
  %197 = and i1 %191, %195
  %198 = and i1 %194, false
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 false, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  br i1 %207, label %209, label %613

; <label>:209:                                    ; preds = %182, %613
  %210 = landingpad { i8*, i32 }
          catch i8* null
  %211 = extractvalue { i8*, i32 } %210, 0
  store i8* %211, i8** %9, align 8
  %212 = extractvalue { i8*, i32 } %210, 1
  store i32 %212, i32* %10, align 4
  %213 = load i32, i32* @x.469
  %214 = load i32, i32* @y.470
  %215 = sub i32 %213, -510253424
  %216 = sub i32 %215, 1
  %217 = add i32 %216, -510253424
  %218 = sub i32 %213, 1
  %219 = mul i32 %213, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %214, 10
  %223 = xor i1 %221, true
  %224 = xor i1 %222, true
  %225 = xor i1 false, true
  %226 = and i1 %223, false
  %227 = and i1 %221, %225
  %228 = and i1 %224, false
  %229 = and i1 %222, %225
  %230 = or i1 %226, %227
  %231 = or i1 %228, %229
  %232 = xor i1 %230, %231
  %233 = or i1 %223, %224
  %234 = xor i1 %233, true
  %235 = or i1 false, %225
  %236 = and i1 %234, %235
  %237 = or i1 %232, %236
  %238 = or i1 %221, %222
  br i1 %237, label %239, label %613

; <label>:239:                                    ; preds = %209
  br label %240

; <label>:240:                                    ; preds = %239
  %241 = load i8*, i8** %9, align 8
  %242 = call i8* @__cxa_begin_catch(i8* %241) #3
  %243 = load i64*, i64** %7, align 8
  %244 = load i64*, i64** %8, align 8
  %245 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %246 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %245) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %243, i64* %244, %"class.std::allocator.8"* dereferenceable(1) %246)
          to label %247 unwind label %294

; <label>:247:                                    ; preds = %240
  %248 = load i32, i32* @x.469
  %249 = load i32, i32* @y.470
  %250 = add i32 %248, 1133160879
  %251 = sub i32 %250, 1
  %252 = sub i32 %251, 1133160879
  %253 = sub i32 %248, 1
  %254 = mul i32 %248, %252
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %249, 10
  %258 = and i1 %256, %257
  %259 = xor i1 %256, %257
  %260 = or i1 %258, %259
  %261 = or i1 %256, %257
  br i1 %260, label %262, label %617

; <label>:262:                                    ; preds = %247, %617
  %263 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %264 = load i64*, i64** %7, align 8
  %265 = load i64, i64* %5, align 8
  %266 = load i32, i32* @x.469
  %267 = load i32, i32* @y.470
  %268 = add i32 %266, -741052831
  %269 = sub i32 %268, 1
  %270 = sub i32 %269, -741052831
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 false, true
  %279 = and i1 %276, false
  %280 = and i1 %274, %278
  %281 = and i1 %277, false
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 false, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  br i1 %290, label %292, label %617

; <label>:292:                                    ; preds = %262
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.7"* %263, i64* %264, i64 %265)
          to label %293 unwind label %294

; <label>:293:                                    ; preds = %292
  invoke void @__cxa_rethrow() #14
          to label %516 unwind label %294

; <label>:294:                                    ; preds = %293, %292, %240
  %295 = load i32, i32* @x.469
  %296 = load i32, i32* @y.470
  %297 = sub i32 %295, -360481806
  %298 = sub i32 %297, 1
  %299 = add i32 %298, -360481806
  %300 = sub i32 %295, 1
  %301 = mul i32 %295, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %296, 10
  %305 = and i1 %303, %304
  %306 = xor i1 %303, %304
  %307 = or i1 %305, %306
  %308 = or i1 %303, %304
  br i1 %307, label %309, label %621

; <label>:309:                                    ; preds = %294, %621
  %310 = landingpad { i8*, i32 }
          cleanup
  %311 = extractvalue { i8*, i32 } %310, 0
  store i8* %311, i8** %9, align 8
  %312 = extractvalue { i8*, i32 } %310, 1
  store i32 %312, i32* %10, align 4
  %313 = load i32, i32* @x.469
  %314 = load i32, i32* @y.470
  %315 = sub i32 %313, -1956874114
  %316 = sub i32 %315, 1
  %317 = add i32 %316, -1956874114
  %318 = sub i32 %313, 1
  %319 = mul i32 %313, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %314, 10
  %323 = xor i1 %321, true
  %324 = xor i1 %322, true
  %325 = xor i1 false, true
  %326 = and i1 %323, false
  %327 = and i1 %321, %325
  %328 = and i1 %324, false
  %329 = and i1 %322, %325
  %330 = or i1 %326, %327
  %331 = or i1 %328, %329
  %332 = xor i1 %330, %331
  %333 = or i1 %323, %324
  %334 = xor i1 %333, true
  %335 = or i1 false, %325
  %336 = and i1 %334, %335
  %337 = or i1 %332, %336
  %338 = or i1 %321, %322
  br i1 %337, label %339, label %621

; <label>:339:                                    ; preds = %309
  invoke void @__cxa_end_catch()
          to label %340 unwind label %473

; <label>:340:                                    ; preds = %339
  br label %468

; <label>:341:                                    ; preds = %181
  %342 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %343 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %342, i32 0, i32 0
  %344 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %343, i32 0, i32 0
  %345 = load i64*, i64** %344, align 8
  %346 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %347 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %346, i32 0, i32 0
  %348 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %347, i32 0, i32 1
  %349 = load i64*, i64** %348, align 8
  %350 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %351 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %350) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %345, i64* %349, %"class.std::allocator.8"* dereferenceable(1) %351)
  %352 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %353 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %354 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %353, i32 0, i32 0
  %355 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %354, i32 0, i32 0
  %356 = load i64*, i64** %355, align 8
  %357 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %358 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %357, i32 0, i32 0
  %359 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %358, i32 0, i32 2
  %360 = load i64*, i64** %359, align 8
  %361 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %361, i32 0, i32 0
  %363 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %362, i32 0, i32 0
  %364 = load i64*, i64** %363, align 8
  %365 = ptrtoint i64* %360 to i64
  %366 = ptrtoint i64* %364 to i64
  %367 = sub i64 0, %366
  %368 = add i64 %365, %367
  %369 = sub i64 %365, %366
  %370 = sdiv exact i64 %368, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.7"* %352, i64* %356, i64 %370)
  %371 = load i64*, i64** %7, align 8
  %372 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %373 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %372, i32 0, i32 0
  %374 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %373, i32 0, i32 0
  store i64* %371, i64** %374, align 8
  %375 = load i64*, i64** %8, align 8
  %376 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %377 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %376, i32 0, i32 0
  %378 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %377, i32 0, i32 1
  store i64* %375, i64** %378, align 8
  %379 = load i64*, i64** %7, align 8
  %380 = load i64, i64* %5, align 8
  %381 = getelementptr inbounds i64, i64* %379, i64 %380
  %382 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %383 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %382, i32 0, i32 0
  %384 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %383, i32 0, i32 2
  store i64* %381, i64** %384, align 8
  br label %385

; <label>:385:                                    ; preds = %341, %73
  %386 = load i32, i32* @x.469
  %387 = load i32, i32* @y.470
  %388 = sub i32 %386, 1678513883
  %389 = sub i32 %388, 1
  %390 = add i32 %389, 1678513883
  %391 = sub i32 %386, 1
  %392 = mul i32 %386, %390
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %387, 10
  %396 = xor i1 %394, true
  %397 = xor i1 %395, true
  %398 = xor i1 true, true
  %399 = and i1 %396, true
  %400 = and i1 %394, %398
  %401 = and i1 %397, true
  %402 = and i1 %395, %398
  %403 = or i1 %399, %400
  %404 = or i1 %401, %402
  %405 = xor i1 %403, %404
  %406 = or i1 %396, %397
  %407 = xor i1 %406, true
  %408 = or i1 true, %398
  %409 = and i1 %407, %408
  %410 = or i1 %405, %409
  %411 = or i1 %394, %395
  br i1 %410, label %412, label %625

; <label>:412:                                    ; preds = %385, %625
  %413 = load i32, i32* @x.469
  %414 = load i32, i32* @y.470
  %415 = sub i32 0, 1
  %416 = add i32 %413, %415
  %417 = sub i32 %413, 1
  %418 = mul i32 %413, %416
  %419 = urem i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = icmp slt i32 %414, 10
  %422 = and i1 %420, %421
  %423 = xor i1 %420, %421
  %424 = or i1 %422, %423
  %425 = or i1 %420, %421
  br i1 %424, label %426, label %625

; <label>:426:                                    ; preds = %412
  br label %427

; <label>:427:                                    ; preds = %426, %2
  %428 = load i32, i32* @x.469
  %429 = load i32, i32* @y.470
  %430 = sub i32 0, 1
  %431 = add i32 %428, %430
  %432 = sub i32 %428, 1
  %433 = mul i32 %428, %431
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %429, 10
  %437 = xor i1 %435, true
  %438 = xor i1 %436, true
  %439 = xor i1 false, true
  %440 = and i1 %437, false
  %441 = and i1 %435, %439
  %442 = and i1 %438, false
  %443 = and i1 %436, %439
  %444 = or i1 %440, %441
  %445 = or i1 %442, %443
  %446 = xor i1 %444, %445
  %447 = or i1 %437, %438
  %448 = xor i1 %447, true
  %449 = or i1 false, %439
  %450 = and i1 %448, %449
  %451 = or i1 %446, %450
  %452 = or i1 %435, %436
  br i1 %451, label %453, label %626

; <label>:453:                                    ; preds = %427, %626
  %454 = load i32, i32* @x.469
  %455 = load i32, i32* @y.470
  %456 = sub i32 0, 1
  %457 = add i32 %454, %456
  %458 = sub i32 %454, 1
  %459 = mul i32 %454, %457
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %455, 10
  %463 = and i1 %461, %462
  %464 = xor i1 %461, %462
  %465 = or i1 %463, %464
  %466 = or i1 %461, %462
  br i1 %465, label %467, label %626

; <label>:467:                                    ; preds = %453
  ret void

; <label>:468:                                    ; preds = %340
  %469 = load i8*, i8** %9, align 8
  %470 = load i32, i32* %10, align 4
  %471 = insertvalue { i8*, i32 } undef, i8* %469, 0
  %472 = insertvalue { i8*, i32 } %471, i32 %470, 1
  resume { i8*, i32 } %472

; <label>:473:                                    ; preds = %339
  %474 = load i32, i32* @x.469
  %475 = load i32, i32* @y.470
  %476 = sub i32 0, 1
  %477 = add i32 %474, %476
  %478 = sub i32 %474, 1
  %479 = mul i32 %474, %477
  %480 = urem i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = icmp slt i32 %475, 10
  %483 = xor i1 %481, true
  %484 = xor i1 %482, true
  %485 = xor i1 true, true
  %486 = and i1 %483, true
  %487 = and i1 %481, %485
  %488 = and i1 %484, true
  %489 = and i1 %482, %485
  %490 = or i1 %486, %487
  %491 = or i1 %488, %489
  %492 = xor i1 %490, %491
  %493 = or i1 %483, %484
  %494 = xor i1 %493, true
  %495 = or i1 true, %485
  %496 = and i1 %494, %495
  %497 = or i1 %492, %496
  %498 = or i1 %481, %482
  br i1 %497, label %499, label %627

; <label>:499:                                    ; preds = %473, %627
  %500 = landingpad { i8*, i32 }
          catch i8* null
  %501 = extractvalue { i8*, i32 } %500, 0
  call void @__clang_call_terminate(i8* %501) #12
  %502 = load i32, i32* @x.469
  %503 = load i32, i32* @y.470
  %504 = sub i32 0, 1
  %505 = add i32 %502, %504
  %506 = sub i32 %502, 1
  %507 = mul i32 %502, %505
  %508 = urem i32 %507, 2
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %503, 10
  %511 = and i1 %509, %510
  %512 = xor i1 %509, %510
  %513 = or i1 %511, %512
  %514 = or i1 %509, %510
  br i1 %513, label %515, label %627

; <label>:515:                                    ; preds = %499
  unreachable

; <label>:516:                                    ; preds = %293
  unreachable

; <label>:517:                                    ; preds = %41, %14
  %518 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %519 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %518, i32 0, i32 0
  %520 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %519, i32 0, i32 2
  %521 = load i64*, i64** %520, align 8
  %522 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %523 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %522, i32 0, i32 0
  %524 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %523, i32 0, i32 1
  %525 = load i64*, i64** %524, align 8
  %526 = ptrtoint i64* %521 to i64
  %527 = ptrtoint i64* %525 to i64
  %528 = sub i64 0, %527
  %529 = add i64 %526, %528
  %530 = sub i64 %526, %527
  %531 = mul i64 %529, %527
  %532 = add i64 0, 2040284380101923137
  %533 = sub i64 %532, %526
  %534 = sub i64 %533, 2040284380101923137
  %535 = sub i64 0, %526
  %536 = sub i64 0, %527
  %537 = sub i64 %534, %536
  %538 = add i64 %534, %527
  %539 = shl i64 %526, %527
  %540 = sub i64 0, %527
  %541 = add i64 %526, %540
  %542 = sub i64 %526, %527
  %543 = mul i64 %541, %527
  %544 = sub i64 0, %527
  %545 = add i64 %526, %544
  %546 = sub i64 %526, %527
  %547 = sub i64 0, 8
  %548 = add i64 %545, %547
  %549 = sub i64 %545, 8
  %550 = mul i64 %548, 8
  %551 = shl i64 %545, 8
  %552 = sub i64 %545, 2347598592009365300
  %553 = sub i64 %552, 8
  %554 = add i64 %553, 2347598592009365300
  %555 = sub i64 %545, 8
  %556 = mul i64 %554, 8
  %557 = add i64 %545, -1330181225942552485
  %558 = sub i64 %557, 8
  %559 = sub i64 %558, -1330181225942552485
  %560 = sub i64 %545, 8
  %561 = mul i64 %559, 8
  %562 = add i64 0, -1020937206804626013
  %563 = sub i64 %562, %545
  %564 = sub i64 %563, -1020937206804626013
  %565 = sub i64 0, %545
  %566 = sub i64 0, %564
  %567 = sub i64 0, 8
  %568 = add i64 %566, %567
  %569 = sub i64 0, %568
  %570 = add i64 %564, 8
  %571 = shl i64 %545, 8
  %572 = shl i64 %545, 8
  %573 = sub i64 %545, -3363997114995552467
  %574 = sub i64 %573, 8
  %575 = add i64 %574, -3363997114995552467
  %576 = sub i64 %545, 8
  %577 = mul i64 %575, 8
  %578 = add i64 0, -2064258530022643530
  %579 = sub i64 %578, %545
  %580 = sub i64 %579, -2064258530022643530
  %581 = sub i64 0, %545
  %582 = add i64 %580, 6608914219092124805
  %583 = add i64 %582, 8
  %584 = sub i64 %583, 6608914219092124805
  %585 = add i64 %580, 8
  %586 = sdiv exact i64 %545, 8
  %587 = load i64, i64* %4, align 8
  %588 = icmp uge i64 %586, %587
  br label %41

; <label>:589:                                    ; preds = %100, %85
  %590 = load i64, i64* %4, align 8
  %591 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.6"* %11, i64 %590, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i32 0, i32 0))
  store i64 %591, i64* %5, align 8
  %592 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"* %11) #3
  store i64 %592, i64* %6, align 8
  %593 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %594 = load i64, i64* %5, align 8
  %595 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.7"* %593, i64 %594)
  store i64* %595, i64** %7, align 8
  %596 = load i64*, i64** %7, align 8
  store i64* %596, i64** %8, align 8
  %597 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %598 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %597, i32 0, i32 0
  %599 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %598, i32 0, i32 0
  %600 = load i64*, i64** %599, align 8
  %601 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %602 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %601, i32 0, i32 0
  %603 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %602, i32 0, i32 1
  %604 = load i64*, i64** %603, align 8
  %605 = load i64*, i64** %7, align 8
  %606 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %607 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %606) #3
  br label %100

; <label>:608:                                    ; preds = %160, %146
  store i64* %145, i64** %8, align 8
  %609 = load i64*, i64** %8, align 8
  %610 = load i64, i64* %4, align 8
  %611 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %612 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %611) #3
  br label %160

; <label>:613:                                    ; preds = %209, %182
  %614 = landingpad { i8*, i32 }
          catch i8* null
  %615 = extractvalue { i8*, i32 } %614, 0
  store i8* %615, i8** %9, align 8
  %616 = extractvalue { i8*, i32 } %614, 1
  store i32 %616, i32* %10, align 4
  br label %209

; <label>:617:                                    ; preds = %262, %247
  %618 = bitcast %"class.std::vector.6"* %11 to %"struct.std::_Vector_base.7"*
  %619 = load i64*, i64** %7, align 8
  %620 = load i64, i64* %5, align 8
  br label %262

; <label>:621:                                    ; preds = %309, %294
  %622 = landingpad { i8*, i32 }
          cleanup
  %623 = extractvalue { i8*, i32 } %622, 0
  store i8* %623, i8** %9, align 8
  %624 = extractvalue { i8*, i32 } %622, 1
  store i32 %624, i32* %10, align 4
  br label %309

; <label>:625:                                    ; preds = %412, %385
  br label %412

; <label>:626:                                    ; preds = %453, %427
  br label %453

; <label>:627:                                    ; preds = %499, %473
  %628 = landingpad { i8*, i32 }
          catch i8* null
  %629 = extractvalue { i8*, i32 } %628, 0
  call void @__clang_call_terminate(i8* %629) #12
  br label %499
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.6"*, i64*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %12 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %11) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %6, i64* %10, %"class.std::allocator.8"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load i64*, i64** %4, align 8
  %15 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %16, i32 0, i32 1
  store i64* %14, i64** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64*, i64, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64* %7, i64 %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.6"*
  %8 = alloca %"class.std::vector.6"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.6"*, %"class.std::vector.6"** %8, align 8
  store %"class.std::vector.6"* %13, %"class.std::vector.6"** %7
  %14 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %15 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.6"* %14) #3
  %16 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %17 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"* %16) #3
  %18 = add i64 %15, 5127566936811255628
  %19 = sub i64 %18, %17
  %20 = sub i64 %19, 5127566936811255628
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 1563370408, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %134
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 1563370408, label %28
    i32 593628510, label %33
    i32 -841507102, label %49
    i32 1068035764, label %65
    i32 213491530, label %66
    i32 420269121, label %81
    i32 1145042924, label %97
    i32 586771205, label %117
    i32 601277779, label %120
    i32 -1386309311, label %123
    i32 1423465823, label %125
    i32 307436547, label %127
    i32 -81501679, label %129
  ]

; <label>:27:                                     ; preds = %25
  br label %134

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 593628510, i32 213491530
  store i32 %32, i32* %23
  br label %134

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.475
  %35 = load i32, i32* @y.476
  %36 = sub i32 %34, 892183158
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 892183158
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -841507102, i32 307436547
  store i32 %48, i32* %23
  br label %134

; <label>:49:                                     ; preds = %25
  %50 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %50) #14
  %51 = load i32, i32* @x.475
  %52 = load i32, i32* @y.476
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1068035764, i32 307436547
  store i32 %64, i32* %23
  br label %134

; <label>:65:                                     ; preds = %25
  unreachable

; <label>:66:                                     ; preds = %25
  %67 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %68 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"* %67) #3
  %69 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %70 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"* %69) #3
  store i64 %70, i64* %12, align 8
  %71 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 0, %72
  %74 = sub i64 %68, %73
  %75 = add i64 %68, %72
  store i64 %74, i64* %11, align 8
  %76 = load i64, i64* %11, align 8
  %77 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %78 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.6"* %77) #3
  %79 = icmp ult i64 %76, %78
  %80 = select i1 %79, i32 601277779, i32 420269121
  store i32 %80, i32* %23
  br label %134

; <label>:81:                                     ; preds = %25
  %82 = load i32, i32* @x.475
  %83 = load i32, i32* @y.476
  %84 = add i32 %82, -1844089118
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1844089118
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 1145042924, i32 -81501679
  store i32 %96, i32* %23
  br label %134

; <label>:97:                                     ; preds = %25
  %98 = load i64, i64* %11, align 8
  %99 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %100 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.6"* %99) #3
  %101 = icmp ugt i64 %98, %100
  store i1 %101, i1* %4
  %102 = load i32, i32* @x.475
  %103 = load i32, i32* @y.476
  %104 = sub i32 %102, -1892241149
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -1892241149
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 586771205, i32 -81501679
  store i32 %116, i32* %23
  br label %134

; <label>:117:                                    ; preds = %25
  %118 = load volatile i1, i1* %4
  %119 = select i1 %118, i32 601277779, i32 -1386309311
  store i32 %119, i32* %23
  br label %134

; <label>:120:                                    ; preds = %25
  %121 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %122 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.6"* %121) #3
  store i32 1423465823, i32* %23
  store i64 %122, i64* %24
  br label %134

; <label>:123:                                    ; preds = %25
  %124 = load i64, i64* %11, align 8
  store i32 1423465823, i32* %23
  store i64 %124, i64* %24
  br label %134

; <label>:125:                                    ; preds = %25
  %126 = load i64, i64* %24
  ret i64 %126

; <label>:127:                                    ; preds = %25
  %128 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %128) #14
  store i32 -841507102, i32* %23
  br label %134

; <label>:129:                                    ; preds = %25
  %130 = load i64, i64* %11, align 8
  %131 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %7
  %132 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.6"* %131) #3
  %133 = icmp ugt i64 %130, %132
  store i32 1145042924, i32* %23
  br label %134

; <label>:134:                                    ; preds = %129, %127, %123, %120, %117, %97, %81, %66, %49, %33, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.7"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.7"*
  %5 = alloca %"struct.std::_Vector_base.7"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %5, align 8
  store %"struct.std::_Vector_base.7"* %7, %"struct.std::_Vector_base.7"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -841155655, i32* %9
  %10 = alloca i64*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -841155655, label %14
    i32 -1394967526, label %18
    i32 -701059004, label %24
    i32 896765128, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1394967526, i32 -701059004
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20 to %"class.std::allocator.8"*
  %22 = load i64, i64* %6, align 8
  %23 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.8"* dereferenceable(1) %21, i64 %22)
  store i32 896765128, i32* %9
  store i64* %23, i64** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 896765128, i32* %9
  store i64* null, i64** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i64*, i64** %10
  ret i64* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.8"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.8"* dereferenceable(1) %18)
  ret i64* %23
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64*, i64) #0 comdat {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.481
  %7 = load i32, i32* @y.482
  %8 = add i32 %6, 1409005879
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1409005879
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1585953683, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1585953683, label %20
    i32 858393197, label %40
    i32 -94571978, label %73
    i32 1134432607, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 858393197, i32 1134432607
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca i64*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i8, align 1
  store i64* %0, i64** %41, align 8
  store i64 %1, i64* %42, align 8
  store i8 1, i8* %43, align 1
  %44 = load i64*, i64** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64* %44, i64 %45)
  store i64* %46, i64** %3
  %47 = load i32, i32* @x.481
  %48 = load i32, i32* @y.482
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -94571978, i32 1134432607
  store i32 %72, i32* %16
  br label %82

; <label>:73:                                     ; preds = %17
  %74 = load volatile i64*, i64** %3
  ret i64* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca i64*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8, align 1
  store i64* %0, i64** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8 1, i8* %78, align 1
  %79 = load i64*, i64** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64* %79, i64 %80)
  store i32 858393197, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64*, i64) #0 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %8 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %6, i64 %7, i64* dereferenceable(8) %5)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.485
  %8 = load i32, i32* @y.486
  %9 = sub i32 %7, 1120852904
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1120852904
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -891101381, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -891101381, label %21
    i32 -798247526, label %41
    i32 584695106, label %77
    i32 -794833853, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -798247526, i32 -794833853
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64*, align 8
  store i64* %0, i64** %42, align 8
  store i64 %1, i64* %43, align 8
  store i64* %2, i64** %44, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %45)
  %47 = load i64, i64* %43, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %46, i64 %47, i64* dereferenceable(8) %48)
  store i64* %49, i64** %4
  %50 = load i32, i32* @x.485
  %51 = load i32, i32* @y.486
  %52 = sub i32 %50, 1101094384
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1101094384
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 584695106, i32 -794833853
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile i64*, i64** %4
  ret i64* %78

; <label>:79:                                     ; preds = %18
  %80 = alloca i64*, align 8
  %81 = alloca i64, align 8
  %82 = alloca i64*, align 8
  store i64* %0, i64** %80, align 8
  store i64 %1, i64* %81, align 8
  store i64* %2, i64** %82, align 8
  %83 = load i64*, i64** %80, align 8
  %84 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %83)
  %85 = load i64, i64* %81, align 8
  %86 = load i64*, i64** %82, align 8
  %87 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %84, i64 %85, i64* dereferenceable(8) %86)
  store i32 -798247526, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #4 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 -210608225, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %103
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -210608225, label %16
    i32 -1466062558, label %20
    i32 -416510032, label %23
    i32 317208782, label %51
    i32 110651342, label %75
    i32 -1137345099, label %76
    i32 -556089542, label %78
  ]

; <label>:15:                                     ; preds = %13
  br label %103

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -1466062558, i32 -1137345099
  store i32 %19, i32* %12
  br label %103

; <label>:20:                                     ; preds = %13
  %21 = load i64, i64* %7, align 8
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 -416510032, i32* %12
  br label %103

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.487
  %25 = load i32, i32* @y.488
  %26 = sub i32 %24, -1793545546
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1793545546
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 317208782, i32 -556089542
  store i32 %50, i32* %12
  br label %103

; <label>:51:                                     ; preds = %13
  %52 = load i64, i64* %8, align 8
  %53 = sub i64 0, %52
  %54 = sub i64 0, -1
  %55 = add i64 %53, %54
  %56 = sub i64 0, %55
  %57 = add i64 %52, -1
  store i64 %56, i64* %8, align 8
  %58 = load i64*, i64** %4, align 8
  %59 = getelementptr inbounds i64, i64* %58, i32 1
  store i64* %59, i64** %4, align 8
  %60 = load i32, i32* @x.487
  %61 = load i32, i32* @y.488
  %62 = add i32 %60, -2024161535
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -2024161535
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 110651342, i32 -556089542
  store i32 %74, i32* %12
  br label %103

; <label>:75:                                     ; preds = %13
  store i32 -210608225, i32* %12
  br label %103

; <label>:76:                                     ; preds = %13
  %77 = load i64*, i64** %4, align 8
  ret i64* %77

; <label>:78:                                     ; preds = %13
  %79 = load i64, i64* %8, align 8
  %80 = shl i64 %79, -1
  %81 = sub i64 0, -6571375740321791599
  %82 = sub i64 %81, %79
  %83 = add i64 %82, -6571375740321791599
  %84 = sub i64 0, %79
  %85 = sub i64 0, -1
  %86 = sub i64 %83, %85
  %87 = add i64 %83, -1
  %88 = shl i64 %79, -1
  %89 = add i64 0, 1875204025329478066
  %90 = sub i64 %89, %79
  %91 = sub i64 %90, 1875204025329478066
  %92 = sub i64 0, %79
  %93 = sub i64 0, %91
  %94 = sub i64 0, -1
  %95 = add i64 %93, %94
  %96 = sub i64 0, %95
  %97 = add i64 %91, -1
  %98 = sub i64 0, -1
  %99 = sub i64 %79, %98
  %100 = add i64 %79, -1
  store i64 %99, i64* %8, align 8
  %101 = load i64*, i64** %4, align 8
  %102 = getelementptr inbounds i64, i64* %101, i32 1
  store i64* %102, i64** %4, align 8
  store i32 317208782, i32* %12
  br label %103

; <label>:103:                                    ; preds = %78, %75, %51, %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #4 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.6"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %4 = bitcast %"class.std::vector.6"* %3 to %"struct.std::_Vector_base.7"*
  %5 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.8"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 905317067, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %60
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 905317067, label %16
    i32 -846699195, label %21
    i32 818071063, label %36
    i32 1134264327, label %53
    i32 1087845670, label %54
    i32 882241265, label %56
    i32 -1872797407, label %58
  ]

; <label>:15:                                     ; preds = %13
  br label %60

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 -846699195, i32 1087845670
  store i32 %20, i32* %12
  br label %60

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.495
  %23 = load i32, i32* @y.496
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 818071063, i32 -1872797407
  store i32 %35, i32* %12
  br label %60

; <label>:36:                                     ; preds = %13
  %37 = load i64*, i64** %7, align 8
  store i64* %37, i64** %5, align 8
  %38 = load i32, i32* @x.495
  %39 = load i32, i32* @y.496
  %40 = add i32 %38, -888312038
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -888312038
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1134264327, i32 -1872797407
  store i32 %52, i32* %12
  br label %60

; <label>:53:                                     ; preds = %13
  store i32 882241265, i32* %12
  br label %60

; <label>:54:                                     ; preds = %13
  %55 = load i64*, i64** %6, align 8
  store i64* %55, i64** %5, align 8
  store i32 882241265, i32* %12
  br label %60

; <label>:56:                                     ; preds = %13
  %57 = load i64*, i64** %5, align 8
  ret i64* %57

; <label>:58:                                     ; preds = %13
  %59 = load i64*, i64** %7, align 8
  store i64* %59, i64** %5, align 8
  store i32 818071063, i32* %12
  br label %60

; <label>:60:                                     ; preds = %58, %54, %53, %36, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.8"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.497
  %6 = load i32, i32* @y.498
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1476509472, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1476509472, label %18
    i32 -2038508365, label %38
    i32 1112630596, label %57
    i32 1743121314, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2038508365, i32 1743121314
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %39, align 8
  %40 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %39, align 8
  %41 = bitcast %"class.std::allocator.8"* %40 to %"class.__gnu_cxx::new_allocator.9"*
  %42 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %41) #3
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.497
  %44 = load i32, i32* @y.498
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1112630596, i32 1743121314
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64, i64* %2
  ret i64 %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %60, align 8
  %61 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %60, align 8
  %62 = bitcast %"class.std::allocator.8"* %61 to %"class.__gnu_cxx::new_allocator.9"*
  %63 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %62) #3
  store i32 -2038508365, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %3 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.8"*
  ret %"class.std::allocator.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.8"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.505
  %9 = load i32, i32* @y.506
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1234380942, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1234380942, label %21
    i32 1107743405, label %41
    i32 -2132627977, label %78
    i32 -510157870, label %81
    i32 -675850528, label %82
    i32 91422616, label %88
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1107743405, i32 91422616
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.505
  %52 = load i32, i32* @y.506
  %53 = add i32 %51, -1083340365
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1083340365
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -2132627977, i32 91422616
  store i32 %77, i32* %17
  br label %96

; <label>:78:                                     ; preds = %18
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 -510157870, i32 -675850528
  store i32 %80, i32* %17
  br label %96

; <label>:81:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:82:                                     ; preds = %18
  %83 = load volatile i64*, i64** %5
  %84 = load i64, i64* %83, align 8
  %85 = mul i64 %84, 8
  %86 = call i8* @_Znwm(i64 %85)
  %87 = bitcast i8* %86 to i64*
  ret i64* %87

; <label>:88:                                     ; preds = %18
  %89 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %90 = alloca i64, align 8
  %91 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %89, align 8
  store i64 %1, i64* %90, align 8
  store i8* %2, i8** %91, align 8
  %92 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %89, align 8
  %93 = load i64, i64* %90, align 8
  %94 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %92) #3
  %95 = icmp ugt i64 %93, %94
  store i32 1107743405, i32* %17
  br label %96

; <label>:96:                                     ; preds = %88, %78, %41, %21, %20
  br label %18
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.507
  %9 = load i32, i32* @y.508
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1090234871, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %108
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1090234871, label %21
    i32 2018213939, label %41
    i32 1507097230, label %87
    i32 1673402431, label %89
  ]

; <label>:20:                                     ; preds = %18
  br label %108

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 2018213939, i32 1673402431
  store i32 %40, i32* %17
  br label %108

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator", align 8
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca i64*, align 8
  %45 = alloca %"class.std::allocator.8"*, align 8
  %46 = alloca %"class.std::move_iterator", align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  store i64* %0, i64** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store i64* %1, i64** %49, align 8
  store i64* %2, i64** %44, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %45, align 8
  %50 = bitcast %"class.std::move_iterator"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load i64*, i64** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %56, i64* %58, i64* %54)
  store i64* %59, i64** %5
  %60 = load i32, i32* @x.507
  %61 = load i32, i32* @y.508
  %62 = add i32 %60, 1701438984
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 1701438984
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 1507097230, i32 1673402431
  store i32 %86, i32* %17
  br label %108

; <label>:87:                                     ; preds = %18
  %88 = load volatile i64*, i64** %5
  ret i64* %88

; <label>:89:                                     ; preds = %18
  %90 = alloca %"class.std::move_iterator", align 8
  %91 = alloca %"class.std::move_iterator", align 8
  %92 = alloca i64*, align 8
  %93 = alloca %"class.std::allocator.8"*, align 8
  %94 = alloca %"class.std::move_iterator", align 8
  %95 = alloca %"class.std::move_iterator", align 8
  %96 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %90, i32 0, i32 0
  store i64* %0, i64** %96, align 8
  %97 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %91, i32 0, i32 0
  store i64* %1, i64** %97, align 8
  store i64* %2, i64** %92, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %93, align 8
  %98 = bitcast %"class.std::move_iterator"* %94 to i8*
  %99 = bitcast %"class.std::move_iterator"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = bitcast %"class.std::move_iterator"* %95 to i8*
  %101 = bitcast %"class.std::move_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = load i64*, i64** %92, align 8
  %103 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %94, i32 0, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %95, i32 0, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %104, i64* %106, i64* %102)
  store i32 2018213939, i32* %17
  br label %108

; <label>:108:                                    ; preds = %89, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator"* %2, i64* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %14)
  %16 = bitcast %"class.std::move_iterator"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %15, i64* %20, i64* %21)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.519
  %6 = load i32, i32* @y.520
  %7 = add i32 %5, 245938950
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 245938950
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1396532491, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1396532491, label %19
    i32 591551550, label %39
    i32 -59254293, label %74
    i32 1079550961, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 591551550, i32 1079550961
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator", align 8
  %41 = alloca %"class.std::move_iterator", align 8
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  store i64* %0, i64** %42, align 8
  %43 = bitcast %"class.std::move_iterator"* %41 to i8*
  %44 = bitcast %"class.std::move_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %41, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %46)
  store i64* %47, i64** %2
  %48 = load i32, i32* @x.519
  %49 = load i32, i32* @y.520
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -59254293, i32 1079550961
  store i32 %73, i32* %15
  br label %85

; <label>:74:                                     ; preds = %16
  %75 = load volatile i64*, i64** %2
  ret i64* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"class.std::move_iterator", align 8
  %78 = alloca %"class.std::move_iterator", align 8
  %79 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %77, i32 0, i32 0
  store i64* %0, i64** %79, align 8
  %80 = bitcast %"class.std::move_iterator"* %78 to i8*
  %81 = bitcast %"class.std::move_iterator"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %78, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %83)
  store i32 591551550, i32* %15
  br label %85

; <label>:85:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  %10 = load i64*, i64** %7, align 8
  %11 = load i64*, i64** %6, align 8
  %12 = ptrtoint i64* %10 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = add i64 %12, 5517869604350122815
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 5517869604350122815
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 -887214016, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %100
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -887214016, label %24
    i32 158702713, label %28
    i32 -433597579, label %35
    i32 -925804556, label %63
    i32 1274410769, label %94
    i32 1588721729, label %96
  ]

; <label>:23:                                     ; preds = %21
  br label %100

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 158702713, i32 -433597579
  store i32 %27, i32* %20
  br label %100

; <label>:28:                                     ; preds = %21
  %29 = load i64*, i64** %8, align 8
  %30 = bitcast i64* %29 to i8*
  %31 = load i64*, i64** %6, align 8
  %32 = bitcast i64* %31 to i8*
  %33 = load i64, i64* %9, align 8
  %34 = mul i64 8, %33
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %34, i32 8, i1 false)
  store i32 -433597579, i32* %20
  br label %100

; <label>:35:                                     ; preds = %21
  %36 = load i32, i32* @x.523
  %37 = load i32, i32* @y.524
  %38 = add i32 %36, -1553893622
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1553893622
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -925804556, i32 1588721729
  store i32 %62, i32* %20
  br label %100

; <label>:63:                                     ; preds = %21
  %64 = load i64*, i64** %8, align 8
  %65 = load i64, i64* %9, align 8
  %66 = getelementptr inbounds i64, i64* %64, i64 %65
  store i64* %66, i64** %4
  %67 = load i32, i32* @x.523
  %68 = load i32, i32* @y.524
  %69 = sub i32 %67, -1220435101
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -1220435101
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 1274410769, i32 1588721729
  store i32 %93, i32* %20
  br label %100

; <label>:94:                                     ; preds = %21
  %95 = load volatile i64*, i64** %4
  ret i64* %95

; <label>:96:                                     ; preds = %21
  %97 = load i64*, i64** %8, align 8
  %98 = load i64, i64* %9, align 8
  %99 = getelementptr inbounds i64, i64* %97, i64 %98
  store i32 -925804556, i32* %20
  br label %100

; <label>:100:                                    ; preds = %96, %63, %35, %28, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.525
  %6 = load i32, i32* @y.526
  %7 = sub i32 %5, 412410321
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 412410321
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1723988272, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1723988272, label %19
    i32 13637974, label %39
    i32 -287833560, label %70
    i32 1477907965, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 13637974, i32 1477907965
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator", align 8
  %41 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  store i64* %0, i64** %41, align 8
  %42 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator"* %40)
  store i64* %42, i64** %2
  %43 = load i32, i32* @x.525
  %44 = load i32, i32* @y.526
  %45 = add i32 %43, -1491755243
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1491755243
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -287833560, i32 1477907965
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64*, i64** %2
  ret i64* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::move_iterator", align 8
  %74 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %73, i32 0, i32 0
  store i64* %0, i64** %74, align 8
  %75 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator"* %73)
  store i32 13637974, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator"*, i64*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEEC2Ev(%"struct.std::_Bvector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %3 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %3, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %5 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5 to %"class.std::allocator.12"*
  call void @_ZNSaImEC2Ev(%"class.std::allocator.12"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5, i32 0, i32 0
  invoke void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %7)
          to label %8 unwind label %64

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.533
  %10 = load i32, i32* @y.534
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %10, 10
  %18 = xor i1 %16, true
  %19 = xor i1 %17, true
  %20 = xor i1 false, true
  %21 = and i1 %18, false
  %22 = and i1 %16, %20
  %23 = and i1 %19, false
  %24 = and i1 %17, %20
  %25 = or i1 %21, %22
  %26 = or i1 %23, %24
  %27 = xor i1 %25, %26
  %28 = or i1 %18, %19
  %29 = xor i1 %28, true
  %30 = or i1 false, %20
  %31 = and i1 %29, %30
  %32 = or i1 %27, %31
  %33 = or i1 %16, %17
  br i1 %32, label %34, label %74

; <label>:34:                                     ; preds = %8, %74
  %35 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5, i32 0, i32 1
  %36 = load i32, i32* @x.533
  %37 = load i32, i32* @y.534
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %74

; <label>:61:                                     ; preds = %34
  invoke void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"* %35)
          to label %62 unwind label %64

; <label>:62:                                     ; preds = %61
  %63 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %63, align 8
  ret void

; <label>:64:                                     ; preds = %61, %1
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %3, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %4, align 4
  %68 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5 to %"class.std::allocator.12"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.12"* %68) #3
  br label %69

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %3, align 8
  %71 = load i32, i32* %4, align 4
  %72 = insertvalue { i8*, i32 } undef, i8* %70, 0
  %73 = insertvalue { i8*, i32 } %72, i32 %71, 1
  resume { i8*, i32 } %73

; <label>:74:                                     ; preds = %34, %8
  %75 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %5, i32 0, i32 1
  br label %34
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2Ev(%"class.std::allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.535
  %5 = load i32, i32* @y.536
  %6 = add i32 %4, -784983940
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -784983940
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1369357257, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1369357257, label %18
    i32 224053787, label %38
    i32 2073254990, label %68
    i32 -1875828182, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 224053787, i32 -1875828182
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %39, align 8
  %40 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %39, align 8
  %41 = bitcast %"class.std::allocator.12"* %40 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %41) #3
  %42 = load i32, i32* @x.535
  %43 = load i32, i32* @y.536
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 2073254990, i32 -1875828182
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %70, align 8
  %71 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %70, align 8
  %72 = bitcast %"class.std::allocator.12"* %71 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %72) #3
  store i32 224053787, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2Ev(%"struct.std::_Bit_iterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.537
  %5 = load i32, i32* @y.538
  %6 = add i32 %4, -1225147826
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1225147826
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1294381233, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1294381233, label %18
    i32 355614370, label %26
    i32 1742192352, label %45
    i32 -2140870471, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 355614370, i32 -2140870471
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %27, align 8
  %28 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %27, align 8
  %29 = bitcast %"struct.std::_Bit_iterator"* %28 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %29, i64* null, i32 0)
  %30 = load i32, i32* @x.537
  %31 = load i32, i32* @y.538
  %32 = add i32 %30, -1891344089
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1891344089
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1742192352, i32 -2140870471
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %47, align 8
  %48 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %47, align 8
  %49 = bitcast %"struct.std::_Bit_iterator"* %48 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %49, i64* null, i32 0)
  store i32 355614370, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImED2Ev(%"class.std::allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.541
  %5 = load i32, i32* @y.542
  %6 = add i32 %4, 1288688511
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1288688511
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 626199844, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 626199844, label %18
    i32 1329062816, label %26
    i32 -1572768873, label %43
    i32 1361461686, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1329062816, i32 1361461686
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %27, align 8
  %29 = load i32, i32* @x.541
  %30 = load i32, i32* @y.542
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1572768873, i32 1361461686
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret void

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %45, align 8
  store i32 1329062816, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"*, i64*, i32) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.543
  %7 = load i32, i32* @y.544
  %8 = sub i32 %6, -2019039573
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -2019039573
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -394705915, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %63
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -394705915, label %20
    i32 -186939530, label %28
    i32 -1930045225, label %52
    i32 -784455215, label %53
  ]

; <label>:19:                                     ; preds = %17
  br label %63

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -186939530, i32 -784455215
  store i32 %27, i32* %16
  br label %63

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i32 %2, i32* %31, align 4
  %32 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %29, align 8
  %33 = bitcast %"struct.std::_Bit_iterator_base"* %32 to %"struct.std::iterator"*
  %34 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 0
  %35 = load i64*, i64** %30, align 8
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 1
  %37 = load i32, i32* %31, align 4
  store i32 %37, i32* %36, align 8
  %38 = load i32, i32* @x.543
  %39 = load i32, i32* @y.544
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1930045225, i32 -784455215
  store i32 %51, i32* %16
  br label %63

; <label>:52:                                     ; preds = %17
  ret void

; <label>:53:                                     ; preds = %17
  %54 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %55 = alloca i64*, align 8
  %56 = alloca i32, align 4
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %54, align 8
  store i64* %1, i64** %55, align 8
  store i32 %2, i32* %56, align 4
  %57 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %54, align 8
  %58 = bitcast %"struct.std::_Bit_iterator_base"* %57 to %"struct.std::iterator"*
  %59 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %57, i32 0, i32 0
  %60 = load i64*, i64** %55, align 8
  store i64* %60, i64** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %57, i32 0, i32 1
  %62 = load i32, i32* %56, align 4
  store i32 %62, i32* %61, align 8
  store i32 -186939530, i32* %16
  br label %63

; <label>:63:                                     ; preds = %53, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEED2Ev(%"struct.std::_Bvector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %5 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  invoke void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %5)
          to label %6 unwind label %37

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.547
  %8 = load i32, i32* @y.548
  %9 = sub i32 %7, -2029310980
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -2029310980
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = and i1 %15, %16
  %18 = xor i1 %15, %16
  %19 = or i1 %17, %18
  %20 = or i1 %15, %16
  br i1 %19, label %21, label %74

; <label>:21:                                     ; preds = %6, %74
  %22 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %22) #3
  %23 = load i32, i32* @x.547
  %24 = load i32, i32* @y.548
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %74

; <label>:36:                                     ; preds = %21
  ret void

; <label>:37:                                     ; preds = %1
  %38 = landingpad { i8*, i32 }
          cleanup
          filter [0 x i8*] zeroinitializer
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %3, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %4, align 4
  %41 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %41) #3
  br label %42

; <label>:42:                                     ; preds = %37
  %43 = load i32, i32* @x.547
  %44 = load i32, i32* @y.548
  %45 = add i32 %43, -1105741774
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1105741774
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %76

; <label>:57:                                     ; preds = %42, %76
  %58 = load i8*, i8** %3, align 8
  call void @__cxa_call_unexpected(i8* %58) #14
  %59 = load i32, i32* @x.547
  %60 = load i32, i32* @y.548
  %61 = add i32 %59, -997914610
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -997914610
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %76

; <label>:73:                                     ; preds = %57
  unreachable

; <label>:74:                                     ; preds = %21, %6
  %75 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %75) #3
  br label %21

; <label>:76:                                     ; preds = %57, %42
  %77 = load i8*, i8** %3, align 8
  call void @__cxa_call_unexpected(i8* %77) #14
  br label %57
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Bvector_base"*
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.549
  %8 = load i32, i32* @y.550
  %9 = add i32 %7, -760872442
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -760872442
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -2012991742, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %114
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -2012991742, label %21
    i32 400833460, label %29
    i32 1950759327, label %66
    i32 2118634480, label %69
    i32 142241719, label %103
    i32 -704792228, label %104
  ]

; <label>:20:                                     ; preds = %18
  br label %114

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 400833460, i32 -704792228
  store i32 %28, i32* %17
  br label %114

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.std::_Bvector_base"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %4
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %30, align 8
  %32 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %30, align 8
  store %"struct.std::_Bvector_base"* %32, %"struct.std::_Bvector_base"** %3
  %33 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %34 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %34, i32 0, i32 0
  %36 = bitcast %"struct.std::_Bit_iterator"* %35 to %"struct.std::_Bit_iterator_base"*
  %37 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %36, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = icmp ne i64* %38, null
  store i1 %39, i1* %2
  %40 = load i32, i32* @x.549
  %41 = load i32, i32* @y.550
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1950759327, i32 -704792228
  store i32 %65, i32* %17
  br label %114

; <label>:66:                                     ; preds = %18
  %67 = load volatile i1, i1* %2
  %68 = select i1 %67, i32 2118634480, i32 142241719
  store i32 %68, i32* %17
  br label %114

; <label>:69:                                     ; preds = %18
  %70 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %71 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %70, i32 0, i32 0
  %72 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %71) #3
  %73 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %74 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Bit_iterator"* %75 to %"struct.std::_Bit_iterator_base"*
  %77 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %76, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = ptrtoint i64* %72 to i64
  %80 = ptrtoint i64* %78 to i64
  %81 = add i64 %79, 4348334584769005979
  %82 = sub i64 %81, %80
  %83 = sub i64 %82, 4348334584769005979
  %84 = sub i64 %79, %80
  %85 = sdiv exact i64 %83, 8
  %86 = load volatile i64*, i64** %4
  store i64 %85, i64* %86, align 8
  %87 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %88 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %88 to %"class.std::allocator.12"*
  %90 = load volatile %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %3
  %91 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %91, i32 0, i32 2
  %93 = load i64*, i64** %92, align 8
  %94 = load volatile i64*, i64** %4
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 0, 1737583402354197397
  %97 = sub i64 %96, %95
  %98 = add i64 %97, 1737583402354197397
  %99 = sub i64 0, %95
  %100 = getelementptr inbounds i64, i64* %93, i64 %98
  %101 = load volatile i64*, i64** %4
  %102 = load i64, i64* %101, align 8
  call void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.12"* dereferenceable(1) %89, i64* %100, i64 %102)
  store i32 142241719, i32* %17
  br label %114

; <label>:103:                                    ; preds = %18
  ret void

; <label>:104:                                    ; preds = %18
  %105 = alloca %"struct.std::_Bvector_base"*, align 8
  %106 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %105, align 8
  %107 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %105, align 8
  %108 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %108, i32 0, i32 0
  %110 = bitcast %"struct.std::_Bit_iterator"* %109 to %"struct.std::_Bit_iterator_base"*
  %111 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %110, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = icmp ne i64* %112, null
  store i32 400833460, i32* %17
  br label %114

; <label>:114:                                    ; preds = %104, %69, %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %3 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %3 to %"class.std::allocator.12"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.12"* %4) #3
  ret void
}

declare void @__cxa_call_unexpected(i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i64*
  %4 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %6, align 8
  %7 = load %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %6, align 8
  store %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %4
  %8 = load volatile %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %4
  %9 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %8, i32 0, i32 2
  %10 = load i64*, i64** %9, align 8
  store i64* %10, i64** %3
  %11 = alloca i32
  store i32 -319216239, i32* %11
  br label %12

; <label>:12:                                     ; preds = %1, %136
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -319216239, label %15
    i32 2030941486, label %19
    i32 -40509191, label %35
    i32 2000231699, label %68
    i32 1648411765, label %69
    i32 -851103932, label %70
    i32 -40461496, label %97
    i32 -72695957, label %125
    i32 -1405070743, label %127
    i32 930552878, label %134
  ]

; <label>:14:                                     ; preds = %12
  br label %136

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %3
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 2030941486, i32 1648411765
  store i32 %18, i32* %11
  br label %136

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.553
  %21 = load i32, i32* @y.554
  %22 = sub i32 %20, 1395250593
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 1395250593
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -40509191, i32 -1405070743
  store i32 %34, i32* %11
  br label %136

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %4
  %37 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %36, i32 0, i32 2
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 -1
  %40 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %39) #3
  %41 = getelementptr inbounds i64, i64* %40, i64 1
  store i64* %41, i64** %5, align 8
  %42 = load i32, i32* @x.553
  %43 = load i32, i32* @y.554
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 2000231699, i32 -1405070743
  store i32 %67, i32* %11
  br label %136

; <label>:68:                                     ; preds = %12
  store i32 -851103932, i32* %11
  br label %136

; <label>:69:                                     ; preds = %12
  store i64* null, i64** %5, align 8
  store i32 -851103932, i32* %11
  br label %136

; <label>:70:                                     ; preds = %12
  %71 = load i32, i32* @x.553
  %72 = load i32, i32* @y.554
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 -40461496, i32 930552878
  store i32 %96, i32* %11
  br label %136

; <label>:97:                                     ; preds = %12
  %98 = load i64*, i64** %5, align 8
  store i64* %98, i64** %2
  %99 = load i32, i32* @x.553
  %100 = load i32, i32* @y.554
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 -72695957, i32 930552878
  store i32 %124, i32* %11
  br label %136

; <label>:125:                                    ; preds = %12
  %126 = load volatile i64*, i64** %2
  ret i64* %126

; <label>:127:                                    ; preds = %12
  %128 = load volatile %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %4
  %129 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %128, i32 0, i32 2
  %130 = load i64*, i64** %129, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 -1
  %132 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %131) #3
  %133 = getelementptr inbounds i64, i64* %132, i64 1
  store i64* %133, i64** %5, align 8
  store i32 -40509191, i32* %11
  br label %136

; <label>:134:                                    ; preds = %12
  %135 = load i64*, i64** %5, align 8
  store i32 -40461496, i32* %11
  br label %136

; <label>:136:                                    ; preds = %134, %127, %97, %70, %69, %68, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.12"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.12"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %4, align 8
  %8 = bitcast %"class.std::allocator.12"* %7 to %"class.__gnu_cxx::new_allocator.13"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.13"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = bitcast i64* %3 to i8*
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.13"*, i64*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE15_M_erase_at_endESt13_Bit_iterator(%"class.std::vector.11"*, i64*, i32) #4 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  store i64* %1, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  store i32 %2, i32* %8, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %5, align 8
  %9 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %10 = bitcast %"class.std::vector.11"* %9 to %"struct.std::_Bvector_base"*
  %11 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %11, i32 0, i32 1
  %13 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %14 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 12, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"*) #4 comdat align 2 {
  %2 = alloca { i64*, i32 }
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.563
  %6 = load i32, i32* @y.564
  %7 = sub i32 %5, 960321069
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 960321069
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1360974084, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1360974084, label %19
    i32 1805957793, label %27
    i32 1270600876, label %52
    i32 1495705583, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1805957793, i32 1495705583
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Bit_iterator", align 8
  %29 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %29, align 8
  %30 = load %"class.std::vector.11"*, %"class.std::vector.11"** %29, align 8
  %31 = bitcast %"class.std::vector.11"* %30 to %"struct.std::_Bvector_base"*
  %32 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Bit_iterator"* %28 to i8*
  %35 = bitcast %"struct.std::_Bit_iterator"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false)
  %36 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %37 = load { i64*, i32 }, { i64*, i32 }* %36, align 8
  store { i64*, i32 } %37, { i64*, i32 }* %2
  %38 = load i32, i32* @x.563
  %39 = load i32, i32* @y.564
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1270600876, i32 1495705583
  store i32 %51, i32* %15
  br label %65

; <label>:52:                                     ; preds = %16
  %53 = load volatile { i64*, i32 }, { i64*, i32 }* %2
  ret { i64*, i32 } %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"struct.std::_Bit_iterator", align 8
  %56 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %56, align 8
  %57 = load %"class.std::vector.11"*, %"class.std::vector.11"** %56, align 8
  %58 = bitcast %"class.std::vector.11"* %57 to %"struct.std::_Bvector_base"*
  %59 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %59, i32 0, i32 0
  %61 = bitcast %"struct.std::_Bit_iterator"* %55 to i8*
  %62 = bitcast %"struct.std::_Bit_iterator"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 16, i32 8, i1 false)
  %63 = bitcast %"struct.std::_Bit_iterator"* %55 to { i64*, i32 }*
  %64 = load { i64*, i32 }, { i64*, i32 }* %63, align 8
  store i32 1805957793, i32* %15
  br label %65

; <label>:65:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.11"*, align 8
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %6 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.11"* %5) #3
  %7 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 0
  %9 = extractvalue { i64*, i32 } %6, 0
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %7, i32 0, i32 1
  %11 = extractvalue { i64*, i32 } %6, 1
  store i32 %11, i32* %10, align 8
  %12 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  %13 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"* %5) #3
  %14 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 0
  %16 = extractvalue { i64*, i32 } %13, 0
  store i64* %16, i64** %15, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %14, i32 0, i32 1
  %18 = extractvalue { i64*, i32 } %13, 1
  store i32 %18, i32* %17, align 8
  %19 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %20 = invoke i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %12, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %19)
          to label %21 unwind label %22

; <label>:21:                                     ; preds = %1
  ret i64 %20

; <label>:22:                                     ; preds = %1
  %23 = landingpad { i8*, i32 }
          catch i8* null
  %24 = extractvalue { i8*, i32 } %23, 0
  call void @__clang_call_terminate(i8* %24) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.567
  %7 = load i32, i32* @y.568
  %8 = add i32 %6, 1956905361
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1956905361
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -995817908, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %97
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -995817908, label %20
    i32 -321045572, label %40
    i32 470883362, label %81
    i32 -2031905274, label %83
  ]

; <label>:19:                                     ; preds = %17
  br label %97

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -321045572, i32 -2031905274
  store i32 %39, i32* %16
  br label %97

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Bit_iterator", align 8
  %42 = alloca %"struct.std::_Bit_iterator"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %42, align 8
  store i64 %1, i64* %43, align 8
  %45 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %42, align 8
  %46 = bitcast %"struct.std::_Bit_iterator"* %44 to i8*
  %47 = bitcast %"struct.std::_Bit_iterator"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false)
  %48 = load i64, i64* %43, align 8
  %49 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %44, i64 %48)
  %50 = bitcast %"struct.std::_Bit_iterator"* %41 to i8*
  %51 = bitcast %"struct.std::_Bit_iterator"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 16, i32 8, i1 false)
  %52 = bitcast %"struct.std::_Bit_iterator"* %41 to { i64*, i32 }*
  %53 = load { i64*, i32 }, { i64*, i32 }* %52, align 8
  store { i64*, i32 } %53, { i64*, i32 }* %3
  %54 = load i32, i32* @x.567
  %55 = load i32, i32* @y.568
  %56 = sub i32 %54, -91899110
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -91899110
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 470883362, i32 -2031905274
  store i32 %80, i32* %16
  br label %97

; <label>:81:                                     ; preds = %17
  %82 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %82

; <label>:83:                                     ; preds = %17
  %84 = alloca %"struct.std::_Bit_iterator", align 8
  %85 = alloca %"struct.std::_Bit_iterator"*, align 8
  %86 = alloca i64, align 8
  %87 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %85, align 8
  store i64 %1, i64* %86, align 8
  %88 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %85, align 8
  %89 = bitcast %"struct.std::_Bit_iterator"* %87 to i8*
  %90 = bitcast %"struct.std::_Bit_iterator"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 16, i32 8, i1 false)
  %91 = load i64, i64* %86, align 8
  %92 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %87, i64 %91)
  %93 = bitcast %"struct.std::_Bit_iterator"* %84 to i8*
  %94 = bitcast %"struct.std::_Bit_iterator"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 16, i32 8, i1 false)
  %95 = bitcast %"struct.std::_Bit_iterator"* %84 to { i64*, i32 }*
  %96 = load { i64*, i32 }, { i64*, i32 }* %95, align 8
  store i32 -321045572, i32* %16
  br label %97

; <label>:97:                                     ; preds = %83, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE6insertESt19_Bit_const_iteratormRKb(%"class.std::vector.11"*, i64*, i32, i64, i8* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca { i64*, i32 }
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.569
  %10 = load i32, i32* @y.570
  %11 = add i32 %9, -1663536138
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, -1663536138
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 365119754, i32* %19
  br label %20

; <label>:20:                                     ; preds = %5, %177
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 365119754, label %23
    i32 -689049617, label %43
    i32 -2137702664, label %122
    i32 -1955121872, label %124
  ]

; <label>:22:                                     ; preds = %20
  br label %177

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -689049617, i32 -1955121872
  store i32 %42, i32* %19
  br label %177

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Bit_iterator", align 8
  %45 = alloca %"struct.std::_Bit_const_iterator", align 8
  %46 = alloca %"class.std::vector.11"*, align 8
  %47 = alloca i64, align 8
  %48 = alloca i8*, align 8
  %49 = alloca i64, align 8
  %50 = alloca %"struct.std::_Bit_const_iterator", align 8
  %51 = alloca %"struct.std::_Bit_iterator", align 8
  %52 = alloca %"struct.std::_Bit_iterator", align 8
  %53 = bitcast %"struct.std::_Bit_const_iterator"* %45 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  store i64* %1, i64** %54, align 8
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  store i32 %2, i32* %55, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %46, align 8
  store i64 %3, i64* %47, align 8
  store i8* %4, i8** %48, align 8
  %56 = load %"class.std::vector.11"*, %"class.std::vector.11"** %46, align 8
  %57 = bitcast %"struct.std::_Bit_const_iterator"* %45 to %"struct.std::_Bit_iterator_base"*
  %58 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE6cbeginEv(%"class.std::vector.11"* %56) #3
  %59 = bitcast %"struct.std::_Bit_const_iterator"* %50 to { i64*, i32 }*
  %60 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %59, i32 0, i32 0
  %61 = extractvalue { i64*, i32 } %58, 0
  store i64* %61, i64** %60, align 8
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %59, i32 0, i32 1
  %63 = extractvalue { i64*, i32 } %58, 1
  store i32 %63, i32* %62, align 8
  %64 = bitcast %"struct.std::_Bit_const_iterator"* %50 to %"struct.std::_Bit_iterator_base"*
  %65 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %57, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %64)
  store i64 %65, i64* %49, align 8
  %66 = call { i64*, i32 } @_ZNKSt19_Bit_const_iterator13_M_const_castEv(%"struct.std::_Bit_const_iterator"* %45)
  %67 = bitcast %"struct.std::_Bit_iterator"* %51 to { i64*, i32 }*
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %67, i32 0, i32 0
  %69 = extractvalue { i64*, i32 } %66, 0
  store i64* %69, i64** %68, align 8
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %67, i32 0, i32 1
  %71 = extractvalue { i64*, i32 } %66, 1
  store i32 %71, i32* %70, align 8
  %72 = load i64, i64* %47, align 8
  %73 = load i8*, i8** %48, align 8
  %74 = load i8, i8* %73, align 1
  %75 = trunc i8 %74 to i1
  %76 = bitcast %"struct.std::_Bit_iterator"* %51 to { i64*, i32 }*
  %77 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  call void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(%"class.std::vector.11"* %56, i64* %78, i32 %80, i64 %72, i1 zeroext %75)
  %81 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"* %56) #3
  %82 = bitcast %"struct.std::_Bit_iterator"* %52 to { i64*, i32 }*
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 0
  %84 = extractvalue { i64*, i32 } %81, 0
  store i64* %84, i64** %83, align 8
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 1
  %86 = extractvalue { i64*, i32 } %81, 1
  store i32 %86, i32* %85, align 8
  %87 = load i64, i64* %49, align 8
  %88 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %52, i64 %87)
  %89 = bitcast %"struct.std::_Bit_iterator"* %44 to { i64*, i32 }*
  %90 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %89, i32 0, i32 0
  %91 = extractvalue { i64*, i32 } %88, 0
  store i64* %91, i64** %90, align 8
  %92 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %89, i32 0, i32 1
  %93 = extractvalue { i64*, i32 } %88, 1
  store i32 %93, i32* %92, align 8
  %94 = bitcast %"struct.std::_Bit_iterator"* %44 to { i64*, i32 }*
  %95 = load { i64*, i32 }, { i64*, i32 }* %94, align 8
  store { i64*, i32 } %95, { i64*, i32 }* %6
  %96 = load i32, i32* @x.569
  %97 = load i32, i32* @y.570
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 -2137702664, i32 -1955121872
  store i32 %121, i32* %19
  br label %177

; <label>:122:                                    ; preds = %20
  %123 = load volatile { i64*, i32 }, { i64*, i32 }* %6
  ret { i64*, i32 } %123

; <label>:124:                                    ; preds = %20
  %125 = alloca %"struct.std::_Bit_iterator", align 8
  %126 = alloca %"struct.std::_Bit_const_iterator", align 8
  %127 = alloca %"class.std::vector.11"*, align 8
  %128 = alloca i64, align 8
  %129 = alloca i8*, align 8
  %130 = alloca i64, align 8
  %131 = alloca %"struct.std::_Bit_const_iterator", align 8
  %132 = alloca %"struct.std::_Bit_iterator", align 8
  %133 = alloca %"struct.std::_Bit_iterator", align 8
  %134 = bitcast %"struct.std::_Bit_const_iterator"* %126 to { i64*, i32 }*
  %135 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %134, i32 0, i32 0
  store i64* %1, i64** %135, align 8
  %136 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %134, i32 0, i32 1
  store i32 %2, i32* %136, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %127, align 8
  store i64 %3, i64* %128, align 8
  store i8* %4, i8** %129, align 8
  %137 = load %"class.std::vector.11"*, %"class.std::vector.11"** %127, align 8
  %138 = bitcast %"struct.std::_Bit_const_iterator"* %126 to %"struct.std::_Bit_iterator_base"*
  %139 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE6cbeginEv(%"class.std::vector.11"* %137) #3
  %140 = bitcast %"struct.std::_Bit_const_iterator"* %131 to { i64*, i32 }*
  %141 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %140, i32 0, i32 0
  %142 = extractvalue { i64*, i32 } %139, 0
  store i64* %142, i64** %141, align 8
  %143 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %140, i32 0, i32 1
  %144 = extractvalue { i64*, i32 } %139, 1
  store i32 %144, i32* %143, align 8
  %145 = bitcast %"struct.std::_Bit_const_iterator"* %131 to %"struct.std::_Bit_iterator_base"*
  %146 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %138, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %145)
  store i64 %146, i64* %130, align 8
  %147 = call { i64*, i32 } @_ZNKSt19_Bit_const_iterator13_M_const_castEv(%"struct.std::_Bit_const_iterator"* %126)
  %148 = bitcast %"struct.std::_Bit_iterator"* %132 to { i64*, i32 }*
  %149 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %148, i32 0, i32 0
  %150 = extractvalue { i64*, i32 } %147, 0
  store i64* %150, i64** %149, align 8
  %151 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %148, i32 0, i32 1
  %152 = extractvalue { i64*, i32 } %147, 1
  store i32 %152, i32* %151, align 8
  %153 = load i64, i64* %128, align 8
  %154 = load i8*, i8** %129, align 8
  %155 = load i8, i8* %154, align 1
  %156 = trunc i8 %155 to i1
  %157 = bitcast %"struct.std::_Bit_iterator"* %132 to { i64*, i32 }*
  %158 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 1
  %161 = load i32, i32* %160, align 8
  call void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(%"class.std::vector.11"* %137, i64* %159, i32 %161, i64 %153, i1 zeroext %156)
  %162 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"* %137) #3
  %163 = bitcast %"struct.std::_Bit_iterator"* %133 to { i64*, i32 }*
  %164 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %163, i32 0, i32 0
  %165 = extractvalue { i64*, i32 } %162, 0
  store i64* %165, i64** %164, align 8
  %166 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %163, i32 0, i32 1
  %167 = extractvalue { i64*, i32 } %162, 1
  store i32 %167, i32* %166, align 8
  %168 = load i64, i64* %130, align 8
  %169 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %133, i64 %168)
  %170 = bitcast %"struct.std::_Bit_iterator"* %125 to { i64*, i32 }*
  %171 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %170, i32 0, i32 0
  %172 = extractvalue { i64*, i32 } %169, 0
  store i64* %172, i64** %171, align 8
  %173 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %170, i32 0, i32 1
  %174 = extractvalue { i64*, i32 } %169, 1
  store i32 %174, i32* %173, align 8
  %175 = bitcast %"struct.std::_Bit_iterator"* %125 to { i64*, i32 }*
  %176 = load { i64*, i32 }, { i64*, i32 }* %175, align 8
  store i32 -689049617, i32* %19
  br label %177

; <label>:177:                                    ; preds = %124, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.11"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, i32 0, i32 1
  %8 = bitcast %"struct.std::_Bit_iterator"* %2 to i8*
  %9 = bitcast %"struct.std::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_iterator"* %2 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_iterator"* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.573
  %6 = load i32, i32* @y.574
  %7 = add i32 %5, 1030642402
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1030642402
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -599380016, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -599380016, label %19
    i32 1662466690, label %39
    i32 1254740363, label %67
    i32 -1835445464, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1662466690, i32 -1835445464
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %41 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %40, align 8
  store %"struct.std::_Bit_iterator"* %1, %"struct.std::_Bit_iterator"** %41, align 8
  %42 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %40, align 8
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %42 to %"struct.std::_Bit_iterator_base"*
  %44 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %41, align 8
  %45 = bitcast %"struct.std::_Bit_iterator"* %44 to %"struct.std::_Bit_iterator_base"*
  %46 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %41, align 8
  %49 = bitcast %"struct.std::_Bit_iterator"* %48 to %"struct.std::_Bit_iterator_base"*
  %50 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %43, i64* %47, i32 %51)
  %52 = load i32, i32* @x.573
  %53 = load i32, i32* @y.574
  %54 = sub i32 %52, 725158717
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 725158717
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1254740363, i32 -1835445464
  store i32 %66, i32* %15
  br label %81

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %70 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %69, align 8
  store %"struct.std::_Bit_iterator"* %1, %"struct.std::_Bit_iterator"** %70, align 8
  %71 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %69, align 8
  %72 = bitcast %"struct.std::_Bit_const_iterator"* %71 to %"struct.std::_Bit_iterator_base"*
  %73 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %70, align 8
  %74 = bitcast %"struct.std::_Bit_iterator"* %73 to %"struct.std::_Bit_iterator_base"*
  %75 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %74, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %70, align 8
  %78 = bitcast %"struct.std::_Bit_iterator"* %77 to %"struct.std::_Bit_iterator_base"*
  %79 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %72, i64* %76, i32 %80)
  store i32 1662466690, i32* %15
  br label %81

; <label>:81:                                     ; preds = %68, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16), %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #4 comdat {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = ptrtoint i64* %7 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 %11, 2378293586717879230
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 2378293586717879230
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  %18 = mul nsw i64 64, %17
  %19 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %20 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = sub i64 0, %18
  %24 = sub i64 0, %22
  %25 = add i64 %23, %24
  %26 = sub i64 0, %25
  %27 = add nsw i64 %18, %22
  %28 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %29 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = sub i64 0, %31
  %33 = add i64 %26, %32
  %34 = sub nsw i64 %26, %31
  ret i64 %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE3endEv(%"class.std::vector.11"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.577
  %3 = load i32, i32* @y.578
  %4 = sub i32 %2, -224383263
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -224383263
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %44

; <label>:16:                                     ; preds = %1, %44
  %17 = alloca %"struct.std::_Bit_const_iterator", align 8
  %18 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %18, align 8
  %19 = load %"class.std::vector.11"*, %"class.std::vector.11"** %18, align 8
  %20 = bitcast %"class.std::vector.11"* %19 to %"struct.std::_Bvector_base"*
  %21 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %21, i32 0, i32 1
  %23 = load i32, i32* @x.577
  %24 = load i32, i32* @y.578
  %25 = add i32 %23, 671355937
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, 671355937
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %44

; <label>:37:                                     ; preds = %16
  invoke void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %17, %"struct.std::_Bit_iterator"* dereferenceable(16) %22)
          to label %38 unwind label %41

; <label>:38:                                     ; preds = %37
  %39 = bitcast %"struct.std::_Bit_const_iterator"* %17 to { i64*, i32 }*
  %40 = load { i64*, i32 }, { i64*, i32 }* %39, align 8
  ret { i64*, i32 } %40

; <label>:41:                                     ; preds = %37
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  call void @__clang_call_terminate(i8* %43) #12
  unreachable

; <label>:44:                                     ; preds = %16, %1
  %45 = alloca %"struct.std::_Bit_const_iterator", align 8
  %46 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %46, align 8
  %47 = load %"class.std::vector.11"*, %"class.std::vector.11"** %46, align 8
  %48 = bitcast %"class.std::vector.11"* %47 to %"struct.std::_Bvector_base"*
  %49 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %49, i32 0, i32 1
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bit_const_iterator", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, i32 0, i32 0
  invoke void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %2, %"struct.std::_Bit_iterator"* dereferenceable(16) %7)
          to label %8 unwind label %52

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.579
  %10 = load i32, i32* @y.580
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %10, 10
  %18 = xor i1 %16, true
  %19 = xor i1 %17, true
  %20 = xor i1 true, true
  %21 = and i1 %18, true
  %22 = and i1 %16, %20
  %23 = and i1 %19, true
  %24 = and i1 %17, %20
  %25 = or i1 %21, %22
  %26 = or i1 %23, %24
  %27 = xor i1 %25, %26
  %28 = or i1 %18, %19
  %29 = xor i1 %28, true
  %30 = or i1 true, %20
  %31 = and i1 %29, %30
  %32 = or i1 %27, %31
  %33 = or i1 %16, %17
  br i1 %32, label %34, label %55

; <label>:34:                                     ; preds = %8, %55
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %36 = load { i64*, i32 }, { i64*, i32 }* %35, align 8
  %37 = load i32, i32* @x.579
  %38 = load i32, i32* @y.580
  %39 = add i32 %37, 435760359
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 435760359
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %55

; <label>:51:                                     ; preds = %34
  ret { i64*, i32 } %36

; <label>:52:                                     ; preds = %1
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  call void @__clang_call_terminate(i8* %54) #12
  unreachable

; <label>:55:                                     ; preds = %34, %8
  %56 = bitcast %"struct.std::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %57 = load { i64*, i32 }, { i64*, i32 }* %56, align 8
  br label %34
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %3, align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %7 = load i64, i64* %4, align 8
  call void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"* %6, i64 %7)
  ret %"struct.std::_Bit_iterator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base7_M_incrEl(%"struct.std::_Bit_iterator_base"*, i64) #4 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Bit_iterator_base"*
  %5 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %8 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %5, align 8
  store %"struct.std::_Bit_iterator_base"* %8, %"struct.std::_Bit_iterator_base"** %4
  %9 = load i64, i64* %6, align 8
  %10 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %11 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = sub i64 0, %9
  %15 = sub i64 0, %13
  %16 = add i64 %14, %15
  %17 = sub i64 0, %16
  %18 = add nsw i64 %9, %13
  store i64 %17, i64* %7, align 8
  %19 = load i64, i64* %7, align 8
  %20 = sdiv i64 %19, 64
  %21 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %22 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %21, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 %20
  store i64* %24, i64** %22, align 8
  %25 = load i64, i64* %7, align 8
  %26 = srem i64 %25, 64
  store i64 %26, i64* %7, align 8
  %27 = load i64, i64* %7, align 8
  store i64 %27, i64* %3
  %28 = alloca i32
  store i32 -345390037, i32* %28
  br label %29

; <label>:29:                                     ; preds = %2, %125
  %30 = load i32, i32* %28
  switch i32 %30, label %31 [
    i32 -345390037, label %32
    i32 -2059958061, label %36
    i32 -1744390227, label %52
    i32 -2029120930, label %89
    i32 1033279062, label %90
    i32 1904000573, label %95
  ]

; <label>:31:                                     ; preds = %29
  br label %125

; <label>:32:                                     ; preds = %29
  %33 = load volatile i64, i64* %3
  %34 = icmp slt i64 %33, 0
  %35 = select i1 %34, i32 -2059958061, i32 1033279062
  store i32 %35, i32* %28
  br label %125

; <label>:36:                                     ; preds = %29
  %37 = load i32, i32* @x.583
  %38 = load i32, i32* @y.584
  %39 = add i32 %37, 1425216454
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1425216454
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1744390227, i32 1904000573
  store i32 %51, i32* %28
  br label %125

; <label>:52:                                     ; preds = %29
  %53 = load i64, i64* %7, align 8
  %54 = sub i64 0, %53
  %55 = sub i64 0, 64
  %56 = add i64 %54, %55
  %57 = sub i64 0, %56
  %58 = add nsw i64 %53, 64
  store i64 %57, i64* %7, align 8
  %59 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %60 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %59, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = getelementptr inbounds i64, i64* %61, i32 -1
  store i64* %62, i64** %60, align 8
  %63 = load i32, i32* @x.583
  %64 = load i32, i32* @y.584
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -2029120930, i32 1904000573
  store i32 %88, i32* %28
  br label %125

; <label>:89:                                     ; preds = %29
  store i32 1033279062, i32* %28
  br label %125

; <label>:90:                                     ; preds = %29
  %91 = load i64, i64* %7, align 8
  %92 = trunc i64 %91 to i32
  %93 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %94 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %93, i32 0, i32 1
  store i32 %92, i32* %94, align 8
  ret void

; <label>:95:                                     ; preds = %29
  %96 = load i64, i64* %7, align 8
  %97 = sub i64 0, -6606410419455011394
  %98 = sub i64 %97, %96
  %99 = add i64 %98, -6606410419455011394
  %100 = sub i64 0, %96
  %101 = sub i64 0, %99
  %102 = sub i64 0, 64
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add i64 %99, 64
  %106 = add i64 %96, -8250264128513165035
  %107 = sub i64 %106, 64
  %108 = sub i64 %107, -8250264128513165035
  %109 = sub i64 %96, 64
  %110 = mul i64 %108, 64
  %111 = shl i64 %96, 64
  %112 = sub i64 %96, 2077397632063770150
  %113 = sub i64 %112, 64
  %114 = add i64 %113, 2077397632063770150
  %115 = sub i64 %96, 64
  %116 = mul i64 %114, 64
  %117 = add i64 %96, -8495832178240910812
  %118 = add i64 %117, 64
  %119 = sub i64 %118, -8495832178240910812
  %120 = add nsw i64 %96, 64
  store i64 %119, i64* %7, align 8
  %121 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4
  %122 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %121, i32 0, i32 0
  %123 = load i64*, i64** %122, align 8
  %124 = getelementptr inbounds i64, i64* %123, i32 -1
  store i64* %124, i64** %122, align 8
  store i32 -1744390227, i32* %28
  br label %125

; <label>:125:                                    ; preds = %95, %89, %52, %36, %32, %31
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt6vectorIbSaIbEE6cbeginEv(%"class.std::vector.11"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Bit_const_iterator", align 8
  %3 = alloca %"class.std::vector.11"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  %4 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %5 = bitcast %"class.std::vector.11"* %4 to %"struct.std::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, i32 0, i32 0
  invoke void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %2, %"struct.std::_Bit_iterator"* dereferenceable(16) %7)
          to label %8 unwind label %52

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.585
  %10 = load i32, i32* @y.586
  %11 = add i32 %9, -1546046420
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, -1546046420
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 false, true
  %22 = and i1 %19, false
  %23 = and i1 %17, %21
  %24 = and i1 %20, false
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 false, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %85

; <label>:35:                                     ; preds = %8, %85
  %36 = bitcast %"struct.std::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %37 = load { i64*, i32 }, { i64*, i32 }* %36, align 8
  %38 = load i32, i32* @x.585
  %39 = load i32, i32* @y.586
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %85

; <label>:51:                                     ; preds = %35
  ret { i64*, i32 } %37

; <label>:52:                                     ; preds = %1
  %53 = load i32, i32* @x.585
  %54 = load i32, i32* @y.586
  %55 = add i32 %53, 30017900
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 30017900
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %88

; <label>:67:                                     ; preds = %52, %88
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  call void @__clang_call_terminate(i8* %69) #12
  %70 = load i32, i32* @x.585
  %71 = load i32, i32* @y.586
  %72 = add i32 %70, 2090214835
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 2090214835
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %88

; <label>:84:                                     ; preds = %67
  unreachable

; <label>:85:                                     ; preds = %35, %8
  %86 = bitcast %"struct.std::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %87 = load { i64*, i32 }, { i64*, i32 }* %86, align 8
  br label %35

; <label>:88:                                     ; preds = %67, %52
  %89 = landingpad { i8*, i32 }
          catch i8* null
  %90 = extractvalue { i8*, i32 } %89, 0
  call void @__clang_call_terminate(i8* %90) #12
  br label %67
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(%"class.std::vector.11"*, i64*, i32, i64, i1 zeroext) #0 comdat align 2 {
  %6 = alloca i64
  %7 = alloca %"class.std::vector.11"*
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"class.std::vector.11"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = alloca %"struct.std::_Bit_iterator", align 8
  %18 = alloca i64, align 8
  %19 = alloca i64*, align 8
  %20 = alloca %"struct.std::_Bit_iterator", align 8
  %21 = alloca %"struct.std::_Bit_iterator", align 8
  %22 = alloca %"struct.std::_Bit_const_iterator", align 8
  %23 = alloca %"struct.std::_Bit_iterator", align 8
  %24 = alloca %"struct.std::_Bit_const_iterator", align 8
  %25 = alloca %"struct.std::_Bit_iterator", align 8
  %26 = alloca %"struct.std::_Bit_iterator", align 8
  %27 = alloca %"struct.std::_Bit_iterator", align 8
  %28 = alloca %"struct.std::_Bit_iterator", align 8
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = alloca %"struct.std::_Bit_iterator", align 8
  %31 = alloca %"struct.std::_Bit_iterator", align 8
  %32 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %32, i32 0, i32 0
  store i64* %1, i64** %33, align 8
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %32, i32 0, i32 1
  store i32 %2, i32* %34, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %9, align 8
  store i64 %3, i64* %10, align 8
  %35 = zext i1 %4 to i8
  store i8 %35, i8* %11, align 1
  %36 = load %"class.std::vector.11"*, %"class.std::vector.11"** %9, align 8
  store %"class.std::vector.11"* %36, %"class.std::vector.11"** %7
  %37 = load i64, i64* %10, align 8
  store i64 %37, i64* %6
  %38 = alloca i32
  store i32 1143256115, i32* %38
  br label %39

; <label>:39:                                     ; preds = %5, %509
  %40 = load i32, i32* %38
  switch i32 %40, label %41 [
    i32 1143256115, label %42
    i32 -52693500, label %46
    i32 946529199, label %47
    i32 -1000902317, label %58
    i32 -410196770, label %86
    i32 2058651819, label %168
    i32 -976540727, label %169
    i32 -804632167, label %197
    i32 -1497215528, label %326
    i32 -761877952, label %327
    i32 1380372755, label %328
    i32 1268210218, label %395
  ]

; <label>:41:                                     ; preds = %39
  br label %509

; <label>:42:                                     ; preds = %39
  %43 = load volatile i64, i64* %6
  %44 = icmp eq i64 %43, 0
  %45 = select i1 %44, i32 -52693500, i32 946529199
  store i32 %45, i32* %38
  br label %509

; <label>:46:                                     ; preds = %39
  store i32 -761877952, i32* %38
  br label %509

; <label>:47:                                     ; preds = %39
  %48 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %49 = call i64 @_ZNKSt6vectorIbSaIbEE8capacityEv(%"class.std::vector.11"* %48) #3
  %50 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %51 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %50) #3
  %52 = sub i64 0, %51
  %53 = add i64 %49, %52
  %54 = sub i64 %49, %51
  %55 = load i64, i64* %10, align 8
  %56 = icmp uge i64 %53, %55
  %57 = select i1 %56, i32 -1000902317, i32 -976540727
  store i32 %57, i32* %38
  br label %509

; <label>:58:                                     ; preds = %39
  %59 = load i32, i32* @x.587
  %60 = load i32, i32* @y.588
  %61 = sub i32 %59, 907990010
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 907990010
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -410196770, i32 1380372755
  store i32 %85, i32* %38
  br label %509

; <label>:86:                                     ; preds = %39
  %87 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %88 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 16, i32 8, i1 false)
  %89 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %90 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.11"* %89) #3
  %91 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %92 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %91, i32 0, i32 0
  %93 = extractvalue { i64*, i32 } %90, 0
  store i64* %93, i64** %92, align 8
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %91, i32 0, i32 1
  %95 = extractvalue { i64*, i32 } %90, 1
  store i32 %95, i32* %94, align 8
  %96 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %97 = bitcast %"class.std::vector.11"* %96 to %"struct.std::_Bvector_base"*
  %98 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %97, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %98, i32 0, i32 1
  %100 = load i64, i64* %10, align 8
  %101 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %99, i64 %100)
  %102 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %103 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %102, i32 0, i32 0
  %104 = extractvalue { i64*, i32 } %101, 0
  store i64* %104, i64** %103, align 8
  %105 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %102, i32 0, i32 1
  %106 = extractvalue { i64*, i32 } %101, 1
  store i32 %106, i32* %105, align 8
  %107 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %108 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 0
  %109 = load i64*, i64** %108, align 8
  %110 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %113 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %112, i32 0, i32 0
  %114 = load i64*, i64** %113, align 8
  %115 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %112, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %118 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %117, i32 0, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %117, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = call { i64*, i32 } @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64* %109, i32 %111, i64* %114, i32 %116, i64* %119, i32 %121)
  %123 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %124 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %123, i32 0, i32 0
  %125 = extractvalue { i64*, i32 } %122, 0
  store i64* %125, i64** %124, align 8
  %126 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %123, i32 0, i32 1
  %127 = extractvalue { i64*, i32 } %122, 1
  store i32 %127, i32* %126, align 8
  %128 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  %129 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 16, i32 8, i1 false)
  %130 = load i64, i64* %10, align 8
  %131 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %8, i64 %130)
  %132 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %133 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %132, i32 0, i32 0
  %134 = extractvalue { i64*, i32 } %131, 0
  store i64* %134, i64** %133, align 8
  %135 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %132, i32 0, i32 1
  %136 = extractvalue { i64*, i32 } %131, 1
  store i32 %136, i32* %135, align 8
  %137 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %138 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %137, i32 0, i32 0
  %139 = load i64*, i64** %138, align 8
  %140 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %137, i32 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %143 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %142, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %142, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %139, i32 %141, i64* %144, i32 %146, i8* dereferenceable(1) %11)
  %147 = load i64, i64* %10, align 8
  %148 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %149 = bitcast %"class.std::vector.11"* %148 to %"struct.std::_Bvector_base"*
  %150 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %150, i32 0, i32 1
  %152 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %151, i64 %147)
  %153 = load i32, i32* @x.587
  %154 = load i32, i32* @y.588
  %155 = add i32 %153, -1115844228
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, -1115844228
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  %167 = select i1 %165, i32 2058651819, i32 1380372755
  store i32 %167, i32* %38
  br label %509

; <label>:168:                                    ; preds = %39
  store i32 -761877952, i32* %38
  br label %509

; <label>:169:                                    ; preds = %39
  %170 = load i32, i32* @x.587
  %171 = load i32, i32* @y.588
  %172 = add i32 %170, 843506762
  %173 = sub i32 %172, 1
  %174 = sub i32 %173, 843506762
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 false, true
  %183 = and i1 %180, false
  %184 = and i1 %178, %182
  %185 = and i1 %181, false
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 false, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  %196 = select i1 %194, i32 -804632167, i32 1268210218
  store i32 %196, i32* %38
  br label %509

; <label>:197:                                    ; preds = %39
  %198 = load i64, i64* %10, align 8
  %199 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %200 = call i64 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc(%"class.std::vector.11"* %199, i64 %198, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0))
  store i64 %200, i64* %18, align 8
  %201 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %202 = bitcast %"class.std::vector.11"* %201 to %"struct.std::_Bvector_base"*
  %203 = load i64, i64* %18, align 8
  %204 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %202, i64 %203)
  store i64* %204, i64** %19, align 8
  %205 = load i64*, i64** %19, align 8
  %206 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %205) #3
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %20, i64* %206, i32 0)
  %207 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %208 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"* %207) #3
  %209 = bitcast %"struct.std::_Bit_iterator"* %23 to { i64*, i32 }*
  %210 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %209, i32 0, i32 0
  %211 = extractvalue { i64*, i32 } %208, 0
  store i64* %211, i64** %210, align 8
  %212 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %209, i32 0, i32 1
  %213 = extractvalue { i64*, i32 } %208, 1
  store i32 %213, i32* %212, align 8
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %22, %"struct.std::_Bit_iterator"* dereferenceable(16) %23)
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %24, %"struct.std::_Bit_iterator"* dereferenceable(16) %8)
  %214 = bitcast %"struct.std::_Bit_iterator"* %25 to i8*
  %215 = bitcast %"struct.std::_Bit_iterator"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %214, i8* %215, i64 16, i32 8, i1 false)
  %216 = bitcast %"struct.std::_Bit_const_iterator"* %22 to { i64*, i32 }*
  %217 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %216, i32 0, i32 0
  %218 = load i64*, i64** %217, align 8
  %219 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %216, i32 0, i32 1
  %220 = load i32, i32* %219, align 8
  %221 = bitcast %"struct.std::_Bit_const_iterator"* %24 to { i64*, i32 }*
  %222 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %221, i32 0, i32 0
  %223 = load i64*, i64** %222, align 8
  %224 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %221, i32 0, i32 1
  %225 = load i32, i32* %224, align 8
  %226 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %227 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.11"* %226, i64* %218, i32 %220, i64* %223, i32 %225, %"struct.std::_Bit_iterator"* byval align 8 %25)
  %228 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %229 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %228, i32 0, i32 0
  %230 = extractvalue { i64*, i32 } %227, 0
  store i64* %230, i64** %229, align 8
  %231 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %228, i32 0, i32 1
  %232 = extractvalue { i64*, i32 } %227, 1
  store i32 %232, i32* %231, align 8
  %233 = bitcast %"struct.std::_Bit_iterator"* %26 to i8*
  %234 = bitcast %"struct.std::_Bit_iterator"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %233, i8* %234, i64 16, i32 8, i1 false)
  %235 = load i64, i64* %10, align 8
  %236 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %21, i64 %235)
  %237 = bitcast %"struct.std::_Bit_iterator"* %27 to { i64*, i32 }*
  %238 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %237, i32 0, i32 0
  %239 = extractvalue { i64*, i32 } %236, 0
  store i64* %239, i64** %238, align 8
  %240 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %237, i32 0, i32 1
  %241 = extractvalue { i64*, i32 } %236, 1
  store i32 %241, i32* %240, align 8
  %242 = bitcast %"struct.std::_Bit_iterator"* %26 to { i64*, i32 }*
  %243 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %242, i32 0, i32 0
  %244 = load i64*, i64** %243, align 8
  %245 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %242, i32 0, i32 1
  %246 = load i32, i32* %245, align 8
  %247 = bitcast %"struct.std::_Bit_iterator"* %27 to { i64*, i32 }*
  %248 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %247, i32 0, i32 0
  %249 = load i64*, i64** %248, align 8
  %250 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %247, i32 0, i32 1
  %251 = load i32, i32* %250, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %244, i32 %246, i64* %249, i32 %251, i8* dereferenceable(1) %11)
  %252 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  %253 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %252, i8* %253, i64 16, i32 8, i1 false)
  %254 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %255 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.11"* %254) #3
  %256 = bitcast %"struct.std::_Bit_iterator"* %30 to { i64*, i32 }*
  %257 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %256, i32 0, i32 0
  %258 = extractvalue { i64*, i32 } %255, 0
  store i64* %258, i64** %257, align 8
  %259 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %256, i32 0, i32 1
  %260 = extractvalue { i64*, i32 } %255, 1
  store i32 %260, i32* %259, align 8
  %261 = load i64, i64* %10, align 8
  %262 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %21, i64 %261)
  %263 = bitcast %"struct.std::_Bit_iterator"* %31 to { i64*, i32 }*
  %264 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %263, i32 0, i32 0
  %265 = extractvalue { i64*, i32 } %262, 0
  store i64* %265, i64** %264, align 8
  %266 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %263, i32 0, i32 1
  %267 = extractvalue { i64*, i32 } %262, 1
  store i32 %267, i32* %266, align 8
  %268 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %269 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %268, i32 0, i32 0
  %270 = load i64*, i64** %269, align 8
  %271 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %268, i32 0, i32 1
  %272 = load i32, i32* %271, align 8
  %273 = bitcast %"struct.std::_Bit_iterator"* %30 to { i64*, i32 }*
  %274 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %273, i32 0, i32 0
  %275 = load i64*, i64** %274, align 8
  %276 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %273, i32 0, i32 1
  %277 = load i32, i32* %276, align 8
  %278 = bitcast %"struct.std::_Bit_iterator"* %31 to { i64*, i32 }*
  %279 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %278, i32 0, i32 0
  %280 = load i64*, i64** %279, align 8
  %281 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %278, i32 0, i32 1
  %282 = load i32, i32* %281, align 8
  %283 = call { i64*, i32 } @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64* %270, i32 %272, i64* %275, i32 %277, i64* %280, i32 %282)
  %284 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %285 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %284, i32 0, i32 0
  %286 = extractvalue { i64*, i32 } %283, 0
  store i64* %286, i64** %285, align 8
  %287 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %284, i32 0, i32 1
  %288 = extractvalue { i64*, i32 } %283, 1
  store i32 %288, i32* %287, align 8
  %289 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %290 = bitcast %"class.std::vector.11"* %289 to %"struct.std::_Bvector_base"*
  %291 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %290, i32 0, i32 0
  %292 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %291, i32 0, i32 1
  %293 = bitcast %"struct.std::_Bit_iterator"* %292 to i8*
  %294 = bitcast %"struct.std::_Bit_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %293, i8* %294, i64 12, i32 8, i1 false)
  %295 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %296 = bitcast %"class.std::vector.11"* %295 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %296)
  %297 = load i64*, i64** %19, align 8
  %298 = load i64, i64* %18, align 8
  %299 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %298)
  %300 = getelementptr inbounds i64, i64* %297, i64 %299
  %301 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %302 = bitcast %"class.std::vector.11"* %301 to %"struct.std::_Bvector_base"*
  %303 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %302, i32 0, i32 0
  %304 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %303, i32 0, i32 2
  store i64* %300, i64** %304, align 8
  %305 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %306 = bitcast %"class.std::vector.11"* %305 to %"struct.std::_Bvector_base"*
  %307 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %306, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %307, i32 0, i32 0
  %309 = bitcast %"struct.std::_Bit_iterator"* %308 to i8*
  %310 = bitcast %"struct.std::_Bit_iterator"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %309, i8* %310, i64 12, i32 8, i1 false)
  %311 = load i32, i32* @x.587
  %312 = load i32, i32* @y.588
  %313 = sub i32 %311, 1951408655
  %314 = sub i32 %313, 1
  %315 = add i32 %314, 1951408655
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = and i1 %319, %320
  %322 = xor i1 %319, %320
  %323 = or i1 %321, %322
  %324 = or i1 %319, %320
  %325 = select i1 %323, i32 -1497215528, i32 1268210218
  store i32 %325, i32* %38
  br label %509

; <label>:326:                                    ; preds = %39
  store i32 -761877952, i32* %38
  br label %509

; <label>:327:                                    ; preds = %39
  ret void

; <label>:328:                                    ; preds = %39
  %329 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %330 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %329, i8* %330, i64 16, i32 8, i1 false)
  %331 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %332 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.11"* %331) #3
  %333 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %334 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %333, i32 0, i32 0
  %335 = extractvalue { i64*, i32 } %332, 0
  store i64* %335, i64** %334, align 8
  %336 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %333, i32 0, i32 1
  %337 = extractvalue { i64*, i32 } %332, 1
  store i32 %337, i32* %336, align 8
  %338 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %339 = bitcast %"class.std::vector.11"* %338 to %"struct.std::_Bvector_base"*
  %340 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %340, i32 0, i32 1
  %342 = load i64, i64* %10, align 8
  %343 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %341, i64 %342)
  %344 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %345 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %344, i32 0, i32 0
  %346 = extractvalue { i64*, i32 } %343, 0
  store i64* %346, i64** %345, align 8
  %347 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %344, i32 0, i32 1
  %348 = extractvalue { i64*, i32 } %343, 1
  store i32 %348, i32* %347, align 8
  %349 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %350 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %349, i32 0, i32 0
  %351 = load i64*, i64** %350, align 8
  %352 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %349, i32 0, i32 1
  %353 = load i32, i32* %352, align 8
  %354 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %355 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %354, i32 0, i32 0
  %356 = load i64*, i64** %355, align 8
  %357 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %354, i32 0, i32 1
  %358 = load i32, i32* %357, align 8
  %359 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %360 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %359, i32 0, i32 0
  %361 = load i64*, i64** %360, align 8
  %362 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %359, i32 0, i32 1
  %363 = load i32, i32* %362, align 8
  %364 = call { i64*, i32 } @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64* %351, i32 %353, i64* %356, i32 %358, i64* %361, i32 %363)
  %365 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %366 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %365, i32 0, i32 0
  %367 = extractvalue { i64*, i32 } %364, 0
  store i64* %367, i64** %366, align 8
  %368 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %365, i32 0, i32 1
  %369 = extractvalue { i64*, i32 } %364, 1
  store i32 %369, i32* %368, align 8
  %370 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  %371 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %370, i8* %371, i64 16, i32 8, i1 false)
  %372 = load i64, i64* %10, align 8
  %373 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %8, i64 %372)
  %374 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %375 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %374, i32 0, i32 0
  %376 = extractvalue { i64*, i32 } %373, 0
  store i64* %376, i64** %375, align 8
  %377 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %374, i32 0, i32 1
  %378 = extractvalue { i64*, i32 } %373, 1
  store i32 %378, i32* %377, align 8
  %379 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %380 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %379, i32 0, i32 0
  %381 = load i64*, i64** %380, align 8
  %382 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %379, i32 0, i32 1
  %383 = load i32, i32* %382, align 8
  %384 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %385 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %384, i32 0, i32 0
  %386 = load i64*, i64** %385, align 8
  %387 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %384, i32 0, i32 1
  %388 = load i32, i32* %387, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %381, i32 %383, i64* %386, i32 %388, i8* dereferenceable(1) %11)
  %389 = load i64, i64* %10, align 8
  %390 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %391 = bitcast %"class.std::vector.11"* %390 to %"struct.std::_Bvector_base"*
  %392 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %391, i32 0, i32 0
  %393 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %392, i32 0, i32 1
  %394 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorpLEl(%"struct.std::_Bit_iterator"* %393, i64 %389)
  store i32 -410196770, i32* %38
  br label %509

; <label>:395:                                    ; preds = %39
  %396 = load i64, i64* %10, align 8
  %397 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %398 = call i64 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc(%"class.std::vector.11"* %397, i64 %396, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0))
  store i64 %398, i64* %18, align 8
  %399 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %400 = bitcast %"class.std::vector.11"* %399 to %"struct.std::_Bvector_base"*
  %401 = load i64, i64* %18, align 8
  %402 = call i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"* %400, i64 %401)
  store i64* %402, i64** %19, align 8
  %403 = load i64*, i64** %19, align 8
  %404 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %403) #3
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %20, i64* %404, i32 0)
  %405 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %406 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"* %405) #3
  %407 = bitcast %"struct.std::_Bit_iterator"* %23 to { i64*, i32 }*
  %408 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %407, i32 0, i32 0
  %409 = extractvalue { i64*, i32 } %406, 0
  store i64* %409, i64** %408, align 8
  %410 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %407, i32 0, i32 1
  %411 = extractvalue { i64*, i32 } %406, 1
  store i32 %411, i32* %410, align 8
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %22, %"struct.std::_Bit_iterator"* dereferenceable(16) %23)
  call void @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator(%"struct.std::_Bit_const_iterator"* %24, %"struct.std::_Bit_iterator"* dereferenceable(16) %8)
  %412 = bitcast %"struct.std::_Bit_iterator"* %25 to i8*
  %413 = bitcast %"struct.std::_Bit_iterator"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %412, i8* %413, i64 16, i32 8, i1 false)
  %414 = bitcast %"struct.std::_Bit_const_iterator"* %22 to { i64*, i32 }*
  %415 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %414, i32 0, i32 0
  %416 = load i64*, i64** %415, align 8
  %417 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %414, i32 0, i32 1
  %418 = load i32, i32* %417, align 8
  %419 = bitcast %"struct.std::_Bit_const_iterator"* %24 to { i64*, i32 }*
  %420 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %419, i32 0, i32 0
  %421 = load i64*, i64** %420, align 8
  %422 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %419, i32 0, i32 1
  %423 = load i32, i32* %422, align 8
  %424 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %425 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.11"* %424, i64* %416, i32 %418, i64* %421, i32 %423, %"struct.std::_Bit_iterator"* byval align 8 %25)
  %426 = bitcast %"struct.std::_Bit_iterator"* %21 to { i64*, i32 }*
  %427 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %426, i32 0, i32 0
  %428 = extractvalue { i64*, i32 } %425, 0
  store i64* %428, i64** %427, align 8
  %429 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %426, i32 0, i32 1
  %430 = extractvalue { i64*, i32 } %425, 1
  store i32 %430, i32* %429, align 8
  %431 = bitcast %"struct.std::_Bit_iterator"* %26 to i8*
  %432 = bitcast %"struct.std::_Bit_iterator"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %431, i8* %432, i64 16, i32 8, i1 false)
  %433 = load i64, i64* %10, align 8
  %434 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %21, i64 %433)
  %435 = bitcast %"struct.std::_Bit_iterator"* %27 to { i64*, i32 }*
  %436 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %435, i32 0, i32 0
  %437 = extractvalue { i64*, i32 } %434, 0
  store i64* %437, i64** %436, align 8
  %438 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %435, i32 0, i32 1
  %439 = extractvalue { i64*, i32 } %434, 1
  store i32 %439, i32* %438, align 8
  %440 = bitcast %"struct.std::_Bit_iterator"* %26 to { i64*, i32 }*
  %441 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %440, i32 0, i32 0
  %442 = load i64*, i64** %441, align 8
  %443 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %440, i32 0, i32 1
  %444 = load i32, i32* %443, align 8
  %445 = bitcast %"struct.std::_Bit_iterator"* %27 to { i64*, i32 }*
  %446 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %445, i32 0, i32 0
  %447 = load i64*, i64** %446, align 8
  %448 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %445, i32 0, i32 1
  %449 = load i32, i32* %448, align 8
  call void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64* %442, i32 %444, i64* %447, i32 %449, i8* dereferenceable(1) %11)
  %450 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  %451 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %450, i8* %451, i64 16, i32 8, i1 false)
  %452 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %453 = call { i64*, i32 } @_ZNSt6vectorIbSaIbEE3endEv(%"class.std::vector.11"* %452) #3
  %454 = bitcast %"struct.std::_Bit_iterator"* %30 to { i64*, i32 }*
  %455 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %454, i32 0, i32 0
  %456 = extractvalue { i64*, i32 } %453, 0
  store i64* %456, i64** %455, align 8
  %457 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %454, i32 0, i32 1
  %458 = extractvalue { i64*, i32 } %453, 1
  store i32 %458, i32* %457, align 8
  %459 = load i64, i64* %10, align 8
  %460 = call { i64*, i32 } @_ZNKSt13_Bit_iteratorplEl(%"struct.std::_Bit_iterator"* %21, i64 %459)
  %461 = bitcast %"struct.std::_Bit_iterator"* %31 to { i64*, i32 }*
  %462 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %461, i32 0, i32 0
  %463 = extractvalue { i64*, i32 } %460, 0
  store i64* %463, i64** %462, align 8
  %464 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %461, i32 0, i32 1
  %465 = extractvalue { i64*, i32 } %460, 1
  store i32 %465, i32* %464, align 8
  %466 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %467 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %466, i32 0, i32 0
  %468 = load i64*, i64** %467, align 8
  %469 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %466, i32 0, i32 1
  %470 = load i32, i32* %469, align 8
  %471 = bitcast %"struct.std::_Bit_iterator"* %30 to { i64*, i32 }*
  %472 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %471, i32 0, i32 0
  %473 = load i64*, i64** %472, align 8
  %474 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %471, i32 0, i32 1
  %475 = load i32, i32* %474, align 8
  %476 = bitcast %"struct.std::_Bit_iterator"* %31 to { i64*, i32 }*
  %477 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %476, i32 0, i32 0
  %478 = load i64*, i64** %477, align 8
  %479 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %476, i32 0, i32 1
  %480 = load i32, i32* %479, align 8
  %481 = call { i64*, i32 } @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64* %468, i32 %470, i64* %473, i32 %475, i64* %478, i32 %480)
  %482 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %483 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %482, i32 0, i32 0
  %484 = extractvalue { i64*, i32 } %481, 0
  store i64* %484, i64** %483, align 8
  %485 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %482, i32 0, i32 1
  %486 = extractvalue { i64*, i32 } %481, 1
  store i32 %486, i32* %485, align 8
  %487 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %488 = bitcast %"class.std::vector.11"* %487 to %"struct.std::_Bvector_base"*
  %489 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %488, i32 0, i32 0
  %490 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %489, i32 0, i32 1
  %491 = bitcast %"struct.std::_Bit_iterator"* %490 to i8*
  %492 = bitcast %"struct.std::_Bit_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %491, i8* %492, i64 12, i32 8, i1 false)
  %493 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %494 = bitcast %"class.std::vector.11"* %493 to %"struct.std::_Bvector_base"*
  call void @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::_Bvector_base"* %494)
  %495 = load i64*, i64** %19, align 8
  %496 = load i64, i64* %18, align 8
  %497 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %496)
  %498 = getelementptr inbounds i64, i64* %495, i64 %497
  %499 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %500 = bitcast %"class.std::vector.11"* %499 to %"struct.std::_Bvector_base"*
  %501 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %500, i32 0, i32 0
  %502 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %501, i32 0, i32 2
  store i64* %498, i64** %502, align 8
  %503 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %7
  %504 = bitcast %"class.std::vector.11"* %503 to %"struct.std::_Bvector_base"*
  %505 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %504, i32 0, i32 0
  %506 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %505, i32 0, i32 0
  %507 = bitcast %"struct.std::_Bit_iterator"* %506 to i8*
  %508 = bitcast %"struct.std::_Bit_iterator"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %507, i8* %508, i64 12, i32 8, i1 false)
  store i32 -804632167, i32* %38
  br label %509

; <label>:509:                                    ; preds = %395, %328, %326, %197, %169, %168, %86, %58, %47, %46, %42, %41
  br label %39
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt19_Bit_const_iterator13_M_const_castEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca { i64*, i32 }
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.589
  %6 = load i32, i32* @y.590
  %7 = sub i32 %5, 877628644
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 877628644
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 89615807, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %92
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 89615807, label %19
    i32 1670795098, label %39
    i32 -546087502, label %78
    i32 510109576, label %80
  ]

; <label>:18:                                     ; preds = %16
  br label %92

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1670795098, i32 510109576
  store i32 %38, i32* %15
  br label %92

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Bit_iterator", align 8
  %41 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %41, align 8
  %42 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %41, align 8
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %42 to %"struct.std::_Bit_iterator_base"*
  %44 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"struct.std::_Bit_const_iterator"* %42 to %"struct.std::_Bit_iterator_base"*
  %47 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %40, i64* %45, i32 %48)
  %49 = bitcast %"struct.std::_Bit_iterator"* %40 to { i64*, i32 }*
  %50 = load { i64*, i32 }, { i64*, i32 }* %49, align 8
  store { i64*, i32 } %50, { i64*, i32 }* %2
  %51 = load i32, i32* @x.589
  %52 = load i32, i32* @y.590
  %53 = sub i32 %51, 92387092
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 92387092
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -546087502, i32 510109576
  store i32 %77, i32* %15
  br label %92

; <label>:78:                                     ; preds = %16
  %79 = load volatile { i64*, i32 }, { i64*, i32 }* %2
  ret { i64*, i32 } %79

; <label>:80:                                     ; preds = %16
  %81 = alloca %"struct.std::_Bit_iterator", align 8
  %82 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %82, align 8
  %83 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %82, align 8
  %84 = bitcast %"struct.std::_Bit_const_iterator"* %83 to %"struct.std::_Bit_iterator_base"*
  %85 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %84, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = bitcast %"struct.std::_Bit_const_iterator"* %83 to %"struct.std::_Bit_iterator_base"*
  %88 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %81, i64* %86, i32 %89)
  %90 = bitcast %"struct.std::_Bit_iterator"* %81 to { i64*, i32 }*
  %91 = load { i64*, i32 }, { i64*, i32 }* %90, align 8
  store i32 1670795098, i32* %15
  br label %92

; <label>:92:                                     ; preds = %80, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE8capacityEv(%"class.std::vector.11"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.11"*, align 8
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Bvector_base"*
  %7 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %6, i32 0, i32 0
  %8 = call i64* @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7) #3
  invoke void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %3, i64* %8, i32 0)
          to label %9 unwind label %72

; <label>:9:                                      ; preds = %1
  %10 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  %11 = call { i64*, i32 } @_ZNKSt6vectorIbSaIbEE5beginEv(%"class.std::vector.11"* %5) #3
  %12 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %13 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 0
  %14 = extractvalue { i64*, i32 } %11, 0
  store i64* %14, i64** %13, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %12, i32 0, i32 1
  %16 = extractvalue { i64*, i32 } %11, 1
  store i32 %16, i32* %15, align 8
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %18 = invoke i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %10, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %17)
          to label %19 unwind label %72

; <label>:19:                                     ; preds = %9
  %20 = load i32, i32* @x.591
  %21 = load i32, i32* @y.592
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %75

; <label>:45:                                     ; preds = %19, %75
  %46 = load i32, i32* @x.591
  %47 = load i32, i32* @y.592
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %75

; <label>:71:                                     ; preds = %45
  ret i64 %18

; <label>:72:                                     ; preds = %9, %1
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #12
  unreachable

; <label>:75:                                     ; preds = %45, %19
  br label %45
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %1, i32* %18, align 8
  %19 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %2, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %3, i32* %21, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 0
  store i64* %4, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 1
  store i32 %5, i32* %24, align 8
  %25 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %26 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 16, i32 8, i1 false)
  %27 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %28 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %27, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %29, i32 %31)
  %33 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %34 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 0
  %35 = extractvalue { i64*, i32 } %32, 0
  store i64* %35, i64** %34, align 8
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %33, i32 0, i32 1
  %37 = extractvalue { i64*, i32 } %32, 1
  store i32 %37, i32* %36, align 8
  %38 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %39 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false)
  %40 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %42, i32 %44)
  %46 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %52 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %63, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = call { i64*, i32 } @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %55, i32 %57, i64* %60, i32 %62, i64* %65, i32 %67)
  %69 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 0
  %71 = extractvalue { i64*, i32 } %68, 0
  store i64* %71, i64** %70, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %69, i32 0, i32 1
  %73 = extractvalue { i64*, i32 } %68, 1
  store i32 %73, i32* %72, align 8
  %74 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %75 = load { i64*, i32 }, { i64*, i32 }* %74, align 8
  ret { i64*, i32 } %75
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillSt13_Bit_iteratorS_RKb(i64*, i32, i64*, i32, i8* dereferenceable(1)) #0 comdat {
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = alloca %"struct.std::_Bit_iterator", align 8
  %18 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %0, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %1, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %2, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %3, i32* %23, align 8
  store i8* %4, i8** %10, align 8
  %24 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %25 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %24, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  store i64* %26, i64** %7
  %27 = bitcast %"struct.std::_Bit_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %28 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %27, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %6
  %30 = alloca i32
  store i32 881428195, i32* %30
  br label %31

; <label>:31:                                     ; preds = %5, %188
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 881428195, label %34
    i32 899401779, label %39
    i32 454438716, label %55
    i32 -861734259, label %119
    i32 198283354, label %120
    i32 1501251134, label %138
    i32 950954899, label %139
  ]

; <label>:33:                                     ; preds = %31
  br label %188

; <label>:34:                                     ; preds = %31
  %35 = load volatile i64*, i64** %7
  %36 = load volatile i64*, i64** %6
  %37 = icmp ne i64* %35, %36
  %38 = select i1 %37, i32 899401779, i32 198283354
  store i32 %38, i32* %30
  br label %188

; <label>:39:                                     ; preds = %31
  %40 = load i32, i32* @x.595
  %41 = load i32, i32* @y.596
  %42 = add i32 %40, -1722418626
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1722418626
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 454438716, i32 950954899
  store i32 %54, i32* %30
  br label %188

; <label>:55:                                     ; preds = %31
  %56 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %57 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %56, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 1
  %60 = bitcast %"struct.std::_Bit_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %61 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %60, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i8*, i8** %10, align 8
  %64 = load i8, i8* %63, align 1
  %65 = trunc i8 %64 to i1
  %66 = select i1 %65, i32 -1, i32 0
  store i32 %66, i32* %11, align 4
  call void @_ZSt4fillIPmiEvT_S1_RKT0_(i64* %59, i64* %62, i32* dereferenceable(4) %11)
  %67 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %68 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 16, i32 8, i1 false)
  %69 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %70 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %69, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 1
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %13, i64* %72, i32 0)
  %73 = load i8*, i8** %10, align 8
  %74 = load i8, i8* %73, align 1
  %75 = trunc i8 %74 to i1
  %76 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %77 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %76, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %78, i32 %80, i64* %83, i32 %85, i1 zeroext %75)
  %86 = bitcast %"struct.std::_Bit_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %87 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %86, i32 0, i32 0
  %88 = load i64*, i64** %87, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %88, i32 0)
  %89 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %90 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 16, i32 8, i1 false)
  %91 = load i8*, i8** %10, align 8
  %92 = load i8, i8* %91, align 1
  %93 = trunc i8 %92 to i1
  %94 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %100 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %99, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %99, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %96, i32 %98, i64* %101, i32 %103, i1 zeroext %93)
  %104 = load i32, i32* @x.595
  %105 = load i32, i32* @y.596
  %106 = sub i32 %104, -1645672600
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -1645672600
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 -861734259, i32 950954899
  store i32 %118, i32* %30
  br label %188

; <label>:119:                                    ; preds = %31
  store i32 1501251134, i32* %30
  br label %188

; <label>:120:                                    ; preds = %31
  %121 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  %122 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 16, i32 8, i1 false)
  %123 = bitcast %"struct.std::_Bit_iterator"* %17 to i8*
  %124 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %124, i64 16, i32 8, i1 false)
  %125 = load i8*, i8** %10, align 8
  %126 = load i8, i8* %125, align 1
  %127 = trunc i8 %126 to i1
  %128 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %129 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %128, i32 0, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %128, i32 0, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = bitcast %"struct.std::_Bit_iterator"* %17 to { i64*, i32 }*
  %134 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %133, i32 0, i32 0
  %135 = load i64*, i64** %134, align 8
  %136 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %133, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %130, i32 %132, i64* %135, i32 %137, i1 zeroext %127)
  store i32 1501251134, i32* %30
  br label %188

; <label>:138:                                    ; preds = %31
  ret void

; <label>:139:                                    ; preds = %31
  %140 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %141 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %140, i32 0, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = bitcast %"struct.std::_Bit_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %145 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %144, i32 0, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = load i8*, i8** %10, align 8
  %148 = load i8, i8* %147, align 1
  %149 = trunc i8 %148 to i1
  %150 = select i1 %149, i32 -1, i32 0
  store i32 %150, i32* %11, align 4
  call void @_ZSt4fillIPmiEvT_S1_RKT0_(i64* %143, i64* %146, i32* dereferenceable(4) %11)
  %151 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %152 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %151, i8* %152, i64 16, i32 8, i1 false)
  %153 = bitcast %"struct.std::_Bit_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %154 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %153, i32 0, i32 0
  %155 = load i64*, i64** %154, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 1
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %13, i64* %156, i32 0)
  %157 = load i8*, i8** %10, align 8
  %158 = load i8, i8* %157, align 1
  %159 = trunc i8 %158 to i1
  %160 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %161 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %160, i32 0, i32 0
  %162 = load i64*, i64** %161, align 8
  %163 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %160, i32 0, i32 1
  %164 = load i32, i32* %163, align 8
  %165 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %166 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %165, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %165, i32 0, i32 1
  %169 = load i32, i32* %168, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %162, i32 %164, i64* %167, i32 %169, i1 zeroext %159)
  %170 = bitcast %"struct.std::_Bit_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %171 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %170, i32 0, i32 0
  %172 = load i64*, i64** %171, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %172, i32 0)
  %173 = bitcast %"struct.std::_Bit_iterator"* %15 to i8*
  %174 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %173, i8* %174, i64 16, i32 8, i1 false)
  %175 = load i8*, i8** %10, align 8
  %176 = load i8, i8* %175, align 1
  %177 = trunc i8 %176 to i1
  %178 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %179 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %178, i32 0, i32 0
  %180 = load i64*, i64** %179, align 8
  %181 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %178, i32 0, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %184 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %183, i32 0, i32 0
  %185 = load i64*, i64** %184, align 8
  %186 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %183, i32 0, i32 1
  %187 = load i32, i32* %186, align 8
  call void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64* %180, i32 %182, i64* %185, i32 %187, i1 zeroext %177)
  store i32 454438716, i32* %30
  br label %188

; <label>:188:                                    ; preds = %139, %120, %119, %55, %39, %34, %33
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc(%"class.std::vector.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca %"class.std::vector.11"*
  %12 = alloca %"class.std::vector.11"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %12, align 8
  store i64 %1, i64* %13, align 8
  store i8* %2, i8** %14, align 8
  %17 = load %"class.std::vector.11"*, %"class.std::vector.11"** %12, align 8
  store %"class.std::vector.11"* %17, %"class.std::vector.11"** %11
  %18 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %19 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.11"* %18) #3
  %20 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %21 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %20) #3
  %22 = add i64 %19, -696155830931732296
  %23 = sub i64 %22, %21
  %24 = sub i64 %23, -696155830931732296
  %25 = sub i64 %19, %21
  store i64 %24, i64* %10
  %26 = load i64, i64* %13, align 8
  store i64 %26, i64* %9
  %27 = alloca i32
  store i32 -2047511239, i32* %27
  %28 = alloca i64
  br label %29

; <label>:29:                                     ; preds = %3, %354
  %30 = load i32, i32* %27
  switch i32 %30, label %31 [
    i32 -2047511239, label %32
    i32 -1074667138, label %37
    i32 -1209026884, label %39
    i32 1583255463, label %66
    i32 -1104263787, label %95
    i32 -1010076507, label %98
    i32 -1708325239, label %126
    i32 1243333387, label %158
    i32 1598494094, label %161
    i32 1491054869, label %188
    i32 -1343024364, label %205
    i32 1418398224, label %207
    i32 -646907689, label %223
    i32 -1156563813, label %251
    i32 -909589630, label %253
    i32 -570803126, label %282
    i32 1436856074, label %298
    i32 -1342964865, label %300
    i32 1101951065, label %343
    i32 -1069940742, label %348
    i32 -1292114143, label %351
    i32 -1473062664, label %353
  ]

; <label>:31:                                     ; preds = %29
  br label %354

; <label>:32:                                     ; preds = %29
  %33 = load volatile i64, i64* %10
  %34 = load volatile i64, i64* %9
  %35 = icmp ult i64 %33, %34
  %36 = select i1 %35, i32 -1074667138, i32 -1209026884
  store i32 %36, i32* %27
  br label %354

; <label>:37:                                     ; preds = %29
  %38 = load i8*, i8** %14, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %38) #14
  unreachable

; <label>:39:                                     ; preds = %29
  %40 = load i32, i32* @x.597
  %41 = load i32, i32* @y.598
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1583255463, i32 -1342964865
  store i32 %65, i32* %27
  br label %354

; <label>:66:                                     ; preds = %29
  %67 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %68 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %67) #3
  %69 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %70 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %69) #3
  store i64 %70, i64* %16, align 8
  %71 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %13)
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 0, %72
  %74 = sub i64 %68, %73
  %75 = add i64 %68, %72
  store i64 %74, i64* %15, align 8
  %76 = load i64, i64* %15, align 8
  %77 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %78 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %77) #3
  %79 = icmp ult i64 %76, %78
  store i1 %79, i1* %8
  %80 = load i32, i32* @x.597
  %81 = load i32, i32* @y.598
  %82 = add i32 %80, -1556786126
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -1556786126
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -1104263787, i32 -1342964865
  store i32 %94, i32* %27
  br label %354

; <label>:95:                                     ; preds = %29
  %96 = load volatile i1, i1* %8
  %97 = select i1 %96, i32 1598494094, i32 -1010076507
  store i32 %97, i32* %27
  br label %354

; <label>:98:                                     ; preds = %29
  %99 = load i32, i32* @x.597
  %100 = load i32, i32* @y.598
  %101 = sub i32 %99, -1164993788
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -1164993788
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  %125 = select i1 %123, i32 -1708325239, i32 1101951065
  store i32 %125, i32* %27
  br label %354

; <label>:126:                                    ; preds = %29
  %127 = load i64, i64* %15, align 8
  %128 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %129 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.11"* %128) #3
  %130 = icmp ugt i64 %127, %129
  store i1 %130, i1* %7
  %131 = load i32, i32* @x.597
  %132 = load i32, i32* @y.598
  %133 = sub i32 %131, 1698294551
  %134 = sub i32 %133, 1
  %135 = add i32 %134, 1698294551
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 false, true
  %144 = and i1 %141, false
  %145 = and i1 %139, %143
  %146 = and i1 %142, false
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 false, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  %157 = select i1 %155, i32 1243333387, i32 1101951065
  store i32 %157, i32* %27
  br label %354

; <label>:158:                                    ; preds = %29
  %159 = load volatile i1, i1* %7
  %160 = select i1 %159, i32 1598494094, i32 1418398224
  store i32 %160, i32* %27
  br label %354

; <label>:161:                                    ; preds = %29
  %162 = load i32, i32* @x.597
  %163 = load i32, i32* @y.598
  %164 = sub i32 0, 1
  %165 = add i32 %162, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 %162, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %163, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  %187 = select i1 %185, i32 1491054869, i32 -1069940742
  store i32 %187, i32* %27
  br label %354

; <label>:188:                                    ; preds = %29
  %189 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %190 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.11"* %189) #3
  store i64 %190, i64* %6
  %191 = load i32, i32* @x.597
  %192 = load i32, i32* @y.598
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  %204 = select i1 %202, i32 -1343024364, i32 -1069940742
  store i32 %204, i32* %27
  br label %354

; <label>:205:                                    ; preds = %29
  store i32 -909589630, i32* %27
  %206 = load volatile i64, i64* %6
  store i64 %206, i64* %28
  br label %354

; <label>:207:                                    ; preds = %29
  %208 = load i32, i32* @x.597
  %209 = load i32, i32* @y.598
  %210 = add i32 %208, -1526049350
  %211 = sub i32 %210, 1
  %212 = sub i32 %211, -1526049350
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = and i1 %216, %217
  %219 = xor i1 %216, %217
  %220 = or i1 %218, %219
  %221 = or i1 %216, %217
  %222 = select i1 %220, i32 -646907689, i32 -1292114143
  store i32 %222, i32* %27
  br label %354

; <label>:223:                                    ; preds = %29
  %224 = load i64, i64* %15, align 8
  store i64 %224, i64* %5
  %225 = load i32, i32* @x.597
  %226 = load i32, i32* @y.598
  %227 = sub i32 0, 1
  %228 = add i32 %225, %227
  %229 = sub i32 %225, 1
  %230 = mul i32 %225, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %226, 10
  %234 = xor i1 %232, true
  %235 = xor i1 %233, true
  %236 = xor i1 false, true
  %237 = and i1 %234, false
  %238 = and i1 %232, %236
  %239 = and i1 %235, false
  %240 = and i1 %233, %236
  %241 = or i1 %237, %238
  %242 = or i1 %239, %240
  %243 = xor i1 %241, %242
  %244 = or i1 %234, %235
  %245 = xor i1 %244, true
  %246 = or i1 false, %236
  %247 = and i1 %245, %246
  %248 = or i1 %243, %247
  %249 = or i1 %232, %233
  %250 = select i1 %248, i32 -1156563813, i32 -1292114143
  store i32 %250, i32* %27
  br label %354

; <label>:251:                                    ; preds = %29
  store i32 -909589630, i32* %27
  %252 = load volatile i64, i64* %5
  store i64 %252, i64* %28
  br label %354

; <label>:253:                                    ; preds = %29
  %254 = load i64, i64* %28
  store i64 %254, i64* %4
  %255 = load i32, i32* @x.597
  %256 = load i32, i32* @y.598
  %257 = add i32 %255, 757280044
  %258 = sub i32 %257, 1
  %259 = sub i32 %258, 757280044
  %260 = sub i32 %255, 1
  %261 = mul i32 %255, %259
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %256, 10
  %265 = xor i1 %263, true
  %266 = xor i1 %264, true
  %267 = xor i1 true, true
  %268 = and i1 %265, true
  %269 = and i1 %263, %267
  %270 = and i1 %266, true
  %271 = and i1 %264, %267
  %272 = or i1 %268, %269
  %273 = or i1 %270, %271
  %274 = xor i1 %272, %273
  %275 = or i1 %265, %266
  %276 = xor i1 %275, true
  %277 = or i1 true, %267
  %278 = and i1 %276, %277
  %279 = or i1 %274, %278
  %280 = or i1 %263, %264
  %281 = select i1 %279, i32 -570803126, i32 -1473062664
  store i32 %281, i32* %27
  br label %354

; <label>:282:                                    ; preds = %29
  %283 = load i32, i32* @x.597
  %284 = load i32, i32* @y.598
  %285 = add i32 %283, -1191854698
  %286 = sub i32 %285, 1
  %287 = sub i32 %286, -1191854698
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = and i1 %291, %292
  %294 = xor i1 %291, %292
  %295 = or i1 %293, %294
  %296 = or i1 %291, %292
  %297 = select i1 %295, i32 1436856074, i32 -1473062664
  store i32 %297, i32* %27
  br label %354

; <label>:298:                                    ; preds = %29
  %299 = load volatile i64, i64* %4
  ret i64 %299

; <label>:300:                                    ; preds = %29
  %301 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %302 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %301) #3
  %303 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %304 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %303) #3
  store i64 %304, i64* %16, align 8
  %305 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %13)
  %306 = load i64, i64* %305, align 8
  %307 = sub i64 0, %302
  %308 = add i64 0, %307
  %309 = sub i64 0, %302
  %310 = sub i64 0, %306
  %311 = sub i64 %308, %310
  %312 = add i64 %308, %306
  %313 = sub i64 0, -6796331399797746885
  %314 = sub i64 %313, %302
  %315 = add i64 %314, -6796331399797746885
  %316 = sub i64 0, %302
  %317 = sub i64 %315, 7569447349248277459
  %318 = add i64 %317, %306
  %319 = add i64 %318, 7569447349248277459
  %320 = add i64 %315, %306
  %321 = sub i64 %302, 3129890280776589619
  %322 = sub i64 %321, %306
  %323 = add i64 %322, 3129890280776589619
  %324 = sub i64 %302, %306
  %325 = mul i64 %323, %306
  %326 = sub i64 0, %306
  %327 = add i64 %302, %326
  %328 = sub i64 %302, %306
  %329 = mul i64 %327, %306
  %330 = add i64 %302, -7400683193686515272
  %331 = sub i64 %330, %306
  %332 = sub i64 %331, -7400683193686515272
  %333 = sub i64 %302, %306
  %334 = mul i64 %332, %306
  %335 = sub i64 %302, 7767323960352417727
  %336 = add i64 %335, %306
  %337 = add i64 %336, 7767323960352417727
  %338 = add i64 %302, %306
  store i64 %337, i64* %15, align 8
  %339 = load i64, i64* %15, align 8
  %340 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %341 = call i64 @_ZNKSt6vectorIbSaIbEE4sizeEv(%"class.std::vector.11"* %340) #3
  %342 = icmp ult i64 %339, %341
  store i32 1583255463, i32* %27
  br label %354

; <label>:343:                                    ; preds = %29
  %344 = load i64, i64* %15, align 8
  %345 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %346 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.11"* %345) #3
  %347 = icmp ugt i64 %344, %346
  store i32 -1708325239, i32* %27
  br label %354

; <label>:348:                                    ; preds = %29
  %349 = load volatile %"class.std::vector.11"*, %"class.std::vector.11"** %11
  %350 = call i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.11"* %349) #3
  store i32 1491054869, i32* %27
  br label %354

; <label>:351:                                    ; preds = %29
  %352 = load i64, i64* %15, align 8
  store i32 -646907689, i32* %27
  br label %354

; <label>:353:                                    ; preds = %29
  store i32 -570803126, i32* %27
  br label %354

; <label>:354:                                    ; preds = %353, %351, %348, %343, %300, %282, %253, %251, %223, %207, %205, %188, %161, %158, %126, %98, %95, %66, %39, %32, %31
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::_Bvector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.599
  %7 = load i32, i32* @y.600
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -946397048, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -946397048, label %19
    i32 -544449508, label %39
    i32 -280514031, label %63
    i32 1643421454, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -544449508, i32 1643421454
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Bvector_base"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %43 to %"class.std::allocator.12"*
  %45 = load i64, i64* %41, align 8
  %46 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %45)
  %47 = call i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.12"* dereferenceable(1) %44, i64 %46)
  store i64* %47, i64** %3
  %48 = load i32, i32* @x.599
  %49 = load i32, i32* @y.600
  %50 = sub i32 %48, 1137341148
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1137341148
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -280514031, i32 1643421454
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile i64*, i64** %3
  ret i64* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Bvector_base"*, align 8
  %67 = alloca i64, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %66, align 8
  store i64 %1, i64* %67, align 8
  %68 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %66, align 8
  %69 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %68, i32 0, i32 0
  %70 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %69 to %"class.std::allocator.12"*
  %71 = load i64, i64* %67, align 8
  %72 = call i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64 %71)
  %73 = call i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.12"* dereferenceable(1) %70, i64 %72)
  store i32 -544449508, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"*, i64*, i32) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_iterator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %8, i64* %9, i32 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(%"class.std::vector.11"*, i64*, i32, i64*, i32, %"struct.std::_Bit_iterator"* byval align 8) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"class.std::vector.11"*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %1, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %2, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %3, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %4, i32* %20, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %10, align 8
  %21 = load %"class.std::vector.11"*, %"class.std::vector.11"** %10, align 8
  %22 = bitcast %"struct.std::_Bit_const_iterator"* %8 to %"struct.std::_Bit_iterator_base"*
  %23 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %22, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %26 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = bitcast %"struct.std::_Bit_iterator"* %5 to %"struct.std::_Bit_iterator_base"*
  %29 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = call i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64* %24, i64* %27, i64* %30)
  store i64* %31, i64** %11, align 8
  %32 = bitcast %"struct.std::_Bit_const_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %33 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %32, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  call void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"* %12, i64* %34, i32 0)
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %13 to i8*
  %36 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = load i64*, i64** %11, align 8
  call void @_ZNSt13_Bit_iteratorC2EPmj(%"struct.std::_Bit_iterator"* %14, i64* %37, i32 0)
  %38 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64* %40, i32 %42, i64* %45, i32 %47, i64* %50, i32 %52)
  %54 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  ret { i64*, i32 } %60
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca { i64*, i32 }
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.605
  %11 = load i32, i32* @y.606
  %12 = sub i32 %10, 2014158623
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 2014158623
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 550891332, i32* %20
  br label %21

; <label>:21:                                     ; preds = %6, %200
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 550891332, label %24
    i32 -11854871, label %44
    i32 602660881, label %128
    i32 1296707808, label %130
  ]

; <label>:23:                                     ; preds = %21
  br label %200

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -11854871, i32 1296707808
  store i32 %43, i32* %20
  br label %200

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Bit_iterator", align 8
  %46 = alloca %"struct.std::_Bit_iterator", align 8
  %47 = alloca %"struct.std::_Bit_iterator", align 8
  %48 = alloca %"struct.std::_Bit_iterator", align 8
  %49 = alloca %"struct.std::_Bit_iterator", align 8
  %50 = alloca %"struct.std::_Bit_iterator", align 8
  %51 = alloca %"struct.std::_Bit_iterator", align 8
  %52 = alloca %"struct.std::_Bit_iterator", align 8
  %53 = alloca %"struct.std::_Bit_iterator", align 8
  %54 = bitcast %"struct.std::_Bit_iterator"* %46 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  store i64* %0, i64** %55, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  store i32 %1, i32* %56, align 8
  %57 = bitcast %"struct.std::_Bit_iterator"* %47 to { i64*, i32 }*
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %57, i32 0, i32 0
  store i64* %2, i64** %58, align 8
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %57, i32 0, i32 1
  store i32 %3, i32* %59, align 8
  %60 = bitcast %"struct.std::_Bit_iterator"* %48 to { i64*, i32 }*
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 0
  store i64* %4, i64** %61, align 8
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 1
  store i32 %5, i32* %62, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %50 to i8*
  %64 = bitcast %"struct.std::_Bit_iterator"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 16, i32 8, i1 false)
  %65 = bitcast %"struct.std::_Bit_iterator"* %50 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %67, i32 %69)
  %71 = bitcast %"struct.std::_Bit_iterator"* %49 to { i64*, i32 }*
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 0
  %73 = extractvalue { i64*, i32 } %70, 0
  store i64* %73, i64** %72, align 8
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 1
  %75 = extractvalue { i64*, i32 } %70, 1
  store i32 %75, i32* %74, align 8
  %76 = bitcast %"struct.std::_Bit_iterator"* %52 to i8*
  %77 = bitcast %"struct.std::_Bit_iterator"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 16, i32 8, i1 false)
  %78 = bitcast %"struct.std::_Bit_iterator"* %52 to { i64*, i32 }*
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %78, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %78, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %80, i32 %82)
  %84 = bitcast %"struct.std::_Bit_iterator"* %51 to { i64*, i32 }*
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %84, i32 0, i32 0
  %86 = extractvalue { i64*, i32 } %83, 0
  store i64* %86, i64** %85, align 8
  %87 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %84, i32 0, i32 1
  %88 = extractvalue { i64*, i32 } %83, 1
  store i32 %88, i32* %87, align 8
  %89 = bitcast %"struct.std::_Bit_iterator"* %53 to i8*
  %90 = bitcast %"struct.std::_Bit_iterator"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 16, i32 8, i1 false)
  %91 = bitcast %"struct.std::_Bit_iterator"* %49 to { i64*, i32 }*
  %92 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %91, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %91, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = bitcast %"struct.std::_Bit_iterator"* %51 to { i64*, i32 }*
  %97 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %96, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %96, i32 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = bitcast %"struct.std::_Bit_iterator"* %53 to { i64*, i32 }*
  %102 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %101, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %101, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %93, i32 %95, i64* %98, i32 %100, i64* %103, i32 %105)
  %107 = bitcast %"struct.std::_Bit_iterator"* %45 to { i64*, i32 }*
  %108 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 0
  %109 = extractvalue { i64*, i32 } %106, 0
  store i64* %109, i64** %108, align 8
  %110 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 1
  %111 = extractvalue { i64*, i32 } %106, 1
  store i32 %111, i32* %110, align 8
  %112 = bitcast %"struct.std::_Bit_iterator"* %45 to { i64*, i32 }*
  %113 = load { i64*, i32 }, { i64*, i32 }* %112, align 8
  store { i64*, i32 } %113, { i64*, i32 }* %7
  %114 = load i32, i32* @x.605
  %115 = load i32, i32* @y.606
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 602660881, i32 1296707808
  store i32 %127, i32* %20
  br label %200

; <label>:128:                                    ; preds = %21
  %129 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %129

; <label>:130:                                    ; preds = %21
  %131 = alloca %"struct.std::_Bit_iterator", align 8
  %132 = alloca %"struct.std::_Bit_iterator", align 8
  %133 = alloca %"struct.std::_Bit_iterator", align 8
  %134 = alloca %"struct.std::_Bit_iterator", align 8
  %135 = alloca %"struct.std::_Bit_iterator", align 8
  %136 = alloca %"struct.std::_Bit_iterator", align 8
  %137 = alloca %"struct.std::_Bit_iterator", align 8
  %138 = alloca %"struct.std::_Bit_iterator", align 8
  %139 = alloca %"struct.std::_Bit_iterator", align 8
  %140 = bitcast %"struct.std::_Bit_iterator"* %132 to { i64*, i32 }*
  %141 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %140, i32 0, i32 0
  store i64* %0, i64** %141, align 8
  %142 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %140, i32 0, i32 1
  store i32 %1, i32* %142, align 8
  %143 = bitcast %"struct.std::_Bit_iterator"* %133 to { i64*, i32 }*
  %144 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %143, i32 0, i32 0
  store i64* %2, i64** %144, align 8
  %145 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %143, i32 0, i32 1
  store i32 %3, i32* %145, align 8
  %146 = bitcast %"struct.std::_Bit_iterator"* %134 to { i64*, i32 }*
  %147 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %146, i32 0, i32 0
  store i64* %4, i64** %147, align 8
  %148 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %146, i32 0, i32 1
  store i32 %5, i32* %148, align 8
  %149 = bitcast %"struct.std::_Bit_iterator"* %136 to i8*
  %150 = bitcast %"struct.std::_Bit_iterator"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 16, i32 8, i1 false)
  %151 = bitcast %"struct.std::_Bit_iterator"* %136 to { i64*, i32 }*
  %152 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %151, i32 0, i32 0
  %153 = load i64*, i64** %152, align 8
  %154 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %151, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %153, i32 %155)
  %157 = bitcast %"struct.std::_Bit_iterator"* %135 to { i64*, i32 }*
  %158 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 0
  %159 = extractvalue { i64*, i32 } %156, 0
  store i64* %159, i64** %158, align 8
  %160 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 1
  %161 = extractvalue { i64*, i32 } %156, 1
  store i32 %161, i32* %160, align 8
  %162 = bitcast %"struct.std::_Bit_iterator"* %138 to i8*
  %163 = bitcast %"struct.std::_Bit_iterator"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 16, i32 8, i1 false)
  %164 = bitcast %"struct.std::_Bit_iterator"* %138 to { i64*, i32 }*
  %165 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = call { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %166, i32 %168)
  %170 = bitcast %"struct.std::_Bit_iterator"* %137 to { i64*, i32 }*
  %171 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %170, i32 0, i32 0
  %172 = extractvalue { i64*, i32 } %169, 0
  store i64* %172, i64** %171, align 8
  %173 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %170, i32 0, i32 1
  %174 = extractvalue { i64*, i32 } %169, 1
  store i32 %174, i32* %173, align 8
  %175 = bitcast %"struct.std::_Bit_iterator"* %139 to i8*
  %176 = bitcast %"struct.std::_Bit_iterator"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 16, i32 8, i1 false)
  %177 = bitcast %"struct.std::_Bit_iterator"* %135 to { i64*, i32 }*
  %178 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %177, i32 0, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %177, i32 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = bitcast %"struct.std::_Bit_iterator"* %137 to { i64*, i32 }*
  %183 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %182, i32 0, i32 0
  %184 = load i64*, i64** %183, align 8
  %185 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %182, i32 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = bitcast %"struct.std::_Bit_iterator"* %139 to { i64*, i32 }*
  %188 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %187, i32 0, i32 0
  %189 = load i64*, i64** %188, align 8
  %190 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %187, i32 0, i32 1
  %191 = load i32, i32* %190, align 8
  %192 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %179, i32 %181, i64* %184, i32 %186, i64* %189, i32 %191)
  %193 = bitcast %"struct.std::_Bit_iterator"* %131 to { i64*, i32 }*
  %194 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %193, i32 0, i32 0
  %195 = extractvalue { i64*, i32 } %192, 0
  store i64* %195, i64** %194, align 8
  %196 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %193, i32 0, i32 1
  %197 = extractvalue { i64*, i32 } %192, 1
  store i32 %197, i32* %196, align 8
  %198 = bitcast %"struct.std::_Bit_iterator"* %131 to { i64*, i32 }*
  %199 = load { i64*, i32 }, { i64*, i32 }* %198, align 8
  store i32 -11854871, i32* %20
  br label %200

; <label>:200:                                    ; preds = %130, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm(i64) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.607
  %6 = load i32, i32* @y.608
  %7 = sub i32 %5, 2048681554
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2048681554
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -210804681, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %139
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -210804681, label %19
    i32 -1268865251, label %27
    i32 596680179, label %66
    i32 -648056134, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %139

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1268865251, i32 -648056134
  store i32 %26, i32* %15
  br label %139

; <label>:27:                                     ; preds = %16
  %28 = alloca i64, align 8
  store i64 %0, i64* %28, align 8
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %29, 2785650414186099841
  %31 = add i64 %30, 64
  %32 = add i64 %31, 2785650414186099841
  %33 = add i64 %29, 64
  %34 = add i64 %32, -527156094031658108
  %35 = sub i64 %34, 1
  %36 = sub i64 %35, -527156094031658108
  %37 = sub i64 %32, 1
  %38 = udiv i64 %36, 64
  store i64 %38, i64* %2
  %39 = load i32, i32* @x.607
  %40 = load i32, i32* @y.608
  %41 = add i32 %39, -2006777965
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -2006777965
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 596680179, i32 -648056134
  store i32 %65, i32* %15
  br label %139

; <label>:66:                                     ; preds = %16
  %67 = load volatile i64, i64* %2
  ret i64 %67

; <label>:68:                                     ; preds = %16
  %69 = alloca i64, align 8
  store i64 %0, i64* %69, align 8
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 0, %70
  %72 = add i64 0, %71
  %73 = sub i64 0, %70
  %74 = add i64 %72, -6121857006110367507
  %75 = add i64 %74, 64
  %76 = sub i64 %75, -6121857006110367507
  %77 = add i64 %72, 64
  %78 = add i64 0, 80596420472677309
  %79 = sub i64 %78, %70
  %80 = sub i64 %79, 80596420472677309
  %81 = sub i64 0, %70
  %82 = sub i64 %80, -5318524796108169961
  %83 = add i64 %82, 64
  %84 = add i64 %83, -5318524796108169961
  %85 = add i64 %80, 64
  %86 = add i64 0, -2882922687560443759
  %87 = sub i64 %86, %70
  %88 = sub i64 %87, -2882922687560443759
  %89 = sub i64 0, %70
  %90 = sub i64 %88, -8166336435861832386
  %91 = add i64 %90, 64
  %92 = add i64 %91, -8166336435861832386
  %93 = add i64 %88, 64
  %94 = sub i64 %70, -403317213049185873
  %95 = sub i64 %94, 64
  %96 = add i64 %95, -403317213049185873
  %97 = sub i64 %70, 64
  %98 = mul i64 %96, 64
  %99 = sub i64 0, 64
  %100 = add i64 %70, %99
  %101 = sub i64 %70, 64
  %102 = mul i64 %100, 64
  %103 = shl i64 %70, 64
  %104 = sub i64 0, 1379170793988298127
  %105 = sub i64 %104, %70
  %106 = add i64 %105, 1379170793988298127
  %107 = sub i64 0, %70
  %108 = sub i64 0, %106
  %109 = sub i64 0, 64
  %110 = add i64 %108, %109
  %111 = sub i64 0, %110
  %112 = add i64 %106, 64
  %113 = shl i64 %70, 64
  %114 = sub i64 0, 64
  %115 = sub i64 %70, %114
  %116 = add i64 %70, 64
  %117 = sub i64 0, -3540831585939964245
  %118 = sub i64 %117, %115
  %119 = add i64 %118, -3540831585939964245
  %120 = sub i64 0, %115
  %121 = sub i64 0, %119
  %122 = sub i64 0, 1
  %123 = add i64 %121, %122
  %124 = sub i64 0, %123
  %125 = add i64 %119, 1
  %126 = shl i64 %115, 1
  %127 = shl i64 %115, 1
  %128 = shl i64 %115, 1
  %129 = add i64 %115, 4664508360398957397
  %130 = sub i64 %129, 1
  %131 = sub i64 %130, 4664508360398957397
  %132 = sub i64 %115, 1
  %133 = sub i64 %131, 2553804910044446316
  %134 = sub i64 %133, 64
  %135 = add i64 %134, 2553804910044446316
  %136 = sub i64 %131, 64
  %137 = mul i64 %135, 64
  %138 = udiv i64 %131, 64
  store i32 -1268865251, i32* %15
  br label %139

; <label>:139:                                    ; preds = %68, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt19_Bit_const_iteratorC2EPmj(%"struct.std::_Bit_const_iterator"*, i64*, i32) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %4, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZNSt18_Bit_iterator_baseC2EPmj(%"struct.std::_Bit_iterator_base"* %8, i64* %9, i32 %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %0, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %1, i32* %19, align 8
  %20 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %2, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %3, i32* %22, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 0
  store i64* %4, i64** %24, align 8
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 1
  store i32 %5, i32* %25, align 8
  %26 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %27 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %29 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %30, i32 %32)
  %34 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 0
  %36 = extractvalue { i64*, i32 } %33, 0
  store i64* %36, i64** %35, align 8
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 1
  %38 = extractvalue { i64*, i32 } %33, 1
  store i32 %38, i32* %37, align 8
  %39 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %40 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 16, i32 8, i1 false)
  %41 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %43, i32 %45)
  %47 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  %49 = extractvalue { i64*, i32 } %46, 0
  store i64* %49, i64** %48, align 8
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  %51 = extractvalue { i64*, i32 } %46, 1
  store i32 %51, i32* %50, align 8
  %52 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  %53 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %56, i32 %58)
  %60 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 0
  %62 = extractvalue { i64*, i32 } %59, 0
  store i64* %62, i64** %61, align 8
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 1
  %64 = extractvalue { i64*, i32 } %59, 1
  store i32 %64, i32* %63, align 8
  %65 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %76 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = call { i64*, i32 } @_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %67, i32 %69, i64* %72, i32 %74, i64* %77, i32 %79)
  %81 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 0
  %83 = extractvalue { i64*, i32 } %80, 0
  store i64* %83, i64** %82, align 8
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 1
  %85 = extractvalue { i64*, i32 } %80, 1
  store i32 %85, i32* %84, align 8
  %86 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %87 = load { i64*, i32 }, { i64*, i32 }* %86, align 8
  ret { i64*, i32 } %87
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64*, i32) #4 comdat {
  %3 = alloca %"struct.std::_Bit_iterator", align 8
  %4 = alloca %"struct.std::_Bit_iterator", align 8
  %5 = alloca %"struct.std::_Bit_iterator", align 8
  %6 = bitcast %"struct.std::_Bit_iterator"* %4 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  store i64* %0, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = bitcast %"struct.std::_Bit_iterator"* %5 to i8*
  %10 = bitcast %"struct.std::_Bit_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Bit_iterator"* %5 to { i64*, i32 }*
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = call { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64* %13, i32 %15)
  %17 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  %19 = extractvalue { i64*, i32 } %16, 0
  store i64* %19, i64** %18, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  %21 = extractvalue { i64*, i32 } %16, 1
  store i32 %21, i32* %20, align 8
  %22 = bitcast %"struct.std::_Bit_iterator"* %3 to { i64*, i32 }*
  %23 = load { i64*, i32 }, { i64*, i32 }* %22, align 8
  ret { i64*, i32 } %23
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca { i64*, i32 }
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.615
  %11 = load i32, i32* @y.616
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -337132370, i32* %19
  br label %20

; <label>:20:                                     ; preds = %6, %141
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -337132370, label %23
    i32 397007551, label %31
    i32 -2118530375, label %92
    i32 -1210074464, label %94
  ]

; <label>:22:                                     ; preds = %20
  br label %141

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 397007551, i32 -1210074464
  store i32 %30, i32* %19
  br label %141

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Bit_iterator", align 8
  %33 = alloca %"struct.std::_Bit_iterator", align 8
  %34 = alloca %"struct.std::_Bit_iterator", align 8
  %35 = alloca %"struct.std::_Bit_iterator", align 8
  %36 = alloca i8, align 1
  %37 = alloca %"struct.std::_Bit_iterator", align 8
  %38 = alloca %"struct.std::_Bit_iterator", align 8
  %39 = alloca %"struct.std::_Bit_iterator", align 8
  %40 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  store i64* %0, i64** %41, align 8
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  store i32 %1, i32* %42, align 8
  %43 = bitcast %"struct.std::_Bit_iterator"* %34 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  store i64* %2, i64** %44, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  store i32 %3, i32* %45, align 8
  %46 = bitcast %"struct.std::_Bit_iterator"* %35 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  store i64* %4, i64** %47, align 8
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  store i32 %5, i32* %48, align 8
  store i8 0, i8* %36, align 1
  %49 = bitcast %"struct.std::_Bit_iterator"* %37 to i8*
  %50 = bitcast %"struct.std::_Bit_iterator"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 16, i32 8, i1 false)
  %51 = bitcast %"struct.std::_Bit_iterator"* %38 to i8*
  %52 = bitcast %"struct.std::_Bit_iterator"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = bitcast %"struct.std::_Bit_iterator"* %39 to i8*
  %54 = bitcast %"struct.std::_Bit_iterator"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false)
  %55 = bitcast %"struct.std::_Bit_iterator"* %37 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = bitcast %"struct.std::_Bit_iterator"* %38 to { i64*, i32 }*
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = bitcast %"struct.std::_Bit_iterator"* %39 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = call { i64*, i32 } @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64* %57, i32 %59, i64* %62, i32 %64, i64* %67, i32 %69)
  %71 = bitcast %"struct.std::_Bit_iterator"* %32 to { i64*, i32 }*
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 0
  %73 = extractvalue { i64*, i32 } %70, 0
  store i64* %73, i64** %72, align 8
  %74 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %71, i32 0, i32 1
  %75 = extractvalue { i64*, i32 } %70, 1
  store i32 %75, i32* %74, align 8
  %76 = bitcast %"struct.std::_Bit_iterator"* %32 to { i64*, i32 }*
  %77 = load { i64*, i32 }, { i64*, i32 }* %76, align 8
  store { i64*, i32 } %77, { i64*, i32 }* %7
  %78 = load i32, i32* @x.615
  %79 = load i32, i32* @y.616
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  %91 = select i1 %89, i32 -2118530375, i32 -1210074464
  store i32 %91, i32* %19
  br label %141

; <label>:92:                                     ; preds = %20
  %93 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %93

; <label>:94:                                     ; preds = %20
  %95 = alloca %"struct.std::_Bit_iterator", align 8
  %96 = alloca %"struct.std::_Bit_iterator", align 8
  %97 = alloca %"struct.std::_Bit_iterator", align 8
  %98 = alloca %"struct.std::_Bit_iterator", align 8
  %99 = alloca i8, align 1
  %100 = alloca %"struct.std::_Bit_iterator", align 8
  %101 = alloca %"struct.std::_Bit_iterator", align 8
  %102 = alloca %"struct.std::_Bit_iterator", align 8
  %103 = bitcast %"struct.std::_Bit_iterator"* %96 to { i64*, i32 }*
  %104 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %103, i32 0, i32 0
  store i64* %0, i64** %104, align 8
  %105 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %103, i32 0, i32 1
  store i32 %1, i32* %105, align 8
  %106 = bitcast %"struct.std::_Bit_iterator"* %97 to { i64*, i32 }*
  %107 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %106, i32 0, i32 0
  store i64* %2, i64** %107, align 8
  %108 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %106, i32 0, i32 1
  store i32 %3, i32* %108, align 8
  %109 = bitcast %"struct.std::_Bit_iterator"* %98 to { i64*, i32 }*
  %110 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %109, i32 0, i32 0
  store i64* %4, i64** %110, align 8
  %111 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %109, i32 0, i32 1
  store i32 %5, i32* %111, align 8
  store i8 0, i8* %99, align 1
  %112 = bitcast %"struct.std::_Bit_iterator"* %100 to i8*
  %113 = bitcast %"struct.std::_Bit_iterator"* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 16, i32 8, i1 false)
  %114 = bitcast %"struct.std::_Bit_iterator"* %101 to i8*
  %115 = bitcast %"struct.std::_Bit_iterator"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 16, i32 8, i1 false)
  %116 = bitcast %"struct.std::_Bit_iterator"* %102 to i8*
  %117 = bitcast %"struct.std::_Bit_iterator"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %116, i8* %117, i64 16, i32 8, i1 false)
  %118 = bitcast %"struct.std::_Bit_iterator"* %100 to { i64*, i32 }*
  %119 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %118, i32 0, i32 0
  %120 = load i64*, i64** %119, align 8
  %121 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %118, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = bitcast %"struct.std::_Bit_iterator"* %101 to { i64*, i32 }*
  %124 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %123, i32 0, i32 0
  %125 = load i64*, i64** %124, align 8
  %126 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %123, i32 0, i32 1
  %127 = load i32, i32* %126, align 8
  %128 = bitcast %"struct.std::_Bit_iterator"* %102 to { i64*, i32 }*
  %129 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %128, i32 0, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %128, i32 0, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = call { i64*, i32 } @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64* %120, i32 %122, i64* %125, i32 %127, i64* %130, i32 %132)
  %134 = bitcast %"struct.std::_Bit_iterator"* %95 to { i64*, i32 }*
  %135 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %134, i32 0, i32 0
  %136 = extractvalue { i64*, i32 } %133, 0
  store i64* %136, i64** %135, align 8
  %137 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %134, i32 0, i32 1
  %138 = extractvalue { i64*, i32 } %133, 1
  store i32 %138, i32* %137, align 8
  %139 = bitcast %"struct.std::_Bit_iterator"* %95 to { i64*, i32 }*
  %140 = load { i64*, i32 }, { i64*, i32 }* %139, align 8
  store i32 397007551, i32* %19
  br label %141

; <label>:141:                                    ; preds = %94, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64*, i32) #0 comdat {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.617
  %7 = load i32, i32* @y.618
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 208668633, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %99
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 208668633, label %19
    i32 1058932625, label %27
    i32 -1464577439, label %75
    i32 -583849050, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %99

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1058932625, i32 -583849050
  store i32 %26, i32* %15
  br label %99

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Bit_iterator", align 8
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = alloca %"struct.std::_Bit_iterator", align 8
  %31 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 0
  store i64* %0, i64** %32, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 1
  store i32 %1, i32* %33, align 8
  %34 = bitcast %"struct.std::_Bit_iterator"* %30 to i8*
  %35 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false)
  %36 = bitcast %"struct.std::_Bit_iterator"* %30 to { i64*, i32 }*
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %36, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %36, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = call { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64* %38, i32 %40)
  %42 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 0
  %44 = extractvalue { i64*, i32 } %41, 0
  store i64* %44, i64** %43, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 1
  %46 = extractvalue { i64*, i32 } %41, 1
  store i32 %46, i32* %45, align 8
  %47 = bitcast %"struct.std::_Bit_iterator"* %28 to { i64*, i32 }*
  %48 = load { i64*, i32 }, { i64*, i32 }* %47, align 8
  store { i64*, i32 } %48, { i64*, i32 }* %3
  %49 = load i32, i32* @x.617
  %50 = load i32, i32* @y.618
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1464577439, i32 -583849050
  store i32 %74, i32* %15
  br label %99

; <label>:75:                                     ; preds = %16
  %76 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"struct.std::_Bit_iterator", align 8
  %79 = alloca %"struct.std::_Bit_iterator", align 8
  %80 = alloca %"struct.std::_Bit_iterator", align 8
  %81 = bitcast %"struct.std::_Bit_iterator"* %79 to { i64*, i32 }*
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 0
  store i64* %0, i64** %82, align 8
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 1
  store i32 %1, i32* %83, align 8
  %84 = bitcast %"struct.std::_Bit_iterator"* %80 to i8*
  %85 = bitcast %"struct.std::_Bit_iterator"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 16, i32 8, i1 false)
  %86 = bitcast %"struct.std::_Bit_iterator"* %80 to { i64*, i32 }*
  %87 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %86, i32 0, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %86, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = call { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64* %88, i32 %90)
  %92 = bitcast %"struct.std::_Bit_iterator"* %78 to { i64*, i32 }*
  %93 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %92, i32 0, i32 0
  %94 = extractvalue { i64*, i32 } %91, 0
  store i64* %94, i64** %93, align 8
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %92, i32 0, i32 1
  %96 = extractvalue { i64*, i32 } %91, 1
  store i32 %96, i32* %95, align 8
  %97 = bitcast %"struct.std::_Bit_iterator"* %78 to { i64*, i32 }*
  %98 = load { i64*, i32 }, { i64*, i32 }* %97, align 8
  store i32 1058932625, i32* %15
  br label %99

; <label>:99:                                     ; preds = %77, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca { i64*, i32 }
  %8 = alloca %"struct.std::_Bit_reference"*
  %9 = alloca %"struct.std::_Bit_reference"*
  %10 = alloca i64*
  %11 = alloca %"struct.std::_Bit_iterator"*
  %12 = alloca %"struct.std::_Bit_iterator"*
  %13 = alloca %"struct.std::_Bit_iterator"*
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.619
  %17 = load i32, i32* @y.620
  %18 = sub i32 %16, -1615826593
  %19 = sub i32 %18, 1
  %20 = add i32 %19, -1615826593
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %15
  %25 = icmp slt i32 %17, 10
  store i1 %25, i1* %14
  %26 = alloca i32
  store i32 -695406023, i32* %26
  br label %27

; <label>:27:                                     ; preds = %6, %294
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 -695406023, label %30
    i32 -651326852, label %50
    i32 -48434572, label %89
    i32 -46584911, label %90
    i32 -1083427713, label %95
    i32 445098266, label %117
    i32 1228773383, label %133
    i32 -65931925, label %167
    i32 1086805197, label %168
    i32 330958047, label %184
    i32 1731500337, label %218
    i32 -932994394, label %220
    i32 -819595411, label %240
    i32 135400187, label %286
  ]

; <label>:29:                                     ; preds = %27
  br label %294

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %15
  %32 = load volatile i1, i1* %14
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -651326852, i32 -932994394
  store i32 %49, i32* %26
  br label %294

; <label>:50:                                     ; preds = %27
  %51 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %51, %"struct.std::_Bit_iterator"** %13
  %52 = alloca %"struct.std::_Bit_iterator", align 8
  %53 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %53, %"struct.std::_Bit_iterator"** %12
  %54 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %54, %"struct.std::_Bit_iterator"** %11
  %55 = alloca i64, align 8
  store i64* %55, i64** %10
  %56 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %56, %"struct.std::_Bit_reference"** %9
  %57 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %57, %"struct.std::_Bit_reference"** %8
  %58 = bitcast %"struct.std::_Bit_iterator"* %52 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  store i64* %0, i64** %59, align 8
  %60 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  store i32 %1, i32* %60, align 8
  %61 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %62 = bitcast %"struct.std::_Bit_iterator"* %61 to { i64*, i32 }*
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %62, i32 0, i32 0
  store i64* %2, i64** %63, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %62, i32 0, i32 1
  store i32 %3, i32* %64, align 8
  %65 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %66 = bitcast %"struct.std::_Bit_iterator"* %65 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  store i64* %4, i64** %67, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  store i32 %5, i32* %68, align 8
  %69 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %70 = bitcast %"struct.std::_Bit_iterator"* %69 to %"struct.std::_Bit_iterator_base"*
  %71 = bitcast %"struct.std::_Bit_iterator"* %52 to %"struct.std::_Bit_iterator_base"*
  %72 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %70, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %71)
  %73 = load volatile i64*, i64** %10
  store i64 %72, i64* %73, align 8
  %74 = load i32, i32* @x.619
  %75 = load i32, i32* @y.620
  %76 = add i32 %74, 351453039
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 351453039
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  %88 = select i1 %86, i32 -48434572, i32 -932994394
  store i32 %88, i32* %26
  br label %294

; <label>:89:                                     ; preds = %27
  store i32 -46584911, i32* %26
  br label %294

; <label>:90:                                     ; preds = %27
  %91 = load volatile i64*, i64** %10
  %92 = load i64, i64* %91, align 8
  %93 = icmp sgt i64 %92, 0
  %94 = select i1 %93, i32 -1083427713, i32 1086805197
  store i32 %94, i32* %26
  br label %294

; <label>:95:                                     ; preds = %27
  %96 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %12
  %97 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratormmEv(%"struct.std::_Bit_iterator"* %96)
  %98 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %97)
  %99 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %9
  %100 = bitcast %"struct.std::_Bit_reference"* %99 to { i64*, i64 }*
  %101 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %100, i32 0, i32 0
  %102 = extractvalue { i64*, i64 } %98, 0
  store i64* %102, i64** %101, align 8
  %103 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %100, i32 0, i32 1
  %104 = extractvalue { i64*, i64 } %98, 1
  store i64 %104, i64* %103, align 8
  %105 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %106 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratormmEv(%"struct.std::_Bit_iterator"* %105)
  %107 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %106)
  %108 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %8
  %109 = bitcast %"struct.std::_Bit_reference"* %108 to { i64*, i64 }*
  %110 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %109, i32 0, i32 0
  %111 = extractvalue { i64*, i64 } %107, 0
  store i64* %111, i64** %110, align 8
  %112 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %109, i32 0, i32 1
  %113 = extractvalue { i64*, i64 } %107, 1
  store i64 %113, i64* %112, align 8
  %114 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %9
  %115 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %8
  %116 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"* %115, %"struct.std::_Bit_reference"* dereferenceable(16) %114) #3
  store i32 445098266, i32* %26
  br label %294

; <label>:117:                                    ; preds = %27
  %118 = load i32, i32* @x.619
  %119 = load i32, i32* @y.620
  %120 = add i32 %118, 1601342025
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 1601342025
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 1228773383, i32 -819595411
  store i32 %132, i32* %26
  br label %294

; <label>:133:                                    ; preds = %27
  %134 = load volatile i64*, i64** %10
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 0, -1
  %137 = sub i64 %135, %136
  %138 = add nsw i64 %135, -1
  %139 = load volatile i64*, i64** %10
  store i64 %137, i64* %139, align 8
  %140 = load i32, i32* @x.619
  %141 = load i32, i32* @y.620
  %142 = add i32 %140, 971308364
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 971308364
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  %166 = select i1 %164, i32 -65931925, i32 -819595411
  store i32 %166, i32* %26
  br label %294

; <label>:167:                                    ; preds = %27
  store i32 -46584911, i32* %26
  br label %294

; <label>:168:                                    ; preds = %27
  %169 = load i32, i32* @x.619
  %170 = load i32, i32* @y.620
  %171 = add i32 %169, -1641916026
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -1641916026
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  %183 = select i1 %181, i32 330958047, i32 135400187
  store i32 %183, i32* %26
  br label %294

; <label>:184:                                    ; preds = %27
  %185 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %186 = bitcast %"struct.std::_Bit_iterator"* %185 to i8*
  %187 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %188 = bitcast %"struct.std::_Bit_iterator"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %186, i8* %188, i64 16, i32 8, i1 false)
  %189 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %190 = bitcast %"struct.std::_Bit_iterator"* %189 to { i64*, i32 }*
  %191 = load { i64*, i32 }, { i64*, i32 }* %190, align 8
  store { i64*, i32 } %191, { i64*, i32 }* %7
  %192 = load i32, i32* @x.619
  %193 = load i32, i32* @y.620
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 false, true
  %204 = and i1 %201, false
  %205 = and i1 %199, %203
  %206 = and i1 %202, false
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 false, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  %217 = select i1 %215, i32 1731500337, i32 135400187
  store i32 %217, i32* %26
  br label %294

; <label>:218:                                    ; preds = %27
  %219 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %219

; <label>:220:                                    ; preds = %27
  %221 = alloca %"struct.std::_Bit_iterator", align 8
  %222 = alloca %"struct.std::_Bit_iterator", align 8
  %223 = alloca %"struct.std::_Bit_iterator", align 8
  %224 = alloca %"struct.std::_Bit_iterator", align 8
  %225 = alloca i64, align 8
  %226 = alloca %"struct.std::_Bit_reference", align 8
  %227 = alloca %"struct.std::_Bit_reference", align 8
  %228 = bitcast %"struct.std::_Bit_iterator"* %222 to { i64*, i32 }*
  %229 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %228, i32 0, i32 0
  store i64* %0, i64** %229, align 8
  %230 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %228, i32 0, i32 1
  store i32 %1, i32* %230, align 8
  %231 = bitcast %"struct.std::_Bit_iterator"* %223 to { i64*, i32 }*
  %232 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %231, i32 0, i32 0
  store i64* %2, i64** %232, align 8
  %233 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %231, i32 0, i32 1
  store i32 %3, i32* %233, align 8
  %234 = bitcast %"struct.std::_Bit_iterator"* %224 to { i64*, i32 }*
  %235 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %234, i32 0, i32 0
  store i64* %4, i64** %235, align 8
  %236 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %234, i32 0, i32 1
  store i32 %5, i32* %236, align 8
  %237 = bitcast %"struct.std::_Bit_iterator"* %223 to %"struct.std::_Bit_iterator_base"*
  %238 = bitcast %"struct.std::_Bit_iterator"* %222 to %"struct.std::_Bit_iterator_base"*
  %239 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %237, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %238)
  store i64 %239, i64* %225, align 8
  store i32 -651326852, i32* %26
  br label %294

; <label>:240:                                    ; preds = %27
  %241 = load volatile i64*, i64** %10
  %242 = load i64, i64* %241, align 8
  %243 = sub i64 %242, 7767670404560575991
  %244 = sub i64 %243, -1
  %245 = add i64 %244, 7767670404560575991
  %246 = sub i64 %242, -1
  %247 = mul i64 %245, -1
  %248 = add i64 0, 4957599652959064750
  %249 = sub i64 %248, %242
  %250 = sub i64 %249, 4957599652959064750
  %251 = sub i64 0, %242
  %252 = sub i64 0, %250
  %253 = sub i64 0, -1
  %254 = add i64 %252, %253
  %255 = sub i64 0, %254
  %256 = add i64 %250, -1
  %257 = sub i64 %242, 4596694854099300324
  %258 = sub i64 %257, -1
  %259 = add i64 %258, 4596694854099300324
  %260 = sub i64 %242, -1
  %261 = mul i64 %259, -1
  %262 = shl i64 %242, -1
  %263 = add i64 0, 3381702640378660815
  %264 = sub i64 %263, %242
  %265 = sub i64 %264, 3381702640378660815
  %266 = sub i64 0, %242
  %267 = sub i64 0, %265
  %268 = sub i64 0, -1
  %269 = add i64 %267, %268
  %270 = sub i64 0, %269
  %271 = add i64 %265, -1
  %272 = add i64 0, 2538783495206841085
  %273 = sub i64 %272, %242
  %274 = sub i64 %273, 2538783495206841085
  %275 = sub i64 0, %242
  %276 = sub i64 %274, -6890698449260584135
  %277 = add i64 %276, -1
  %278 = add i64 %277, -6890698449260584135
  %279 = add i64 %274, -1
  %280 = shl i64 %242, -1
  %281 = shl i64 %242, -1
  %282 = sub i64 0, -1
  %283 = sub i64 %242, %282
  %284 = add nsw i64 %242, -1
  %285 = load volatile i64*, i64** %10
  store i64 %283, i64* %285, align 8
  store i32 1228773383, i32* %26
  br label %294

; <label>:286:                                    ; preds = %27
  %287 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %288 = bitcast %"struct.std::_Bit_iterator"* %287 to i8*
  %289 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %290 = bitcast %"struct.std::_Bit_iterator"* %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %288, i8* %290, i64 16, i32 8, i1 false)
  %291 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %13
  %292 = bitcast %"struct.std::_Bit_iterator"* %291 to { i64*, i32 }*
  %293 = load { i64*, i32 }, { i64*, i32 }* %292, align 8
  store i32 330958047, i32* %26
  br label %294

; <label>:294:                                    ; preds = %286, %240, %220, %184, %168, %167, %133, %117, %95, %90, %89, %50, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratormmEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.621
  %6 = load i32, i32* @y.622
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1795048615, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1795048615, label %18
    i32 999951492, label %26
    i32 1705284791, label %46
    i32 645963816, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 999951492, i32 645963816
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %27, align 8
  %28 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %27, align 8
  store %"struct.std::_Bit_iterator"* %28, %"struct.std::_Bit_iterator"** %2
  %29 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2
  %30 = bitcast %"struct.std::_Bit_iterator"* %29 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base12_M_bump_downEv(%"struct.std::_Bit_iterator_base"* %30)
  %31 = load i32, i32* @x.621
  %32 = load i32, i32* @y.622
  %33 = add i32 %31, 1049167825
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1049167825
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1705284791, i32 645963816
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  %47 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2
  ret %"struct.std::_Bit_iterator"* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %49, align 8
  %50 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %49, align 8
  %51 = bitcast %"struct.std::_Bit_iterator"* %50 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base12_M_bump_downEv(%"struct.std::_Bit_iterator_base"* %51)
  store i32 999951492, i32* %14
  br label %52

; <label>:52:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca { i64*, i64 }
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.623
  %6 = load i32, i32* @y.624
  %7 = sub i32 %5, -660181466
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -660181466
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1489905966, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1489905966, label %19
    i32 -161221339, label %27
    i32 -1402210268, label %56
    i32 46251830, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -161221339, i32 46251830
  store i32 %26, i32* %15
  br label %89

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Bit_reference", align 8
  %29 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %29, align 8
  %30 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %29, align 8
  %31 = bitcast %"struct.std::_Bit_iterator"* %30 to %"struct.std::_Bit_iterator_base"*
  %32 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %31, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = bitcast %"struct.std::_Bit_iterator"* %30 to %"struct.std::_Bit_iterator_base"*
  %35 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = shl i64 1, %37
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %28, i64* %33, i64 %38)
  %39 = bitcast %"struct.std::_Bit_reference"* %28 to { i64*, i64 }*
  %40 = load { i64*, i64 }, { i64*, i64 }* %39, align 8
  store { i64*, i64 } %40, { i64*, i64 }* %2
  %41 = load i32, i32* @x.623
  %42 = load i32, i32* @y.624
  %43 = add i32 %41, -1347266427
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1347266427
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1402210268, i32 46251830
  store i32 %55, i32* %15
  br label %89

; <label>:56:                                     ; preds = %16
  %57 = load volatile { i64*, i64 }, { i64*, i64 }* %2
  ret { i64*, i64 } %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::_Bit_reference", align 8
  %60 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %60, align 8
  %61 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %60, align 8
  %62 = bitcast %"struct.std::_Bit_iterator"* %61 to %"struct.std::_Bit_iterator_base"*
  %63 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %62, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = bitcast %"struct.std::_Bit_iterator"* %61 to %"struct.std::_Bit_iterator_base"*
  %66 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %65, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = shl i64 1, %68
  %70 = sub i64 0, 6337382851040419671
  %71 = sub i64 %70, 1
  %72 = add i64 %71, 6337382851040419671
  %73 = sub i64 0, 1
  %74 = sub i64 0, %68
  %75 = sub i64 %72, %74
  %76 = add i64 %72, %68
  %77 = sub i64 0, 7111150018798532710
  %78 = sub i64 %77, 1
  %79 = add i64 %78, 7111150018798532710
  %80 = sub i64 0, 1
  %81 = sub i64 0, %79
  %82 = sub i64 0, %68
  %83 = add i64 %81, %82
  %84 = sub i64 0, %83
  %85 = add i64 %79, %68
  %86 = shl i64 1, %68
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %59, i64* %64, i64 %86)
  %87 = bitcast %"struct.std::_Bit_reference"* %59 to { i64*, i64 }*
  %88 = load { i64*, i64 }, { i64*, i64 }* %87, align 8
  store i32 -161221339, i32* %15
  br label %89

; <label>:89:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base12_M_bump_downEv(%"struct.std::_Bit_iterator_base"*) #4 comdat align 2 {
  %2 = alloca i32
  %3 = alloca %"struct.std::_Bit_iterator_base"*
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  store %"struct.std::_Bit_iterator_base"* %5, %"struct.std::_Bit_iterator_base"** %3
  %6 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %7 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %2
  %9 = load volatile i32, i32* %2
  %10 = sub i32 0, -1
  %11 = sub i32 %9, %10
  %12 = add i32 %9, -1
  store i32 %11, i32* %7, align 8
  %13 = alloca i32
  store i32 -810739116, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %29
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -810739116, label %17
    i32 131434794, label %21
    i32 1872631322, label %28
  ]

; <label>:16:                                     ; preds = %14
  br label %29

; <label>:17:                                     ; preds = %14
  %18 = load volatile i32, i32* %2
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %19, i32 131434794, i32 1872631322
  store i32 %20, i32* %13
  br label %29

; <label>:21:                                     ; preds = %14
  %22 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %23 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %22, i32 0, i32 1
  store i32 63, i32* %23, align 8
  %24 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %25 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %24, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i32 -1
  store i64* %27, i64** %25, align 8
  store i32 1872631322, i32* %13
  br label %29

; <label>:28:                                     ; preds = %14
  ret void

; <label>:29:                                     ; preds = %21, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"*, i64*, i64) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Bit_reference"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Bit_reference"* %0, %"struct.std::_Bit_reference"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Bit_reference", %"struct.std::_Bit_reference"* %7, i32 0, i32 1
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i64*, i32) #4 comdat align 2 {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.629
  %7 = load i32, i32* @y.630
  %8 = sub i32 %6, 1364559082
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1364559082
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 273403744, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 273403744, label %20
    i32 -410617537, label %28
    i32 322217883, label %65
    i32 -1034621102, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -410617537, i32 -1034621102
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Bit_iterator", align 8
  %30 = alloca %"struct.std::_Bit_iterator", align 8
  %31 = bitcast %"struct.std::_Bit_iterator"* %30 to { i64*, i32 }*
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 0
  store i64* %0, i64** %32, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 1
  store i32 %1, i32* %33, align 8
  %34 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  %35 = bitcast %"struct.std::_Bit_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false)
  %36 = bitcast %"struct.std::_Bit_iterator"* %29 to { i64*, i32 }*
  %37 = load { i64*, i32 }, { i64*, i32 }* %36, align 8
  store { i64*, i32 } %37, { i64*, i32 }* %3
  %38 = load i32, i32* @x.629
  %39 = load i32, i32* @y.630
  %40 = add i32 %38, 390245106
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 390245106
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 322217883, i32 -1034621102
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"struct.std::_Bit_iterator", align 8
  %69 = alloca %"struct.std::_Bit_iterator", align 8
  %70 = bitcast %"struct.std::_Bit_iterator"* %69 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  store i64* %0, i64** %71, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  store i32 %1, i32* %72, align 8
  %73 = bitcast %"struct.std::_Bit_iterator"* %68 to i8*
  %74 = bitcast %"struct.std::_Bit_iterator"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 16, i32 8, i1 false)
  %75 = bitcast %"struct.std::_Bit_iterator"* %68 to { i64*, i32 }*
  %76 = load { i64*, i32 }, { i64*, i32 }* %75, align 8
  store i32 -410617537, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPmiEvT_S1_RKT0_(i64*, i64*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %8, i64* %10, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt14__fill_bvectorSt13_Bit_iteratorS_b(i64*, i32, i64*, i32, i1 zeroext) #0 comdat {
  %6 = alloca %"struct.std::_Bit_iterator", align 8
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"struct.std::_Bit_reference", align 8
  %10 = bitcast %"struct.std::_Bit_iterator"* %6 to { i64*, i32 }*
  %11 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %10, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %10, i32 0, i32 1
  store i32 %1, i32* %12, align 8
  %13 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %2, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %3, i32* %15, align 8
  %16 = zext i1 %4 to i8
  store i8 %16, i8* %8, align 1
  %17 = alloca i32
  store i32 663651645, i32* %17
  br label %18

; <label>:18:                                     ; preds = %5, %93
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 663651645, label %21
    i32 -1661848867, label %26
    i32 -813978511, label %42
    i32 -94944056, label %79
    i32 1537270997, label %80
    i32 -1395768236, label %82
    i32 75742590, label %83
  ]

; <label>:20:                                     ; preds = %18
  br label %93

; <label>:21:                                     ; preds = %18
  %22 = bitcast %"struct.std::_Bit_iterator"* %6 to %"struct.std::_Bit_iterator_base"*
  %23 = bitcast %"struct.std::_Bit_iterator"* %7 to %"struct.std::_Bit_iterator_base"*
  %24 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"* %22, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %23)
  %25 = select i1 %24, i32 -1661848867, i32 -1395768236
  store i32 %25, i32* %17
  br label %93

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.633
  %28 = load i32, i32* @y.634
  %29 = add i32 %27, 1569629167
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 1569629167
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -813978511, i32 75742590
  store i32 %41, i32* %17
  br label %93

; <label>:42:                                     ; preds = %18
  %43 = load i8, i8* %8, align 1
  %44 = trunc i8 %43 to i1
  %45 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %46 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %47 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i64 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i64 } %45, 1
  store i64 %50, i64* %49, align 8
  %51 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %9, i1 zeroext %44) #3
  %52 = load i32, i32* @x.633
  %53 = load i32, i32* @y.634
  %54 = add i32 %52, 1254327691
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1254327691
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -94944056, i32 75742590
  store i32 %78, i32* %17
  br label %93

; <label>:79:                                     ; preds = %18
  store i32 1537270997, i32* %17
  br label %93

; <label>:80:                                     ; preds = %18
  %81 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %6)
  store i32 663651645, i32* %17
  br label %93

; <label>:82:                                     ; preds = %18
  ret void

; <label>:83:                                     ; preds = %18
  %84 = load i8, i8* %8, align 1
  %85 = trunc i8 %84 to i1
  %86 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %6)
  %87 = bitcast %"struct.std::_Bit_reference"* %9 to { i64*, i64 }*
  %88 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %87, i32 0, i32 0
  %89 = extractvalue { i64*, i64 } %86, 0
  store i64* %89, i64** %88, align 8
  %90 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %87, i32 0, i32 1
  %91 = extractvalue { i64*, i64 } %86, 1
  store i64 %91, i64* %90, align 8
  %92 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %9, i1 zeroext %85) #3
  store i32 -813978511, i32* %17
  br label %93

; <label>:93:                                     ; preds = %83, %80, %79, %42, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64*, i64*, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = alloca i32
  store i32 -240015560, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %70
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -240015560, label %14
    i32 1030043602, label %19
    i32 -998090290, label %23
    i32 -2142068031, label %26
    i32 -341061445, label %53
    i32 -121258474, label %68
    i32 -2086383196, label %69
  ]

; <label>:13:                                     ; preds = %11
  br label %70

; <label>:14:                                     ; preds = %11
  %15 = load i64*, i64** %4, align 8
  %16 = load i64*, i64** %5, align 8
  %17 = icmp ne i64* %15, %16
  %18 = select i1 %17, i32 1030043602, i32 -2142068031
  store i32 %18, i32* %10
  br label %70

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 -998090290, i32* %10
  br label %70

; <label>:23:                                     ; preds = %11
  %24 = load i64*, i64** %4, align 8
  %25 = getelementptr inbounds i64, i64* %24, i32 1
  store i64* %25, i64** %4, align 8
  store i32 -240015560, i32* %10
  br label %70

; <label>:26:                                     ; preds = %11
  %27 = load i32, i32* @x.635
  %28 = load i32, i32* @y.636
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -341061445, i32 -2086383196
  store i32 %52, i32* %10
  br label %70

; <label>:53:                                     ; preds = %11
  %54 = load i32, i32* @x.635
  %55 = load i32, i32* @y.636
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -121258474, i32 -2086383196
  store i32 %67, i32* %10
  br label %70

; <label>:68:                                     ; preds = %11
  ret void

; <label>:69:                                     ; preds = %11
  store i32 -341061445, i32* %10
  br label %70

; <label>:70:                                     ; preds = %69, %53, %26, %23, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.639
  %6 = load i32, i32* @y.640
  %7 = sub i32 %5, 1920401963
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1920401963
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 34984495, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 34984495, label %19
    i32 2056380041, label %39
    i32 760591287, label %69
    i32 1714607866, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2056380041, i32 1714607866
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  store i64* %0, i64** %40, align 8
  %41 = load i64*, i64** %40, align 8
  store i64* %41, i64** %2
  %42 = load i32, i32* @x.639
  %43 = load i32, i32* @y.640
  %44 = add i32 %42, 160903556
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 160903556
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 760591287, i32 1714607866
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile i64*, i64** %2
  ret i64* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca i64*, align 8
  store i64* %0, i64** %72, align 8
  %73 = load i64*, i64** %72, align 8
  store i32 2056380041, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt18_Bit_iterator_baseneERKS_(%"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %3, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3, align 8
  %6 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  %7 = call zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"* %5, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, true
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.643
  %6 = load i32, i32* @y.644
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1528655812, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1528655812, label %18
    i32 1002489726, label %26
    i32 -794801068, label %58
    i32 382979955, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1002489726, i32 382979955
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %27, align 8
  %28 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %27, align 8
  store %"struct.std::_Bit_iterator"* %28, %"struct.std::_Bit_iterator"** %2
  %29 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2
  %30 = bitcast %"struct.std::_Bit_iterator"* %29 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %30)
  %31 = load i32, i32* @x.643
  %32 = load i32, i32* @y.644
  %33 = add i32 %31, 1925294066
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1925294066
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -794801068, i32 382979955
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %2
  ret %"struct.std::_Bit_iterator"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Bit_iterator"*, align 8
  store %"struct.std::_Bit_iterator"* %0, %"struct.std::_Bit_iterator"** %61, align 8
  %62 = load %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %61, align 8
  %63 = bitcast %"struct.std::_Bit_iterator"* %62 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %63)
  store i32 1002489726, i32* %14
  br label %64

; <label>:64:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt18_Bit_iterator_baseeqERKS_(%"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca %"struct.std::_Bit_iterator_base"*
  %8 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  %9 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %8, align 8
  store %"struct.std::_Bit_iterator_base"* %1, %"struct.std::_Bit_iterator_base"** %9, align 8
  %10 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %8, align 8
  store %"struct.std::_Bit_iterator_base"* %10, %"struct.std::_Bit_iterator_base"** %7
  %11 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %7
  %12 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  store i64* %13, i64** %6
  %14 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %9, align 8
  %15 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %14, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  store i64* %16, i64** %5
  %17 = alloca i32
  store i32 -1322113825, i32* %17
  %18 = alloca i1
  br label %19

; <label>:19:                                     ; preds = %2, %136
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 -1322113825, label %22
    i32 1448138956, label %27
    i32 987903669, label %55
    i32 -367826514, label %90
    i32 -807128253, label %92
    i32 -1368947306, label %109
    i32 -1943320972, label %125
    i32 -1879017608, label %127
    i32 510722042, label %135
  ]

; <label>:21:                                     ; preds = %19
  br label %136

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64*, i64** %6
  %24 = load volatile i64*, i64** %5
  %25 = icmp eq i64* %23, %24
  %26 = select i1 %25, i32 1448138956, i32 -807128253
  store i32 %26, i32* %17
  store i1 false, i1* %18
  br label %136

; <label>:27:                                     ; preds = %19
  %28 = load i32, i32* @x.645
  %29 = load i32, i32* @y.646
  %30 = add i32 %28, 43330525
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 43330525
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 987903669, i32 -1879017608
  store i32 %54, i32* %17
  br label %136

; <label>:55:                                     ; preds = %19
  %56 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %7
  %57 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %9, align 8
  %60 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %58, %61
  store i1 %62, i1* %4
  %63 = load i32, i32* @x.645
  %64 = load i32, i32* @y.646
  %65 = sub i32 %63, -303565435
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -303565435
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 -367826514, i32 -1879017608
  store i32 %89, i32* %17
  br label %136

; <label>:90:                                     ; preds = %19
  store i32 -807128253, i32* %17
  %91 = load volatile i1, i1* %4
  store i1 %91, i1* %18
  br label %136

; <label>:92:                                     ; preds = %19
  %93 = load i1, i1* %18
  store i1 %93, i1* %3
  %94 = load i32, i32* @x.645
  %95 = load i32, i32* @y.646
  %96 = sub i32 %94, 1537376796
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 1537376796
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 -1368947306, i32 510722042
  store i32 %108, i32* %17
  br label %136

; <label>:109:                                    ; preds = %19
  %110 = load i32, i32* @x.645
  %111 = load i32, i32* @y.646
  %112 = sub i32 %110, 1109842046
  %113 = sub i32 %112, 1
  %114 = add i32 %113, 1109842046
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -1943320972, i32 510722042
  store i32 %124, i32* %17
  br label %136

; <label>:125:                                    ; preds = %19
  %126 = load volatile i1, i1* %3
  ret i1 %126

; <label>:127:                                    ; preds = %19
  %128 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %7
  %129 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %128, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %9, align 8
  %132 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %130, %133
  store i32 987903669, i32* %17
  br label %136

; <label>:135:                                    ; preds = %19
  store i32 -1368947306, i32* %17
  br label %136

; <label>:136:                                    ; preds = %135, %127, %109, %92, %90, %55, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"*) #4 comdat align 2 {
  %2 = alloca i32
  %3 = alloca %"struct.std::_Bit_iterator_base"*
  %4 = alloca %"struct.std::_Bit_iterator_base"*, align 8
  store %"struct.std::_Bit_iterator_base"* %0, %"struct.std::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %4, align 8
  store %"struct.std::_Bit_iterator_base"* %5, %"struct.std::_Bit_iterator_base"** %3
  %6 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %7 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %2
  %9 = load volatile i32, i32* %2
  %10 = add i32 %9, 1210953791
  %11 = add i32 %10, 1
  %12 = sub i32 %11, 1210953791
  %13 = add i32 %9, 1
  store i32 %12, i32* %7, align 8
  %14 = alloca i32
  store i32 379753308, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %75
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 379753308, label %18
    i32 17989059, label %22
    i32 -1507185660, label %29
    i32 -1467053351, label %57
    i32 -617614544, label %73
    i32 -2053912801, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %75

; <label>:18:                                     ; preds = %15
  %19 = load volatile i32, i32* %2
  %20 = icmp eq i32 %19, 63
  %21 = select i1 %20, i32 17989059, i32 -1507185660
  store i32 %21, i32* %14
  br label %75

; <label>:22:                                     ; preds = %15
  %23 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %24 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %23, i32 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = load volatile %"struct.std::_Bit_iterator_base"*, %"struct.std::_Bit_iterator_base"** %3
  %26 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i32 1
  store i64* %28, i64** %26, align 8
  store i32 -1507185660, i32* %14
  br label %75

; <label>:29:                                     ; preds = %15
  %30 = load i32, i32* @x.647
  %31 = load i32, i32* @y.648
  %32 = add i32 %30, 748512666
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 748512666
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1467053351, i32 -2053912801
  store i32 %56, i32* %14
  br label %75

; <label>:57:                                     ; preds = %15
  %58 = load i32, i32* @x.647
  %59 = load i32, i32* @y.648
  %60 = add i32 %58, -156646881
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -156646881
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -617614544, i32 -2053912801
  store i32 %72, i32* %14
  br label %75

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  store i32 -1467053351, i32* %14
  br label %75

; <label>:75:                                     ; preds = %74, %57, %29, %22, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(%"class.std::vector.11"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca %"class.std::vector.11"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %4, align 8
  %7 = load %"class.std::vector.11"*, %"class.std::vector.11"** %4, align 8
  store i64 9223372036854775744, i64* %5, align 8
  %8 = bitcast %"class.std::vector.11"* %7 to %"struct.std::_Bvector_base"*
  %9 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"* %8) #3
  %10 = call i64 @_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_(%"class.std::allocator.12"* dereferenceable(1) %9) #3
  store i64 %10, i64* %6, align 8
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 2060456343, i32* %12
  %13 = alloca i64
  br label %14

; <label>:14:                                     ; preds = %1, %118
  %15 = load i32, i32* %12
  switch i32 %15, label %16 [
    i32 2060456343, label %17
    i32 -1751630489, label %21
    i32 654838527, label %48
    i32 1137613035, label %78
    i32 -1414841963, label %80
    i32 -350558598, label %81
    i32 -699015772, label %83
  ]

; <label>:16:                                     ; preds = %14
  br label %118

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %3
  %19 = icmp ule i64 %18, 144115188075855871
  %20 = select i1 %19, i32 -1751630489, i32 -1414841963
  store i32 %20, i32* %12
  br label %118

; <label>:21:                                     ; preds = %14
  %22 = load i32, i32* @x.649
  %23 = load i32, i32* @y.650
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 654838527, i32 -699015772
  store i32 %47, i32* %12
  br label %118

; <label>:48:                                     ; preds = %14
  %49 = load i64, i64* %6, align 8
  %50 = mul i64 %49, 64
  store i64 %50, i64* %2
  %51 = load i32, i32* @x.649
  %52 = load i32, i32* @y.650
  %53 = sub i32 %51, -1348714419
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1348714419
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1137613035, i32 -699015772
  store i32 %77, i32* %12
  br label %118

; <label>:78:                                     ; preds = %14
  store i32 -350558598, i32* %12
  %79 = load volatile i64, i64* %2
  store i64 %79, i64* %13
  br label %118

; <label>:80:                                     ; preds = %14
  store i32 -350558598, i32* %12
  store i64 9223372036854775744, i64* %13
  br label %118

; <label>:81:                                     ; preds = %14
  %82 = load i64, i64* %13
  ret i64 %82

; <label>:83:                                     ; preds = %14
  %84 = load i64, i64* %6, align 8
  %85 = add i64 0, -375374151766081069
  %86 = sub i64 %85, %84
  %87 = sub i64 %86, -375374151766081069
  %88 = sub i64 0, %84
  %89 = sub i64 0, 64
  %90 = sub i64 %87, %89
  %91 = add i64 %87, 64
  %92 = shl i64 %84, 64
  %93 = sub i64 0, 64
  %94 = add i64 %84, %93
  %95 = sub i64 %84, 64
  %96 = mul i64 %94, 64
  %97 = shl i64 %84, 64
  %98 = sub i64 0, 64
  %99 = add i64 %84, %98
  %100 = sub i64 %84, 64
  %101 = mul i64 %99, 64
  %102 = sub i64 %84, -7341508341287465853
  %103 = sub i64 %102, 64
  %104 = add i64 %103, -7341508341287465853
  %105 = sub i64 %84, 64
  %106 = mul i64 %104, 64
  %107 = add i64 %84, 3360853075141332746
  %108 = sub i64 %107, 64
  %109 = sub i64 %108, 3360853075141332746
  %110 = sub i64 %84, 64
  %111 = mul i64 %109, 64
  %112 = sub i64 %84, -4716678848004797344
  %113 = sub i64 %112, 64
  %114 = add i64 %113, -4716678848004797344
  %115 = sub i64 %84, 64
  %116 = mul i64 %114, 64
  %117 = mul i64 %84, 64
  store i32 654838527, i32* %12
  br label %118

; <label>:118:                                    ; preds = %83, %80, %78, %48, %21, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_(%"class.std::allocator.12"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.12"* @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::_Bvector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Bvector_base"*, align 8
  store %"struct.std::_Bvector_base"* %0, %"struct.std::_Bvector_base"** %2, align 8
  %3 = load %"struct.std::_Bvector_base"*, %"struct.std::_Bvector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"class.std::allocator.12"*
  ret %"class.std::allocator.12"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.12"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.657
  %7 = load i32, i32* @y.658
  %8 = add i32 %6, -2075162590
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -2075162590
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -186373391, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -186373391, label %20
    i32 -581451885, label %40
    i32 850998184, label %73
    i32 1228809957, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -581451885, i32 1228809957
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.12"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %41, align 8
  %44 = bitcast %"class.std::allocator.12"* %43 to %"class.__gnu_cxx::new_allocator.13"*
  %45 = load i64, i64* %42, align 8
  %46 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"* %44, i64 %45, i8* null)
  store i64* %46, i64** %3
  %47 = load i32, i32* @x.657
  %48 = load i32, i32* @y.658
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 850998184, i32 1228809957
  store i32 %72, i32* %16
  br label %82

; <label>:73:                                     ; preds = %17
  %74 = load volatile i64*, i64** %3
  ret i64* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::allocator.12"*, align 8
  %77 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %76, align 8
  %79 = bitcast %"class.std::allocator.12"* %78 to %"class.__gnu_cxx::new_allocator.13"*
  %80 = load i64, i64* %77, align 8
  %81 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"* %79, i64 %80, i8* null)
  store i32 -581451885, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -1648288824, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %114
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1648288824, label %17
    i32 20055203, label %22
    i32 -630392215, label %23
    i32 -421443906, label %50
    i32 -192786347, label %82
    i32 -126658348, label %84
  ]

; <label>:16:                                     ; preds = %14
  br label %114

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 20055203, i32 -630392215
  store i32 %21, i32* %13
  br label %114

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.659
  %25 = load i32, i32* @y.660
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -421443906, i32 -126658348
  store i32 %49, i32* %13
  br label %114

; <label>:50:                                     ; preds = %14
  %51 = load i64, i64* %8, align 8
  %52 = mul i64 %51, 8
  %53 = call i8* @_Znwm(i64 %52)
  %54 = bitcast i8* %53 to i64*
  store i64* %54, i64** %4
  %55 = load i32, i32* @x.659
  %56 = load i32, i32* @y.660
  %57 = sub i32 %55, 223167558
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 223167558
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -192786347, i32 -126658348
  store i32 %81, i32* %13
  br label %114

; <label>:82:                                     ; preds = %14
  %83 = load volatile i64*, i64** %4
  ret i64* %83

; <label>:84:                                     ; preds = %14
  %85 = load i64, i64* %8, align 8
  %86 = add i64 0, -5554993078833705696
  %87 = sub i64 %86, %85
  %88 = sub i64 %87, -5554993078833705696
  %89 = sub i64 0, %85
  %90 = sub i64 0, %88
  %91 = sub i64 0, 8
  %92 = add i64 %90, %91
  %93 = sub i64 0, %92
  %94 = add i64 %88, 8
  %95 = add i64 %85, -7556240489765919171
  %96 = sub i64 %95, 8
  %97 = sub i64 %96, -7556240489765919171
  %98 = sub i64 %85, 8
  %99 = mul i64 %97, 8
  %100 = add i64 0, 4855131890632524802
  %101 = sub i64 %100, %85
  %102 = sub i64 %101, 4855131890632524802
  %103 = sub i64 0, %85
  %104 = sub i64 0, %102
  %105 = sub i64 0, 8
  %106 = add i64 %104, %105
  %107 = sub i64 0, %106
  %108 = add i64 %102, 8
  %109 = shl i64 %85, 8
  %110 = shl i64 %85, 8
  %111 = mul i64 %85, 8
  %112 = call i8* @_Znwm(i64 %111)
  %113 = bitcast i8* %112 to i64*
  store i32 -421443906, i32* %13
  br label %114

; <label>:114:                                    ; preds = %84, %50, %23, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca { i64*, i32 }
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.663
  %11 = load i32, i32* @y.664
  %12 = add i32 %10, 883191203
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 883191203
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 464582894, i32* %20
  br label %21

; <label>:21:                                     ; preds = %6, %200
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 464582894, label %24
    i32 942751965, label %32
    i32 -211812298, label %128
    i32 1698102133, label %130
  ]

; <label>:23:                                     ; preds = %21
  br label %200

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 942751965, i32 1698102133
  store i32 %31, i32* %20
  br label %200

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Bit_iterator", align 8
  %34 = alloca %"struct.std::_Bit_const_iterator", align 8
  %35 = alloca %"struct.std::_Bit_const_iterator", align 8
  %36 = alloca %"struct.std::_Bit_iterator", align 8
  %37 = alloca %"struct.std::_Bit_const_iterator", align 8
  %38 = alloca %"struct.std::_Bit_const_iterator", align 8
  %39 = alloca %"struct.std::_Bit_const_iterator", align 8
  %40 = alloca %"struct.std::_Bit_const_iterator", align 8
  %41 = alloca %"struct.std::_Bit_iterator", align 8
  %42 = bitcast %"struct.std::_Bit_const_iterator"* %34 to { i64*, i32 }*
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 0
  store i64* %0, i64** %43, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 1
  store i32 %1, i32* %44, align 8
  %45 = bitcast %"struct.std::_Bit_const_iterator"* %35 to { i64*, i32 }*
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %45, i32 0, i32 0
  store i64* %2, i64** %46, align 8
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %45, i32 0, i32 1
  store i32 %3, i32* %47, align 8
  %48 = bitcast %"struct.std::_Bit_iterator"* %36 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  store i64* %4, i64** %49, align 8
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  store i32 %5, i32* %50, align 8
  %51 = bitcast %"struct.std::_Bit_const_iterator"* %38 to i8*
  %52 = bitcast %"struct.std::_Bit_const_iterator"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 16, i32 8, i1 false)
  %53 = bitcast %"struct.std::_Bit_const_iterator"* %38 to { i64*, i32 }*
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %53, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %55, i32 %57)
  %59 = bitcast %"struct.std::_Bit_const_iterator"* %37 to { i64*, i32 }*
  %60 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %59, i32 0, i32 0
  %61 = extractvalue { i64*, i32 } %58, 0
  store i64* %61, i64** %60, align 8
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %59, i32 0, i32 1
  %63 = extractvalue { i64*, i32 } %58, 1
  store i32 %63, i32* %62, align 8
  %64 = bitcast %"struct.std::_Bit_const_iterator"* %40 to i8*
  %65 = bitcast %"struct.std::_Bit_const_iterator"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 16, i32 8, i1 false)
  %66 = bitcast %"struct.std::_Bit_const_iterator"* %40 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %68, i32 %70)
  %72 = bitcast %"struct.std::_Bit_const_iterator"* %39 to { i64*, i32 }*
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 0
  %74 = extractvalue { i64*, i32 } %71, 0
  store i64* %74, i64** %73, align 8
  %75 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 1
  %76 = extractvalue { i64*, i32 } %71, 1
  store i32 %76, i32* %75, align 8
  %77 = bitcast %"struct.std::_Bit_iterator"* %41 to i8*
  %78 = bitcast %"struct.std::_Bit_iterator"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 16, i32 8, i1 false)
  %79 = bitcast %"struct.std::_Bit_const_iterator"* %37 to { i64*, i32 }*
  %80 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %79, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %79, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = bitcast %"struct.std::_Bit_const_iterator"* %39 to { i64*, i32 }*
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %84, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %84, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = bitcast %"struct.std::_Bit_iterator"* %41 to { i64*, i32 }*
  %90 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %89, i32 0, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %89, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %81, i32 %83, i64* %86, i32 %88, i64* %91, i32 %93)
  %95 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %95, i32 0, i32 0
  %97 = extractvalue { i64*, i32 } %94, 0
  store i64* %97, i64** %96, align 8
  %98 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %95, i32 0, i32 1
  %99 = extractvalue { i64*, i32 } %94, 1
  store i32 %99, i32* %98, align 8
  %100 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %101 = load { i64*, i32 }, { i64*, i32 }* %100, align 8
  store { i64*, i32 } %101, { i64*, i32 }* %7
  %102 = load i32, i32* @x.663
  %103 = load i32, i32* @y.664
  %104 = sub i32 0, 1
  %105 = add i32 %102, %104
  %106 = sub i32 %102, 1
  %107 = mul i32 %102, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %103, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 -211812298, i32 1698102133
  store i32 %127, i32* %20
  br label %200

; <label>:128:                                    ; preds = %21
  %129 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %129

; <label>:130:                                    ; preds = %21
  %131 = alloca %"struct.std::_Bit_iterator", align 8
  %132 = alloca %"struct.std::_Bit_const_iterator", align 8
  %133 = alloca %"struct.std::_Bit_const_iterator", align 8
  %134 = alloca %"struct.std::_Bit_iterator", align 8
  %135 = alloca %"struct.std::_Bit_const_iterator", align 8
  %136 = alloca %"struct.std::_Bit_const_iterator", align 8
  %137 = alloca %"struct.std::_Bit_const_iterator", align 8
  %138 = alloca %"struct.std::_Bit_const_iterator", align 8
  %139 = alloca %"struct.std::_Bit_iterator", align 8
  %140 = bitcast %"struct.std::_Bit_const_iterator"* %132 to { i64*, i32 }*
  %141 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %140, i32 0, i32 0
  store i64* %0, i64** %141, align 8
  %142 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %140, i32 0, i32 1
  store i32 %1, i32* %142, align 8
  %143 = bitcast %"struct.std::_Bit_const_iterator"* %133 to { i64*, i32 }*
  %144 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %143, i32 0, i32 0
  store i64* %2, i64** %144, align 8
  %145 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %143, i32 0, i32 1
  store i32 %3, i32* %145, align 8
  %146 = bitcast %"struct.std::_Bit_iterator"* %134 to { i64*, i32 }*
  %147 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %146, i32 0, i32 0
  store i64* %4, i64** %147, align 8
  %148 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %146, i32 0, i32 1
  store i32 %5, i32* %148, align 8
  %149 = bitcast %"struct.std::_Bit_const_iterator"* %136 to i8*
  %150 = bitcast %"struct.std::_Bit_const_iterator"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 16, i32 8, i1 false)
  %151 = bitcast %"struct.std::_Bit_const_iterator"* %136 to { i64*, i32 }*
  %152 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %151, i32 0, i32 0
  %153 = load i64*, i64** %152, align 8
  %154 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %151, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %153, i32 %155)
  %157 = bitcast %"struct.std::_Bit_const_iterator"* %135 to { i64*, i32 }*
  %158 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 0
  %159 = extractvalue { i64*, i32 } %156, 0
  store i64* %159, i64** %158, align 8
  %160 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 1
  %161 = extractvalue { i64*, i32 } %156, 1
  store i32 %161, i32* %160, align 8
  %162 = bitcast %"struct.std::_Bit_const_iterator"* %138 to i8*
  %163 = bitcast %"struct.std::_Bit_const_iterator"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 16, i32 8, i1 false)
  %164 = bitcast %"struct.std::_Bit_const_iterator"* %138 to { i64*, i32 }*
  %165 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = call { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %166, i32 %168)
  %170 = bitcast %"struct.std::_Bit_const_iterator"* %137 to { i64*, i32 }*
  %171 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %170, i32 0, i32 0
  %172 = extractvalue { i64*, i32 } %169, 0
  store i64* %172, i64** %171, align 8
  %173 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %170, i32 0, i32 1
  %174 = extractvalue { i64*, i32 } %169, 1
  store i32 %174, i32* %173, align 8
  %175 = bitcast %"struct.std::_Bit_iterator"* %139 to i8*
  %176 = bitcast %"struct.std::_Bit_iterator"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 16, i32 8, i1 false)
  %177 = bitcast %"struct.std::_Bit_const_iterator"* %135 to { i64*, i32 }*
  %178 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %177, i32 0, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %177, i32 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = bitcast %"struct.std::_Bit_const_iterator"* %137 to { i64*, i32 }*
  %183 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %182, i32 0, i32 0
  %184 = load i64*, i64** %183, align 8
  %185 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %182, i32 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = bitcast %"struct.std::_Bit_iterator"* %139 to { i64*, i32 }*
  %188 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %187, i32 0, i32 0
  %189 = load i64*, i64** %188, align 8
  %190 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %187, i32 0, i32 1
  %191 = load i32, i32* %190, align 8
  %192 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %179, i32 %181, i64* %184, i32 %186, i64* %189, i32 %191)
  %193 = bitcast %"struct.std::_Bit_iterator"* %131 to { i64*, i32 }*
  %194 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %193, i32 0, i32 0
  %195 = extractvalue { i64*, i32 } %192, 0
  store i64* %195, i64** %194, align 8
  %196 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %193, i32 0, i32 1
  %197 = extractvalue { i64*, i32 } %192, 1
  store i32 %197, i32* %196, align 8
  %198 = bitcast %"struct.std::_Bit_iterator"* %131 to { i64*, i32 }*
  %199 = load { i64*, i32 }, { i64*, i32 }* %198, align 8
  store i32 942751965, i32* %20
  br label %200

; <label>:200:                                    ; preds = %130, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i64*) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.669
  %8 = load i32, i32* @y.670
  %9 = add i32 %7, 1286161100
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1286161100
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1377954448, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1377954448, label %21
    i32 1846098624, label %41
    i32 1324914938, label %65
    i32 1024608332, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1846098624, i32 1024608332
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64*, align 8
  %44 = alloca i64*, align 8
  %45 = alloca i8, align 1
  store i64* %0, i64** %42, align 8
  store i64* %1, i64** %43, align 8
  store i64* %2, i64** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i64*, i64** %42, align 8
  %47 = load i64*, i64** %43, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %46, i64* %47, i64* %48)
  store i64* %49, i64** %4
  %50 = load i32, i32* @x.669
  %51 = load i32, i32* @y.670
  %52 = add i32 %50, -2120567587
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -2120567587
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1324914938, i32 1024608332
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i64*, i64** %4
  ret i64* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i64*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  %71 = alloca i8, align 1
  store i64* %0, i64** %68, align 8
  store i64* %1, i64** %69, align 8
  store i64* %2, i64** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i64*, i64** %68, align 8
  %73 = load i64*, i64** %69, align 8
  %74 = load i64*, i64** %70, align 8
  %75 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %72, i64* %73, i64* %74)
  store i32 1846098624, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  %10 = load i64*, i64** %7, align 8
  %11 = load i64*, i64** %6, align 8
  %12 = ptrtoint i64* %10 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = add i64 %12, -4417775181148256194
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -4417775181148256194
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 1236942846, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %149
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1236942846, label %24
    i32 1399942236, label %28
    i32 1116003520, label %44
    i32 431667430, label %77
    i32 -455141089, label %78
    i32 -1437602138, label %105
    i32 -844562454, label %135
    i32 439658013, label %137
    i32 1073727911, label %145
  ]

; <label>:23:                                     ; preds = %21
  br label %149

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 1399942236, i32 -455141089
  store i32 %27, i32* %20
  br label %149

; <label>:28:                                     ; preds = %21
  %29 = load i32, i32* @x.671
  %30 = load i32, i32* @y.672
  %31 = sub i32 %29, 1061496617
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1061496617
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1116003520, i32 439658013
  store i32 %43, i32* %20
  br label %149

; <label>:44:                                     ; preds = %21
  %45 = load i64*, i64** %8, align 8
  %46 = bitcast i64* %45 to i8*
  %47 = load i64*, i64** %6, align 8
  %48 = bitcast i64* %47 to i8*
  %49 = load i64, i64* %9, align 8
  %50 = mul i64 8, %49
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %46, i8* %48, i64 %50, i32 8, i1 false)
  %51 = load i32, i32* @x.671
  %52 = load i32, i32* @y.672
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 431667430, i32 439658013
  store i32 %76, i32* %20
  br label %149

; <label>:77:                                     ; preds = %21
  store i32 -455141089, i32* %20
  br label %149

; <label>:78:                                     ; preds = %21
  %79 = load i32, i32* @x.671
  %80 = load i32, i32* @y.672
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -1437602138, i32 1073727911
  store i32 %104, i32* %20
  br label %149

; <label>:105:                                    ; preds = %21
  %106 = load i64*, i64** %8, align 8
  %107 = load i64, i64* %9, align 8
  %108 = getelementptr inbounds i64, i64* %106, i64 %107
  store i64* %108, i64** %4
  %109 = load i32, i32* @x.671
  %110 = load i32, i32* @y.672
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -844562454, i32 1073727911
  store i32 %134, i32* %20
  br label %149

; <label>:135:                                    ; preds = %21
  %136 = load volatile i64*, i64** %4
  ret i64* %136

; <label>:137:                                    ; preds = %21
  %138 = load i64*, i64** %8, align 8
  %139 = bitcast i64* %138 to i8*
  %140 = load i64*, i64** %6, align 8
  %141 = bitcast i64* %140 to i8*
  %142 = load i64, i64* %9, align 8
  %143 = shl i64 8, %142
  %144 = mul i64 8, %142
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %139, i8* %141, i64 %144, i32 8, i1 false)
  store i32 1116003520, i32* %20
  br label %149

; <label>:145:                                    ; preds = %21
  %146 = load i64*, i64** %8, align 8
  %147 = load i64, i64* %9, align 8
  %148 = getelementptr inbounds i64, i64* %146, i64 %147
  store i32 -1437602138, i32* %20
  br label %149

; <label>:149:                                    ; preds = %145, %137, %105, %78, %77, %44, %28, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_const_iterator", align 8
  %12 = alloca %"struct.std::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::_Bit_const_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = bitcast %"struct.std::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %0, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %1, i32* %19, align 8
  %20 = bitcast %"struct.std::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %2, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %3, i32* %22, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 0
  store i64* %4, i64** %24, align 8
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 1
  store i32 %5, i32* %25, align 8
  %26 = bitcast %"struct.std::_Bit_const_iterator"* %12 to i8*
  %27 = bitcast %"struct.std::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %29 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %30, i32 %32)
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 0
  %36 = extractvalue { i64*, i32 } %33, 0
  store i64* %36, i64** %35, align 8
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 1
  %38 = extractvalue { i64*, i32 } %33, 1
  store i32 %38, i32* %37, align 8
  %39 = bitcast %"struct.std::_Bit_const_iterator"* %14 to i8*
  %40 = bitcast %"struct.std::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 16, i32 8, i1 false)
  %41 = bitcast %"struct.std::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = call { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %43, i32 %45)
  %47 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  %49 = extractvalue { i64*, i32 } %46, 0
  store i64* %49, i64** %48, align 8
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  %51 = extractvalue { i64*, i32 } %46, 1
  store i32 %51, i32* %50, align 8
  %52 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  %53 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %56, i32 %58)
  %60 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 0
  %62 = extractvalue { i64*, i32 } %59, 0
  store i64* %62, i64** %61, align 8
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 1
  %64 = extractvalue { i64*, i32 } %59, 1
  store i32 %64, i32* %63, align 8
  %65 = bitcast %"struct.std::_Bit_const_iterator"* %11 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %"struct.std::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %76 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64* %67, i32 %69, i64* %72, i32 %74, i64* %77, i32 %79)
  %81 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 0
  %83 = extractvalue { i64*, i32 } %80, 0
  store i64* %83, i64** %82, align 8
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 1
  %85 = extractvalue { i64*, i32 } %80, 1
  store i32 %85, i32* %84, align 8
  %86 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %87 = load { i64*, i32 }, { i64*, i32 }* %86, align 8
  ret { i64*, i32 } %87
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i64*, i32) #4 comdat {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.675
  %7 = load i32, i32* @y.676
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1912123259, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1912123259, label %19
    i32 -702703309, label %27
    i32 1734487958, label %64
    i32 1962611435, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -702703309, i32 1962611435
  store i32 %26, i32* %15
  br label %88

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Bit_const_iterator", align 8
  %29 = alloca %"struct.std::_Bit_const_iterator", align 8
  %30 = alloca %"struct.std::_Bit_const_iterator", align 8
  %31 = bitcast %"struct.std::_Bit_const_iterator"* %29 to { i64*, i32 }*
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 0
  store i64* %0, i64** %32, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %31, i32 0, i32 1
  store i32 %1, i32* %33, align 8
  %34 = bitcast %"struct.std::_Bit_const_iterator"* %30 to i8*
  %35 = bitcast %"struct.std::_Bit_const_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false)
  %36 = bitcast %"struct.std::_Bit_const_iterator"* %30 to { i64*, i32 }*
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %36, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %36, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = call { i64*, i32 } @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i64* %38, i32 %40)
  %42 = bitcast %"struct.std::_Bit_const_iterator"* %28 to { i64*, i32 }*
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 0
  %44 = extractvalue { i64*, i32 } %41, 0
  store i64* %44, i64** %43, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %42, i32 0, i32 1
  %46 = extractvalue { i64*, i32 } %41, 1
  store i32 %46, i32* %45, align 8
  %47 = bitcast %"struct.std::_Bit_const_iterator"* %28 to { i64*, i32 }*
  %48 = load { i64*, i32 }, { i64*, i32 }* %47, align 8
  store { i64*, i32 } %48, { i64*, i32 }* %3
  %49 = load i32, i32* @x.675
  %50 = load i32, i32* @y.676
  %51 = add i32 %49, -1623192731
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1623192731
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1734487958, i32 1962611435
  store i32 %63, i32* %15
  br label %88

; <label>:64:                                     ; preds = %16
  %65 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::_Bit_const_iterator", align 8
  %68 = alloca %"struct.std::_Bit_const_iterator", align 8
  %69 = alloca %"struct.std::_Bit_const_iterator", align 8
  %70 = bitcast %"struct.std::_Bit_const_iterator"* %68 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  store i64* %0, i64** %71, align 8
  %72 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  store i32 %1, i32* %72, align 8
  %73 = bitcast %"struct.std::_Bit_const_iterator"* %69 to i8*
  %74 = bitcast %"struct.std::_Bit_const_iterator"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 16, i32 8, i1 false)
  %75 = bitcast %"struct.std::_Bit_const_iterator"* %69 to { i64*, i32 }*
  %76 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = call { i64*, i32 } @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i64* %77, i32 %79)
  %81 = bitcast %"struct.std::_Bit_const_iterator"* %67 to { i64*, i32 }*
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 0
  %83 = extractvalue { i64*, i32 } %80, 0
  store i64* %83, i64** %82, align 8
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 1
  %85 = extractvalue { i64*, i32 } %80, 1
  store i32 %85, i32* %84, align 8
  %86 = bitcast %"struct.std::_Bit_const_iterator"* %67 to { i64*, i32 }*
  %87 = load { i64*, i32 }, { i64*, i32 }* %86, align 8
  store i32 -702703309, i32* %15
  br label %88

; <label>:88:                                     ; preds = %66, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca { i64*, i32 }
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.677
  %11 = load i32, i32* @y.678
  %12 = add i32 %10, 1803484188
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 1803484188
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 950937836, i32* %20
  br label %21

; <label>:21:                                     ; preds = %6, %143
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 950937836, label %24
    i32 667308913, label %32
    i32 -552106915, label %94
    i32 -1199027481, label %96
  ]

; <label>:23:                                     ; preds = %21
  br label %143

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 667308913, i32 -1199027481
  store i32 %31, i32* %20
  br label %143

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Bit_iterator", align 8
  %34 = alloca %"struct.std::_Bit_const_iterator", align 8
  %35 = alloca %"struct.std::_Bit_const_iterator", align 8
  %36 = alloca %"struct.std::_Bit_iterator", align 8
  %37 = alloca i8, align 1
  %38 = alloca %"struct.std::_Bit_const_iterator", align 8
  %39 = alloca %"struct.std::_Bit_const_iterator", align 8
  %40 = alloca %"struct.std::_Bit_iterator", align 8
  %41 = bitcast %"struct.std::_Bit_const_iterator"* %34 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  store i64* %0, i64** %42, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  store i32 %1, i32* %43, align 8
  %44 = bitcast %"struct.std::_Bit_const_iterator"* %35 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  store i64* %2, i64** %45, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  store i32 %3, i32* %46, align 8
  %47 = bitcast %"struct.std::_Bit_iterator"* %36 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  store i64* %4, i64** %48, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  store i32 %5, i32* %49, align 8
  store i8 0, i8* %37, align 1
  %50 = bitcast %"struct.std::_Bit_const_iterator"* %38 to i8*
  %51 = bitcast %"struct.std::_Bit_const_iterator"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 16, i32 8, i1 false)
  %52 = bitcast %"struct.std::_Bit_const_iterator"* %39 to i8*
  %53 = bitcast %"struct.std::_Bit_const_iterator"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.std::_Bit_iterator"* %40 to i8*
  %55 = bitcast %"struct.std::_Bit_iterator"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 16, i32 8, i1 false)
  %56 = bitcast %"struct.std::_Bit_const_iterator"* %38 to { i64*, i32 }*
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %56, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %56, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = bitcast %"struct.std::_Bit_const_iterator"* %39 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = bitcast %"struct.std::_Bit_iterator"* %40 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64* %58, i32 %60, i64* %63, i32 %65, i64* %68, i32 %70)
  %72 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 0
  %74 = extractvalue { i64*, i32 } %71, 0
  store i64* %74, i64** %73, align 8
  %75 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 1
  %76 = extractvalue { i64*, i32 } %71, 1
  store i32 %76, i32* %75, align 8
  %77 = bitcast %"struct.std::_Bit_iterator"* %33 to { i64*, i32 }*
  %78 = load { i64*, i32 }, { i64*, i32 }* %77, align 8
  store { i64*, i32 } %78, { i64*, i32 }* %7
  %79 = load i32, i32* @x.677
  %80 = load i32, i32* @y.678
  %81 = sub i32 %79, 1172693867
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 1172693867
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 -552106915, i32 -1199027481
  store i32 %93, i32* %20
  br label %143

; <label>:94:                                     ; preds = %21
  %95 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %95

; <label>:96:                                     ; preds = %21
  %97 = alloca %"struct.std::_Bit_iterator", align 8
  %98 = alloca %"struct.std::_Bit_const_iterator", align 8
  %99 = alloca %"struct.std::_Bit_const_iterator", align 8
  %100 = alloca %"struct.std::_Bit_iterator", align 8
  %101 = alloca i8, align 1
  %102 = alloca %"struct.std::_Bit_const_iterator", align 8
  %103 = alloca %"struct.std::_Bit_const_iterator", align 8
  %104 = alloca %"struct.std::_Bit_iterator", align 8
  %105 = bitcast %"struct.std::_Bit_const_iterator"* %98 to { i64*, i32 }*
  %106 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %105, i32 0, i32 0
  store i64* %0, i64** %106, align 8
  %107 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %105, i32 0, i32 1
  store i32 %1, i32* %107, align 8
  %108 = bitcast %"struct.std::_Bit_const_iterator"* %99 to { i64*, i32 }*
  %109 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %108, i32 0, i32 0
  store i64* %2, i64** %109, align 8
  %110 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %108, i32 0, i32 1
  store i32 %3, i32* %110, align 8
  %111 = bitcast %"struct.std::_Bit_iterator"* %100 to { i64*, i32 }*
  %112 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %111, i32 0, i32 0
  store i64* %4, i64** %112, align 8
  %113 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %111, i32 0, i32 1
  store i32 %5, i32* %113, align 8
  store i8 0, i8* %101, align 1
  %114 = bitcast %"struct.std::_Bit_const_iterator"* %102 to i8*
  %115 = bitcast %"struct.std::_Bit_const_iterator"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 16, i32 8, i1 false)
  %116 = bitcast %"struct.std::_Bit_const_iterator"* %103 to i8*
  %117 = bitcast %"struct.std::_Bit_const_iterator"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %116, i8* %117, i64 16, i32 8, i1 false)
  %118 = bitcast %"struct.std::_Bit_iterator"* %104 to i8*
  %119 = bitcast %"struct.std::_Bit_iterator"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 16, i32 8, i1 false)
  %120 = bitcast %"struct.std::_Bit_const_iterator"* %102 to { i64*, i32 }*
  %121 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %120, i32 0, i32 0
  %122 = load i64*, i64** %121, align 8
  %123 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %120, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = bitcast %"struct.std::_Bit_const_iterator"* %103 to { i64*, i32 }*
  %126 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %125, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %125, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = bitcast %"struct.std::_Bit_iterator"* %104 to { i64*, i32 }*
  %131 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %130, i32 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %130, i32 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64* %122, i32 %124, i64* %127, i32 %129, i64* %132, i32 %134)
  %136 = bitcast %"struct.std::_Bit_iterator"* %97 to { i64*, i32 }*
  %137 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %136, i32 0, i32 0
  %138 = extractvalue { i64*, i32 } %135, 0
  store i64* %138, i64** %137, align 8
  %139 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %136, i32 0, i32 1
  %140 = extractvalue { i64*, i32 } %135, 1
  store i32 %140, i32* %139, align 8
  %141 = bitcast %"struct.std::_Bit_iterator"* %97 to { i64*, i32 }*
  %142 = load { i64*, i32 }, { i64*, i32 }* %141, align 8
  store i32 667308913, i32* %20
  br label %143

; <label>:143:                                    ; preds = %96, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64*, i32) #0 comdat {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.679
  %7 = load i32, i32* @y.680
  %8 = add i32 %6, 1810243722
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1810243722
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 757161640, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %112
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 757161640, label %20
    i32 -153031312, label %40
    i32 -990348664, label %88
    i32 -1010225193, label %90
  ]

; <label>:19:                                     ; preds = %17
  br label %112

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -153031312, i32 -1010225193
  store i32 %39, i32* %16
  br label %112

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Bit_const_iterator", align 8
  %42 = alloca %"struct.std::_Bit_const_iterator", align 8
  %43 = alloca %"struct.std::_Bit_const_iterator", align 8
  %44 = bitcast %"struct.std::_Bit_const_iterator"* %42 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  store i64* %0, i64** %45, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  store i32 %1, i32* %46, align 8
  %47 = bitcast %"struct.std::_Bit_const_iterator"* %43 to i8*
  %48 = bitcast %"struct.std::_Bit_const_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false)
  %49 = bitcast %"struct.std::_Bit_const_iterator"* %43 to { i64*, i32 }*
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %49, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %49, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = call { i64*, i32 } @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i64* %51, i32 %53)
  %55 = bitcast %"struct.std::_Bit_const_iterator"* %41 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  %57 = extractvalue { i64*, i32 } %54, 0
  store i64* %57, i64** %56, align 8
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  %59 = extractvalue { i64*, i32 } %54, 1
  store i32 %59, i32* %58, align 8
  %60 = bitcast %"struct.std::_Bit_const_iterator"* %41 to { i64*, i32 }*
  %61 = load { i64*, i32 }, { i64*, i32 }* %60, align 8
  store { i64*, i32 } %61, { i64*, i32 }* %3
  %62 = load i32, i32* @x.679
  %63 = load i32, i32* @y.680
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -990348664, i32 -1010225193
  store i32 %87, i32* %16
  br label %112

; <label>:88:                                     ; preds = %17
  %89 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %89

; <label>:90:                                     ; preds = %17
  %91 = alloca %"struct.std::_Bit_const_iterator", align 8
  %92 = alloca %"struct.std::_Bit_const_iterator", align 8
  %93 = alloca %"struct.std::_Bit_const_iterator", align 8
  %94 = bitcast %"struct.std::_Bit_const_iterator"* %92 to { i64*, i32 }*
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 0
  store i64* %0, i64** %95, align 8
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 1
  store i32 %1, i32* %96, align 8
  %97 = bitcast %"struct.std::_Bit_const_iterator"* %93 to i8*
  %98 = bitcast %"struct.std::_Bit_const_iterator"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 16, i32 8, i1 false)
  %99 = bitcast %"struct.std::_Bit_const_iterator"* %93 to { i64*, i32 }*
  %100 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %99, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %99, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = call { i64*, i32 } @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i64* %101, i32 %103)
  %105 = bitcast %"struct.std::_Bit_const_iterator"* %91 to { i64*, i32 }*
  %106 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %105, i32 0, i32 0
  %107 = extractvalue { i64*, i32 } %104, 0
  store i64* %107, i64** %106, align 8
  %108 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %105, i32 0, i32 1
  %109 = extractvalue { i64*, i32 } %104, 1
  store i32 %109, i32* %108, align 8
  %110 = bitcast %"struct.std::_Bit_const_iterator"* %91 to { i64*, i32 }*
  %111 = load { i64*, i32 }, { i64*, i32 }* %110, align 8
  store i32 -153031312, i32* %16
  br label %112

; <label>:112:                                    ; preds = %90, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca %"struct.std::_Bit_reference"*
  %8 = alloca i64*
  %9 = alloca %"struct.std::_Bit_iterator"*
  %10 = alloca %"struct.std::_Bit_const_iterator"*
  %11 = alloca %"struct.std::_Bit_iterator"*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.681
  %15 = load i32, i32* @y.682
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %13
  %22 = icmp slt i32 %15, 10
  store i1 %22, i1* %12
  %23 = alloca i32
  store i32 993781535, i32* %23
  br label %24

; <label>:24:                                     ; preds = %6, %200
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 993781535, label %27
    i32 824058215, label %47
    i32 -634651661, label %85
    i32 -516152615, label %86
    i32 -1030365034, label %91
    i32 -1245202342, label %108
    i32 1232436958, label %123
    i32 1072992307, label %145
    i32 825920443, label %146
    i32 1069616615, label %154
    i32 -694063596, label %173
  ]

; <label>:26:                                     ; preds = %24
  br label %200

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %13
  %29 = load volatile i1, i1* %12
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 824058215, i32 1069616615
  store i32 %46, i32* %23
  br label %200

; <label>:47:                                     ; preds = %24
  %48 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %48, %"struct.std::_Bit_iterator"** %11
  %49 = alloca %"struct.std::_Bit_const_iterator", align 8
  store %"struct.std::_Bit_const_iterator"* %49, %"struct.std::_Bit_const_iterator"** %10
  %50 = alloca %"struct.std::_Bit_const_iterator", align 8
  %51 = alloca %"struct.std::_Bit_iterator", align 8
  store %"struct.std::_Bit_iterator"* %51, %"struct.std::_Bit_iterator"** %9
  %52 = alloca i64, align 8
  store i64* %52, i64** %8
  %53 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_reference"* %53, %"struct.std::_Bit_reference"** %7
  %54 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %10
  %55 = bitcast %"struct.std::_Bit_const_iterator"* %54 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  store i64* %0, i64** %56, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  store i32 %1, i32* %57, align 8
  %58 = bitcast %"struct.std::_Bit_const_iterator"* %50 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  store i64* %2, i64** %59, align 8
  %60 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  store i32 %3, i32* %60, align 8
  %61 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %62 = bitcast %"struct.std::_Bit_iterator"* %61 to { i64*, i32 }*
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %62, i32 0, i32 0
  store i64* %4, i64** %63, align 8
  %64 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %62, i32 0, i32 1
  store i32 %5, i32* %64, align 8
  %65 = bitcast %"struct.std::_Bit_const_iterator"* %50 to %"struct.std::_Bit_iterator_base"*
  %66 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %10
  %67 = bitcast %"struct.std::_Bit_const_iterator"* %66 to %"struct.std::_Bit_iterator_base"*
  %68 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %65, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %67)
  %69 = load volatile i64*, i64** %8
  store i64 %68, i64* %69, align 8
  %70 = load i32, i32* @x.681
  %71 = load i32, i32* @y.682
  %72 = sub i32 %70, 1498586111
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 1498586111
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -634651661, i32 1069616615
  store i32 %84, i32* %23
  br label %200

; <label>:85:                                     ; preds = %24
  store i32 -516152615, i32* %23
  br label %200

; <label>:86:                                     ; preds = %24
  %87 = load volatile i64*, i64** %8
  %88 = load i64, i64* %87, align 8
  %89 = icmp sgt i64 %88, 0
  %90 = select i1 %89, i32 -1030365034, i32 825920443
  store i32 %90, i32* %23
  br label %200

; <label>:91:                                     ; preds = %24
  %92 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %10
  %93 = call zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"* %92)
  %94 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %95 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %94)
  %96 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %7
  %97 = bitcast %"struct.std::_Bit_reference"* %96 to { i64*, i64 }*
  %98 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %97, i32 0, i32 0
  %99 = extractvalue { i64*, i64 } %95, 0
  store i64* %99, i64** %98, align 8
  %100 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %97, i32 0, i32 1
  %101 = extractvalue { i64*, i64 } %95, 1
  store i64 %101, i64* %100, align 8
  %102 = load volatile %"struct.std::_Bit_reference"*, %"struct.std::_Bit_reference"** %7
  %103 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSEb(%"struct.std::_Bit_reference"* %102, i1 zeroext %93) #3
  %104 = load volatile %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %10
  %105 = call dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"* %104)
  %106 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %107 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %106)
  store i32 -1245202342, i32* %23
  br label %200

; <label>:108:                                    ; preds = %24
  %109 = load i32, i32* @x.681
  %110 = load i32, i32* @y.682
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 1232436958, i32 -694063596
  store i32 %122, i32* %23
  br label %200

; <label>:123:                                    ; preds = %24
  %124 = load volatile i64*, i64** %8
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 0, -1
  %127 = sub i64 %125, %126
  %128 = add nsw i64 %125, -1
  %129 = load volatile i64*, i64** %8
  store i64 %127, i64* %129, align 8
  %130 = load i32, i32* @x.681
  %131 = load i32, i32* @y.682
  %132 = add i32 %130, -1954520698
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, -1954520698
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  %144 = select i1 %142, i32 1072992307, i32 -694063596
  store i32 %144, i32* %23
  br label %200

; <label>:145:                                    ; preds = %24
  store i32 -516152615, i32* %23
  br label %200

; <label>:146:                                    ; preds = %24
  %147 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %148 = bitcast %"struct.std::_Bit_iterator"* %147 to i8*
  %149 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %9
  %150 = bitcast %"struct.std::_Bit_iterator"* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %150, i64 16, i32 8, i1 false)
  %151 = load volatile %"struct.std::_Bit_iterator"*, %"struct.std::_Bit_iterator"** %11
  %152 = bitcast %"struct.std::_Bit_iterator"* %151 to { i64*, i32 }*
  %153 = load { i64*, i32 }, { i64*, i32 }* %152, align 8
  ret { i64*, i32 } %153

; <label>:154:                                    ; preds = %24
  %155 = alloca %"struct.std::_Bit_iterator", align 8
  %156 = alloca %"struct.std::_Bit_const_iterator", align 8
  %157 = alloca %"struct.std::_Bit_const_iterator", align 8
  %158 = alloca %"struct.std::_Bit_iterator", align 8
  %159 = alloca i64, align 8
  %160 = alloca %"struct.std::_Bit_reference", align 8
  %161 = bitcast %"struct.std::_Bit_const_iterator"* %156 to { i64*, i32 }*
  %162 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %161, i32 0, i32 0
  store i64* %0, i64** %162, align 8
  %163 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %161, i32 0, i32 1
  store i32 %1, i32* %163, align 8
  %164 = bitcast %"struct.std::_Bit_const_iterator"* %157 to { i64*, i32 }*
  %165 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 0
  store i64* %2, i64** %165, align 8
  %166 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %164, i32 0, i32 1
  store i32 %3, i32* %166, align 8
  %167 = bitcast %"struct.std::_Bit_iterator"* %158 to { i64*, i32 }*
  %168 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %167, i32 0, i32 0
  store i64* %4, i64** %168, align 8
  %169 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %167, i32 0, i32 1
  store i32 %5, i32* %169, align 8
  %170 = bitcast %"struct.std::_Bit_const_iterator"* %157 to %"struct.std::_Bit_iterator_base"*
  %171 = bitcast %"struct.std::_Bit_const_iterator"* %156 to %"struct.std::_Bit_iterator_base"*
  %172 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %170, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %171)
  store i64 %172, i64* %159, align 8
  store i32 824058215, i32* %23
  br label %200

; <label>:173:                                    ; preds = %24
  %174 = load volatile i64*, i64** %8
  %175 = load i64, i64* %174, align 8
  %176 = add i64 %175, 5488930350502617589
  %177 = sub i64 %176, -1
  %178 = sub i64 %177, 5488930350502617589
  %179 = sub i64 %175, -1
  %180 = mul i64 %178, -1
  %181 = sub i64 %175, -1072454277821159247
  %182 = sub i64 %181, -1
  %183 = add i64 %182, -1072454277821159247
  %184 = sub i64 %175, -1
  %185 = mul i64 %183, -1
  %186 = sub i64 0, -2612441284130447011
  %187 = sub i64 %186, %175
  %188 = add i64 %187, -2612441284130447011
  %189 = sub i64 0, %175
  %190 = sub i64 0, %188
  %191 = sub i64 0, -1
  %192 = add i64 %190, %191
  %193 = sub i64 0, %192
  %194 = add i64 %188, -1
  %195 = shl i64 %175, -1
  %196 = sub i64 0, -1
  %197 = sub i64 %175, %196
  %198 = add nsw i64 %175, -1
  %199 = load volatile i64*, i64** %8
  store i64 %197, i64* %199, align 8
  store i32 1232436958, i32* %23
  br label %200

; <label>:200:                                    ; preds = %173, %154, %145, %123, %108, %91, %86, %85, %47, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt19_Bit_const_iteratordeEv(%"struct.std::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  %3 = alloca %"struct.std::_Bit_reference", align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %2, align 8
  %4 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %2, align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %4 to %"struct.std::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::_Bit_iterator_base", %"struct.std::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt14_Bit_referenceC2EPmm(%"struct.std::_Bit_reference"* %3, i64* %7, i64 %12)
  %13 = call zeroext i1 @_ZNKSt14_Bit_referencecvbEv(%"struct.std::_Bit_reference"* %3) #3
  ret i1 %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Bit_const_iterator"* @_ZNSt19_Bit_const_iteratorppEv(%"struct.std::_Bit_const_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Bit_const_iterator"*, align 8
  store %"struct.std::_Bit_const_iterator"* %0, %"struct.std::_Bit_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Bit_const_iterator"*, %"struct.std::_Bit_const_iterator"** %2, align 8
  %4 = bitcast %"struct.std::_Bit_const_iterator"* %3 to %"struct.std::_Bit_iterator_base"*
  call void @_ZNSt18_Bit_iterator_base10_M_bump_upEv(%"struct.std::_Bit_iterator_base"* %4)
  ret %"struct.std::_Bit_const_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i64*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::_Bit_const_iterator", align 8
  %5 = bitcast %"struct.std::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %6 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 0
  store i64* %0, i64** %6, align 8
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = bitcast %"struct.std::_Bit_const_iterator"* %3 to i8*
  %9 = bitcast %"struct.std::_Bit_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::_Bit_iterator", align 8
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca %"struct.std::_Bit_iterator", align 8
  %13 = alloca %"struct.std::_Bit_iterator", align 8
  %14 = alloca %"struct.std::_Bit_iterator", align 8
  %15 = alloca %"struct.std::_Bit_iterator", align 8
  %16 = alloca %"struct.std::_Bit_iterator", align 8
  %17 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %0, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %1, i32* %19, align 8
  %20 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %2, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %3, i32* %22, align 8
  %23 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 0
  store i64* %4, i64** %24, align 8
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 1
  store i32 %5, i32* %25, align 8
  %26 = bitcast %"struct.std::_Bit_iterator"* %12 to i8*
  %27 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::_Bit_iterator"* %12 to { i64*, i32 }*
  %29 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %28, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %30, i32 %32)
  %34 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %35 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 0
  %36 = extractvalue { i64*, i32 } %33, 0
  store i64* %36, i64** %35, align 8
  %37 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %34, i32 0, i32 1
  %38 = extractvalue { i64*, i32 } %33, 1
  store i32 %38, i32* %37, align 8
  %39 = bitcast %"struct.std::_Bit_iterator"* %14 to i8*
  %40 = bitcast %"struct.std::_Bit_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 16, i32 8, i1 false)
  %41 = bitcast %"struct.std::_Bit_iterator"* %14 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %43, i32 %45)
  %47 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  %49 = extractvalue { i64*, i32 } %46, 0
  store i64* %49, i64** %48, align 8
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  %51 = extractvalue { i64*, i32 } %46, 1
  store i32 %51, i32* %50, align 8
  %52 = bitcast %"struct.std::_Bit_iterator"* %16 to i8*
  %53 = bitcast %"struct.std::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.std::_Bit_iterator"* %16 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = call { i64*, i32 } @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %56, i32 %58)
  %60 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 0
  %62 = extractvalue { i64*, i32 } %59, 0
  store i64* %62, i64** %61, align 8
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 1
  %64 = extractvalue { i64*, i32 } %59, 1
  store i32 %64, i32* %63, align 8
  %65 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %66 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %65, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %"struct.std::_Bit_iterator"* %13 to { i64*, i32 }*
  %71 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %70, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = bitcast %"struct.std::_Bit_iterator"* %15 to { i64*, i32 }*
  %76 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %75, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64* %67, i32 %69, i64* %72, i32 %74, i64* %77, i32 %79)
  %81 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 0
  %83 = extractvalue { i64*, i32 } %80, 0
  store i64* %83, i64** %82, align 8
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %81, i32 0, i32 1
  %85 = extractvalue { i64*, i32 } %80, 1
  store i32 %85, i32* %84, align 8
  %86 = bitcast %"struct.std::_Bit_iterator"* %7 to { i64*, i32 }*
  %87 = load { i64*, i32 }, { i64*, i32 }* %86, align 8
  ret { i64*, i32 } %87
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca { i64*, i32 }
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.691
  %11 = load i32, i32* @y.692
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 1820211802, i32* %19
  br label %20

; <label>:20:                                     ; preds = %6, %166
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1820211802, label %23
    i32 466972761, label %43
    i32 -297712334, label %117
    i32 1227100606, label %119
  ]

; <label>:22:                                     ; preds = %20
  br label %166

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 466972761, i32 1227100606
  store i32 %42, i32* %19
  br label %166

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Bit_iterator", align 8
  %45 = alloca %"struct.std::_Bit_iterator", align 8
  %46 = alloca %"struct.std::_Bit_iterator", align 8
  %47 = alloca %"struct.std::_Bit_iterator", align 8
  %48 = alloca i8, align 1
  %49 = alloca %"struct.std::_Bit_iterator", align 8
  %50 = alloca %"struct.std::_Bit_iterator", align 8
  %51 = alloca %"struct.std::_Bit_iterator", align 8
  %52 = bitcast %"struct.std::_Bit_iterator"* %45 to { i64*, i32 }*
  %53 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %52, i32 0, i32 0
  store i64* %0, i64** %53, align 8
  %54 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %52, i32 0, i32 1
  store i32 %1, i32* %54, align 8
  %55 = bitcast %"struct.std::_Bit_iterator"* %46 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  store i64* %2, i64** %56, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  store i32 %3, i32* %57, align 8
  %58 = bitcast %"struct.std::_Bit_iterator"* %47 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  store i64* %4, i64** %59, align 8
  %60 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  store i32 %5, i32* %60, align 8
  store i8 0, i8* %48, align 1
  %61 = bitcast %"struct.std::_Bit_iterator"* %49 to i8*
  %62 = bitcast %"struct.std::_Bit_iterator"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 16, i32 8, i1 false)
  %63 = bitcast %"struct.std::_Bit_iterator"* %50 to i8*
  %64 = bitcast %"struct.std::_Bit_iterator"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 16, i32 8, i1 false)
  %65 = bitcast %"struct.std::_Bit_iterator"* %51 to i8*
  %66 = bitcast %"struct.std::_Bit_iterator"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 16, i32 8, i1 false)
  %67 = bitcast %"struct.std::_Bit_iterator"* %49 to { i64*, i32 }*
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %67, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %67, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = bitcast %"struct.std::_Bit_iterator"* %50 to { i64*, i32 }*
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = bitcast %"struct.std::_Bit_iterator"* %51 to { i64*, i32 }*
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %77, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %77, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64* %69, i32 %71, i64* %74, i32 %76, i64* %79, i32 %81)
  %83 = bitcast %"struct.std::_Bit_iterator"* %44 to { i64*, i32 }*
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 0
  %85 = extractvalue { i64*, i32 } %82, 0
  store i64* %85, i64** %84, align 8
  %86 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 1
  %87 = extractvalue { i64*, i32 } %82, 1
  store i32 %87, i32* %86, align 8
  %88 = bitcast %"struct.std::_Bit_iterator"* %44 to { i64*, i32 }*
  %89 = load { i64*, i32 }, { i64*, i32 }* %88, align 8
  store { i64*, i32 } %89, { i64*, i32 }* %7
  %90 = load i32, i32* @x.691
  %91 = load i32, i32* @y.692
  %92 = sub i32 %90, 1560921876
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 1560921876
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 -297712334, i32 1227100606
  store i32 %116, i32* %19
  br label %166

; <label>:117:                                    ; preds = %20
  %118 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %118

; <label>:119:                                    ; preds = %20
  %120 = alloca %"struct.std::_Bit_iterator", align 8
  %121 = alloca %"struct.std::_Bit_iterator", align 8
  %122 = alloca %"struct.std::_Bit_iterator", align 8
  %123 = alloca %"struct.std::_Bit_iterator", align 8
  %124 = alloca i8, align 1
  %125 = alloca %"struct.std::_Bit_iterator", align 8
  %126 = alloca %"struct.std::_Bit_iterator", align 8
  %127 = alloca %"struct.std::_Bit_iterator", align 8
  %128 = bitcast %"struct.std::_Bit_iterator"* %121 to { i64*, i32 }*
  %129 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %128, i32 0, i32 0
  store i64* %0, i64** %129, align 8
  %130 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %128, i32 0, i32 1
  store i32 %1, i32* %130, align 8
  %131 = bitcast %"struct.std::_Bit_iterator"* %122 to { i64*, i32 }*
  %132 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %131, i32 0, i32 0
  store i64* %2, i64** %132, align 8
  %133 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %131, i32 0, i32 1
  store i32 %3, i32* %133, align 8
  %134 = bitcast %"struct.std::_Bit_iterator"* %123 to { i64*, i32 }*
  %135 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %134, i32 0, i32 0
  store i64* %4, i64** %135, align 8
  %136 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %134, i32 0, i32 1
  store i32 %5, i32* %136, align 8
  store i8 0, i8* %124, align 1
  %137 = bitcast %"struct.std::_Bit_iterator"* %125 to i8*
  %138 = bitcast %"struct.std::_Bit_iterator"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 16, i32 8, i1 false)
  %139 = bitcast %"struct.std::_Bit_iterator"* %126 to i8*
  %140 = bitcast %"struct.std::_Bit_iterator"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %139, i8* %140, i64 16, i32 8, i1 false)
  %141 = bitcast %"struct.std::_Bit_iterator"* %127 to i8*
  %142 = bitcast %"struct.std::_Bit_iterator"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 16, i32 8, i1 false)
  %143 = bitcast %"struct.std::_Bit_iterator"* %125 to { i64*, i32 }*
  %144 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %143, i32 0, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %143, i32 0, i32 1
  %147 = load i32, i32* %146, align 8
  %148 = bitcast %"struct.std::_Bit_iterator"* %126 to { i64*, i32 }*
  %149 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %148, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %148, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = bitcast %"struct.std::_Bit_iterator"* %127 to { i64*, i32 }*
  %154 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %153, i32 0, i32 0
  %155 = load i64*, i64** %154, align 8
  %156 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %153, i32 0, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64* %145, i32 %147, i64* %150, i32 %152, i64* %155, i32 %157)
  %159 = bitcast %"struct.std::_Bit_iterator"* %120 to { i64*, i32 }*
  %160 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %159, i32 0, i32 0
  %161 = extractvalue { i64*, i32 } %158, 0
  store i64* %161, i64** %160, align 8
  %162 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %159, i32 0, i32 1
  %163 = extractvalue { i64*, i32 } %158, 1
  store i32 %163, i32* %162, align 8
  %164 = bitcast %"struct.std::_Bit_iterator"* %120 to { i64*, i32 }*
  %165 = load { i64*, i32 }, { i64*, i32 }* %164, align 8
  store i32 466972761, i32* %19
  br label %166

; <label>:166:                                    ; preds = %119, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca { i64*, i32 }
  %8 = alloca %"struct.std::_Bit_iterator", align 8
  %9 = alloca %"struct.std::_Bit_iterator", align 8
  %10 = alloca %"struct.std::_Bit_iterator", align 8
  %11 = alloca %"struct.std::_Bit_iterator", align 8
  %12 = alloca i64, align 8
  %13 = alloca %"struct.std::_Bit_reference", align 8
  %14 = alloca %"struct.std::_Bit_reference", align 8
  %15 = bitcast %"struct.std::_Bit_iterator"* %9 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %0, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %1, i32* %17, align 8
  %18 = bitcast %"struct.std::_Bit_iterator"* %10 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %3, i32* %20, align 8
  %21 = bitcast %"struct.std::_Bit_iterator"* %11 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %4, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %5, i32* %23, align 8
  %24 = bitcast %"struct.std::_Bit_iterator"* %10 to %"struct.std::_Bit_iterator_base"*
  %25 = bitcast %"struct.std::_Bit_iterator"* %9 to %"struct.std::_Bit_iterator_base"*
  %26 = call i64 @_ZStmiRKSt18_Bit_iterator_baseS1_(%"struct.std::_Bit_iterator_base"* dereferenceable(16) %24, %"struct.std::_Bit_iterator_base"* dereferenceable(16) %25)
  store i64 %26, i64* %12, align 8
  %27 = alloca i32
  store i32 2102854113, i32* %27
  br label %28

; <label>:28:                                     ; preds = %6, %145
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 2102854113, label %31
    i32 -608791512, label %35
    i32 1727223321, label %51
    i32 -30834631, label %81
    i32 -1594896339, label %82
    i32 1679987695, label %87
    i32 1232212132, label %102
    i32 -1427681291, label %122
    i32 90641014, label %124
    i32 -1563560226, label %140
  ]

; <label>:30:                                     ; preds = %28
  br label %145

; <label>:31:                                     ; preds = %28
  %32 = load i64, i64* %12, align 8
  %33 = icmp sgt i64 %32, 0
  %34 = select i1 %33, i32 -608791512, i32 1679987695
  store i32 %34, i32* %27
  br label %145

; <label>:35:                                     ; preds = %28
  %36 = load i32, i32* @x.693
  %37 = load i32, i32* @y.694
  %38 = sub i32 %36, 2114762645
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 2114762645
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 1727223321, i32 90641014
  store i32 %50, i32* %27
  br label %145

; <label>:51:                                     ; preds = %28
  %52 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %9)
  %53 = bitcast %"struct.std::_Bit_reference"* %13 to { i64*, i64 }*
  %54 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %53, i32 0, i32 0
  %55 = extractvalue { i64*, i64 } %52, 0
  store i64* %55, i64** %54, align 8
  %56 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %53, i32 0, i32 1
  %57 = extractvalue { i64*, i64 } %52, 1
  store i64 %57, i64* %56, align 8
  %58 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %11)
  %59 = bitcast %"struct.std::_Bit_reference"* %14 to { i64*, i64 }*
  %60 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %59, i32 0, i32 0
  %61 = extractvalue { i64*, i64 } %58, 0
  store i64* %61, i64** %60, align 8
  %62 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %59, i32 0, i32 1
  %63 = extractvalue { i64*, i64 } %58, 1
  store i64 %63, i64* %62, align 8
  %64 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"* %14, %"struct.std::_Bit_reference"* dereferenceable(16) %13) #3
  %65 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %9)
  %66 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %11)
  %67 = load i32, i32* @x.693
  %68 = load i32, i32* @y.694
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 -30834631, i32 90641014
  store i32 %80, i32* %27
  br label %145

; <label>:81:                                     ; preds = %28
  store i32 -1594896339, i32* %27
  br label %145

; <label>:82:                                     ; preds = %28
  %83 = load i64, i64* %12, align 8
  %84 = sub i64 0, -1
  %85 = sub i64 %83, %84
  %86 = add nsw i64 %83, -1
  store i64 %85, i64* %12, align 8
  store i32 2102854113, i32* %27
  br label %145

; <label>:87:                                     ; preds = %28
  %88 = load i32, i32* @x.693
  %89 = load i32, i32* @y.694
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 1232212132, i32 -1563560226
  store i32 %101, i32* %27
  br label %145

; <label>:102:                                    ; preds = %28
  %103 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  %104 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 16, i32 8, i1 false)
  %105 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %106 = load { i64*, i32 }, { i64*, i32 }* %105, align 8
  store { i64*, i32 } %106, { i64*, i32 }* %7
  %107 = load i32, i32* @x.693
  %108 = load i32, i32* @y.694
  %109 = add i32 %107, 441595922
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 441595922
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 -1427681291, i32 -1563560226
  store i32 %121, i32* %27
  br label %145

; <label>:122:                                    ; preds = %28
  %123 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %123

; <label>:124:                                    ; preds = %28
  %125 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %9)
  %126 = bitcast %"struct.std::_Bit_reference"* %13 to { i64*, i64 }*
  %127 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %126, i32 0, i32 0
  %128 = extractvalue { i64*, i64 } %125, 0
  store i64* %128, i64** %127, align 8
  %129 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %126, i32 0, i32 1
  %130 = extractvalue { i64*, i64 } %125, 1
  store i64 %130, i64* %129, align 8
  %131 = call { i64*, i64 } @_ZNKSt13_Bit_iteratordeEv(%"struct.std::_Bit_iterator"* %11)
  %132 = bitcast %"struct.std::_Bit_reference"* %14 to { i64*, i64 }*
  %133 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %132, i32 0, i32 0
  %134 = extractvalue { i64*, i64 } %131, 0
  store i64* %134, i64** %133, align 8
  %135 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %132, i32 0, i32 1
  %136 = extractvalue { i64*, i64 } %131, 1
  store i64 %136, i64* %135, align 8
  %137 = call dereferenceable(16) %"struct.std::_Bit_reference"* @_ZNSt14_Bit_referenceaSERKS_(%"struct.std::_Bit_reference"* %14, %"struct.std::_Bit_reference"* dereferenceable(16) %13) #3
  %138 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %9)
  %139 = call dereferenceable(16) %"struct.std::_Bit_iterator"* @_ZNSt13_Bit_iteratorppEv(%"struct.std::_Bit_iterator"* %11)
  store i32 1727223321, i32* %27
  br label %145

; <label>:140:                                    ; preds = %28
  %141 = bitcast %"struct.std::_Bit_iterator"* %8 to i8*
  %142 = bitcast %"struct.std::_Bit_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 16, i32 8, i1 false)
  %143 = bitcast %"struct.std::_Bit_iterator"* %8 to { i64*, i32 }*
  %144 = load { i64*, i32 }, { i64*, i32 }* %143, align 8
  store i32 1232212132, i32* %27
  br label %145

; <label>:145:                                    ; preds = %140, %124, %102, %87, %82, %81, %51, %35, %31, %30
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EEC2Ev(%"class.std::_Rb_tree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.697
  %3 = load i32, i32* @y.698
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %116

; <label>:27:                                     ; preds = %1, %116
  %28 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %28, align 8
  %31 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %28, align 8
  %32 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %31 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEC2Ev(%"class.std::allocator.15"* %32) #3
  %33 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %31, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %31, i32 0, i32 1
  %35 = bitcast %"struct.std::_Rb_tree_node_base"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 32, i32 8, i1 false)
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %31, i32 0, i32 2
  store i64 0, i64* %36, align 8
  %37 = load i32, i32* @x.697
  %38 = load i32, i32* @y.698
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %116

; <label>:50:                                     ; preds = %27
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %31)
          to label %51 unwind label %52

; <label>:51:                                     ; preds = %50
  ret void

; <label>:52:                                     ; preds = %50
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %29, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %30, align 4
  %56 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %31 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEED2Ev(%"class.std::allocator.15"* %56) #3
  br label %57

; <label>:57:                                     ; preds = %52
  %58 = load i32, i32* @x.697
  %59 = load i32, i32* @y.698
  %60 = sub i32 %58, -531761131
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -531761131
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %126

; <label>:84:                                     ; preds = %57, %126
  %85 = load i8*, i8** %29, align 8
  %86 = load i32, i32* %30, align 4
  %87 = insertvalue { i8*, i32 } undef, i8* %85, 0
  %88 = insertvalue { i8*, i32 } %87, i32 %86, 1
  %89 = load i32, i32* @x.697
  %90 = load i32, i32* @y.698
  %91 = sub i32 %89, 1958176748
  %92 = sub i32 %91, 1
  %93 = add i32 %92, 1958176748
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %126

; <label>:115:                                    ; preds = %84
  resume { i8*, i32 } %88

; <label>:116:                                    ; preds = %27, %1
  %117 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  %118 = alloca i8*
  %119 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %117, align 8
  %120 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %117, align 8
  %121 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %120 to %"class.std::allocator.15"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEC2Ev(%"class.std::allocator.15"* %121) #3
  %122 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %120, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %120, i32 0, i32 1
  %124 = bitcast %"struct.std::_Rb_tree_node_base"* %123 to i8*
  call void @llvm.memset.p0i8.i64(i8* %124, i8 0, i64 32, i32 8, i1 false)
  %125 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %120, i32 0, i32 2
  store i64 0, i64* %125, align 8
  br label %27

; <label>:126:                                    ; preds = %84, %57
  %127 = load i8*, i8** %29, align 8
  %128 = load i32, i32* %30, align 4
  %129 = insertvalue { i8*, i32 } undef, i8* %127, 0
  %130 = insertvalue { i8*, i32 } %129, i32 %128, 1
  br label %84
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.701
  %5 = load i32, i32* @y.702
  %6 = sub i32 %4, -1576885292
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1576885292
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -260381385, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -260381385, label %18
    i32 2021784817, label %38
    i32 -1216377507, label %66
    i32 -1892784232, label %67
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2021784817, i32 -1892784232
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %39, align 8
  %40 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %41, i32 0, i32 0
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %44, align 8
  %45 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %46, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %49, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %48, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %51 = load i32, i32* @x.701
  %52 = load i32, i32* @y.702
  %53 = add i32 %51, 1492144328
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 1492144328
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1216377507, i32 -1892784232
  store i32 %65, i32* %14
  br label %80

; <label>:66:                                     ; preds = %15
  ret void

; <label>:67:                                     ; preds = %15
  %68 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %68, align 8
  %69 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %69, i32 0, i32 1
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %70, i32 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %69, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %72, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %69, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %69, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %75, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %74, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %69, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %69, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %78, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %77, %"struct.std::_Rb_tree_node_base"** %79, align 8
  store i32 2021784817, i32* %14
  br label %80

; <label>:80:                                     ; preds = %67, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EEC2Ev(%"class.std::_Rb_tree.19"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %2, align 8
  %3 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %5 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5 to %"class.std::allocator.20"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEEC2Ev(%"class.std::allocator.20"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %9 = bitcast %"struct.std::_Rb_tree_node_base"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 32, i32 8, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 2
  store i64 0, i64* %10, align 8
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5)
          to label %11 unwind label %53

; <label>:11:                                     ; preds = %1
  %12 = load i32, i32* @x.707
  %13 = load i32, i32* @y.708
  %14 = sub i32 %12, -726257269
  %15 = sub i32 %14, 1
  %16 = add i32 %15, -726257269
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %116

; <label>:38:                                     ; preds = %11, %116
  %39 = load i32, i32* @x.707
  %40 = load i32, i32* @y.708
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %116

; <label>:52:                                     ; preds = %38
  ret void

; <label>:53:                                     ; preds = %1
  %54 = load i32, i32* @x.707
  %55 = load i32, i32* @y.708
  %56 = add i32 %54, -290429495
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -290429495
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %117

; <label>:80:                                     ; preds = %53, %117
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %3, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %4, align 4
  %84 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5 to %"class.std::allocator.20"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEED2Ev(%"class.std::allocator.20"* %84) #3
  %85 = load i32, i32* @x.707
  %86 = load i32, i32* @y.708
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %117

; <label>:110:                                    ; preds = %80
  br label %111

; <label>:111:                                    ; preds = %110
  %112 = load i8*, i8** %3, align 8
  %113 = load i32, i32* %4, align 4
  %114 = insertvalue { i8*, i32 } undef, i8* %112, 0
  %115 = insertvalue { i8*, i32 } %114, i32 %113, 1
  resume { i8*, i32 } %115

; <label>:116:                                    ; preds = %38, %11
  br label %38

; <label>:117:                                    ; preds = %80, %53
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %3, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %4, align 4
  %121 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5 to %"class.std::allocator.20"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEED2Ev(%"class.std::allocator.20"* %121) #3
  br label %80
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEEC2Ev(%"class.std::allocator.20"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEEC2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE5clearEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %2, align 8
  %3 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %2, align 8
  %4 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_beginEv(%"class.std::_Rb_tree.19"* %3) #3
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %3, %"struct.std::_Rb_tree_node.44"* %4)
          to label %5 unwind label %50

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %6)
          to label %7 unwind label %50

; <label>:7:                                      ; preds = %5
  %8 = load i32, i32* @x.715
  %9 = load i32, i32* @y.716
  %10 = add i32 %8, 534308822
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 534308822
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = and i1 %16, %17
  %19 = xor i1 %16, %17
  %20 = or i1 %18, %19
  %21 = or i1 %16, %17
  br i1 %20, label %22, label %95

; <label>:22:                                     ; preds = %7, %95
  %23 = load i32, i32* @x.715
  %24 = load i32, i32* @y.716
  %25 = add i32 %23, 1032463805
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, 1032463805
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %95

; <label>:49:                                     ; preds = %22
  ret void

; <label>:50:                                     ; preds = %5, %1
  %51 = load i32, i32* @x.715
  %52 = load i32, i32* @y.716
  %53 = sub i32 %51, 1749365414
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 1749365414
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %96

; <label>:77:                                     ; preds = %50, %96
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  call void @__clang_call_terminate(i8* %79) #12
  %80 = load i32, i32* @x.715
  %81 = load i32, i32* @y.716
  %82 = sub i32 %80, -8824007
  %83 = sub i32 %82, 1
  %84 = add i32 %83, -8824007
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %96

; <label>:94:                                     ; preds = %77
  unreachable

; <label>:95:                                     ; preds = %22, %7
  br label %22

; <label>:96:                                     ; preds = %77, %50
  %97 = landingpad { i8*, i32 }
          catch i8* null
  %98 = extractvalue { i8*, i32 } %97, 0
  call void @__clang_call_terminate(i8* %98) #12
  br label %77
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE13_Rb_tree_implIS4_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %7, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %10, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 2
  store i64 0, i64* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE5clearEv(%"class.std::_Rb_tree"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_beginEv(%"class.std::_Rb_tree"* %3) #3
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %3, %"struct.std::_Rb_tree_node"* %4)
          to label %5 unwind label %62

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.719
  %7 = load i32, i32* @y.720
  %8 = add i32 %6, 1730859226
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1730859226
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %65

; <label>:32:                                     ; preds = %5, %65
  %33 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %34 = load i32, i32* @x.719
  %35 = load i32, i32* @y.720
  %36 = sub i32 %34, -859709532
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -859709532
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %65

; <label>:60:                                     ; preds = %32
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %33)
          to label %61 unwind label %62

; <label>:61:                                     ; preds = %60
  ret void

; <label>:62:                                     ; preds = %60, %1
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #12
  unreachable

; <label>:65:                                     ; preds = %32, %5
  %66 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE13_Rb_tree_implIS4_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %7, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %10, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 2
  store i64 0, i64* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator.8"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.9"* %6, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2ERKS3_RKS4_(%"class.std::_Rb_tree.24"*, %"struct.std::less"* dereferenceable(1), %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Rb_tree.24"*, align 8
  %5 = alloca %"struct.std::less"*, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  %7 = alloca %"class.std::allocator.25", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %4, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %10 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4, align 8
  %11 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %10, i32 0, i32 0
  %12 = load %"struct.std::less"*, %"struct.std::less"** %5, align 8
  %13 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %6, align 8
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2IxEERKSaIT_E(%"class.std::allocator.25"* %7, %"class.std::allocator.8"* dereferenceable(1) %13) #3
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_OSaISt13_Rb_tree_nodeIxEE(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %11, %"struct.std::less"* dereferenceable(1) %12, %"class.std::allocator.25"* dereferenceable(1) %7)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.25"* %7) #3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %8, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %9, align 4
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.25"* %7) #3
  br label %19

; <label>:19:                                     ; preds = %15
  %20 = load i32, i32* @x.725
  %21 = load i32, i32* @y.726
  %22 = sub i32 %20, -582064093
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -582064093
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %66

; <label>:46:                                     ; preds = %19, %66
  %47 = load i8*, i8** %8, align 8
  %48 = load i32, i32* %9, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  %51 = load i32, i32* @x.725
  %52 = load i32, i32* @y.726
  %53 = sub i32 %51, -286625620
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -286625620
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %66

; <label>:65:                                     ; preds = %46
  resume { i8*, i32 } %50

; <label>:66:                                     ; preds = %46, %19
  %67 = load i8*, i8** %8, align 8
  %68 = load i32, i32* %9, align 4
  %69 = insertvalue { i8*, i32 } undef, i8* %67, 0
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1
  br label %46
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIPKxEEvT_S9_(%"class.std::_Rb_tree.24"*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::_Rb_tree.24"*
  %6 = alloca %"class.std::_Rb_tree.24"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %12 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  %13 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %6, align 8
  store %"class.std::_Rb_tree.24"* %13, %"class.std::_Rb_tree.24"** %5
  %14 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %5
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %9, %"class.std::_Rb_tree.24"* dereferenceable(48) %14)
  %15 = alloca i32
  store i32 1760925111, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %109
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1760925111, label %19
    i32 52815486, label %35
    i32 -98996458, label %54
    i32 1338773665, label %57
    i32 1258836243, label %67
    i32 514176821, label %83
    i32 -679805028, label %100
    i32 -1506510298, label %101
    i32 -316543509, label %102
    i32 1287722418, label %106
  ]

; <label>:18:                                     ; preds = %16
  br label %109

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* @x.727
  %21 = load i32, i32* @y.728
  %22 = add i32 %20, 1615808831
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1615808831
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 52815486, i32 -316543509
  store i32 %34, i32* %15
  br label %109

; <label>:35:                                     ; preds = %16
  %36 = load i64*, i64** %7, align 8
  %37 = load i64*, i64** %8, align 8
  %38 = icmp ne i64* %36, %37
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.727
  %40 = load i32, i32* @y.728
  %41 = sub i32 %39, 1075233182
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1075233182
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -98996458, i32 -316543509
  store i32 %53, i32* %15
  br label %109

; <label>:54:                                     ; preds = %16
  %55 = load volatile i1, i1* %4
  %56 = select i1 %55, i32 1338773665, i32 -1506510298
  store i32 %56, i32* %15
  br label %109

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %5
  %59 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree.24"* %58) #3
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %59, %"struct.std::_Rb_tree_node_base"** %60, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %10, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %11) #3
  %61 = load i64*, i64** %7, align 8
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  %63 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %5
  %65 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_insert_unique_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxESt23_Rb_tree_const_iteratorIxEOT_RT0_(%"class.std::_Rb_tree.24"* %64, %"struct.std::_Rb_tree_node_base"* %63, i64* dereferenceable(8) %61, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8) %9)
  %66 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %65, %"struct.std::_Rb_tree_node_base"** %66, align 8
  store i32 1258836243, i32* %15
  br label %109

; <label>:67:                                     ; preds = %16
  %68 = load i32, i32* @x.727
  %69 = load i32, i32* @y.728
  %70 = sub i32 %68, -427925849
  %71 = sub i32 %70, 1
  %72 = add i32 %71, -427925849
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 514176821, i32 1287722418
  store i32 %82, i32* %15
  br label %109

; <label>:83:                                     ; preds = %16
  %84 = load i64*, i64** %7, align 8
  %85 = getelementptr inbounds i64, i64* %84, i32 1
  store i64* %85, i64** %7, align 8
  %86 = load i32, i32* @x.727
  %87 = load i32, i32* @y.728
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 -679805028, i32 1287722418
  store i32 %99, i32* %15
  br label %109

; <label>:100:                                    ; preds = %16
  store i32 1760925111, i32* %15
  br label %109

; <label>:101:                                    ; preds = %16
  ret void

; <label>:102:                                    ; preds = %16
  %103 = load i64*, i64** %7, align 8
  %104 = load i64*, i64** %8, align 8
  %105 = icmp ne i64* %103, %104
  store i32 52815486, i32* %15
  br label %109

; <label>:106:                                    ; preds = %16
  %107 = load i64*, i64** %7, align 8
  %108 = getelementptr inbounds i64, i64* %107, i32 1
  store i64* %108, i64** %7, align 8
  store i32 514176821, i32* %15
  br label %109

; <label>:109:                                    ; preds = %106, %102, %100, %83, %67, %57, %54, %35, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt16initializer_listIxE5beginEv(%"class.std::initializer_list"*) #4 comdat align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt16initializer_listIxE3endEv(%"class.std::initializer_list"*) #4 comdat align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = call i64* @_ZNKSt16initializer_listIxE5beginEv(%"class.std::initializer_list"* %3) #3
  %5 = call i64 @_ZNKSt16initializer_listIxE4sizeEv(%"class.std::initializer_list"* %3) #3
  %6 = getelementptr inbounds i64, i64* %4, i64 %5
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.733
  %6 = load i32, i32* @y.734
  %7 = sub i32 %5, -1290575673
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1290575673
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1390257485, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1390257485, label %19
    i32 1428113869, label %27
    i32 -1903147505, label %58
    i32 -86345272, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1428113869, i32 -86345272
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %1, %"class.__gnu_cxx::new_allocator.9"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %28, align 8
  %31 = load i32, i32* @x.733
  %32 = load i32, i32* @y.734
  %33 = sub i32 %31, -142599234
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -142599234
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1903147505, i32 -86345272
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %61 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %60, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %1, %"class.__gnu_cxx::new_allocator.9"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %60, align 8
  store i32 1428113869, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEEC2IxEERKSaIT_E(%"class.std::allocator.25"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_OSaISt13_Rb_tree_nodeIxEE(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::less"* dereferenceable(1), %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.737
  %5 = load i32, i32* @y.738
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %165

; <label>:29:                                     ; preds = %3, %165
  %30 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %31 = alloca %"struct.std::less"*, align 8
  %32 = alloca %"class.std::allocator.25"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %30, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %31, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %32, align 8
  %35 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %30, align 8
  %36 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %35 to %"class.std::allocator.25"*
  %37 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %32, align 8
  %38 = call dereferenceable(1) %"class.std::allocator.25"* @_ZSt4moveIRSaISt13_Rb_tree_nodeIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.25"* dereferenceable(1) %37) #3
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2ERKS1_(%"class.std::allocator.25"* %36, %"class.std::allocator.25"* dereferenceable(1) %38) #3
  %39 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %35, i32 0, i32 0
  %40 = load %"struct.std::less"*, %"struct.std::less"** %31, align 8
  %41 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %35, i32 0, i32 1
  %42 = bitcast %"struct.std::_Rb_tree_node_base"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* %42, i8 0, i64 32, i32 8, i1 false)
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %35, i32 0, i32 2
  store i64 0, i64* %43, align 8
  %44 = load i32, i32* @x.737
  %45 = load i32, i32* @y.738
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %165

; <label>:57:                                     ; preds = %29
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %35)
          to label %58 unwind label %59

; <label>:58:                                     ; preds = %57
  ret void

; <label>:59:                                     ; preds = %57
  %60 = load i32, i32* @x.737
  %61 = load i32, i32* @y.738
  %62 = sub i32 %60, 638784855
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 638784855
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %180

; <label>:86:                                     ; preds = %59, %180
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %33, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %34, align 4
  %90 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %35 to %"class.std::allocator.25"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.25"* %90) #3
  %91 = load i32, i32* @x.737
  %92 = load i32, i32* @y.738
  %93 = sub i32 %91, 436196478
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 436196478
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %180

; <label>:105:                                    ; preds = %86
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i32, i32* @x.737
  %108 = load i32, i32* @y.738
  %109 = add i32 %107, 496023997
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 496023997
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  br i1 %131, label %133, label %185

; <label>:133:                                    ; preds = %106, %185
  %134 = load i8*, i8** %33, align 8
  %135 = load i32, i32* %34, align 4
  %136 = insertvalue { i8*, i32 } undef, i8* %134, 0
  %137 = insertvalue { i8*, i32 } %136, i32 %135, 1
  %138 = load i32, i32* @x.737
  %139 = load i32, i32* @y.738
  %140 = add i32 %138, 1680225481
  %141 = sub i32 %140, 1
  %142 = sub i32 %141, 1680225481
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  br i1 %162, label %164, label %185

; <label>:164:                                    ; preds = %133
  resume { i8*, i32 } %137

; <label>:165:                                    ; preds = %29, %3
  %166 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %167 = alloca %"struct.std::less"*, align 8
  %168 = alloca %"class.std::allocator.25"*, align 8
  %169 = alloca i8*
  %170 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %166, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %167, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %168, align 8
  %171 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %166, align 8
  %172 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %171 to %"class.std::allocator.25"*
  %173 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %168, align 8
  %174 = call dereferenceable(1) %"class.std::allocator.25"* @_ZSt4moveIRSaISt13_Rb_tree_nodeIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.25"* dereferenceable(1) %173) #3
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2ERKS1_(%"class.std::allocator.25"* %172, %"class.std::allocator.25"* dereferenceable(1) %174) #3
  %175 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %171, i32 0, i32 0
  %176 = load %"struct.std::less"*, %"struct.std::less"** %167, align 8
  %177 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %171, i32 0, i32 1
  %178 = bitcast %"struct.std::_Rb_tree_node_base"* %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* %178, i8 0, i64 32, i32 8, i1 false)
  %179 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %171, i32 0, i32 2
  store i64 0, i64* %179, align 8
  br label %29

; <label>:180:                                    ; preds = %86, %59
  %181 = landingpad { i8*, i32 }
          cleanup
  %182 = extractvalue { i8*, i32 } %181, 0
  store i8* %182, i8** %33, align 8
  %183 = extractvalue { i8*, i32 } %181, 1
  store i32 %183, i32* %34, align 4
  %184 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %35 to %"class.std::allocator.25"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.25"* %184) #3
  br label %86

; <label>:185:                                    ; preds = %133, %106
  %186 = load i8*, i8** %33, align 8
  %187 = load i32, i32* %34, align 4
  %188 = insertvalue { i8*, i32 } undef, i8* %186, 0
  %189 = insertvalue { i8*, i32 } %188, i32 %187, 1
  br label %133
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.25"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  %3 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  %4 = bitcast %"class.std::allocator.25"* %3 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.26"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.741
  %5 = load i32, i32* @y.742
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -837722067, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %46
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -837722067, label %17
    i32 2093147236, label %25
    i32 1258055460, label %42
    i32 1571253880, label %43
  ]

; <label>:16:                                     ; preds = %14
  br label %46

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 2093147236, i32 1571253880
  store i32 %24, i32* %13
  br label %46

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %26, align 8
  %28 = load i32, i32* @x.741
  %29 = load i32, i32* @y.742
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1258055460, i32 1571253880
  store i32 %41, i32* %13
  br label %46

; <label>:42:                                     ; preds = %14
  ret void

; <label>:43:                                     ; preds = %14
  %44 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %44, align 8
  %45 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %44, align 8
  store i32 2093147236, i32* %13
  br label %46

; <label>:46:                                     ; preds = %43, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.25"* @_ZSt4moveIRSaISt13_Rb_tree_nodeIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.25"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.25"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.743
  %6 = load i32, i32* @y.744
  %7 = sub i32 %5, 732909674
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 732909674
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1503018603, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1503018603, label %19
    i32 -338794849, label %27
    i32 -1592292592, label %56
    i32 1900675649, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -338794849, i32 1900675649
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %28, align 8
  %29 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %28, align 8
  store %"class.std::allocator.25"* %29, %"class.std::allocator.25"** %2
  %30 = load i32, i32* @x.743
  %31 = load i32, i32* @y.744
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1592292592, i32 1900675649
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"class.std::allocator.25"*, %"class.std::allocator.25"** %2
  ret %"class.std::allocator.25"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %59, align 8
  %60 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %59, align 8
  store i32 -338794849, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEEC2ERKS1_(%"class.std::allocator.25"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.26"* %6, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.749
  %6 = load i32, i32* @y.750
  %7 = sub i32 %5, 358793104
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 358793104
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1231303806, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1231303806, label %19
    i32 -1772586156, label %27
    i32 -264142061, label %46
    i32 1194599155, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1772586156, i32 1194599155
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %1, %"class.__gnu_cxx::new_allocator.26"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %28, align 8
  %31 = load i32, i32* @x.749
  %32 = load i32, i32* @y.750
  %33 = sub i32 %31, -362291589
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -362291589
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -264142061, i32 1194599155
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %49 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %48, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %1, %"class.__gnu_cxx::new_allocator.26"** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %48, align 8
  store i32 -1772586156, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"class.std::_Rb_tree.24"* dereferenceable(48)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.751
  %6 = load i32, i32* @y.752
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1712097589, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1712097589, label %18
    i32 -506918351, label %26
    i32 -1372397821, label %58
    i32 -321380042, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -506918351, i32 -321380042
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %28 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %27, align 8
  store %"class.std::_Rb_tree.24"* %1, %"class.std::_Rb_tree.24"** %28, align 8
  %29 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %29, i32 0, i32 0
  %31 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %28, align 8
  store %"class.std::_Rb_tree.24"* %31, %"class.std::_Rb_tree.24"** %30, align 8
  %32 = load i32, i32* @x.751
  %33 = load i32, i32* @y.752
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1372397821, i32 -321380042
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %61 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %60, align 8
  store %"class.std::_Rb_tree.24"* %1, %"class.std::_Rb_tree.24"** %61, align 8
  %62 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %60, align 8
  %63 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %62, i32 0, i32 0
  %64 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %61, align 8
  store %"class.std::_Rb_tree.24"* %64, %"class.std::_Rb_tree.24"** %63, align 8
  store i32 -506918351, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_insert_unique_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxESt23_Rb_tree_const_iteratorIxEOT_RT0_(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8), %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree.24"*
  %7 = alloca %"struct.std::pair.55"*
  %8 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"**
  %9 = alloca i64**
  %10 = alloca %"struct.std::_Rb_tree_iterator"*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.753
  %14 = load i32, i32* @y.754
  %15 = add i32 %13, -921663535
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, -921663535
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %12
  %22 = icmp slt i32 %14, 10
  store i1 %22, i1* %11
  %23 = alloca i32
  store i32 941539155, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %149
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 941539155, label %27
    i32 -1891712815, label %35
    i32 408758211, label %93
    i32 -1544209345, label %96
    i32 2021130704, label %112
    i32 -123430324, label %119
    i32 647741767, label %123
  ]

; <label>:26:                                     ; preds = %24
  br label %149

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -1891712815, i32 647741767
  store i32 %34, i32* %23
  br label %149

; <label>:35:                                     ; preds = %24
  %36 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %36, %"struct.std::_Rb_tree_iterator"** %10
  %37 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %38 = alloca %"class.std::_Rb_tree.24"*, align 8
  %39 = alloca i64*, align 8
  store i64** %39, i64*** %9
  %40 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %40, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*** %8
  %41 = alloca %"struct.std::pair.55", align 8
  store %"struct.std::pair.55"* %41, %"struct.std::pair.55"** %7
  %42 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %43 = alloca %"struct.std::_Identity", align 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %37, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %44, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %38, align 8
  %45 = load volatile i64**, i64*** %9
  store i64* %2, i64** %45, align 8
  %46 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"**, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*** %8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %3, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %46, align 8
  %47 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %38, align 8
  store %"class.std::_Rb_tree.24"* %47, %"class.std::_Rb_tree.24"** %6
  %48 = bitcast %"struct.std::_Rb_tree_const_iterator"* %42 to i8*
  %49 = bitcast %"struct.std::_Rb_tree_const_iterator"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = load volatile i64**, i64*** %9
  %51 = load i64*, i64** %50, align 8
  %52 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %43, i64* dereferenceable(8) %51)
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %42, i32 0, i32 0
  %54 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %53, align 8
  %55 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %6
  %56 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIxERKx(%"class.std::_Rb_tree.24"* %55, %"struct.std::_Rb_tree_node_base"* %54, i64* dereferenceable(8) %52)
  %57 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %7
  %58 = bitcast %"struct.std::pair.55"* %57 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %59 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %58, i32 0, i32 0
  %60 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %56, 0
  store %"struct.std::_Rb_tree_node_base"* %60, %"struct.std::_Rb_tree_node_base"** %59, align 8
  %61 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %58, i32 0, i32 1
  %62 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %56, 1
  store %"struct.std::_Rb_tree_node_base"* %62, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %63 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %7
  %64 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %63, i32 0, i32 1
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %66 = icmp ne %"struct.std::_Rb_tree_node_base"* %65, null
  store i1 %66, i1* %5
  %67 = load i32, i32* @x.753
  %68 = load i32, i32* @y.754
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 408758211, i32 647741767
  store i32 %92, i32* %23
  br label %149

; <label>:93:                                     ; preds = %24
  %94 = load volatile i1, i1* %5
  %95 = select i1 %94, i32 -1544209345, i32 2021130704
  store i32 %95, i32* %23
  br label %149

; <label>:96:                                     ; preds = %24
  %97 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %7
  %98 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %97, i32 0, i32 0
  %99 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %98, align 8
  %100 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %7
  %101 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %100, i32 0, i32 1
  %102 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %101, align 8
  %103 = load volatile i64**, i64*** %9
  %104 = load i64*, i64** %103, align 8
  %105 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %104) #3
  %106 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"**, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*** %8
  %107 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %106, align 8
  %108 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %6
  %109 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree.24"* %108, %"struct.std::_Rb_tree_node_base"* %99, %"struct.std::_Rb_tree_node_base"* %102, i64* dereferenceable(8) %105, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8) %107)
  %110 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %10
  %111 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %110, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %109, %"struct.std::_Rb_tree_node_base"** %111, align 8
  store i32 -123430324, i32* %23
  br label %149

; <label>:112:                                    ; preds = %24
  %113 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %7
  %114 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %113, i32 0, i32 0
  %115 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %114, align 8
  %116 = bitcast %"struct.std::_Rb_tree_node_base"* %115 to %"struct.std::_Rb_tree_node.50"*
  %117 = bitcast %"struct.std::_Rb_tree_node.50"* %116 to %"struct.std::_Rb_tree_node_base"*
  %118 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %10
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %118, %"struct.std::_Rb_tree_node_base"* %117) #3
  store i32 -123430324, i32* %23
  br label %149

; <label>:119:                                    ; preds = %24
  %120 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %10
  %121 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %120, i32 0, i32 0
  %122 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %121, align 8
  ret %"struct.std::_Rb_tree_node_base"* %122

; <label>:123:                                    ; preds = %24
  %124 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %125 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %126 = alloca %"class.std::_Rb_tree.24"*, align 8
  %127 = alloca i64*, align 8
  %128 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %129 = alloca %"struct.std::pair.55", align 8
  %130 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %131 = alloca %"struct.std::_Identity", align 1
  %132 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %125, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %132, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %126, align 8
  store i64* %2, i64** %127, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %3, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %128, align 8
  %133 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %126, align 8
  %134 = bitcast %"struct.std::_Rb_tree_const_iterator"* %130 to i8*
  %135 = bitcast %"struct.std::_Rb_tree_const_iterator"* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %135, i64 8, i32 8, i1 false)
  %136 = load i64*, i64** %127, align 8
  %137 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %131, i64* dereferenceable(8) %136)
  %138 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %130, i32 0, i32 0
  %139 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %138, align 8
  %140 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIxERKx(%"class.std::_Rb_tree.24"* %133, %"struct.std::_Rb_tree_node_base"* %139, i64* dereferenceable(8) %137)
  %141 = bitcast %"struct.std::pair.55"* %129 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %142 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %141, i32 0, i32 0
  %143 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %140, 0
  store %"struct.std::_Rb_tree_node_base"* %143, %"struct.std::_Rb_tree_node_base"** %142, align 8
  %144 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %141, i32 0, i32 1
  %145 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %140, 1
  store %"struct.std::_Rb_tree_node_base"* %145, %"struct.std::_Rb_tree_node_base"** %144, align 8
  %146 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %129, i32 0, i32 1
  %147 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %146, align 8
  %148 = icmp ne %"struct.std::_Rb_tree_node_base"* %147, null
  store i32 -1891712815, i32* %23
  br label %149

; <label>:149:                                    ; preds = %123, %112, %96, %93, %35, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %3, align 8
  %4 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIxERKx(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"struct.std::_Rb_tree_node_base"*
  %8 = alloca %"struct.std::_Rb_tree_node_base"*
  %9 = alloca %"class.std::_Rb_tree.24"*
  %10 = alloca %"struct.std::pair.55", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"class.std::_Rb_tree.24"*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %16 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %17 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %18 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %19 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %20 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %21 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %22, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %12, align 8
  store i64* %2, i64** %13, align 8
  %23 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %12, align 8
  store %"class.std::_Rb_tree.24"* %23, %"class.std::_Rb_tree.24"** %9
  %24 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %11) #3
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %27 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %26, align 8
  store %"struct.std::_Rb_tree_node_base"* %27, %"struct.std::_Rb_tree_node_base"** %8
  %28 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %29 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree.24"* %28) #3
  %30 = bitcast %"struct.std::_Rb_tree_node.50"* %29 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %30, %"struct.std::_Rb_tree_node_base"** %7
  %31 = alloca i32
  store i32 1302560829, i32* %31
  br label %32

; <label>:32:                                     ; preds = %3, %324
  %33 = load i32, i32* %31
  switch i32 %33, label %34 [
    i32 1302560829, label %35
    i32 -1568652374, label %40
    i32 1150825252, label %45
    i32 639318032, label %56
    i32 -784527494, label %59
    i32 -863150, label %68
    i32 -609169951, label %78
    i32 470789895, label %88
    i32 -547373254, label %93
    i32 542156451, label %104
    i32 -1096057464, label %120
    i32 -983986524, label %152
    i32 987815085, label %155
    i32 1829388137, label %157
    i32 -359633246, label %160
    i32 -1245284982, label %169
    i32 1028180283, label %196
    i32 1875587667, label %220
    i32 -1775650854, label %223
    i32 -1036901211, label %233
    i32 -1060866552, label %236
    i32 -1647160360, label %247
    i32 -1908713108, label %263
    i32 669254341, label %283
    i32 -590784638, label %286
    i32 -383189572, label %288
    i32 1980052884, label %291
    i32 -1155926213, label %300
    i32 -561978061, label %302
    i32 -1103251476, label %305
    i32 -1811581766, label %310
    i32 -1857668105, label %319
  ]

; <label>:34:                                     ; preds = %32
  br label %324

; <label>:35:                                     ; preds = %32
  %36 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8
  %37 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7
  %38 = icmp eq %"struct.std::_Rb_tree_node_base"* %36, %37
  %39 = select i1 %38, i32 -1568652374, i32 -863150
  store i32 %39, i32* %31
  br label %324

; <label>:40:                                     ; preds = %32
  %41 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %42 = call i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree.24"* %41) #3
  %43 = icmp ugt i64 %42, 0
  %44 = select i1 %43, i32 1150825252, i32 -784527494
  store i32 %44, i32* %31
  br label %324

; <label>:45:                                     ; preds = %32
  %46 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %47 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %47, i32 0, i32 0
  %49 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %50 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_rightmostEv(%"class.std::_Rb_tree.24"* %49) #3
  %51 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %52 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %51)
  %53 = load i64*, i64** %13, align 8
  %54 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %48, i64* dereferenceable(8) %52, i64* dereferenceable(8) %53)
  %55 = select i1 %54, i32 639318032, i32 -784527494
  store i32 %55, i32* %31
  br label %324

; <label>:56:                                     ; preds = %32
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %57 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %58 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_rightmostEv(%"class.std::_Rb_tree.24"* %57) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %15, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %58)
  store i32 -561978061, i32* %31
  br label %324

; <label>:59:                                     ; preds = %32
  %60 = load i64*, i64** %13, align 8
  %61 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %62 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree.24"* %61, i64* dereferenceable(8) %60)
  %63 = bitcast %"struct.std::pair.55"* %10 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %64 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %63, i32 0, i32 0
  %65 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %62, 0
  store %"struct.std::_Rb_tree_node_base"* %65, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %66 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %63, i32 0, i32 1
  %67 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %62, 1
  store %"struct.std::_Rb_tree_node_base"* %67, %"struct.std::_Rb_tree_node_base"** %66, align 8
  store i32 -561978061, i32* %31
  br label %324

; <label>:68:                                     ; preds = %32
  %69 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %70 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %70, i32 0, i32 0
  %72 = load i64*, i64** %13, align 8
  %73 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %74 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %75 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %74)
  %76 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %71, i64* dereferenceable(8) %72, i64* dereferenceable(8) %75)
  %77 = select i1 %76, i32 -609169951, i32 -1245284982
  store i32 %77, i32* %31
  br label %324

; <label>:78:                                     ; preds = %32
  %79 = bitcast %"struct.std::_Rb_tree_iterator"* %16 to i8*
  %80 = bitcast %"struct.std::_Rb_tree_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 8, i1 false)
  %81 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %82 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %81, align 8
  %83 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %84 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_leftmostEv(%"class.std::_Rb_tree.24"* %83) #3
  %85 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %84, align 8
  %86 = icmp eq %"struct.std::_Rb_tree_node_base"* %82, %85
  %87 = select i1 %86, i32 470789895, i32 -547373254
  store i32 %87, i32* %31
  br label %324

; <label>:88:                                     ; preds = %32
  %89 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %90 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_leftmostEv(%"class.std::_Rb_tree.24"* %89) #3
  %91 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %92 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_leftmostEv(%"class.std::_Rb_tree.24"* %91) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %90, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %92)
  store i32 -561978061, i32* %31
  br label %324

; <label>:93:                                     ; preds = %32
  %94 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %95 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %95, i32 0, i32 0
  %97 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"* %16) #3
  %98 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %97, i32 0, i32 0
  %99 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %98, align 8
  %100 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %99)
  %101 = load i64*, i64** %13, align 8
  %102 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %96, i64* dereferenceable(8) %100, i64* dereferenceable(8) %101)
  %103 = select i1 %102, i32 542156451, i32 -359633246
  store i32 %103, i32* %31
  br label %324

; <label>:104:                                    ; preds = %32
  %105 = load i32, i32* @x.759
  %106 = load i32, i32* @y.760
  %107 = sub i32 %105, -141700400
  %108 = sub i32 %107, 1
  %109 = add i32 %108, -141700400
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 -1096057464, i32 -1103251476
  store i32 %119, i32* %31
  br label %324

; <label>:120:                                    ; preds = %32
  %121 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %122 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %121, align 8
  %123 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %122) #3
  %124 = icmp eq %"struct.std::_Rb_tree_node.50"* %123, null
  store i1 %124, i1* %6
  %125 = load i32, i32* @x.759
  %126 = load i32, i32* @y.760
  %127 = add i32 %125, -715734368
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -715734368
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  %151 = select i1 %149, i32 -983986524, i32 -1103251476
  store i32 %151, i32* %31
  br label %324

; <label>:152:                                    ; preds = %32
  %153 = load volatile i1, i1* %6
  %154 = select i1 %153, i32 987815085, i32 1829388137
  store i32 %154, i32* %31
  br label %324

; <label>:155:                                    ; preds = %32
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %156 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %17, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %156)
  store i32 -561978061, i32* %31
  br label %324

; <label>:157:                                    ; preds = %32
  %158 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %159 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %158, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %159)
  store i32 -561978061, i32* %31
  br label %324

; <label>:160:                                    ; preds = %32
  %161 = load i64*, i64** %13, align 8
  %162 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %163 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree.24"* %162, i64* dereferenceable(8) %161)
  %164 = bitcast %"struct.std::pair.55"* %10 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %165 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %164, i32 0, i32 0
  %166 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %163, 0
  store %"struct.std::_Rb_tree_node_base"* %166, %"struct.std::_Rb_tree_node_base"** %165, align 8
  %167 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %164, i32 0, i32 1
  %168 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %163, 1
  store %"struct.std::_Rb_tree_node_base"* %168, %"struct.std::_Rb_tree_node_base"** %167, align 8
  store i32 -561978061, i32* %31
  br label %324

; <label>:169:                                    ; preds = %32
  %170 = load i32, i32* @x.759
  %171 = load i32, i32* @y.760
  %172 = sub i32 0, 1
  %173 = add i32 %170, %172
  %174 = sub i32 %170, 1
  %175 = mul i32 %170, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %171, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 true, true
  %182 = and i1 %179, true
  %183 = and i1 %177, %181
  %184 = and i1 %180, true
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 true, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 1028180283, i32 -1811581766
  store i32 %195, i32* %31
  br label %324

; <label>:196:                                    ; preds = %32
  %197 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %198 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %197, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %198, i32 0, i32 0
  %200 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %201 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %200, align 8
  %202 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %201)
  %203 = load i64*, i64** %13, align 8
  %204 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %199, i64* dereferenceable(8) %202, i64* dereferenceable(8) %203)
  store i1 %204, i1* %5
  %205 = load i32, i32* @x.759
  %206 = load i32, i32* @y.760
  %207 = sub i32 %205, -259458119
  %208 = sub i32 %207, 1
  %209 = add i32 %208, -259458119
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  %219 = select i1 %217, i32 1875587667, i32 -1811581766
  store i32 %219, i32* %31
  br label %324

; <label>:220:                                    ; preds = %32
  %221 = load volatile i1, i1* %5
  %222 = select i1 %221, i32 -1775650854, i32 -1155926213
  store i32 %222, i32* %31
  br label %324

; <label>:223:                                    ; preds = %32
  %224 = bitcast %"struct.std::_Rb_tree_iterator"* %18 to i8*
  %225 = bitcast %"struct.std::_Rb_tree_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %224, i8* %225, i64 8, i32 8, i1 false)
  %226 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %227 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %226, align 8
  %228 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %229 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_rightmostEv(%"class.std::_Rb_tree.24"* %228) #3
  %230 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %229, align 8
  %231 = icmp eq %"struct.std::_Rb_tree_node_base"* %227, %230
  %232 = select i1 %231, i32 -1036901211, i32 -1060866552
  store i32 %232, i32* %31
  br label %324

; <label>:233:                                    ; preds = %32
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %234 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %235 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_rightmostEv(%"class.std::_Rb_tree.24"* %234) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %19, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %235)
  store i32 -561978061, i32* %31
  br label %324

; <label>:236:                                    ; preds = %32
  %237 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %238 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %237, i32 0, i32 0
  %239 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %238, i32 0, i32 0
  %240 = load i64*, i64** %13, align 8
  %241 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEppEv(%"struct.std::_Rb_tree_iterator"* %18) #3
  %242 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %241, i32 0, i32 0
  %243 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %242, align 8
  %244 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %243)
  %245 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %239, i64* dereferenceable(8) %240, i64* dereferenceable(8) %244)
  %246 = select i1 %245, i32 -1647160360, i32 1980052884
  store i32 %246, i32* %31
  br label %324

; <label>:247:                                    ; preds = %32
  %248 = load i32, i32* @x.759
  %249 = load i32, i32* @y.760
  %250 = add i32 %248, -1408821502
  %251 = sub i32 %250, 1
  %252 = sub i32 %251, -1408821502
  %253 = sub i32 %248, 1
  %254 = mul i32 %248, %252
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %249, 10
  %258 = and i1 %256, %257
  %259 = xor i1 %256, %257
  %260 = or i1 %258, %259
  %261 = or i1 %256, %257
  %262 = select i1 %260, i32 -1908713108, i32 -1857668105
  store i32 %262, i32* %31
  br label %324

; <label>:263:                                    ; preds = %32
  %264 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %265 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %264, align 8
  %266 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %265) #3
  %267 = icmp eq %"struct.std::_Rb_tree_node.50"* %266, null
  store i1 %267, i1* %4
  %268 = load i32, i32* @x.759
  %269 = load i32, i32* @y.760
  %270 = add i32 %268, -406322244
  %271 = sub i32 %270, 1
  %272 = sub i32 %271, -406322244
  %273 = sub i32 %268, 1
  %274 = mul i32 %268, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %269, 10
  %278 = and i1 %276, %277
  %279 = xor i1 %276, %277
  %280 = or i1 %278, %279
  %281 = or i1 %276, %277
  %282 = select i1 %280, i32 669254341, i32 -1857668105
  store i32 %282, i32* %31
  br label %324

; <label>:283:                                    ; preds = %32
  %284 = load volatile i1, i1* %4
  %285 = select i1 %284, i32 -590784638, i32 -383189572
  store i32 %285, i32* %31
  br label %324

; <label>:286:                                    ; preds = %32
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %20, align 8
  %287 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %20, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %287)
  store i32 -561978061, i32* %31
  br label %324

; <label>:288:                                    ; preds = %32
  %289 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %18, i32 0, i32 0
  %290 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %18, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %289, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %290)
  store i32 -561978061, i32* %31
  br label %324

; <label>:291:                                    ; preds = %32
  %292 = load i64*, i64** %13, align 8
  %293 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %294 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree.24"* %293, i64* dereferenceable(8) %292)
  %295 = bitcast %"struct.std::pair.55"* %10 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %296 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %295, i32 0, i32 0
  %297 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %294, 0
  store %"struct.std::_Rb_tree_node_base"* %297, %"struct.std::_Rb_tree_node_base"** %296, align 8
  %298 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %295, i32 0, i32 1
  %299 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %294, 1
  store %"struct.std::_Rb_tree_node_base"* %299, %"struct.std::_Rb_tree_node_base"** %298, align 8
  store i32 -561978061, i32* %31
  br label %324

; <label>:300:                                    ; preds = %32
  %301 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %21, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %301, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %21)
  store i32 -561978061, i32* %31
  br label %324

; <label>:302:                                    ; preds = %32
  %303 = bitcast %"struct.std::pair.55"* %10 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %304 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %303, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %304

; <label>:305:                                    ; preds = %32
  %306 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %307 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %306, align 8
  %308 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %307) #3
  %309 = icmp eq %"struct.std::_Rb_tree_node.50"* %308, null
  store i32 -1096057464, i32* %31
  br label %324

; <label>:310:                                    ; preds = %32
  %311 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9
  %312 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %311, i32 0, i32 0
  %313 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %312, i32 0, i32 0
  %314 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %315 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %314, align 8
  %316 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %315)
  %317 = load i64*, i64** %13, align 8
  %318 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %313, i64* dereferenceable(8) %316, i64* dereferenceable(8) %317)
  store i32 1028180283, i32* %31
  br label %324

; <label>:319:                                    ; preds = %32
  %320 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %321 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %320, align 8
  %322 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %321) #3
  %323 = icmp eq %"struct.std::_Rb_tree_node.50"* %322, null
  store i32 -1908713108, i32* %31
  br label %324

; <label>:324:                                    ; preds = %319, %310, %305, %300, %291, %288, %286, %283, %263, %247, %236, %233, %223, %220, %196, %169, %160, %157, %155, %152, %120, %104, %93, %88, %78, %68, %59, %56, %45, %40, %35, %34
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"*, i64* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Identity"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8), %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca %"struct.std::_Rb_tree_node_base"*
  %8 = alloca i1
  %9 = alloca %"struct.std::_Rb_tree_node_base"*
  %10 = alloca %"class.std::_Rb_tree.24"*
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %12 = alloca %"class.std::_Rb_tree.24"*, align 8
  %13 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %14 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %15 = alloca i64*, align 8
  %16 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %17 = alloca i8, align 1
  %18 = alloca %"struct.std::_Identity", align 1
  %19 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %12, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %14, align 8
  store i64* %3, i64** %15, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %16, align 8
  %20 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %12, align 8
  store %"class.std::_Rb_tree.24"* %20, %"class.std::_Rb_tree.24"** %10
  %21 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %21, %"struct.std::_Rb_tree_node_base"** %9
  %22 = alloca i32
  store i32 -47982044, i32* %22
  %23 = alloca i1
  br label %24

; <label>:24:                                     ; preds = %5, %194
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -47982044, label %27
    i32 1522974737, label %31
    i32 2079709569, label %38
    i32 1073093369, label %53
    i32 -1062496236, label %77
    i32 -929258026, label %79
    i32 561944343, label %95
    i32 -1120541025, label %148
    i32 -88465763, label %150
    i32 -1108376221, label %159
  ]

; <label>:26:                                     ; preds = %24
  br label %194

; <label>:27:                                     ; preds = %24
  %28 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9
  %29 = icmp ne %"struct.std::_Rb_tree_node_base"* %28, null
  %30 = select i1 %29, i32 -929258026, i32 1522974737
  store i32 %30, i32* %22
  store i1 true, i1* %23
  br label %194

; <label>:31:                                     ; preds = %24
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %33 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %10
  %34 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree.24"* %33) #3
  %35 = bitcast %"struct.std::_Rb_tree_node.50"* %34 to %"struct.std::_Rb_tree_node_base"*
  %36 = icmp eq %"struct.std::_Rb_tree_node_base"* %32, %35
  %37 = select i1 %36, i32 -929258026, i32 2079709569
  store i32 %37, i32* %22
  store i1 true, i1* %23
  br label %194

; <label>:38:                                     ; preds = %24
  %39 = load i32, i32* @x.763
  %40 = load i32, i32* @y.764
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1073093369, i32 -88465763
  store i32 %52, i32* %22
  br label %194

; <label>:53:                                     ; preds = %24
  %54 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %10
  %55 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %55, i32 0, i32 0
  %57 = load i64*, i64** %15, align 8
  %58 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %18, i64* dereferenceable(8) %57)
  %59 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %60 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %59)
  %61 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %56, i64* dereferenceable(8) %58, i64* dereferenceable(8) %60)
  store i1 %61, i1* %8
  %62 = load i32, i32* @x.763
  %63 = load i32, i32* @y.764
  %64 = add i32 %62, -367328648
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -367328648
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 -1062496236, i32 -88465763
  store i32 %76, i32* %22
  br label %194

; <label>:77:                                     ; preds = %24
  store i32 -929258026, i32* %22
  %78 = load volatile i1, i1* %8
  store i1 %78, i1* %23
  br label %194

; <label>:79:                                     ; preds = %24
  %80 = load i1, i1* %23
  store i1 %80, i1* %6
  %81 = load i32, i32* @x.763
  %82 = load i32, i32* @y.764
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 561944343, i32 -1108376221
  store i32 %94, i32* %22
  br label %194

; <label>:95:                                     ; preds = %24
  %96 = load volatile i1, i1* %6
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %17, align 1
  %98 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %16, align 8
  %99 = load i64*, i64** %15, align 8
  %100 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %99) #3
  %101 = call %"struct.std::_Rb_tree_node.50"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %98, i64* dereferenceable(8) %100)
  store %"struct.std::_Rb_tree_node.50"* %101, %"struct.std::_Rb_tree_node.50"** %19, align 8
  %102 = load i8, i8* %17, align 1
  %103 = trunc i8 %102 to i1
  %104 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %19, align 8
  %105 = bitcast %"struct.std::_Rb_tree_node.50"* %104 to %"struct.std::_Rb_tree_node_base"*
  %106 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %107 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %10
  %108 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %108, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %103, %"struct.std::_Rb_tree_node_base"* %105, %"struct.std::_Rb_tree_node_base"* %106, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %109) #3
  %110 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %10
  %111 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %111, i32 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %113, 4601906341970117570
  %115 = add i64 %114, 1
  %116 = add i64 %115, 4601906341970117570
  %117 = add i64 %113, 1
  store i64 %116, i64* %112, align 8
  %118 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %19, align 8
  %119 = bitcast %"struct.std::_Rb_tree_node.50"* %118 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %11, %"struct.std::_Rb_tree_node_base"* %119) #3
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  %121 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %120, align 8
  store %"struct.std::_Rb_tree_node_base"* %121, %"struct.std::_Rb_tree_node_base"** %7
  %122 = load i32, i32* @x.763
  %123 = load i32, i32* @y.764
  %124 = sub i32 0, 1
  %125 = add i32 %122, %124
  %126 = sub i32 %122, 1
  %127 = mul i32 %122, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %123, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 false, true
  %134 = and i1 %131, false
  %135 = and i1 %129, %133
  %136 = and i1 %132, false
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 false, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  %147 = select i1 %145, i32 -1120541025, i32 -1108376221
  store i32 %147, i32* %22
  br label %194

; <label>:148:                                    ; preds = %24
  %149 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7
  ret %"struct.std::_Rb_tree_node_base"* %149

; <label>:150:                                    ; preds = %24
  %151 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %10
  %152 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %152, i32 0, i32 0
  %154 = load i64*, i64** %15, align 8
  %155 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %18, i64* dereferenceable(8) %154)
  %156 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %157 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %156)
  %158 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %153, i64* dereferenceable(8) %155, i64* dereferenceable(8) %157)
  store i32 1073093369, i32* %22
  br label %194

; <label>:159:                                    ; preds = %24
  %160 = load volatile i1, i1* %6
  %161 = zext i1 %160 to i8
  store i8 %161, i8* %17, align 1
  %162 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %16, align 8
  %163 = load i64*, i64** %15, align 8
  %164 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %163) #3
  %165 = call %"struct.std::_Rb_tree_node.50"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %162, i64* dereferenceable(8) %164)
  store %"struct.std::_Rb_tree_node.50"* %165, %"struct.std::_Rb_tree_node.50"** %19, align 8
  %166 = load i8, i8* %17, align 1
  %167 = trunc i8 %166 to i1
  %168 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %19, align 8
  %169 = bitcast %"struct.std::_Rb_tree_node.50"* %168 to %"struct.std::_Rb_tree_node_base"*
  %170 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %171 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %10
  %172 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %171, i32 0, i32 0
  %173 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %172, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %167, %"struct.std::_Rb_tree_node_base"* %169, %"struct.std::_Rb_tree_node_base"* %170, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %173) #3
  %174 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %10
  %175 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %174, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %175, i32 0, i32 2
  %177 = load i64, i64* %176, align 8
  %178 = sub i64 0, %177
  %179 = add i64 0, %178
  %180 = sub i64 0, %177
  %181 = sub i64 0, %179
  %182 = sub i64 0, 1
  %183 = add i64 %181, %182
  %184 = sub i64 0, %183
  %185 = add i64 %179, 1
  %186 = sub i64 %177, 7095384836603170888
  %187 = add i64 %186, 1
  %188 = add i64 %187, 7095384836603170888
  %189 = add i64 %177, 1
  store i64 %188, i64* %176, align 8
  %190 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %19, align 8
  %191 = bitcast %"struct.std::_Rb_tree_node.50"* %190 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %11, %"struct.std::_Rb_tree_node_base"* %191) #3
  %192 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  %193 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %192, align 8
  store i32 561944343, i32* %22
  br label %194

; <label>:194:                                    ; preds = %159, %150, %95, %79, %77, %53, %38, %31, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %2, align 8
  %3 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.50"*
  ret %"struct.std::_Rb_tree_node.50"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.773
  %6 = load i32, i32* @y.774
  %7 = add i32 %5, 923221136
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 923221136
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1637595367, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1637595367, label %19
    i32 1196430044, label %39
    i32 463160410, label %60
    i32 1382570260, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1196430044, i32 1382570260
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %40, align 8
  %41 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %42, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.773
  %46 = load i32, i32* @y.774
  %47 = sub i32 %45, 2076890406
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 2076890406
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 463160410, i32 1382570260
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %63, align 8
  %64 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %65, i32 0, i32 2
  %67 = load i64, i64* %66, align 8
  store i32 1196430044, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"*, i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca %"struct.std::less"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %9, %11
  ret i1 %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %3, i64* dereferenceable(8) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_rightmostEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.779
  %6 = load i32, i32* @y.780
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 967703836, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 967703836, label %18
    i32 -1528492310, label %26
    i32 665031236, label %59
    i32 -1000310455, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1528492310, i32 -1000310455
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %27, align 8
  %28 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %27, align 8
  %29 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %29, i32 0, i32 1
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %30, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"** %31, %"struct.std::_Rb_tree_node_base"*** %2
  %32 = load i32, i32* @x.779
  %33 = load i32, i32* @y.780
  %34 = add i32 %32, -1463198164
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1463198164
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 665031236, i32 -1000310455
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %62, align 8
  %63 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %64, i32 0, i32 1
  %66 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %65, i32 0, i32 3
  store i32 -1528492310, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.55"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %11 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %7, i32 0, i32 1
  %12 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %13 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %12) #3
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree.24"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.50"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Rb_tree_node.50"*
  %6 = alloca i1
  %7 = alloca %"class.std::_Rb_tree.24"*
  %8 = alloca %"struct.std::pair.55", align 8
  %9 = alloca %"class.std::_Rb_tree.24"*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %13 = alloca i8, align 1
  %14 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %16 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %9, align 8
  store i64* %1, i64** %10, align 8
  %17 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %9, align 8
  store %"class.std::_Rb_tree.24"* %17, %"class.std::_Rb_tree.24"** %7
  %18 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %7
  %19 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.24"* %18) #3
  store %"struct.std::_Rb_tree_node.50"* %19, %"struct.std::_Rb_tree_node.50"** %11, align 8
  %20 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %7
  %21 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree.24"* %20) #3
  store %"struct.std::_Rb_tree_node.50"* %21, %"struct.std::_Rb_tree_node.50"** %12, align 8
  store i8 1, i8* %13, align 1
  %22 = alloca i32
  store i32 -1328711281, i32* %22
  %23 = alloca %"struct.std::_Rb_tree_node.50"*
  br label %24

; <label>:24:                                     ; preds = %2, %377
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -1328711281, label %27
    i32 1322679654, label %55
    i32 -136614738, label %73
    i32 1241226274, label %76
    i32 1422911590, label %89
    i32 -1849895640, label %105
    i32 -60388868, label %135
    i32 1203122673, label %137
    i32 -141663240, label %141
    i32 496645853, label %170
    i32 -1574873252, label %198
    i32 1983503241, label %199
    i32 2105914873, label %205
    i32 -1989345786, label %221
    i32 -240931633, label %253
    i32 -419155203, label %256
    i32 1492795928, label %257
    i32 -128684614, label %259
    i32 316572705, label %286
    i32 -1188476588, label %301
    i32 -1227362472, label %302
    i32 633502148, label %312
    i32 -2004560772, label %340
    i32 -511638528, label %355
    i32 -345598442, label %356
    i32 1401790446, label %358
    i32 -597125313, label %361
    i32 -100921850, label %364
    i32 773697435, label %368
    i32 -862597060, label %370
    i32 1888783491, label %375
    i32 789372734, label %376
  ]

; <label>:26:                                     ; preds = %24
  br label %377

; <label>:27:                                     ; preds = %24
  %28 = load i32, i32* @x.783
  %29 = load i32, i32* @y.784
  %30 = sub i32 %28, 567525324
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 567525324
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1322679654, i32 -597125313
  store i32 %54, i32* %22
  br label %377

; <label>:55:                                     ; preds = %24
  %56 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %11, align 8
  %57 = icmp ne %"struct.std::_Rb_tree_node.50"* %56, null
  store i1 %57, i1* %6
  %58 = load i32, i32* @x.783
  %59 = load i32, i32* @y.784
  %60 = add i32 %58, 752708934
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 752708934
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -136614738, i32 -597125313
  store i32 %72, i32* %22
  br label %377

; <label>:73:                                     ; preds = %24
  %74 = load volatile i1, i1* %6
  %75 = select i1 %74, i32 1241226274, i32 1983503241
  store i32 %75, i32* %22
  br label %377

; <label>:76:                                     ; preds = %24
  %77 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %11, align 8
  store %"struct.std::_Rb_tree_node.50"* %77, %"struct.std::_Rb_tree_node.50"** %12, align 8
  %78 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %7
  %79 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %79, i32 0, i32 0
  %81 = load i64*, i64** %10, align 8
  %82 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %11, align 8
  %83 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node.50"* %82)
  %84 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %80, i64* dereferenceable(8) %81, i64* dereferenceable(8) %83)
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %13, align 1
  %86 = load i8, i8* %13, align 1
  %87 = trunc i8 %86 to i1
  %88 = select i1 %87, i32 1422911590, i32 1203122673
  store i32 %88, i32* %22
  br label %377

; <label>:89:                                     ; preds = %24
  %90 = load i32, i32* @x.783
  %91 = load i32, i32* @y.784
  %92 = add i32 %90, -1789947892
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -1789947892
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  %104 = select i1 %102, i32 -1849895640, i32 -100921850
  store i32 %104, i32* %22
  br label %377

; <label>:105:                                    ; preds = %24
  %106 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %11, align 8
  %107 = bitcast %"struct.std::_Rb_tree_node.50"* %106 to %"struct.std::_Rb_tree_node_base"*
  %108 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %107) #3
  store %"struct.std::_Rb_tree_node.50"* %108, %"struct.std::_Rb_tree_node.50"** %5
  %109 = load i32, i32* @x.783
  %110 = load i32, i32* @y.784
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -60388868, i32 -100921850
  store i32 %134, i32* %22
  br label %377

; <label>:135:                                    ; preds = %24
  store i32 -141663240, i32* %22
  %136 = load volatile %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %5
  store %"struct.std::_Rb_tree_node.50"* %136, %"struct.std::_Rb_tree_node.50"** %23
  br label %377

; <label>:137:                                    ; preds = %24
  %138 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %11, align 8
  %139 = bitcast %"struct.std::_Rb_tree_node.50"* %138 to %"struct.std::_Rb_tree_node_base"*
  %140 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %139) #3
  store i32 -141663240, i32* %22
  store %"struct.std::_Rb_tree_node.50"* %140, %"struct.std::_Rb_tree_node.50"** %23
  br label %377

; <label>:141:                                    ; preds = %24
  %142 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %23
  store %"struct.std::_Rb_tree_node.50"* %142, %"struct.std::_Rb_tree_node.50"** %3
  %143 = load i32, i32* @x.783
  %144 = load i32, i32* @y.784
  %145 = sub i32 %143, 1323582924
  %146 = sub i32 %145, 1
  %147 = add i32 %146, 1323582924
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 true, true
  %156 = and i1 %153, true
  %157 = and i1 %151, %155
  %158 = and i1 %154, true
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 true, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  %169 = select i1 %167, i32 496645853, i32 773697435
  store i32 %169, i32* %22
  br label %377

; <label>:170:                                    ; preds = %24
  %171 = load volatile %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %3
  store %"struct.std::_Rb_tree_node.50"* %171, %"struct.std::_Rb_tree_node.50"** %11, align 8
  %172 = load i32, i32* @x.783
  %173 = load i32, i32* @y.784
  %174 = sub i32 0, 1
  %175 = add i32 %172, %174
  %176 = sub i32 %172, 1
  %177 = mul i32 %172, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %173, 10
  %181 = xor i1 %179, true
  %182 = xor i1 %180, true
  %183 = xor i1 false, true
  %184 = and i1 %181, false
  %185 = and i1 %179, %183
  %186 = and i1 %182, false
  %187 = and i1 %180, %183
  %188 = or i1 %184, %185
  %189 = or i1 %186, %187
  %190 = xor i1 %188, %189
  %191 = or i1 %181, %182
  %192 = xor i1 %191, true
  %193 = or i1 false, %183
  %194 = and i1 %192, %193
  %195 = or i1 %190, %194
  %196 = or i1 %179, %180
  %197 = select i1 %195, i32 -1574873252, i32 773697435
  store i32 %197, i32* %22
  br label %377

; <label>:198:                                    ; preds = %24
  store i32 -1328711281, i32* %22
  br label %377

; <label>:199:                                    ; preds = %24
  %200 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %12, align 8
  %201 = bitcast %"struct.std::_Rb_tree_node.50"* %200 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %14, %"struct.std::_Rb_tree_node_base"* %201) #3
  %202 = load i8, i8* %13, align 1
  %203 = trunc i8 %202 to i1
  %204 = select i1 %203, i32 2105914873, i32 -1227362472
  store i32 %204, i32* %22
  br label %377

; <label>:205:                                    ; preds = %24
  %206 = load i32, i32* @x.783
  %207 = load i32, i32* @y.784
  %208 = sub i32 %206, 1762595135
  %209 = sub i32 %208, 1
  %210 = add i32 %209, 1762595135
  %211 = sub i32 %206, 1
  %212 = mul i32 %206, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %207, 10
  %216 = and i1 %214, %215
  %217 = xor i1 %214, %215
  %218 = or i1 %216, %217
  %219 = or i1 %214, %215
  %220 = select i1 %218, i32 -1989345786, i32 -862597060
  store i32 %220, i32* %22
  br label %377

; <label>:221:                                    ; preds = %24
  %222 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %7
  %223 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree.24"* %222) #3
  %224 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %15, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %223, %"struct.std::_Rb_tree_node_base"** %224, align 8
  %225 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %14, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %15) #3
  store i1 %225, i1* %4
  %226 = load i32, i32* @x.783
  %227 = load i32, i32* @y.784
  %228 = add i32 %226, -827685459
  %229 = sub i32 %228, 1
  %230 = sub i32 %229, -827685459
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 true, true
  %239 = and i1 %236, true
  %240 = and i1 %234, %238
  %241 = and i1 %237, true
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 true, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  %252 = select i1 %250, i32 -240931633, i32 -862597060
  store i32 %252, i32* %22
  br label %377

; <label>:253:                                    ; preds = %24
  %254 = load volatile i1, i1* %4
  %255 = select i1 %254, i32 -419155203, i32 1492795928
  store i32 %255, i32* %22
  br label %377

; <label>:256:                                    ; preds = %24
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node.50"** dereferenceable(8) %11, %"struct.std::_Rb_tree_node.50"** dereferenceable(8) %12)
  store i32 1401790446, i32* %22
  br label %377

; <label>:257:                                    ; preds = %24
  %258 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"* %14) #3
  store i32 -128684614, i32* %22
  br label %377

; <label>:259:                                    ; preds = %24
  %260 = load i32, i32* @x.783
  %261 = load i32, i32* @y.784
  %262 = sub i32 0, 1
  %263 = add i32 %260, %262
  %264 = sub i32 %260, 1
  %265 = mul i32 %260, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %261, 10
  %269 = xor i1 %267, true
  %270 = xor i1 %268, true
  %271 = xor i1 false, true
  %272 = and i1 %269, false
  %273 = and i1 %267, %271
  %274 = and i1 %270, false
  %275 = and i1 %268, %271
  %276 = or i1 %272, %273
  %277 = or i1 %274, %275
  %278 = xor i1 %276, %277
  %279 = or i1 %269, %270
  %280 = xor i1 %279, true
  %281 = or i1 false, %271
  %282 = and i1 %280, %281
  %283 = or i1 %278, %282
  %284 = or i1 %267, %268
  %285 = select i1 %283, i32 316572705, i32 1888783491
  store i32 %285, i32* %22
  br label %377

; <label>:286:                                    ; preds = %24
  %287 = load i32, i32* @x.783
  %288 = load i32, i32* @y.784
  %289 = sub i32 0, 1
  %290 = add i32 %287, %289
  %291 = sub i32 %287, 1
  %292 = mul i32 %287, %290
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %288, 10
  %296 = and i1 %294, %295
  %297 = xor i1 %294, %295
  %298 = or i1 %296, %297
  %299 = or i1 %294, %295
  %300 = select i1 %298, i32 -1188476588, i32 1888783491
  store i32 %300, i32* %22
  br label %377

; <label>:301:                                    ; preds = %24
  store i32 -1227362472, i32* %22
  br label %377

; <label>:302:                                    ; preds = %24
  %303 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %7
  %304 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %303, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %304, i32 0, i32 0
  %306 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  %307 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %306, align 8
  %308 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %307)
  %309 = load i64*, i64** %10, align 8
  %310 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %305, i64* dereferenceable(8) %308, i64* dereferenceable(8) %309)
  %311 = select i1 %310, i32 633502148, i32 -345598442
  store i32 %311, i32* %22
  br label %377

; <label>:312:                                    ; preds = %24
  %313 = load i32, i32* @x.783
  %314 = load i32, i32* @y.784
  %315 = add i32 %313, 1986672025
  %316 = sub i32 %315, 1
  %317 = sub i32 %316, 1986672025
  %318 = sub i32 %313, 1
  %319 = mul i32 %313, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %314, 10
  %323 = xor i1 %321, true
  %324 = xor i1 %322, true
  %325 = xor i1 true, true
  %326 = and i1 %323, true
  %327 = and i1 %321, %325
  %328 = and i1 %324, true
  %329 = and i1 %322, %325
  %330 = or i1 %326, %327
  %331 = or i1 %328, %329
  %332 = xor i1 %330, %331
  %333 = or i1 %323, %324
  %334 = xor i1 %333, true
  %335 = or i1 true, %325
  %336 = and i1 %334, %335
  %337 = or i1 %332, %336
  %338 = or i1 %321, %322
  %339 = select i1 %337, i32 -2004560772, i32 789372734
  store i32 %339, i32* %22
  br label %377

; <label>:340:                                    ; preds = %24
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node.50"** dereferenceable(8) %11, %"struct.std::_Rb_tree_node.50"** dereferenceable(8) %12)
  %341 = load i32, i32* @x.783
  %342 = load i32, i32* @y.784
  %343 = sub i32 0, 1
  %344 = add i32 %341, %343
  %345 = sub i32 %341, 1
  %346 = mul i32 %341, %344
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %342, 10
  %350 = and i1 %348, %349
  %351 = xor i1 %348, %349
  %352 = or i1 %350, %351
  %353 = or i1 %348, %349
  %354 = select i1 %352, i32 -511638528, i32 789372734
  store i32 %354, i32* %22
  br label %377

; <label>:355:                                    ; preds = %24
  store i32 1401790446, i32* %22
  br label %377

; <label>:356:                                    ; preds = %24
  %357 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %16, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %357, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %16)
  store i32 1401790446, i32* %22
  br label %377

; <label>:358:                                    ; preds = %24
  %359 = bitcast %"struct.std::pair.55"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %360 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %359, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %360

; <label>:361:                                    ; preds = %24
  %362 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %11, align 8
  %363 = icmp ne %"struct.std::_Rb_tree_node.50"* %362, null
  store i32 1322679654, i32* %22
  br label %377

; <label>:364:                                    ; preds = %24
  %365 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %11, align 8
  %366 = bitcast %"struct.std::_Rb_tree_node.50"* %365 to %"struct.std::_Rb_tree_node_base"*
  %367 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %366) #3
  store i32 -1849895640, i32* %22
  br label %377

; <label>:368:                                    ; preds = %24
  %369 = load volatile %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %3
  store %"struct.std::_Rb_tree_node.50"* %369, %"struct.std::_Rb_tree_node.50"** %11, align 8
  store i32 496645853, i32* %22
  br label %377

; <label>:370:                                    ; preds = %24
  %371 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %7
  %372 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree.24"* %371) #3
  %373 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %15, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %372, %"struct.std::_Rb_tree_node_base"** %373, align 8
  %374 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %14, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %15) #3
  store i32 -1989345786, i32* %22
  br label %377

; <label>:375:                                    ; preds = %24
  store i32 316572705, i32* %22
  br label %377

; <label>:376:                                    ; preds = %24
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node.50"** dereferenceable(8) %11, %"struct.std::_Rb_tree_node.50"** dereferenceable(8) %12)
  store i32 -2004560772, i32* %22
  br label %377

; <label>:377:                                    ; preds = %376, %375, %370, %368, %364, %361, %356, %355, %340, %312, %302, %301, %286, %259, %257, %256, %253, %221, %205, %199, %198, %170, %141, %137, %135, %105, %89, %76, %73, %55, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_leftmostEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.785
  %6 = load i32, i32* @y.786
  %7 = add i32 %5, -630216256
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -630216256
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -292376845, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -292376845, label %19
    i32 -938438311, label %39
    i32 -1219546607, label %71
    i32 1548308840, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -938438311, i32 1548308840
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %40, align 8
  %41 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"** %44, %"struct.std::_Rb_tree_node_base"*** %2
  %45 = load i32, i32* @x.785
  %46 = load i32, i32* @y.786
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1219546607, i32 1548308840
  store i32 %70, i32* %15
  br label %79

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %74, align 8
  %75 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %74, align 8
  %76 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %76, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %77, i32 0, i32 2
  store i32 -938438311, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.787
  %7 = load i32, i32* @y.788
  %8 = sub i32 %6, -636205256
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -636205256
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1896435183, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1896435183, label %20
    i32 -1388434828, label %28
    i32 860174985, label %56
    i32 1297368061, label %57
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1388434828, i32 1297368061
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair.55"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %31 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %29, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %31, align 8
  %32 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %32, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  %35 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %34) #3
  %36 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %35, align 8
  store %"struct.std::_Rb_tree_node_base"* %36, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %37 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %32, i32 0, i32 1
  %38 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %31, align 8
  %39 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %38) #3
  %40 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %39, align 8
  store %"struct.std::_Rb_tree_node_base"* %40, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %41 = load i32, i32* @x.787
  %42 = load i32, i32* @y.788
  %43 = sub i32 %41, -188628278
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -188628278
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 860174985, i32 1297368061
  store i32 %55, i32* %16
  br label %70

; <label>:56:                                     ; preds = %17
  ret void

; <label>:57:                                     ; preds = %17
  %58 = alloca %"struct.std::pair.55"*, align 8
  %59 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %60 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %58, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %59, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %60, align 8
  %61 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %58, align 8
  %62 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %61, i32 0, i32 0
  %63 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %59, align 8
  %64 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %63) #3
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %64, align 8
  store %"struct.std::_Rb_tree_node_base"* %65, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %66 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %61, i32 0, i32 1
  %67 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %60, align 8
  %68 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %67) #3
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  store %"struct.std::_Rb_tree_node_base"* %69, %"struct.std::_Rb_tree_node_base"** %66, align 8
  store i32 -1388434828, i32* %16
  br label %70

; <label>:70:                                     ; preds = %57, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #13
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEppEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #13
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.793
  %7 = load i32, i32* @y.794
  %8 = sub i32 %6, -2021067527
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -2021067527
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2045932548, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2045932548, label %20
    i32 -2061332807, label %28
    i32 -688896526, label %55
    i32 -934393525, label %56
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2061332807, i32 -934393525
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair.55"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %31 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %29, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %31, align 8
  %32 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %32, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  %35 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %34) #3
  %36 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %35, align 8
  store %"struct.std::_Rb_tree_node_base"* %36, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %37 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %32, i32 0, i32 1
  %38 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %31, align 8
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %38, align 8
  store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %40 = load i32, i32* @x.793
  %41 = load i32, i32* @y.794
  %42 = add i32 %40, 1893517011
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1893517011
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -688896526, i32 -934393525
  store i32 %54, i32* %16
  br label %68

; <label>:55:                                     ; preds = %17
  ret void

; <label>:56:                                     ; preds = %17
  %57 = alloca %"struct.std::pair.55"*, align 8
  %58 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %59 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %57, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %58, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %59, align 8
  %60 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %57, align 8
  %61 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %60, i32 0, i32 0
  %62 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %58, align 8
  %63 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %62) #3
  %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %63, align 8
  store %"struct.std::_Rb_tree_node_base"* %64, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %65 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %60, i32 0, i32 1
  %66 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %59, align 8
  %67 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %66, align 8
  store %"struct.std::_Rb_tree_node_base"* %67, %"struct.std::_Rb_tree_node_base"** %65, align 8
  store i32 -2061332807, i32* %16
  br label %68

; <label>:68:                                     ; preds = %56, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.795
  %6 = load i32, i32* @y.796
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1242170376, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1242170376, label %18
    i32 -23231814, label %38
    i32 -224354512, label %57
    i32 596012913, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -23231814, i32 596012913
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %40 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %41 = bitcast %"struct.std::_Rb_tree_node_base"* %40 to %"struct.std::_Rb_tree_node.50"*
  %42 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node.50"* %41)
  store i64* %42, i64** %2
  %43 = load i32, i32* @x.795
  %44 = load i32, i32* @y.796
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -224354512, i32 596012913
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %60, align 8
  %61 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %60, align 8
  %62 = bitcast %"struct.std::_Rb_tree_node_base"* %61 to %"struct.std::_Rb_tree_node.50"*
  %63 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node.50"* %62)
  store i32 -23231814, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node.50"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"struct.std::_Rb_tree_node.50"* %0, %"struct.std::_Rb_tree_node.50"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.50", %"struct.std::_Rb_tree_node.50"* %3, i32 0, i32 1
  %5 = call i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.51"* %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.51"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.51"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.51"* %0, %"struct.__gnu_cxx::__aligned_membuf.51"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.51"*, %"struct.__gnu_cxx::__aligned_membuf.51"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.51"* %3) #3
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.51"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.51"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.51"* %0, %"struct.__gnu_cxx::__aligned_membuf.51"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.51"*, %"struct.__gnu_cxx::__aligned_membuf.51"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.51", %"struct.__gnu_cxx::__aligned_membuf.51"* %3, i32 0, i32 0
  %5 = bitcast [8 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node.50"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node.50"* %0, %"struct.std::_Rb_tree_node.50"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %2, align 8
  %5 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node.50"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %3, i64* dereferenceable(8) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %3, align 8
  %4 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.55"*, %"struct.std::_Rb_tree_node.50"** dereferenceable(8), %"struct.std::_Rb_tree_node.50"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.811
  %7 = load i32, i32* @y.812
  %8 = sub i32 %6, 2128834805
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2128834805
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1423804203, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %98
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1423804203, label %20
    i32 923503994, label %40
    i32 1778975621, label %82
    i32 -1832656890, label %83
  ]

; <label>:19:                                     ; preds = %17
  br label %98

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 923503994, i32 -1832656890
  store i32 %39, i32* %16
  br label %98

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.55"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_node.50"**, align 8
  %43 = alloca %"struct.std::_Rb_tree_node.50"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %41, align 8
  store %"struct.std::_Rb_tree_node.50"** %1, %"struct.std::_Rb_tree_node.50"*** %42, align 8
  store %"struct.std::_Rb_tree_node.50"** %2, %"struct.std::_Rb_tree_node.50"*** %43, align 8
  %44 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %44, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node.50"**, %"struct.std::_Rb_tree_node.50"*** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::_Rb_tree_node.50"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node.50"** dereferenceable(8) %46) #3
  %48 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node.50"* %48 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %50 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %44, i32 0, i32 1
  %51 = load %"struct.std::_Rb_tree_node.50"**, %"struct.std::_Rb_tree_node.50"*** %43, align 8
  %52 = call dereferenceable(8) %"struct.std::_Rb_tree_node.50"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node.50"** dereferenceable(8) %51) #3
  %53 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %52, align 8
  %54 = bitcast %"struct.std::_Rb_tree_node.50"* %53 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %54, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %55 = load i32, i32* @x.811
  %56 = load i32, i32* @y.812
  %57 = sub i32 %55, -104353806
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -104353806
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 1778975621, i32 -1832656890
  store i32 %81, i32* %16
  br label %98

; <label>:82:                                     ; preds = %17
  ret void

; <label>:83:                                     ; preds = %17
  %84 = alloca %"struct.std::pair.55"*, align 8
  %85 = alloca %"struct.std::_Rb_tree_node.50"**, align 8
  %86 = alloca %"struct.std::_Rb_tree_node.50"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %84, align 8
  store %"struct.std::_Rb_tree_node.50"** %1, %"struct.std::_Rb_tree_node.50"*** %85, align 8
  store %"struct.std::_Rb_tree_node.50"** %2, %"struct.std::_Rb_tree_node.50"*** %86, align 8
  %87 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %87, i32 0, i32 0
  %89 = load %"struct.std::_Rb_tree_node.50"**, %"struct.std::_Rb_tree_node.50"*** %85, align 8
  %90 = call dereferenceable(8) %"struct.std::_Rb_tree_node.50"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node.50"** dereferenceable(8) %89) #3
  %91 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %90, align 8
  %92 = bitcast %"struct.std::_Rb_tree_node.50"* %91 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %92, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %93 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %87, i32 0, i32 1
  %94 = load %"struct.std::_Rb_tree_node.50"**, %"struct.std::_Rb_tree_node.50"*** %86, align 8
  %95 = call dereferenceable(8) %"struct.std::_Rb_tree_node.50"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node.50"** dereferenceable(8) %94) #3
  %96 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %95, align 8
  %97 = bitcast %"struct.std::_Rb_tree_node.50"* %96 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %97, %"struct.std::_Rb_tree_node_base"** %93, align 8
  store i32 923503994, i32* %16
  br label %98

; <label>:98:                                     ; preds = %83, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node.50"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"struct.std::_Rb_tree_node.50"* %0, %"struct.std::_Rb_tree_node.50"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %2, align 8
  %4 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node.50"* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node.50"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node.50"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node.50"**, align 8
  store %"struct.std::_Rb_tree_node.50"** %0, %"struct.std::_Rb_tree_node.50"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.50"**, %"struct.std::_Rb_tree_node.50"*** %2, align 8
  ret %"struct.std::_Rb_tree_node.50"** %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.50"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.817
  %7 = load i32, i32* @y.818
  %8 = add i32 %6, 1650177978
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1650177978
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1553137756, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1553137756, label %20
    i32 -1412700699, label %28
    i32 1065569723, label %64
    i32 391912827, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1412700699, i32 391912827
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %30 = alloca i64*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %29, align 8
  store i64* %1, i64** %30, align 8
  %31 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %29, align 8
  %32 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %31, i32 0, i32 0
  %33 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %32, align 8
  %34 = load i64*, i64** %30, align 8
  %35 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %34) #3
  %36 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.24"* %33, i64* dereferenceable(8) %35)
  store %"struct.std::_Rb_tree_node.50"* %36, %"struct.std::_Rb_tree_node.50"** %3
  %37 = load i32, i32* @x.817
  %38 = load i32, i32* @y.818
  %39 = sub i32 %37, 849969283
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 849969283
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1065569723, i32 391912827
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %3
  ret %"struct.std::_Rb_tree_node.50"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %68 = alloca i64*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %67, align 8
  store i64* %1, i64** %68, align 8
  %69 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %67, align 8
  %70 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %69, i32 0, i32 0
  %71 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %70, align 8
  %72 = load i64*, i64** %68, align 8
  %73 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %72) #3
  %74 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.24"* %71, i64* dereferenceable(8) %73)
  store i32 -1412700699, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.24"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.24"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %3, align 8
  %7 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree.24"* %6)
  store %"struct.std::_Rb_tree_node.50"* %7, %"struct.std::_Rb_tree_node.50"** %5, align 8
  %8 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %9) #3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.24"* %6, %"struct.std::_Rb_tree_node.50"* %8, i64* dereferenceable(8) %10)
  %11 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %5, align 8
  ret %"struct.std::_Rb_tree_node.50"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree.24"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %2, align 8
  %3 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.25"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node.50"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node.50"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.823
  %5 = load i32, i32* @y.824
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %155

; <label>:29:                                     ; preds = %3, %155
  %30 = alloca %"class.std::_Rb_tree.24"*, align 8
  %31 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %30, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %31, align 8
  store i64* %2, i64** %32, align 8
  %35 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %30, align 8
  %36 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %31, align 8
  %37 = bitcast %"struct.std::_Rb_tree_node.50"* %36 to i8*
  %38 = bitcast i8* %37 to %"struct.std::_Rb_tree_node.50"*
  %39 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %35) #3
  %40 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %31, align 8
  %41 = load i32, i32* @x.823
  %42 = load i32, i32* @y.824
  %43 = add i32 %41, 1312603853
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1312603853
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %155

; <label>:55:                                     ; preds = %29
  %56 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node.50"* %40)
          to label %57 unwind label %102

; <label>:57:                                     ; preds = %55
  %58 = load i32, i32* @x.823
  %59 = load i32, i32* @y.824
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %167

; <label>:71:                                     ; preds = %57, %167
  %72 = load i64*, i64** %32, align 8
  %73 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %72) #3
  %74 = load i32, i32* @x.823
  %75 = load i32, i32* @y.824
  %76 = add i32 %74, -1629380933
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -1629380933
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %167

; <label>:100:                                    ; preds = %71
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1) %39, i64* %56, i64* dereferenceable(8) %73)
          to label %101 unwind label %102

; <label>:101:                                    ; preds = %100
  br label %116

; <label>:102:                                    ; preds = %100, %55
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %33, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %34, align 4
  br label %106

; <label>:106:                                    ; preds = %102
  %107 = load i8*, i8** %33, align 8
  %108 = call i8* @__cxa_begin_catch(i8* %107) #3
  %109 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %31, align 8
  %110 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %31, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %35, %"struct.std::_Rb_tree_node.50"* %110) #3
  invoke void @__cxa_rethrow() #14
          to label %154 unwind label %111

; <label>:111:                                    ; preds = %106
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %33, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %34, align 4
  invoke void @__cxa_end_catch()
          to label %115 unwind label %122

; <label>:115:                                    ; preds = %111
  br label %117

; <label>:116:                                    ; preds = %101
  ret void

; <label>:117:                                    ; preds = %115
  %118 = load i8*, i8** %33, align 8
  %119 = load i32, i32* %34, align 4
  %120 = insertvalue { i8*, i32 } undef, i8* %118, 0
  %121 = insertvalue { i8*, i32 } %120, i32 %119, 1
  resume { i8*, i32 } %121

; <label>:122:                                    ; preds = %111
  %123 = load i32, i32* @x.823
  %124 = load i32, i32* @y.824
  %125 = sub i32 0, 1
  %126 = add i32 %123, %125
  %127 = sub i32 %123, 1
  %128 = mul i32 %123, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %124, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %170

; <label>:136:                                    ; preds = %122, %170
  %137 = landingpad { i8*, i32 }
          catch i8* null
  %138 = extractvalue { i8*, i32 } %137, 0
  call void @__clang_call_terminate(i8* %138) #12
  %139 = load i32, i32* @x.823
  %140 = load i32, i32* @y.824
  %141 = add i32 %139, 2072564049
  %142 = sub i32 %141, 1
  %143 = sub i32 %142, 2072564049
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  br i1 %151, label %153, label %170

; <label>:153:                                    ; preds = %136
  unreachable

; <label>:154:                                    ; preds = %106
  unreachable

; <label>:155:                                    ; preds = %29, %3
  %156 = alloca %"class.std::_Rb_tree.24"*, align 8
  %157 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %158 = alloca i64*, align 8
  %159 = alloca i8*
  %160 = alloca i32
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %156, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %157, align 8
  store i64* %2, i64** %158, align 8
  %161 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %156, align 8
  %162 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %157, align 8
  %163 = bitcast %"struct.std::_Rb_tree_node.50"* %162 to i8*
  %164 = bitcast i8* %163 to %"struct.std::_Rb_tree_node.50"*
  %165 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %161) #3
  %166 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %157, align 8
  br label %29

; <label>:167:                                    ; preds = %71, %57
  %168 = load i64*, i64** %32, align 8
  %169 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %168) #3
  br label %71

; <label>:170:                                    ; preds = %136, %122
  %171 = landingpad { i8*, i32 }
          catch i8* null
  %172 = extractvalue { i8*, i32 } %171, 0
  call void @__clang_call_terminate(i8* %172) #12
  br label %136
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.25"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node.50"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node.50"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_node.50"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 278428389, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %95
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 278428389, label %17
    i32 -1024249751, label %22
    i32 -505609226, label %23
    i32 1876472228, label %39
    i32 -210337200, label %71
    i32 723588828, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %95

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1024249751, i32 -505609226
  store i32 %21, i32* %13
  br label %95

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.827
  %25 = load i32, i32* @y.828
  %26 = sub i32 %24, 1501307458
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1501307458
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 1876472228, i32 723588828
  store i32 %38, i32* %13
  br label %95

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 40
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to %"struct.std::_Rb_tree_node.50"*
  store %"struct.std::_Rb_tree_node.50"* %43, %"struct.std::_Rb_tree_node.50"** %4
  %44 = load i32, i32* @x.827
  %45 = load i32, i32* @y.828
  %46 = add i32 %44, 525802562
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 525802562
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -210337200, i32 723588828
  store i32 %70, i32* %13
  br label %95

; <label>:71:                                     ; preds = %14
  %72 = load volatile %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %4
  ret %"struct.std::_Rb_tree_node.50"* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64, i64* %8, align 8
  %75 = add i64 %74, -6780919553421447038
  %76 = sub i64 %75, 40
  %77 = sub i64 %76, -6780919553421447038
  %78 = sub i64 %74, 40
  %79 = mul i64 %77, 40
  %80 = sub i64 0, %74
  %81 = add i64 0, %80
  %82 = sub i64 0, %74
  %83 = sub i64 0, 40
  %84 = sub i64 %81, %83
  %85 = add i64 %81, 40
  %86 = add i64 %74, 4211650103900591663
  %87 = sub i64 %86, 40
  %88 = sub i64 %87, 4211650103900591663
  %89 = sub i64 %74, 40
  %90 = mul i64 %88, 40
  %91 = shl i64 %74, 40
  %92 = mul i64 %74, 40
  %93 = call i8* @_Znwm(i64 %92)
  %94 = bitcast i8* %93 to %"struct.std::_Rb_tree_node.50"*
  store i32 1876472228, i32* %13
  br label %95

; <label>:95:                                     ; preds = %73, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.829
  %5 = load i32, i32* @y.830
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 204476028, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %70
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 204476028, label %17
    i32 773814856, label %37
    i32 -973152504, label %66
    i32 -2001739949, label %67
  ]

; <label>:16:                                     ; preds = %14
  br label %70

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 773814856, i32 -2001739949
  store i32 %36, i32* %13
  br label %70

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %38, align 8
  %40 = load i32, i32* @x.829
  %41 = load i32, i32* @y.830
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -973152504, i32 -2001739949
  store i32 %65, i32* %13
  br label %70

; <label>:66:                                     ; preds = %14
  ret i64 461168601842738790

; <label>:67:                                     ; preds = %14
  %68 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %68, align 8
  %69 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %68, align 8
  store i32 773814856, i32* %13
  br label %70

; <label>:70:                                     ; preds = %67, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.831
  %7 = load i32, i32* @y.832
  %8 = add i32 %6, 693740060
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 693740060
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1283462581, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1283462581, label %20
    i32 -245569624, label %28
    i32 859157279, label %63
    i32 -112035692, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -245569624, i32 -112035692
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.25"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  %32 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %29, align 8
  %33 = bitcast %"class.std::allocator.25"* %32 to %"class.__gnu_cxx::new_allocator.26"*
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %35) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.26"* %33, i64* %34, i64* dereferenceable(8) %36)
  %37 = load i32, i32* @x.831
  %38 = load i32, i32* @y.832
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 859157279, i32 -112035692
  store i32 %62, i32* %16
  br label %73

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.25"*, align 8
  %66 = alloca i64*, align 8
  %67 = alloca i64*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %65, align 8
  store i64* %1, i64** %66, align 8
  store i64* %2, i64** %67, align 8
  %68 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %65, align 8
  %69 = bitcast %"class.std::allocator.25"* %68 to %"class.__gnu_cxx::new_allocator.26"*
  %70 = load i64*, i64** %66, align 8
  %71 = load i64*, i64** %67, align 8
  %72 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %71) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.26"* %69, i64* %70, i64* dereferenceable(8) %72)
  store i32 -245569624, i32* %16
  br label %73

; <label>:73:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.26"*, i64*, i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  %10 = bitcast i8* %9 to i64*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt16initializer_listIxE4sizeEv(%"class.std::initializer_list"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.835
  %6 = load i32, i32* @y.836
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 24535716, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 24535716, label %18
    i32 423263038, label %38
    i32 -668732807, label %58
    i32 -588858675, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 423263038, i32 -588858675
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %39, align 8
  %40 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %39, align 8
  %41 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %40, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.835
  %44 = load i32, i32* @y.836
  %45 = add i32 %43, 1537636520
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1537636520
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -668732807, i32 -588858675
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %61, align 8
  %62 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %61, align 8
  %63 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %62, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  store i32 423263038, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEC2Ev(%"class.std::_Rb_tree.29"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %2, align 8
  %3 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %5 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.std::allocator.30"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %9 = bitcast %"struct.std::_Rb_tree_node_base"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 32, i32 8, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 2
  store i64 0, i64* %10, align 8
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %3, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %4, align 4
  %16 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.std::allocator.30"* %16) #3
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i32, i32* @x.839
  %19 = load i32, i32* @y.840
  %20 = sub i32 %18, -2065449552
  %21 = sub i32 %20, 1
  %22 = add i32 %21, -2065449552
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %63

; <label>:44:                                     ; preds = %17, %63
  %45 = load i8*, i8** %3, align 8
  %46 = load i32, i32* %4, align 4
  %47 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1
  %49 = load i32, i32* @x.839
  %50 = load i32, i32* @y.840
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %63

; <label>:62:                                     ; preds = %44
  resume { i8*, i32 } %48

; <label>:63:                                     ; preds = %44, %17
  %64 = load i8*, i8** %3, align 8
  %65 = load i32, i32* %4, align 4
  %66 = insertvalue { i8*, i32 } undef, i8* %64, 0
  %67 = insertvalue { i8*, i32 } %66, i32 %65, 1
  br label %44
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.std::allocator.30"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %2, align 8
  %3 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %2, align 8
  %4 = bitcast %"class.std::allocator.30"* %3 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.31"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree.24"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Rb_tree.24"*
  %5 = alloca i8*
  %6 = alloca %"struct.std::_Rb_tree_iterator"*
  %7 = alloca i8*
  %8 = alloca %"struct.std::_Rb_tree_iterator"*
  %9 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*
  %10 = alloca %"struct.std::pair.55"*
  %11 = alloca i64**
  %12 = alloca %"struct.std::pair.56"*
  %13 = alloca i1
  %14 = alloca i1
  %15 = load i32, i32* @x.847
  %16 = load i32, i32* @y.848
  %17 = sub i32 %15, -1225545621
  %18 = sub i32 %17, 1
  %19 = add i32 %18, -1225545621
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  store i1 %23, i1* %14
  %24 = icmp slt i32 %16, 10
  store i1 %24, i1* %13
  %25 = alloca i32
  store i32 -251123188, i32* %25
  br label %26

; <label>:26:                                     ; preds = %2, %219
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 -251123188, label %29
    i32 217818559, label %49
    i32 -1850151336, label %104
    i32 -1523626764, label %107
    i32 -1565554481, label %123
    i32 794912553, label %159
    i32 -1017276461, label %160
    i32 -912595262, label %171
    i32 1993552305, label %175
    i32 -280728662, label %198
  ]

; <label>:28:                                     ; preds = %26
  br label %219

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %14
  %31 = load volatile i1, i1* %13
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 217818559, i32 1993552305
  store i32 %48, i32* %25
  br label %219

; <label>:49:                                     ; preds = %26
  %50 = alloca %"struct.std::pair.56", align 8
  store %"struct.std::pair.56"* %50, %"struct.std::pair.56"** %12
  %51 = alloca %"class.std::_Rb_tree.24"*, align 8
  %52 = alloca i64*, align 8
  store i64** %52, i64*** %11
  %53 = alloca %"struct.std::pair.55", align 8
  store %"struct.std::pair.55"* %53, %"struct.std::pair.55"** %10
  %54 = alloca %"struct.std::_Identity", align 1
  %55 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %55, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %9
  %56 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %56, %"struct.std::_Rb_tree_iterator"** %8
  %57 = alloca i8, align 1
  store i8* %57, i8** %7
  %58 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %58, %"struct.std::_Rb_tree_iterator"** %6
  %59 = alloca i8, align 1
  store i8* %59, i8** %5
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %51, align 8
  %60 = load volatile i64**, i64*** %11
  store i64* %1, i64** %60, align 8
  %61 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %51, align 8
  store %"class.std::_Rb_tree.24"* %61, %"class.std::_Rb_tree.24"** %4
  %62 = load volatile i64**, i64*** %11
  %63 = load i64*, i64** %62, align 8
  %64 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %54, i64* dereferenceable(8) %63)
  %65 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4
  %66 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree.24"* %65, i64* dereferenceable(8) %64)
  %67 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %10
  %68 = bitcast %"struct.std::pair.55"* %67 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %69 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %68, i32 0, i32 0
  %70 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %66, 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %69, align 8
  %71 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %68, i32 0, i32 1
  %72 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %66, 1
  store %"struct.std::_Rb_tree_node_base"* %72, %"struct.std::_Rb_tree_node_base"** %71, align 8
  %73 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %10
  %74 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %73, i32 0, i32 1
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %76 = icmp ne %"struct.std::_Rb_tree_node_base"* %75, null
  store i1 %76, i1* %3
  %77 = load i32, i32* @x.847
  %78 = load i32, i32* @y.848
  %79 = sub i32 %77, 211954632
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 211954632
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 -1850151336, i32 1993552305
  store i32 %103, i32* %25
  br label %219

; <label>:104:                                    ; preds = %26
  %105 = load volatile i1, i1* %3
  %106 = select i1 %105, i32 -1523626764, i32 -1017276461
  store i32 %106, i32* %25
  br label %219

; <label>:107:                                    ; preds = %26
  %108 = load i32, i32* @x.847
  %109 = load i32, i32* @y.848
  %110 = sub i32 %108, 1097294776
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 1097294776
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 -1565554481, i32 -280728662
  store i32 %122, i32* %25
  br label %219

; <label>:123:                                    ; preds = %26
  %124 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %9
  %125 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %124, %"class.std::_Rb_tree.24"* dereferenceable(48) %125)
  %126 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %10
  %127 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %126, i32 0, i32 0
  %128 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %127, align 8
  %129 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %10
  %130 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %129, i32 0, i32 1
  %131 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %130, align 8
  %132 = load volatile i64**, i64*** %11
  %133 = load i64*, i64** %132, align 8
  %134 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %133) #3
  %135 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %9
  %136 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4
  %137 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree.24"* %136, %"struct.std::_Rb_tree_node_base"* %128, %"struct.std::_Rb_tree_node_base"* %131, i64* dereferenceable(8) %134, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8) %135)
  %138 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %8
  %139 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %138, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %137, %"struct.std::_Rb_tree_node_base"** %139, align 8
  %140 = load volatile i8*, i8** %7
  store i8 1, i8* %140, align 1
  %141 = load volatile %"struct.std::pair.56"*, %"struct.std::pair.56"** %12
  %142 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %8
  %143 = load volatile i8*, i8** %7
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.56"* %141, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %142, i8* dereferenceable(1) %143)
  %144 = load i32, i32* @x.847
  %145 = load i32, i32* @y.848
  %146 = sub i32 %144, -708357397
  %147 = sub i32 %146, 1
  %148 = add i32 %147, -708357397
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 794912553, i32 -280728662
  store i32 %158, i32* %25
  br label %219

; <label>:159:                                    ; preds = %26
  store i32 -912595262, i32* %25
  br label %219

; <label>:160:                                    ; preds = %26
  %161 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %10
  %162 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %161, i32 0, i32 0
  %163 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %162, align 8
  %164 = bitcast %"struct.std::_Rb_tree_node_base"* %163 to %"struct.std::_Rb_tree_node.50"*
  %165 = bitcast %"struct.std::_Rb_tree_node.50"* %164 to %"struct.std::_Rb_tree_node_base"*
  %166 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %6
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %166, %"struct.std::_Rb_tree_node_base"* %165) #3
  %167 = load volatile i8*, i8** %5
  store i8 0, i8* %167, align 1
  %168 = load volatile %"struct.std::pair.56"*, %"struct.std::pair.56"** %12
  %169 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %6
  %170 = load volatile i8*, i8** %5
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.56"* %168, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %169, i8* dereferenceable(1) %170)
  store i32 -912595262, i32* %25
  br label %219

; <label>:171:                                    ; preds = %26
  %172 = load volatile %"struct.std::pair.56"*, %"struct.std::pair.56"** %12
  %173 = bitcast %"struct.std::pair.56"* %172 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %174 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %173, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %174

; <label>:175:                                    ; preds = %26
  %176 = alloca %"struct.std::pair.56", align 8
  %177 = alloca %"class.std::_Rb_tree.24"*, align 8
  %178 = alloca i64*, align 8
  %179 = alloca %"struct.std::pair.55", align 8
  %180 = alloca %"struct.std::_Identity", align 1
  %181 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", align 8
  %182 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %183 = alloca i8, align 1
  %184 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %185 = alloca i8, align 1
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %177, align 8
  store i64* %1, i64** %178, align 8
  %186 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %177, align 8
  %187 = load i64*, i64** %178, align 8
  %188 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %180, i64* dereferenceable(8) %187)
  %189 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree.24"* %186, i64* dereferenceable(8) %188)
  %190 = bitcast %"struct.std::pair.55"* %179 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %191 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %190, i32 0, i32 0
  %192 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %189, 0
  store %"struct.std::_Rb_tree_node_base"* %192, %"struct.std::_Rb_tree_node_base"** %191, align 8
  %193 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %190, i32 0, i32 1
  %194 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %189, 1
  store %"struct.std::_Rb_tree_node_base"* %194, %"struct.std::_Rb_tree_node_base"** %193, align 8
  %195 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %179, i32 0, i32 1
  %196 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %195, align 8
  %197 = icmp ne %"struct.std::_Rb_tree_node_base"* %196, null
  store i32 217818559, i32* %25
  br label %219

; <label>:198:                                    ; preds = %26
  %199 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %9
  %200 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %199, %"class.std::_Rb_tree.24"* dereferenceable(48) %200)
  %201 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %10
  %202 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %201, i32 0, i32 0
  %203 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %202, align 8
  %204 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %10
  %205 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %204, i32 0, i32 1
  %206 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %205, align 8
  %207 = load volatile i64**, i64*** %11
  %208 = load i64*, i64** %207, align 8
  %209 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %208) #3
  %210 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %9
  %211 = load volatile %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4
  %212 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree.24"* %211, %"struct.std::_Rb_tree_node_base"* %203, %"struct.std::_Rb_tree_node_base"* %206, i64* dereferenceable(8) %209, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8) %210)
  %213 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %8
  %214 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %213, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %212, %"struct.std::_Rb_tree_node_base"** %214, align 8
  %215 = load volatile i8*, i8** %7
  store i8 1, i8* %215, align 1
  %216 = load volatile %"struct.std::pair.56"*, %"struct.std::pair.56"** %12
  %217 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %8
  %218 = load volatile i8*, i8** %7
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.56"* %216, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %217, i8* dereferenceable(1) %218)
  store i32 -1565554481, i32* %25
  br label %219

; <label>:219:                                    ; preds = %198, %175, %160, %159, %123, %107, %104, %49, %29, %28
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9) #3
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %8, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10) #3
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %12 = load i8*, i8** %6, align 8
  %13 = call dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1) %12) #3
  %14 = load i8, i8* %13, align 1
  %15 = trunc i8 %14 to i1
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.56"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.56"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair.56"* %0, %"struct.std::pair.56"** %4, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair.56"*, %"struct.std::pair.56"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9) #3
  %11 = bitcast %"struct.std::_Rb_tree_iterator"* %8 to i8*
  %12 = bitcast %"struct.std::_Rb_tree_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"struct.std::pair.56", %"struct.std::pair.56"* %7, i32 0, i32 1
  %14 = load i8*, i8** %6, align 8
  %15 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %14) #3
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1)) #4 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1)) #4 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_(%"class.std::map.28"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.861
  %7 = load i32, i32* @y.862
  %8 = add i32 %6, -1422972526
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1422972526
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -4161163, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -4161163, label %20
    i32 -847129308, label %28
    i32 1714894347, label %54
    i32 521090170, label %56
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -847129308, i32 521090170
  store i32 %27, i32* %16
  br label %67

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %30 = alloca %"class.std::map.28"*, align 8
  %31 = alloca i64*, align 8
  store %"class.std::map.28"* %0, %"class.std::map.28"** %30, align 8
  store i64* %1, i64** %31, align 8
  %32 = load %"class.std::map.28"*, %"class.std::map.28"** %30, align 8
  %33 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %32, i32 0, i32 0
  %34 = load i64*, i64** %31, align 8
  %35 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_(%"class.std::_Rb_tree.29"* %33, i64* dereferenceable(8) %34)
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %29, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %29, i32 0, i32 0
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  store %"struct.std::_Rb_tree_node_base"* %38, %"struct.std::_Rb_tree_node_base"** %3
  %39 = load i32, i32* @x.861
  %40 = load i32, i32* @y.862
  %41 = sub i32 %39, 2060029707
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 2060029707
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1714894347, i32 521090170
  store i32 %53, i32* %16
  br label %67

; <label>:54:                                     ; preds = %17
  %55 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  ret %"struct.std::_Rb_tree_node_base"* %55

; <label>:56:                                     ; preds = %17
  %57 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %58 = alloca %"class.std::map.28"*, align 8
  %59 = alloca i64*, align 8
  store %"class.std::map.28"* %0, %"class.std::map.28"** %58, align 8
  store i64* %1, i64** %59, align 8
  %60 = load %"class.std::map.28"*, %"class.std::map.28"** %58, align 8
  %61 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %60, i32 0, i32 0
  %62 = load i64*, i64** %59, align 8
  %63 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_(%"class.std::_Rb_tree.29"* %61, i64* dereferenceable(8) %62)
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %57, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %63, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %57, i32 0, i32 0
  %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %65, align 8
  store i32 -847129308, i32* %16
  br label %67

; <label>:67:                                     ; preds = %56, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.58"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.58"*, align 8
  store %"struct.std::_Rb_tree_iterator.58"* %0, %"struct.std::_Rb_tree_iterator.58"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.58"* %1, %"struct.std::_Rb_tree_iterator.58"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv(%"class.std::map.28"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.865
  %6 = load i32, i32* @y.866
  %7 = sub i32 %5, -1922891304
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1922891304
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1036562504, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1036562504, label %19
    i32 -886998209, label %39
    i32 361619774, label %63
    i32 1917720797, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -886998209, i32 1917720797
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %41 = alloca %"class.std::map.28"*, align 8
  store %"class.std::map.28"* %0, %"class.std::map.28"** %41, align 8
  %42 = load %"class.std::map.28"*, %"class.std::map.28"** %41, align 8
  %43 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %42, i32 0, i32 0
  %44 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv(%"class.std::_Rb_tree.29"* %43) #3
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %40, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %40, i32 0, i32 0
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8
  store %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"** %2
  %48 = load i32, i32* @x.865
  %49 = load i32, i32* @y.866
  %50 = sub i32 %48, 135590137
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 135590137
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 361619774, i32 1917720797
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %67 = alloca %"class.std::map.28"*, align 8
  store %"class.std::map.28"* %0, %"class.std::map.28"** %67, align 8
  %68 = load %"class.std::map.28"*, %"class.std::map.28"** %67, align 8
  %69 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %68, i32 0, i32 0
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv(%"class.std::_Rb_tree.29"* %69) #3
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %66, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %66, i32 0, i32 0
  %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %72, align 8
  store i32 -886998209, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv(%"class.std::map.28"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"class.std::map.28"*, align 8
  %4 = alloca %"struct.std::less", align 1
  store %"class.std::map.28"* %0, %"class.std::map.28"** %3, align 8
  %5 = load %"class.std::map.28"*, %"class.std::map.28"** %3, align 8
  %6 = getelementptr inbounds %"class.std::map.28", %"class.std::map.28"* %5, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv(%"class.std::_Rb_tree.29"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.49"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator.58"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_iterator.58"*, align 8
  store %"struct.std::_Rb_tree_iterator.58"* %0, %"struct.std::_Rb_tree_iterator.58"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.47"*
  %7 = invoke %"struct.std::pair.49"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"* %6)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret %"struct.std::pair.49"* %7

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.869
  %11 = load i32, i32* @y.870
  %12 = add i32 %10, -1637770646
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1637770646
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  br i1 %34, label %36, label %66

; <label>:36:                                     ; preds = %9, %66
  %37 = landingpad { i8*, i32 }
          catch i8* null
  %38 = extractvalue { i8*, i32 } %37, 0
  call void @__clang_call_terminate(i8* %38) #12
  %39 = load i32, i32* @x.869
  %40 = load i32, i32* @y.870
  %41 = sub i32 %39, -1080121630
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1080121630
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %66

; <label>:65:                                     ; preds = %36
  unreachable

; <label>:66:                                     ; preds = %36, %9
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  call void @__clang_call_terminate(i8* %68) #12
  br label %36
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator.59", align 8
  %8 = alloca %"class.std::_Rb_tree.29"*, align 8
  %9 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %10 = alloca %"class.std::tuple"*, align 8
  %11 = alloca %"class.std::tuple.60"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %13 = alloca %"struct.std::pair.55", align 8
  %14 = alloca %"struct.std::_Rb_tree_const_iterator.59", align 8
  %15 = alloca i8*
  %16 = alloca i32
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %17, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %8, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %9, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %10, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %11, align 8
  %18 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %8, align 8
  %19 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %9, align 8
  %20 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %19) #3
  %21 = load %"class.std::tuple"*, %"class.std::tuple"** %10, align 8
  %22 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %21) #3
  %23 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %11, align 8
  %24 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %23) #3
  %25 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"* %18, %"struct.std::piecewise_construct_t"* dereferenceable(1) %20, %"class.std::tuple"* dereferenceable(8) %22, %"class.std::tuple.60"* dereferenceable(1) %24)
  store %"struct.std::_Rb_tree_node.47"* %25, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %26 = bitcast %"struct.std::_Rb_tree_const_iterator.59"* %14 to i8*
  %27 = bitcast %"struct.std::_Rb_tree_const_iterator.59"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %29 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.47"* %28)
          to label %30 unwind label %111

; <label>:30:                                     ; preds = %5
  %31 = load i32, i32* @x.871
  %32 = load i32, i32* @y.872
  %33 = sub i32 %31, -955243723
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -955243723
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %339

; <label>:45:                                     ; preds = %30, %339
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %14, i32 0, i32 0
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8
  %48 = load i32, i32* @x.871
  %49 = load i32, i32* @y.872
  %50 = sub i32 %48, 873088700
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 873088700
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %339

; <label>:62:                                     ; preds = %45
  %63 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node_base"* %47, i64* dereferenceable(8) %29)
          to label %64 unwind label %111

; <label>:64:                                     ; preds = %62
  %65 = bitcast %"struct.std::pair.55"* %13 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %66 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %65, i32 0, i32 0
  %67 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %63, 0
  store %"struct.std::_Rb_tree_node_base"* %67, %"struct.std::_Rb_tree_node_base"** %66, align 8
  %68 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %65, i32 0, i32 1
  %69 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %63, 1
  store %"struct.std::_Rb_tree_node_base"* %69, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 1
  %71 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %70, align 8
  %72 = icmp ne %"struct.std::_Rb_tree_node_base"* %71, null
  br i1 %72, label %73, label %161

; <label>:73:                                     ; preds = %64
  %74 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 0
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 1
  %77 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %78 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %79 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node_base"* %75, %"struct.std::_Rb_tree_node_base"* %77, %"struct.std::_Rb_tree_node.47"* %78)
          to label %80 unwind label %111

; <label>:80:                                     ; preds = %73
  %81 = load i32, i32* @x.871
  %82 = load i32, i32* @y.872
  %83 = sub i32 %81, 1667602910
  %84 = sub i32 %83, 1
  %85 = add i32 %84, 1667602910
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %342

; <label>:95:                                     ; preds = %80, %342
  %96 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %96, align 8
  %97 = load i32, i32* @x.871
  %98 = load i32, i32* @y.872
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %342

; <label>:110:                                    ; preds = %95
  br label %215

; <label>:111:                                    ; preds = %73, %62, %5
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %15, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %16, align 4
  br label %115

; <label>:115:                                    ; preds = %111
  %116 = load i32, i32* @x.871
  %117 = load i32, i32* @y.872
  %118 = sub i32 %116, -777418287
  %119 = sub i32 %118, 1
  %120 = add i32 %119, -777418287
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %344

; <label>:130:                                    ; preds = %115, %344
  %131 = load i8*, i8** %15, align 8
  %132 = call i8* @__cxa_begin_catch(i8* %131) #3
  %133 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node.47"* %133) #3
  %134 = load i32, i32* @x.871
  %135 = load i32, i32* @y.872
  %136 = sub i32 %134, 1705397439
  %137 = sub i32 %136, 1
  %138 = add i32 %137, 1705397439
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 true, true
  %147 = and i1 %144, true
  %148 = and i1 %142, %146
  %149 = and i1 %145, true
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 true, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %344

; <label>:160:                                    ; preds = %130
  invoke void @__cxa_rethrow() #14
          to label %338 unwind label %209

; <label>:161:                                    ; preds = %64
  %162 = load i32, i32* @x.871
  %163 = load i32, i32* @y.872
  %164 = add i32 %162, -1599517744
  %165 = sub i32 %164, 1
  %166 = sub i32 %165, -1599517744
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 true, true
  %175 = and i1 %172, true
  %176 = and i1 %170, %174
  %177 = and i1 %173, true
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 true, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  br i1 %186, label %188, label %348

; <label>:188:                                    ; preds = %161, %348
  %189 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node.47"* %189) #3
  %190 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 0
  %191 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %190, align 8
  %192 = bitcast %"struct.std::_Rb_tree_node_base"* %191 to %"struct.std::_Rb_tree_node.47"*
  %193 = bitcast %"struct.std::_Rb_tree_node.47"* %192 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %6, %"struct.std::_Rb_tree_node_base"* %193) #3
  %194 = load i32, i32* @x.871
  %195 = load i32, i32* @y.872
  %196 = sub i32 %194, -1854151595
  %197 = sub i32 %196, 1
  %198 = add i32 %197, -1854151595
  %199 = sub i32 %194, 1
  %200 = mul i32 %194, %198
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %195, 10
  %204 = and i1 %202, %203
  %205 = xor i1 %202, %203
  %206 = or i1 %204, %205
  %207 = or i1 %202, %203
  br i1 %206, label %208, label %348

; <label>:208:                                    ; preds = %188
  br label %215

; <label>:209:                                    ; preds = %160
  %210 = landingpad { i8*, i32 }
          cleanup
  %211 = extractvalue { i8*, i32 } %210, 0
  store i8* %211, i8** %15, align 8
  %212 = extractvalue { i8*, i32 } %210, 1
  store i32 %212, i32* %16, align 4
  invoke void @__cxa_end_catch()
          to label %213 unwind label %294

; <label>:213:                                    ; preds = %209
  br label %259
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:215:                                    ; preds = %208, %110
  %216 = load i32, i32* @x.871
  %217 = load i32, i32* @y.872
  %218 = sub i32 %216, 1998291916
  %219 = sub i32 %218, 1
  %220 = add i32 %219, 1998291916
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = and i1 %224, %225
  %227 = xor i1 %224, %225
  %228 = or i1 %226, %227
  %229 = or i1 %224, %225
  br i1 %228, label %230, label %354

; <label>:230:                                    ; preds = %215, %354
  %231 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %6, i32 0, i32 0
  %232 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %231, align 8
  %233 = load i32, i32* @x.871
  %234 = load i32, i32* @y.872
  %235 = sub i32 0, 1
  %236 = add i32 %233, %235
  %237 = sub i32 %233, 1
  %238 = mul i32 %233, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %234, 10
  %242 = xor i1 %240, true
  %243 = xor i1 %241, true
  %244 = xor i1 true, true
  %245 = and i1 %242, true
  %246 = and i1 %240, %244
  %247 = and i1 %243, true
  %248 = and i1 %241, %244
  %249 = or i1 %245, %246
  %250 = or i1 %247, %248
  %251 = xor i1 %249, %250
  %252 = or i1 %242, %243
  %253 = xor i1 %252, true
  %254 = or i1 true, %244
  %255 = and i1 %253, %254
  %256 = or i1 %251, %255
  %257 = or i1 %240, %241
  br i1 %256, label %258, label %354

; <label>:258:                                    ; preds = %230
  ret %"struct.std::_Rb_tree_node_base"* %232

; <label>:259:                                    ; preds = %213
  %260 = load i32, i32* @x.871
  %261 = load i32, i32* @y.872
  %262 = add i32 %260, -1938242792
  %263 = sub i32 %262, 1
  %264 = sub i32 %263, -1938242792
  %265 = sub i32 %260, 1
  %266 = mul i32 %260, %264
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %261, 10
  %270 = and i1 %268, %269
  %271 = xor i1 %268, %269
  %272 = or i1 %270, %271
  %273 = or i1 %268, %269
  br i1 %272, label %274, label %357

; <label>:274:                                    ; preds = %259, %357
  %275 = load i8*, i8** %15, align 8
  %276 = load i32, i32* %16, align 4
  %277 = insertvalue { i8*, i32 } undef, i8* %275, 0
  %278 = insertvalue { i8*, i32 } %277, i32 %276, 1
  %279 = load i32, i32* @x.871
  %280 = load i32, i32* @y.872
  %281 = add i32 %279, 56803008
  %282 = sub i32 %281, 1
  %283 = sub i32 %282, 56803008
  %284 = sub i32 %279, 1
  %285 = mul i32 %279, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %280, 10
  %289 = and i1 %287, %288
  %290 = xor i1 %287, %288
  %291 = or i1 %289, %290
  %292 = or i1 %287, %288
  br i1 %291, label %293, label %357

; <label>:293:                                    ; preds = %274
  resume { i8*, i32 } %278

; <label>:294:                                    ; preds = %209
  %295 = load i32, i32* @x.871
  %296 = load i32, i32* @y.872
  %297 = add i32 %295, -1671774772
  %298 = sub i32 %297, 1
  %299 = sub i32 %298, -1671774772
  %300 = sub i32 %295, 1
  %301 = mul i32 %295, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %296, 10
  %305 = xor i1 %303, true
  %306 = xor i1 %304, true
  %307 = xor i1 true, true
  %308 = and i1 %305, true
  %309 = and i1 %303, %307
  %310 = and i1 %306, true
  %311 = and i1 %304, %307
  %312 = or i1 %308, %309
  %313 = or i1 %310, %311
  %314 = xor i1 %312, %313
  %315 = or i1 %305, %306
  %316 = xor i1 %315, true
  %317 = or i1 true, %307
  %318 = and i1 %316, %317
  %319 = or i1 %314, %318
  %320 = or i1 %303, %304
  br i1 %319, label %321, label %362

; <label>:321:                                    ; preds = %294, %362
  %322 = landingpad { i8*, i32 }
          catch i8* null
  %323 = extractvalue { i8*, i32 } %322, 0
  call void @__clang_call_terminate(i8* %323) #12
  %324 = load i32, i32* @x.871
  %325 = load i32, i32* @y.872
  %326 = sub i32 0, 1
  %327 = add i32 %324, %326
  %328 = sub i32 %324, 1
  %329 = mul i32 %324, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %325, 10
  %333 = and i1 %331, %332
  %334 = xor i1 %331, %332
  %335 = or i1 %333, %334
  %336 = or i1 %331, %332
  br i1 %335, label %337, label %362

; <label>:337:                                    ; preds = %321
  unreachable

; <label>:338:                                    ; preds = %160
  unreachable

; <label>:339:                                    ; preds = %45, %30
  %340 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %14, i32 0, i32 0
  %341 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %340, align 8
  br label %45

; <label>:342:                                    ; preds = %95, %80
  %343 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %343, align 8
  br label %95

; <label>:344:                                    ; preds = %130, %115
  %345 = load i8*, i8** %15, align 8
  %346 = call i8* @__cxa_begin_catch(i8* %345) #3
  %347 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node.47"* %347) #3
  br label %130

; <label>:348:                                    ; preds = %188, %161
  %349 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node.47"* %349) #3
  %350 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 0
  %351 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %350, align 8
  %352 = bitcast %"struct.std::_Rb_tree_node_base"* %351 to %"struct.std::_Rb_tree_node.47"*
  %353 = bitcast %"struct.std::_Rb_tree_node.47"* %352 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %6, %"struct.std::_Rb_tree_node_base"* %353) #3
  br label %188

; <label>:354:                                    ; preds = %230, %215
  %355 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %6, i32 0, i32 0
  %356 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %355, align 8
  br label %230

; <label>:357:                                    ; preds = %274, %259
  %358 = load i8*, i8** %15, align 8
  %359 = load i32, i32* %16, align 4
  %360 = insertvalue { i8*, i32 } undef, i8* %358, 0
  %361 = insertvalue { i8*, i32 } %360, i32 %359, 1
  br label %274

; <label>:362:                                    ; preds = %321, %294
  %363 = landingpad { i8*, i32 }
          catch i8* null
  %364 = extractvalue { i8*, i32 } %363, 0
  call void @__clang_call_terminate(i8* %364) #12
  br label %321
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator.59"*, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.873
  %6 = load i32, i32* @y.874
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -351863213, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %82
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -351863213, label %18
    i32 801813734, label %38
    i32 1540363173, label %73
    i32 -1983504307, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %82

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 801813734, i32 -1983504307
  store i32 %37, i32* %14
  br label %82

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_const_iterator.59"*, align 8
  %40 = alloca %"struct.std::_Rb_tree_iterator.58"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.59"* %0, %"struct.std::_Rb_tree_const_iterator.59"** %39, align 8
  store %"struct.std::_Rb_tree_iterator.58"* %1, %"struct.std::_Rb_tree_iterator.58"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_const_iterator.59"*, %"struct.std::_Rb_tree_const_iterator.59"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %41, i32 0, i32 0
  %43 = load %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %43, i32 0, i32 0
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %46 = load i32, i32* @x.873
  %47 = load i32, i32* @y.874
  %48 = sub i32 %46, 108938461
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 108938461
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1540363173, i32 -1983504307
  store i32 %72, i32* %14
  br label %82

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  %75 = alloca %"struct.std::_Rb_tree_const_iterator.59"*, align 8
  %76 = alloca %"struct.std::_Rb_tree_iterator.58"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.59"* %0, %"struct.std::_Rb_tree_const_iterator.59"** %75, align 8
  store %"struct.std::_Rb_tree_iterator.58"* %1, %"struct.std::_Rb_tree_iterator.58"** %76, align 8
  %77 = load %"struct.std::_Rb_tree_const_iterator.59"*, %"struct.std::_Rb_tree_const_iterator.59"** %75, align 8
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %77, i32 0, i32 0
  %79 = load %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %76, align 8
  %80 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %79, i32 0, i32 0
  %81 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %80, align 8
  store %"struct.std::_Rb_tree_node_base"* %81, %"struct.std::_Rb_tree_node_base"** %78, align 8
  store i32 801813734, i32* %14
  br label %82

; <label>:82:                                     ; preds = %74, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt16forward_as_tupleIJxEESt5tupleIJDpOT_EES3_(i64* dereferenceable(8)) #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::tuple", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  %5 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %4) #3
  invoke void @_ZNSt5tupleIJOxEEC2IJxEvEEDpOT_(%"class.std::tuple"* %2, i64* dereferenceable(8) %5)
          to label %6 unwind label %11

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %2, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  ret i64* %10

; <label>:11:                                     ; preds = %1
  %12 = load i32, i32* @x.875
  %13 = load i32, i32* @y.876
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %66

; <label>:37:                                     ; preds = %11, %66
  %38 = landingpad { i8*, i32 }
          catch i8* null
  %39 = extractvalue { i8*, i32 } %38, 0
  call void @__clang_call_terminate(i8* %39) #12
  %40 = load i32, i32* @x.875
  %41 = load i32, i32* @y.876
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %66

; <label>:65:                                     ; preds = %37
  unreachable

; <label>:66:                                     ; preds = %37, %11
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  call void @__clang_call_terminate(i8* %68) #12
  br label %37
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.877
  %6 = load i32, i32* @y.878
  %7 = sub i32 %5, -191515737
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -191515737
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2037660457, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2037660457, label %19
    i32 -528207072, label %39
    i32 -5344996, label %69
    i32 1126888620, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -528207072, i32 1126888620
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  store i64* %0, i64** %40, align 8
  %41 = load i64*, i64** %40, align 8
  store i64* %41, i64** %2
  %42 = load i32, i32* @x.877
  %43 = load i32, i32* @y.878
  %44 = sub i32 %42, 544732098
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 544732098
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -5344996, i32 1126888620
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile i64*, i64** %2
  ret i64* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca i64*, align 8
  store i64* %0, i64** %72, align 8
  %73 = load i64*, i64** %72, align 8
  store i32 -528207072, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_(%"class.std::_Rb_tree.29"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.879
  %7 = load i32, i32* @y.880
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1937568903, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %92
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1937568903, label %19
    i32 442303744, label %39
    i32 1336985379, label %78
    i32 1854969508, label %80
  ]

; <label>:18:                                     ; preds = %16
  br label %92

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 442303744, i32 1854969508
  store i32 %38, i32* %15
  br label %92

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %41 = alloca %"class.std::_Rb_tree.29"*, align 8
  %42 = alloca i64*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %41, align 8
  store i64* %1, i64** %42, align 8
  %43 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %41, align 8
  %44 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.29"* %43) #3
  %45 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.29"* %43) #3
  %46 = load i64*, i64** %42, align 8
  %47 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(%"class.std::_Rb_tree.29"* %43, %"struct.std::_Rb_tree_node.47"* %44, %"struct.std::_Rb_tree_node.47"* %45, i64* dereferenceable(8) %46)
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %40, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %49 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %40, i32 0, i32 0
  %50 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %49, align 8
  store %"struct.std::_Rb_tree_node_base"* %50, %"struct.std::_Rb_tree_node_base"** %3
  %51 = load i32, i32* @x.879
  %52 = load i32, i32* @y.880
  %53 = add i32 %51, -1824367050
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1824367050
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1336985379, i32 1854969508
  store i32 %77, i32* %15
  br label %92

; <label>:78:                                     ; preds = %16
  %79 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  ret %"struct.std::_Rb_tree_node_base"* %79

; <label>:80:                                     ; preds = %16
  %81 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %82 = alloca %"class.std::_Rb_tree.29"*, align 8
  %83 = alloca i64*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %82, align 8
  store i64* %1, i64** %83, align 8
  %84 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %82, align 8
  %85 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.29"* %84) #3
  %86 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.29"* %84) #3
  %87 = load i64*, i64** %83, align 8
  %88 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(%"class.std::_Rb_tree.29"* %84, %"struct.std::_Rb_tree_node.47"* %85, %"struct.std::_Rb_tree_node.47"* %86, i64* dereferenceable(8) %87)
  %89 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %81, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %88, %"struct.std::_Rb_tree_node_base"** %89, align 8
  %90 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %81, i32 0, i32 0
  %91 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %90, align 8
  store i32 442303744, i32* %15
  br label %92

; <label>:92:                                     ; preds = %80, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca i1
  %7 = alloca %"class.std::_Rb_tree.29"*
  %8 = alloca i64**
  %9 = alloca %"struct.std::_Rb_tree_node.47"**
  %10 = alloca %"struct.std::_Rb_tree_node.47"**
  %11 = alloca %"struct.std::_Rb_tree_iterator.58"*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.881
  %15 = load i32, i32* @y.882
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %13
  %22 = icmp slt i32 %15, 10
  store i1 %22, i1* %12
  %23 = alloca i32
  store i32 -1609251858, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %283
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 -1609251858, label %27
    i32 -1010637834, label %35
    i32 715413648, label %60
    i32 -1880826404, label %61
    i32 -1448341022, label %88
    i32 -1766401799, label %118
    i32 -765777228, label %121
    i32 1444362317, label %132
    i32 715794624, label %148
    i32 167426935, label %183
    i32 -801504001, label %184
    i32 -1224121125, label %190
    i32 -607929188, label %191
    i32 801768613, label %218
    i32 1532750179, label %253
    i32 1710280437, label %255
    i32 1151715890, label %262
    i32 -105425645, label %266
    i32 -1702769441, label %275
  ]

; <label>:26:                                     ; preds = %24
  br label %283

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %13
  %29 = load volatile i1, i1* %12
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -1010637834, i32 1710280437
  store i32 %34, i32* %23
  br label %283

; <label>:35:                                     ; preds = %24
  %36 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  store %"struct.std::_Rb_tree_iterator.58"* %36, %"struct.std::_Rb_tree_iterator.58"** %11
  %37 = alloca %"class.std::_Rb_tree.29"*, align 8
  %38 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"struct.std::_Rb_tree_node.47"** %38, %"struct.std::_Rb_tree_node.47"*** %10
  %39 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"struct.std::_Rb_tree_node.47"** %39, %"struct.std::_Rb_tree_node.47"*** %9
  %40 = alloca i64*, align 8
  store i64** %40, i64*** %8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %37, align 8
  %41 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %41, align 8
  %42 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %9
  store %"struct.std::_Rb_tree_node.47"* %2, %"struct.std::_Rb_tree_node.47"** %42, align 8
  %43 = load volatile i64**, i64*** %8
  store i64* %3, i64** %43, align 8
  %44 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %37, align 8
  store %"class.std::_Rb_tree.29"* %44, %"class.std::_Rb_tree.29"** %7
  %45 = load i32, i32* @x.881
  %46 = load i32, i32* @y.882
  %47 = add i32 %45, 12759874
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 12759874
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 715413648, i32 1710280437
  store i32 %59, i32* %23
  br label %283

; <label>:60:                                     ; preds = %24
  store i32 -1880826404, i32* %23
  br label %283

; <label>:61:                                     ; preds = %24
  %62 = load i32, i32* @x.881
  %63 = load i32, i32* @y.882
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1448341022, i32 1151715890
  store i32 %87, i32* %23
  br label %283

; <label>:88:                                     ; preds = %24
  %89 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  %90 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %89, align 8
  %91 = icmp ne %"struct.std::_Rb_tree_node.47"* %90, null
  store i1 %91, i1* %6
  %92 = load i32, i32* @x.881
  %93 = load i32, i32* @y.882
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 -1766401799, i32 1151715890
  store i32 %117, i32* %23
  br label %283

; <label>:118:                                    ; preds = %24
  %119 = load volatile i1, i1* %6
  %120 = select i1 %119, i32 -765777228, i32 -607929188
  store i32 %120, i32* %23
  br label %283

; <label>:121:                                    ; preds = %24
  %122 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %7
  %123 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %123, i32 0, i32 0
  %125 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  %126 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %125, align 8
  %127 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.47"* %126)
  %128 = load volatile i64**, i64*** %8
  %129 = load i64*, i64** %128, align 8
  %130 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %124, i64* dereferenceable(8) %127, i64* dereferenceable(8) %129)
  %131 = select i1 %130, i32 -801504001, i32 1444362317
  store i32 %131, i32* %23
  br label %283

; <label>:132:                                    ; preds = %24
  %133 = load i32, i32* @x.881
  %134 = load i32, i32* @y.882
  %135 = sub i32 %133, 1210605956
  %136 = sub i32 %135, 1
  %137 = add i32 %136, 1210605956
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  %147 = select i1 %145, i32 715794624, i32 -105425645
  store i32 %147, i32* %23
  br label %283

; <label>:148:                                    ; preds = %24
  %149 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  %150 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %149, align 8
  %151 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %9
  store %"struct.std::_Rb_tree_node.47"* %150, %"struct.std::_Rb_tree_node.47"** %151, align 8
  %152 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  %153 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %152, align 8
  %154 = bitcast %"struct.std::_Rb_tree_node.47"* %153 to %"struct.std::_Rb_tree_node_base"*
  %155 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %154) #3
  %156 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  store %"struct.std::_Rb_tree_node.47"* %155, %"struct.std::_Rb_tree_node.47"** %156, align 8
  %157 = load i32, i32* @x.881
  %158 = load i32, i32* @y.882
  %159 = sub i32 0, 1
  %160 = add i32 %157, %159
  %161 = sub i32 %157, 1
  %162 = mul i32 %157, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %158, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 true, true
  %169 = and i1 %166, true
  %170 = and i1 %164, %168
  %171 = and i1 %167, true
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 true, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  %182 = select i1 %180, i32 167426935, i32 -105425645
  store i32 %182, i32* %23
  br label %283

; <label>:183:                                    ; preds = %24
  store i32 -1224121125, i32* %23
  br label %283

; <label>:184:                                    ; preds = %24
  %185 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  %186 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %185, align 8
  %187 = bitcast %"struct.std::_Rb_tree_node.47"* %186 to %"struct.std::_Rb_tree_node_base"*
  %188 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %187) #3
  %189 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  store %"struct.std::_Rb_tree_node.47"* %188, %"struct.std::_Rb_tree_node.47"** %189, align 8
  store i32 -1224121125, i32* %23
  br label %283

; <label>:190:                                    ; preds = %24
  store i32 -1880826404, i32* %23
  br label %283

; <label>:191:                                    ; preds = %24
  %192 = load i32, i32* @x.881
  %193 = load i32, i32* @y.882
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 true, true
  %204 = and i1 %201, true
  %205 = and i1 %199, %203
  %206 = and i1 %202, true
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 true, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  %217 = select i1 %215, i32 801768613, i32 -1702769441
  store i32 %217, i32* %23
  br label %283

; <label>:218:                                    ; preds = %24
  %219 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %9
  %220 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %219, align 8
  %221 = bitcast %"struct.std::_Rb_tree_node.47"* %220 to %"struct.std::_Rb_tree_node_base"*
  %222 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %222, %"struct.std::_Rb_tree_node_base"* %221) #3
  %223 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  %224 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %223, i32 0, i32 0
  %225 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %224, align 8
  store %"struct.std::_Rb_tree_node_base"* %225, %"struct.std::_Rb_tree_node_base"** %5
  %226 = load i32, i32* @x.881
  %227 = load i32, i32* @y.882
  %228 = add i32 %226, 2078167124
  %229 = sub i32 %228, 1
  %230 = sub i32 %229, 2078167124
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 true, true
  %239 = and i1 %236, true
  %240 = and i1 %234, %238
  %241 = and i1 %237, true
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 true, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  %252 = select i1 %250, i32 1532750179, i32 -1702769441
  store i32 %252, i32* %23
  br label %283

; <label>:253:                                    ; preds = %24
  %254 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  ret %"struct.std::_Rb_tree_node_base"* %254

; <label>:255:                                    ; preds = %24
  %256 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %257 = alloca %"class.std::_Rb_tree.29"*, align 8
  %258 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %259 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %260 = alloca i64*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %257, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %258, align 8
  store %"struct.std::_Rb_tree_node.47"* %2, %"struct.std::_Rb_tree_node.47"** %259, align 8
  store i64* %3, i64** %260, align 8
  %261 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %257, align 8
  store i32 -1010637834, i32* %23
  br label %283

; <label>:262:                                    ; preds = %24
  %263 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  %264 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %263, align 8
  %265 = icmp ne %"struct.std::_Rb_tree_node.47"* %264, null
  store i32 -1448341022, i32* %23
  br label %283

; <label>:266:                                    ; preds = %24
  %267 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  %268 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %267, align 8
  %269 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %9
  store %"struct.std::_Rb_tree_node.47"* %268, %"struct.std::_Rb_tree_node.47"** %269, align 8
  %270 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  %271 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %270, align 8
  %272 = bitcast %"struct.std::_Rb_tree_node.47"* %271 to %"struct.std::_Rb_tree_node_base"*
  %273 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %272) #3
  %274 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %10
  store %"struct.std::_Rb_tree_node.47"* %273, %"struct.std::_Rb_tree_node.47"** %274, align 8
  store i32 715794624, i32* %23
  br label %283

; <label>:275:                                    ; preds = %24
  %276 = load volatile %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %9
  %277 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %276, align 8
  %278 = bitcast %"struct.std::_Rb_tree_node.47"* %277 to %"struct.std::_Rb_tree_node_base"*
  %279 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %279, %"struct.std::_Rb_tree_node_base"* %278) #3
  %280 = load volatile %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %11
  %281 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %280, i32 0, i32 0
  %282 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %281, align 8
  store i32 801768613, i32* %23
  br label %283

; <label>:283:                                    ; preds = %275, %266, %262, %255, %218, %191, %190, %184, %183, %148, %132, %121, %118, %88, %61, %60, %35, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %2, align 8
  %3 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.47"*
  ret %"struct.std::_Rb_tree_node.47"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.47"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.885
  %6 = load i32, i32* @y.886
  %7 = sub i32 %5, 71744620
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 71744620
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -903118644, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -903118644, label %19
    i32 1796244775, label %27
    i32 877440025, label %60
    i32 1202859043, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1796244775, i32 1202859043
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %29 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node.47"* %0, %"struct.std::_Rb_tree_node.47"** %28, align 8
  %30 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %28, align 8
  %31 = call dereferenceable(16) %"struct.std::pair.49"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.47"* %30)
  %32 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"* %29, %"struct.std::pair.49"* dereferenceable(16) %31)
  store i64* %32, i64** %2
  %33 = load i32, i32* @x.885
  %34 = load i32, i32* @y.886
  %35 = add i32 %33, 1354760216
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1354760216
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 877440025, i32 1202859043
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64*, i64** %2
  ret i64* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %64 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node.47"* %0, %"struct.std::_Rb_tree_node.47"** %63, align 8
  %65 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %63, align 8
  %66 = call dereferenceable(16) %"struct.std::pair.49"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.47"* %65)
  %67 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"* %64, %"struct.std::pair.49"* dereferenceable(16) %66)
  store i32 1796244775, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.887
  %6 = load i32, i32* @y.888
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -295834211, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -295834211, label %18
    i32 1724067738, label %26
    i32 -2019839138, label %46
    i32 611359445, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1724067738, i32 611359445
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree_iterator.58"*, align 8
  %28 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.58"* %0, %"struct.std::_Rb_tree_iterator.58"** %27, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %29, i32 0, i32 0
  %31 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  store %"struct.std::_Rb_tree_node_base"* %31, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %32 = load i32, i32* @x.887
  %33 = load i32, i32* @y.888
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -2019839138, i32 611359445
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::_Rb_tree_iterator.58"*, align 8
  %49 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.58"* %0, %"struct.std::_Rb_tree_iterator.58"** %48, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %49, align 8
  %50 = load %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %48, align 8
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %50, i32 0, i32 0
  %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %49, align 8
  store %"struct.std::_Rb_tree_node_base"* %52, %"struct.std::_Rb_tree_node_base"** %51, align 8
  store i32 1724067738, i32* %14
  br label %53

; <label>:53:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"*, %"struct.std::pair.49"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Select1st"*, align 8
  %4 = alloca %"struct.std::pair.49"*, align 8
  store %"struct.std::_Select1st"* %0, %"struct.std::_Select1st"** %3, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %4, align 8
  %5 = load %"struct.std::_Select1st"*, %"struct.std::_Select1st"** %3, align 8
  %6 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %6, i32 0, i32 0
  ret i64* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.49"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.47"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"struct.std::_Rb_tree_node.47"* %0, %"struct.std::_Rb_tree_node.47"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %2, align 8
  %4 = call %"struct.std::pair.49"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"* %3)
  ret %"struct.std::pair.49"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.49"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"struct.std::_Rb_tree_node.47"* %0, %"struct.std::_Rb_tree_node.47"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.47", %"struct.std::_Rb_tree_node.47"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.49"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.48"* %4) #3
  ret %"struct.std::pair.49"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.49"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.48"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.48"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.48"* %0, %"struct.__gnu_cxx::__aligned_membuf.48"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.48"*, %"struct.__gnu_cxx::__aligned_membuf.48"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.48"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.49"*
  ret %"struct.std::pair.49"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.48"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.48"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.48"* %0, %"struct.__gnu_cxx::__aligned_membuf.48"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.48"*, %"struct.__gnu_cxx::__aligned_membuf.48"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.48", %"struct.__gnu_cxx::__aligned_membuf.48"* %3, i32 0, i32 0
  %5 = bitcast [16 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.899
  %6 = load i32, i32* @y.900
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1159763830, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1159763830, label %18
    i32 969855787, label %38
    i32 1886191422, label %60
    i32 1816490510, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 969855787, i32 1816490510
  store i32 %37, i32* %14
  br label %70

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %40 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %40, align 8
  %41 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %42, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %39, %"struct.std::_Rb_tree_node_base"* %43) #3
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %39, i32 0, i32 0
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %2
  %46 = load i32, i32* @x.899
  %47 = load i32, i32* @y.900
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1886191422, i32 1816490510
  store i32 %59, i32* %14
  br label %70

; <label>:60:                                     ; preds = %15
  %61 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %61

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %64 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %64, align 8
  %65 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %64, align 8
  %66 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %66, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %63, %"struct.std::_Rb_tree_node_base"* %67) #3
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %63, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  store i32 969855787, i32* %14
  br label %70

; <label>:70:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %3, align 8
  %4 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node.47"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.903
  %9 = load i32, i32* @y.904
  %10 = sub i32 %8, -685084771
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -685084771
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1795639066, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %79
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1795639066, label %22
    i32 -714528788, label %30
    i32 -1758169584, label %61
    i32 1749956227, label %63
  ]

; <label>:21:                                     ; preds = %19
  br label %79

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -714528788, i32 1749956227
  store i32 %29, i32* %18
  br label %79

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::_Rb_tree.29"*, align 8
  %32 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %33 = alloca %"class.std::tuple"*, align 8
  %34 = alloca %"class.std::tuple.60"*, align 8
  %35 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %31, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %32, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %33, align 8
  store %"class.std::tuple.60"* %3, %"class.std::tuple.60"** %34, align 8
  %36 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %31, align 8
  %37 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree.29"* %36)
  store %"struct.std::_Rb_tree_node.47"* %37, %"struct.std::_Rb_tree_node.47"** %35, align 8
  %38 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %35, align 8
  %39 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %32, align 8
  %40 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %39) #3
  %41 = load %"class.std::tuple"*, %"class.std::tuple"** %33, align 8
  %42 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %41) #3
  %43 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %34, align 8
  %44 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %43) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"* %36, %"struct.std::_Rb_tree_node.47"* %38, %"struct.std::piecewise_construct_t"* dereferenceable(1) %40, %"class.std::tuple"* dereferenceable(8) %42, %"class.std::tuple.60"* dereferenceable(1) %44)
  %45 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %35, align 8
  store %"struct.std::_Rb_tree_node.47"* %45, %"struct.std::_Rb_tree_node.47"** %5
  %46 = load i32, i32* @x.903
  %47 = load i32, i32* @y.904
  %48 = add i32 %46, -455690919
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -455690919
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1758169584, i32 1749956227
  store i32 %60, i32* %18
  br label %79

; <label>:61:                                     ; preds = %19
  %62 = load volatile %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %5
  ret %"struct.std::_Rb_tree_node.47"* %62

; <label>:63:                                     ; preds = %19
  %64 = alloca %"class.std::_Rb_tree.29"*, align 8
  %65 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %66 = alloca %"class.std::tuple"*, align 8
  %67 = alloca %"class.std::tuple.60"*, align 8
  %68 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %64, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %65, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %66, align 8
  store %"class.std::tuple.60"* %3, %"class.std::tuple.60"** %67, align 8
  %69 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %64, align 8
  %70 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree.29"* %69)
  store %"struct.std::_Rb_tree_node.47"* %70, %"struct.std::_Rb_tree_node.47"** %68, align 8
  %71 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %68, align 8
  %72 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %65, align 8
  %73 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %72) #3
  %74 = load %"class.std::tuple"*, %"class.std::tuple"** %66, align 8
  %75 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %74) #3
  %76 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %67, align 8
  %77 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %76) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"* %69, %"struct.std::_Rb_tree_node.47"* %71, %"struct.std::piecewise_construct_t"* dereferenceable(1) %73, %"class.std::tuple"* dereferenceable(8) %75, %"class.std::tuple.60"* dereferenceable(1) %77)
  %78 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %68, align 8
  store i32 -714528788, i32* %18
  br label %79

; <label>:79:                                     ; preds = %63, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"struct.std::piecewise_construct_t"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.905
  %6 = load i32, i32* @y.906
  %7 = add i32 %5, -1419202086
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1419202086
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1664837514, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1664837514, label %19
    i32 551580066, label %39
    i32 -1682924596, label %57
    i32 1985220315, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 551580066, i32 1985220315
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %40, align 8
  %41 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %40, align 8
  store %"struct.std::piecewise_construct_t"* %41, %"struct.std::piecewise_construct_t"** %2
  %42 = load i32, i32* @x.905
  %43 = load i32, i32* @y.906
  %44 = sub i32 %42, 1051822856
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1051822856
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1682924596, i32 1985220315
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %2
  ret %"struct.std::piecewise_construct_t"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %60, align 8
  %61 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %60, align 8
  store i32 551580066, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  ret %"class.std::tuple"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::tuple.60"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.909
  %6 = load i32, i32* @y.910
  %7 = sub i32 %5, 335931128
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 335931128
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -88502622, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -88502622, label %19
    i32 -1652081659, label %27
    i32 2080766304, label %44
    i32 -2039061185, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1652081659, i32 -2039061185
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple.60"*, align 8
  store %"class.std::tuple.60"* %0, %"class.std::tuple.60"** %28, align 8
  %29 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %28, align 8
  store %"class.std::tuple.60"* %29, %"class.std::tuple.60"** %2
  %30 = load i32, i32* @x.909
  %31 = load i32, i32* @y.910
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 2080766304, i32 -2039061185
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile %"class.std::tuple.60"*, %"class.std::tuple.60"** %2
  ret %"class.std::tuple.60"* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca %"class.std::tuple.60"*, align 8
  store %"class.std::tuple.60"* %0, %"class.std::tuple.60"** %47, align 8
  %48 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %47, align 8
  store i32 -1652081659, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"struct.std::_Rb_tree_node_base"*
  %9 = alloca %"struct.std::_Rb_tree_node_base"*
  %10 = alloca %"class.std::_Rb_tree.29"*
  %11 = alloca %"struct.std::pair.55", align 8
  %12 = alloca %"struct.std::_Rb_tree_const_iterator.59", align 8
  %13 = alloca %"class.std::_Rb_tree.29"*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %16 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %17 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %18 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %19 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %20 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %21 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %22 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %23, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %13, align 8
  store i64* %2, i64** %14, align 8
  %24 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %13, align 8
  store %"class.std::_Rb_tree.29"* %24, %"class.std::_Rb_tree.29"** %10
  %25 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxxEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.59"* %12) #3
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %25, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %28 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %27, align 8
  store %"struct.std::_Rb_tree_node_base"* %28, %"struct.std::_Rb_tree_node_base"** %9
  %29 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %30 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.29"* %29) #3
  %31 = bitcast %"struct.std::_Rb_tree_node.47"* %30 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %31, %"struct.std::_Rb_tree_node_base"** %8
  %32 = alloca i32
  store i32 -1445202464, i32* %32
  br label %33

; <label>:33:                                     ; preds = %3, %504
  %34 = load i32, i32* %32
  switch i32 %34, label %35 [
    i32 -1445202464, label %36
    i32 615292290, label %41
    i32 757385272, label %46
    i32 -659848442, label %57
    i32 -273743118, label %60
    i32 1573760526, label %69
    i32 -919487493, label %79
    i32 1275982360, label %89
    i32 1118330246, label %94
    i32 83254925, label %122
    i32 -1995624425, label %159
    i32 -318604581, label %162
    i32 -1958744147, label %168
    i32 -283663803, label %170
    i32 -2133227431, label %173
    i32 2002343469, label %189
    i32 1026587456, label %213
    i32 -1730179606, label %214
    i32 -2119163299, label %229
    i32 -418948366, label %265
    i32 -986123795, label %268
    i32 730942882, label %296
    i32 1139955487, label %320
    i32 -2140839937, label %323
    i32 1381193332, label %326
    i32 1865435223, label %337
    i32 -1243116175, label %364
    i32 -866913928, label %396
    i32 1744176014, label %399
    i32 -224603514, label %401
    i32 561107684, label %404
    i32 -1229688900, label %413
    i32 243390244, label %428
    i32 -1810857197, label %456
    i32 -80658466, label %457
    i32 -694218950, label %460
    i32 2002269105, label %470
    i32 1142301632, label %479
    i32 -626766371, label %488
    i32 -1122455931, label %497
    i32 -1436459975, label %502
  ]

; <label>:35:                                     ; preds = %33
  br label %504

; <label>:36:                                     ; preds = %33
  %37 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9
  %38 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8
  %39 = icmp eq %"struct.std::_Rb_tree_node_base"* %37, %38
  %40 = select i1 %39, i32 615292290, i32 1573760526
  store i32 %40, i32* %32
  br label %504

; <label>:41:                                     ; preds = %33
  %42 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %43 = call i64 @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE4sizeEv(%"class.std::_Rb_tree.29"* %42) #3
  %44 = icmp ugt i64 %43, 0
  %45 = select i1 %44, i32 757385272, i32 -273743118
  store i32 %45, i32* %32
  br label %504

; <label>:46:                                     ; preds = %33
  %47 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %48 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %48, i32 0, i32 0
  %50 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %51 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree.29"* %50) #3
  %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
  %53 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %52)
  %54 = load i64*, i64** %14, align 8
  %55 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %49, i64* dereferenceable(8) %53, i64* dereferenceable(8) %54)
  %56 = select i1 %55, i32 -659848442, i32 -273743118
  store i32 %56, i32* %32
  br label %504

; <label>:57:                                     ; preds = %33
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %58 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %59 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree.29"* %58) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %11, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %16, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %59)
  store i32 -80658466, i32* %32
  br label %504

; <label>:60:                                     ; preds = %33
  %61 = load i64*, i64** %14, align 8
  %62 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %63 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.29"* %62, i64* dereferenceable(8) %61)
  %64 = bitcast %"struct.std::pair.55"* %11 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %65 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %64, i32 0, i32 0
  %66 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %63, 0
  store %"struct.std::_Rb_tree_node_base"* %66, %"struct.std::_Rb_tree_node_base"** %65, align 8
  %67 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %64, i32 0, i32 1
  %68 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %63, 1
  store %"struct.std::_Rb_tree_node_base"* %68, %"struct.std::_Rb_tree_node_base"** %67, align 8
  store i32 -80658466, i32* %32
  br label %504

; <label>:69:                                     ; preds = %33
  %70 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %71 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %71, i32 0, i32 0
  %73 = load i64*, i64** %14, align 8
  %74 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %76 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %75)
  %77 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %72, i64* dereferenceable(8) %73, i64* dereferenceable(8) %76)
  %78 = select i1 %77, i32 -919487493, i32 -1730179606
  store i32 %78, i32* %32
  br label %504

; <label>:79:                                     ; preds = %33
  %80 = bitcast %"struct.std::_Rb_tree_iterator.58"* %17 to i8*
  %81 = bitcast %"struct.std::_Rb_tree_iterator.58"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %83 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %82, align 8
  %84 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %85 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree.29"* %84) #3
  %86 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %85, align 8
  %87 = icmp eq %"struct.std::_Rb_tree_node_base"* %83, %86
  %88 = select i1 %87, i32 1275982360, i32 1118330246
  store i32 %88, i32* %32
  br label %504

; <label>:89:                                     ; preds = %33
  %90 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %91 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree.29"* %90) #3
  %92 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %93 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree.29"* %92) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %11, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %91, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %93)
  store i32 -80658466, i32* %32
  br label %504

; <label>:94:                                     ; preds = %33
  %95 = load i32, i32* @x.911
  %96 = load i32, i32* @y.912
  %97 = add i32 %95, 1740934643
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, 1740934643
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 false, true
  %108 = and i1 %105, false
  %109 = and i1 %103, %107
  %110 = and i1 %106, false
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 false, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 83254925, i32 -694218950
  store i32 %121, i32* %32
  br label %504

; <label>:122:                                    ; preds = %33
  %123 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %124 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %123, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %124, i32 0, i32 0
  %126 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.58"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator.58"* %17) #3
  %127 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %126, i32 0, i32 0
  %128 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %127, align 8
  %129 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %128)
  %130 = load i64*, i64** %14, align 8
  %131 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %125, i64* dereferenceable(8) %129, i64* dereferenceable(8) %130)
  store i1 %131, i1* %7
  %132 = load i32, i32* @x.911
  %133 = load i32, i32* @y.912
  %134 = add i32 %132, -331806532
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, -331806532
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 false, true
  %145 = and i1 %142, false
  %146 = and i1 %140, %144
  %147 = and i1 %143, false
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 false, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  %158 = select i1 %156, i32 -1995624425, i32 -694218950
  store i32 %158, i32* %32
  br label %504

; <label>:159:                                    ; preds = %33
  %160 = load volatile i1, i1* %7
  %161 = select i1 %160, i32 -318604581, i32 -2133227431
  store i32 %161, i32* %32
  br label %504

; <label>:162:                                    ; preds = %33
  %163 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %17, i32 0, i32 0
  %164 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %163, align 8
  %165 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %164) #3
  %166 = icmp eq %"struct.std::_Rb_tree_node.47"* %165, null
  %167 = select i1 %166, i32 -1958744147, i32 -283663803
  store i32 %167, i32* %32
  br label %504

; <label>:168:                                    ; preds = %33
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %169 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %17, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %11, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %169)
  store i32 -80658466, i32* %32
  br label %504

; <label>:170:                                    ; preds = %33
  %171 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %11, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %171, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %172)
  store i32 -80658466, i32* %32
  br label %504

; <label>:173:                                    ; preds = %33
  %174 = load i32, i32* @x.911
  %175 = load i32, i32* @y.912
  %176 = sub i32 %174, -317713756
  %177 = sub i32 %176, 1
  %178 = add i32 %177, -317713756
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = and i1 %182, %183
  %185 = xor i1 %182, %183
  %186 = or i1 %184, %185
  %187 = or i1 %182, %183
  %188 = select i1 %186, i32 2002343469, i32 2002269105
  store i32 %188, i32* %32
  br label %504

; <label>:189:                                    ; preds = %33
  %190 = load i64*, i64** %14, align 8
  %191 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %192 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.29"* %191, i64* dereferenceable(8) %190)
  %193 = bitcast %"struct.std::pair.55"* %11 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %194 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %193, i32 0, i32 0
  %195 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %192, 0
  store %"struct.std::_Rb_tree_node_base"* %195, %"struct.std::_Rb_tree_node_base"** %194, align 8
  %196 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %193, i32 0, i32 1
  %197 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %192, 1
  store %"struct.std::_Rb_tree_node_base"* %197, %"struct.std::_Rb_tree_node_base"** %196, align 8
  %198 = load i32, i32* @x.911
  %199 = load i32, i32* @y.912
  %200 = sub i32 %198, 1579870517
  %201 = sub i32 %200, 1
  %202 = add i32 %201, 1579870517
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  %212 = select i1 %210, i32 1026587456, i32 2002269105
  store i32 %212, i32* %32
  br label %504

; <label>:213:                                    ; preds = %33
  store i32 -80658466, i32* %32
  br label %504

; <label>:214:                                    ; preds = %33
  %215 = load i32, i32* @x.911
  %216 = load i32, i32* @y.912
  %217 = sub i32 0, 1
  %218 = add i32 %215, %217
  %219 = sub i32 %215, 1
  %220 = mul i32 %215, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %216, 10
  %224 = and i1 %222, %223
  %225 = xor i1 %222, %223
  %226 = or i1 %224, %225
  %227 = or i1 %222, %223
  %228 = select i1 %226, i32 -2119163299, i32 1142301632
  store i32 %228, i32* %32
  br label %504

; <label>:229:                                    ; preds = %33
  %230 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %231 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %230, i32 0, i32 0
  %232 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %231, i32 0, i32 0
  %233 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %234 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %233, align 8
  %235 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %234)
  %236 = load i64*, i64** %14, align 8
  %237 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %232, i64* dereferenceable(8) %235, i64* dereferenceable(8) %236)
  store i1 %237, i1* %6
  %238 = load i32, i32* @x.911
  %239 = load i32, i32* @y.912
  %240 = add i32 %238, -905712464
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, -905712464
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = xor i1 %246, true
  %249 = xor i1 %247, true
  %250 = xor i1 true, true
  %251 = and i1 %248, true
  %252 = and i1 %246, %250
  %253 = and i1 %249, true
  %254 = and i1 %247, %250
  %255 = or i1 %251, %252
  %256 = or i1 %253, %254
  %257 = xor i1 %255, %256
  %258 = or i1 %248, %249
  %259 = xor i1 %258, true
  %260 = or i1 true, %250
  %261 = and i1 %259, %260
  %262 = or i1 %257, %261
  %263 = or i1 %246, %247
  %264 = select i1 %262, i32 -418948366, i32 1142301632
  store i32 %264, i32* %32
  br label %504

; <label>:265:                                    ; preds = %33
  %266 = load volatile i1, i1* %6
  %267 = select i1 %266, i32 -986123795, i32 -1229688900
  store i32 %267, i32* %32
  br label %504

; <label>:268:                                    ; preds = %33
  %269 = load i32, i32* @x.911
  %270 = load i32, i32* @y.912
  %271 = add i32 %269, -1390099110
  %272 = sub i32 %271, 1
  %273 = sub i32 %272, -1390099110
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = xor i1 %277, true
  %280 = xor i1 %278, true
  %281 = xor i1 false, true
  %282 = and i1 %279, false
  %283 = and i1 %277, %281
  %284 = and i1 %280, false
  %285 = and i1 %278, %281
  %286 = or i1 %282, %283
  %287 = or i1 %284, %285
  %288 = xor i1 %286, %287
  %289 = or i1 %279, %280
  %290 = xor i1 %289, true
  %291 = or i1 false, %281
  %292 = and i1 %290, %291
  %293 = or i1 %288, %292
  %294 = or i1 %277, %278
  %295 = select i1 %293, i32 730942882, i32 -626766371
  store i32 %295, i32* %32
  br label %504

; <label>:296:                                    ; preds = %33
  %297 = bitcast %"struct.std::_Rb_tree_iterator.58"* %19 to i8*
  %298 = bitcast %"struct.std::_Rb_tree_iterator.58"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %297, i8* %298, i64 8, i32 8, i1 false)
  %299 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %300 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %299, align 8
  %301 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %302 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree.29"* %301) #3
  %303 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %302, align 8
  %304 = icmp eq %"struct.std::_Rb_tree_node_base"* %300, %303
  store i1 %304, i1* %5
  %305 = load i32, i32* @x.911
  %306 = load i32, i32* @y.912
  %307 = sub i32 %305, 868879562
  %308 = sub i32 %307, 1
  %309 = add i32 %308, 868879562
  %310 = sub i32 %305, 1
  %311 = mul i32 %305, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %306, 10
  %315 = and i1 %313, %314
  %316 = xor i1 %313, %314
  %317 = or i1 %315, %316
  %318 = or i1 %313, %314
  %319 = select i1 %317, i32 1139955487, i32 -626766371
  store i32 %319, i32* %32
  br label %504

; <label>:320:                                    ; preds = %33
  %321 = load volatile i1, i1* %5
  %322 = select i1 %321, i32 -2140839937, i32 1381193332
  store i32 %322, i32* %32
  br label %504

; <label>:323:                                    ; preds = %33
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %20, align 8
  %324 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %325 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree.29"* %324) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %11, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %20, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %325)
  store i32 -80658466, i32* %32
  br label %504

; <label>:326:                                    ; preds = %33
  %327 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %328 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %327, i32 0, i32 0
  %329 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %328, i32 0, i32 0
  %330 = load i64*, i64** %14, align 8
  %331 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.58"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv(%"struct.std::_Rb_tree_iterator.58"* %19) #3
  %332 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %331, i32 0, i32 0
  %333 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %332, align 8
  %334 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %333)
  %335 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %329, i64* dereferenceable(8) %330, i64* dereferenceable(8) %334)
  %336 = select i1 %335, i32 1865435223, i32 561107684
  store i32 %336, i32* %32
  br label %504

; <label>:337:                                    ; preds = %33
  %338 = load i32, i32* @x.911
  %339 = load i32, i32* @y.912
  %340 = sub i32 0, 1
  %341 = add i32 %338, %340
  %342 = sub i32 %338, 1
  %343 = mul i32 %338, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %339, 10
  %347 = xor i1 %345, true
  %348 = xor i1 %346, true
  %349 = xor i1 true, true
  %350 = and i1 %347, true
  %351 = and i1 %345, %349
  %352 = and i1 %348, true
  %353 = and i1 %346, %349
  %354 = or i1 %350, %351
  %355 = or i1 %352, %353
  %356 = xor i1 %354, %355
  %357 = or i1 %347, %348
  %358 = xor i1 %357, true
  %359 = or i1 true, %349
  %360 = and i1 %358, %359
  %361 = or i1 %356, %360
  %362 = or i1 %345, %346
  %363 = select i1 %361, i32 -1243116175, i32 -1122455931
  store i32 %363, i32* %32
  br label %504

; <label>:364:                                    ; preds = %33
  %365 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %366 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %365, align 8
  %367 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %366) #3
  %368 = icmp eq %"struct.std::_Rb_tree_node.47"* %367, null
  store i1 %368, i1* %4
  %369 = load i32, i32* @x.911
  %370 = load i32, i32* @y.912
  %371 = add i32 %369, 1885720382
  %372 = sub i32 %371, 1
  %373 = sub i32 %372, 1885720382
  %374 = sub i32 %369, 1
  %375 = mul i32 %369, %373
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %370, 10
  %379 = xor i1 %377, true
  %380 = xor i1 %378, true
  %381 = xor i1 false, true
  %382 = and i1 %379, false
  %383 = and i1 %377, %381
  %384 = and i1 %380, false
  %385 = and i1 %378, %381
  %386 = or i1 %382, %383
  %387 = or i1 %384, %385
  %388 = xor i1 %386, %387
  %389 = or i1 %379, %380
  %390 = xor i1 %389, true
  %391 = or i1 false, %381
  %392 = and i1 %390, %391
  %393 = or i1 %388, %392
  %394 = or i1 %377, %378
  %395 = select i1 %393, i32 -866913928, i32 -1122455931
  store i32 %395, i32* %32
  br label %504

; <label>:396:                                    ; preds = %33
  %397 = load volatile i1, i1* %4
  %398 = select i1 %397, i32 1744176014, i32 -224603514
  store i32 %398, i32* %32
  br label %504

; <label>:399:                                    ; preds = %33
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %400 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %11, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %21, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %400)
  store i32 -80658466, i32* %32
  br label %504

; <label>:401:                                    ; preds = %33
  %402 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %19, i32 0, i32 0
  %403 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %19, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %11, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %402, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %403)
  store i32 -80658466, i32* %32
  br label %504

; <label>:404:                                    ; preds = %33
  %405 = load i64*, i64** %14, align 8
  %406 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %407 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.29"* %406, i64* dereferenceable(8) %405)
  %408 = bitcast %"struct.std::pair.55"* %11 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %409 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %408, i32 0, i32 0
  %410 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %407, 0
  store %"struct.std::_Rb_tree_node_base"* %410, %"struct.std::_Rb_tree_node_base"** %409, align 8
  %411 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %408, i32 0, i32 1
  %412 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %407, 1
  store %"struct.std::_Rb_tree_node_base"* %412, %"struct.std::_Rb_tree_node_base"** %411, align 8
  store i32 -80658466, i32* %32
  br label %504

; <label>:413:                                    ; preds = %33
  %414 = load i32, i32* @x.911
  %415 = load i32, i32* @y.912
  %416 = sub i32 0, 1
  %417 = add i32 %414, %416
  %418 = sub i32 %414, 1
  %419 = mul i32 %414, %417
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %415, 10
  %423 = and i1 %421, %422
  %424 = xor i1 %421, %422
  %425 = or i1 %423, %424
  %426 = or i1 %421, %422
  %427 = select i1 %425, i32 243390244, i32 -1436459975
  store i32 %427, i32* %32
  br label %504

; <label>:428:                                    ; preds = %33
  %429 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %11, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %429, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %22)
  %430 = load i32, i32* @x.911
  %431 = load i32, i32* @y.912
  %432 = sub i32 0, 1
  %433 = add i32 %430, %432
  %434 = sub i32 %430, 1
  %435 = mul i32 %430, %433
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %431, 10
  %439 = xor i1 %437, true
  %440 = xor i1 %438, true
  %441 = xor i1 false, true
  %442 = and i1 %439, false
  %443 = and i1 %437, %441
  %444 = and i1 %440, false
  %445 = and i1 %438, %441
  %446 = or i1 %442, %443
  %447 = or i1 %444, %445
  %448 = xor i1 %446, %447
  %449 = or i1 %439, %440
  %450 = xor i1 %449, true
  %451 = or i1 false, %441
  %452 = and i1 %450, %451
  %453 = or i1 %448, %452
  %454 = or i1 %437, %438
  %455 = select i1 %453, i32 -1810857197, i32 -1436459975
  store i32 %455, i32* %32
  br label %504

; <label>:456:                                    ; preds = %33
  store i32 -80658466, i32* %32
  br label %504

; <label>:457:                                    ; preds = %33
  %458 = bitcast %"struct.std::pair.55"* %11 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %459 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %458, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %459

; <label>:460:                                    ; preds = %33
  %461 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %462 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %461, i32 0, i32 0
  %463 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %462, i32 0, i32 0
  %464 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.58"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator.58"* %17) #3
  %465 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %464, i32 0, i32 0
  %466 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %465, align 8
  %467 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %466)
  %468 = load i64*, i64** %14, align 8
  %469 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %463, i64* dereferenceable(8) %467, i64* dereferenceable(8) %468)
  store i32 83254925, i32* %32
  br label %504

; <label>:470:                                    ; preds = %33
  %471 = load i64*, i64** %14, align 8
  %472 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %473 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.29"* %472, i64* dereferenceable(8) %471)
  %474 = bitcast %"struct.std::pair.55"* %11 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %475 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %474, i32 0, i32 0
  %476 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %473, 0
  store %"struct.std::_Rb_tree_node_base"* %476, %"struct.std::_Rb_tree_node_base"** %475, align 8
  %477 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %474, i32 0, i32 1
  %478 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %473, 1
  store %"struct.std::_Rb_tree_node_base"* %478, %"struct.std::_Rb_tree_node_base"** %477, align 8
  store i32 2002343469, i32* %32
  br label %504

; <label>:479:                                    ; preds = %33
  %480 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %481 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %480, i32 0, i32 0
  %482 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %481, i32 0, i32 0
  %483 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %484 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %483, align 8
  %485 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %484)
  %486 = load i64*, i64** %14, align 8
  %487 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %482, i64* dereferenceable(8) %485, i64* dereferenceable(8) %486)
  store i32 -2119163299, i32* %32
  br label %504

; <label>:488:                                    ; preds = %33
  %489 = bitcast %"struct.std::_Rb_tree_iterator.58"* %19 to i8*
  %490 = bitcast %"struct.std::_Rb_tree_iterator.58"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %489, i8* %490, i64 8, i32 8, i1 false)
  %491 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %492 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %491, align 8
  %493 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %10
  %494 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree.29"* %493) #3
  %495 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %494, align 8
  %496 = icmp eq %"struct.std::_Rb_tree_node_base"* %492, %495
  store i32 730942882, i32* %32
  br label %504

; <label>:497:                                    ; preds = %33
  %498 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  %499 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %498, align 8
  %500 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %499) #3
  %501 = icmp eq %"struct.std::_Rb_tree_node.47"* %500, null
  store i32 -1243116175, i32* %32
  br label %504

; <label>:502:                                    ; preds = %33
  %503 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %15, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %11, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %503, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %22)
  store i32 243390244, i32* %32
  br label %504

; <label>:504:                                    ; preds = %502, %497, %488, %479, %470, %460, %456, %428, %413, %404, %401, %399, %396, %364, %337, %326, %323, %320, %296, %268, %265, %229, %214, %213, %189, %173, %170, %168, %162, %159, %122, %94, %89, %79, %69, %60, %57, %46, %41, %36, %35
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node.47"*) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca %"class.std::_Rb_tree.29"*
  %7 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %8 = alloca %"class.std::_Rb_tree.29"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %12 = alloca i8, align 1
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node.47"* %3, %"struct.std::_Rb_tree_node.47"** %11, align 8
  %13 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %8, align 8
  store %"class.std::_Rb_tree.29"* %13, %"class.std::_Rb_tree.29"** %6
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %5
  %15 = alloca i32
  store i32 386147935, i32* %15
  %16 = alloca i1
  br label %17

; <label>:17:                                     ; preds = %4, %63
  %18 = load i32, i32* %15
  switch i32 %18, label %19 [
    i32 386147935, label %20
    i32 -425917255, label %24
    i32 -1945973836, label %31
    i32 2010389086, label %40
  ]

; <label>:19:                                     ; preds = %17
  br label %63

; <label>:20:                                     ; preds = %17
  %21 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  %22 = icmp ne %"struct.std::_Rb_tree_node_base"* %21, null
  %23 = select i1 %22, i32 2010389086, i32 -425917255
  store i32 %23, i32* %15
  store i1 true, i1* %16
  br label %63

; <label>:24:                                     ; preds = %17
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %26 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %27 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.29"* %26) #3
  %28 = bitcast %"struct.std::_Rb_tree_node.47"* %27 to %"struct.std::_Rb_tree_node_base"*
  %29 = icmp eq %"struct.std::_Rb_tree_node_base"* %25, %28
  %30 = select i1 %29, i32 2010389086, i32 -1945973836
  store i32 %30, i32* %15
  store i1 true, i1* %16
  br label %63

; <label>:31:                                     ; preds = %17
  %32 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %33 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %11, align 8
  %36 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.47"* %35)
  %37 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %38 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %37)
  %39 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %34, i64* dereferenceable(8) %36, i64* dereferenceable(8) %38)
  store i32 2010389086, i32* %15
  store i1 %39, i1* %16
  br label %63

; <label>:40:                                     ; preds = %17
  %41 = load i1, i1* %16
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %12, align 1
  %43 = load i8, i8* %12, align 1
  %44 = trunc i8 %43 to i1
  %45 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %11, align 8
  %46 = bitcast %"struct.std::_Rb_tree_node.47"* %45 to %"struct.std::_Rb_tree_node_base"*
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %48 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %49 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %49, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %44, %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %50) #3
  %51 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %52 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %52, i32 0, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %54, -7519638389061106618
  %56 = add i64 %55, 1
  %57 = add i64 %56, -7519638389061106618
  %58 = add i64 %54, 1
  store i64 %57, i64* %53, align 8
  %59 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %11, align 8
  %60 = bitcast %"struct.std::_Rb_tree_node.47"* %59 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %7, %"struct.std::_Rb_tree_node_base"* %60) #3
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %7, i32 0, i32 0
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  ret %"struct.std::_Rb_tree_node_base"* %62

; <label>:63:                                     ; preds = %31, %24, %20, %19
  br label %17
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree.29"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %2, align 8
  %3 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.29"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE8allocateERS5_m(%"class.std::allocator.30"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node.47"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOxEESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::_Rb_tree.29"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.60"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %6, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %10, align 8
  %13 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node.47"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node.47"*
  %17 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.29"* %13) #3
  %18 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %19 = invoke %"struct.std::pair.49"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"* %18)
          to label %20 unwind label %28

; <label>:20:                                     ; preds = %5
  %21 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %22 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %21) #3
  %23 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %24 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %23) #3
  %25 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %26 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %25) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1) %17, %"struct.std::pair.49"* %19, %"struct.std::piecewise_construct_t"* dereferenceable(1) %22, %"class.std::tuple"* dereferenceable(8) %24, %"class.std::tuple.60"* dereferenceable(1) %26)
          to label %27 unwind label %28

; <label>:27:                                     ; preds = %20
  br label %137

; <label>:28:                                     ; preds = %20, %5
  %29 = load i32, i32* @x.917
  %30 = load i32, i32* @y.918
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %295

; <label>:42:                                     ; preds = %28, %295
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %11, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %12, align 4
  %46 = load i32, i32* @x.917
  %47 = load i32, i32* @y.918
  %48 = sub i32 %46, 2036170234
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 2036170234
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %295

; <label>:72:                                     ; preds = %42
  br label %73

; <label>:73:                                     ; preds = %72
  %74 = load i32, i32* @x.917
  %75 = load i32, i32* @y.918
  %76 = sub i32 %74, 1656272547
  %77 = sub i32 %76, 1
  %78 = add i32 %77, 1656272547
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %299

; <label>:100:                                    ; preds = %73, %299
  %101 = load i8*, i8** %11, align 8
  %102 = call i8* @__cxa_begin_catch(i8* %101) #3
  %103 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %104 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %13, %"struct.std::_Rb_tree_node.47"* %104) #3
  %105 = load i32, i32* @x.917
  %106 = load i32, i32* @y.918
  %107 = sub i32 %105, -1173927465
  %108 = sub i32 %107, 1
  %109 = add i32 %108, -1173927465
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %299

; <label>:131:                                    ; preds = %100
  invoke void @__cxa_rethrow() #14
          to label %240 unwind label %132

; <label>:132:                                    ; preds = %131
  %133 = landingpad { i8*, i32 }
          cleanup
  %134 = extractvalue { i8*, i32 } %133, 0
  store i8* %134, i8** %11, align 8
  %135 = extractvalue { i8*, i32 } %133, 1
  store i32 %135, i32* %12, align 4
  invoke void @__cxa_end_catch()
          to label %136 unwind label %196

; <label>:136:                                    ; preds = %132
  br label %138

; <label>:137:                                    ; preds = %27
  ret void

; <label>:138:                                    ; preds = %136
  %139 = load i32, i32* @x.917
  %140 = load i32, i32* @y.918
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 false, true
  %151 = and i1 %148, false
  %152 = and i1 %146, %150
  %153 = and i1 %149, false
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 false, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  br i1 %162, label %164, label %304

; <label>:164:                                    ; preds = %138, %304
  %165 = load i8*, i8** %11, align 8
  %166 = load i32, i32* %12, align 4
  %167 = insertvalue { i8*, i32 } undef, i8* %165, 0
  %168 = insertvalue { i8*, i32 } %167, i32 %166, 1
  %169 = load i32, i32* @x.917
  %170 = load i32, i32* @y.918
  %171 = add i32 %169, -1845718862
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -1845718862
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 false, true
  %182 = and i1 %179, false
  %183 = and i1 %177, %181
  %184 = and i1 %180, false
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 false, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  br i1 %193, label %195, label %304

; <label>:195:                                    ; preds = %164
  resume { i8*, i32 } %168

; <label>:196:                                    ; preds = %132
  %197 = load i32, i32* @x.917
  %198 = load i32, i32* @y.918
  %199 = add i32 %197, -1856511296
  %200 = sub i32 %199, 1
  %201 = sub i32 %200, -1856511296
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  br i1 %209, label %211, label %309

; <label>:211:                                    ; preds = %196, %309
  %212 = landingpad { i8*, i32 }
          catch i8* null
  %213 = extractvalue { i8*, i32 } %212, 0
  call void @__clang_call_terminate(i8* %213) #12
  %214 = load i32, i32* @x.917
  %215 = load i32, i32* @y.918
  %216 = sub i32 0, 1
  %217 = add i32 %214, %216
  %218 = sub i32 %214, 1
  %219 = mul i32 %214, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %215, 10
  %223 = xor i1 %221, true
  %224 = xor i1 %222, true
  %225 = xor i1 false, true
  %226 = and i1 %223, false
  %227 = and i1 %221, %225
  %228 = and i1 %224, false
  %229 = and i1 %222, %225
  %230 = or i1 %226, %227
  %231 = or i1 %228, %229
  %232 = xor i1 %230, %231
  %233 = or i1 %223, %224
  %234 = xor i1 %233, true
  %235 = or i1 false, %225
  %236 = and i1 %234, %235
  %237 = or i1 %232, %236
  %238 = or i1 %221, %222
  br i1 %237, label %239, label %309

; <label>:239:                                    ; preds = %211
  unreachable

; <label>:240:                                    ; preds = %131
  %241 = load i32, i32* @x.917
  %242 = load i32, i32* @y.918
  %243 = add i32 %241, -275073828
  %244 = sub i32 %243, 1
  %245 = sub i32 %244, -275073828
  %246 = sub i32 %241, 1
  %247 = mul i32 %241, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %242, 10
  %251 = xor i1 %249, true
  %252 = xor i1 %250, true
  %253 = xor i1 true, true
  %254 = and i1 %251, true
  %255 = and i1 %249, %253
  %256 = and i1 %252, true
  %257 = and i1 %250, %253
  %258 = or i1 %254, %255
  %259 = or i1 %256, %257
  %260 = xor i1 %258, %259
  %261 = or i1 %251, %252
  %262 = xor i1 %261, true
  %263 = or i1 true, %253
  %264 = and i1 %262, %263
  %265 = or i1 %260, %264
  %266 = or i1 %249, %250
  br i1 %265, label %267, label %312

; <label>:267:                                    ; preds = %240, %312
  %268 = load i32, i32* @x.917
  %269 = load i32, i32* @y.918
  %270 = sub i32 %268, -1483463387
  %271 = sub i32 %270, 1
  %272 = add i32 %271, -1483463387
  %273 = sub i32 %268, 1
  %274 = mul i32 %268, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %269, 10
  %278 = xor i1 %276, true
  %279 = xor i1 %277, true
  %280 = xor i1 true, true
  %281 = and i1 %278, true
  %282 = and i1 %276, %280
  %283 = and i1 %279, true
  %284 = and i1 %277, %280
  %285 = or i1 %281, %282
  %286 = or i1 %283, %284
  %287 = xor i1 %285, %286
  %288 = or i1 %278, %279
  %289 = xor i1 %288, true
  %290 = or i1 true, %280
  %291 = and i1 %289, %290
  %292 = or i1 %287, %291
  %293 = or i1 %276, %277
  br i1 %292, label %294, label %312

; <label>:294:                                    ; preds = %267
  unreachable

; <label>:295:                                    ; preds = %42, %28
  %296 = landingpad { i8*, i32 }
          catch i8* null
  %297 = extractvalue { i8*, i32 } %296, 0
  store i8* %297, i8** %11, align 8
  %298 = extractvalue { i8*, i32 } %296, 1
  store i32 %298, i32* %12, align 4
  br label %42

; <label>:299:                                    ; preds = %100, %73
  %300 = load i8*, i8** %11, align 8
  %301 = call i8* @__cxa_begin_catch(i8* %300) #3
  %302 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %303 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %13, %"struct.std::_Rb_tree_node.47"* %303) #3
  br label %100

; <label>:304:                                    ; preds = %164, %138
  %305 = load i8*, i8** %11, align 8
  %306 = load i32, i32* %12, align 4
  %307 = insertvalue { i8*, i32 } undef, i8* %305, 0
  %308 = insertvalue { i8*, i32 } %307, i32 %306, 1
  br label %164

; <label>:309:                                    ; preds = %211, %196
  %310 = landingpad { i8*, i32 }
          catch i8* null
  %311 = extractvalue { i8*, i32 } %310, 0
  call void @__clang_call_terminate(i8* %311) #12
  br label %211

; <label>:312:                                    ; preds = %267, %240
  br label %267
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE8allocateERS5_m(%"class.std::allocator.30"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.47"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.919
  %7 = load i32, i32* @y.920
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 966204623, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 966204623, label %19
    i32 -874607576, label %39
    i32 -1808946195, label %61
    i32 464231203, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -874607576, i32 464231203
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.30"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %40, align 8
  %43 = bitcast %"class.std::allocator.30"* %42 to %"class.__gnu_cxx::new_allocator.31"*
  %44 = load i64, i64* %41, align 8
  %45 = call %"struct.std::_Rb_tree_node.47"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"* %43, i64 %44, i8* null)
  store %"struct.std::_Rb_tree_node.47"* %45, %"struct.std::_Rb_tree_node.47"** %3
  %46 = load i32, i32* @x.919
  %47 = load i32, i32* @y.920
  %48 = add i32 %46, -60093753
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -60093753
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1808946195, i32 464231203
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %3
  ret %"struct.std::_Rb_tree_node.47"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator.30"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %64, align 8
  %67 = bitcast %"class.std::allocator.30"* %66 to %"class.__gnu_cxx::new_allocator.31"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"struct.std::_Rb_tree_node.47"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"* %67, i64 %68, i8* null)
  store i32 -874607576, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_node.47"*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.921
  %10 = load i32, i32* @y.922
  %11 = sub i32 %9, -1246459405
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -1246459405
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 1438285346, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %137
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1438285346, label %23
    i32 -1494076386, label %43
    i32 499540714, label %79
    i32 -1871428644, label %82
    i32 1833655215, label %83
    i32 -436834482, label %98
    i32 -2047820089, label %118
    i32 -1934798441, label %120
    i32 -746053975, label %128
  ]

; <label>:22:                                     ; preds = %20
  br label %137

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1494076386, i32 -1934798441
  store i32 %42, i32* %19
  br label %137

; <label>:43:                                     ; preds = %20
  %44 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %6
  %46 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %44, align 8
  %47 = load volatile i64*, i64** %6
  store i64 %1, i64* %47, align 8
  store i8* %2, i8** %46, align 8
  %48 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %44, align 8
  %49 = load volatile i64*, i64** %6
  %50 = load i64, i64* %49, align 8
  %51 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"* %48) #3
  %52 = icmp ugt i64 %50, %51
  store i1 %52, i1* %5
  %53 = load i32, i32* @x.921
  %54 = load i32, i32* @y.922
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 499540714, i32 -1934798441
  store i32 %78, i32* %19
  br label %137

; <label>:79:                                     ; preds = %20
  %80 = load volatile i1, i1* %5
  %81 = select i1 %80, i32 -1871428644, i32 1833655215
  store i32 %81, i32* %19
  br label %137

; <label>:82:                                     ; preds = %20
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:83:                                     ; preds = %20
  %84 = load i32, i32* @x.921
  %85 = load i32, i32* @y.922
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 -436834482, i32 -746053975
  store i32 %97, i32* %19
  br label %137

; <label>:98:                                     ; preds = %20
  %99 = load volatile i64*, i64** %6
  %100 = load i64, i64* %99, align 8
  %101 = mul i64 %100, 48
  %102 = call i8* @_Znwm(i64 %101)
  %103 = bitcast i8* %102 to %"struct.std::_Rb_tree_node.47"*
  store %"struct.std::_Rb_tree_node.47"* %103, %"struct.std::_Rb_tree_node.47"** %4
  %104 = load i32, i32* @x.921
  %105 = load i32, i32* @y.922
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  %117 = select i1 %115, i32 -2047820089, i32 -746053975
  store i32 %117, i32* %19
  br label %137

; <label>:118:                                    ; preds = %20
  %119 = load volatile %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %4
  ret %"struct.std::_Rb_tree_node.47"* %119

; <label>:120:                                    ; preds = %20
  %121 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %122 = alloca i64, align 8
  %123 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %121, align 8
  store i64 %1, i64* %122, align 8
  store i8* %2, i8** %123, align 8
  %124 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %121, align 8
  %125 = load i64, i64* %122, align 8
  %126 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"* %124) #3
  %127 = icmp ugt i64 %125, %126
  store i32 -1494076386, i32* %19
  br label %137

; <label>:128:                                    ; preds = %20
  %129 = load volatile i64*, i64** %6
  %130 = load i64, i64* %129, align 8
  %131 = shl i64 %130, 48
  %132 = shl i64 %130, 48
  %133 = shl i64 %130, 48
  %134 = mul i64 %130, 48
  %135 = call i8* @_Znwm(i64 %134)
  %136 = bitcast i8* %135 to %"struct.std::_Rb_tree_node.47"*
  store i32 -436834482, i32* %19
  br label %137

; <label>:137:                                    ; preds = %128, %120, %98, %83, %79, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.923
  %5 = load i32, i32* @y.924
  %6 = add i32 %4, 809509946
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 809509946
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -301893912, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -301893912, label %18
    i32 -642882222, label %26
    i32 1247576802, label %56
    i32 -1609450118, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -642882222, i32 -1609450118
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %27, align 8
  %29 = load i32, i32* @x.923
  %30 = load i32, i32* @y.924
  %31 = add i32 %29, -998995530
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -998995530
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1247576802, i32 -1609450118
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 384307168202282325

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %58, align 8
  store i32 -642882222, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1), %"struct.std::pair.49"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.925
  %9 = load i32, i32* @y.926
  %10 = add i32 %8, 951526822
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 951526822
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1666869089, i32* %18
  br label %19

; <label>:19:                                     ; preds = %5, %88
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1666869089, label %22
    i32 2031134926, label %30
    i32 230897834, label %72
    i32 -123261045, label %73
  ]

; <label>:21:                                     ; preds = %19
  br label %88

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 2031134926, i32 -123261045
  store i32 %29, i32* %18
  br label %88

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::allocator.30"*, align 8
  %32 = alloca %"struct.std::pair.49"*, align 8
  %33 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %34 = alloca %"class.std::tuple"*, align 8
  %35 = alloca %"class.std::tuple.60"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %31, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %32, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %33, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %34, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %35, align 8
  %36 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %31, align 8
  %37 = bitcast %"class.std::allocator.30"* %36 to %"class.__gnu_cxx::new_allocator.31"*
  %38 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %32, align 8
  %39 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %33, align 8
  %40 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %39) #3
  %41 = load %"class.std::tuple"*, %"class.std::tuple"** %34, align 8
  %42 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %41) #3
  %43 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %35, align 8
  %44 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %43) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"* %37, %"struct.std::pair.49"* %38, %"struct.std::piecewise_construct_t"* dereferenceable(1) %40, %"class.std::tuple"* dereferenceable(8) %42, %"class.std::tuple.60"* dereferenceable(1) %44)
  %45 = load i32, i32* @x.925
  %46 = load i32, i32* @y.926
  %47 = add i32 %45, -327193012
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -327193012
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 230897834, i32 -123261045
  store i32 %71, i32* %18
  br label %88

; <label>:72:                                     ; preds = %19
  ret void

; <label>:73:                                     ; preds = %19
  %74 = alloca %"class.std::allocator.30"*, align 8
  %75 = alloca %"struct.std::pair.49"*, align 8
  %76 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %77 = alloca %"class.std::tuple"*, align 8
  %78 = alloca %"class.std::tuple.60"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %74, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %75, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %76, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %77, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %78, align 8
  %79 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %74, align 8
  %80 = bitcast %"class.std::allocator.30"* %79 to %"class.__gnu_cxx::new_allocator.31"*
  %81 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %75, align 8
  %82 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %76, align 8
  %83 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %82) #3
  %84 = load %"class.std::tuple"*, %"class.std::tuple"** %77, align 8
  %85 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %84) #3
  %86 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %78, align 8
  %87 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %86) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"* %80, %"struct.std::pair.49"* %81, %"struct.std::piecewise_construct_t"* dereferenceable(1) %83, %"class.std::tuple"* dereferenceable(8) %85, %"class.std::tuple.60"* dereferenceable(1) %87)
  store i32 2031134926, i32* %18
  br label %88

; <label>:88:                                     ; preds = %73, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOxEESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"*, %"struct.std::pair.49"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.927
  %9 = load i32, i32* @y.928
  %10 = sub i32 %8, -1024619201
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1024619201
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1026634049, i32* %18
  br label %19

; <label>:19:                                     ; preds = %5, %92
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1026634049, label %22
    i32 -1514368450, label %30
    i32 217951363, label %68
    i32 283886728, label %69
  ]

; <label>:21:                                     ; preds = %19
  br label %92

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1514368450, i32 283886728
  store i32 %29, i32* %18
  br label %92

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %32 = alloca %"struct.std::pair.49"*, align 8
  %33 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %34 = alloca %"class.std::tuple"*, align 8
  %35 = alloca %"class.std::tuple.60"*, align 8
  %36 = alloca %"struct.std::piecewise_construct_t", align 1
  %37 = alloca %"class.std::tuple", align 8
  %38 = alloca %"class.std::tuple.60", align 1
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %31, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %32, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %33, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %34, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %35, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %31, align 8
  %40 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %32, align 8
  %41 = bitcast %"struct.std::pair.49"* %40 to i8*
  %42 = bitcast i8* %41 to %"struct.std::pair.49"*
  %43 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %33, align 8
  %44 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %43) #3
  %45 = load %"class.std::tuple"*, %"class.std::tuple"** %34, align 8
  %46 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %45) #3
  call void @_ZNSt5tupleIJOxEEC2EOS1_(%"class.std::tuple"* %37, %"class.std::tuple"* dereferenceable(8) %46) #3
  %47 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %35, align 8
  %48 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %47) #3
  %49 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %37, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %50, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  call void @_ZNSt4pairIKxxEC2IJOxEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.49"* %42, i64* %52)
  %53 = load i32, i32* @x.927
  %54 = load i32, i32* @y.928
  %55 = sub i32 %53, -1284919352
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1284919352
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 217951363, i32 283886728
  store i32 %67, i32* %18
  br label %92

; <label>:68:                                     ; preds = %19
  ret void

; <label>:69:                                     ; preds = %19
  %70 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %71 = alloca %"struct.std::pair.49"*, align 8
  %72 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %73 = alloca %"class.std::tuple"*, align 8
  %74 = alloca %"class.std::tuple.60"*, align 8
  %75 = alloca %"struct.std::piecewise_construct_t", align 1
  %76 = alloca %"class.std::tuple", align 8
  %77 = alloca %"class.std::tuple.60", align 1
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %70, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %71, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %72, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %73, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %74, align 8
  %78 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %70, align 8
  %79 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %71, align 8
  %80 = bitcast %"struct.std::pair.49"* %79 to i8*
  %81 = bitcast i8* %80 to %"struct.std::pair.49"*
  %82 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %72, align 8
  %83 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %82) #3
  %84 = load %"class.std::tuple"*, %"class.std::tuple"** %73, align 8
  %85 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJOxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::tuple"* dereferenceable(8) %84) #3
  call void @_ZNSt5tupleIJOxEEC2EOS1_(%"class.std::tuple"* %76, %"class.std::tuple"* dereferenceable(8) %85) #3
  %86 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %74, align 8
  %87 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %86) #3
  %88 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %76, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %89, i32 0, i32 0
  %91 = load i64*, i64** %90, align 8
  call void @_ZNSt4pairIKxxEC2IJOxEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.49"* %81, i64* %91)
  store i32 -1514368450, i32* %18
  br label %92

; <label>:92:                                     ; preds = %69, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJOxEEC2EOS1_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = bitcast %"class.std::tuple"* %7 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJOxEEC2EOS1_(%"struct.std::_Tuple_impl"* %6, %"struct.std::_Tuple_impl"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJOxEJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.49"*, i64*) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.931
  %6 = load i32, i32* @y.932
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2108395023, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %88
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2108395023, label %18
    i32 -880227294, label %38
    i32 -251612913, label %76
    i32 -1584838956, label %77
  ]

; <label>:17:                                     ; preds = %15
  br label %88

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -880227294, i32 -1584838956
  store i32 %37, i32* %14
  br label %88

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::piecewise_construct_t", align 1
  %40 = alloca %"class.std::tuple", align 8
  %41 = alloca %"class.std::tuple.60", align 1
  %42 = alloca %"struct.std::pair.49"*, align 8
  %43 = alloca %"struct.std::_Index_tuple", align 1
  %44 = alloca %"struct.std::_Index_tuple.62", align 1
  %45 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %40, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %46, i32 0, i32 0
  store i64* %1, i64** %47, align 8
  store %"struct.std::pair.49"* %0, %"struct.std::pair.49"** %42, align 8
  %48 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %42, align 8
  call void @_ZNSt4pairIKxxEC2IJOxEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.49"* %48, %"class.std::tuple"* dereferenceable(8) %40, %"class.std::tuple.60"* dereferenceable(1) %41)
  %49 = load i32, i32* @x.931
  %50 = load i32, i32* @y.932
  %51 = sub i32 %49, 959148010
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 959148010
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -251612913, i32 -1584838956
  store i32 %75, i32* %14
  br label %88

; <label>:76:                                     ; preds = %15
  ret void

; <label>:77:                                     ; preds = %15
  %78 = alloca %"struct.std::piecewise_construct_t", align 1
  %79 = alloca %"class.std::tuple", align 8
  %80 = alloca %"class.std::tuple.60", align 1
  %81 = alloca %"struct.std::pair.49"*, align 8
  %82 = alloca %"struct.std::_Index_tuple", align 1
  %83 = alloca %"struct.std::_Index_tuple.62", align 1
  %84 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %79, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %85, i32 0, i32 0
  store i64* %1, i64** %86, align 8
  store %"struct.std::pair.49"* %0, %"struct.std::pair.49"** %81, align 8
  %87 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %81, align 8
  call void @_ZNSt4pairIKxxEC2IJOxEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.49"* %87, %"class.std::tuple"* dereferenceable(8) %79, %"class.std::tuple.60"* dereferenceable(1) %80)
  store i32 -880227294, i32* %14
  br label %88

; <label>:88:                                     ; preds = %77, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJOxEEC2EOS1_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.933
  %4 = load i32, i32* @y.934
  %5 = sub i32 %3, 862540644
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 862540644
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %73

; <label>:17:                                     ; preds = %2, %73
  %18 = alloca %"struct.std::_Tuple_impl"*, align 8
  %19 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %18, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %19, align 8
  %20 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %18, align 8
  %21 = bitcast %"struct.std::_Tuple_impl"* %20 to %"struct.std::_Head_base"*
  %22 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %19, align 8
  %23 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %22) #3
  %24 = call dereferenceable(8) i64* @_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %23) #3
  %25 = load i32, i32* @x.933
  %26 = load i32, i32* @y.934
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %73

; <label>:38:                                     ; preds = %17
  invoke void @_ZNSt10_Head_baseILm0EOxLb0EEC2IxEEOT_(%"struct.std::_Head_base"* %21, i64* dereferenceable(8) %24)
          to label %39 unwind label %40

; <label>:39:                                     ; preds = %38
  ret void

; <label>:40:                                     ; preds = %38
  %41 = load i32, i32* @x.933
  %42 = load i32, i32* @y.934
  %43 = sub i32 %41, -1668161789
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1668161789
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %81

; <label>:55:                                     ; preds = %40, %81
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #12
  %58 = load i32, i32* @x.933
  %59 = load i32, i32* @y.934
  %60 = add i32 %58, -2132314130
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -2132314130
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %81

; <label>:72:                                     ; preds = %55
  unreachable

; <label>:73:                                     ; preds = %17, %2
  %74 = alloca %"struct.std::_Tuple_impl"*, align 8
  %75 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %74, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %75, align 8
  %76 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %74, align 8
  %77 = bitcast %"struct.std::_Tuple_impl"* %76 to %"struct.std::_Head_base"*
  %78 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %75, align 8
  %79 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %78) #3
  %80 = call dereferenceable(8) i64* @_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %79) #3
  br label %17

; <label>:81:                                     ; preds = %55, %40
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  call void @__clang_call_terminate(i8* %83) #12
  br label %55
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.935
  %6 = load i32, i32* @y.936
  %7 = add i32 %5, 2021448216
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2021448216
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1634948469, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1634948469, label %19
    i32 -1354142719, label %27
    i32 -16125409, label %45
    i32 -30252318, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1354142719, i32 -30252318
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.935
  %31 = load i32, i32* @y.936
  %32 = sub i32 %30, -1982482322
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1982482322
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -16125409, i32 -30252318
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile i64*, i64** %2
  ret i64* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca i64*, align 8
  store i64* %0, i64** %48, align 8
  %49 = load i64*, i64** %48, align 8
  store i32 -1354142719, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.937
  %6 = load i32, i32* @y.938
  %7 = sub i32 %5, 344068155
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 344068155
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1335084735, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1335084735, label %19
    i32 1686766133, label %27
    i32 -1372913091, label %47
    i32 -2053802152, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1686766133, i32 -2053802152
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %28, align 8
  %29 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %28, align 8
  %30 = bitcast %"struct.std::_Tuple_impl"* %29 to %"struct.std::_Head_base"*
  %31 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0EOxLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8) %30) #3
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.937
  %33 = load i32, i32* @y.938
  %34 = add i32 %32, -673914100
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -673914100
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1372913091, i32 -2053802152
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64*, i64** %2
  ret i64* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %50, align 8
  %51 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %50, align 8
  %52 = bitcast %"struct.std::_Tuple_impl"* %51 to %"struct.std::_Head_base"*
  %53 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0EOxLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8) %52) #3
  store i32 1686766133, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0EOxLb0EEC2IxEEOT_(%"struct.std::_Head_base"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.939
  %6 = load i32, i32* @y.940
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -121757576, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -121757576, label %18
    i32 1202121837, label %38
    i32 -62433279, label %72
    i32 -585182914, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1202121837, i32 -585182914
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Head_base"*, align 8
  %40 = alloca i64*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %39, align 8
  store i64* %1, i64** %40, align 8
  %41 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %41, i32 0, i32 0
  %43 = load i64*, i64** %40, align 8
  %44 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %43) #3
  store i64* %44, i64** %42, align 8
  %45 = load i32, i32* @x.939
  %46 = load i32, i32* @y.940
  %47 = add i32 %45, -1358085332
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1358085332
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -62433279, i32 -585182914
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Head_base"*, align 8
  %75 = alloca i64*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %74, align 8
  store i64* %1, i64** %75, align 8
  %76 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %74, align 8
  %77 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %76, i32 0, i32 0
  %78 = load i64*, i64** %75, align 8
  %79 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %78) #3
  store i64* %79, i64** %77, align 8
  store i32 1202121837, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0EOxLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJOxEJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.49"*, %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.945
  %7 = load i32, i32* @y.946
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 667593143, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 667593143, label %19
    i32 1292887108, label %39
    i32 -1240822057, label %67
    i32 -1703984437, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1292887108, i32 -1703984437
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Index_tuple", align 1
  %41 = alloca %"struct.std::_Index_tuple.62", align 1
  %42 = alloca %"struct.std::pair.49"*, align 8
  %43 = alloca %"class.std::tuple"*, align 8
  %44 = alloca %"class.std::tuple.60"*, align 8
  store %"struct.std::pair.49"* %0, %"struct.std::pair.49"** %42, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %43, align 8
  store %"class.std::tuple.60"* %2, %"class.std::tuple.60"** %44, align 8
  %45 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %42, align 8
  %46 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %45, i32 0, i32 0
  %47 = load %"class.std::tuple"*, %"class.std::tuple"** %43, align 8
  %48 = call dereferenceable(8) i64* @_ZSt3getILm0EJOxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_(%"class.std::tuple"* dereferenceable(8) %47) #3
  %49 = call dereferenceable(8) i64* @_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %48) #3
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  %51 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %45, i32 0, i32 1
  store i64 0, i64* %51, align 8
  %52 = load i32, i32* @x.945
  %53 = load i32, i32* @y.946
  %54 = sub i32 %52, -1316245778
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1316245778
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -1240822057, i32 -1703984437
  store i32 %66, i32* %15
  br label %81

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::_Index_tuple", align 1
  %70 = alloca %"struct.std::_Index_tuple.62", align 1
  %71 = alloca %"struct.std::pair.49"*, align 8
  %72 = alloca %"class.std::tuple"*, align 8
  %73 = alloca %"class.std::tuple.60"*, align 8
  store %"struct.std::pair.49"* %0, %"struct.std::pair.49"** %71, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %72, align 8
  store %"class.std::tuple.60"* %2, %"class.std::tuple.60"** %73, align 8
  %74 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %71, align 8
  %75 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %74, i32 0, i32 0
  %76 = load %"class.std::tuple"*, %"class.std::tuple"** %72, align 8
  %77 = call dereferenceable(8) i64* @_ZSt3getILm0EJOxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_(%"class.std::tuple"* dereferenceable(8) %76) #3
  %78 = call dereferenceable(8) i64* @_ZSt7forwardIOxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %77) #3
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %75, align 8
  %80 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %74, i32 0, i32 1
  store i64 0, i64* %80, align 8
  store i32 1292887108, i32* %15
  br label %81

; <label>:81:                                     ; preds = %68, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3getILm0EJOxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS5_(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.947
  %6 = load i32, i32* @y.948
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -518934048, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -518934048, label %18
    i32 -412463161, label %38
    i32 -1608751291, label %57
    i32 1618007664, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -412463161, i32 1618007664
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %39, align 8
  %40 = load %"class.std::tuple"*, %"class.std::tuple"** %39, align 8
  %41 = bitcast %"class.std::tuple"* %40 to %"struct.std::_Tuple_impl"*
  %42 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0EOxJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %41) #3
  store i64* %42, i64** %2
  %43 = load i32, i32* @x.947
  %44 = load i32, i32* @y.948
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1608751291, i32 1618007664
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %60, align 8
  %61 = load %"class.std::tuple"*, %"class.std::tuple"** %60, align 8
  %62 = bitcast %"class.std::tuple"* %61 to %"struct.std::_Tuple_impl"*
  %63 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0EOxJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %62) #3
  store i32 -412463161, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt12__get_helperILm0EOxJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.949
  %6 = load i32, i32* @y.950
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -975452361, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -975452361, label %18
    i32 1885261693, label %38
    i32 802375839, label %57
    i32 -566042774, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1885261693, i32 -566042774
  store i32 %37, i32* %14
  br label %63

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %39, align 8
  %40 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %39, align 8
  %41 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %40) #3
  store i64* %41, i64** %2
  %42 = load i32, i32* @x.949
  %43 = load i32, i32* @y.950
  %44 = add i32 %42, 1836615509
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1836615509
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 802375839, i32 -566042774
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %60, align 8
  %61 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %60, align 8
  %62 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJOxEE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(8) %61) #3
  store i32 1885261693, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxxEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.59"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.59"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.59"* %0, %"struct.std::_Rb_tree_const_iterator.59"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator.59"*, %"struct.std::_Rb_tree_const_iterator.59"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE4sizeEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %2, align 8
  %3 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(16) %"struct.std::pair.49"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"* %3, %"struct.std::pair.49"* dereferenceable(16) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %2, align 8
  %3 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 3
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.29"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Rb_tree_node.47"*
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree.29"*
  %7 = alloca %"struct.std::pair.55", align 8
  %8 = alloca %"class.std::_Rb_tree.29"*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %15 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %8, align 8
  store i64* %1, i64** %9, align 8
  %16 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %8, align 8
  store %"class.std::_Rb_tree.29"* %16, %"class.std::_Rb_tree.29"** %6
  %17 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %18 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.29"* %17) #3
  store %"struct.std::_Rb_tree_node.47"* %18, %"struct.std::_Rb_tree_node.47"** %10, align 8
  %19 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %20 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.29"* %19) #3
  store %"struct.std::_Rb_tree_node.47"* %20, %"struct.std::_Rb_tree_node.47"** %11, align 8
  store i8 1, i8* %12, align 1
  %21 = alloca i32
  store i32 1120910134, i32* %21
  %22 = alloca %"struct.std::_Rb_tree_node.47"*
  br label %23

; <label>:23:                                     ; preds = %2, %276
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 1120910134, label %26
    i32 -768348712, label %53
    i32 -346214051, label %71
    i32 929067665, label %74
    i32 1799680173, label %87
    i32 -1162517137, label %91
    i32 -1132234727, label %119
    i32 1620034249, label %138
    i32 -1980190345, label %140
    i32 1042928827, label %142
    i32 370526503, label %148
    i32 1737724108, label %164
    i32 -926739160, label %196
    i32 1696022589, label %199
    i32 -679614488, label %200
    i32 -1428690013, label %227
    i32 -885515314, label %244
    i32 -634611113, label %245
    i32 1458307252, label %246
    i32 -1113175022, label %256
    i32 -607708275, label %257
    i32 832858474, label %259
    i32 -56140974, label %262
    i32 1054146877, label %265
    i32 1493222897, label %269
    i32 -1042593249, label %274
  ]

; <label>:25:                                     ; preds = %23
  br label %276

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* @x.959
  %28 = load i32, i32* @y.960
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -768348712, i32 -56140974
  store i32 %52, i32* %21
  br label %276

; <label>:53:                                     ; preds = %23
  %54 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %10, align 8
  %55 = icmp ne %"struct.std::_Rb_tree_node.47"* %54, null
  store i1 %55, i1* %5
  %56 = load i32, i32* @x.959
  %57 = load i32, i32* @y.960
  %58 = add i32 %56, -194873042
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -194873042
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -346214051, i32 -56140974
  store i32 %70, i32* %21
  br label %276

; <label>:71:                                     ; preds = %23
  %72 = load volatile i1, i1* %5
  %73 = select i1 %72, i32 929067665, i32 1042928827
  store i32 %73, i32* %21
  br label %276

; <label>:74:                                     ; preds = %23
  %75 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %10, align 8
  store %"struct.std::_Rb_tree_node.47"* %75, %"struct.std::_Rb_tree_node.47"** %11, align 8
  %76 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %77 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %77, i32 0, i32 0
  %79 = load i64*, i64** %9, align 8
  %80 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %10, align 8
  %81 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.47"* %80)
  %82 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %78, i64* dereferenceable(8) %79, i64* dereferenceable(8) %81)
  %83 = zext i1 %82 to i8
  store i8 %83, i8* %12, align 1
  %84 = load i8, i8* %12, align 1
  %85 = trunc i8 %84 to i1
  %86 = select i1 %85, i32 1799680173, i32 -1162517137
  store i32 %86, i32* %21
  br label %276

; <label>:87:                                     ; preds = %23
  %88 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %10, align 8
  %89 = bitcast %"struct.std::_Rb_tree_node.47"* %88 to %"struct.std::_Rb_tree_node_base"*
  %90 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %89) #3
  store i32 -1980190345, i32* %21
  store %"struct.std::_Rb_tree_node.47"* %90, %"struct.std::_Rb_tree_node.47"** %22
  br label %276

; <label>:91:                                     ; preds = %23
  %92 = load i32, i32* @x.959
  %93 = load i32, i32* @y.960
  %94 = sub i32 %92, 1141374529
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1141374529
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 -1132234727, i32 1054146877
  store i32 %118, i32* %21
  br label %276

; <label>:119:                                    ; preds = %23
  %120 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %10, align 8
  %121 = bitcast %"struct.std::_Rb_tree_node.47"* %120 to %"struct.std::_Rb_tree_node_base"*
  %122 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %121) #3
  store %"struct.std::_Rb_tree_node.47"* %122, %"struct.std::_Rb_tree_node.47"** %4
  %123 = load i32, i32* @x.959
  %124 = load i32, i32* @y.960
  %125 = sub i32 %123, -476587915
  %126 = sub i32 %125, 1
  %127 = add i32 %126, -476587915
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  %137 = select i1 %135, i32 1620034249, i32 1054146877
  store i32 %137, i32* %21
  br label %276

; <label>:138:                                    ; preds = %23
  store i32 -1980190345, i32* %21
  %139 = load volatile %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %4
  store %"struct.std::_Rb_tree_node.47"* %139, %"struct.std::_Rb_tree_node.47"** %22
  br label %276

; <label>:140:                                    ; preds = %23
  %141 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %22
  store %"struct.std::_Rb_tree_node.47"* %141, %"struct.std::_Rb_tree_node.47"** %10, align 8
  store i32 1120910134, i32* %21
  br label %276

; <label>:142:                                    ; preds = %23
  %143 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %11, align 8
  %144 = bitcast %"struct.std::_Rb_tree_node.47"* %143 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %13, %"struct.std::_Rb_tree_node_base"* %144) #3
  %145 = load i8, i8* %12, align 1
  %146 = trunc i8 %145 to i1
  %147 = select i1 %146, i32 370526503, i32 1458307252
  store i32 %147, i32* %21
  br label %276

; <label>:148:                                    ; preds = %23
  %149 = load i32, i32* @x.959
  %150 = load i32, i32* @y.960
  %151 = sub i32 %149, -911151992
  %152 = sub i32 %151, 1
  %153 = add i32 %152, -911151992
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  %163 = select i1 %161, i32 1737724108, i32 1493222897
  store i32 %163, i32* %21
  br label %276

; <label>:164:                                    ; preds = %23
  %165 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %166 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv(%"class.std::_Rb_tree.29"* %165) #3
  %167 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %166, %"struct.std::_Rb_tree_node_base"** %167, align 8
  %168 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.58"* %13, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8) %14) #3
  store i1 %168, i1* %3
  %169 = load i32, i32* @x.959
  %170 = load i32, i32* @y.960
  %171 = add i32 %169, 965413702
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, 965413702
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 false, true
  %182 = and i1 %179, false
  %183 = and i1 %177, %181
  %184 = and i1 %180, false
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 false, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 -926739160, i32 1493222897
  store i32 %195, i32* %21
  br label %276

; <label>:196:                                    ; preds = %23
  %197 = load volatile i1, i1* %3
  %198 = select i1 %197, i32 1696022589, i32 -679614488
  store i32 %198, i32* %21
  br label %276

; <label>:199:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_(%"struct.std::pair.55"* %7, %"struct.std::_Rb_tree_node.47"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node.47"** dereferenceable(8) %11)
  store i32 832858474, i32* %21
  br label %276

; <label>:200:                                    ; preds = %23
  %201 = load i32, i32* @x.959
  %202 = load i32, i32* @y.960
  %203 = sub i32 0, 1
  %204 = add i32 %201, %203
  %205 = sub i32 %201, 1
  %206 = mul i32 %201, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %202, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 false, true
  %213 = and i1 %210, false
  %214 = and i1 %208, %212
  %215 = and i1 %211, false
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 false, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  %226 = select i1 %224, i32 -1428690013, i32 -1042593249
  store i32 %226, i32* %21
  br label %276

; <label>:227:                                    ; preds = %23
  %228 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.58"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator.58"* %13) #3
  %229 = load i32, i32* @x.959
  %230 = load i32, i32* @y.960
  %231 = sub i32 %229, 769290215
  %232 = sub i32 %231, 1
  %233 = add i32 %232, 769290215
  %234 = sub i32 %229, 1
  %235 = mul i32 %229, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %230, 10
  %239 = and i1 %237, %238
  %240 = xor i1 %237, %238
  %241 = or i1 %239, %240
  %242 = or i1 %237, %238
  %243 = select i1 %241, i32 -885515314, i32 -1042593249
  store i32 %243, i32* %21
  br label %276

; <label>:244:                                    ; preds = %23
  store i32 -634611113, i32* %21
  br label %276

; <label>:245:                                    ; preds = %23
  store i32 1458307252, i32* %21
  br label %276

; <label>:246:                                    ; preds = %23
  %247 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %248 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %247, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %248, i32 0, i32 0
  %250 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %13, i32 0, i32 0
  %251 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %250, align 8
  %252 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %251)
  %253 = load i64*, i64** %9, align 8
  %254 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %249, i64* dereferenceable(8) %252, i64* dereferenceable(8) %253)
  %255 = select i1 %254, i32 -1113175022, i32 -607708275
  store i32 %255, i32* %21
  br label %276

; <label>:256:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_(%"struct.std::pair.55"* %7, %"struct.std::_Rb_tree_node.47"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node.47"** dereferenceable(8) %11)
  store i32 832858474, i32* %21
  br label %276

; <label>:257:                                    ; preds = %23
  %258 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %15, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %7, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %258, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %15)
  store i32 832858474, i32* %21
  br label %276

; <label>:259:                                    ; preds = %23
  %260 = bitcast %"struct.std::pair.55"* %7 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %261 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %260, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %261

; <label>:262:                                    ; preds = %23
  %263 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %10, align 8
  %264 = icmp ne %"struct.std::_Rb_tree_node.47"* %263, null
  store i32 -768348712, i32* %21
  br label %276

; <label>:265:                                    ; preds = %23
  %266 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %10, align 8
  %267 = bitcast %"struct.std::_Rb_tree_node.47"* %266 to %"struct.std::_Rb_tree_node_base"*
  %268 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %267) #3
  store i32 -1132234727, i32* %21
  br label %276

; <label>:269:                                    ; preds = %23
  %270 = load volatile %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6
  %271 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv(%"class.std::_Rb_tree.29"* %270) #3
  %272 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %271, %"struct.std::_Rb_tree_node_base"** %272, align 8
  %273 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator.58"* %13, %"struct.std::_Rb_tree_iterator.58"* dereferenceable(8) %14) #3
  store i32 1737724108, i32* %21
  br label %276

; <label>:274:                                    ; preds = %23
  %275 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.58"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator.58"* %13) #3
  store i32 -1428690013, i32* %21
  br label %276

; <label>:276:                                    ; preds = %274, %269, %265, %262, %257, %256, %246, %245, %244, %227, %200, %199, %196, %164, %148, %142, %140, %138, %119, %91, %87, %74, %71, %53, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.961
  %6 = load i32, i32* @y.962
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1854517030, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1854517030, label %18
    i32 -1013939093, label %38
    i32 389248885, label %71
    i32 190580204, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1013939093, i32 190580204
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %39, align 8
  %40 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %41, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %42, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"** %43, %"struct.std::_Rb_tree_node_base"*** %2
  %44 = load i32, i32* @x.961
  %45 = load i32, i32* @y.962
  %46 = sub i32 %44, -950782244
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -950782244
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 389248885, i32 190580204
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  %72 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %74, align 8
  %75 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %74, align 8
  %76 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %76, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %77, i32 0, i32 2
  store i32 -1013939093, i32* %14
  br label %79

; <label>:79:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.58"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator.58"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.58"*, align 8
  store %"struct.std::_Rb_tree_iterator.58"* %0, %"struct.std::_Rb_tree_iterator.58"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #13
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator.58"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.58"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv(%"struct.std::_Rb_tree_iterator.58"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.58"*, align 8
  store %"struct.std::_Rb_tree_iterator.58"* %0, %"struct.std::_Rb_tree_iterator.58"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator.58"*, %"struct.std::_Rb_tree_iterator.58"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #13
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator.58"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.49"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node.47"*
  %5 = call %"struct.std::pair.49"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"* %4)
  ret %"struct.std::pair.49"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %3 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %3, align 8
  %4 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_(%"struct.std::pair.55"*, %"struct.std::_Rb_tree_node.47"** dereferenceable(8), %"struct.std::_Rb_tree_node.47"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.971
  %7 = load i32, i32* @y.972
  %8 = sub i32 %6, -1587006999
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1587006999
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -718290541, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %86
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -718290541, label %20
    i32 1914854839, label %40
    i32 761619328, label %70
    i32 -1699053421, label %71
  ]

; <label>:19:                                     ; preds = %17
  br label %86

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1914854839, i32 -1699053421
  store i32 %39, i32* %16
  br label %86

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.55"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_node.47"**, align 8
  %43 = alloca %"struct.std::_Rb_tree_node.47"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %41, align 8
  store %"struct.std::_Rb_tree_node.47"** %1, %"struct.std::_Rb_tree_node.47"*** %42, align 8
  store %"struct.std::_Rb_tree_node.47"** %2, %"struct.std::_Rb_tree_node.47"*** %43, align 8
  %44 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %44, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::_Rb_tree_node.47"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node.47"** dereferenceable(8) %46) #3
  %48 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node.47"* %48 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %50 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %44, i32 0, i32 1
  %51 = load %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %43, align 8
  %52 = call dereferenceable(8) %"struct.std::_Rb_tree_node.47"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node.47"** dereferenceable(8) %51) #3
  %53 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %52, align 8
  %54 = bitcast %"struct.std::_Rb_tree_node.47"* %53 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %54, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %55 = load i32, i32* @x.971
  %56 = load i32, i32* @y.972
  %57 = sub i32 %55, 1605226759
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 1605226759
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 761619328, i32 -1699053421
  store i32 %69, i32* %16
  br label %86

; <label>:70:                                     ; preds = %17
  ret void

; <label>:71:                                     ; preds = %17
  %72 = alloca %"struct.std::pair.55"*, align 8
  %73 = alloca %"struct.std::_Rb_tree_node.47"**, align 8
  %74 = alloca %"struct.std::_Rb_tree_node.47"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %72, align 8
  store %"struct.std::_Rb_tree_node.47"** %1, %"struct.std::_Rb_tree_node.47"*** %73, align 8
  store %"struct.std::_Rb_tree_node.47"** %2, %"struct.std::_Rb_tree_node.47"*** %74, align 8
  %75 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %72, align 8
  %76 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %75, i32 0, i32 0
  %77 = load %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %73, align 8
  %78 = call dereferenceable(8) %"struct.std::_Rb_tree_node.47"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node.47"** dereferenceable(8) %77) #3
  %79 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %78, align 8
  %80 = bitcast %"struct.std::_Rb_tree_node.47"* %79 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %80, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %81 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %75, i32 0, i32 1
  %82 = load %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %74, align 8
  %83 = call dereferenceable(8) %"struct.std::_Rb_tree_node.47"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node.47"** dereferenceable(8) %82) #3
  %84 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %83, align 8
  %85 = bitcast %"struct.std::_Rb_tree_node.47"* %84 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %85, %"struct.std::_Rb_tree_node_base"** %81, align 8
  store i32 1914854839, i32* %16
  br label %86

; <label>:86:                                     ; preds = %71, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node.47"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node.47"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node.47"**, align 8
  store %"struct.std::_Rb_tree_node.47"** %0, %"struct.std::_Rb_tree_node.47"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.47"**, %"struct.std::_Rb_tree_node.47"*** %2, align 8
  ret %"struct.std::_Rb_tree_node.47"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJOxEEC2IJxEvEEDpOT_(%"class.std::tuple"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  call void @_ZNSt11_Tuple_implILm0EJOxEEC2IxEEOT_(%"struct.std::_Tuple_impl"* %6, i64* dereferenceable(8) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJOxEEC2IxEEOT_(%"struct.std::_Tuple_impl"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Head_base"*
  %7 = load i64*, i64** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  call void @_ZNSt10_Head_baseILm0EOxLb0EEC2IxEEOT_(%"struct.std::_Head_base"* %6, i64* dereferenceable(8) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"struct.std::_Rb_tree_iterator.58", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator.59", align 8
  %8 = alloca %"class.std::_Rb_tree.29"*, align 8
  %9 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %10 = alloca %"class.std::tuple.63"*, align 8
  %11 = alloca %"class.std::tuple.60"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %13 = alloca %"struct.std::pair.55", align 8
  %14 = alloca %"struct.std::_Rb_tree_const_iterator.59", align 8
  %15 = alloca i8*
  %16 = alloca i32
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %17, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %8, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %9, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %10, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %11, align 8
  %18 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %8, align 8
  %19 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %9, align 8
  %20 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %19) #3
  %21 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %10, align 8
  %22 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %21) #3
  %23 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %11, align 8
  %24 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %23) #3
  %25 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"* %18, %"struct.std::piecewise_construct_t"* dereferenceable(1) %20, %"class.std::tuple.63"* dereferenceable(8) %22, %"class.std::tuple.60"* dereferenceable(1) %24)
  store %"struct.std::_Rb_tree_node.47"* %25, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %26 = bitcast %"struct.std::_Rb_tree_const_iterator.59"* %14 to i8*
  %27 = bitcast %"struct.std::_Rb_tree_const_iterator.59"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %29 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.47"* %28)
          to label %30 unwind label %156

; <label>:30:                                     ; preds = %5
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.59", %"struct.std::_Rb_tree_const_iterator.59"* %14, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node_base"* %32, i64* dereferenceable(8) %29)
          to label %34 unwind label %156

; <label>:34:                                     ; preds = %30
  %35 = load i32, i32* @x.979
  %36 = load i32, i32* @y.980
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %269

; <label>:60:                                     ; preds = %34, %269
  %61 = bitcast %"struct.std::pair.55"* %13 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %62 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %61, i32 0, i32 0
  %63 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %33, 0
  store %"struct.std::_Rb_tree_node_base"* %63, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %61, i32 0, i32 1
  %65 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %33, 1
  store %"struct.std::_Rb_tree_node_base"* %65, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 1
  %67 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %66, align 8
  %68 = icmp ne %"struct.std::_Rb_tree_node_base"* %67, null
  %69 = load i32, i32* @x.979
  %70 = load i32, i32* @y.980
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %269

; <label>:94:                                     ; preds = %60
  br i1 %68, label %95, label %164

; <label>:95:                                     ; preds = %94
  %96 = load i32, i32* @x.979
  %97 = load i32, i32* @y.980
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 false, true
  %108 = and i1 %105, false
  %109 = and i1 %103, %107
  %110 = and i1 %106, false
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 false, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %278

; <label>:121:                                    ; preds = %95, %278
  %122 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 0
  %123 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %122, align 8
  %124 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 1
  %125 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %124, align 8
  %126 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %127 = load i32, i32* @x.979
  %128 = load i32, i32* @y.980
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %278

; <label>:152:                                    ; preds = %121
  %153 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node_base"* %123, %"struct.std::_Rb_tree_node_base"* %125, %"struct.std::_Rb_tree_node.47"* %126)
          to label %154 unwind label %156

; <label>:154:                                    ; preds = %152
  %155 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %153, %"struct.std::_Rb_tree_node_base"** %155, align 8
  br label %176

; <label>:156:                                    ; preds = %152, %30, %5
  %157 = landingpad { i8*, i32 }
          catch i8* null
  %158 = extractvalue { i8*, i32 } %157, 0
  store i8* %158, i8** %15, align 8
  %159 = extractvalue { i8*, i32 } %157, 1
  store i32 %159, i32* %16, align 4
  br label %160

; <label>:160:                                    ; preds = %156
  %161 = load i8*, i8** %15, align 8
  %162 = call i8* @__cxa_begin_catch(i8* %161) #3
  %163 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node.47"* %163) #3
  invoke void @__cxa_rethrow() #14
          to label %227 unwind label %170

; <label>:164:                                    ; preds = %94
  %165 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %18, %"struct.std::_Rb_tree_node.47"* %165) #3
  %166 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 0
  %167 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %166, align 8
  %168 = bitcast %"struct.std::_Rb_tree_node_base"* %167 to %"struct.std::_Rb_tree_node.47"*
  %169 = bitcast %"struct.std::_Rb_tree_node.47"* %168 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.58"* %6, %"struct.std::_Rb_tree_node_base"* %169) #3
  br label %176

; <label>:170:                                    ; preds = %160
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  store i8* %172, i8** %15, align 8
  %173 = extractvalue { i8*, i32 } %171, 1
  store i32 %173, i32* %16, align 4
  invoke void @__cxa_end_catch()
          to label %174 unwind label %184

; <label>:174:                                    ; preds = %170
  br label %179
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:176:                                    ; preds = %164, %154
  %177 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.58", %"struct.std::_Rb_tree_iterator.58"* %6, i32 0, i32 0
  %178 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %177, align 8
  ret %"struct.std::_Rb_tree_node_base"* %178

; <label>:179:                                    ; preds = %174
  %180 = load i8*, i8** %15, align 8
  %181 = load i32, i32* %16, align 4
  %182 = insertvalue { i8*, i32 } undef, i8* %180, 0
  %183 = insertvalue { i8*, i32 } %182, i32 %181, 1
  resume { i8*, i32 } %183

; <label>:184:                                    ; preds = %170
  %185 = load i32, i32* @x.979
  %186 = load i32, i32* @y.980
  %187 = sub i32 0, 1
  %188 = add i32 %185, %187
  %189 = sub i32 %185, 1
  %190 = mul i32 %185, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %186, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  br i1 %196, label %198, label %284

; <label>:198:                                    ; preds = %184, %284
  %199 = landingpad { i8*, i32 }
          catch i8* null
  %200 = extractvalue { i8*, i32 } %199, 0
  call void @__clang_call_terminate(i8* %200) #12
  %201 = load i32, i32* @x.979
  %202 = load i32, i32* @y.980
  %203 = sub i32 0, 1
  %204 = add i32 %201, %203
  %205 = sub i32 %201, 1
  %206 = mul i32 %201, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %202, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 false, true
  %213 = and i1 %210, false
  %214 = and i1 %208, %212
  %215 = and i1 %211, false
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 false, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  br i1 %224, label %226, label %284

; <label>:226:                                    ; preds = %198
  unreachable

; <label>:227:                                    ; preds = %160
  %228 = load i32, i32* @x.979
  %229 = load i32, i32* @y.980
  %230 = sub i32 0, 1
  %231 = add i32 %228, %230
  %232 = sub i32 %228, 1
  %233 = mul i32 %228, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %229, 10
  %237 = xor i1 %235, true
  %238 = xor i1 %236, true
  %239 = xor i1 true, true
  %240 = and i1 %237, true
  %241 = and i1 %235, %239
  %242 = and i1 %238, true
  %243 = and i1 %236, %239
  %244 = or i1 %240, %241
  %245 = or i1 %242, %243
  %246 = xor i1 %244, %245
  %247 = or i1 %237, %238
  %248 = xor i1 %247, true
  %249 = or i1 true, %239
  %250 = and i1 %248, %249
  %251 = or i1 %246, %250
  %252 = or i1 %235, %236
  br i1 %251, label %253, label %287

; <label>:253:                                    ; preds = %227, %287
  %254 = load i32, i32* @x.979
  %255 = load i32, i32* @y.980
  %256 = sub i32 %254, 2007752465
  %257 = sub i32 %256, 1
  %258 = add i32 %257, 2007752465
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = and i1 %262, %263
  %265 = xor i1 %262, %263
  %266 = or i1 %264, %265
  %267 = or i1 %262, %263
  br i1 %266, label %268, label %287

; <label>:268:                                    ; preds = %253
  unreachable

; <label>:269:                                    ; preds = %60, %34
  %270 = bitcast %"struct.std::pair.55"* %13 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %271 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %270, i32 0, i32 0
  %272 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %33, 0
  store %"struct.std::_Rb_tree_node_base"* %272, %"struct.std::_Rb_tree_node_base"** %271, align 8
  %273 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %270, i32 0, i32 1
  %274 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %33, 1
  store %"struct.std::_Rb_tree_node_base"* %274, %"struct.std::_Rb_tree_node_base"** %273, align 8
  %275 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 1
  %276 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %275, align 8
  %277 = icmp ne %"struct.std::_Rb_tree_node_base"* %276, null
  br label %60

; <label>:278:                                    ; preds = %121, %95
  %279 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 0
  %280 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %279, align 8
  %281 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 1
  %282 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %281, align 8
  %283 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  br label %121

; <label>:284:                                    ; preds = %198, %184
  %285 = landingpad { i8*, i32 }
          catch i8* null
  %286 = extractvalue { i8*, i32 } %285, 0
  call void @__clang_call_terminate(i8* %286) #12
  br label %198

; <label>:287:                                    ; preds = %253, %227
  br label %253
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple.63"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple.63"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::tuple.63"* %0, %"class.std::tuple.63"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %3, align 8
  %6 = bitcast %"class.std::tuple.63"* %5 to %"struct.std::_Tuple_impl.64"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_(%"struct.std::_Tuple_impl.64"* %6, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree.29"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple.63"*, align 8
  %8 = alloca %"class.std::tuple.60"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple.63"* %2, %"class.std::tuple.63"** %7, align 8
  store %"class.std::tuple.60"* %3, %"class.std::tuple.60"** %8, align 8
  %10 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %5, align 8
  %11 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree.29"* %10)
  store %"struct.std::_Rb_tree_node.47"* %11, %"struct.std::_Rb_tree_node.47"** %9, align 8
  %12 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %9, align 8
  %13 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %14 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %13) #3
  %15 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %7, align 8
  %16 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %15) #3
  %17 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %8, align 8
  %18 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %17) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"* %10, %"struct.std::_Rb_tree_node.47"* %12, %"struct.std::piecewise_construct_t"* dereferenceable(1) %14, %"class.std::tuple.63"* dereferenceable(8) %16, %"class.std::tuple.60"* dereferenceable(1) %18)
  %19 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %9, align 8
  ret %"struct.std::_Rb_tree_node.47"* %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple.63"*, align 8
  store %"class.std::tuple.63"* %0, %"class.std::tuple.63"** %2, align 8
  %3 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %2, align 8
  ret %"class.std::tuple.63"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::_Rb_tree.29"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.63"*, align 8
  %10 = alloca %"class.std::tuple.60"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %6, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %9, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %10, align 8
  %13 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node.47"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node.47"*
  %17 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.29"* %13) #3
  %18 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %19 = invoke %"struct.std::pair.49"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"* %18)
          to label %20 unwind label %58

; <label>:20:                                     ; preds = %5
  %21 = load i32, i32* @x.987
  %22 = load i32, i32* @y.988
  %23 = add i32 %21, 1173208699
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 1173208699
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %260

; <label>:35:                                     ; preds = %20, %260
  %36 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %37 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %36) #3
  %38 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %39 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %38) #3
  %40 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %41 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %40) #3
  %42 = load i32, i32* @x.987
  %43 = load i32, i32* @y.988
  %44 = sub i32 %42, -349489382
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -349489382
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %260

; <label>:56:                                     ; preds = %35
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1) %17, %"struct.std::pair.49"* %19, %"struct.std::piecewise_construct_t"* dereferenceable(1) %37, %"class.std::tuple.63"* dereferenceable(8) %39, %"class.std::tuple.60"* dereferenceable(1) %41)
          to label %57 unwind label %58

; <label>:57:                                     ; preds = %56
  br label %113

; <label>:58:                                     ; preds = %56, %5
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %11, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %12, align 4
  br label %62

; <label>:62:                                     ; preds = %58
  %63 = load i8*, i8** %11, align 8
  %64 = call i8* @__cxa_begin_catch(i8* %63) #3
  %65 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %66 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %13, %"struct.std::_Rb_tree_node.47"* %66) #3
  invoke void @__cxa_rethrow() #14
          to label %259 unwind label %67

; <label>:67:                                     ; preds = %62
  %68 = load i32, i32* @x.987
  %69 = load i32, i32* @y.988
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %267

; <label>:93:                                     ; preds = %67, %267
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %11, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %12, align 4
  %97 = load i32, i32* @x.987
  %98 = load i32, i32* @y.988
  %99 = add i32 %97, 1860257230
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 1860257230
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %267

; <label>:111:                                    ; preds = %93
  invoke void @__cxa_end_catch()
          to label %112 unwind label %215

; <label>:112:                                    ; preds = %111
  br label %168

; <label>:113:                                    ; preds = %57
  %114 = load i32, i32* @x.987
  %115 = load i32, i32* @y.988
  %116 = sub i32 %114, -389273643
  %117 = sub i32 %116, 1
  %118 = add i32 %117, -389273643
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %271

; <label>:140:                                    ; preds = %113, %271
  %141 = load i32, i32* @x.987
  %142 = load i32, i32* @y.988
  %143 = add i32 %141, 548914307
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, 548914307
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %271

; <label>:167:                                    ; preds = %140
  ret void

; <label>:168:                                    ; preds = %112
  %169 = load i32, i32* @x.987
  %170 = load i32, i32* @y.988
  %171 = sub i32 %169, -171481918
  %172 = sub i32 %171, 1
  %173 = add i32 %172, -171481918
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 false, true
  %182 = and i1 %179, false
  %183 = and i1 %177, %181
  %184 = and i1 %180, false
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 false, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  br i1 %193, label %195, label %272

; <label>:195:                                    ; preds = %168, %272
  %196 = load i8*, i8** %11, align 8
  %197 = load i32, i32* %12, align 4
  %198 = insertvalue { i8*, i32 } undef, i8* %196, 0
  %199 = insertvalue { i8*, i32 } %198, i32 %197, 1
  %200 = load i32, i32* @x.987
  %201 = load i32, i32* @y.988
  %202 = add i32 %200, -290312733
  %203 = sub i32 %202, 1
  %204 = sub i32 %203, -290312733
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = and i1 %208, %209
  %211 = xor i1 %208, %209
  %212 = or i1 %210, %211
  %213 = or i1 %208, %209
  br i1 %212, label %214, label %272

; <label>:214:                                    ; preds = %195
  resume { i8*, i32 } %199

; <label>:215:                                    ; preds = %111
  %216 = load i32, i32* @x.987
  %217 = load i32, i32* @y.988
  %218 = sub i32 0, 1
  %219 = add i32 %216, %218
  %220 = sub i32 %216, 1
  %221 = mul i32 %216, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %217, 10
  %225 = and i1 %223, %224
  %226 = xor i1 %223, %224
  %227 = or i1 %225, %226
  %228 = or i1 %223, %224
  br i1 %227, label %229, label %277

; <label>:229:                                    ; preds = %215, %277
  %230 = landingpad { i8*, i32 }
          catch i8* null
  %231 = extractvalue { i8*, i32 } %230, 0
  call void @__clang_call_terminate(i8* %231) #12
  %232 = load i32, i32* @x.987
  %233 = load i32, i32* @y.988
  %234 = add i32 %232, 627118205
  %235 = sub i32 %234, 1
  %236 = sub i32 %235, 627118205
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = xor i1 %240, true
  %243 = xor i1 %241, true
  %244 = xor i1 false, true
  %245 = and i1 %242, false
  %246 = and i1 %240, %244
  %247 = and i1 %243, false
  %248 = and i1 %241, %244
  %249 = or i1 %245, %246
  %250 = or i1 %247, %248
  %251 = xor i1 %249, %250
  %252 = or i1 %242, %243
  %253 = xor i1 %252, true
  %254 = or i1 false, %244
  %255 = and i1 %253, %254
  %256 = or i1 %251, %255
  %257 = or i1 %240, %241
  br i1 %256, label %258, label %277

; <label>:258:                                    ; preds = %229
  unreachable

; <label>:259:                                    ; preds = %62
  unreachable

; <label>:260:                                    ; preds = %35, %20
  %261 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %262 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %261) #3
  %263 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %264 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %263) #3
  %265 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %266 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %265) #3
  br label %35

; <label>:267:                                    ; preds = %93, %67
  %268 = landingpad { i8*, i32 }
          cleanup
  %269 = extractvalue { i8*, i32 } %268, 0
  store i8* %269, i8** %11, align 8
  %270 = extractvalue { i8*, i32 } %268, 1
  store i32 %270, i32* %12, align 4
  br label %93

; <label>:271:                                    ; preds = %140, %113
  br label %140

; <label>:272:                                    ; preds = %195, %168
  %273 = load i8*, i8** %11, align 8
  %274 = load i32, i32* %12, align 4
  %275 = insertvalue { i8*, i32 } undef, i8* %273, 0
  %276 = insertvalue { i8*, i32 } %275, i32 %274, 1
  br label %195

; <label>:277:                                    ; preds = %229, %215
  %278 = landingpad { i8*, i32 }
          catch i8* null
  %279 = extractvalue { i8*, i32 } %278, 0
  call void @__clang_call_terminate(i8* %279) #12
  br label %229
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1), %"struct.std::pair.49"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.30"*, align 8
  %7 = alloca %"struct.std::pair.49"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.63"*, align 8
  %10 = alloca %"class.std::tuple.60"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %6, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %9, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %10, align 8
  %11 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %6, align 8
  %12 = bitcast %"class.std::allocator.30"* %11 to %"class.__gnu_cxx::new_allocator.31"*
  %13 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"* %12, %"struct.std::pair.49"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple.63"* dereferenceable(8) %17, %"class.std::tuple.60"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"*, %"struct.std::pair.49"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %7 = alloca %"struct.std::pair.49"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.63"*, align 8
  %10 = alloca %"class.std::tuple.60"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple.63", align 8
  %13 = alloca %"class.std::tuple.60", align 1
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %6, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %9, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %6, align 8
  %15 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %7, align 8
  %16 = bitcast %"struct.std::pair.49"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair.49"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple.63"* %12, %"class.std::tuple.63"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple.63", %"class.std::tuple.63"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl.64", %"struct.std::_Tuple_impl.64"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base.65", %"struct.std::_Head_base.65"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @_ZNSt4pairIKxxEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.49"* %17, i64* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple.63"*, %"class.std::tuple.63"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple.63"*, align 8
  %4 = alloca %"class.std::tuple.63"*, align 8
  store %"class.std::tuple.63"* %0, %"class.std::tuple.63"** %3, align 8
  store %"class.std::tuple.63"* %1, %"class.std::tuple.63"** %4, align 8
  %5 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %3, align 8
  %6 = bitcast %"class.std::tuple.63"* %5 to %"struct.std::_Tuple_impl.64"*
  %7 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %4, align 8
  %8 = bitcast %"class.std::tuple.63"* %7 to %"struct.std::_Tuple_impl.64"*
  call void @_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_(%"struct.std::_Tuple_impl.64"* %6, %"struct.std::_Tuple_impl.64"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.49"*, i64*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple.63", align 8
  %5 = alloca %"class.std::tuple.60", align 1
  %6 = alloca %"struct.std::pair.49"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.62", align 1
  %9 = getelementptr inbounds %"class.std::tuple.63", %"class.std::tuple.63"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl.64", %"struct.std::_Tuple_impl.64"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base.65", %"struct.std::_Head_base.65"* %10, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store %"struct.std::pair.49"* %0, %"struct.std::pair.49"** %6, align 8
  %12 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %6, align 8
  call void @_ZNSt4pairIKxxEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.49"* %12, %"class.std::tuple.63"* dereferenceable(8) %4, %"class.std::tuple.60"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_(%"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.997
  %4 = load i32, i32* @y.998
  %5 = add i32 %3, -78716770
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -78716770
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %68

; <label>:29:                                     ; preds = %2, %68
  %30 = alloca %"struct.std::_Tuple_impl.64"*, align 8
  %31 = alloca %"struct.std::_Tuple_impl.64"*, align 8
  store %"struct.std::_Tuple_impl.64"* %0, %"struct.std::_Tuple_impl.64"** %30, align 8
  store %"struct.std::_Tuple_impl.64"* %1, %"struct.std::_Tuple_impl.64"** %31, align 8
  %32 = load %"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"** %30, align 8
  %33 = bitcast %"struct.std::_Tuple_impl.64"* %32 to %"struct.std::_Head_base.65"*
  %34 = load %"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"** %31, align 8
  %35 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl.64"* dereferenceable(8) %34) #3
  %36 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %35) #3
  %37 = load i32, i32* @x.997
  %38 = load i32, i32* @y.998
  %39 = sub i32 %37, -597271116
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -597271116
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %68

; <label>:63:                                     ; preds = %29
  invoke void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base.65"* %33, i64* dereferenceable(8) %36)
          to label %64 unwind label %65

; <label>:64:                                     ; preds = %63
  ret void

; <label>:65:                                     ; preds = %63
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  call void @__clang_call_terminate(i8* %67) #12
  unreachable

; <label>:68:                                     ; preds = %29, %2
  %69 = alloca %"struct.std::_Tuple_impl.64"*, align 8
  %70 = alloca %"struct.std::_Tuple_impl.64"*, align 8
  store %"struct.std::_Tuple_impl.64"* %0, %"struct.std::_Tuple_impl.64"** %69, align 8
  store %"struct.std::_Tuple_impl.64"* %1, %"struct.std::_Tuple_impl.64"** %70, align 8
  %71 = load %"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"** %69, align 8
  %72 = bitcast %"struct.std::_Tuple_impl.64"* %71 to %"struct.std::_Head_base.65"*
  %73 = load %"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"** %70, align 8
  %74 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl.64"* dereferenceable(8) %73) #3
  %75 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %74) #3
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl.64"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.999
  %6 = load i32, i32* @y.1000
  %7 = add i32 %5, -907422411
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -907422411
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2007971894, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2007971894, label %19
    i32 -1846955911, label %39
    i32 788694027, label %59
    i32 237023565, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1846955911, i32 237023565
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Tuple_impl.64"*, align 8
  store %"struct.std::_Tuple_impl.64"* %0, %"struct.std::_Tuple_impl.64"** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"** %40, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.64"* %41 to %"struct.std::_Head_base.65"*
  %43 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base.65"* dereferenceable(8) %42) #3
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.999
  %45 = load i32, i32* @y.1000
  %46 = add i32 %44, -1223242850
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1223242850
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 788694027, i32 237023565
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Tuple_impl.64"*, align 8
  store %"struct.std::_Tuple_impl.64"* %0, %"struct.std::_Tuple_impl.64"** %62, align 8
  %63 = load %"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"** %62, align 8
  %64 = bitcast %"struct.std::_Tuple_impl.64"* %63 to %"struct.std::_Head_base.65"*
  %65 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base.65"* dereferenceable(8) %64) #3
  store i32 -1846955911, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base.65"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base.65"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base.65"* %0, %"struct.std::_Head_base.65"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base.65"*, %"struct.std::_Head_base.65"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base.65", %"struct.std::_Head_base.65"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base.65"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base.65"*, align 8
  store %"struct.std::_Head_base.65"* %0, %"struct.std::_Head_base.65"** %2, align 8
  %3 = load %"struct.std::_Head_base.65"*, %"struct.std::_Head_base.65"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base.65", %"struct.std::_Head_base.65"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.49"*, %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.62", align 1
  %6 = alloca %"struct.std::pair.49"*, align 8
  %7 = alloca %"class.std::tuple.63"*, align 8
  %8 = alloca %"class.std::tuple.60"*, align 8
  store %"struct.std::pair.49"* %0, %"struct.std::pair.49"** %6, align 8
  store %"class.std::tuple.63"* %1, %"class.std::tuple.63"** %7, align 8
  store %"class.std::tuple.60"* %2, %"class.std::tuple.60"** %8, align 8
  %9 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %7, align 8
  %12 = call dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.63"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %10, align 8
  %15 = getelementptr inbounds %"struct.std::pair.49", %"struct.std::pair.49"* %9, i32 0, i32 1
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.63"* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1007
  %6 = load i32, i32* @y.1008
  %7 = sub i32 %5, -1366205852
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1366205852
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1594794447, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1594794447, label %19
    i32 320463859, label %27
    i32 1928959251, label %59
    i32 -719579549, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 320463859, i32 -719579549
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple.63"*, align 8
  store %"class.std::tuple.63"* %0, %"class.std::tuple.63"** %28, align 8
  %29 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %28, align 8
  %30 = bitcast %"class.std::tuple.63"* %29 to %"struct.std::_Tuple_impl.64"*
  %31 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.64"* dereferenceable(8) %30) #3
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.1007
  %33 = load i32, i32* @y.1008
  %34 = add i32 %32, -1042509054
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1042509054
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1928959251, i32 -719579549
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::tuple.63"*, align 8
  store %"class.std::tuple.63"* %0, %"class.std::tuple.63"** %62, align 8
  %63 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %62, align 8
  %64 = bitcast %"class.std::tuple.63"* %63 to %"struct.std::_Tuple_impl.64"*
  %65 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.64"* dereferenceable(8) %64) #3
  store i32 320463859, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl.64"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.64"*, align 8
  store %"struct.std::_Tuple_impl.64"* %0, %"struct.std::_Tuple_impl.64"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"** %2, align 8
  %4 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl.64"* dereferenceable(8) %3) #3
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_(%"struct.std::_Tuple_impl.64"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1011
  %6 = load i32, i32* @y.1012
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 51541378, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 51541378, label %18
    i32 1279216207, label %38
    i32 498887376, label %58
    i32 14749764, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1279216207, i32 14749764
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Tuple_impl.64"*, align 8
  %40 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.64"* %0, %"struct.std::_Tuple_impl.64"** %39, align 8
  store i64* %1, i64** %40, align 8
  %41 = load %"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"** %39, align 8
  %42 = bitcast %"struct.std::_Tuple_impl.64"* %41 to %"struct.std::_Head_base.65"*
  %43 = load i64*, i64** %40, align 8
  call void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base.65"* %42, i64* dereferenceable(8) %43)
  %44 = load i32, i32* @x.1011
  %45 = load i32, i32* @y.1012
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 498887376, i32 14749764
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Tuple_impl.64"*, align 8
  %61 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl.64"* %0, %"struct.std::_Tuple_impl.64"** %60, align 8
  store i64* %1, i64** %61, align 8
  %62 = load %"struct.std::_Tuple_impl.64"*, %"struct.std::_Tuple_impl.64"** %60, align 8
  %63 = bitcast %"struct.std::_Tuple_impl.64"* %62 to %"struct.std::_Head_base.65"*
  %64 = load i64*, i64** %61, align 8
  call void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base.65"* %63, i64* dereferenceable(8) %64)
  store i32 1279216207, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE11lower_boundERS6_(%"class.std::map"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %4 = alloca %"class.std::map"*, align 8
  %5 = alloca i64*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %"class.std::map"*, %"class.std::map"** %4, align 8
  %7 = getelementptr inbounds %"class.std::map", %"class.std::map"* %6, i32 0, i32 0
  %8 = load i64*, i64** %5, align 8
  %9 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11lower_boundERS1_(%"class.std::_Rb_tree"* %7, i64* dereferenceable(8) %8)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %3, i32 0, i32 0
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  ret %"struct.std::_Rb_tree_node_base"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEeqERKS8_(%"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %0, %"struct.std::_Rb_tree_iterator.66"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %1, %"struct.std::_Rb_tree_iterator.66"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE3endEv(%"class.std::map"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1017
  %6 = load i32, i32* @y.1018
  %7 = sub i32 %5, 1881577406
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1881577406
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1631476624, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %86
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1631476624, label %19
    i32 999597699, label %39
    i32 232560829, label %75
    i32 1634371591, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %86

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 999597699, i32 1634371591
  store i32 %38, i32* %15
  br label %86

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %41 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %41, align 8
  %42 = load %"class.std::map"*, %"class.std::map"** %41, align 8
  %43 = getelementptr inbounds %"class.std::map", %"class.std::map"* %42, i32 0, i32 0
  %44 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE3endEv(%"class.std::_Rb_tree"* %43) #3
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %40, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %40, i32 0, i32 0
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8
  store %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"** %2
  %48 = load i32, i32* @x.1017
  %49 = load i32, i32* @y.1018
  %50 = sub i32 %48, -342440392
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -342440392
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 232560829, i32 1634371591
  store i32 %74, i32* %15
  br label %86

; <label>:75:                                     ; preds = %16
  %76 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %79 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %79, align 8
  %80 = load %"class.std::map"*, %"class.std::map"** %79, align 8
  %81 = getelementptr inbounds %"class.std::map", %"class.std::map"* %80, i32 0, i32 0
  %82 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE3endEv(%"class.std::_Rb_tree"* %81) #3
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %78, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %82, %"struct.std::_Rb_tree_node_base"** %83, align 8
  %84 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %78, i32 0, i32 0
  %85 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %84, align 8
  store i32 999597699, i32* %15
  br label %86

; <label>:86:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNKSt3mapIxSt3setIxSt4lessIxESaIxEES2_SaISt4pairIKxS4_EEE8key_compEv(%"class.std::map"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1019
  %5 = load i32, i32* @y.1020
  %6 = add i32 %4, 1904196436
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1904196436
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1602875510, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1602875510, label %18
    i32 1188675418, label %38
    i32 1341951785, label %59
    i32 -1362924234, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1188675418, i32 -1362924234
  store i32 %37, i32* %14
  br label %66

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::less", align 1
  %40 = alloca %"class.std::map"*, align 8
  %41 = alloca %"struct.std::less", align 1
  store %"class.std::map"* %0, %"class.std::map"** %40, align 8
  %42 = load %"class.std::map"*, %"class.std::map"** %40, align 8
  %43 = getelementptr inbounds %"class.std::map", %"class.std::map"* %42, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8key_compEv(%"class.std::_Rb_tree"* %43)
  %44 = load i32, i32* @x.1019
  %45 = load i32, i32* @y.1020
  %46 = add i32 %44, 1501510939
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1501510939
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1341951785, i32 -1362924234
  store i32 %58, i32* %14
  br label %66

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::less", align 1
  %62 = alloca %"class.std::map"*, align 8
  %63 = alloca %"struct.std::less", align 1
  store %"class.std::map"* %0, %"class.std::map"** %62, align 8
  %64 = load %"class.std::map"*, %"class.std::map"** %62, align 8
  %65 = getelementptr inbounds %"class.std::map", %"class.std::map"* %64, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8key_compEv(%"class.std::_Rb_tree"* %65)
  store i32 1188675418, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"struct.std::pair.43"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEdeEv(%"struct.std::_Rb_tree_iterator.66"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.1021
  %3 = load i32, i32* @y.1022
  %4 = add i32 %2, 1200065218
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1200065218
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %54

; <label>:28:                                     ; preds = %1, %54
  %29 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %0, %"struct.std::_Rb_tree_iterator.66"** %29, align 8
  %30 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = bitcast %"struct.std::_Rb_tree_node_base"* %32 to %"struct.std::_Rb_tree_node"*
  %34 = load i32, i32* @x.1021
  %35 = load i32, i32* @y.1022
  %36 = sub i32 %34, -699874048
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -699874048
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %54

; <label>:48:                                     ; preds = %28
  %49 = invoke %"struct.std::pair.43"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %33)
          to label %50 unwind label %51

; <label>:50:                                     ; preds = %48
  ret %"struct.std::pair.43"* %49

; <label>:51:                                     ; preds = %48
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #12
  unreachable

; <label>:54:                                     ; preds = %28, %1
  %55 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %0, %"struct.std::_Rb_tree_iterator.66"** %55, align 8
  %56 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %55, align 8
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %56, i32 0, i32 0
  %58 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %59 = bitcast %"struct.std::_Rb_tree_node_base"* %58 to %"struct.std::_Rb_tree_node"*
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEESt17_Rb_tree_iteratorIS7_ESt23_Rb_tree_const_iteratorIS7_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = load i32, i32* @x.1023
  %7 = load i32, i32* @y.1024
  %8 = add i32 %6, -1688063447
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1688063447
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %197

; <label>:20:                                     ; preds = %5, %197
  %21 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %22 = alloca %"struct.std::_Rb_tree_const_iterator.67", align 8
  %23 = alloca %"class.std::_Rb_tree"*, align 8
  %24 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %25 = alloca %"class.std::tuple.63"*, align 8
  %26 = alloca %"class.std::tuple.60"*, align 8
  %27 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %28 = alloca %"struct.std::pair.55", align 8
  %29 = alloca %"struct.std::_Rb_tree_const_iterator.67", align 8
  %30 = alloca i8*
  %31 = alloca i32
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.67", %"struct.std::_Rb_tree_const_iterator.67"* %22, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %32, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %23, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %24, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %25, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %26, align 8
  %33 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %23, align 8
  %34 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %24, align 8
  %35 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %34) #3
  %36 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %25, align 8
  %37 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %36) #3
  %38 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %26, align 8
  %39 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %38) #3
  %40 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEEPSt13_Rb_tree_nodeIS7_EDpOT_(%"class.std::_Rb_tree"* %33, %"struct.std::piecewise_construct_t"* dereferenceable(1) %35, %"class.std::tuple.63"* dereferenceable(8) %37, %"class.std::tuple.60"* dereferenceable(1) %39)
  store %"struct.std::_Rb_tree_node"* %40, %"struct.std::_Rb_tree_node"** %27, align 8
  %41 = bitcast %"struct.std::_Rb_tree_const_iterator.67"* %29 to i8*
  %42 = bitcast %"struct.std::_Rb_tree_const_iterator.67"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  %44 = load i32, i32* @x.1023
  %45 = load i32, i32* @y.1024
  %46 = sub i32 %44, 877173
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 877173
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %197

; <label>:58:                                     ; preds = %20
  %59 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E(%"struct.std::_Rb_tree_node"* %43)
          to label %60 unwind label %82

; <label>:60:                                     ; preds = %58
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.67", %"struct.std::_Rb_tree_const_iterator.67"* %29, i32 0, i32 0
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %63 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS7_ERS1_(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node_base"* %62, i64* dereferenceable(8) %59)
          to label %64 unwind label %82

; <label>:64:                                     ; preds = %60
  %65 = bitcast %"struct.std::pair.55"* %28 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %66 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %65, i32 0, i32 0
  %67 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %63, 0
  store %"struct.std::_Rb_tree_node_base"* %67, %"struct.std::_Rb_tree_node_base"** %66, align 8
  %68 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %65, i32 0, i32 1
  %69 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %63, 1
  store %"struct.std::_Rb_tree_node_base"* %69, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %28, i32 0, i32 1
  %71 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %70, align 8
  %72 = icmp ne %"struct.std::_Rb_tree_node_base"* %71, null
  br i1 %72, label %73, label %90

; <label>:73:                                     ; preds = %64
  %74 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %28, i32 0, i32 0
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %28, i32 0, i32 1
  %77 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %78 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  %79 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node_base"* %75, %"struct.std::_Rb_tree_node_base"* %77, %"struct.std::_Rb_tree_node"* %78)
          to label %80 unwind label %82

; <label>:80:                                     ; preds = %73
  %81 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %21, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %81, align 8
  br label %156

; <label>:82:                                     ; preds = %73, %60, %58
  %83 = landingpad { i8*, i32 }
          catch i8* null
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %30, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %31, align 4
  br label %86

; <label>:86:                                     ; preds = %82
  %87 = load i8*, i8** %30, align 8
  %88 = call i8* @__cxa_begin_catch(i8* %87) #3
  %89 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node"* %89) #3
  invoke void @__cxa_rethrow() #14
          to label %167 unwind label %96

; <label>:90:                                     ; preds = %64
  %91 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node"* %91) #3
  %92 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %28, i32 0, i32 0
  %93 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %92, align 8
  %94 = bitcast %"struct.std::_Rb_tree_node_base"* %93 to %"struct.std::_Rb_tree_node"*
  %95 = bitcast %"struct.std::_Rb_tree_node"* %94 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.66"* %21, %"struct.std::_Rb_tree_node_base"* %95) #3
  br label %156

; <label>:96:                                     ; preds = %86
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %30, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %31, align 4
  invoke void @__cxa_end_catch()
          to label %100 unwind label %164

; <label>:100:                                    ; preds = %96
  br label %159
                                                  ; No predecessors!
  %102 = load i32, i32* @x.1023
  %103 = load i32, i32* @y.1024
  %104 = sub i32 %102, -1913928040
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -1913928040
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %221

; <label>:128:                                    ; preds = %101, %221
  call void @llvm.trap()
  %129 = load i32, i32* @x.1023
  %130 = load i32, i32* @y.1024
  %131 = sub i32 %129, -590224085
  %132 = sub i32 %131, 1
  %133 = add i32 %132, -590224085
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 false, true
  %142 = and i1 %139, false
  %143 = and i1 %137, %141
  %144 = and i1 %140, false
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 false, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %221

; <label>:155:                                    ; preds = %128
  unreachable

; <label>:156:                                    ; preds = %90, %80
  %157 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %21, i32 0, i32 0
  %158 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %157, align 8
  ret %"struct.std::_Rb_tree_node_base"* %158

; <label>:159:                                    ; preds = %100
  %160 = load i8*, i8** %30, align 8
  %161 = load i32, i32* %31, align 4
  %162 = insertvalue { i8*, i32 } undef, i8* %160, 0
  %163 = insertvalue { i8*, i32 } %162, i32 %161, 1
  resume { i8*, i32 } %163

; <label>:164:                                    ; preds = %96
  %165 = landingpad { i8*, i32 }
          catch i8* null
  %166 = extractvalue { i8*, i32 } %165, 0
  call void @__clang_call_terminate(i8* %166) #12
  unreachable

; <label>:167:                                    ; preds = %86
  %168 = load i32, i32* @x.1023
  %169 = load i32, i32* @y.1024
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  br i1 %179, label %181, label %222

; <label>:181:                                    ; preds = %167, %222
  %182 = load i32, i32* @x.1023
  %183 = load i32, i32* @y.1024
  %184 = sub i32 %182, 1182528903
  %185 = sub i32 %184, 1
  %186 = add i32 %185, 1182528903
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  br i1 %194, label %196, label %222

; <label>:196:                                    ; preds = %181
  unreachable

; <label>:197:                                    ; preds = %20, %5
  %198 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %199 = alloca %"struct.std::_Rb_tree_const_iterator.67", align 8
  %200 = alloca %"class.std::_Rb_tree"*, align 8
  %201 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %202 = alloca %"class.std::tuple.63"*, align 8
  %203 = alloca %"class.std::tuple.60"*, align 8
  %204 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %205 = alloca %"struct.std::pair.55", align 8
  %206 = alloca %"struct.std::_Rb_tree_const_iterator.67", align 8
  %207 = alloca i8*
  %208 = alloca i32
  %209 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.67", %"struct.std::_Rb_tree_const_iterator.67"* %199, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %209, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %200, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %201, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %202, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %203, align 8
  %210 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %200, align 8
  %211 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %201, align 8
  %212 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %211) #3
  %213 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %202, align 8
  %214 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %213) #3
  %215 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %203, align 8
  %216 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %215) #3
  %217 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEEPSt13_Rb_tree_nodeIS7_EDpOT_(%"class.std::_Rb_tree"* %210, %"struct.std::piecewise_construct_t"* dereferenceable(1) %212, %"class.std::tuple.63"* dereferenceable(8) %214, %"class.std::tuple.60"* dereferenceable(1) %216)
  store %"struct.std::_Rb_tree_node"* %217, %"struct.std::_Rb_tree_node"** %204, align 8
  %218 = bitcast %"struct.std::_Rb_tree_const_iterator.67"* %206 to i8*
  %219 = bitcast %"struct.std::_Rb_tree_const_iterator.67"* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %218, i8* %219, i64 8, i32 8, i1 false)
  %220 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %204, align 8
  br label %20

; <label>:221:                                    ; preds = %128, %101
  call void @llvm.trap()
  br label %128

; <label>:222:                                    ; preds = %181, %167
  br label %181
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2ERKSt17_Rb_tree_iteratorIS7_E(%"struct.std::_Rb_tree_const_iterator.67"*, %"struct.std::_Rb_tree_iterator.66"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.67"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.67"* %0, %"struct.std::_Rb_tree_const_iterator.67"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %1, %"struct.std::_Rb_tree_iterator.66"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator.67"*, %"struct.std::_Rb_tree_const_iterator.67"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.67", %"struct.std::_Rb_tree_const_iterator.67"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11lower_boundERS1_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %7 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_beginEv(%"class.std::_Rb_tree"* %6) #3
  %8 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_M_endEv(%"class.std::_Rb_tree"* %6) #3
  %9 = load i64*, i64** %5, align 8
  %10 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS7_ESE_RS1_(%"class.std::_Rb_tree"* %6, %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"* %8, i64* dereferenceable(8) %9)
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %3, i32 0, i32 0
  %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret %"struct.std::_Rb_tree_node_base"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS7_ESE_RS1_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %8 = alloca %"class.std::_Rb_tree"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %11 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %8, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %9, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %10, align 8
  store i64* %3, i64** %11, align 8
  %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8, align 8
  store %"class.std::_Rb_tree"* %12, %"class.std::_Rb_tree"** %6
  %13 = alloca i32
  store i32 2122781700, i32* %13
  br label %14

; <label>:14:                                     ; preds = %4, %158
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2122781700, label %17
    i32 -933484709, label %21
    i32 1050452188, label %49
    i32 -2068482604, label %83
    i32 -1614864117, label %86
    i32 -1405065280, label %114
    i32 -303560643, label %134
    i32 962893317, label %135
    i32 -2103115669, label %139
    i32 1627631698, label %140
    i32 -1936287682, label %145
    i32 -330621154, label %153
  ]

; <label>:16:                                     ; preds = %14
  br label %158

; <label>:17:                                     ; preds = %14
  %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %19 = icmp ne %"struct.std::_Rb_tree_node"* %18, null
  %20 = select i1 %19, i32 -933484709, i32 1627631698
  store i32 %20, i32* %13
  br label %158

; <label>:21:                                     ; preds = %14
  %22 = load i32, i32* @x.1029
  %23 = load i32, i32* @y.1030
  %24 = sub i32 %22, 1192071619
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 1192071619
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 1050452188, i32 -1936287682
  store i32 %48, i32* %13
  br label %158

; <label>:49:                                     ; preds = %14
  %50 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %51 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %51, i32 0, i32 0
  %53 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %54 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E(%"struct.std::_Rb_tree_node"* %53)
  %55 = load i64*, i64** %11, align 8
  %56 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %52, i64* dereferenceable(8) %54, i64* dereferenceable(8) %55)
  store i1 %56, i1* %5
  %57 = load i32, i32* @x.1029
  %58 = load i32, i32* @y.1030
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -2068482604, i32 -1936287682
  store i32 %82, i32* %13
  br label %158

; <label>:83:                                     ; preds = %14
  %84 = load volatile i1, i1* %5
  %85 = select i1 %84, i32 962893317, i32 -1614864117
  store i32 %85, i32* %13
  br label %158

; <label>:86:                                     ; preds = %14
  %87 = load i32, i32* @x.1029
  %88 = load i32, i32* @y.1030
  %89 = add i32 %87, 37829253
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, 37829253
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 -1405065280, i32 -330621154
  store i32 %113, i32* %13
  br label %158

; <label>:114:                                    ; preds = %14
  %115 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  store %"struct.std::_Rb_tree_node"* %115, %"struct.std::_Rb_tree_node"** %10, align 8
  %116 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %117 = bitcast %"struct.std::_Rb_tree_node"* %116 to %"struct.std::_Rb_tree_node_base"*
  %118 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %117) #3
  store %"struct.std::_Rb_tree_node"* %118, %"struct.std::_Rb_tree_node"** %9, align 8
  %119 = load i32, i32* @x.1029
  %120 = load i32, i32* @y.1030
  %121 = sub i32 %119, -464941470
  %122 = sub i32 %121, 1
  %123 = add i32 %122, -464941470
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 -303560643, i32 -330621154
  store i32 %133, i32* %13
  br label %158

; <label>:134:                                    ; preds = %14
  store i32 -2103115669, i32* %13
  br label %158

; <label>:135:                                    ; preds = %14
  %136 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %137 = bitcast %"struct.std::_Rb_tree_node"* %136 to %"struct.std::_Rb_tree_node_base"*
  %138 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %137) #3
  store %"struct.std::_Rb_tree_node"* %138, %"struct.std::_Rb_tree_node"** %9, align 8
  store i32 -2103115669, i32* %13
  br label %158

; <label>:139:                                    ; preds = %14
  store i32 2122781700, i32* %13
  br label %158

; <label>:140:                                    ; preds = %14
  %141 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %142 = bitcast %"struct.std::_Rb_tree_node"* %141 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.66"* %7, %"struct.std::_Rb_tree_node_base"* %142) #3
  %143 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %7, i32 0, i32 0
  %144 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %143, align 8
  ret %"struct.std::_Rb_tree_node_base"* %144

; <label>:145:                                    ; preds = %14
  %146 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %147 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %146, i32 0, i32 0
  %148 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %147, i32 0, i32 0
  %149 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %150 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E(%"struct.std::_Rb_tree_node"* %149)
  %151 = load i64*, i64** %11, align 8
  %152 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %148, i64* dereferenceable(8) %150, i64* dereferenceable(8) %151)
  store i32 1050452188, i32* %13
  br label %158

; <label>:153:                                    ; preds = %14
  %154 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  store %"struct.std::_Rb_tree_node"* %154, %"struct.std::_Rb_tree_node"** %10, align 8
  %155 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %156 = bitcast %"struct.std::_Rb_tree_node"* %155 to %"struct.std::_Rb_tree_node_base"*
  %157 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %156) #3
  store %"struct.std::_Rb_tree_node"* %157, %"struct.std::_Rb_tree_node"** %9, align 8
  store i32 -1405065280, i32* %13
  br label %158

; <label>:158:                                    ; preds = %153, %145, %139, %135, %134, %114, %86, %83, %49, %21, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_M_endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1033
  %6 = load i32, i32* @y.1034
  %7 = add i32 %5, -364530418
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -364530418
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 673708992, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 673708992, label %19
    i32 -2099396472, label %27
    i32 -1421420654, label %59
    i32 -1289783808, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2099396472, i32 -1289783808
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %29 = alloca %"struct.std::_Select1st.68", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %28, align 8
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %28, align 8
  %31 = call dereferenceable(56) %"struct.std::pair.43"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_valueEPKSt13_Rb_tree_nodeIS7_E(%"struct.std::_Rb_tree_node"* %30)
  %32 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIxSt4lessIxESaIxEEEEclERKS7_(%"struct.std::_Select1st.68"* %29, %"struct.std::pair.43"* dereferenceable(56) %31)
  store i64* %32, i64** %2
  %33 = load i32, i32* @x.1033
  %34 = load i32, i32* @y.1034
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1421420654, i32 -1289783808
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %63 = alloca %"struct.std::_Select1st.68", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %62, align 8
  %64 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %62, align 8
  %65 = call dereferenceable(56) %"struct.std::pair.43"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_valueEPKSt13_Rb_tree_nodeIS7_E(%"struct.std::_Rb_tree_node"* %64)
  %66 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIxSt4lessIxESaIxEEEEclERKS7_(%"struct.std::_Select1st.68"* %63, %"struct.std::pair.43"* dereferenceable(56) %65)
  store i32 -2099396472, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %0, %"struct.std::_Rb_tree_iterator.66"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIxSt4lessIxESaIxEEEEclERKS7_(%"struct.std::_Select1st.68"*, %"struct.std::pair.43"* dereferenceable(56)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Select1st.68"*, align 8
  %4 = alloca %"struct.std::pair.43"*, align 8
  store %"struct.std::_Select1st.68"* %0, %"struct.std::_Select1st.68"** %3, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %4, align 8
  %5 = load %"struct.std::_Select1st.68"*, %"struct.std::_Select1st.68"** %3, align 8
  %6 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %6, i32 0, i32 0
  ret i64* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(56) %"struct.std::pair.43"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_valueEPKSt13_Rb_tree_nodeIS7_E(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = call %"struct.std::pair.43"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %3)
  ret %"struct.std::pair.43"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.43"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.43"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret %"struct.std::pair.43"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.43"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.43"*
  ret %"struct.std::pair.43"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIxSt4lessIxESaIxEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [56 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE3endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.66"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8key_compEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %5, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEEPSt13_Rb_tree_nodeIS7_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple.63"*, align 8
  %8 = alloca %"class.std::tuple.60"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple.63"* %2, %"class.std::tuple.63"** %7, align 8
  store %"class.std::tuple.60"* %3, %"class.std::tuple.60"** %8, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %11 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_get_nodeEv(%"class.std::_Rb_tree"* %10)
  store %"struct.std::_Rb_tree_node"* %11, %"struct.std::_Rb_tree_node"** %9, align 8
  %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %13 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %14 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %13) #3
  %15 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %7, align 8
  %16 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %15) #3
  %17 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %8, align 8
  %18 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %17) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEEvPSt13_Rb_tree_nodeIS7_EDpOT_(%"class.std::_Rb_tree"* %10, %"struct.std::_Rb_tree_node"* %12, %"struct.std::piecewise_construct_t"* dereferenceable(1) %14, %"class.std::tuple.63"* dereferenceable(8) %16, %"class.std::tuple.60"* dereferenceable(1) %18)
  %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  ret %"struct.std::_Rb_tree_node"* %19
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS7_ERS1_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca %"class.std::_Rb_tree"*
  %8 = alloca %"struct.std::pair.55", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator.67", align 8
  %10 = alloca %"class.std::_Rb_tree"*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %13 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %15 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %16 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %17 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %18 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %19 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.67", %"struct.std::_Rb_tree_const_iterator.67"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %20, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %10, align 8
  store i64* %2, i64** %11, align 8
  %21 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %10, align 8
  store %"class.std::_Rb_tree"* %21, %"class.std::_Rb_tree"** %7
  %22 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.67"* %9) #3
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %22, %"struct.std::_Rb_tree_node_base"** %23, align 8
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %24, align 8
  store %"struct.std::_Rb_tree_node_base"* %25, %"struct.std::_Rb_tree_node_base"** %6
  %26 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %27 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_M_endEv(%"class.std::_Rb_tree"* %26) #3
  %28 = bitcast %"struct.std::_Rb_tree_node"* %27 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %28, %"struct.std::_Rb_tree_node_base"** %5
  %29 = alloca i32
  store i32 -787378914, i32* %29
  br label %30

; <label>:30:                                     ; preds = %3, %457
  %31 = load i32, i32* %29
  switch i32 %31, label %32 [
    i32 -787378914, label %33
    i32 -1529453294, label %38
    i32 511817942, label %43
    i32 -777150298, label %54
    i32 749591530, label %57
    i32 182163722, label %85
    i32 -2034965622, label %109
    i32 1759264537, label %110
    i32 -200887491, label %120
    i32 -2131634512, label %130
    i32 -941017465, label %158
    i32 1594391967, label %178
    i32 -633517320, label %179
    i32 -347671657, label %190
    i32 -792488354, label %196
    i32 -1503060414, label %198
    i32 -1962452831, label %214
    i32 768448379, label %232
    i32 1704228535, label %233
    i32 272940994, label %249
    i32 -1472029416, label %284
    i32 1295287557, label %285
    i32 -1712551155, label %300
    i32 -10021743, label %323
    i32 -1148890709, label %326
    i32 49985437, label %336
    i32 -1928980079, label %339
    i32 1489856121, label %350
    i32 436131866, label %356
    i32 1896559554, label %358
    i32 1321661069, label %386
    i32 -469438276, label %404
    i32 1218322721, label %405
    i32 -1559322777, label %414
    i32 1061813947, label %416
    i32 719091712, label %419
    i32 -1363363586, label %428
    i32 1427894101, label %433
    i32 398224032, label %436
    i32 376178705, label %445
    i32 -753421086, label %454
  ]

; <label>:32:                                     ; preds = %30
  br label %457

; <label>:33:                                     ; preds = %30
  %34 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  %35 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  %36 = icmp eq %"struct.std::_Rb_tree_node_base"* %34, %35
  %37 = select i1 %36, i32 -1529453294, i32 1759264537
  store i32 %37, i32* %29
  br label %457

; <label>:38:                                     ; preds = %30
  %39 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %40 = call i64 @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE4sizeEv(%"class.std::_Rb_tree"* %39) #3
  %41 = icmp ugt i64 %40, 0
  %42 = select i1 %41, i32 511817942, i32 749591530
  store i32 %42, i32* %29
  br label %457

; <label>:43:                                     ; preds = %30
  %44 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %45 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %45, i32 0, i32 0
  %47 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %48 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %47) #3
  %49 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %50 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %49)
  %51 = load i64*, i64** %11, align 8
  %52 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %46, i64* dereferenceable(8) %50, i64* dereferenceable(8) %51)
  %53 = select i1 %52, i32 -777150298, i32 749591530
  store i32 %53, i32* %29
  br label %457

; <label>:54:                                     ; preds = %30
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %55 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %56 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %55) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %13, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %56)
  store i32 1061813947, i32* %29
  br label %457

; <label>:57:                                     ; preds = %30
  %58 = load i32, i32* @x.1053
  %59 = load i32, i32* @y.1054
  %60 = sub i32 %58, 568602536
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 568602536
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 182163722, i32 719091712
  store i32 %84, i32* %29
  br label %457

; <label>:85:                                     ; preds = %30
  %86 = load i64*, i64** %11, align 8
  %87 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %88 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %87, i64* dereferenceable(8) %86)
  %89 = bitcast %"struct.std::pair.55"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %90 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %89, i32 0, i32 0
  %91 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %88, 0
  store %"struct.std::_Rb_tree_node_base"* %91, %"struct.std::_Rb_tree_node_base"** %90, align 8
  %92 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %89, i32 0, i32 1
  %93 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %88, 1
  store %"struct.std::_Rb_tree_node_base"* %93, %"struct.std::_Rb_tree_node_base"** %92, align 8
  %94 = load i32, i32* @x.1053
  %95 = load i32, i32* @y.1054
  %96 = add i32 %94, 127273199
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 127273199
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 -2034965622, i32 719091712
  store i32 %108, i32* %29
  br label %457

; <label>:109:                                    ; preds = %30
  store i32 1061813947, i32* %29
  br label %457

; <label>:110:                                    ; preds = %30
  %111 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %112 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %112, i32 0, i32 0
  %114 = load i64*, i64** %11, align 8
  %115 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  %116 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %115, align 8
  %117 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %116)
  %118 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %113, i64* dereferenceable(8) %114, i64* dereferenceable(8) %117)
  %119 = select i1 %118, i32 -200887491, i32 1295287557
  store i32 %119, i32* %29
  br label %457

; <label>:120:                                    ; preds = %30
  %121 = bitcast %"struct.std::_Rb_tree_iterator.66"* %14 to i8*
  %122 = bitcast %"struct.std::_Rb_tree_iterator.66"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 8, i32 8, i1 false)
  %123 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  %124 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %123, align 8
  %125 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %126 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %125) #3
  %127 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %126, align 8
  %128 = icmp eq %"struct.std::_Rb_tree_node_base"* %124, %127
  %129 = select i1 %128, i32 -2131634512, i32 -633517320
  store i32 %129, i32* %29
  br label %457

; <label>:130:                                    ; preds = %30
  %131 = load i32, i32* @x.1053
  %132 = load i32, i32* @y.1054
  %133 = sub i32 %131, -830224198
  %134 = sub i32 %133, 1
  %135 = add i32 %134, -830224198
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 true, true
  %144 = and i1 %141, true
  %145 = and i1 %139, %143
  %146 = and i1 %142, true
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 true, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  %157 = select i1 %155, i32 -941017465, i32 -1363363586
  store i32 %157, i32* %29
  br label %457

; <label>:158:                                    ; preds = %30
  %159 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %160 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %159) #3
  %161 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %162 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %161) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %160, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %162)
  %163 = load i32, i32* @x.1053
  %164 = load i32, i32* @y.1054
  %165 = add i32 %163, 2101515607
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, 2101515607
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  %177 = select i1 %175, i32 1594391967, i32 -1363363586
  store i32 %177, i32* %29
  br label %457

; <label>:178:                                    ; preds = %30
  store i32 1061813947, i32* %29
  br label %457

; <label>:179:                                    ; preds = %30
  %180 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %181 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %180, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %181, i32 0, i32 0
  %183 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.66"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEmmEv(%"struct.std::_Rb_tree_iterator.66"* %14) #3
  %184 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %183, i32 0, i32 0
  %185 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %184, align 8
  %186 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %185)
  %187 = load i64*, i64** %11, align 8
  %188 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %182, i64* dereferenceable(8) %186, i64* dereferenceable(8) %187)
  %189 = select i1 %188, i32 -347671657, i32 1704228535
  store i32 %189, i32* %29
  br label %457

; <label>:190:                                    ; preds = %30
  %191 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %14, i32 0, i32 0
  %192 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %191, align 8
  %193 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %192) #3
  %194 = icmp eq %"struct.std::_Rb_tree_node"* %193, null
  %195 = select i1 %194, i32 -792488354, i32 -1503060414
  store i32 %195, i32* %29
  br label %457

; <label>:196:                                    ; preds = %30
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %197 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %14, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %15, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %197)
  store i32 1061813947, i32* %29
  br label %457

; <label>:198:                                    ; preds = %30
  %199 = load i32, i32* @x.1053
  %200 = load i32, i32* @y.1054
  %201 = sub i32 %199, 1381541241
  %202 = sub i32 %201, 1
  %203 = add i32 %202, 1381541241
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = and i1 %207, %208
  %210 = xor i1 %207, %208
  %211 = or i1 %209, %210
  %212 = or i1 %207, %208
  %213 = select i1 %211, i32 -1962452831, i32 1427894101
  store i32 %213, i32* %29
  br label %457

; <label>:214:                                    ; preds = %30
  %215 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %215, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %216)
  %217 = load i32, i32* @x.1053
  %218 = load i32, i32* @y.1054
  %219 = add i32 %217, -1166155068
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, -1166155068
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = and i1 %225, %226
  %228 = xor i1 %225, %226
  %229 = or i1 %227, %228
  %230 = or i1 %225, %226
  %231 = select i1 %229, i32 768448379, i32 1427894101
  store i32 %231, i32* %29
  br label %457

; <label>:232:                                    ; preds = %30
  store i32 1061813947, i32* %29
  br label %457

; <label>:233:                                    ; preds = %30
  %234 = load i32, i32* @x.1053
  %235 = load i32, i32* @y.1054
  %236 = add i32 %234, -528681219
  %237 = sub i32 %236, 1
  %238 = sub i32 %237, -528681219
  %239 = sub i32 %234, 1
  %240 = mul i32 %234, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %235, 10
  %244 = and i1 %242, %243
  %245 = xor i1 %242, %243
  %246 = or i1 %244, %245
  %247 = or i1 %242, %243
  %248 = select i1 %246, i32 272940994, i32 398224032
  store i32 %248, i32* %29
  br label %457

; <label>:249:                                    ; preds = %30
  %250 = load i64*, i64** %11, align 8
  %251 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %252 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %251, i64* dereferenceable(8) %250)
  %253 = bitcast %"struct.std::pair.55"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %254 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %253, i32 0, i32 0
  %255 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %252, 0
  store %"struct.std::_Rb_tree_node_base"* %255, %"struct.std::_Rb_tree_node_base"** %254, align 8
  %256 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %253, i32 0, i32 1
  %257 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %252, 1
  store %"struct.std::_Rb_tree_node_base"* %257, %"struct.std::_Rb_tree_node_base"** %256, align 8
  %258 = load i32, i32* @x.1053
  %259 = load i32, i32* @y.1054
  %260 = sub i32 0, 1
  %261 = add i32 %258, %260
  %262 = sub i32 %258, 1
  %263 = mul i32 %258, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %259, 10
  %267 = xor i1 %265, true
  %268 = xor i1 %266, true
  %269 = xor i1 true, true
  %270 = and i1 %267, true
  %271 = and i1 %265, %269
  %272 = and i1 %268, true
  %273 = and i1 %266, %269
  %274 = or i1 %270, %271
  %275 = or i1 %272, %273
  %276 = xor i1 %274, %275
  %277 = or i1 %267, %268
  %278 = xor i1 %277, true
  %279 = or i1 true, %269
  %280 = and i1 %278, %279
  %281 = or i1 %276, %280
  %282 = or i1 %265, %266
  %283 = select i1 %281, i32 -1472029416, i32 398224032
  store i32 %283, i32* %29
  br label %457

; <label>:284:                                    ; preds = %30
  store i32 1061813947, i32* %29
  br label %457

; <label>:285:                                    ; preds = %30
  %286 = load i32, i32* @x.1053
  %287 = load i32, i32* @y.1054
  %288 = sub i32 0, 1
  %289 = add i32 %286, %288
  %290 = sub i32 %286, 1
  %291 = mul i32 %286, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %287, 10
  %295 = and i1 %293, %294
  %296 = xor i1 %293, %294
  %297 = or i1 %295, %296
  %298 = or i1 %293, %294
  %299 = select i1 %297, i32 -1712551155, i32 376178705
  store i32 %299, i32* %29
  br label %457

; <label>:300:                                    ; preds = %30
  %301 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %302 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %302, i32 0, i32 0
  %304 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  %305 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %304, align 8
  %306 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %305)
  %307 = load i64*, i64** %11, align 8
  %308 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %303, i64* dereferenceable(8) %306, i64* dereferenceable(8) %307)
  store i1 %308, i1* %4
  %309 = load i32, i32* @x.1053
  %310 = load i32, i32* @y.1054
  %311 = sub i32 0, 1
  %312 = add i32 %309, %311
  %313 = sub i32 %309, 1
  %314 = mul i32 %309, %312
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %310, 10
  %318 = and i1 %316, %317
  %319 = xor i1 %316, %317
  %320 = or i1 %318, %319
  %321 = or i1 %316, %317
  %322 = select i1 %320, i32 -10021743, i32 376178705
  store i32 %322, i32* %29
  br label %457

; <label>:323:                                    ; preds = %30
  %324 = load volatile i1, i1* %4
  %325 = select i1 %324, i32 -1148890709, i32 -1559322777
  store i32 %325, i32* %29
  br label %457

; <label>:326:                                    ; preds = %30
  %327 = bitcast %"struct.std::_Rb_tree_iterator.66"* %16 to i8*
  %328 = bitcast %"struct.std::_Rb_tree_iterator.66"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %327, i8* %328, i64 8, i32 8, i1 false)
  %329 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  %330 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %329, align 8
  %331 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %332 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %331) #3
  %333 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %332, align 8
  %334 = icmp eq %"struct.std::_Rb_tree_node_base"* %330, %333
  %335 = select i1 %334, i32 49985437, i32 -1928980079
  store i32 %335, i32* %29
  br label %457

; <label>:336:                                    ; preds = %30
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %337 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %338 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %337) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %17, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %338)
  store i32 1061813947, i32* %29
  br label %457

; <label>:339:                                    ; preds = %30
  %340 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %341 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %340, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %341, i32 0, i32 0
  %343 = load i64*, i64** %11, align 8
  %344 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.66"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEppEv(%"struct.std::_Rb_tree_iterator.66"* %16) #3
  %345 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %344, i32 0, i32 0
  %346 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %345, align 8
  %347 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %346)
  %348 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %342, i64* dereferenceable(8) %343, i64* dereferenceable(8) %347)
  %349 = select i1 %348, i32 1489856121, i32 1218322721
  store i32 %349, i32* %29
  br label %457

; <label>:350:                                    ; preds = %30
  %351 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  %352 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %351, align 8
  %353 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %352) #3
  %354 = icmp eq %"struct.std::_Rb_tree_node"* %353, null
  %355 = select i1 %354, i32 436131866, i32 1896559554
  store i32 %355, i32* %29
  br label %457

; <label>:356:                                    ; preds = %30
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %357 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %357)
  store i32 1061813947, i32* %29
  br label %457

; <label>:358:                                    ; preds = %30
  %359 = load i32, i32* @x.1053
  %360 = load i32, i32* @y.1054
  %361 = sub i32 %359, -1919961304
  %362 = sub i32 %361, 1
  %363 = add i32 %362, -1919961304
  %364 = sub i32 %359, 1
  %365 = mul i32 %359, %363
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %360, 10
  %369 = xor i1 %367, true
  %370 = xor i1 %368, true
  %371 = xor i1 true, true
  %372 = and i1 %369, true
  %373 = and i1 %367, %371
  %374 = and i1 %370, true
  %375 = and i1 %368, %371
  %376 = or i1 %372, %373
  %377 = or i1 %374, %375
  %378 = xor i1 %376, %377
  %379 = or i1 %369, %370
  %380 = xor i1 %379, true
  %381 = or i1 true, %371
  %382 = and i1 %380, %381
  %383 = or i1 %378, %382
  %384 = or i1 %367, %368
  %385 = select i1 %383, i32 1321661069, i32 -753421086
  store i32 %385, i32* %29
  br label %457

; <label>:386:                                    ; preds = %30
  %387 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %16, i32 0, i32 0
  %388 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %16, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %387, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %388)
  %389 = load i32, i32* @x.1053
  %390 = load i32, i32* @y.1054
  %391 = sub i32 %389, -19359954
  %392 = sub i32 %391, 1
  %393 = add i32 %392, -19359954
  %394 = sub i32 %389, 1
  %395 = mul i32 %389, %393
  %396 = urem i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = icmp slt i32 %390, 10
  %399 = and i1 %397, %398
  %400 = xor i1 %397, %398
  %401 = or i1 %399, %400
  %402 = or i1 %397, %398
  %403 = select i1 %401, i32 -469438276, i32 -753421086
  store i32 %403, i32* %29
  br label %457

; <label>:404:                                    ; preds = %30
  store i32 1061813947, i32* %29
  br label %457

; <label>:405:                                    ; preds = %30
  %406 = load i64*, i64** %11, align 8
  %407 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %408 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %407, i64* dereferenceable(8) %406)
  %409 = bitcast %"struct.std::pair.55"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %410 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %409, i32 0, i32 0
  %411 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %408, 0
  store %"struct.std::_Rb_tree_node_base"* %411, %"struct.std::_Rb_tree_node_base"** %410, align 8
  %412 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %409, i32 0, i32 1
  %413 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %408, 1
  store %"struct.std::_Rb_tree_node_base"* %413, %"struct.std::_Rb_tree_node_base"** %412, align 8
  store i32 1061813947, i32* %29
  br label %457

; <label>:414:                                    ; preds = %30
  %415 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %19, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %415, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %19)
  store i32 1061813947, i32* %29
  br label %457

; <label>:416:                                    ; preds = %30
  %417 = bitcast %"struct.std::pair.55"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %418 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %417, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %418

; <label>:419:                                    ; preds = %30
  %420 = load i64*, i64** %11, align 8
  %421 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %422 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %421, i64* dereferenceable(8) %420)
  %423 = bitcast %"struct.std::pair.55"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %424 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %423, i32 0, i32 0
  %425 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %422, 0
  store %"struct.std::_Rb_tree_node_base"* %425, %"struct.std::_Rb_tree_node_base"** %424, align 8
  %426 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %423, i32 0, i32 1
  %427 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %422, 1
  store %"struct.std::_Rb_tree_node_base"* %427, %"struct.std::_Rb_tree_node_base"** %426, align 8
  store i32 182163722, i32* %29
  br label %457

; <label>:428:                                    ; preds = %30
  %429 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %430 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %429) #3
  %431 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %432 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %431) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %430, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %432)
  store i32 -941017465, i32* %29
  br label %457

; <label>:433:                                    ; preds = %30
  %434 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  %435 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %434, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %435)
  store i32 -1962452831, i32* %29
  br label %457

; <label>:436:                                    ; preds = %30
  %437 = load i64*, i64** %11, align 8
  %438 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %439 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %438, i64* dereferenceable(8) %437)
  %440 = bitcast %"struct.std::pair.55"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %441 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %440, i32 0, i32 0
  %442 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %439, 0
  store %"struct.std::_Rb_tree_node_base"* %442, %"struct.std::_Rb_tree_node_base"** %441, align 8
  %443 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %440, i32 0, i32 1
  %444 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %439, 1
  store %"struct.std::_Rb_tree_node_base"* %444, %"struct.std::_Rb_tree_node_base"** %443, align 8
  store i32 272940994, i32* %29
  br label %457

; <label>:445:                                    ; preds = %30
  %446 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %447 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %446, i32 0, i32 0
  %448 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %447, i32 0, i32 0
  %449 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %12, i32 0, i32 0
  %450 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %449, align 8
  %451 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %450)
  %452 = load i64*, i64** %11, align 8
  %453 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %448, i64* dereferenceable(8) %451, i64* dereferenceable(8) %452)
  store i32 -1712551155, i32* %29
  br label %457

; <label>:454:                                    ; preds = %30
  %455 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %16, i32 0, i32 0
  %456 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %16, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %455, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %456)
  store i32 1321661069, i32* %29
  br label %457

; <label>:457:                                    ; preds = %454, %445, %436, %433, %428, %419, %414, %405, %404, %386, %358, %356, %350, %339, %336, %326, %323, %300, %285, %284, %249, %233, %232, %214, %198, %196, %190, %179, %178, %158, %130, %120, %110, %109, %85, %57, %54, %43, %38, %33, %32
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %8 = alloca %"class.std::_Rb_tree"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %12 = alloca i8, align 1
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node"* %3, %"struct.std::_Rb_tree_node"** %11, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8, align 8
  store %"class.std::_Rb_tree"* %13, %"class.std::_Rb_tree"** %6
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %5
  %15 = alloca i32
  store i32 551628176, i32* %15
  %16 = alloca i1
  br label %17

; <label>:17:                                     ; preds = %4, %63
  %18 = load i32, i32* %15
  switch i32 %18, label %19 [
    i32 551628176, label %20
    i32 971094699, label %24
    i32 -254570024, label %31
    i32 -1079903448, label %40
  ]

; <label>:19:                                     ; preds = %17
  br label %63

; <label>:20:                                     ; preds = %17
  %21 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  %22 = icmp ne %"struct.std::_Rb_tree_node_base"* %21, null
  %23 = select i1 %22, i32 -1079903448, i32 971094699
  store i32 %23, i32* %15
  store i1 true, i1* %16
  br label %63

; <label>:24:                                     ; preds = %17
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %26 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %27 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_M_endEv(%"class.std::_Rb_tree"* %26) #3
  %28 = bitcast %"struct.std::_Rb_tree_node"* %27 to %"struct.std::_Rb_tree_node_base"*
  %29 = icmp eq %"struct.std::_Rb_tree_node_base"* %25, %28
  %30 = select i1 %29, i32 -1079903448, i32 -254570024
  store i32 %30, i32* %15
  store i1 true, i1* %16
  br label %63

; <label>:31:                                     ; preds = %17
  %32 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %33 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %36 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E(%"struct.std::_Rb_tree_node"* %35)
  %37 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %38 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %37)
  %39 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %34, i64* dereferenceable(8) %36, i64* dereferenceable(8) %38)
  store i32 -1079903448, i32* %15
  store i1 %39, i1* %16
  br label %63

; <label>:40:                                     ; preds = %17
  %41 = load i1, i1* %16
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %12, align 1
  %43 = load i8, i8* %12, align 1
  %44 = trunc i8 %43 to i1
  %45 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %46 = bitcast %"struct.std::_Rb_tree_node"* %45 to %"struct.std::_Rb_tree_node_base"*
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %48 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %49 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %49, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %44, %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %50) #3
  %51 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %52 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %52, i32 0, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, -1083495706630260342
  %56 = add i64 %55, 1
  %57 = sub i64 %56, -1083495706630260342
  %58 = add i64 %54, 1
  store i64 %57, i64* %53, align 8
  %59 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %60 = bitcast %"struct.std::_Rb_tree_node"* %59 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.66"* %7, %"struct.std::_Rb_tree_node_base"* %60) #3
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %7, i32 0, i32 0
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  ret %"struct.std::_Rb_tree_node_base"* %62

; <label>:63:                                     ; preds = %31, %24, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1057
  %6 = load i32, i32* @y.1058
  %7 = add i32 %5, 1575386170
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1575386170
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1685546408, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1685546408, label %19
    i32 -1273274887, label %27
    i32 1553855414, label %59
    i32 -564843217, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1273274887, i32 -564843217
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %28, align 8
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %28, align 8
  %30 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %29) #3
  %31 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE8allocateERSA_m(%"class.std::allocator.15"* dereferenceable(1) %30, i64 1)
  store %"struct.std::_Rb_tree_node"* %31, %"struct.std::_Rb_tree_node"** %2
  %32 = load i32, i32* @x.1057
  %33 = load i32, i32* @y.1058
  %34 = sub i32 %32, 1257474064
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1257474064
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1553855414, i32 -564843217
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %62, align 8
  %63 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %62, align 8
  %64 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %63) #3
  %65 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE8allocateERSA_m(%"class.std::allocator.15"* dereferenceable(1) %64, i64 1)
  store i32 -1273274887, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESG_IJEEEEEvPSt13_Rb_tree_nodeIS7_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.63"*, align 8
  %10 = alloca %"class.std::tuple.60"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %9, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %10, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node"*
  %17 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %13) #3
  %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %19 = invoke %"struct.std::pair.43"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %18)
          to label %20 unwind label %28

; <label>:20:                                     ; preds = %5
  %21 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %22 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %21) #3
  %23 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %24 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %23) #3
  %25 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %26 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %25) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE9constructIS8_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESG_IJEEEEEvRSA_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %17, %"struct.std::pair.43"* %19, %"struct.std::piecewise_construct_t"* dereferenceable(1) %22, %"class.std::tuple.63"* dereferenceable(8) %24, %"class.std::tuple.60"* dereferenceable(1) %26)
          to label %27 unwind label %28

; <label>:27:                                     ; preds = %20
  br label %101

; <label>:28:                                     ; preds = %20, %5
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %11, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %12, align 4
  br label %32

; <label>:32:                                     ; preds = %28
  %33 = load i32, i32* @x.1059
  %34 = load i32, i32* @y.1060
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %153

; <label>:46:                                     ; preds = %32, %153
  %47 = load i8*, i8** %11, align 8
  %48 = call i8* @__cxa_begin_catch(i8* %47) #3
  %49 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %50 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %50) #3
  %51 = load i32, i32* @x.1059
  %52 = load i32, i32* @y.1060
  %53 = sub i32 %51, 276566782
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 276566782
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %153

; <label>:65:                                     ; preds = %46
  invoke void @__cxa_rethrow() #14
          to label %152 unwind label %66

; <label>:66:                                     ; preds = %65
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %11, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %12, align 4
  invoke void @__cxa_end_catch()
          to label %70 unwind label %107

; <label>:70:                                     ; preds = %66
  %71 = load i32, i32* @x.1059
  %72 = load i32, i32* @y.1060
  %73 = add i32 %71, 615965615
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 615965615
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %158

; <label>:85:                                     ; preds = %70, %158
  %86 = load i32, i32* @x.1059
  %87 = load i32, i32* @y.1060
  %88 = add i32 %86, 2114274979
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, 2114274979
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %158

; <label>:100:                                    ; preds = %85
  br label %102

; <label>:101:                                    ; preds = %27
  ret void

; <label>:102:                                    ; preds = %100
  %103 = load i8*, i8** %11, align 8
  %104 = load i32, i32* %12, align 4
  %105 = insertvalue { i8*, i32 } undef, i8* %103, 0
  %106 = insertvalue { i8*, i32 } %105, i32 %104, 1
  resume { i8*, i32 } %106

; <label>:107:                                    ; preds = %66
  %108 = load i32, i32* @x.1059
  %109 = load i32, i32* @y.1060
  %110 = add i32 %108, -81888212
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -81888212
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  br i1 %132, label %134, label %159

; <label>:134:                                    ; preds = %107, %159
  %135 = landingpad { i8*, i32 }
          catch i8* null
  %136 = extractvalue { i8*, i32 } %135, 0
  call void @__clang_call_terminate(i8* %136) #12
  %137 = load i32, i32* @x.1059
  %138 = load i32, i32* @y.1060
  %139 = sub i32 %137, 1169210715
  %140 = sub i32 %139, 1
  %141 = add i32 %140, 1169210715
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  br i1 %149, label %151, label %159

; <label>:151:                                    ; preds = %134
  unreachable

; <label>:152:                                    ; preds = %65
  unreachable

; <label>:153:                                    ; preds = %46, %32
  %154 = load i8*, i8** %11, align 8
  %155 = call i8* @__cxa_begin_catch(i8* %154) #3
  %156 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %157 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS7_E(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %157) #3
  br label %46

; <label>:158:                                    ; preds = %85, %70
  br label %85

; <label>:159:                                    ; preds = %134, %107
  %160 = landingpad { i8*, i32 }
          catch i8* null
  %161 = extractvalue { i8*, i32 } %160, 0
  call void @__clang_call_terminate(i8* %161) #12
  br label %134
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE8allocateERSA_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 264955628, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 264955628, label %16
    i32 -105672675, label %21
    i32 -1450198062, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -105672675, i32 -1450198062
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 88
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret i64 209622091746699450
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEE9constructIS8_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESG_IJEEEEEvRSA_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::pair.43"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.15"*, align 8
  %7 = alloca %"struct.std::pair.43"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.63"*, align 8
  %10 = alloca %"class.std::tuple.60"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %6, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %9, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %10, align 8
  %11 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %6, align 8
  %12 = bitcast %"class.std::allocator.15"* %11 to %"class.__gnu_cxx::new_allocator.16"*
  %13 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESG_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %12, %"struct.std::pair.43"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple.63"* dereferenceable(8) %17, %"class.std::tuple.60"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESG_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::pair.43"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %7 = alloca %"struct.std::pair.43"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.63"*, align 8
  %10 = alloca %"class.std::tuple.60"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple.63", align 8
  %13 = alloca %"class.std::tuple.60", align 1
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  store %"struct.std::pair.43"* %1, %"struct.std::pair.43"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %9, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  %15 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %7, align 8
  %16 = bitcast %"struct.std::pair.43"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair.43"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple.63"* %12, %"class.std::tuple.63"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple.63", %"class.std::tuple.63"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl.64", %"struct.std::_Tuple_impl.64"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base.65", %"struct.std::_Head_base.65"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESA_IJDpT0_EE(%"struct.std::pair.43"* %17, i64* %27)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESA_IJDpT0_EE(%"struct.std::pair.43"*, i64*) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1071
  %6 = load i32, i32* @y.1072
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1373490893, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %88
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1373490893, label %18
    i32 -728090361, label %38
    i32 -429934350, label %76
    i32 -249228535, label %77
  ]

; <label>:17:                                     ; preds = %15
  br label %88

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -728090361, i32 -249228535
  store i32 %37, i32* %14
  br label %88

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::piecewise_construct_t", align 1
  %40 = alloca %"class.std::tuple.63", align 8
  %41 = alloca %"class.std::tuple.60", align 1
  %42 = alloca %"struct.std::pair.43"*, align 8
  %43 = alloca %"struct.std::_Index_tuple", align 1
  %44 = alloca %"struct.std::_Index_tuple.62", align 1
  %45 = getelementptr inbounds %"class.std::tuple.63", %"class.std::tuple.63"* %40, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Tuple_impl.64", %"struct.std::_Tuple_impl.64"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Head_base.65", %"struct.std::_Head_base.65"* %46, i32 0, i32 0
  store i64* %1, i64** %47, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %42, align 8
  %48 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %42, align 8
  call void @_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS9_IJDpT1_EESt12_Index_tupleIJXspT0_EEESI_IJXspT2_EEE(%"struct.std::pair.43"* %48, %"class.std::tuple.63"* dereferenceable(8) %40, %"class.std::tuple.60"* dereferenceable(1) %41)
  %49 = load i32, i32* @x.1071
  %50 = load i32, i32* @y.1072
  %51 = sub i32 %49, -959323630
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -959323630
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -429934350, i32 -249228535
  store i32 %75, i32* %14
  br label %88

; <label>:76:                                     ; preds = %15
  ret void

; <label>:77:                                     ; preds = %15
  %78 = alloca %"struct.std::piecewise_construct_t", align 1
  %79 = alloca %"class.std::tuple.63", align 8
  %80 = alloca %"class.std::tuple.60", align 1
  %81 = alloca %"struct.std::pair.43"*, align 8
  %82 = alloca %"struct.std::_Index_tuple", align 1
  %83 = alloca %"struct.std::_Index_tuple.62", align 1
  %84 = getelementptr inbounds %"class.std::tuple.63", %"class.std::tuple.63"* %79, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Tuple_impl.64", %"struct.std::_Tuple_impl.64"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Head_base.65", %"struct.std::_Head_base.65"* %85, i32 0, i32 0
  store i64* %1, i64** %86, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %81, align 8
  %87 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %81, align 8
  call void @_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS9_IJDpT1_EESt12_Index_tupleIJXspT0_EEESI_IJXspT2_EEE(%"struct.std::pair.43"* %87, %"class.std::tuple.63"* dereferenceable(8) %79, %"class.std::tuple.60"* dereferenceable(1) %80)
  store i32 -728090361, i32* %14
  br label %88

; <label>:88:                                     ; preds = %77, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxSt3setIxSt4lessIxESaIxEEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS9_IJDpT1_EESt12_Index_tupleIJXspT0_EEESI_IJXspT2_EEE(%"struct.std::pair.43"*, %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.62", align 1
  %6 = alloca %"struct.std::pair.43"*, align 8
  %7 = alloca %"class.std::tuple.63"*, align 8
  %8 = alloca %"class.std::tuple.60"*, align 8
  store %"struct.std::pair.43"* %0, %"struct.std::pair.43"** %6, align 8
  store %"class.std::tuple.63"* %1, %"class.std::tuple.63"** %7, align 8
  store %"class.std::tuple.60"* %2, %"class.std::tuple.60"** %8, align 8
  %9 = load %"struct.std::pair.43"*, %"struct.std::pair.43"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %7, align 8
  %12 = call dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.63"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %10, align 8
  %15 = getelementptr inbounds %"struct.std::pair.43", %"struct.std::pair.43"* %9, i32 0, i32 1
  call void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set.23"* %15) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set.23"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::set.23"*, align 8
  store %"class.std::set.23"* %0, %"class.std::set.23"** %2, align 8
  %3 = load %"class.std::set.23"*, %"class.std::set.23"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree.24"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree.24"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1077
  %5 = load i32, i32* @y.1078
  %6 = add i32 %4, 249378962
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 249378962
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1631738069, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1631738069, label %18
    i32 -170845661, label %26
    i32 870228713, label %45
    i32 -831118685, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -170845661, i32 -831118685
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %27, align 8
  %28 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %27, align 8
  %29 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %28, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %29)
  %30 = load i32, i32* @x.1077
  %31 = load i32, i32* @y.1078
  %32 = add i32 %30, 1159486692
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1159486692
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 870228713, i32 -831118685
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %47, align 8
  %48 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %47, align 8
  %49 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %48, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %49)
  store i32 -170845661, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.1079
  %3 = load i32, i32* @y.1080
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %129

; <label>:27:                                     ; preds = %1, %129
  %28 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %28, align 8
  %31 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %28, align 8
  %32 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31 to %"class.std::allocator.25"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.25"* %32) #3
  %33 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 1
  %35 = bitcast %"struct.std::_Rb_tree_node_base"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 32, i32 8, i1 false)
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 2
  store i64 0, i64* %36, align 8
  %37 = load i32, i32* @x.1079
  %38 = load i32, i32* @y.1080
  %39 = sub i32 %37, -599529072
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -599529072
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %129

; <label>:63:                                     ; preds = %27
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31)
          to label %64 unwind label %65

; <label>:64:                                     ; preds = %63
  ret void

; <label>:65:                                     ; preds = %63
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %29, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %30, align 4
  %69 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31 to %"class.std::allocator.25"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.25"* %69) #3
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = load i32, i32* @x.1079
  %72 = load i32, i32* @y.1080
  %73 = sub i32 %71, -248073598
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -248073598
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %139

; <label>:97:                                     ; preds = %70, %139
  %98 = load i8*, i8** %29, align 8
  %99 = load i32, i32* %30, align 4
  %100 = insertvalue { i8*, i32 } undef, i8* %98, 0
  %101 = insertvalue { i8*, i32 } %100, i32 %99, 1
  %102 = load i32, i32* @x.1079
  %103 = load i32, i32* @y.1080
  %104 = add i32 %102, 1361209739
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, 1361209739
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %139

; <label>:128:                                    ; preds = %97
  resume { i8*, i32 } %101

; <label>:129:                                    ; preds = %27, %1
  %130 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %131 = alloca i8*
  %132 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %130, align 8
  %133 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %130, align 8
  %134 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %133 to %"class.std::allocator.25"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.25"* %134) #3
  %135 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %133, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %133, i32 0, i32 1
  %137 = bitcast %"struct.std::_Rb_tree_node_base"* %136 to i8*
  call void @llvm.memset.p0i8.i64(i8* %137, i8 0, i64 32, i32 8, i1 false)
  %138 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %133, i32 0, i32 2
  store i64 0, i64* %138, align 8
  br label %27

; <label>:139:                                    ; preds = %97, %70
  %140 = load i8*, i8** %29, align 8
  %141 = load i32, i32* %30, align 4
  %142 = insertvalue { i8*, i32 } undef, i8* %140, 0
  %143 = insertvalue { i8*, i32 } %142, i32 %141, 1
  br label %97
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.25"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  %3 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  %4 = bitcast %"class.std::allocator.25"* %3 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.67"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.67"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.67"* %0, %"struct.std::_Rb_tree_const_iterator.67"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator.67"*, %"struct.std::_Rb_tree_const_iterator.67"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.67", %"struct.std::_Rb_tree_const_iterator.67"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.66"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE4sizeEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %4, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1087
  %6 = load i32, i32* @y.1088
  %7 = add i32 %5, 1007938695
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1007938695
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1443164245, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1443164245, label %19
    i32 606833976, label %27
    i32 -808512209, label %47
    i32 233556266, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 606833976, i32 233556266
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %29 = alloca %"struct.std::_Select1st.68", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %31 = call dereferenceable(56) %"struct.std::pair.43"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %30)
  %32 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIxSt4lessIxESaIxEEEEclERKS7_(%"struct.std::_Select1st.68"* %29, %"struct.std::pair.43"* dereferenceable(56) %31)
  store i64* %32, i64** %2
  %33 = load i32, i32* @x.1087
  %34 = load i32, i32* @y.1088
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -808512209, i32 233556266
  store i32 %46, i32* %15
  br label %55

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64*, i64** %2
  ret i64* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %51 = alloca %"struct.std::_Select1st.68", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %53 = call dereferenceable(56) %"struct.std::pair.43"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %52)
  %54 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIxSt4lessIxESaIxEEEEclERKS7_(%"struct.std::_Select1st.68"* %51, %"struct.std::pair.43"* dereferenceable(56) %53)
  store i32 606833976, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE12_M_rightmostEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 3
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node"*
  %7 = alloca %"class.std::_Rb_tree"*
  %8 = alloca %"struct.std::pair.55", align 8
  %9 = alloca %"class.std::_Rb_tree"*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %13 = alloca i8, align 1
  %14 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %15 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %16 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %9, align 8
  store i64* %1, i64** %10, align 8
  %17 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9, align 8
  store %"class.std::_Rb_tree"* %17, %"class.std::_Rb_tree"** %7
  %18 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %19 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_M_beginEv(%"class.std::_Rb_tree"* %18) #3
  store %"struct.std::_Rb_tree_node"* %19, %"struct.std::_Rb_tree_node"** %11, align 8
  %20 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %21 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_M_endEv(%"class.std::_Rb_tree"* %20) #3
  store %"struct.std::_Rb_tree_node"* %21, %"struct.std::_Rb_tree_node"** %12, align 8
  store i8 1, i8* %13, align 1
  %22 = alloca i32
  store i32 133361225, i32* %22
  %23 = alloca %"struct.std::_Rb_tree_node"*
  br label %24

; <label>:24:                                     ; preds = %2, %366
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 133361225, label %27
    i32 -1678332409, label %31
    i32 -91804808, label %44
    i32 450171405, label %48
    i32 1949109641, label %63
    i32 -780749352, label %94
    i32 393187530, label %96
    i32 -1554653200, label %124
    i32 1284198359, label %153
    i32 1075606967, label %154
    i32 146359589, label %160
    i32 -791728513, label %187
    i32 1902591589, label %207
    i32 -1827823525, label %210
    i32 -573999812, label %211
    i32 -748798643, label %213
    i32 -1748522154, label %228
    i32 354147296, label %255
    i32 -1026166289, label %256
    i32 816564220, label %266
    i32 -556063808, label %267
    i32 -658321328, label %283
    i32 471283176, label %300
    i32 983458478, label %301
    i32 834398393, label %317
    i32 566482784, label %347
    i32 -598043212, label %349
    i32 -610688026, label %353
    i32 250404884, label %355
    i32 -1236992139, label %360
    i32 -964149938, label %361
    i32 1789029218, label %363
  ]

; <label>:26:                                     ; preds = %24
  br label %366

; <label>:27:                                     ; preds = %24
  %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %29 = icmp ne %"struct.std::_Rb_tree_node"* %28, null
  %30 = select i1 %29, i32 -1678332409, i32 1075606967
  store i32 %30, i32* %22
  br label %366

; <label>:31:                                     ; preds = %24
  %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  store %"struct.std::_Rb_tree_node"* %32, %"struct.std::_Rb_tree_node"** %12, align 8
  %33 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %34 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %34, i32 0, i32 0
  %36 = load i64*, i64** %10, align 8
  %37 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %38 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt13_Rb_tree_nodeIS7_E(%"struct.std::_Rb_tree_node"* %37)
  %39 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %35, i64* dereferenceable(8) %36, i64* dereferenceable(8) %38)
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %13, align 1
  %41 = load i8, i8* %13, align 1
  %42 = trunc i8 %41 to i1
  %43 = select i1 %42, i32 -91804808, i32 450171405
  store i32 %43, i32* %22
  br label %366

; <label>:44:                                     ; preds = %24
  %45 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %46 = bitcast %"struct.std::_Rb_tree_node"* %45 to %"struct.std::_Rb_tree_node_base"*
  %47 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %46) #3
  store i32 393187530, i32* %22
  store %"struct.std::_Rb_tree_node"* %47, %"struct.std::_Rb_tree_node"** %23
  br label %366

; <label>:48:                                     ; preds = %24
  %49 = load i32, i32* @x.1091
  %50 = load i32, i32* @y.1092
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1949109641, i32 -598043212
  store i32 %62, i32* %22
  br label %366

; <label>:63:                                     ; preds = %24
  %64 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %65 = bitcast %"struct.std::_Rb_tree_node"* %64 to %"struct.std::_Rb_tree_node_base"*
  %66 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %65) #3
  store %"struct.std::_Rb_tree_node"* %66, %"struct.std::_Rb_tree_node"** %6
  %67 = load i32, i32* @x.1091
  %68 = load i32, i32* @y.1092
  %69 = sub i32 %67, -874384483
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -874384483
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 -780749352, i32 -598043212
  store i32 %93, i32* %22
  br label %366

; <label>:94:                                     ; preds = %24
  store i32 393187530, i32* %22
  %95 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6
  store %"struct.std::_Rb_tree_node"* %95, %"struct.std::_Rb_tree_node"** %23
  br label %366

; <label>:96:                                     ; preds = %24
  %97 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %23
  store %"struct.std::_Rb_tree_node"* %97, %"struct.std::_Rb_tree_node"** %3
  %98 = load i32, i32* @x.1091
  %99 = load i32, i32* @y.1092
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 -1554653200, i32 -610688026
  store i32 %123, i32* %22
  br label %366

; <label>:124:                                    ; preds = %24
  %125 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %125, %"struct.std::_Rb_tree_node"** %11, align 8
  %126 = load i32, i32* @x.1091
  %127 = load i32, i32* @y.1092
  %128 = add i32 %126, -1994464676
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, -1994464676
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 1284198359, i32 -610688026
  store i32 %152, i32* %22
  br label %366

; <label>:153:                                    ; preds = %24
  store i32 133361225, i32* %22
  br label %366

; <label>:154:                                    ; preds = %24
  %155 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %156 = bitcast %"struct.std::_Rb_tree_node"* %155 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.66"* %14, %"struct.std::_Rb_tree_node_base"* %156) #3
  %157 = load i8, i8* %13, align 1
  %158 = trunc i8 %157 to i1
  %159 = select i1 %158, i32 146359589, i32 -1026166289
  store i32 %159, i32* %22
  br label %366

; <label>:160:                                    ; preds = %24
  %161 = load i32, i32* @x.1091
  %162 = load i32, i32* @y.1092
  %163 = sub i32 0, 1
  %164 = add i32 %161, %163
  %165 = sub i32 %161, 1
  %166 = mul i32 %161, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %162, 10
  %170 = xor i1 %168, true
  %171 = xor i1 %169, true
  %172 = xor i1 false, true
  %173 = and i1 %170, false
  %174 = and i1 %168, %172
  %175 = and i1 %171, false
  %176 = and i1 %169, %172
  %177 = or i1 %173, %174
  %178 = or i1 %175, %176
  %179 = xor i1 %177, %178
  %180 = or i1 %170, %171
  %181 = xor i1 %180, true
  %182 = or i1 false, %172
  %183 = and i1 %181, %182
  %184 = or i1 %179, %183
  %185 = or i1 %168, %169
  %186 = select i1 %184, i32 -791728513, i32 250404884
  store i32 %186, i32* %22
  br label %366

; <label>:187:                                    ; preds = %24
  %188 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %189 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE5beginEv(%"class.std::_Rb_tree"* %188) #3
  %190 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %15, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %189, %"struct.std::_Rb_tree_node_base"** %190, align 8
  %191 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEeqERKS8_(%"struct.std::_Rb_tree_iterator.66"* %14, %"struct.std::_Rb_tree_iterator.66"* dereferenceable(8) %15) #3
  store i1 %191, i1* %5
  %192 = load i32, i32* @x.1091
  %193 = load i32, i32* @y.1092
  %194 = add i32 %192, 1410259106
  %195 = sub i32 %194, 1
  %196 = sub i32 %195, 1410259106
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  %206 = select i1 %204, i32 1902591589, i32 250404884
  store i32 %206, i32* %22
  br label %366

; <label>:207:                                    ; preds = %24
  %208 = load volatile i1, i1* %5
  %209 = select i1 %208, i32 -1827823525, i32 -573999812
  store i32 %209, i32* %22
  br label %366

; <label>:210:                                    ; preds = %24
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3setIxSt4lessIxESaIxEEEESE_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11, %"struct.std::_Rb_tree_node"** dereferenceable(8) %12)
  store i32 983458478, i32* %22
  br label %366

; <label>:211:                                    ; preds = %24
  %212 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.66"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEmmEv(%"struct.std::_Rb_tree_iterator.66"* %14) #3
  store i32 -748798643, i32* %22
  br label %366

; <label>:213:                                    ; preds = %24
  %214 = load i32, i32* @x.1091
  %215 = load i32, i32* @y.1092
  %216 = sub i32 0, 1
  %217 = add i32 %214, %216
  %218 = sub i32 %214, 1
  %219 = mul i32 %214, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %215, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  %227 = select i1 %225, i32 -1748522154, i32 -1236992139
  store i32 %227, i32* %22
  br label %366

; <label>:228:                                    ; preds = %24
  %229 = load i32, i32* @x.1091
  %230 = load i32, i32* @y.1092
  %231 = sub i32 0, 1
  %232 = add i32 %229, %231
  %233 = sub i32 %229, 1
  %234 = mul i32 %229, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %230, 10
  %238 = xor i1 %236, true
  %239 = xor i1 %237, true
  %240 = xor i1 true, true
  %241 = and i1 %238, true
  %242 = and i1 %236, %240
  %243 = and i1 %239, true
  %244 = and i1 %237, %240
  %245 = or i1 %241, %242
  %246 = or i1 %243, %244
  %247 = xor i1 %245, %246
  %248 = or i1 %238, %239
  %249 = xor i1 %248, true
  %250 = or i1 true, %240
  %251 = and i1 %249, %250
  %252 = or i1 %247, %251
  %253 = or i1 %236, %237
  %254 = select i1 %252, i32 354147296, i32 -1236992139
  store i32 %254, i32* %22
  br label %366

; <label>:255:                                    ; preds = %24
  store i32 -1026166289, i32* %22
  br label %366

; <label>:256:                                    ; preds = %24
  %257 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %258 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %257, i32 0, i32 0
  %259 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %14, i32 0, i32 0
  %261 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %260, align 8
  %262 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %261)
  %263 = load i64*, i64** %10, align 8
  %264 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %259, i64* dereferenceable(8) %262, i64* dereferenceable(8) %263)
  %265 = select i1 %264, i32 816564220, i32 -556063808
  store i32 %265, i32* %22
  br label %366

; <label>:266:                                    ; preds = %24
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3setIxSt4lessIxESaIxEEEESE_vEEOT_OT0_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11, %"struct.std::_Rb_tree_node"** dereferenceable(8) %12)
  store i32 983458478, i32* %22
  br label %366

; <label>:267:                                    ; preds = %24
  %268 = load i32, i32* @x.1091
  %269 = load i32, i32* @y.1092
  %270 = add i32 %268, -131928
  %271 = sub i32 %270, 1
  %272 = sub i32 %271, -131928
  %273 = sub i32 %268, 1
  %274 = mul i32 %268, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %269, 10
  %278 = and i1 %276, %277
  %279 = xor i1 %276, %277
  %280 = or i1 %278, %279
  %281 = or i1 %276, %277
  %282 = select i1 %280, i32 -658321328, i32 -964149938
  store i32 %282, i32* %22
  br label %366

; <label>:283:                                    ; preds = %24
  %284 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %16, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %284, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %16)
  %285 = load i32, i32* @x.1091
  %286 = load i32, i32* @y.1092
  %287 = sub i32 %285, 1604753983
  %288 = sub i32 %287, 1
  %289 = add i32 %288, 1604753983
  %290 = sub i32 %285, 1
  %291 = mul i32 %285, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %286, 10
  %295 = and i1 %293, %294
  %296 = xor i1 %293, %294
  %297 = or i1 %295, %296
  %298 = or i1 %293, %294
  %299 = select i1 %297, i32 471283176, i32 -964149938
  store i32 %299, i32* %22
  br label %366

; <label>:300:                                    ; preds = %24
  store i32 983458478, i32* %22
  br label %366

; <label>:301:                                    ; preds = %24
  %302 = load i32, i32* @x.1091
  %303 = load i32, i32* @y.1092
  %304 = sub i32 %302, 1519581422
  %305 = sub i32 %304, 1
  %306 = add i32 %305, 1519581422
  %307 = sub i32 %302, 1
  %308 = mul i32 %302, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %303, 10
  %312 = and i1 %310, %311
  %313 = xor i1 %310, %311
  %314 = or i1 %312, %313
  %315 = or i1 %310, %311
  %316 = select i1 %314, i32 834398393, i32 1789029218
  store i32 %316, i32* %22
  br label %366

; <label>:317:                                    ; preds = %24
  %318 = bitcast %"struct.std::pair.55"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %319 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %318, align 8
  store { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %319, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  %320 = load i32, i32* @x.1091
  %321 = load i32, i32* @y.1092
  %322 = add i32 %320, 2084250657
  %323 = sub i32 %322, 1
  %324 = sub i32 %323, 2084250657
  %325 = sub i32 %320, 1
  %326 = mul i32 %320, %324
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %321, 10
  %330 = xor i1 %328, true
  %331 = xor i1 %329, true
  %332 = xor i1 false, true
  %333 = and i1 %330, false
  %334 = and i1 %328, %332
  %335 = and i1 %331, false
  %336 = and i1 %329, %332
  %337 = or i1 %333, %334
  %338 = or i1 %335, %336
  %339 = xor i1 %337, %338
  %340 = or i1 %330, %331
  %341 = xor i1 %340, true
  %342 = or i1 false, %332
  %343 = and i1 %341, %342
  %344 = or i1 %339, %343
  %345 = or i1 %328, %329
  %346 = select i1 %344, i32 566482784, i32 1789029218
  store i32 %346, i32* %22
  br label %366

; <label>:347:                                    ; preds = %24
  %348 = load volatile { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %348

; <label>:349:                                    ; preds = %24
  %350 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %351 = bitcast %"struct.std::_Rb_tree_node"* %350 to %"struct.std::_Rb_tree_node_base"*
  %352 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %351) #3
  store i32 1949109641, i32* %22
  br label %366

; <label>:353:                                    ; preds = %24
  %354 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %354, %"struct.std::_Rb_tree_node"** %11, align 8
  store i32 -1554653200, i32* %22
  br label %366

; <label>:355:                                    ; preds = %24
  %356 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %357 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE5beginEv(%"class.std::_Rb_tree"* %356) #3
  %358 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %15, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %357, %"struct.std::_Rb_tree_node_base"** %358, align 8
  %359 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEeqERKS8_(%"struct.std::_Rb_tree_iterator.66"* %14, %"struct.std::_Rb_tree_iterator.66"* dereferenceable(8) %15) #3
  store i32 -791728513, i32* %22
  br label %366

; <label>:360:                                    ; preds = %24
  store i32 -1748522154, i32* %22
  br label %366

; <label>:361:                                    ; preds = %24
  %362 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %16, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %8, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %362, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %16)
  store i32 -658321328, i32* %22
  br label %366

; <label>:363:                                    ; preds = %24
  %364 = bitcast %"struct.std::pair.55"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %365 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %364, align 8
  store i32 834398393, i32* %22
  br label %366

; <label>:366:                                    ; preds = %363, %361, %360, %355, %353, %349, %317, %301, %300, %283, %267, %266, %256, %255, %228, %213, %211, %210, %207, %187, %160, %154, %153, %124, %96, %94, %63, %48, %44, %31, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE11_M_leftmostEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 2
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.66"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEmmEv(%"struct.std::_Rb_tree_iterator.66"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.66"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1095
  %6 = load i32, i32* @y.1096
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -815956458, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -815956458, label %18
    i32 -1973554286, label %38
    i32 1216824493, label %62
    i32 -1479877376, label %64
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1973554286, i32 -1479877376
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %0, %"struct.std::_Rb_tree_iterator.66"** %39, align 8
  %40 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %39, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %40, %"struct.std::_Rb_tree_iterator.66"** %2
  %41 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %2
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %41, i32 0, i32 0
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %43) #13
  %45 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %2
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %45, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %46, align 8
  %47 = load i32, i32* @x.1095
  %48 = load i32, i32* @y.1096
  %49 = add i32 %47, -523810334
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -523810334
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1216824493, i32 -1479877376
  store i32 %61, i32* %14
  br label %71

; <label>:62:                                     ; preds = %15
  %63 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %2
  ret %"struct.std::_Rb_tree_iterator.66"* %63

; <label>:64:                                     ; preds = %15
  %65 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %0, %"struct.std::_Rb_tree_iterator.66"** %65, align 8
  %66 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %65, align 8
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %66, i32 0, i32 0
  %68 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %67, align 8
  %69 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %68) #13
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %66, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %69, %"struct.std::_Rb_tree_node_base"** %70, align 8
  store i32 -1973554286, i32* %14
  br label %71

; <label>:71:                                     ; preds = %64, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.66"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEppEv(%"struct.std::_Rb_tree_iterator.66"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.66"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1097
  %6 = load i32, i32* @y.1098
  %7 = add i32 %5, -949935764
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -949935764
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 16223148, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 16223148, label %19
    i32 -511430934, label %39
    i32 -1864282837, label %63
    i32 677078360, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -511430934, i32 677078360
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %0, %"struct.std::_Rb_tree_iterator.66"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %40, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %41, %"struct.std::_Rb_tree_iterator.66"** %2
  %42 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %2
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #13
  %46 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %2
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %46, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = load i32, i32* @x.1097
  %49 = load i32, i32* @y.1098
  %50 = add i32 %48, -827088227
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -827088227
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1864282837, i32 677078360
  store i32 %62, i32* %15
  br label %72

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %2
  ret %"struct.std::_Rb_tree_iterator.66"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_iterator.66"*, align 8
  store %"struct.std::_Rb_tree_iterator.66"* %0, %"struct.std::_Rb_tree_iterator.66"** %66, align 8
  %67 = load %"struct.std::_Rb_tree_iterator.66"*, %"struct.std::_Rb_tree_iterator.66"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %69) #13
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %67, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  store i32 -511430934, i32* %15
  br label %72

; <label>:72:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"struct.std::pair.43"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node"*
  %5 = call %"struct.std::pair.43"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %4)
  ret %"struct.std::pair.43"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIxSt4lessIxESaIxEEESt10_Select1stIS7_ES4_SaIS7_EE5beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1101
  %6 = load i32, i32* @y.1102
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1848984480, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %87
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1848984480, label %18
    i32 1033647495, label %38
    i32 -1432515376, label %75
    i32 2006041025, label %77
  ]

; <label>:17:                                     ; preds = %15
  br label %87

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1033647495, i32 2006041025
  store i32 %37, i32* %14
  br label %87

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %40 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %40, align 8
  %41 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 2
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.66"* %39, %"struct.std::_Rb_tree_node_base"* %45) #3
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %39, i32 0, i32 0
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8
  store %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"** %2
  %48 = load i32, i32* @x.1101
  %49 = load i32, i32* @y.1102
  %50 = sub i32 %48, -1614895176
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1614895176
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1432515376, i32 2006041025
  store i32 %74, i32* %14
  br label %87

; <label>:75:                                     ; preds = %15
  %76 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %76

; <label>:77:                                     ; preds = %15
  %78 = alloca %"struct.std::_Rb_tree_iterator.66", align 8
  %79 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %79, align 8
  %80 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %79, align 8
  %81 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_Rb_tree_impl"* %81, i32 0, i32 1
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %82, i32 0, i32 2
  %84 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %83, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIxSt4lessIxESaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.66"* %78, %"struct.std::_Rb_tree_node_base"* %84) #3
  %85 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.66", %"struct.std::_Rb_tree_iterator.66"* %78, i32 0, i32 0
  %86 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %85, align 8
  store i32 1033647495, i32* %14
  br label %87

; <label>:87:                                     ; preds = %77, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3setIxSt4lessIxESaIxEEEESE_vEEOT_OT0_(%"struct.std::pair.55"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.55"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %4, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %6, align 8
  %7 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEOT_RNSt16remove_referenceISC_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEOT_RNSt16remove_referenceISC_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3setIxSt4lessIxESaIxEEEEEOT_RNSt16remove_referenceISC_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
  ret %"struct.std::_Rb_tree_node"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %"class.std::_Rb_tree.24"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEaSERKS5_(%"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.24"*, align 8
  %4 = alloca %"class.std::_Rb_tree.24"*, align 8
  %5 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %3, align 8
  store %"class.std::_Rb_tree.24"* %1, %"class.std::_Rb_tree.24"** %4, align 8
  %8 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %3, align 8
  %9 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4, align 8
  %10 = icmp ne %"class.std::_Rb_tree.24"* %8, %9
  br i1 %10, label %11, label %120

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.1107
  %13 = load i32, i32* @y.1108
  %14 = sub i32 %12, 1219523706
  %15 = sub i32 %14, 1
  %16 = add i32 %15, 1219523706
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %126

; <label>:26:                                     ; preds = %11, %126
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %5, %"class.std::_Rb_tree.24"* dereferenceable(48) %8)
  %27 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %8, i32 0, i32 0
  %28 = load i32, i32* @x.1107
  %29 = load i32, i32* @y.1108
  %30 = add i32 %28, -1036375538
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1036375538
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %126

; <label>:42:                                     ; preds = %26
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %27)
          to label %43 unwind label %115

; <label>:43:                                     ; preds = %42
  %44 = load i32, i32* @x.1107
  %45 = load i32, i32* @y.1108
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %128

; <label>:57:                                     ; preds = %43, %128
  %58 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4, align 8
  %59 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %8, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %61, i32 0, i32 0
  %63 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4, align 8
  %64 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv(%"class.std::_Rb_tree.24"* %63) #3
  %65 = icmp ne %"struct.std::_Rb_tree_node_base"* %64, null
  %66 = load i32, i32* @x.1107
  %67 = load i32, i32* @y.1108
  %68 = sub i32 %66, 1565388443
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1565388443
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %128

; <label>:92:                                     ; preds = %57
  br i1 %65, label %93, label %119

; <label>:93:                                     ; preds = %92
  %94 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4, align 8
  %95 = call %"struct.std::_Rb_tree_node.50"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.24"* %94) #3
  %96 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree.24"* %8) #3
  %97 = invoke %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_SA_RT_(%"class.std::_Rb_tree.24"* %8, %"struct.std::_Rb_tree_node.50"* %95, %"struct.std::_Rb_tree_node.50"* %96, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* dereferenceable(24) %5)
          to label %98 unwind label %115

; <label>:98:                                     ; preds = %93
  %99 = bitcast %"struct.std::_Rb_tree_node.50"* %97 to %"struct.std::_Rb_tree_node_base"*
  %100 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv(%"class.std::_Rb_tree.24"* %8) #3
  store %"struct.std::_Rb_tree_node_base"* %99, %"struct.std::_Rb_tree_node_base"** %100, align 8
  %101 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv(%"class.std::_Rb_tree.24"* %8) #3
  %102 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %101, align 8
  %103 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %102) #3
  %104 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_leftmostEv(%"class.std::_Rb_tree.24"* %8) #3
  store %"struct.std::_Rb_tree_node_base"* %103, %"struct.std::_Rb_tree_node_base"** %104, align 8
  %105 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv(%"class.std::_Rb_tree.24"* %8) #3
  %106 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %105, align 8
  %107 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %106) #3
  %108 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_rightmostEv(%"class.std::_Rb_tree.24"* %8) #3
  store %"struct.std::_Rb_tree_node_base"* %107, %"struct.std::_Rb_tree_node_base"** %108, align 8
  %109 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4, align 8
  %110 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %110, i32 0, i32 2
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %8, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %113, i32 0, i32 2
  store i64 %112, i64* %114, align 8
  br label %119

; <label>:115:                                    ; preds = %93, %42
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %6, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %7, align 4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %5) #3
  br label %121

; <label>:119:                                    ; preds = %98, %92
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %5) #3
  br label %120

; <label>:120:                                    ; preds = %119, %2
  ret %"class.std::_Rb_tree.24"* %8

; <label>:121:                                    ; preds = %115
  %122 = load i8*, i8** %6, align 8
  %123 = load i32, i32* %7, align 4
  %124 = insertvalue { i8*, i32 } undef, i8* %122, 0
  %125 = insertvalue { i8*, i32 } %124, i32 %123, 1
  resume { i8*, i32 } %125

; <label>:126:                                    ; preds = %26, %11
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %5, %"class.std::_Rb_tree.24"* dereferenceable(48) %8)
  %127 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %8, i32 0, i32 0
  br label %26

; <label>:128:                                    ; preds = %57, %43
  %129 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4, align 8
  %130 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %129, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %8, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %132, i32 0, i32 0
  %134 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4, align 8
  %135 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv(%"class.std::_Rb_tree.24"* %134) #3
  %136 = icmp ne %"struct.std::_Rb_tree_node_base"* %135, null
  br label %57
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"class.std::_Rb_tree.24"* dereferenceable(48)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.1109
  %9 = load i32, i32* @y.1110
  %10 = add i32 %8, 144467956
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 144467956
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1026152248, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %165
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1026152248, label %22
    i32 -1441787194, label %30
    i32 1580812043, label %65
    i32 -1600127096, label %68
    i32 1648646629, label %95
    i32 -255950642, label %121
    i32 -1057342310, label %124
    i32 -33697136, label %132
    i32 1103827279, label %133
    i32 -1766728023, label %136
    i32 1037342479, label %137
    i32 1223757290, label %154
  ]

; <label>:21:                                     ; preds = %19
  br label %165

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1441787194, i32 1037342479
  store i32 %29, i32* %18
  br label %165

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, align 8
  %32 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %31, align 8
  store %"class.std::_Rb_tree.24"* %1, %"class.std::_Rb_tree.24"** %32, align 8
  %33 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %31, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %33, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %34 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %35 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %34, i32 0, i32 0
  %36 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %32, align 8
  %37 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv(%"class.std::_Rb_tree.24"* %36) #3
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  store %"struct.std::_Rb_tree_node_base"* %38, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %39 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %40 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %39, i32 0, i32 1
  %41 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %32, align 8
  %42 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_rightmostEv(%"class.std::_Rb_tree.24"* %41) #3
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  store %"struct.std::_Rb_tree_node_base"* %43, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %44 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %45 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %44, i32 0, i32 2
  %46 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %32, align 8
  store %"class.std::_Rb_tree.24"* %46, %"class.std::_Rb_tree.24"** %45, align 8
  %47 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %48 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %47, i32 0, i32 0
  %49 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %50 = icmp ne %"struct.std::_Rb_tree_node_base"* %49, null
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.1109
  %52 = load i32, i32* @y.1110
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1580812043, i32 1037342479
  store i32 %64, i32* %18
  br label %165

; <label>:65:                                     ; preds = %19
  %66 = load volatile i1, i1* %4
  %67 = select i1 %66, i32 -1600127096, i32 1103827279
  store i32 %67, i32* %18
  br label %165

; <label>:68:                                     ; preds = %19
  %69 = load i32, i32* @x.1109
  %70 = load i32, i32* @y.1110
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 1648646629, i32 1223757290
  store i32 %94, i32* %18
  br label %165

; <label>:95:                                     ; preds = %19
  %96 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %97 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %96, i32 0, i32 0
  %98 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %97, align 8
  %99 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %98, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %99, align 8
  %100 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %101 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %100, i32 0, i32 1
  %102 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %101, align 8
  %103 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %102, i32 0, i32 2
  %104 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %103, align 8
  %105 = icmp ne %"struct.std::_Rb_tree_node_base"* %104, null
  store i1 %105, i1* %3
  %106 = load i32, i32* @x.1109
  %107 = load i32, i32* @y.1110
  %108 = sub i32 %106, 1303768580
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 1303768580
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  %120 = select i1 %118, i32 -255950642, i32 1223757290
  store i32 %120, i32* %18
  br label %165

; <label>:121:                                    ; preds = %19
  %122 = load volatile i1, i1* %3
  %123 = select i1 %122, i32 -1057342310, i32 -33697136
  store i32 %123, i32* %18
  br label %165

; <label>:124:                                    ; preds = %19
  %125 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %126 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %125, i32 0, i32 1
  %127 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %126, align 8
  %128 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %127, i32 0, i32 2
  %129 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %128, align 8
  %130 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %131 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %130, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %129, %"struct.std::_Rb_tree_node_base"** %131, align 8
  store i32 -33697136, i32* %18
  br label %165

; <label>:132:                                    ; preds = %19
  store i32 -1766728023, i32* %18
  br label %165

; <label>:133:                                    ; preds = %19
  %134 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %135 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %134, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %135, align 8
  store i32 -1766728023, i32* %18
  br label %165

; <label>:136:                                    ; preds = %19
  ret void

; <label>:137:                                    ; preds = %19
  %138 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, align 8
  %139 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %138, align 8
  store %"class.std::_Rb_tree.24"* %1, %"class.std::_Rb_tree.24"** %139, align 8
  %140 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %138, align 8
  %141 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %140, i32 0, i32 0
  %142 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %139, align 8
  %143 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv(%"class.std::_Rb_tree.24"* %142) #3
  %144 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %143, align 8
  store %"struct.std::_Rb_tree_node_base"* %144, %"struct.std::_Rb_tree_node_base"** %141, align 8
  %145 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %140, i32 0, i32 1
  %146 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %139, align 8
  %147 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_rightmostEv(%"class.std::_Rb_tree.24"* %146) #3
  %148 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %147, align 8
  store %"struct.std::_Rb_tree_node_base"* %148, %"struct.std::_Rb_tree_node_base"** %145, align 8
  %149 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %140, i32 0, i32 2
  %150 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %139, align 8
  store %"class.std::_Rb_tree.24"* %150, %"class.std::_Rb_tree.24"** %149, align 8
  %151 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %140, i32 0, i32 0
  %152 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %151, align 8
  %153 = icmp ne %"struct.std::_Rb_tree_node_base"* %152, null
  store i32 -1441787194, i32* %18
  br label %165

; <label>:154:                                    ; preds = %19
  %155 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %156 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %155, i32 0, i32 0
  %157 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %156, align 8
  %158 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %157, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %158, align 8
  %159 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %5
  %160 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %159, i32 0, i32 1
  %161 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %160, align 8
  %162 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %161, i32 0, i32 2
  %163 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %162, align 8
  %164 = icmp ne %"struct.std::_Rb_tree_node_base"* %163, null
  store i32 1648646629, i32* %18
  br label %165

; <label>:165:                                    ; preds = %154, %137, %133, %132, %124, %121, %95, %68, %65, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %7, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %10, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 2
  store i64 0, i64* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1113
  %6 = load i32, i32* @y.1114
  %7 = add i32 %5, 287048159
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 287048159
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1398240270, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1398240270, label %19
    i32 554540926, label %39
    i32 1936760642, label %61
    i32 1636571092, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 554540926, i32 1636571092
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %40, align 8
  %41 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 1
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %2
  %46 = load i32, i32* @x.1113
  %47 = load i32, i32* @y.1114
  %48 = add i32 %46, 1937062712
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1937062712
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1936760642, i32 1636571092
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %64, align 8
  %65 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %64, align 8
  %66 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %66, i32 0, i32 1
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %67, i32 0, i32 1
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  store i32 554540926, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_SA_RT_(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.1115
  %6 = load i32, i32* @y.1116
  %7 = add i32 %5, 1149123041
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1149123041
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %471

; <label>:31:                                     ; preds = %4, %471
  %32 = alloca %"class.std::_Rb_tree.24"*, align 8
  %33 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %34 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %35 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, align 8
  %36 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %37 = alloca i8*
  %38 = alloca i32
  %39 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %32, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %33, align 8
  store %"struct.std::_Rb_tree_node.50"* %2, %"struct.std::_Rb_tree_node.50"** %34, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %3, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %35, align 8
  %40 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %32, align 8
  %41 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %42 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %35, align 8
  %43 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_M_clone_nodeINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_RT_(%"class.std::_Rb_tree.24"* %40, %"struct.std::_Rb_tree_node.50"* %41, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* dereferenceable(24) %42)
  store %"struct.std::_Rb_tree_node.50"* %43, %"struct.std::_Rb_tree_node.50"** %36, align 8
  %44 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %34, align 8
  %45 = bitcast %"struct.std::_Rb_tree_node.50"* %44 to %"struct.std::_Rb_tree_node_base"*
  %46 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %36, align 8
  %47 = bitcast %"struct.std::_Rb_tree_node.50"* %46 to %"struct.std::_Rb_tree_node_base"*
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %47, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %49 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %50 = bitcast %"struct.std::_Rb_tree_node.50"* %49 to %"struct.std::_Rb_tree_node_base"*
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %50, i32 0, i32 3
  %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
  %53 = icmp ne %"struct.std::_Rb_tree_node_base"* %52, null
  %54 = load i32, i32* @x.1115
  %55 = load i32, i32* @y.1116
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %471

; <label>:79:                                     ; preds = %31
  br i1 %53, label %80, label %209

; <label>:80:                                     ; preds = %79
  %81 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %82 = bitcast %"struct.std::_Rb_tree_node.50"* %81 to %"struct.std::_Rb_tree_node_base"*
  %83 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %82) #3
  %84 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %36, align 8
  %85 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %35, align 8
  %86 = invoke %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_SA_RT_(%"class.std::_Rb_tree.24"* %40, %"struct.std::_Rb_tree_node.50"* %83, %"struct.std::_Rb_tree_node.50"* %84, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* dereferenceable(24) %85)
          to label %87 unwind label %92

; <label>:87:                                     ; preds = %80
  %88 = bitcast %"struct.std::_Rb_tree_node.50"* %86 to %"struct.std::_Rb_tree_node_base"*
  %89 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %36, align 8
  %90 = bitcast %"struct.std::_Rb_tree_node.50"* %89 to %"struct.std::_Rb_tree_node_base"*
  %91 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %90, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %88, %"struct.std::_Rb_tree_node_base"** %91, align 8
  br label %209

; <label>:92:                                     ; preds = %290, %217, %80
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %37, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %38, align 4
  br label %96

; <label>:96:                                     ; preds = %92
  %97 = load i32, i32* @x.1115
  %98 = load i32, i32* @y.1116
  %99 = sub i32 %97, 1096632497
  %100 = sub i32 %99, 1
  %101 = add i32 %100, 1096632497
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %494

; <label>:123:                                    ; preds = %96, %494
  %124 = load i8*, i8** %37, align 8
  %125 = call i8* @__cxa_begin_catch(i8* %124) #3
  %126 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %36, align 8
  %127 = load i32, i32* @x.1115
  %128 = load i32, i32* @y.1116
  %129 = add i32 %127, 1687569144
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, 1687569144
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 false, true
  %140 = and i1 %137, false
  %141 = and i1 %135, %139
  %142 = and i1 %138, false
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 false, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  br i1 %151, label %153, label %494

; <label>:153:                                    ; preds = %123
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %40, %"struct.std::_Rb_tree_node.50"* %126)
          to label %154 unwind label %308

; <label>:154:                                    ; preds = %153
  %155 = load i32, i32* @x.1115
  %156 = load i32, i32* @y.1116
  %157 = add i32 %155, -1608644997
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, -1608644997
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 true, true
  %168 = and i1 %165, true
  %169 = and i1 %163, %167
  %170 = and i1 %166, true
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 true, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %498

; <label>:181:                                    ; preds = %154, %498
  %182 = load i32, i32* @x.1115
  %183 = load i32, i32* @y.1116
  %184 = sub i32 %182, 511995127
  %185 = sub i32 %184, 1
  %186 = add i32 %185, 511995127
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 true, true
  %195 = and i1 %192, true
  %196 = and i1 %190, %194
  %197 = and i1 %193, true
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 true, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %498

; <label>:208:                                    ; preds = %181
  invoke void @__cxa_rethrow() #14
          to label %417 unwind label %308

; <label>:209:                                    ; preds = %87, %79
  %210 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %36, align 8
  store %"struct.std::_Rb_tree_node.50"* %210, %"struct.std::_Rb_tree_node.50"** %34, align 8
  %211 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %212 = bitcast %"struct.std::_Rb_tree_node.50"* %211 to %"struct.std::_Rb_tree_node_base"*
  %213 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %212) #3
  store %"struct.std::_Rb_tree_node.50"* %213, %"struct.std::_Rb_tree_node.50"** %33, align 8
  br label %214

; <label>:214:                                    ; preds = %302, %209
  %215 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %216 = icmp ne %"struct.std::_Rb_tree_node.50"* %215, null
  br i1 %216, label %217, label %307

; <label>:217:                                    ; preds = %214
  %218 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %219 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %35, align 8
  %220 = invoke %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_M_clone_nodeINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_RT_(%"class.std::_Rb_tree.24"* %40, %"struct.std::_Rb_tree_node.50"* %218, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* dereferenceable(24) %219)
          to label %221 unwind label %92

; <label>:221:                                    ; preds = %217
  %222 = load i32, i32* @x.1115
  %223 = load i32, i32* @y.1116
  %224 = sub i32 0, 1
  %225 = add i32 %222, %224
  %226 = sub i32 %222, 1
  %227 = mul i32 %222, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %223, 10
  %231 = xor i1 %229, true
  %232 = xor i1 %230, true
  %233 = xor i1 false, true
  %234 = and i1 %231, false
  %235 = and i1 %229, %233
  %236 = and i1 %232, false
  %237 = and i1 %230, %233
  %238 = or i1 %234, %235
  %239 = or i1 %236, %237
  %240 = xor i1 %238, %239
  %241 = or i1 %231, %232
  %242 = xor i1 %241, true
  %243 = or i1 false, %233
  %244 = and i1 %242, %243
  %245 = or i1 %240, %244
  %246 = or i1 %229, %230
  br i1 %245, label %247, label %499

; <label>:247:                                    ; preds = %221, %499
  store %"struct.std::_Rb_tree_node.50"* %220, %"struct.std::_Rb_tree_node.50"** %39, align 8
  %248 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %39, align 8
  %249 = bitcast %"struct.std::_Rb_tree_node.50"* %248 to %"struct.std::_Rb_tree_node_base"*
  %250 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %34, align 8
  %251 = bitcast %"struct.std::_Rb_tree_node.50"* %250 to %"struct.std::_Rb_tree_node_base"*
  %252 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %251, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %249, %"struct.std::_Rb_tree_node_base"** %252, align 8
  %253 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %34, align 8
  %254 = bitcast %"struct.std::_Rb_tree_node.50"* %253 to %"struct.std::_Rb_tree_node_base"*
  %255 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %39, align 8
  %256 = bitcast %"struct.std::_Rb_tree_node.50"* %255 to %"struct.std::_Rb_tree_node_base"*
  %257 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %256, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %254, %"struct.std::_Rb_tree_node_base"** %257, align 8
  %258 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %259 = bitcast %"struct.std::_Rb_tree_node.50"* %258 to %"struct.std::_Rb_tree_node_base"*
  %260 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %259, i32 0, i32 3
  %261 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %260, align 8
  %262 = icmp ne %"struct.std::_Rb_tree_node_base"* %261, null
  %263 = load i32, i32* @x.1115
  %264 = load i32, i32* @y.1116
  %265 = add i32 %263, 964924381
  %266 = sub i32 %265, 1
  %267 = sub i32 %266, 964924381
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = xor i1 %271, true
  %274 = xor i1 %272, true
  %275 = xor i1 false, true
  %276 = and i1 %273, false
  %277 = and i1 %271, %275
  %278 = and i1 %274, false
  %279 = and i1 %272, %275
  %280 = or i1 %276, %277
  %281 = or i1 %278, %279
  %282 = xor i1 %280, %281
  %283 = or i1 %273, %274
  %284 = xor i1 %283, true
  %285 = or i1 false, %275
  %286 = and i1 %284, %285
  %287 = or i1 %282, %286
  %288 = or i1 %271, %272
  br i1 %287, label %289, label %499

; <label>:289:                                    ; preds = %247
  br i1 %262, label %290, label %302

; <label>:290:                                    ; preds = %289
  %291 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %292 = bitcast %"struct.std::_Rb_tree_node.50"* %291 to %"struct.std::_Rb_tree_node_base"*
  %293 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %292) #3
  %294 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %39, align 8
  %295 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %35, align 8
  %296 = invoke %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_SA_RT_(%"class.std::_Rb_tree.24"* %40, %"struct.std::_Rb_tree_node.50"* %293, %"struct.std::_Rb_tree_node.50"* %294, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* dereferenceable(24) %295)
          to label %297 unwind label %92

; <label>:297:                                    ; preds = %290
  %298 = bitcast %"struct.std::_Rb_tree_node.50"* %296 to %"struct.std::_Rb_tree_node_base"*
  %299 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %39, align 8
  %300 = bitcast %"struct.std::_Rb_tree_node.50"* %299 to %"struct.std::_Rb_tree_node_base"*
  %301 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %300, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %298, %"struct.std::_Rb_tree_node_base"** %301, align 8
  br label %302

; <label>:302:                                    ; preds = %297, %289
  %303 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %39, align 8
  store %"struct.std::_Rb_tree_node.50"* %303, %"struct.std::_Rb_tree_node.50"** %34, align 8
  %304 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %305 = bitcast %"struct.std::_Rb_tree_node.50"* %304 to %"struct.std::_Rb_tree_node_base"*
  %306 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %305) #3
  store %"struct.std::_Rb_tree_node.50"* %306, %"struct.std::_Rb_tree_node.50"** %33, align 8
  br label %214

; <label>:307:                                    ; preds = %214
  br label %367

; <label>:308:                                    ; preds = %208, %153
  %309 = load i32, i32* @x.1115
  %310 = load i32, i32* @y.1116
  %311 = add i32 %309, 2002405200
  %312 = sub i32 %311, 1
  %313 = sub i32 %312, 2002405200
  %314 = sub i32 %309, 1
  %315 = mul i32 %309, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %310, 10
  %319 = xor i1 %317, true
  %320 = xor i1 %318, true
  %321 = xor i1 false, true
  %322 = and i1 %319, false
  %323 = and i1 %317, %321
  %324 = and i1 %320, false
  %325 = and i1 %318, %321
  %326 = or i1 %322, %323
  %327 = or i1 %324, %325
  %328 = xor i1 %326, %327
  %329 = or i1 %319, %320
  %330 = xor i1 %329, true
  %331 = or i1 false, %321
  %332 = and i1 %330, %331
  %333 = or i1 %328, %332
  %334 = or i1 %317, %318
  br i1 %333, label %335, label %515

; <label>:335:                                    ; preds = %308, %515
  %336 = landingpad { i8*, i32 }
          cleanup
  %337 = extractvalue { i8*, i32 } %336, 0
  store i8* %337, i8** %37, align 8
  %338 = extractvalue { i8*, i32 } %336, 1
  store i32 %338, i32* %38, align 4
  %339 = load i32, i32* @x.1115
  %340 = load i32, i32* @y.1116
  %341 = sub i32 %339, -1481500197
  %342 = sub i32 %341, 1
  %343 = add i32 %342, -1481500197
  %344 = sub i32 %339, 1
  %345 = mul i32 %339, %343
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %340, 10
  %349 = xor i1 %347, true
  %350 = xor i1 %348, true
  %351 = xor i1 false, true
  %352 = and i1 %349, false
  %353 = and i1 %347, %351
  %354 = and i1 %350, false
  %355 = and i1 %348, %351
  %356 = or i1 %352, %353
  %357 = or i1 %354, %355
  %358 = xor i1 %356, %357
  %359 = or i1 %349, %350
  %360 = xor i1 %359, true
  %361 = or i1 false, %351
  %362 = and i1 %360, %361
  %363 = or i1 %358, %362
  %364 = or i1 %347, %348
  br i1 %363, label %365, label %515

; <label>:365:                                    ; preds = %335
  invoke void @__cxa_end_catch()
          to label %366 unwind label %414

; <label>:366:                                    ; preds = %365
  br label %409

; <label>:367:                                    ; preds = %307
  %368 = load i32, i32* @x.1115
  %369 = load i32, i32* @y.1116
  %370 = sub i32 0, 1
  %371 = add i32 %368, %370
  %372 = sub i32 %368, 1
  %373 = mul i32 %368, %371
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %369, 10
  %377 = and i1 %375, %376
  %378 = xor i1 %375, %376
  %379 = or i1 %377, %378
  %380 = or i1 %375, %376
  br i1 %379, label %381, label %519

; <label>:381:                                    ; preds = %367, %519
  %382 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %36, align 8
  %383 = load i32, i32* @x.1115
  %384 = load i32, i32* @y.1116
  %385 = sub i32 0, 1
  %386 = add i32 %383, %385
  %387 = sub i32 %383, 1
  %388 = mul i32 %383, %386
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %384, 10
  %392 = xor i1 %390, true
  %393 = xor i1 %391, true
  %394 = xor i1 false, true
  %395 = and i1 %392, false
  %396 = and i1 %390, %394
  %397 = and i1 %393, false
  %398 = and i1 %391, %394
  %399 = or i1 %395, %396
  %400 = or i1 %397, %398
  %401 = xor i1 %399, %400
  %402 = or i1 %392, %393
  %403 = xor i1 %402, true
  %404 = or i1 false, %394
  %405 = and i1 %403, %404
  %406 = or i1 %401, %405
  %407 = or i1 %390, %391
  br i1 %406, label %408, label %519

; <label>:408:                                    ; preds = %381
  ret %"struct.std::_Rb_tree_node.50"* %382

; <label>:409:                                    ; preds = %366
  %410 = load i8*, i8** %37, align 8
  %411 = load i32, i32* %38, align 4
  %412 = insertvalue { i8*, i32 } undef, i8* %410, 0
  %413 = insertvalue { i8*, i32 } %412, i32 %411, 1
  resume { i8*, i32 } %413

; <label>:414:                                    ; preds = %365
  %415 = landingpad { i8*, i32 }
          catch i8* null
  %416 = extractvalue { i8*, i32 } %415, 0
  call void @__clang_call_terminate(i8* %416) #12
  unreachable

; <label>:417:                                    ; preds = %208
  %418 = load i32, i32* @x.1115
  %419 = load i32, i32* @y.1116
  %420 = add i32 %418, 1366232582
  %421 = sub i32 %420, 1
  %422 = sub i32 %421, 1366232582
  %423 = sub i32 %418, 1
  %424 = mul i32 %418, %422
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %419, 10
  %428 = xor i1 %426, true
  %429 = xor i1 %427, true
  %430 = xor i1 false, true
  %431 = and i1 %428, false
  %432 = and i1 %426, %430
  %433 = and i1 %429, false
  %434 = and i1 %427, %430
  %435 = or i1 %431, %432
  %436 = or i1 %433, %434
  %437 = xor i1 %435, %436
  %438 = or i1 %428, %429
  %439 = xor i1 %438, true
  %440 = or i1 false, %430
  %441 = and i1 %439, %440
  %442 = or i1 %437, %441
  %443 = or i1 %426, %427
  br i1 %442, label %444, label %521

; <label>:444:                                    ; preds = %417, %521
  %445 = load i32, i32* @x.1115
  %446 = load i32, i32* @y.1116
  %447 = sub i32 0, 1
  %448 = add i32 %445, %447
  %449 = sub i32 %445, 1
  %450 = mul i32 %445, %448
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %446, 10
  %454 = xor i1 %452, true
  %455 = xor i1 %453, true
  %456 = xor i1 true, true
  %457 = and i1 %454, true
  %458 = and i1 %452, %456
  %459 = and i1 %455, true
  %460 = and i1 %453, %456
  %461 = or i1 %457, %458
  %462 = or i1 %459, %460
  %463 = xor i1 %461, %462
  %464 = or i1 %454, %455
  %465 = xor i1 %464, true
  %466 = or i1 true, %456
  %467 = and i1 %465, %466
  %468 = or i1 %463, %467
  %469 = or i1 %452, %453
  br i1 %468, label %470, label %521

; <label>:470:                                    ; preds = %444
  unreachable

; <label>:471:                                    ; preds = %31, %4
  %472 = alloca %"class.std::_Rb_tree.24"*, align 8
  %473 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %474 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %475 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, align 8
  %476 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %477 = alloca i8*
  %478 = alloca i32
  %479 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %472, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %473, align 8
  store %"struct.std::_Rb_tree_node.50"* %2, %"struct.std::_Rb_tree_node.50"** %474, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %3, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %475, align 8
  %480 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %472, align 8
  %481 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %473, align 8
  %482 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %475, align 8
  %483 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_M_clone_nodeINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_RT_(%"class.std::_Rb_tree.24"* %480, %"struct.std::_Rb_tree_node.50"* %481, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* dereferenceable(24) %482)
  store %"struct.std::_Rb_tree_node.50"* %483, %"struct.std::_Rb_tree_node.50"** %476, align 8
  %484 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %474, align 8
  %485 = bitcast %"struct.std::_Rb_tree_node.50"* %484 to %"struct.std::_Rb_tree_node_base"*
  %486 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %476, align 8
  %487 = bitcast %"struct.std::_Rb_tree_node.50"* %486 to %"struct.std::_Rb_tree_node_base"*
  %488 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %487, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %485, %"struct.std::_Rb_tree_node_base"** %488, align 8
  %489 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %473, align 8
  %490 = bitcast %"struct.std::_Rb_tree_node.50"* %489 to %"struct.std::_Rb_tree_node_base"*
  %491 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %490, i32 0, i32 3
  %492 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %491, align 8
  %493 = icmp ne %"struct.std::_Rb_tree_node_base"* %492, null
  br label %31

; <label>:494:                                    ; preds = %123, %96
  %495 = load i8*, i8** %37, align 8
  %496 = call i8* @__cxa_begin_catch(i8* %495) #3
  %497 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %36, align 8
  br label %123

; <label>:498:                                    ; preds = %181, %154
  br label %181

; <label>:499:                                    ; preds = %247, %221
  store %"struct.std::_Rb_tree_node.50"* %220, %"struct.std::_Rb_tree_node.50"** %39, align 8
  %500 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %39, align 8
  %501 = bitcast %"struct.std::_Rb_tree_node.50"* %500 to %"struct.std::_Rb_tree_node_base"*
  %502 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %34, align 8
  %503 = bitcast %"struct.std::_Rb_tree_node.50"* %502 to %"struct.std::_Rb_tree_node_base"*
  %504 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %503, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %501, %"struct.std::_Rb_tree_node_base"** %504, align 8
  %505 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %34, align 8
  %506 = bitcast %"struct.std::_Rb_tree_node.50"* %505 to %"struct.std::_Rb_tree_node_base"*
  %507 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %39, align 8
  %508 = bitcast %"struct.std::_Rb_tree_node.50"* %507 to %"struct.std::_Rb_tree_node_base"*
  %509 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %508, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %506, %"struct.std::_Rb_tree_node_base"** %509, align 8
  %510 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %33, align 8
  %511 = bitcast %"struct.std::_Rb_tree_node.50"* %510 to %"struct.std::_Rb_tree_node_base"*
  %512 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %511, i32 0, i32 3
  %513 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %512, align 8
  %514 = icmp ne %"struct.std::_Rb_tree_node_base"* %513, null
  br label %247

; <label>:515:                                    ; preds = %335, %308
  %516 = landingpad { i8*, i32 }
          cleanup
  %517 = extractvalue { i8*, i32 } %516, 0
  store i8* %517, i8** %37, align 8
  %518 = extractvalue { i8*, i32 } %516, 1
  store i32 %518, i32* %38, align 4
  br label %335

; <label>:519:                                    ; preds = %381, %367
  %520 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %36, align 8
  br label %381

; <label>:521:                                    ; preds = %444, %417
  br label %444
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %2, align 8
  %3 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.50"*
  ret %"struct.std::_Rb_tree_node.50"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_M_rootEv(%"class.std::_Rb_tree.24"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1119
  %6 = load i32, i32* @y.1120
  %7 = sub i32 %5, -1010582337
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1010582337
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1941915863, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1941915863, label %19
    i32 456917008, label %39
    i32 1789812790, label %71
    i32 -1970832934, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 456917008, i32 -1970832934
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %40, align 8
  %41 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"** %44, %"struct.std::_Rb_tree_node_base"*** %2
  %45 = load i32, i32* @x.1119
  %46 = load i32, i32* @y.1120
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1789812790, i32 -1970832934
  store i32 %70, i32* %15
  br label %79

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %74, align 8
  %75 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %74, align 8
  %76 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %76, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %77, i32 0, i32 1
  store i32 456917008, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_minimumEPS_(%"struct.std::_Rb_tree_node_base"* %3) #3
  ret %"struct.std::_Rb_tree_node_base"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1123
  %6 = load i32, i32* @y.1124
  %7 = sub i32 %5, -2006730780
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2006730780
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1186499742, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1186499742, label %19
    i32 1191470163, label %27
    i32 751945222, label %45
    i32 -1854300501, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1191470163, i32 -1854300501
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"* %29) #3
  store %"struct.std::_Rb_tree_node_base"* %30, %"struct.std::_Rb_tree_node_base"** %2
  %31 = load i32, i32* @x.1123
  %32 = load i32, i32* @y.1124
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 751945222, i32 -1854300501
  store i32 %44, i32* %15
  br label %51

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %49 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %50 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"* %49) #3
  store i32 1191470163, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %3, i32 0, i32 2
  %5 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %3, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.50"*
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %5, %"struct.std::_Rb_tree_node.50"* %8)
          to label %9 unwind label %10

; <label>:9:                                      ; preds = %1
  ret void

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.1125
  %12 = load i32, i32* @y.1126
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %53

; <label>:24:                                     ; preds = %10, %53
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  call void @__clang_call_terminate(i8* %26) #12
  %27 = load i32, i32* @x.1125
  %28 = load i32, i32* @y.1126
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %53

; <label>:52:                                     ; preds = %24
  unreachable

; <label>:53:                                     ; preds = %24, %10
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #12
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_M_clone_nodeINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIxEPKS9_RT_(%"class.std::_Rb_tree.24"*, %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_node.50"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1127
  %8 = load i32, i32* @y.1128
  %9 = sub i32 %7, -108276983
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -108276983
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1101769074, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %105
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1101769074, label %21
    i32 1278232506, label %41
    i32 -2119326105, label %79
    i32 -489809233, label %81
  ]

; <label>:20:                                     ; preds = %18
  br label %105

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1278232506, i32 -489809233
  store i32 %40, i32* %17
  br label %105

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::_Rb_tree.24"*, align 8
  %43 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %44 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, align 8
  %45 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %42, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %43, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %2, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %44, align 8
  %46 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %42, align 8
  %47 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %44, align 8
  %48 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %43, align 8
  %49 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node.50"* %48)
  %50 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %47, i64* dereferenceable(8) %49)
  store %"struct.std::_Rb_tree_node.50"* %50, %"struct.std::_Rb_tree_node.50"** %45, align 8
  %51 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %43, align 8
  %52 = bitcast %"struct.std::_Rb_tree_node.50"* %51 to %"struct.std::_Rb_tree_node_base"*
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %45, align 8
  %56 = bitcast %"struct.std::_Rb_tree_node.50"* %55 to %"struct.std::_Rb_tree_node_base"*
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %56, i32 0, i32 0
  store i32 %54, i32* %57, align 8
  %58 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %45, align 8
  %59 = bitcast %"struct.std::_Rb_tree_node.50"* %58 to %"struct.std::_Rb_tree_node_base"*
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %59, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %60, align 8
  %61 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %45, align 8
  %62 = bitcast %"struct.std::_Rb_tree_node.50"* %61 to %"struct.std::_Rb_tree_node_base"*
  %63 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %62, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %64 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %45, align 8
  store %"struct.std::_Rb_tree_node.50"* %64, %"struct.std::_Rb_tree_node.50"** %4
  %65 = load i32, i32* @x.1127
  %66 = load i32, i32* @y.1128
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -2119326105, i32 -489809233
  store i32 %78, i32* %17
  br label %105

; <label>:79:                                     ; preds = %18
  %80 = load volatile %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %4
  ret %"struct.std::_Rb_tree_node.50"* %80

; <label>:81:                                     ; preds = %18
  %82 = alloca %"class.std::_Rb_tree.24"*, align 8
  %83 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %84 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, align 8
  %85 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %82, align 8
  store %"struct.std::_Rb_tree_node.50"* %1, %"struct.std::_Rb_tree_node.50"** %83, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %2, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %84, align 8
  %86 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %82, align 8
  %87 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %84, align 8
  %88 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %83, align 8
  %89 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node.50"* %88)
  %90 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %87, i64* dereferenceable(8) %89)
  store %"struct.std::_Rb_tree_node.50"* %90, %"struct.std::_Rb_tree_node.50"** %85, align 8
  %91 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %83, align 8
  %92 = bitcast %"struct.std::_Rb_tree_node.50"* %91 to %"struct.std::_Rb_tree_node_base"*
  %93 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %92, i32 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %85, align 8
  %96 = bitcast %"struct.std::_Rb_tree_node.50"* %95 to %"struct.std::_Rb_tree_node_base"*
  %97 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %96, i32 0, i32 0
  store i32 %94, i32* %97, align 8
  %98 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %85, align 8
  %99 = bitcast %"struct.std::_Rb_tree_node.50"* %98 to %"struct.std::_Rb_tree_node_base"*
  %100 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %99, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %100, align 8
  %101 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %85, align 8
  %102 = bitcast %"struct.std::_Rb_tree_node.50"* %101 to %"struct.std::_Rb_tree_node_base"*
  %103 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %102, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %103, align 8
  %104 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %85, align 8
  store i32 1278232506, i32* %17
  br label %105

; <label>:105:                                    ; preds = %81, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.50"*
  ret %"struct.std::_Rb_tree_node.50"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.50"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1131
  %6 = load i32, i32* @y.1132
  %7 = sub i32 %5, -1658297779
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1658297779
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1044802806, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1044802806, label %19
    i32 662495539, label %27
    i32 -956646032, label %60
    i32 -708254049, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 662495539, i32 -708254049
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %29, i32 0, i32 2
  %31 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %32 = bitcast %"struct.std::_Rb_tree_node_base"* %31 to %"struct.std::_Rb_tree_node.50"*
  store %"struct.std::_Rb_tree_node.50"* %32, %"struct.std::_Rb_tree_node.50"** %2
  %33 = load i32, i32* @x.1131
  %34 = load i32, i32* @y.1132
  %35 = add i32 %33, 465467418
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 465467418
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -956646032, i32 -708254049
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %2
  ret %"struct.std::_Rb_tree_node.50"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %64, i32 0, i32 2
  %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %65, align 8
  %67 = bitcast %"struct.std::_Rb_tree_node_base"* %66 to %"struct.std::_Rb_tree_node.50"*
  store i32 662495539, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.50"*
  %4 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*
  %5 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  %6 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node.50"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6, align 8
  store i64* %1, i64** %7, align 8
  %9 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %9, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %4
  %10 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %4
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_node10_M_extractEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %10)
  %12 = bitcast %"struct.std::_Rb_tree_node_base"* %11 to %"struct.std::_Rb_tree_node.50"*
  store %"struct.std::_Rb_tree_node.50"* %12, %"struct.std::_Rb_tree_node.50"** %8, align 8
  %13 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %8, align 8
  store %"struct.std::_Rb_tree_node.50"* %13, %"struct.std::_Rb_tree_node.50"** %3
  %14 = alloca i32
  store i32 -1521760715, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %98
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1521760715, label %18
    i32 -1947012927, label %22
    i32 377349567, label %37
    i32 1333053354, label %76
    i32 935937041, label %77
    i32 -1381047691, label %84
    i32 1572655409, label %86
  ]

; <label>:17:                                     ; preds = %15
  br label %98

; <label>:18:                                     ; preds = %15
  %19 = load volatile %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %3
  %20 = icmp ne %"struct.std::_Rb_tree_node.50"* %19, null
  %21 = select i1 %20, i32 -1947012927, i32 935937041
  store i32 %21, i32* %14
  br label %98

; <label>:22:                                     ; preds = %15
  %23 = load i32, i32* @x.1133
  %24 = load i32, i32* @y.1134
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 377349567, i32 1572655409
  store i32 %36, i32* %14
  br label %98

; <label>:37:                                     ; preds = %15
  %38 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %4
  %39 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %38, i32 0, i32 2
  %40 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %39, align 8
  %41 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %8, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %40, %"struct.std::_Rb_tree_node.50"* %41) #3
  %42 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %4
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %42, i32 0, i32 2
  %44 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %43, align 8
  %45 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %8, align 8
  %46 = load i64*, i64** %7, align 8
  %47 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %46) #3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.24"* %44, %"struct.std::_Rb_tree_node.50"* %45, i64* dereferenceable(8) %47)
  %48 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %8, align 8
  store %"struct.std::_Rb_tree_node.50"* %48, %"struct.std::_Rb_tree_node.50"** %5, align 8
  %49 = load i32, i32* @x.1133
  %50 = load i32, i32* @y.1134
  %51 = sub i32 %49, 1836471989
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1836471989
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1333053354, i32 1572655409
  store i32 %75, i32* %14
  br label %98

; <label>:76:                                     ; preds = %15
  store i32 -1381047691, i32* %14
  br label %98

; <label>:77:                                     ; preds = %15
  %78 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %4
  %79 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %78, i32 0, i32 2
  %80 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %79, align 8
  %81 = load i64*, i64** %7, align 8
  %82 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %81) #3
  %83 = call %"struct.std::_Rb_tree_node.50"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.24"* %80, i64* dereferenceable(8) %82)
  store %"struct.std::_Rb_tree_node.50"* %83, %"struct.std::_Rb_tree_node.50"** %5, align 8
  store i32 -1381047691, i32* %14
  br label %98

; <label>:84:                                     ; preds = %15
  %85 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %5, align 8
  ret %"struct.std::_Rb_tree_node.50"* %85

; <label>:86:                                     ; preds = %15
  %87 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %4
  %88 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %87, i32 0, i32 2
  %89 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %88, align 8
  %90 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %8, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.24"* %89, %"struct.std::_Rb_tree_node.50"* %90) #3
  %91 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %4
  %92 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %91, i32 0, i32 2
  %93 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %92, align 8
  %94 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %8, align 8
  %95 = load i64*, i64** %7, align 8
  %96 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %95) #3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.24"* %93, %"struct.std::_Rb_tree_node.50"* %94, i64* dereferenceable(8) %96)
  %97 = load %"struct.std::_Rb_tree_node.50"*, %"struct.std::_Rb_tree_node.50"** %8, align 8
  store %"struct.std::_Rb_tree_node.50"* %97, %"struct.std::_Rb_tree_node.50"** %5, align 8
  store i32 377349567, i32* %14
  br label %98

; <label>:98:                                     ; preds = %86, %77, %76, %37, %22, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE20_Reuse_or_alloc_node10_M_extractEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*
  %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %8 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %8, align 8
  %10 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %8, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %10, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %11 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %11, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  store %"struct.std::_Rb_tree_node_base"* %13, %"struct.std::_Rb_tree_node_base"** %5
  %14 = alloca i32
  store i32 1752242322, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %537
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1752242322, label %18
    i32 879374230, label %22
    i32 -1496310965, label %49
    i32 -492841363, label %68
    i32 93559653, label %69
    i32 -991073940, label %85
    i32 1111444389, label %113
    i32 835937576, label %148
    i32 -824117058, label %151
    i32 1136443260, label %167
    i32 -681220558, label %205
    i32 -887246360, label %208
    i32 -1499304602, label %216
    i32 1817175538, label %224
    i32 626848429, label %240
    i32 130082206, label %274
    i32 -1045221654, label %275
    i32 -1277259150, label %291
    i32 414197277, label %325
    i32 1809852655, label %328
    i32 -2074614923, label %336
    i32 1788790329, label %337
    i32 948081418, label %338
    i32 1143349794, label %353
    i32 1386013601, label %385
    i32 150116102, label %386
    i32 968604247, label %413
    i32 -800417, label %440
    i32 951285458, label %441
    i32 -158398803, label %444
    i32 1496209588, label %459
    i32 -214672188, label %488
    i32 282551297, label %489
    i32 -1030769718, label %491
    i32 -2088750371, label %495
    i32 1720929052, label %503
    i32 -1175731501, label %514
    i32 1298436428, label %522
    i32 -1125663845, label %529
    i32 1236581562, label %534
    i32 -630070405, label %535
  ]

; <label>:17:                                     ; preds = %15
  br label %537

; <label>:18:                                     ; preds = %15
  %19 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  %20 = icmp ne %"struct.std::_Rb_tree_node_base"* %19, null
  %21 = select i1 %20, i32 93559653, i32 879374230
  store i32 %21, i32* %14
  br label %537

; <label>:22:                                     ; preds = %15
  %23 = load i32, i32* @x.1135
  %24 = load i32, i32* @y.1136
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -1496310965, i32 -1030769718
  store i32 %48, i32* %14
  br label %537

; <label>:49:                                     ; preds = %15
  %50 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %51 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %50, i32 0, i32 1
  %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
  store %"struct.std::_Rb_tree_node_base"* %52, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %53 = load i32, i32* @x.1135
  %54 = load i32, i32* @y.1136
  %55 = sub i32 %53, 181260857
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 181260857
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -492841363, i32 -1030769718
  store i32 %67, i32* %14
  br label %537

; <label>:68:                                     ; preds = %15
  store i32 282551297, i32* %14
  br label %537

; <label>:69:                                     ; preds = %15
  %70 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %71 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %70, i32 0, i32 1
  %72 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %71, align 8
  store %"struct.std::_Rb_tree_node_base"* %72, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %73 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %74 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %73, i32 0, i32 1
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %75, i32 0, i32 1
  %77 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %78 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %79 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %78, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %77, %"struct.std::_Rb_tree_node_base"** %79, align 8
  %80 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %81 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %80, i32 0, i32 1
  %82 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %81, align 8
  %83 = icmp ne %"struct.std::_Rb_tree_node_base"* %82, null
  %84 = select i1 %83, i32 -991073940, i32 951285458
  store i32 %84, i32* %14
  br label %537

; <label>:85:                                     ; preds = %15
  %86 = load i32, i32* @x.1135
  %87 = load i32, i32* @y.1136
  %88 = add i32 %86, 290553833
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, 290553833
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 false, true
  %99 = and i1 %96, false
  %100 = and i1 %94, %98
  %101 = and i1 %97, false
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 false, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  %112 = select i1 %110, i32 1111444389, i32 -2088750371
  store i32 %112, i32* %14
  br label %537

; <label>:113:                                    ; preds = %15
  %114 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %115 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %114, i32 0, i32 1
  %116 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %115, align 8
  %117 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %116, i32 0, i32 3
  %118 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %117, align 8
  %119 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %120 = icmp eq %"struct.std::_Rb_tree_node_base"* %118, %119
  store i1 %120, i1* %4
  %121 = load i32, i32* @x.1135
  %122 = load i32, i32* @y.1136
  %123 = add i32 %121, -994578640
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, -994578640
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  %147 = select i1 %145, i32 835937576, i32 -2088750371
  store i32 %147, i32* %14
  br label %537

; <label>:148:                                    ; preds = %15
  %149 = load volatile i1, i1* %4
  %150 = select i1 %149, i32 -824117058, i32 948081418
  store i32 %150, i32* %14
  br label %537

; <label>:151:                                    ; preds = %15
  %152 = load i32, i32* @x.1135
  %153 = load i32, i32* @y.1136
  %154 = sub i32 %152, -1244026014
  %155 = sub i32 %154, 1
  %156 = add i32 %155, -1244026014
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  %166 = select i1 %164, i32 1136443260, i32 1720929052
  store i32 %166, i32* %14
  br label %537

; <label>:167:                                    ; preds = %15
  %168 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %169 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %168, i32 0, i32 1
  %170 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %169, align 8
  %171 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %170, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %171, align 8
  %172 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %173 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %172, i32 0, i32 1
  %174 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %173, align 8
  %175 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %174, i32 0, i32 2
  %176 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %175, align 8
  %177 = icmp ne %"struct.std::_Rb_tree_node_base"* %176, null
  store i1 %177, i1* %3
  %178 = load i32, i32* @x.1135
  %179 = load i32, i32* @y.1136
  %180 = sub i32 %178, -610647670
  %181 = sub i32 %180, 1
  %182 = add i32 %181, -610647670
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 false, true
  %191 = and i1 %188, false
  %192 = and i1 %186, %190
  %193 = and i1 %189, false
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 false, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  %204 = select i1 %202, i32 -681220558, i32 1720929052
  store i32 %204, i32* %14
  br label %537

; <label>:205:                                    ; preds = %15
  %206 = load volatile i1, i1* %3
  %207 = select i1 %206, i32 -887246360, i32 1788790329
  store i32 %207, i32* %14
  br label %537

; <label>:208:                                    ; preds = %15
  %209 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %210 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %209, i32 0, i32 1
  %211 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %210, align 8
  %212 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %211, i32 0, i32 2
  %213 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %212, align 8
  %214 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %215 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %214, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %213, %"struct.std::_Rb_tree_node_base"** %215, align 8
  store i32 -1499304602, i32* %14
  br label %537

; <label>:216:                                    ; preds = %15
  %217 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %218 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %217, i32 0, i32 1
  %219 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %218, align 8
  %220 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %219, i32 0, i32 3
  %221 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %220, align 8
  %222 = icmp ne %"struct.std::_Rb_tree_node_base"* %221, null
  %223 = select i1 %222, i32 1817175538, i32 -1045221654
  store i32 %223, i32* %14
  br label %537

; <label>:224:                                    ; preds = %15
  %225 = load i32, i32* @x.1135
  %226 = load i32, i32* @y.1136
  %227 = sub i32 %225, -800624727
  %228 = sub i32 %227, 1
  %229 = add i32 %228, -800624727
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = and i1 %233, %234
  %236 = xor i1 %233, %234
  %237 = or i1 %235, %236
  %238 = or i1 %233, %234
  %239 = select i1 %237, i32 626848429, i32 -1175731501
  store i32 %239, i32* %14
  br label %537

; <label>:240:                                    ; preds = %15
  %241 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %242 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %241, i32 0, i32 1
  %243 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %242, align 8
  %244 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %243, i32 0, i32 3
  %245 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %244, align 8
  %246 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %247 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %246, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %245, %"struct.std::_Rb_tree_node_base"** %247, align 8
  %248 = load i32, i32* @x.1135
  %249 = load i32, i32* @y.1136
  %250 = sub i32 0, 1
  %251 = add i32 %248, %250
  %252 = sub i32 %248, 1
  %253 = mul i32 %248, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %249, 10
  %257 = xor i1 %255, true
  %258 = xor i1 %256, true
  %259 = xor i1 false, true
  %260 = and i1 %257, false
  %261 = and i1 %255, %259
  %262 = and i1 %258, false
  %263 = and i1 %256, %259
  %264 = or i1 %260, %261
  %265 = or i1 %262, %263
  %266 = xor i1 %264, %265
  %267 = or i1 %257, %258
  %268 = xor i1 %267, true
  %269 = or i1 false, %259
  %270 = and i1 %268, %269
  %271 = or i1 %266, %270
  %272 = or i1 %255, %256
  %273 = select i1 %271, i32 130082206, i32 -1175731501
  store i32 %273, i32* %14
  br label %537

; <label>:274:                                    ; preds = %15
  store i32 -1499304602, i32* %14
  br label %537

; <label>:275:                                    ; preds = %15
  %276 = load i32, i32* @x.1135
  %277 = load i32, i32* @y.1136
  %278 = sub i32 %276, -1593052830
  %279 = sub i32 %278, 1
  %280 = add i32 %279, -1593052830
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = and i1 %284, %285
  %287 = xor i1 %284, %285
  %288 = or i1 %286, %287
  %289 = or i1 %284, %285
  %290 = select i1 %288, i32 -1277259150, i32 1298436428
  store i32 %290, i32* %14
  br label %537

; <label>:291:                                    ; preds = %15
  %292 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %293 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %292, i32 0, i32 1
  %294 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %293, align 8
  %295 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %294, i32 0, i32 2
  %296 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %295, align 8
  %297 = icmp ne %"struct.std::_Rb_tree_node_base"* %296, null
  store i1 %297, i1* %2
  %298 = load i32, i32* @x.1135
  %299 = load i32, i32* @y.1136
  %300 = sub i32 %298, 935102895
  %301 = sub i32 %300, 1
  %302 = add i32 %301, 935102895
  %303 = sub i32 %298, 1
  %304 = mul i32 %298, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %299, 10
  %308 = xor i1 %306, true
  %309 = xor i1 %307, true
  %310 = xor i1 false, true
  %311 = and i1 %308, false
  %312 = and i1 %306, %310
  %313 = and i1 %309, false
  %314 = and i1 %307, %310
  %315 = or i1 %311, %312
  %316 = or i1 %313, %314
  %317 = xor i1 %315, %316
  %318 = or i1 %308, %309
  %319 = xor i1 %318, true
  %320 = or i1 false, %310
  %321 = and i1 %319, %320
  %322 = or i1 %317, %321
  %323 = or i1 %306, %307
  %324 = select i1 %322, i32 414197277, i32 1298436428
  store i32 %324, i32* %14
  br label %537

; <label>:325:                                    ; preds = %15
  %326 = load volatile i1, i1* %2
  %327 = select i1 %326, i32 1809852655, i32 -2074614923
  store i32 %327, i32* %14
  br label %537

; <label>:328:                                    ; preds = %15
  %329 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %330 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %329, i32 0, i32 1
  %331 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %330, align 8
  %332 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %331, i32 0, i32 2
  %333 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %332, align 8
  %334 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %335 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %334, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %333, %"struct.std::_Rb_tree_node_base"** %335, align 8
  store i32 -2074614923, i32* %14
  br label %537

; <label>:336:                                    ; preds = %15
  store i32 1788790329, i32* %14
  br label %537

; <label>:337:                                    ; preds = %15
  store i32 150116102, i32* %14
  br label %537

; <label>:338:                                    ; preds = %15
  %339 = load i32, i32* @x.1135
  %340 = load i32, i32* @y.1136
  %341 = sub i32 0, 1
  %342 = add i32 %339, %341
  %343 = sub i32 %339, 1
  %344 = mul i32 %339, %342
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %340, 10
  %348 = and i1 %346, %347
  %349 = xor i1 %346, %347
  %350 = or i1 %348, %349
  %351 = or i1 %346, %347
  %352 = select i1 %350, i32 1143349794, i32 -1125663845
  store i32 %352, i32* %14
  br label %537

; <label>:353:                                    ; preds = %15
  %354 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %355 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %354, i32 0, i32 1
  %356 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %355, align 8
  %357 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %356, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %357, align 8
  %358 = load i32, i32* @x.1135
  %359 = load i32, i32* @y.1136
  %360 = add i32 %358, 1784443873
  %361 = sub i32 %360, 1
  %362 = sub i32 %361, 1784443873
  %363 = sub i32 %358, 1
  %364 = mul i32 %358, %362
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %359, 10
  %368 = xor i1 %366, true
  %369 = xor i1 %367, true
  %370 = xor i1 true, true
  %371 = and i1 %368, true
  %372 = and i1 %366, %370
  %373 = and i1 %369, true
  %374 = and i1 %367, %370
  %375 = or i1 %371, %372
  %376 = or i1 %373, %374
  %377 = xor i1 %375, %376
  %378 = or i1 %368, %369
  %379 = xor i1 %378, true
  %380 = or i1 true, %370
  %381 = and i1 %379, %380
  %382 = or i1 %377, %381
  %383 = or i1 %366, %367
  %384 = select i1 %382, i32 1386013601, i32 -1125663845
  store i32 %384, i32* %14
  br label %537

; <label>:385:                                    ; preds = %15
  store i32 150116102, i32* %14
  br label %537

; <label>:386:                                    ; preds = %15
  %387 = load i32, i32* @x.1135
  %388 = load i32, i32* @y.1136
  %389 = sub i32 0, 1
  %390 = add i32 %387, %389
  %391 = sub i32 %387, 1
  %392 = mul i32 %387, %390
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %388, 10
  %396 = xor i1 %394, true
  %397 = xor i1 %395, true
  %398 = xor i1 true, true
  %399 = and i1 %396, true
  %400 = and i1 %394, %398
  %401 = and i1 %397, true
  %402 = and i1 %395, %398
  %403 = or i1 %399, %400
  %404 = or i1 %401, %402
  %405 = xor i1 %403, %404
  %406 = or i1 %396, %397
  %407 = xor i1 %406, true
  %408 = or i1 true, %398
  %409 = and i1 %407, %408
  %410 = or i1 %405, %409
  %411 = or i1 %394, %395
  %412 = select i1 %410, i32 968604247, i32 1236581562
  store i32 %412, i32* %14
  br label %537

; <label>:413:                                    ; preds = %15
  %414 = load i32, i32* @x.1135
  %415 = load i32, i32* @y.1136
  %416 = sub i32 0, 1
  %417 = add i32 %414, %416
  %418 = sub i32 %414, 1
  %419 = mul i32 %414, %417
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %415, 10
  %423 = xor i1 %421, true
  %424 = xor i1 %422, true
  %425 = xor i1 false, true
  %426 = and i1 %423, false
  %427 = and i1 %421, %425
  %428 = and i1 %424, false
  %429 = and i1 %422, %425
  %430 = or i1 %426, %427
  %431 = or i1 %428, %429
  %432 = xor i1 %430, %431
  %433 = or i1 %423, %424
  %434 = xor i1 %433, true
  %435 = or i1 false, %425
  %436 = and i1 %434, %435
  %437 = or i1 %432, %436
  %438 = or i1 %421, %422
  %439 = select i1 %437, i32 -800417, i32 1236581562
  store i32 %439, i32* %14
  br label %537

; <label>:440:                                    ; preds = %15
  store i32 -158398803, i32* %14
  br label %537

; <label>:441:                                    ; preds = %15
  %442 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %443 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %442, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %443, align 8
  store i32 -158398803, i32* %14
  br label %537

; <label>:444:                                    ; preds = %15
  %445 = load i32, i32* @x.1135
  %446 = load i32, i32* @y.1136
  %447 = sub i32 0, 1
  %448 = add i32 %445, %447
  %449 = sub i32 %445, 1
  %450 = mul i32 %445, %448
  %451 = urem i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %446, 10
  %454 = and i1 %452, %453
  %455 = xor i1 %452, %453
  %456 = or i1 %454, %455
  %457 = or i1 %452, %453
  %458 = select i1 %456, i32 1496209588, i32 -630070405
  store i32 %458, i32* %14
  br label %537

; <label>:459:                                    ; preds = %15
  %460 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %460, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %461 = load i32, i32* @x.1135
  %462 = load i32, i32* @y.1136
  %463 = add i32 %461, 1316567633
  %464 = sub i32 %463, 1
  %465 = sub i32 %464, 1316567633
  %466 = sub i32 %461, 1
  %467 = mul i32 %461, %465
  %468 = urem i32 %467, 2
  %469 = icmp eq i32 %468, 0
  %470 = icmp slt i32 %462, 10
  %471 = xor i1 %469, true
  %472 = xor i1 %470, true
  %473 = xor i1 false, true
  %474 = and i1 %471, false
  %475 = and i1 %469, %473
  %476 = and i1 %472, false
  %477 = and i1 %470, %473
  %478 = or i1 %474, %475
  %479 = or i1 %476, %477
  %480 = xor i1 %478, %479
  %481 = or i1 %471, %472
  %482 = xor i1 %481, true
  %483 = or i1 false, %473
  %484 = and i1 %482, %483
  %485 = or i1 %480, %484
  %486 = or i1 %469, %470
  %487 = select i1 %485, i32 -214672188, i32 -630070405
  store i32 %487, i32* %14
  br label %537

; <label>:488:                                    ; preds = %15
  store i32 282551297, i32* %14
  br label %537

; <label>:489:                                    ; preds = %15
  %490 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %490

; <label>:491:                                    ; preds = %15
  %492 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %493 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %492, i32 0, i32 1
  %494 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %493, align 8
  store %"struct.std::_Rb_tree_node_base"* %494, %"struct.std::_Rb_tree_node_base"** %7, align 8
  store i32 -1496310965, i32* %14
  br label %537

; <label>:495:                                    ; preds = %15
  %496 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %497 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %496, i32 0, i32 1
  %498 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %497, align 8
  %499 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %498, i32 0, i32 3
  %500 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %499, align 8
  %501 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %502 = icmp eq %"struct.std::_Rb_tree_node_base"* %500, %501
  store i32 1111444389, i32* %14
  br label %537

; <label>:503:                                    ; preds = %15
  %504 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %505 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %504, i32 0, i32 1
  %506 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %505, align 8
  %507 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %506, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %507, align 8
  %508 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %509 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %508, i32 0, i32 1
  %510 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %509, align 8
  %511 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %510, i32 0, i32 2
  %512 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %511, align 8
  %513 = icmp ne %"struct.std::_Rb_tree_node_base"* %512, null
  store i32 1136443260, i32* %14
  br label %537

; <label>:514:                                    ; preds = %15
  %515 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %516 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %515, i32 0, i32 1
  %517 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %516, align 8
  %518 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %517, i32 0, i32 3
  %519 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %518, align 8
  %520 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %521 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %520, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %519, %"struct.std::_Rb_tree_node_base"** %521, align 8
  store i32 626848429, i32* %14
  br label %537

; <label>:522:                                    ; preds = %15
  %523 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %524 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %523, i32 0, i32 1
  %525 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %524, align 8
  %526 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %525, i32 0, i32 2
  %527 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %526, align 8
  %528 = icmp ne %"struct.std::_Rb_tree_node_base"* %527, null
  store i32 -1277259150, i32* %14
  br label %537

; <label>:529:                                    ; preds = %15
  %530 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"** %6
  %531 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Reuse_or_alloc_node"* %530, i32 0, i32 1
  %532 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %531, align 8
  %533 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %532, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %533, align 8
  store i32 1143349794, i32* %14
  br label %537

; <label>:534:                                    ; preds = %15
  store i32 968604247, i32* %14
  br label %537

; <label>:535:                                    ; preds = %15
  %536 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %536, %"struct.std::_Rb_tree_node_base"** %7, align 8
  store i32 1496209588, i32* %14
  br label %537

; <label>:537:                                    ; preds = %535, %534, %529, %522, %514, %503, %495, %491, %488, %459, %444, %441, %440, %413, %386, %385, %353, %338, %337, %336, %328, %325, %291, %275, %274, %240, %224, %216, %208, %205, %167, %151, %148, %113, %85, %69, %68, %49, %22, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_minimumEPS_(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = alloca i32
  store i32 -1451153956, i32* %3
  br label %4

; <label>:4:                                      ; preds = %1, %19
  %5 = load i32, i32* %3
  switch i32 %5, label %6 [
    i32 -1451153956, label %7
    i32 1664268454, label %13
    i32 839383320, label %17
  ]

; <label>:6:                                      ; preds = %4
  br label %19

; <label>:7:                                      ; preds = %4
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %8, i32 0, i32 2
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %10, null
  %12 = select i1 %11, i32 1664268454, i32 839383320
  store i32 %12, i32* %3
  br label %19

; <label>:13:                                     ; preds = %4
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %14, i32 0, i32 2
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
  store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %2, align 8
  store i32 -1451153956, i32* %3
  br label %19

; <label>:17:                                     ; preds = %4
  %18 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"* %18

; <label>:19:                                     ; preds = %13, %7, %6
  br label %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = alloca i32
  store i32 -451014799, i32* %3
  br label %4

; <label>:4:                                      ; preds = %1, %79
  %5 = load i32, i32* %3
  switch i32 %5, label %6 [
    i32 -451014799, label %7
    i32 -2091988449, label %13
    i32 652710712, label %41
    i32 -1136170957, label %72
    i32 -502525183, label %73
    i32 -424932557, label %75
  ]

; <label>:6:                                      ; preds = %4
  br label %79

; <label>:7:                                      ; preds = %4
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %8, i32 0, i32 3
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %10, null
  %12 = select i1 %11, i32 -2091988449, i32 -502525183
  store i32 %12, i32* %3
  br label %79

; <label>:13:                                     ; preds = %4
  %14 = load i32, i32* @x.1139
  %15 = load i32, i32* @y.1140
  %16 = add i32 %14, -1729220540
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1729220540
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 652710712, i32 -424932557
  store i32 %40, i32* %3
  br label %79

; <label>:41:                                     ; preds = %4
  %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %42, i32 0, i32 3
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %45 = load i32, i32* @x.1139
  %46 = load i32, i32* @y.1140
  %47 = add i32 %45, -1904027912
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1904027912
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1136170957, i32 -424932557
  store i32 %71, i32* %3
  br label %79

; <label>:72:                                     ; preds = %4
  store i32 -451014799, i32* %3
  br label %79

; <label>:73:                                     ; preds = %4
  %74 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"* %74

; <label>:75:                                     ; preds = %4
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %76, i32 0, i32 3
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %2, align 8
  store i32 652710712, i32* %3
  br label %79

; <label>:79:                                     ; preds = %75, %72, %41, %13, %7, %6
  br label %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE11lower_boundERS3_(%"class.std::map.18"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %4 = alloca %"class.std::map.18"*, align 8
  %5 = alloca i64*, align 8
  store %"class.std::map.18"* %0, %"class.std::map.18"** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %"class.std::map.18"*, %"class.std::map.18"** %4, align 8
  %7 = getelementptr inbounds %"class.std::map.18", %"class.std::map.18"* %6, i32 0, i32 0
  %8 = load i64*, i64** %5, align 8
  %9 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11lower_boundERS1_(%"class.std::_Rb_tree.19"* %7, i64* dereferenceable(8) %8)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %3, i32 0, i32 0
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  ret %"struct.std::_Rb_tree_node_base"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEeqERKS9_(%"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %0, %"struct.std::_Rb_tree_iterator.70"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %1, %"struct.std::_Rb_tree_iterator.70"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE3endEv(%"class.std::map.18"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1145
  %6 = load i32, i32* @y.1146
  %7 = add i32 %5, 904844831
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 904844831
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1312668015, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1312668015, label %19
    i32 -743792007, label %39
    i32 -1758300044, label %63
    i32 -2079251979, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -743792007, i32 -2079251979
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %41 = alloca %"class.std::map.18"*, align 8
  store %"class.std::map.18"* %0, %"class.std::map.18"** %41, align 8
  %42 = load %"class.std::map.18"*, %"class.std::map.18"** %41, align 8
  %43 = getelementptr inbounds %"class.std::map.18", %"class.std::map.18"* %42, i32 0, i32 0
  %44 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE3endEv(%"class.std::_Rb_tree.19"* %43) #3
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %40, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %40, i32 0, i32 0
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8
  store %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"** %2
  %48 = load i32, i32* @x.1145
  %49 = load i32, i32* @y.1146
  %50 = sub i32 %48, 1884905602
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1884905602
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1758300044, i32 -2079251979
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %67 = alloca %"class.std::map.18"*, align 8
  store %"class.std::map.18"* %0, %"class.std::map.18"** %67, align 8
  %68 = load %"class.std::map.18"*, %"class.std::map.18"** %67, align 8
  %69 = getelementptr inbounds %"class.std::map.18", %"class.std::map.18"* %68, i32 0, i32 0
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE3endEv(%"class.std::_Rb_tree.19"* %69) #3
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %66, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %66, i32 0, i32 0
  %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %72, align 8
  store i32 -743792007, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNKSt3mapIxS_IxxSt4lessIxESaISt4pairIKxxEEES1_SaIS2_IS3_S6_EEE8key_compEv(%"class.std::map.18"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"class.std::map.18"*, align 8
  %4 = alloca %"struct.std::less", align 1
  store %"class.std::map.18"* %0, %"class.std::map.18"** %3, align 8
  %5 = load %"class.std::map.18"*, %"class.std::map.18"** %3, align 8
  %6 = getelementptr inbounds %"class.std::map.18", %"class.std::map.18"* %5, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8key_compEv(%"class.std::_Rb_tree.19"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"struct.std::pair.46"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEdeEv(%"struct.std::_Rb_tree_iterator.70"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.1149
  %3 = load i32, i32* @y.1150
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %41

; <label>:15:                                     ; preds = %1, %41
  %16 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %0, %"struct.std::_Rb_tree_iterator.70"** %16, align 8
  %17 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %17, i32 0, i32 0
  %19 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %20 = bitcast %"struct.std::_Rb_tree_node_base"* %19 to %"struct.std::_Rb_tree_node.44"*
  %21 = load i32, i32* @x.1149
  %22 = load i32, i32* @y.1150
  %23 = sub i32 %21, -1316105296
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -1316105296
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %41

; <label>:35:                                     ; preds = %15
  %36 = invoke %"struct.std::pair.46"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.44"* %20)
          to label %37 unwind label %38

; <label>:37:                                     ; preds = %35
  ret %"struct.std::pair.46"* %36

; <label>:38:                                     ; preds = %35
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  call void @__clang_call_terminate(i8* %40) #12
  unreachable

; <label>:41:                                     ; preds = %15, %1
  %42 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %0, %"struct.std::_Rb_tree_iterator.70"** %42, align 8
  %43 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %43, i32 0, i32 0
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  %46 = bitcast %"struct.std::_Rb_tree_node_base"* %45 to %"struct.std::_Rb_tree_node.44"*
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESH_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_(%"class.std::_Rb_tree.19"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator.71", align 8
  %8 = alloca %"class.std::_Rb_tree.19"*, align 8
  %9 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %10 = alloca %"class.std::tuple.63"*, align 8
  %11 = alloca %"class.std::tuple.60"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %13 = alloca %"struct.std::pair.55", align 8
  %14 = alloca %"struct.std::_Rb_tree_const_iterator.71", align 8
  %15 = alloca i8*
  %16 = alloca i32
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.71", %"struct.std::_Rb_tree_const_iterator.71"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %17, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %8, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %9, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %10, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %11, align 8
  %18 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8, align 8
  %19 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %9, align 8
  %20 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %19) #3
  %21 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %10, align 8
  %22 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %21) #3
  %23 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %11, align 8
  %24 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %23) #3
  %25 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESH_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree.19"* %18, %"struct.std::piecewise_construct_t"* dereferenceable(1) %20, %"class.std::tuple.63"* dereferenceable(8) %22, %"class.std::tuple.60"* dereferenceable(1) %24)
  store %"struct.std::_Rb_tree_node.44"* %25, %"struct.std::_Rb_tree_node.44"** %12, align 8
  %26 = bitcast %"struct.std::_Rb_tree_const_iterator.71"* %14 to i8*
  %27 = bitcast %"struct.std::_Rb_tree_const_iterator.71"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %12, align 8
  %29 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node.44"* %28)
          to label %30 unwind label %92

; <label>:30:                                     ; preds = %5
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.71", %"struct.std::_Rb_tree_const_iterator.71"* %14, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_(%"class.std::_Rb_tree.19"* %18, %"struct.std::_Rb_tree_node_base"* %32, i64* dereferenceable(8) %29)
          to label %34 unwind label %92

; <label>:34:                                     ; preds = %30
  %35 = bitcast %"struct.std::pair.55"* %13 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %36 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %35, i32 0, i32 0
  %37 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %33, 0
  store %"struct.std::_Rb_tree_node_base"* %37, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %38 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %35, i32 0, i32 1
  %39 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %33, 1
  store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 1
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = icmp ne %"struct.std::_Rb_tree_node_base"* %41, null
  br i1 %42, label %43, label %100

; <label>:43:                                     ; preds = %34
  %44 = load i32, i32* @x.1151
  %45 = load i32, i32* @y.1152
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %235

; <label>:57:                                     ; preds = %43, %235
  %58 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 0
  %59 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 1
  %61 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %60, align 8
  %62 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %12, align 8
  %63 = load i32, i32* @x.1151
  %64 = load i32, i32* @y.1152
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %235

; <label>:88:                                     ; preds = %57
  %89 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %18, %"struct.std::_Rb_tree_node_base"* %59, %"struct.std::_Rb_tree_node_base"* %61, %"struct.std::_Rb_tree_node.44"* %62)
          to label %90 unwind label %92

; <label>:90:                                     ; preds = %88
  %91 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %89, %"struct.std::_Rb_tree_node_base"** %91, align 8
  br label %182

; <label>:92:                                     ; preds = %88, %30, %5
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %15, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %16, align 4
  br label %96

; <label>:96:                                     ; preds = %92
  %97 = load i8*, i8** %15, align 8
  %98 = call i8* @__cxa_begin_catch(i8* %97) #3
  %99 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %18, %"struct.std::_Rb_tree_node.44"* %99) #3
  invoke void @__cxa_rethrow() #14
          to label %234 unwind label %106

; <label>:100:                                    ; preds = %34
  %101 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %12, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %18, %"struct.std::_Rb_tree_node.44"* %101) #3
  %102 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 0
  %103 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %102, align 8
  %104 = bitcast %"struct.std::_Rb_tree_node_base"* %103 to %"struct.std::_Rb_tree_node.44"*
  %105 = bitcast %"struct.std::_Rb_tree_node.44"* %104 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %6, %"struct.std::_Rb_tree_node_base"* %105) #3
  br label %182

; <label>:106:                                    ; preds = %96
  %107 = load i32, i32* @x.1151
  %108 = load i32, i32* @y.1152
  %109 = add i32 %107, 643165973
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 643165973
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %241

; <label>:121:                                    ; preds = %106, %241
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %15, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %16, align 4
  %125 = load i32, i32* @x.1151
  %126 = load i32, i32* @y.1152
  %127 = add i32 %125, 1737083063
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, 1737083063
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %241

; <label>:139:                                    ; preds = %121
  invoke void @__cxa_end_catch()
          to label %140 unwind label %231

; <label>:140:                                    ; preds = %139
  br label %185
                                                  ; No predecessors!
  %142 = load i32, i32* @x.1151
  %143 = load i32, i32* @y.1152
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  br i1 %153, label %155, label %245

; <label>:155:                                    ; preds = %141, %245
  call void @llvm.trap()
  %156 = load i32, i32* @x.1151
  %157 = load i32, i32* @y.1152
  %158 = sub i32 0, 1
  %159 = add i32 %156, %158
  %160 = sub i32 %156, 1
  %161 = mul i32 %156, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %157, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 false, true
  %168 = and i1 %165, false
  %169 = and i1 %163, %167
  %170 = and i1 %166, false
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 false, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %245

; <label>:181:                                    ; preds = %155
  unreachable

; <label>:182:                                    ; preds = %100, %90
  %183 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %6, i32 0, i32 0
  %184 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %183, align 8
  ret %"struct.std::_Rb_tree_node_base"* %184

; <label>:185:                                    ; preds = %140
  %186 = load i32, i32* @x.1151
  %187 = load i32, i32* @y.1152
  %188 = sub i32 0, 1
  %189 = add i32 %186, %188
  %190 = sub i32 %186, 1
  %191 = mul i32 %186, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %187, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  br i1 %197, label %199, label %246

; <label>:199:                                    ; preds = %185, %246
  %200 = load i8*, i8** %15, align 8
  %201 = load i32, i32* %16, align 4
  %202 = insertvalue { i8*, i32 } undef, i8* %200, 0
  %203 = insertvalue { i8*, i32 } %202, i32 %201, 1
  %204 = load i32, i32* @x.1151
  %205 = load i32, i32* @y.1152
  %206 = sub i32 %204, 1243601507
  %207 = sub i32 %206, 1
  %208 = add i32 %207, 1243601507
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 true, true
  %217 = and i1 %214, true
  %218 = and i1 %212, %216
  %219 = and i1 %215, true
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 true, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %246

; <label>:230:                                    ; preds = %199
  resume { i8*, i32 } %203

; <label>:231:                                    ; preds = %139
  %232 = landingpad { i8*, i32 }
          catch i8* null
  %233 = extractvalue { i8*, i32 } %232, 0
  call void @__clang_call_terminate(i8* %233) #12
  unreachable

; <label>:234:                                    ; preds = %96
  unreachable

; <label>:235:                                    ; preds = %57, %43
  %236 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 0
  %237 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %236, align 8
  %238 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %13, i32 0, i32 1
  %239 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %238, align 8
  %240 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %12, align 8
  br label %57

; <label>:241:                                    ; preds = %121, %106
  %242 = landingpad { i8*, i32 }
          cleanup
  %243 = extractvalue { i8*, i32 } %242, 0
  store i8* %243, i8** %15, align 8
  %244 = extractvalue { i8*, i32 } %242, 1
  store i32 %244, i32* %16, align 4
  br label %121

; <label>:245:                                    ; preds = %155, %141
  call void @llvm.trap()
  br label %155

; <label>:246:                                    ; preds = %199, %185
  %247 = load i8*, i8** %15, align 8
  %248 = load i32, i32* %16, align 4
  %249 = insertvalue { i8*, i32 } undef, i8* %247, 0
  %250 = insertvalue { i8*, i32 } %249, i32 %248, 1
  br label %199
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2ERKSt17_Rb_tree_iteratorIS8_E(%"struct.std::_Rb_tree_const_iterator.71"*, %"struct.std::_Rb_tree_iterator.70"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.71"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.71"* %0, %"struct.std::_Rb_tree_const_iterator.71"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %1, %"struct.std::_Rb_tree_iterator.70"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator.71"*, %"struct.std::_Rb_tree_const_iterator.71"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.71", %"struct.std::_Rb_tree_const_iterator.71"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11lower_boundERS1_(%"class.std::_Rb_tree.19"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1155
  %7 = load i32, i32* @y.1156
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1010126468, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %92
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1010126468, label %19
    i32 655448243, label %39
    i32 -701998173, label %78
    i32 -613764712, label %80
  ]

; <label>:18:                                     ; preds = %16
  br label %92

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 655448243, i32 -613764712
  store i32 %38, i32* %15
  br label %92

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %41 = alloca %"class.std::_Rb_tree.19"*, align 8
  %42 = alloca i64*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %41, align 8
  store i64* %1, i64** %42, align 8
  %43 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %41, align 8
  %44 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_beginEv(%"class.std::_Rb_tree.19"* %43) #3
  %45 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_M_endEv(%"class.std::_Rb_tree.19"* %43) #3
  %46 = load i64*, i64** %42, align 8
  %47 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_ESF_RS1_(%"class.std::_Rb_tree.19"* %43, %"struct.std::_Rb_tree_node.44"* %44, %"struct.std::_Rb_tree_node.44"* %45, i64* dereferenceable(8) %46)
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %40, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %49 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %40, i32 0, i32 0
  %50 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %49, align 8
  store %"struct.std::_Rb_tree_node_base"* %50, %"struct.std::_Rb_tree_node_base"** %3
  %51 = load i32, i32* @x.1155
  %52 = load i32, i32* @y.1156
  %53 = sub i32 %51, -1880668179
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1880668179
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -701998173, i32 -613764712
  store i32 %77, i32* %15
  br label %92

; <label>:78:                                     ; preds = %16
  %79 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  ret %"struct.std::_Rb_tree_node_base"* %79

; <label>:80:                                     ; preds = %16
  %81 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %82 = alloca %"class.std::_Rb_tree.19"*, align 8
  %83 = alloca i64*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %82, align 8
  store i64* %1, i64** %83, align 8
  %84 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %82, align 8
  %85 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_beginEv(%"class.std::_Rb_tree.19"* %84) #3
  %86 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_M_endEv(%"class.std::_Rb_tree.19"* %84) #3
  %87 = load i64*, i64** %83, align 8
  %88 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_ESF_RS1_(%"class.std::_Rb_tree.19"* %84, %"struct.std::_Rb_tree_node.44"* %85, %"struct.std::_Rb_tree_node.44"* %86, i64* dereferenceable(8) %87)
  %89 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %81, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %88, %"struct.std::_Rb_tree_node_base"** %89, align 8
  %90 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %81, i32 0, i32 0
  %91 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %90, align 8
  store i32 655448243, i32* %15
  br label %92

; <label>:92:                                     ; preds = %80, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_ESF_RS1_(%"class.std::_Rb_tree.19"*, %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca %"class.std::_Rb_tree.19"*
  %7 = alloca i64**
  %8 = alloca %"struct.std::_Rb_tree_node.44"**
  %9 = alloca %"struct.std::_Rb_tree_node.44"**
  %10 = alloca %"struct.std::_Rb_tree_iterator.70"*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.1157
  %14 = load i32, i32* @y.1158
  %15 = sub i32 %13, 1925284464
  %16 = sub i32 %15, 1
  %17 = add i32 %16, 1925284464
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %12
  %22 = icmp slt i32 %14, 10
  store i1 %22, i1* %11
  %23 = alloca i32
  store i32 -2038445715, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %202
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 -2038445715, label %27
    i32 -695253942, label %35
    i32 -839355636, label %60
    i32 1301580750, label %61
    i32 1205758969, label %66
    i32 685280069, label %77
    i32 549490363, label %93
    i32 1202882024, label %129
    i32 869186824, label %130
    i32 -1643319877, label %136
    i32 -1983595061, label %137
    i32 -226626430, label %153
    i32 -1153693663, label %176
    i32 -1275544327, label %178
    i32 1817654338, label %185
    i32 1484384637, label %194
  ]

; <label>:26:                                     ; preds = %24
  br label %202

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -695253942, i32 -1275544327
  store i32 %34, i32* %23
  br label %202

; <label>:35:                                     ; preds = %24
  %36 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  store %"struct.std::_Rb_tree_iterator.70"* %36, %"struct.std::_Rb_tree_iterator.70"** %10
  %37 = alloca %"class.std::_Rb_tree.19"*, align 8
  %38 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"struct.std::_Rb_tree_node.44"** %38, %"struct.std::_Rb_tree_node.44"*** %9
  %39 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"struct.std::_Rb_tree_node.44"** %39, %"struct.std::_Rb_tree_node.44"*** %8
  %40 = alloca i64*, align 8
  store i64** %40, i64*** %7
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %37, align 8
  %41 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  store %"struct.std::_Rb_tree_node.44"* %1, %"struct.std::_Rb_tree_node.44"** %41, align 8
  %42 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %8
  store %"struct.std::_Rb_tree_node.44"* %2, %"struct.std::_Rb_tree_node.44"** %42, align 8
  %43 = load volatile i64**, i64*** %7
  store i64* %3, i64** %43, align 8
  %44 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %37, align 8
  store %"class.std::_Rb_tree.19"* %44, %"class.std::_Rb_tree.19"** %6
  %45 = load i32, i32* @x.1157
  %46 = load i32, i32* @y.1158
  %47 = add i32 %45, 368195466
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 368195466
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -839355636, i32 -1275544327
  store i32 %59, i32* %23
  br label %202

; <label>:60:                                     ; preds = %24
  store i32 1301580750, i32* %23
  br label %202

; <label>:61:                                     ; preds = %24
  %62 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  %63 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %62, align 8
  %64 = icmp ne %"struct.std::_Rb_tree_node.44"* %63, null
  %65 = select i1 %64, i32 1205758969, i32 -1983595061
  store i32 %65, i32* %23
  br label %202

; <label>:66:                                     ; preds = %24
  %67 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %6
  %68 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %68, i32 0, i32 0
  %70 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  %71 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %70, align 8
  %72 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node.44"* %71)
  %73 = load volatile i64**, i64*** %7
  %74 = load i64*, i64** %73, align 8
  %75 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %69, i64* dereferenceable(8) %72, i64* dereferenceable(8) %74)
  %76 = select i1 %75, i32 869186824, i32 685280069
  store i32 %76, i32* %23
  br label %202

; <label>:77:                                     ; preds = %24
  %78 = load i32, i32* @x.1157
  %79 = load i32, i32* @y.1158
  %80 = sub i32 %78, -94071555
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -94071555
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 549490363, i32 1817654338
  store i32 %92, i32* %23
  br label %202

; <label>:93:                                     ; preds = %24
  %94 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  %95 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %94, align 8
  %96 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %8
  store %"struct.std::_Rb_tree_node.44"* %95, %"struct.std::_Rb_tree_node.44"** %96, align 8
  %97 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  %98 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %97, align 8
  %99 = bitcast %"struct.std::_Rb_tree_node.44"* %98 to %"struct.std::_Rb_tree_node_base"*
  %100 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %99) #3
  %101 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  store %"struct.std::_Rb_tree_node.44"* %100, %"struct.std::_Rb_tree_node.44"** %101, align 8
  %102 = load i32, i32* @x.1157
  %103 = load i32, i32* @y.1158
  %104 = sub i32 %102, -2043344978
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -2043344978
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 1202882024, i32 1817654338
  store i32 %128, i32* %23
  br label %202

; <label>:129:                                    ; preds = %24
  store i32 -1643319877, i32* %23
  br label %202

; <label>:130:                                    ; preds = %24
  %131 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  %132 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %131, align 8
  %133 = bitcast %"struct.std::_Rb_tree_node.44"* %132 to %"struct.std::_Rb_tree_node_base"*
  %134 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %133) #3
  %135 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  store %"struct.std::_Rb_tree_node.44"* %134, %"struct.std::_Rb_tree_node.44"** %135, align 8
  store i32 -1643319877, i32* %23
  br label %202

; <label>:136:                                    ; preds = %24
  store i32 1301580750, i32* %23
  br label %202

; <label>:137:                                    ; preds = %24
  %138 = load i32, i32* @x.1157
  %139 = load i32, i32* @y.1158
  %140 = add i32 %138, 1879461734
  %141 = sub i32 %140, 1
  %142 = sub i32 %141, 1879461734
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  %152 = select i1 %150, i32 -226626430, i32 1484384637
  store i32 %152, i32* %23
  br label %202

; <label>:153:                                    ; preds = %24
  %154 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %8
  %155 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %154, align 8
  %156 = bitcast %"struct.std::_Rb_tree_node.44"* %155 to %"struct.std::_Rb_tree_node_base"*
  %157 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %157, %"struct.std::_Rb_tree_node_base"* %156) #3
  %158 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  %159 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %158, i32 0, i32 0
  %160 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %159, align 8
  store %"struct.std::_Rb_tree_node_base"* %160, %"struct.std::_Rb_tree_node_base"** %5
  %161 = load i32, i32* @x.1157
  %162 = load i32, i32* @y.1158
  %163 = add i32 %161, -922283630
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, -922283630
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  %175 = select i1 %173, i32 -1153693663, i32 1484384637
  store i32 %175, i32* %23
  br label %202

; <label>:176:                                    ; preds = %24
  %177 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  ret %"struct.std::_Rb_tree_node_base"* %177

; <label>:178:                                    ; preds = %24
  %179 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %180 = alloca %"class.std::_Rb_tree.19"*, align 8
  %181 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %182 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %183 = alloca i64*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %180, align 8
  store %"struct.std::_Rb_tree_node.44"* %1, %"struct.std::_Rb_tree_node.44"** %181, align 8
  store %"struct.std::_Rb_tree_node.44"* %2, %"struct.std::_Rb_tree_node.44"** %182, align 8
  store i64* %3, i64** %183, align 8
  %184 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %180, align 8
  store i32 -695253942, i32* %23
  br label %202

; <label>:185:                                    ; preds = %24
  %186 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  %187 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %186, align 8
  %188 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %8
  store %"struct.std::_Rb_tree_node.44"* %187, %"struct.std::_Rb_tree_node.44"** %188, align 8
  %189 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  %190 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %189, align 8
  %191 = bitcast %"struct.std::_Rb_tree_node.44"* %190 to %"struct.std::_Rb_tree_node_base"*
  %192 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %191) #3
  %193 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %9
  store %"struct.std::_Rb_tree_node.44"* %192, %"struct.std::_Rb_tree_node.44"** %193, align 8
  store i32 549490363, i32* %23
  br label %202

; <label>:194:                                    ; preds = %24
  %195 = load volatile %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %8
  %196 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %195, align 8
  %197 = bitcast %"struct.std::_Rb_tree_node.44"* %196 to %"struct.std::_Rb_tree_node_base"*
  %198 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %198, %"struct.std::_Rb_tree_node_base"* %197) #3
  %199 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %10
  %200 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %199, i32 0, i32 0
  %201 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %200, align 8
  store i32 -226626430, i32* %23
  br label %202

; <label>:202:                                    ; preds = %194, %185, %178, %153, %137, %136, %130, %129, %93, %77, %66, %61, %60, %35, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_M_endEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.44"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1159
  %6 = load i32, i32* @y.1160
  %7 = sub i32 %5, -1653328510
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1653328510
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1779525884, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1779525884, label %19
    i32 1869102927, label %27
    i32 -1720444119, label %60
    i32 -644688657, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1869102927, i32 -644688657
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %28, align 8
  %29 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %30, i32 0, i32 1
  %32 = bitcast %"struct.std::_Rb_tree_node_base"* %31 to %"struct.std::_Rb_tree_node.44"*
  store %"struct.std::_Rb_tree_node.44"* %32, %"struct.std::_Rb_tree_node.44"** %2
  %33 = load i32, i32* @x.1159
  %34 = load i32, i32* @y.1160
  %35 = sub i32 %33, 2000306976
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 2000306976
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1720444119, i32 -644688657
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %2
  ret %"struct.std::_Rb_tree_node.44"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %63, align 8
  %64 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %65, i32 0, i32 1
  %67 = bitcast %"struct.std::_Rb_tree_node_base"* %66 to %"struct.std::_Rb_tree_node.44"*
  store i32 1869102927, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node.44"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %3 = alloca %"struct.std::_Select1st.72", align 1
  store %"struct.std::_Rb_tree_node.44"* %0, %"struct.std::_Rb_tree_node.44"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %2, align 8
  %5 = call dereferenceable(56) %"struct.std::pair.46"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node.44"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEclERKS8_(%"struct.std::_Select1st.72"* %3, %"struct.std::pair.46"* dereferenceable(56) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1163
  %6 = load i32, i32* @y.1164
  %7 = add i32 %5, 1025987899
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1025987899
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 612336153, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 612336153, label %19
    i32 386273253, label %39
    i32 510640287, label %72
    i32 -1714972326, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 386273253, i32 -1714972326
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  %41 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %0, %"struct.std::_Rb_tree_iterator.70"** %40, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %42 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %41, align 8
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = load i32, i32* @x.1163
  %46 = load i32, i32* @y.1164
  %47 = sub i32 %45, 1339910279
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1339910279
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 510640287, i32 -1714972326
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  %75 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %0, %"struct.std::_Rb_tree_iterator.70"** %74, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %76 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %74, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %76, i32 0, i32 0
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store i32 386273253, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEclERKS8_(%"struct.std::_Select1st.72"*, %"struct.std::pair.46"* dereferenceable(56)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Select1st.72"*, align 8
  %4 = alloca %"struct.std::pair.46"*, align 8
  store %"struct.std::_Select1st.72"* %0, %"struct.std::_Select1st.72"** %3, align 8
  store %"struct.std::pair.46"* %1, %"struct.std::pair.46"** %4, align 8
  %5 = load %"struct.std::_Select1st.72"*, %"struct.std::_Select1st.72"** %3, align 8
  %6 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::pair.46", %"struct.std::pair.46"* %6, i32 0, i32 0
  ret i64* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(56) %"struct.std::pair.46"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node.44"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"struct.std::_Rb_tree_node.44"* %0, %"struct.std::_Rb_tree_node.44"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %2, align 8
  %4 = call %"struct.std::pair.46"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.44"* %3)
  ret %"struct.std::pair.46"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.46"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.44"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.46"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1169
  %6 = load i32, i32* @y.1170
  %7 = add i32 %5, -485256353
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -485256353
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1561874731, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1561874731, label %19
    i32 541525990, label %27
    i32 247635048, label %47
    i32 984644684, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 541525990, i32 984644684
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"struct.std::_Rb_tree_node.44"* %0, %"struct.std::_Rb_tree_node.44"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", %"struct.std::_Rb_tree_node.44"* %29, i32 0, i32 1
  %31 = call %"struct.std::pair.46"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.45"* %30) #3
  store %"struct.std::pair.46"* %31, %"struct.std::pair.46"** %2
  %32 = load i32, i32* @x.1169
  %33 = load i32, i32* @y.1170
  %34 = add i32 %32, -833139670
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -833139670
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 247635048, i32 984644684
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"struct.std::pair.46"*, %"struct.std::pair.46"** %2
  ret %"struct.std::pair.46"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"struct.std::_Rb_tree_node.44"* %0, %"struct.std::_Rb_tree_node.44"** %50, align 8
  %51 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node.44", %"struct.std::_Rb_tree_node.44"* %51, i32 0, i32 1
  %53 = call %"struct.std::pair.46"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.45"* %52) #3
  store i32 541525990, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.46"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.45"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.46"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1171
  %6 = load i32, i32* @y.1172
  %7 = sub i32 %5, -1177435403
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1177435403
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 926593747, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 926593747, label %19
    i32 -196100990, label %39
    i32 406384937, label %71
    i32 -54383219, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -196100990, i32 -54383219
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.__gnu_cxx::__aligned_membuf.45"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.45"* %0, %"struct.__gnu_cxx::__aligned_membuf.45"** %40, align 8
  %41 = load %"struct.__gnu_cxx::__aligned_membuf.45"*, %"struct.__gnu_cxx::__aligned_membuf.45"** %40, align 8
  %42 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.45"* %41) #3
  %43 = bitcast i8* %42 to %"struct.std::pair.46"*
  store %"struct.std::pair.46"* %43, %"struct.std::pair.46"** %2
  %44 = load i32, i32* @x.1171
  %45 = load i32, i32* @y.1172
  %46 = add i32 %44, 466284705
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 466284705
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 406384937, i32 -54383219
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::pair.46"*, %"struct.std::pair.46"** %2
  ret %"struct.std::pair.46"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.__gnu_cxx::__aligned_membuf.45"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.45"* %0, %"struct.__gnu_cxx::__aligned_membuf.45"** %74, align 8
  %75 = load %"struct.__gnu_cxx::__aligned_membuf.45"*, %"struct.__gnu_cxx::__aligned_membuf.45"** %74, align 8
  %76 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.45"* %75) #3
  %77 = bitcast i8* %76 to %"struct.std::pair.46"*
  store i32 -196100990, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.45"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1173
  %6 = load i32, i32* @y.1174
  %7 = sub i32 %5, -835784288
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -835784288
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2030360512, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2030360512, label %19
    i32 -1325781565, label %39
    i32 -2136313376, label %59
    i32 -728775563, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1325781565, i32 -728775563
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.__gnu_cxx::__aligned_membuf.45"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.45"* %0, %"struct.__gnu_cxx::__aligned_membuf.45"** %40, align 8
  %41 = load %"struct.__gnu_cxx::__aligned_membuf.45"*, %"struct.__gnu_cxx::__aligned_membuf.45"** %40, align 8
  %42 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.45", %"struct.__gnu_cxx::__aligned_membuf.45"* %41, i32 0, i32 0
  %43 = bitcast [56 x i8]* %42 to i8*
  store i8* %43, i8** %2
  %44 = load i32, i32* @x.1173
  %45 = load i32, i32* @y.1174
  %46 = add i32 %44, -752872399
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -752872399
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -2136313376, i32 -728775563
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i8*, i8** %2
  ret i8* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.__gnu_cxx::__aligned_membuf.45"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.45"* %0, %"struct.__gnu_cxx::__aligned_membuf.45"** %62, align 8
  %63 = load %"struct.__gnu_cxx::__aligned_membuf.45"*, %"struct.__gnu_cxx::__aligned_membuf.45"** %62, align 8
  %64 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.45", %"struct.__gnu_cxx::__aligned_membuf.45"* %63, i32 0, i32 0
  %65 = bitcast [56 x i8]* %64 to i8*
  store i32 -1325781565, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE3endEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %3 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %3, align 8
  %4 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8key_compEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %3, align 8
  %4 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESH_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree.19"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree.19"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple.63"*, align 8
  %8 = alloca %"class.std::tuple.60"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple.63"* %2, %"class.std::tuple.63"** %7, align 8
  store %"class.std::tuple.60"* %3, %"class.std::tuple.60"** %8, align 8
  %10 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %5, align 8
  %11 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_get_nodeEv(%"class.std::_Rb_tree.19"* %10)
  store %"struct.std::_Rb_tree_node.44"* %11, %"struct.std::_Rb_tree_node.44"** %9, align 8
  %12 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %9, align 8
  %13 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %14 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %13) #3
  %15 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %7, align 8
  %16 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %15) #3
  %17 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %8, align 8
  %18 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %17) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESH_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree.19"* %10, %"struct.std::_Rb_tree_node.44"* %12, %"struct.std::piecewise_construct_t"* dereferenceable(1) %14, %"class.std::tuple.63"* dereferenceable(8) %16, %"class.std::tuple.60"* dereferenceable(1) %18)
  %19 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %9, align 8
  ret %"struct.std::_Rb_tree_node.44"* %19
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_(%"class.std::_Rb_tree.19"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"class.std::_Rb_tree.19"*
  %9 = alloca %"struct.std::_Rb_tree_node_base"**
  %10 = alloca %"struct.std::_Rb_tree_node_base"**
  %11 = alloca %"struct.std::_Rb_tree_node_base"**
  %12 = alloca %"struct.std::_Rb_tree_iterator.70"*
  %13 = alloca %"struct.std::_Rb_tree_node_base"**
  %14 = alloca %"struct.std::_Rb_tree_iterator.70"*
  %15 = alloca %"struct.std::_Rb_tree_node_base"**
  %16 = alloca %"struct.std::_Rb_tree_iterator.70"*
  %17 = alloca i64**
  %18 = alloca %"struct.std::pair.55"*
  %19 = alloca i1
  %20 = alloca i1
  %21 = load i32, i32* @x.1181
  %22 = load i32, i32* @y.1182
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  store i1 %28, i1* %20
  %29 = icmp slt i32 %22, 10
  store i1 %29, i1* %19
  %30 = alloca i32
  store i32 1145663675, i32* %30
  br label %31

; <label>:31:                                     ; preds = %3, %442
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 1145663675, label %34
    i32 1639403039, label %42
    i32 648035432, label %82
    i32 2064439020, label %85
    i32 -1418052624, label %100
    i32 -2000150279, label %118
    i32 -1270574702, label %121
    i32 -965778640, label %133
    i32 619977904, label %139
    i32 1350594911, label %150
    i32 1905102703, label %162
    i32 -1012858378, label %175
    i32 -992142528, label %181
    i32 -1065124545, label %209
    i32 -906724043, label %236
    i32 -1661043275, label %239
    i32 -2085993592, label %246
    i32 -97374717, label %252
    i32 -1970269738, label %258
    i32 -254813628, label %269
    i32 -1606865441, label %281
    i32 -1863173220, label %294
    i32 -123002936, label %300
    i32 -1684498912, label %313
    i32 1022340838, label %341
    i32 1707987127, label %362
    i32 1444301281, label %365
    i32 -360738355, label %371
    i32 -857152064, label %377
    i32 -828233645, label %388
    i32 1638295591, label %394
    i32 180266894, label %398
    i32 1196081197, label %420
    i32 1631443274, label %424
    i32 1088450934, label %436
  ]

; <label>:33:                                     ; preds = %31
  br label %442

; <label>:34:                                     ; preds = %31
  %35 = load volatile i1, i1* %20
  %36 = load volatile i1, i1* %19
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1639403039, i32 180266894
  store i32 %41, i32* %30
  br label %442

; <label>:42:                                     ; preds = %31
  %43 = alloca %"struct.std::pair.55", align 8
  store %"struct.std::pair.55"* %43, %"struct.std::pair.55"** %18
  %44 = alloca %"struct.std::_Rb_tree_const_iterator.71", align 8
  %45 = alloca %"class.std::_Rb_tree.19"*, align 8
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %17
  %47 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  store %"struct.std::_Rb_tree_iterator.70"* %47, %"struct.std::_Rb_tree_iterator.70"** %16
  %48 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %48, %"struct.std::_Rb_tree_node_base"*** %15
  %49 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  store %"struct.std::_Rb_tree_iterator.70"* %49, %"struct.std::_Rb_tree_iterator.70"** %14
  %50 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %50, %"struct.std::_Rb_tree_node_base"*** %13
  %51 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  store %"struct.std::_Rb_tree_iterator.70"* %51, %"struct.std::_Rb_tree_iterator.70"** %12
  %52 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %52, %"struct.std::_Rb_tree_node_base"*** %11
  %53 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %53, %"struct.std::_Rb_tree_node_base"*** %10
  %54 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %54, %"struct.std::_Rb_tree_node_base"*** %9
  %55 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.71", %"struct.std::_Rb_tree_const_iterator.71"* %44, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %55, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %45, align 8
  %56 = load volatile i64**, i64*** %17
  store i64* %2, i64** %56, align 8
  %57 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %45, align 8
  store %"class.std::_Rb_tree.19"* %57, %"class.std::_Rb_tree.19"** %8
  %58 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.71"* %44) #3
  %59 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %59, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %58, %"struct.std::_Rb_tree_node_base"** %60, align 8
  %61 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %61, i32 0, i32 0
  %63 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %65 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_M_endEv(%"class.std::_Rb_tree.19"* %64) #3
  %66 = bitcast %"struct.std::_Rb_tree_node.44"* %65 to %"struct.std::_Rb_tree_node_base"*
  %67 = icmp eq %"struct.std::_Rb_tree_node_base"* %63, %66
  store i1 %67, i1* %7
  %68 = load i32, i32* @x.1181
  %69 = load i32, i32* @y.1182
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 648035432, i32 180266894
  store i32 %81, i32* %30
  br label %442

; <label>:82:                                     ; preds = %31
  %83 = load volatile i1, i1* %7
  %84 = select i1 %83, i32 2064439020, i32 1350594911
  store i32 %84, i32* %30
  br label %442

; <label>:85:                                     ; preds = %31
  %86 = load i32, i32* @x.1181
  %87 = load i32, i32* @y.1182
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 -1418052624, i32 1196081197
  store i32 %99, i32* %30
  br label %442

; <label>:100:                                    ; preds = %31
  %101 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %102 = call i64 @_ZNKSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE4sizeEv(%"class.std::_Rb_tree.19"* %101) #3
  %103 = icmp ugt i64 %102, 0
  store i1 %103, i1* %6
  %104 = load i32, i32* @x.1181
  %105 = load i32, i32* @y.1182
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  %117 = select i1 %115, i32 -2000150279, i32 1196081197
  store i32 %117, i32* %30
  br label %442

; <label>:118:                                    ; preds = %31
  %119 = load volatile i1, i1* %6
  %120 = select i1 %119, i32 -1270574702, i32 619977904
  store i32 %120, i32* %30
  br label %442

; <label>:121:                                    ; preds = %31
  %122 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %123 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %123, i32 0, i32 0
  %125 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %126 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree.19"* %125) #3
  %127 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %126, align 8
  %128 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %127)
  %129 = load volatile i64**, i64*** %17
  %130 = load i64*, i64** %129, align 8
  %131 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %124, i64* dereferenceable(8) %128, i64* dereferenceable(8) %130)
  %132 = select i1 %131, i32 -965778640, i32 619977904
  store i32 %132, i32* %30
  br label %442

; <label>:133:                                    ; preds = %31
  %134 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %134, align 8
  %135 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %136 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree.19"* %135) #3
  %137 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  %138 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %137, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %138, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %136)
  store i32 1638295591, i32* %30
  br label %442

; <label>:139:                                    ; preds = %31
  %140 = load volatile i64**, i64*** %17
  %141 = load i64*, i64** %140, align 8
  %142 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %143 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.19"* %142, i64* dereferenceable(8) %141)
  %144 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  %145 = bitcast %"struct.std::pair.55"* %144 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %146 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %145, i32 0, i32 0
  %147 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %143, 0
  store %"struct.std::_Rb_tree_node_base"* %147, %"struct.std::_Rb_tree_node_base"** %146, align 8
  %148 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %145, i32 0, i32 1
  %149 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %143, 1
  store %"struct.std::_Rb_tree_node_base"* %149, %"struct.std::_Rb_tree_node_base"** %148, align 8
  store i32 1638295591, i32* %30
  br label %442

; <label>:150:                                    ; preds = %31
  %151 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %152 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %152, i32 0, i32 0
  %154 = load volatile i64**, i64*** %17
  %155 = load i64*, i64** %154, align 8
  %156 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %157 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %156, i32 0, i32 0
  %158 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %157, align 8
  %159 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %158)
  %160 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %153, i64* dereferenceable(8) %155, i64* dereferenceable(8) %159)
  %161 = select i1 %160, i32 1905102703, i32 -254813628
  store i32 %161, i32* %30
  br label %442

; <label>:162:                                    ; preds = %31
  %163 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %14
  %164 = bitcast %"struct.std::_Rb_tree_iterator.70"* %163 to i8*
  %165 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %166 = bitcast %"struct.std::_Rb_tree_iterator.70"* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %166, i64 8, i32 8, i1 false)
  %167 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %168 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %167, i32 0, i32 0
  %169 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %168, align 8
  %170 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %171 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_leftmostEv(%"class.std::_Rb_tree.19"* %170) #3
  %172 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %171, align 8
  %173 = icmp eq %"struct.std::_Rb_tree_node_base"* %169, %172
  %174 = select i1 %173, i32 -1012858378, i32 -992142528
  store i32 %174, i32* %30
  br label %442

; <label>:175:                                    ; preds = %31
  %176 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %177 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_leftmostEv(%"class.std::_Rb_tree.19"* %176) #3
  %178 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %179 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_leftmostEv(%"class.std::_Rb_tree.19"* %178) #3
  %180 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %180, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %177, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %179)
  store i32 1638295591, i32* %30
  br label %442

; <label>:181:                                    ; preds = %31
  %182 = load i32, i32* @x.1181
  %183 = load i32, i32* @y.1182
  %184 = add i32 %182, 895650003
  %185 = sub i32 %184, 1
  %186 = sub i32 %185, 895650003
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 true, true
  %195 = and i1 %192, true
  %196 = and i1 %190, %194
  %197 = and i1 %193, true
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 true, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  %208 = select i1 %206, i32 -1065124545, i32 1631443274
  store i32 %208, i32* %30
  br label %442

; <label>:209:                                    ; preds = %31
  %210 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %211 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %210, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %211, i32 0, i32 0
  %213 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %14
  %214 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.70"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEmmEv(%"struct.std::_Rb_tree_iterator.70"* %213) #3
  %215 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %214, i32 0, i32 0
  %216 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %215, align 8
  %217 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %216)
  %218 = load volatile i64**, i64*** %17
  %219 = load i64*, i64** %218, align 8
  %220 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %212, i64* dereferenceable(8) %217, i64* dereferenceable(8) %219)
  store i1 %220, i1* %5
  %221 = load i32, i32* @x.1181
  %222 = load i32, i32* @y.1182
  %223 = add i32 %221, 715061441
  %224 = sub i32 %223, 1
  %225 = sub i32 %224, 715061441
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  %235 = select i1 %233, i32 -906724043, i32 1631443274
  store i32 %235, i32* %30
  br label %442

; <label>:236:                                    ; preds = %31
  %237 = load volatile i1, i1* %5
  %238 = select i1 %237, i32 -1661043275, i32 -1970269738
  store i32 %238, i32* %30
  br label %442

; <label>:239:                                    ; preds = %31
  %240 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %14
  %241 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %240, i32 0, i32 0
  %242 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %241, align 8
  %243 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %242) #3
  %244 = icmp eq %"struct.std::_Rb_tree_node.44"* %243, null
  %245 = select i1 %244, i32 -2085993592, i32 -97374717
  store i32 %245, i32* %30
  br label %442

; <label>:246:                                    ; preds = %31
  %247 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %13
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %247, align 8
  %248 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %14
  %249 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %248, i32 0, i32 0
  %250 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  %251 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %13
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %250, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %251, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %249)
  store i32 1638295591, i32* %30
  br label %442

; <label>:252:                                    ; preds = %31
  %253 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %254 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %253, i32 0, i32 0
  %255 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %256 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %255, i32 0, i32 0
  %257 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %257, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %254, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %256)
  store i32 1638295591, i32* %30
  br label %442

; <label>:258:                                    ; preds = %31
  %259 = load volatile i64**, i64*** %17
  %260 = load i64*, i64** %259, align 8
  %261 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %262 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.19"* %261, i64* dereferenceable(8) %260)
  %263 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  %264 = bitcast %"struct.std::pair.55"* %263 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %265 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %264, i32 0, i32 0
  %266 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %262, 0
  store %"struct.std::_Rb_tree_node_base"* %266, %"struct.std::_Rb_tree_node_base"** %265, align 8
  %267 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %264, i32 0, i32 1
  %268 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %262, 1
  store %"struct.std::_Rb_tree_node_base"* %268, %"struct.std::_Rb_tree_node_base"** %267, align 8
  store i32 1638295591, i32* %30
  br label %442

; <label>:269:                                    ; preds = %31
  %270 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %271 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %270, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %271, i32 0, i32 0
  %273 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %274 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %273, i32 0, i32 0
  %275 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %274, align 8
  %276 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %275)
  %277 = load volatile i64**, i64*** %17
  %278 = load i64*, i64** %277, align 8
  %279 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %272, i64* dereferenceable(8) %276, i64* dereferenceable(8) %278)
  %280 = select i1 %279, i32 -1606865441, i32 -828233645
  store i32 %280, i32* %30
  br label %442

; <label>:281:                                    ; preds = %31
  %282 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %12
  %283 = bitcast %"struct.std::_Rb_tree_iterator.70"* %282 to i8*
  %284 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %285 = bitcast %"struct.std::_Rb_tree_iterator.70"* %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %283, i8* %285, i64 8, i32 8, i1 false)
  %286 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %287 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %286, i32 0, i32 0
  %288 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %287, align 8
  %289 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %290 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree.19"* %289) #3
  %291 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %290, align 8
  %292 = icmp eq %"struct.std::_Rb_tree_node_base"* %288, %291
  %293 = select i1 %292, i32 -1863173220, i32 -123002936
  store i32 %293, i32* %30
  br label %442

; <label>:294:                                    ; preds = %31
  %295 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %11
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %295, align 8
  %296 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %297 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree.19"* %296) #3
  %298 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  %299 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %11
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %298, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %299, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %297)
  store i32 1638295591, i32* %30
  br label %442

; <label>:300:                                    ; preds = %31
  %301 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %302 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %302, i32 0, i32 0
  %304 = load volatile i64**, i64*** %17
  %305 = load i64*, i64** %304, align 8
  %306 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %12
  %307 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.70"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEppEv(%"struct.std::_Rb_tree_iterator.70"* %306) #3
  %308 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %307, i32 0, i32 0
  %309 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %308, align 8
  %310 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %309)
  %311 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %303, i64* dereferenceable(8) %305, i64* dereferenceable(8) %310)
  %312 = select i1 %311, i32 -1684498912, i32 -857152064
  store i32 %312, i32* %30
  br label %442

; <label>:313:                                    ; preds = %31
  %314 = load i32, i32* @x.1181
  %315 = load i32, i32* @y.1182
  %316 = sub i32 %314, -796299125
  %317 = sub i32 %316, 1
  %318 = add i32 %317, -796299125
  %319 = sub i32 %314, 1
  %320 = mul i32 %314, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %315, 10
  %324 = xor i1 %322, true
  %325 = xor i1 %323, true
  %326 = xor i1 false, true
  %327 = and i1 %324, false
  %328 = and i1 %322, %326
  %329 = and i1 %325, false
  %330 = and i1 %323, %326
  %331 = or i1 %327, %328
  %332 = or i1 %329, %330
  %333 = xor i1 %331, %332
  %334 = or i1 %324, %325
  %335 = xor i1 %334, true
  %336 = or i1 false, %326
  %337 = and i1 %335, %336
  %338 = or i1 %333, %337
  %339 = or i1 %322, %323
  %340 = select i1 %338, i32 1022340838, i32 1088450934
  store i32 %340, i32* %30
  br label %442

; <label>:341:                                    ; preds = %31
  %342 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %343 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %342, i32 0, i32 0
  %344 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %343, align 8
  %345 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %344) #3
  %346 = icmp eq %"struct.std::_Rb_tree_node.44"* %345, null
  store i1 %346, i1* %4
  %347 = load i32, i32* @x.1181
  %348 = load i32, i32* @y.1182
  %349 = add i32 %347, 1962580830
  %350 = sub i32 %349, 1
  %351 = sub i32 %350, 1962580830
  %352 = sub i32 %347, 1
  %353 = mul i32 %347, %351
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %348, 10
  %357 = and i1 %355, %356
  %358 = xor i1 %355, %356
  %359 = or i1 %357, %358
  %360 = or i1 %355, %356
  %361 = select i1 %359, i32 1707987127, i32 1088450934
  store i32 %361, i32* %30
  br label %442

; <label>:362:                                    ; preds = %31
  %363 = load volatile i1, i1* %4
  %364 = select i1 %363, i32 1444301281, i32 -360738355
  store i32 %364, i32* %30
  br label %442

; <label>:365:                                    ; preds = %31
  %366 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %10
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %366, align 8
  %367 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %368 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %367, i32 0, i32 0
  %369 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  %370 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %10
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.55"* %369, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %370, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %368)
  store i32 1638295591, i32* %30
  br label %442

; <label>:371:                                    ; preds = %31
  %372 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %12
  %373 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %372, i32 0, i32 0
  %374 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %12
  %375 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %374, i32 0, i32 0
  %376 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.55"* %376, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %373, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %375)
  store i32 1638295591, i32* %30
  br label %442

; <label>:377:                                    ; preds = %31
  %378 = load volatile i64**, i64*** %17
  %379 = load i64*, i64** %378, align 8
  %380 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %381 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.19"* %380, i64* dereferenceable(8) %379)
  %382 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  %383 = bitcast %"struct.std::pair.55"* %382 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %384 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %383, i32 0, i32 0
  %385 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %381, 0
  store %"struct.std::_Rb_tree_node_base"* %385, %"struct.std::_Rb_tree_node_base"** %384, align 8
  %386 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %383, i32 0, i32 1
  %387 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %381, 1
  store %"struct.std::_Rb_tree_node_base"* %387, %"struct.std::_Rb_tree_node_base"** %386, align 8
  store i32 1638295591, i32* %30
  br label %442

; <label>:388:                                    ; preds = %31
  %389 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %390 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %389, i32 0, i32 0
  %391 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %9
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %391, align 8
  %392 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  %393 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %9
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %392, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %390, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %393)
  store i32 1638295591, i32* %30
  br label %442

; <label>:394:                                    ; preds = %31
  %395 = load volatile %"struct.std::pair.55"*, %"struct.std::pair.55"** %18
  %396 = bitcast %"struct.std::pair.55"* %395 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %397 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %396, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %397

; <label>:398:                                    ; preds = %31
  %399 = alloca %"struct.std::pair.55", align 8
  %400 = alloca %"struct.std::_Rb_tree_const_iterator.71", align 8
  %401 = alloca %"class.std::_Rb_tree.19"*, align 8
  %402 = alloca i64*, align 8
  %403 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %404 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %405 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %406 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %407 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %408 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %409 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %410 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %411 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.71", %"struct.std::_Rb_tree_const_iterator.71"* %400, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %411, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %401, align 8
  store i64* %2, i64** %402, align 8
  %412 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %401, align 8
  %413 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.71"* %400) #3
  %414 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %403, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %413, %"struct.std::_Rb_tree_node_base"** %414, align 8
  %415 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %403, i32 0, i32 0
  %416 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %415, align 8
  %417 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_M_endEv(%"class.std::_Rb_tree.19"* %412) #3
  %418 = bitcast %"struct.std::_Rb_tree_node.44"* %417 to %"struct.std::_Rb_tree_node_base"*
  %419 = icmp eq %"struct.std::_Rb_tree_node_base"* %416, %418
  store i32 1639403039, i32* %30
  br label %442

; <label>:420:                                    ; preds = %31
  %421 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %422 = call i64 @_ZNKSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE4sizeEv(%"class.std::_Rb_tree.19"* %421) #3
  %423 = icmp ugt i64 %422, 0
  store i32 -1418052624, i32* %30
  br label %442

; <label>:424:                                    ; preds = %31
  %425 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %8
  %426 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %425, i32 0, i32 0
  %427 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %426, i32 0, i32 0
  %428 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %14
  %429 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.70"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEmmEv(%"struct.std::_Rb_tree_iterator.70"* %428) #3
  %430 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %429, i32 0, i32 0
  %431 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %430, align 8
  %432 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %431)
  %433 = load volatile i64**, i64*** %17
  %434 = load i64*, i64** %433, align 8
  %435 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %427, i64* dereferenceable(8) %432, i64* dereferenceable(8) %434)
  store i32 -1065124545, i32* %30
  br label %442

; <label>:436:                                    ; preds = %31
  %437 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %16
  %438 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %437, i32 0, i32 0
  %439 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %438, align 8
  %440 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %439) #3
  %441 = icmp eq %"struct.std::_Rb_tree_node.44"* %440, null
  store i32 1022340838, i32* %30
  br label %442

; <label>:442:                                    ; preds = %436, %424, %420, %398, %388, %377, %371, %365, %362, %341, %313, %300, %294, %281, %269, %258, %252, %246, %239, %236, %209, %181, %175, %162, %150, %139, %133, %121, %118, %100, %85, %82, %42, %34, %33
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node.44"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca %"class.std::_Rb_tree.19"*
  %8 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %9 = alloca %"class.std::_Rb_tree.19"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %13 = alloca i8, align 1
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node.44"* %3, %"struct.std::_Rb_tree_node.44"** %12, align 8
  %14 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %9, align 8
  store %"class.std::_Rb_tree.19"* %14, %"class.std::_Rb_tree.19"** %7
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %6
  %16 = alloca i32
  store i32 -1263144694, i32* %16
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %4, %129
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 -1263144694, label %21
    i32 779350548, label %25
    i32 780026835, label %32
    i32 1280176717, label %59
    i32 -98790837, label %95
    i32 -295582812, label %97
    i32 1044912697, label %120
  ]

; <label>:20:                                     ; preds = %18
  br label %129

; <label>:21:                                     ; preds = %18
  %22 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  %23 = icmp ne %"struct.std::_Rb_tree_node_base"* %22, null
  %24 = select i1 %23, i32 -295582812, i32 779350548
  store i32 %24, i32* %16
  store i1 true, i1* %17
  br label %129

; <label>:25:                                     ; preds = %18
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %27 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %7
  %28 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_M_endEv(%"class.std::_Rb_tree.19"* %27) #3
  %29 = bitcast %"struct.std::_Rb_tree_node.44"* %28 to %"struct.std::_Rb_tree_node_base"*
  %30 = icmp eq %"struct.std::_Rb_tree_node_base"* %26, %29
  %31 = select i1 %30, i32 -295582812, i32 780026835
  store i32 %31, i32* %16
  store i1 true, i1* %17
  br label %129

; <label>:32:                                     ; preds = %18
  %33 = load i32, i32* @x.1183
  %34 = load i32, i32* @y.1184
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1280176717, i32 1044912697
  store i32 %58, i32* %16
  br label %129

; <label>:59:                                     ; preds = %18
  %60 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %7
  %61 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %61, i32 0, i32 0
  %63 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %12, align 8
  %64 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node.44"* %63)
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %66 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %65)
  %67 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %62, i64* dereferenceable(8) %64, i64* dereferenceable(8) %66)
  store i1 %67, i1* %5
  %68 = load i32, i32* @x.1183
  %69 = load i32, i32* @y.1184
  %70 = sub i32 %68, 1887442544
  %71 = sub i32 %70, 1
  %72 = add i32 %71, 1887442544
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 -98790837, i32 1044912697
  store i32 %94, i32* %16
  br label %129

; <label>:95:                                     ; preds = %18
  store i32 -295582812, i32* %16
  %96 = load volatile i1, i1* %5
  store i1 %96, i1* %17
  br label %129

; <label>:97:                                     ; preds = %18
  %98 = load i1, i1* %17
  %99 = zext i1 %98 to i8
  store i8 %99, i8* %13, align 1
  %100 = load i8, i8* %13, align 1
  %101 = trunc i8 %100 to i1
  %102 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %12, align 8
  %103 = bitcast %"struct.std::_Rb_tree_node.44"* %102 to %"struct.std::_Rb_tree_node_base"*
  %104 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %105 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %7
  %106 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %106, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %101, %"struct.std::_Rb_tree_node_base"* %103, %"struct.std::_Rb_tree_node_base"* %104, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %107) #3
  %108 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %7
  %109 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %109, i32 0, i32 2
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, -7785764839210519902
  %113 = add i64 %112, 1
  %114 = sub i64 %113, -7785764839210519902
  %115 = add i64 %111, 1
  store i64 %114, i64* %110, align 8
  %116 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %12, align 8
  %117 = bitcast %"struct.std::_Rb_tree_node.44"* %116 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %8, %"struct.std::_Rb_tree_node_base"* %117) #3
  %118 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %8, i32 0, i32 0
  %119 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %118, align 8
  ret %"struct.std::_Rb_tree_node_base"* %119

; <label>:120:                                    ; preds = %18
  %121 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %7
  %122 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %122, i32 0, i32 0
  %124 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %12, align 8
  %125 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node.44"* %124)
  %126 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %127 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %126)
  %128 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %123, i64* dereferenceable(8) %125, i64* dereferenceable(8) %127)
  store i32 1280176717, i32* %16
  br label %129

; <label>:129:                                    ; preds = %120, %95, %59, %32, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_get_nodeEv(%"class.std::_Rb_tree.19"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.44"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1185
  %6 = load i32, i32* @y.1186
  %7 = add i32 %5, 836647155
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 836647155
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1515502635, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1515502635, label %19
    i32 35036409, label %27
    i32 2080197294, label %58
    i32 2055874177, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 35036409, i32 2055874177
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %28, align 8
  %29 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %28, align 8
  %30 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.19"* %29) #3
  %31 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE8allocateERSB_m(%"class.std::allocator.20"* dereferenceable(1) %30, i64 1)
  store %"struct.std::_Rb_tree_node.44"* %31, %"struct.std::_Rb_tree_node.44"** %2
  %32 = load i32, i32* @x.1185
  %33 = load i32, i32* @y.1186
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 2080197294, i32 2055874177
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %2
  ret %"struct.std::_Rb_tree_node.44"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %61, align 8
  %62 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %61, align 8
  %63 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.19"* %62) #3
  %64 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE8allocateERSB_m(%"class.std::allocator.20"* dereferenceable(1) %63, i64 1)
  store i32 35036409, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESH_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree.19"*, %"struct.std::_Rb_tree_node.44"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::_Rb_tree.19"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.63"*, align 8
  %10 = alloca %"class.std::tuple.60"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %6, align 8
  store %"struct.std::_Rb_tree_node.44"* %1, %"struct.std::_Rb_tree_node.44"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %9, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %10, align 8
  %13 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %7, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node.44"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node.44"*
  %17 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.19"* %13) #3
  %18 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %7, align 8
  %19 = invoke %"struct.std::pair.46"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.44"* %18)
          to label %20 unwind label %70

; <label>:20:                                     ; preds = %5
  %21 = load i32, i32* @x.1187
  %22 = load i32, i32* @y.1188
  %23 = add i32 %21, -543417866
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -543417866
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %203

; <label>:35:                                     ; preds = %20, %203
  %36 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %37 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %36) #3
  %38 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %39 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %38) #3
  %40 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %41 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %40) #3
  %42 = load i32, i32* @x.1187
  %43 = load i32, i32* @y.1188
  %44 = sub i32 %42, 588934175
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 588934175
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %203

; <label>:68:                                     ; preds = %35
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESH_IJEEEEEvRSB_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %17, %"struct.std::pair.46"* %19, %"struct.std::piecewise_construct_t"* dereferenceable(1) %37, %"class.std::tuple.63"* dereferenceable(8) %39, %"class.std::tuple.60"* dereferenceable(1) %41)
          to label %69 unwind label %70

; <label>:69:                                     ; preds = %68
  br label %165

; <label>:70:                                     ; preds = %68, %5
  %71 = load i32, i32* @x.1187
  %72 = load i32, i32* @y.1188
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %210

; <label>:84:                                     ; preds = %70, %210
  %85 = landingpad { i8*, i32 }
          catch i8* null
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %11, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %12, align 4
  %88 = load i32, i32* @x.1187
  %89 = load i32, i32* @y.1188
  %90 = add i32 %88, -871033780
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -871033780
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %210

; <label>:114:                                    ; preds = %84
  br label %115

; <label>:115:                                    ; preds = %114
  %116 = load i8*, i8** %11, align 8
  %117 = call i8* @__cxa_begin_catch(i8* %116) #3
  %118 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %7, align 8
  %119 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree.19"* %13, %"struct.std::_Rb_tree_node.44"* %119) #3
  invoke void @__cxa_rethrow() #14
          to label %202 unwind label %120

; <label>:120:                                    ; preds = %115
  %121 = load i32, i32* @x.1187
  %122 = load i32, i32* @y.1188
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %214

; <label>:134:                                    ; preds = %120, %214
  %135 = landingpad { i8*, i32 }
          cleanup
  %136 = extractvalue { i8*, i32 } %135, 0
  store i8* %136, i8** %11, align 8
  %137 = extractvalue { i8*, i32 } %135, 1
  store i32 %137, i32* %12, align 4
  %138 = load i32, i32* @x.1187
  %139 = load i32, i32* @y.1188
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %214

; <label>:163:                                    ; preds = %134
  invoke void @__cxa_end_catch()
          to label %164 unwind label %171

; <label>:164:                                    ; preds = %163
  br label %166

; <label>:165:                                    ; preds = %69
  ret void

; <label>:166:                                    ; preds = %164
  %167 = load i8*, i8** %11, align 8
  %168 = load i32, i32* %12, align 4
  %169 = insertvalue { i8*, i32 } undef, i8* %167, 0
  %170 = insertvalue { i8*, i32 } %169, i32 %168, 1
  resume { i8*, i32 } %170

; <label>:171:                                    ; preds = %163
  %172 = load i32, i32* @x.1187
  %173 = load i32, i32* @y.1188
  %174 = sub i32 0, 1
  %175 = add i32 %172, %174
  %176 = sub i32 %172, 1
  %177 = mul i32 %172, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %173, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %218

; <label>:185:                                    ; preds = %171, %218
  %186 = landingpad { i8*, i32 }
          catch i8* null
  %187 = extractvalue { i8*, i32 } %186, 0
  call void @__clang_call_terminate(i8* %187) #12
  %188 = load i32, i32* @x.1187
  %189 = load i32, i32* @y.1188
  %190 = sub i32 0, 1
  %191 = add i32 %188, %190
  %192 = sub i32 %188, 1
  %193 = mul i32 %188, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %189, 10
  %197 = and i1 %195, %196
  %198 = xor i1 %195, %196
  %199 = or i1 %197, %198
  %200 = or i1 %195, %196
  br i1 %199, label %201, label %218

; <label>:201:                                    ; preds = %185
  unreachable

; <label>:202:                                    ; preds = %115
  unreachable

; <label>:203:                                    ; preds = %35, %20
  %204 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %205 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %204) #3
  %206 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %207 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %206) #3
  %208 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %209 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %208) #3
  br label %35

; <label>:210:                                    ; preds = %84, %70
  %211 = landingpad { i8*, i32 }
          catch i8* null
  %212 = extractvalue { i8*, i32 } %211, 0
  store i8* %212, i8** %11, align 8
  %213 = extractvalue { i8*, i32 } %211, 1
  store i32 %213, i32* %12, align 4
  br label %84

; <label>:214:                                    ; preds = %134, %120
  %215 = landingpad { i8*, i32 }
          cleanup
  %216 = extractvalue { i8*, i32 } %215, 0
  store i8* %216, i8** %11, align 8
  %217 = extractvalue { i8*, i32 } %215, 1
  store i32 %217, i32* %12, align 4
  br label %134

; <label>:218:                                    ; preds = %185, %171
  %219 = landingpad { i8*, i32 }
          catch i8* null
  %220 = extractvalue { i8*, i32 } %219, 0
  call void @__clang_call_terminate(i8* %220) #12
  br label %185
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.44"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE8allocateERSB_m(%"class.std::allocator.20"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node.44"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node.44"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.44"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -886709334, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -886709334, label %16
    i32 1801962931, label %21
    i32 1366385531, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1801962931, i32 1366385531
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 88
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node.44"*
  ret %"struct.std::_Rb_tree_node.44"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret i64 209622091746699450
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESH_IJEEEEEvRSB_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1), %"struct.std::pair.46"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.1195
  %9 = load i32, i32* @y.1196
  %10 = sub i32 %8, 1555158622
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1555158622
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1253613051, i32* %18
  br label %19

; <label>:19:                                     ; preds = %5, %88
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1253613051, label %22
    i32 -9232467, label %30
    i32 1523323965, label %72
    i32 -577873478, label %73
  ]

; <label>:21:                                     ; preds = %19
  br label %88

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -9232467, i32 -577873478
  store i32 %29, i32* %18
  br label %88

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::allocator.20"*, align 8
  %32 = alloca %"struct.std::pair.46"*, align 8
  %33 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %34 = alloca %"class.std::tuple.63"*, align 8
  %35 = alloca %"class.std::tuple.60"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %31, align 8
  store %"struct.std::pair.46"* %1, %"struct.std::pair.46"** %32, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %33, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %34, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %35, align 8
  %36 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %31, align 8
  %37 = bitcast %"class.std::allocator.20"* %36 to %"class.__gnu_cxx::new_allocator.21"*
  %38 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %32, align 8
  %39 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %33, align 8
  %40 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %39) #3
  %41 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %34, align 8
  %42 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %41) #3
  %43 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %35, align 8
  %44 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %43) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %37, %"struct.std::pair.46"* %38, %"struct.std::piecewise_construct_t"* dereferenceable(1) %40, %"class.std::tuple.63"* dereferenceable(8) %42, %"class.std::tuple.60"* dereferenceable(1) %44)
  %45 = load i32, i32* @x.1195
  %46 = load i32, i32* @y.1196
  %47 = add i32 %45, 1503385389
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1503385389
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1523323965, i32 -577873478
  store i32 %71, i32* %18
  br label %88

; <label>:72:                                     ; preds = %19
  ret void

; <label>:73:                                     ; preds = %19
  %74 = alloca %"class.std::allocator.20"*, align 8
  %75 = alloca %"struct.std::pair.46"*, align 8
  %76 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %77 = alloca %"class.std::tuple.63"*, align 8
  %78 = alloca %"class.std::tuple.60"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %74, align 8
  store %"struct.std::pair.46"* %1, %"struct.std::pair.46"** %75, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %76, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %77, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %78, align 8
  %79 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %74, align 8
  %80 = bitcast %"class.std::allocator.20"* %79 to %"class.__gnu_cxx::new_allocator.21"*
  %81 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %75, align 8
  %82 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %76, align 8
  %83 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %82) #3
  %84 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %77, align 8
  %85 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %84) #3
  %86 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %78, align 8
  %87 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %86) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %80, %"struct.std::pair.46"* %81, %"struct.std::piecewise_construct_t"* dereferenceable(1) %83, %"class.std::tuple.63"* dereferenceable(8) %85, %"class.std::tuple.60"* dereferenceable(1) %87)
  store i32 -9232467, i32* %18
  br label %88

; <label>:88:                                     ; preds = %73, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS2_IS3_xEEEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.std::pair.46"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %7 = alloca %"struct.std::pair.46"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple.63"*, align 8
  %10 = alloca %"class.std::tuple.60"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple.63", align 8
  %13 = alloca %"class.std::tuple.60", align 1
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  store %"struct.std::pair.46"* %1, %"struct.std::pair.46"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple.63"* %3, %"class.std::tuple.63"** %9, align 8
  store %"class.std::tuple.60"* %4, %"class.std::tuple.60"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  %15 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %7, align 8
  %16 = bitcast %"struct.std::pair.46"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair.46"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple.63"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple.63"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple.63"* %12, %"class.std::tuple.63"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.60"*, %"class.std::tuple.60"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.60"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.60"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple.63", %"class.std::tuple.63"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl.64", %"struct.std::_Tuple_impl.64"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base.65", %"struct.std::_Head_base.65"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE(%"struct.std::pair.46"* %17, i64* %27)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE(%"struct.std::pair.46"*, i64*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple.63", align 8
  %5 = alloca %"class.std::tuple.60", align 1
  %6 = alloca %"struct.std::pair.46"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.62", align 1
  %9 = getelementptr inbounds %"class.std::tuple.63", %"class.std::tuple.63"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl.64", %"struct.std::_Tuple_impl.64"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base.65", %"struct.std::_Head_base.65"* %10, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store %"struct.std::pair.46"* %0, %"struct.std::pair.46"** %6, align 8
  %12 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %6, align 8
  call void @_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE(%"struct.std::pair.46"* %12, %"class.std::tuple.63"* dereferenceable(8) %4, %"class.std::tuple.60"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxSt3mapIxxSt4lessIxESaIS_IS0_xEEEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE(%"struct.std::pair.46"*, %"class.std::tuple.63"* dereferenceable(8), %"class.std::tuple.60"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.62", align 1
  %6 = alloca %"struct.std::pair.46"*, align 8
  %7 = alloca %"class.std::tuple.63"*, align 8
  %8 = alloca %"class.std::tuple.60"*, align 8
  store %"struct.std::pair.46"* %0, %"struct.std::pair.46"** %6, align 8
  store %"class.std::tuple.63"* %1, %"class.std::tuple.63"** %7, align 8
  store %"class.std::tuple.60"* %2, %"class.std::tuple.60"** %8, align 8
  %9 = load %"struct.std::pair.46"*, %"struct.std::pair.46"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair.46", %"struct.std::pair.46"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple.63"*, %"class.std::tuple.63"** %7, align 8
  %12 = call dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple.63"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %10, align 8
  %15 = getelementptr inbounds %"struct.std::pair.46", %"struct.std::pair.46"* %9, i32 0, i32 1
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev(%"class.std::map.28"* %15) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.71"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1203
  %6 = load i32, i32* @y.1204
  %7 = sub i32 %5, -57948914
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -57948914
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1719113057, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1719113057, label %19
    i32 2362876, label %39
    i32 1409437535, label %74
    i32 2102306065, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2362876, i32 2102306065
  store i32 %38, i32* %15
  br label %84

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %41 = alloca %"struct.std::_Rb_tree_const_iterator.71"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.71"* %0, %"struct.std::_Rb_tree_const_iterator.71"** %41, align 8
  %42 = load %"struct.std::_Rb_tree_const_iterator.71"*, %"struct.std::_Rb_tree_const_iterator.71"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.71", %"struct.std::_Rb_tree_const_iterator.71"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %40, %"struct.std::_Rb_tree_node_base"* %44) #3
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %40, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %45, align 8
  store %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"** %2
  %47 = load i32, i32* @x.1203
  %48 = load i32, i32* @y.1204
  %49 = sub i32 %47, 170366882
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 170366882
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1409437535, i32 2102306065
  store i32 %73, i32* %15
  br label %84

; <label>:74:                                     ; preds = %16
  %75 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %78 = alloca %"struct.std::_Rb_tree_const_iterator.71"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.71"* %0, %"struct.std::_Rb_tree_const_iterator.71"** %78, align 8
  %79 = load %"struct.std::_Rb_tree_const_iterator.71"*, %"struct.std::_Rb_tree_const_iterator.71"** %78, align 8
  %80 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.71", %"struct.std::_Rb_tree_const_iterator.71"* %79, i32 0, i32 0
  %81 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %80, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %77, %"struct.std::_Rb_tree_node_base"* %81) #3
  %82 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %77, i32 0, i32 0
  %83 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %82, align 8
  store i32 2362876, i32* %15
  br label %84

; <label>:84:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE4sizeEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %2, align 8
  %3 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %4, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Select1st.72", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(56) %"struct.std::pair.46"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEclERKS8_(%"struct.std::_Select1st.72"* %3, %"struct.std::pair.46"* dereferenceable(56) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %2, align 8
  %3 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 3
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree.19"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::_Rb_tree.19"*
  %6 = alloca %"struct.std::pair.55", align 8
  %7 = alloca %"class.std::_Rb_tree.19"*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node.44"*, align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %13 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %14 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %7, align 8
  store i64* %1, i64** %8, align 8
  %15 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %7, align 8
  store %"class.std::_Rb_tree.19"* %15, %"class.std::_Rb_tree.19"** %5
  %16 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %5
  %17 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_M_beginEv(%"class.std::_Rb_tree.19"* %16) #3
  store %"struct.std::_Rb_tree_node.44"* %17, %"struct.std::_Rb_tree_node.44"** %9, align 8
  %18 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %5
  %19 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_M_endEv(%"class.std::_Rb_tree.19"* %18) #3
  store %"struct.std::_Rb_tree_node.44"* %19, %"struct.std::_Rb_tree_node.44"** %10, align 8
  store i8 1, i8* %11, align 1
  %20 = alloca i32
  store i32 620936167, i32* %20
  %21 = alloca %"struct.std::_Rb_tree_node.44"*
  br label %22

; <label>:22:                                     ; preds = %2, %283
  %23 = load i32, i32* %20
  switch i32 %23, label %24 [
    i32 620936167, label %25
    i32 995222552, label %40
    i32 -30181551, label %58
    i32 1603350598, label %61
    i32 132239399, label %74
    i32 -311846276, label %78
    i32 160595476, label %82
    i32 360151956, label %84
    i32 -1687281039, label %112
    i32 1924770413, label %132
    i32 1173242314, label %135
    i32 -1868192655, label %141
    i32 -1029540470, label %168
    i32 -1920716189, label %196
    i32 -1908857196, label %197
    i32 1758551518, label %225
    i32 -532135827, label %254
    i32 248771748, label %255
    i32 -276446421, label %256
    i32 860168224, label %266
    i32 1661804046, label %267
    i32 1485094886, label %269
    i32 1176445453, label %272
    i32 -740685383, label %275
    i32 -1661024656, label %280
    i32 -1576309104, label %281
  ]

; <label>:24:                                     ; preds = %22
  br label %283

; <label>:25:                                     ; preds = %22
  %26 = load i32, i32* @x.1211
  %27 = load i32, i32* @y.1212
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 995222552, i32 1176445453
  store i32 %39, i32* %20
  br label %283

; <label>:40:                                     ; preds = %22
  %41 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %9, align 8
  %42 = icmp ne %"struct.std::_Rb_tree_node.44"* %41, null
  store i1 %42, i1* %4
  %43 = load i32, i32* @x.1211
  %44 = load i32, i32* @y.1212
  %45 = sub i32 %43, -272847203
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -272847203
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -30181551, i32 1176445453
  store i32 %57, i32* %20
  br label %283

; <label>:58:                                     ; preds = %22
  %59 = load volatile i1, i1* %4
  %60 = select i1 %59, i32 1603350598, i32 360151956
  store i32 %60, i32* %20
  br label %283

; <label>:61:                                     ; preds = %22
  %62 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %9, align 8
  store %"struct.std::_Rb_tree_node.44"* %62, %"struct.std::_Rb_tree_node.44"** %10, align 8
  %63 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %5
  %64 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %64, i32 0, i32 0
  %66 = load i64*, i64** %8, align 8
  %67 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %9, align 8
  %68 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node.44"* %67)
  %69 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %65, i64* dereferenceable(8) %66, i64* dereferenceable(8) %68)
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %11, align 1
  %71 = load i8, i8* %11, align 1
  %72 = trunc i8 %71 to i1
  %73 = select i1 %72, i32 132239399, i32 -311846276
  store i32 %73, i32* %20
  br label %283

; <label>:74:                                     ; preds = %22
  %75 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %9, align 8
  %76 = bitcast %"struct.std::_Rb_tree_node.44"* %75 to %"struct.std::_Rb_tree_node_base"*
  %77 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %76) #3
  store i32 160595476, i32* %20
  store %"struct.std::_Rb_tree_node.44"* %77, %"struct.std::_Rb_tree_node.44"** %21
  br label %283

; <label>:78:                                     ; preds = %22
  %79 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %9, align 8
  %80 = bitcast %"struct.std::_Rb_tree_node.44"* %79 to %"struct.std::_Rb_tree_node_base"*
  %81 = call %"struct.std::_Rb_tree_node.44"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %80) #3
  store i32 160595476, i32* %20
  store %"struct.std::_Rb_tree_node.44"* %81, %"struct.std::_Rb_tree_node.44"** %21
  br label %283

; <label>:82:                                     ; preds = %22
  %83 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %21
  store %"struct.std::_Rb_tree_node.44"* %83, %"struct.std::_Rb_tree_node.44"** %9, align 8
  store i32 620936167, i32* %20
  br label %283

; <label>:84:                                     ; preds = %22
  %85 = load i32, i32* @x.1211
  %86 = load i32, i32* @y.1212
  %87 = add i32 %85, 2038090370
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, 2038090370
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 -1687281039, i32 -740685383
  store i32 %111, i32* %20
  br label %283

; <label>:112:                                    ; preds = %22
  %113 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %10, align 8
  %114 = bitcast %"struct.std::_Rb_tree_node.44"* %113 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %12, %"struct.std::_Rb_tree_node_base"* %114) #3
  %115 = load i8, i8* %11, align 1
  %116 = trunc i8 %115 to i1
  store i1 %116, i1* %3
  %117 = load i32, i32* @x.1211
  %118 = load i32, i32* @y.1212
  %119 = sub i32 %117, 111369657
  %120 = sub i32 %119, 1
  %121 = add i32 %120, 111369657
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 1924770413, i32 -740685383
  store i32 %131, i32* %20
  br label %283

; <label>:132:                                    ; preds = %22
  %133 = load volatile i1, i1* %3
  %134 = select i1 %133, i32 1173242314, i32 -276446421
  store i32 %134, i32* %20
  br label %283

; <label>:135:                                    ; preds = %22
  %136 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %5
  %137 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE5beginEv(%"class.std::_Rb_tree.19"* %136) #3
  %138 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %137, %"struct.std::_Rb_tree_node_base"** %138, align 8
  %139 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEeqERKS9_(%"struct.std::_Rb_tree_iterator.70"* %12, %"struct.std::_Rb_tree_iterator.70"* dereferenceable(8) %13) #3
  %140 = select i1 %139, i32 -1868192655, i32 -1908857196
  store i32 %140, i32* %20
  br label %283

; <label>:141:                                    ; preds = %22
  %142 = load i32, i32* @x.1211
  %143 = load i32, i32* @y.1212
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  %167 = select i1 %165, i32 -1029540470, i32 -1661024656
  store i32 %167, i32* %20
  br label %283

; <label>:168:                                    ; preds = %22
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3mapIxxSt4lessIxESaIS_IS5_xEEEEESF_vEEOT_OT0_(%"struct.std::pair.55"* %6, %"struct.std::_Rb_tree_node.44"** dereferenceable(8) %9, %"struct.std::_Rb_tree_node.44"** dereferenceable(8) %10)
  %169 = load i32, i32* @x.1211
  %170 = load i32, i32* @y.1212
  %171 = sub i32 %169, -525524276
  %172 = sub i32 %171, 1
  %173 = add i32 %172, -525524276
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 false, true
  %182 = and i1 %179, false
  %183 = and i1 %177, %181
  %184 = and i1 %180, false
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 false, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 -1920716189, i32 -1661024656
  store i32 %195, i32* %20
  br label %283

; <label>:196:                                    ; preds = %22
  store i32 1485094886, i32* %20
  br label %283

; <label>:197:                                    ; preds = %22
  %198 = load i32, i32* @x.1211
  %199 = load i32, i32* @y.1212
  %200 = add i32 %198, -135146393
  %201 = sub i32 %200, 1
  %202 = sub i32 %201, -135146393
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = xor i1 %206, true
  %209 = xor i1 %207, true
  %210 = xor i1 true, true
  %211 = and i1 %208, true
  %212 = and i1 %206, %210
  %213 = and i1 %209, true
  %214 = and i1 %207, %210
  %215 = or i1 %211, %212
  %216 = or i1 %213, %214
  %217 = xor i1 %215, %216
  %218 = or i1 %208, %209
  %219 = xor i1 %218, true
  %220 = or i1 true, %210
  %221 = and i1 %219, %220
  %222 = or i1 %217, %221
  %223 = or i1 %206, %207
  %224 = select i1 %222, i32 1758551518, i32 -1576309104
  store i32 %224, i32* %20
  br label %283

; <label>:225:                                    ; preds = %22
  %226 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.70"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEmmEv(%"struct.std::_Rb_tree_iterator.70"* %12) #3
  %227 = load i32, i32* @x.1211
  %228 = load i32, i32* @y.1212
  %229 = sub i32 %227, 312853286
  %230 = sub i32 %229, 1
  %231 = add i32 %230, 312853286
  %232 = sub i32 %227, 1
  %233 = mul i32 %227, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %228, 10
  %237 = xor i1 %235, true
  %238 = xor i1 %236, true
  %239 = xor i1 false, true
  %240 = and i1 %237, false
  %241 = and i1 %235, %239
  %242 = and i1 %238, false
  %243 = and i1 %236, %239
  %244 = or i1 %240, %241
  %245 = or i1 %242, %243
  %246 = xor i1 %244, %245
  %247 = or i1 %237, %238
  %248 = xor i1 %247, true
  %249 = or i1 false, %239
  %250 = and i1 %248, %249
  %251 = or i1 %246, %250
  %252 = or i1 %235, %236
  %253 = select i1 %251, i32 -532135827, i32 -1576309104
  store i32 %253, i32* %20
  br label %283

; <label>:254:                                    ; preds = %22
  store i32 248771748, i32* %20
  br label %283

; <label>:255:                                    ; preds = %22
  store i32 -276446421, i32* %20
  br label %283

; <label>:256:                                    ; preds = %22
  %257 = load volatile %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %5
  %258 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %257, i32 0, i32 0
  %259 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %12, i32 0, i32 0
  %261 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %260, align 8
  %262 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %261)
  %263 = load i64*, i64** %8, align 8
  %264 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %259, i64* dereferenceable(8) %262, i64* dereferenceable(8) %263)
  %265 = select i1 %264, i32 860168224, i32 1661804046
  store i32 %265, i32* %20
  br label %283

; <label>:266:                                    ; preds = %22
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3mapIxxSt4lessIxESaIS_IS5_xEEEEESF_vEEOT_OT0_(%"struct.std::pair.55"* %6, %"struct.std::_Rb_tree_node.44"** dereferenceable(8) %9, %"struct.std::_Rb_tree_node.44"** dereferenceable(8) %10)
  store i32 1485094886, i32* %20
  br label %283

; <label>:267:                                    ; preds = %22
  %268 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %14, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.55"* %6, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %268, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %14)
  store i32 1485094886, i32* %20
  br label %283

; <label>:269:                                    ; preds = %22
  %270 = bitcast %"struct.std::pair.55"* %6 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %271 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %270, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %271

; <label>:272:                                    ; preds = %22
  %273 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %9, align 8
  %274 = icmp ne %"struct.std::_Rb_tree_node.44"* %273, null
  store i32 995222552, i32* %20
  br label %283

; <label>:275:                                    ; preds = %22
  %276 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %10, align 8
  %277 = bitcast %"struct.std::_Rb_tree_node.44"* %276 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %12, %"struct.std::_Rb_tree_node_base"* %277) #3
  %278 = load i8, i8* %11, align 1
  %279 = trunc i8 %278 to i1
  store i32 -1687281039, i32* %20
  br label %283

; <label>:280:                                    ; preds = %22
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3mapIxxSt4lessIxESaIS_IS5_xEEEEESF_vEEOT_OT0_(%"struct.std::pair.55"* %6, %"struct.std::_Rb_tree_node.44"** dereferenceable(8) %9, %"struct.std::_Rb_tree_node.44"** dereferenceable(8) %10)
  store i32 -1029540470, i32* %20
  br label %283

; <label>:281:                                    ; preds = %22
  %282 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.70"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEmmEv(%"struct.std::_Rb_tree_iterator.70"* %12) #3
  store i32 1758551518, i32* %20
  br label %283

; <label>:283:                                    ; preds = %281, %280, %275, %272, %267, %266, %256, %255, %254, %225, %197, %196, %168, %141, %135, %132, %112, %84, %82, %78, %74, %61, %58, %40, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE11_M_leftmostEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %2, align 8
  %3 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 2
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.70"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEmmEv(%"struct.std::_Rb_tree_iterator.70"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %0, %"struct.std::_Rb_tree_iterator.70"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #13
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator.70"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.70"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEppEv(%"struct.std::_Rb_tree_iterator.70"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.70"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1217
  %6 = load i32, i32* @y.1218
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -75332220, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %83
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -75332220, label %18
    i32 858004398, label %38
    i32 -383067228, label %74
    i32 882152642, label %76
  ]

; <label>:17:                                     ; preds = %15
  br label %83

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 858004398, i32 882152642
  store i32 %37, i32* %14
  br label %83

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %0, %"struct.std::_Rb_tree_iterator.70"** %39, align 8
  %40 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %39, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %40, %"struct.std::_Rb_tree_iterator.70"** %2
  %41 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %2
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %41, i32 0, i32 0
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %43) #13
  %45 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %2
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %45, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %46, align 8
  %47 = load i32, i32* @x.1217
  %48 = load i32, i32* @y.1218
  %49 = sub i32 %47, -2136581682
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -2136581682
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -383067228, i32 882152642
  store i32 %73, i32* %14
  br label %83

; <label>:74:                                     ; preds = %15
  %75 = load volatile %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %2
  ret %"struct.std::_Rb_tree_iterator.70"* %75

; <label>:76:                                     ; preds = %15
  %77 = alloca %"struct.std::_Rb_tree_iterator.70"*, align 8
  store %"struct.std::_Rb_tree_iterator.70"* %0, %"struct.std::_Rb_tree_iterator.70"** %77, align 8
  %78 = load %"struct.std::_Rb_tree_iterator.70"*, %"struct.std::_Rb_tree_iterator.70"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %78, i32 0, i32 0
  %80 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %79, align 8
  %81 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %80) #13
  %82 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %78, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %81, %"struct.std::_Rb_tree_node_base"** %82, align 8
  store i32 858004398, i32* %14
  br label %83

; <label>:83:                                     ; preds = %76, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"struct.std::pair.46"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node.44"*
  %5 = call %"struct.std::pair.46"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.44"* %4)
  ret %"struct.std::pair.46"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEESt10_Select1stIS8_ES4_SaIS8_EE5beginEv(%"class.std::_Rb_tree.19"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.70", align 8
  %3 = alloca %"class.std::_Rb_tree.19"*, align 8
  store %"class.std::_Rb_tree.19"* %0, %"class.std::_Rb_tree.19"** %3, align 8
  %4 = load %"class.std::_Rb_tree.19"*, %"class.std::_Rb_tree.19"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.19", %"class.std::_Rb_tree.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > >, std::_Select1st<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3mapIxxSt4lessIxESaIS0_IS1_xEEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.70"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.70", %"struct.std::_Rb_tree_iterator.70"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3mapIxxSt4lessIxESaIS_IS5_xEEEEESF_vEEOT_OT0_(%"struct.std::pair.55"*, %"struct.std::_Rb_tree_node.44"** dereferenceable(8), %"struct.std::_Rb_tree_node.44"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1223
  %7 = load i32, i32* @y.1224
  %8 = sub i32 %6, -628090323
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -628090323
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 941904629, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 941904629, label %20
    i32 -876384293, label %28
    i32 -1652805869, label %57
    i32 1121018866, label %58
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -876384293, i32 1121018866
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair.55"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node.44"**, align 8
  %31 = alloca %"struct.std::_Rb_tree_node.44"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %29, align 8
  store %"struct.std::_Rb_tree_node.44"** %1, %"struct.std::_Rb_tree_node.44"*** %30, align 8
  store %"struct.std::_Rb_tree_node.44"** %2, %"struct.std::_Rb_tree_node.44"*** %31, align 8
  %32 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %32, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %30, align 8
  %35 = call dereferenceable(8) %"struct.std::_Rb_tree_node.44"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEOT_RNSt16remove_referenceISD_E4typeE(%"struct.std::_Rb_tree_node.44"** dereferenceable(8) %34) #3
  %36 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %35, align 8
  %37 = bitcast %"struct.std::_Rb_tree_node.44"* %36 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %37, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %38 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %32, i32 0, i32 1
  %39 = load %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %31, align 8
  %40 = call dereferenceable(8) %"struct.std::_Rb_tree_node.44"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEOT_RNSt16remove_referenceISD_E4typeE(%"struct.std::_Rb_tree_node.44"** dereferenceable(8) %39) #3
  %41 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %40, align 8
  %42 = bitcast %"struct.std::_Rb_tree_node.44"* %41 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %42, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %43 = load i32, i32* @x.1223
  %44 = load i32, i32* @y.1224
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1652805869, i32 1121018866
  store i32 %56, i32* %16
  br label %73

; <label>:57:                                     ; preds = %17
  ret void

; <label>:58:                                     ; preds = %17
  %59 = alloca %"struct.std::pair.55"*, align 8
  %60 = alloca %"struct.std::_Rb_tree_node.44"**, align 8
  %61 = alloca %"struct.std::_Rb_tree_node.44"**, align 8
  store %"struct.std::pair.55"* %0, %"struct.std::pair.55"** %59, align 8
  store %"struct.std::_Rb_tree_node.44"** %1, %"struct.std::_Rb_tree_node.44"*** %60, align 8
  store %"struct.std::_Rb_tree_node.44"** %2, %"struct.std::_Rb_tree_node.44"*** %61, align 8
  %62 = load %"struct.std::pair.55"*, %"struct.std::pair.55"** %59, align 8
  %63 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %62, i32 0, i32 0
  %64 = load %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %60, align 8
  %65 = call dereferenceable(8) %"struct.std::_Rb_tree_node.44"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEOT_RNSt16remove_referenceISD_E4typeE(%"struct.std::_Rb_tree_node.44"** dereferenceable(8) %64) #3
  %66 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %65, align 8
  %67 = bitcast %"struct.std::_Rb_tree_node.44"* %66 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %67, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %68 = getelementptr inbounds %"struct.std::pair.55", %"struct.std::pair.55"* %62, i32 0, i32 1
  %69 = load %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %61, align 8
  %70 = call dereferenceable(8) %"struct.std::_Rb_tree_node.44"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEOT_RNSt16remove_referenceISD_E4typeE(%"struct.std::_Rb_tree_node.44"** dereferenceable(8) %69) #3
  %71 = load %"struct.std::_Rb_tree_node.44"*, %"struct.std::_Rb_tree_node.44"** %70, align 8
  %72 = bitcast %"struct.std::_Rb_tree_node.44"* %71 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %72, %"struct.std::_Rb_tree_node_base"** %68, align 8
  store i32 -876384293, i32* %16
  br label %73

; <label>:73:                                     ; preds = %58, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node.44"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3mapIxxSt4lessIxESaIS1_IS2_xEEEEEEOT_RNSt16remove_referenceISD_E4typeE(%"struct.std::_Rb_tree_node.44"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node.44"**, align 8
  store %"struct.std::_Rb_tree_node.44"** %0, %"struct.std::_Rb_tree_node.44"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.44"**, %"struct.std::_Rb_tree_node.44"*** %2, align 8
  ret %"struct.std::_Rb_tree_node.44"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %"class.std::_Rb_tree.29"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEaSERKS8_(%"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.1227
  %4 = load i32, i32* @y.1228
  %5 = sub i32 %3, 1304817489
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1304817489
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %191

; <label>:29:                                     ; preds = %2, %191
  %30 = alloca %"class.std::_Rb_tree.29"*, align 8
  %31 = alloca %"class.std::_Rb_tree.29"*, align 8
  %32 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %30, align 8
  store %"class.std::_Rb_tree.29"* %1, %"class.std::_Rb_tree.29"** %31, align 8
  %35 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %30, align 8
  %36 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %31, align 8
  %37 = icmp ne %"class.std::_Rb_tree.29"* %35, %36
  %38 = load i32, i32* @x.1227
  %39 = load i32, i32* @y.1228
  %40 = sub i32 %38, 51539942
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 51539942
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %191

; <label>:64:                                     ; preds = %29
  br i1 %37, label %65, label %131

; <label>:65:                                     ; preds = %64
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeC2ERS8_(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %32, %"class.std::_Rb_tree.29"* dereferenceable(48) %35)
  %66 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %35, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %66)
          to label %67 unwind label %126

; <label>:67:                                     ; preds = %65
  %68 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %31, align 8
  %69 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %35, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %71, i32 0, i32 0
  %73 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %31, align 8
  %74 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"* %73) #3
  %75 = icmp ne %"struct.std::_Rb_tree_node_base"* %74, null
  br i1 %75, label %76, label %130

; <label>:76:                                     ; preds = %67
  %77 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %31, align 8
  %78 = call %"struct.std::_Rb_tree_node.47"* @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.29"* %77) #3
  %79 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.29"* %35) #3
  %80 = invoke %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_SD_RT_(%"class.std::_Rb_tree.29"* %35, %"struct.std::_Rb_tree_node.47"* %78, %"struct.std::_Rb_tree_node.47"* %79, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* dereferenceable(24) %32)
          to label %81 unwind label %126

; <label>:81:                                     ; preds = %76
  %82 = load i32, i32* @x.1227
  %83 = load i32, i32* @y.1228
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %200

; <label>:95:                                     ; preds = %81, %200
  %96 = bitcast %"struct.std::_Rb_tree_node.47"* %80 to %"struct.std::_Rb_tree_node_base"*
  %97 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"* %35) #3
  store %"struct.std::_Rb_tree_node_base"* %96, %"struct.std::_Rb_tree_node_base"** %97, align 8
  %98 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"* %35) #3
  %99 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %98, align 8
  %100 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %99) #3
  %101 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree.29"* %35) #3
  store %"struct.std::_Rb_tree_node_base"* %100, %"struct.std::_Rb_tree_node_base"** %101, align 8
  %102 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"* %35) #3
  %103 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %102, align 8
  %104 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %103) #3
  %105 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree.29"* %35) #3
  store %"struct.std::_Rb_tree_node_base"* %104, %"struct.std::_Rb_tree_node_base"** %105, align 8
  %106 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %31, align 8
  %107 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %107, i32 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %35, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %110, i32 0, i32 2
  store i64 %109, i64* %111, align 8
  %112 = load i32, i32* @x.1227
  %113 = load i32, i32* @y.1228
  %114 = sub i32 0, 1
  %115 = add i32 %112, %114
  %116 = sub i32 %112, 1
  %117 = mul i32 %112, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %113, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  br i1 %123, label %125, label %200

; <label>:125:                                    ; preds = %95
  br label %130

; <label>:126:                                    ; preds = %76, %65
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %33, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %34, align 4
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %32) #3
  br label %186

; <label>:130:                                    ; preds = %125, %67
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %32) #3
  br label %131

; <label>:131:                                    ; preds = %130, %64
  %132 = load i32, i32* @x.1227
  %133 = load i32, i32* @y.1228
  %134 = add i32 %132, -2055926868
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, -2055926868
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %217

; <label>:158:                                    ; preds = %131, %217
  %159 = load i32, i32* @x.1227
  %160 = load i32, i32* @y.1228
  %161 = add i32 %159, -2118890903
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, -2118890903
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 false, true
  %172 = and i1 %169, false
  %173 = and i1 %167, %171
  %174 = and i1 %170, false
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 false, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  br i1 %183, label %185, label %217

; <label>:185:                                    ; preds = %158
  ret %"class.std::_Rb_tree.29"* %35

; <label>:186:                                    ; preds = %126
  %187 = load i8*, i8** %33, align 8
  %188 = load i32, i32* %34, align 4
  %189 = insertvalue { i8*, i32 } undef, i8* %187, 0
  %190 = insertvalue { i8*, i32 } %189, i32 %188, 1
  resume { i8*, i32 } %190

; <label>:191:                                    ; preds = %29, %2
  %192 = alloca %"class.std::_Rb_tree.29"*, align 8
  %193 = alloca %"class.std::_Rb_tree.29"*, align 8
  %194 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", align 8
  %195 = alloca i8*
  %196 = alloca i32
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %192, align 8
  store %"class.std::_Rb_tree.29"* %1, %"class.std::_Rb_tree.29"** %193, align 8
  %197 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %192, align 8
  %198 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %193, align 8
  %199 = icmp ne %"class.std::_Rb_tree.29"* %197, %198
  br label %29

; <label>:200:                                    ; preds = %95, %81
  %201 = bitcast %"struct.std::_Rb_tree_node.47"* %80 to %"struct.std::_Rb_tree_node_base"*
  %202 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"* %35) #3
  store %"struct.std::_Rb_tree_node_base"* %201, %"struct.std::_Rb_tree_node_base"** %202, align 8
  %203 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"* %35) #3
  %204 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %203, align 8
  %205 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %204) #3
  %206 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree.29"* %35) #3
  store %"struct.std::_Rb_tree_node_base"* %205, %"struct.std::_Rb_tree_node_base"** %206, align 8
  %207 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"* %35) #3
  %208 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %207, align 8
  %209 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %208) #3
  %210 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree.29"* %35) #3
  store %"struct.std::_Rb_tree_node_base"* %209, %"struct.std::_Rb_tree_node_base"** %210, align 8
  %211 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %31, align 8
  %212 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %211, i32 0, i32 0
  %213 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %212, i32 0, i32 2
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %35, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %215, i32 0, i32 2
  store i64 %214, i64* %216, align 8
  br label %95

; <label>:217:                                    ; preds = %158, %131
  br label %158
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeC2ERS8_(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"class.std::_Rb_tree.29"* dereferenceable(48)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*
  %5 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, align 8
  %6 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5, align 8
  store %"class.std::_Rb_tree.29"* %1, %"class.std::_Rb_tree.29"** %6, align 8
  %7 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %7, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %8 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %8, i32 0, i32 0
  %10 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6, align 8
  %11 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"* %10) #3
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %13 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %14 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %13, i32 0, i32 1
  %15 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6, align 8
  %16 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree.29"* %15) #3
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %18 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %19 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %18, i32 0, i32 2
  %20 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %6, align 8
  store %"class.std::_Rb_tree.29"* %20, %"class.std::_Rb_tree.29"** %19, align 8
  %21 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %22 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %21, i32 0, i32 0
  %23 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %22, align 8
  store %"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"** %3
  %24 = alloca i32
  store i32 -231477952, i32* %24
  br label %25

; <label>:25:                                     ; preds = %2, %198
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 -231477952, label %28
    i32 -429499542, label %32
    i32 -1611753983, label %44
    i32 -1190437735, label %59
    i32 844085627, label %94
    i32 1608073752, label %95
    i32 -690770590, label %96
    i32 332937092, label %124
    i32 547229568, label %141
    i32 -769256545, label %142
    i32 1980738515, label %158
    i32 947358953, label %185
    i32 75692634, label %186
    i32 -1152967945, label %194
    i32 1352259762, label %197
  ]

; <label>:27:                                     ; preds = %25
  br label %198

; <label>:28:                                     ; preds = %25
  %29 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  %30 = icmp ne %"struct.std::_Rb_tree_node_base"* %29, null
  %31 = select i1 %30, i32 -429499542, i32 -690770590
  store i32 %31, i32* %24
  br label %198

; <label>:32:                                     ; preds = %25
  %33 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %35, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %37 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %38 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %37, i32 0, i32 1
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %39, i32 0, i32 2
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = icmp ne %"struct.std::_Rb_tree_node_base"* %41, null
  %43 = select i1 %42, i32 -1611753983, i32 1608073752
  store i32 %43, i32* %24
  br label %198

; <label>:44:                                     ; preds = %25
  %45 = load i32, i32* @x.1229
  %46 = load i32, i32* @y.1230
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1190437735, i32 75692634
  store i32 %58, i32* %24
  br label %198

; <label>:59:                                     ; preds = %25
  %60 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %61 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %60, i32 0, i32 1
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %62, i32 0, i32 2
  %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %65 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %65, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %64, %"struct.std::_Rb_tree_node_base"** %66, align 8
  %67 = load i32, i32* @x.1229
  %68 = load i32, i32* @y.1230
  %69 = add i32 %67, 1246233457
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 1246233457
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 844085627, i32 75692634
  store i32 %93, i32* %24
  br label %198

; <label>:94:                                     ; preds = %25
  store i32 1608073752, i32* %24
  br label %198

; <label>:95:                                     ; preds = %25
  store i32 -769256545, i32* %24
  br label %198

; <label>:96:                                     ; preds = %25
  %97 = load i32, i32* @x.1229
  %98 = load i32, i32* @y.1230
  %99 = add i32 %97, 1504291952
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 1504291952
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 332937092, i32 -1152967945
  store i32 %123, i32* %24
  br label %198

; <label>:124:                                    ; preds = %25
  %125 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %126 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %125, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %126, align 8
  %127 = load i32, i32* @x.1229
  %128 = load i32, i32* @y.1230
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  %140 = select i1 %138, i32 547229568, i32 -1152967945
  store i32 %140, i32* %24
  br label %198

; <label>:141:                                    ; preds = %25
  store i32 -769256545, i32* %24
  br label %198

; <label>:142:                                    ; preds = %25
  %143 = load i32, i32* @x.1229
  %144 = load i32, i32* @y.1230
  %145 = add i32 %143, -765917838
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, -765917838
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  %157 = select i1 %155, i32 1980738515, i32 1352259762
  store i32 %157, i32* %24
  br label %198

; <label>:158:                                    ; preds = %25
  %159 = load i32, i32* @x.1229
  %160 = load i32, i32* @y.1230
  %161 = sub i32 0, 1
  %162 = add i32 %159, %161
  %163 = sub i32 %159, 1
  %164 = mul i32 %159, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %160, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 false, true
  %171 = and i1 %168, false
  %172 = and i1 %166, %170
  %173 = and i1 %169, false
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 false, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  %184 = select i1 %182, i32 947358953, i32 1352259762
  store i32 %184, i32* %24
  br label %198

; <label>:185:                                    ; preds = %25
  ret void

; <label>:186:                                    ; preds = %25
  %187 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %188 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %187, i32 0, i32 1
  %189 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %188, align 8
  %190 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %189, i32 0, i32 2
  %191 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %190, align 8
  %192 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %193 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %192, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %191, %"struct.std::_Rb_tree_node_base"** %193, align 8
  store i32 -1190437735, i32* %24
  br label %198

; <label>:194:                                    ; preds = %25
  %195 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %196 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %195, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %196, align 8
  store i32 332937092, i32* %24
  br label %198

; <label>:197:                                    ; preds = %25
  store i32 1980738515, i32* %24
  br label %198

; <label>:198:                                    ; preds = %197, %194, %186, %158, %142, %141, %124, %96, %95, %94, %59, %44, %32, %28, %27
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1231
  %5 = load i32, i32* @y.1232
  %6 = sub i32 %4, 1767946091
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1767946091
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -97949090, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -97949090, label %18
    i32 -1346188510, label %26
    i32 1418002682, label %53
    i32 597897161, label %54
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1346188510, i32 597897161
  store i32 %25, i32* %14
  br label %66

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %27, align 8
  %28 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %28, i32 0, i32 1
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %29, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %28, i32 0, i32 1
  %32 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %28, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %32, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %31, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %28, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %28, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %35, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %34, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %37 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %28, i32 0, i32 2
  store i64 0, i64* %37, align 8
  %38 = load i32, i32* @x.1231
  %39 = load i32, i32* @y.1232
  %40 = add i32 %38, -1068840739
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1068840739
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1418002682, i32 597897161
  store i32 %52, i32* %14
  br label %66

; <label>:53:                                     ; preds = %15
  ret void

; <label>:54:                                     ; preds = %15
  %55 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %55, align 8
  %56 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %55, align 8
  %57 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %56, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %57, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %58, align 8
  %59 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %56, i32 0, i32 1
  %60 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %56, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %60, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %59, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %62 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %56, i32 0, i32 1
  %63 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %56, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %63, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %62, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %56, i32 0, i32 2
  store i64 0, i64* %65, align 8
  store i32 -1346188510, i32* %14
  br label %66

; <label>:66:                                     ; preds = %54, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1233
  %6 = load i32, i32* @y.1234
  %7 = add i32 %5, 1066399016
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1066399016
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1788652185, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1788652185, label %19
    i32 1299156674, label %39
    i32 1022566125, label %61
    i32 39298221, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1299156674, i32 39298221
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %40, align 8
  %41 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 1
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %2
  %46 = load i32, i32* @x.1233
  %47 = load i32, i32* @y.1234
  %48 = sub i32 %46, 201123533
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 201123533
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1022566125, i32 39298221
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %64, align 8
  %65 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %64, align 8
  %66 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %66, i32 0, i32 1
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %67, i32 0, i32 1
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  store i32 1299156674, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_SD_RT_(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::_Rb_tree.29"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %8 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %5, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %6, align 8
  store %"struct.std::_Rb_tree_node.47"* %2, %"struct.std::_Rb_tree_node.47"** %7, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %3, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %8, align 8
  %13 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %5, align 8
  %14 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %15 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %8, align 8
  %16 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_M_clone_nodeINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_RT_(%"class.std::_Rb_tree.29"* %13, %"struct.std::_Rb_tree_node.47"* %14, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* dereferenceable(24) %15)
  store %"struct.std::_Rb_tree_node.47"* %16, %"struct.std::_Rb_tree_node.47"** %9, align 8
  %17 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node.47"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %9, align 8
  %20 = bitcast %"struct.std::_Rb_tree_node.47"* %19 to %"struct.std::_Rb_tree_node_base"*
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %20, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %22 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %23 = bitcast %"struct.std::_Rb_tree_node.47"* %22 to %"struct.std::_Rb_tree_node_base"*
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %23, i32 0, i32 3
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %26 = icmp ne %"struct.std::_Rb_tree_node_base"* %25, null
  br i1 %26, label %27, label %131

; <label>:27:                                     ; preds = %4
  %28 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %29 = bitcast %"struct.std::_Rb_tree_node.47"* %28 to %"struct.std::_Rb_tree_node_base"*
  %30 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %29) #3
  %31 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %9, align 8
  %32 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %8, align 8
  %33 = invoke %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_SD_RT_(%"class.std::_Rb_tree.29"* %13, %"struct.std::_Rb_tree_node.47"* %30, %"struct.std::_Rb_tree_node.47"* %31, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* dereferenceable(24) %32)
          to label %34 unwind label %39

; <label>:34:                                     ; preds = %27
  %35 = bitcast %"struct.std::_Rb_tree_node.47"* %33 to %"struct.std::_Rb_tree_node_base"*
  %36 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %9, align 8
  %37 = bitcast %"struct.std::_Rb_tree_node.47"* %36 to %"struct.std::_Rb_tree_node_base"*
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %37, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %38, align 8
  br label %131

; <label>:39:                                     ; preds = %211, %193, %27
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %10, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %11, align 4
  br label %43

; <label>:43:                                     ; preds = %39
  %44 = load i32, i32* @x.1235
  %45 = load i32, i32* @y.1236
  %46 = sub i32 %44, 1929067737
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1929067737
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %423

; <label>:70:                                     ; preds = %43, %423
  %71 = load i8*, i8** %10, align 8
  %72 = call i8* @__cxa_begin_catch(i8* %71) #3
  %73 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %9, align 8
  %74 = load i32, i32* @x.1235
  %75 = load i32, i32* @y.1236
  %76 = add i32 %74, 209850357
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 209850357
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %423

; <label>:88:                                     ; preds = %70
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %13, %"struct.std::_Rb_tree_node.47"* %73)
          to label %89 unwind label %269

; <label>:89:                                     ; preds = %88
  %90 = load i32, i32* @x.1235
  %91 = load i32, i32* @y.1236
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %427

; <label>:115:                                    ; preds = %89, %427
  %116 = load i32, i32* @x.1235
  %117 = load i32, i32* @y.1236
  %118 = sub i32 %116, -1320086687
  %119 = sub i32 %118, 1
  %120 = add i32 %119, -1320086687
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %427

; <label>:130:                                    ; preds = %115
  invoke void @__cxa_rethrow() #14
          to label %422 unwind label %269

; <label>:131:                                    ; preds = %34, %4
  %132 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %9, align 8
  store %"struct.std::_Rb_tree_node.47"* %132, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %133 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %134 = bitcast %"struct.std::_Rb_tree_node.47"* %133 to %"struct.std::_Rb_tree_node_base"*
  %135 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %134) #3
  store %"struct.std::_Rb_tree_node.47"* %135, %"struct.std::_Rb_tree_node.47"** %6, align 8
  br label %136

; <label>:136:                                    ; preds = %263, %131
  %137 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %138 = icmp ne %"struct.std::_Rb_tree_node.47"* %137, null
  br i1 %138, label %139, label %268

; <label>:139:                                    ; preds = %136
  %140 = load i32, i32* @x.1235
  %141 = load i32, i32* @y.1236
  %142 = sub i32 0, 1
  %143 = add i32 %140, %142
  %144 = sub i32 %140, 1
  %145 = mul i32 %140, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %141, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 false, true
  %152 = and i1 %149, false
  %153 = and i1 %147, %151
  %154 = and i1 %150, false
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 false, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  br i1 %163, label %165, label %428

; <label>:165:                                    ; preds = %139, %428
  %166 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %167 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %8, align 8
  %168 = load i32, i32* @x.1235
  %169 = load i32, i32* @y.1236
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 true, true
  %180 = and i1 %177, true
  %181 = and i1 %175, %179
  %182 = and i1 %178, true
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 true, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  br i1 %191, label %193, label %428

; <label>:193:                                    ; preds = %165
  %194 = invoke %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_M_clone_nodeINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_RT_(%"class.std::_Rb_tree.29"* %13, %"struct.std::_Rb_tree_node.47"* %166, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* dereferenceable(24) %167)
          to label %195 unwind label %39

; <label>:195:                                    ; preds = %193
  store %"struct.std::_Rb_tree_node.47"* %194, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %196 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %197 = bitcast %"struct.std::_Rb_tree_node.47"* %196 to %"struct.std::_Rb_tree_node_base"*
  %198 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %199 = bitcast %"struct.std::_Rb_tree_node.47"* %198 to %"struct.std::_Rb_tree_node_base"*
  %200 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %199, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %197, %"struct.std::_Rb_tree_node_base"** %200, align 8
  %201 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %202 = bitcast %"struct.std::_Rb_tree_node.47"* %201 to %"struct.std::_Rb_tree_node_base"*
  %203 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %204 = bitcast %"struct.std::_Rb_tree_node.47"* %203 to %"struct.std::_Rb_tree_node_base"*
  %205 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %204, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %202, %"struct.std::_Rb_tree_node_base"** %205, align 8
  %206 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %207 = bitcast %"struct.std::_Rb_tree_node.47"* %206 to %"struct.std::_Rb_tree_node_base"*
  %208 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %207, i32 0, i32 3
  %209 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %208, align 8
  %210 = icmp ne %"struct.std::_Rb_tree_node_base"* %209, null
  br i1 %210, label %211, label %263

; <label>:211:                                    ; preds = %195
  %212 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %213 = bitcast %"struct.std::_Rb_tree_node.47"* %212 to %"struct.std::_Rb_tree_node_base"*
  %214 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %213) #3
  %215 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %216 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %8, align 8
  %217 = invoke %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_SD_RT_(%"class.std::_Rb_tree.29"* %13, %"struct.std::_Rb_tree_node.47"* %214, %"struct.std::_Rb_tree_node.47"* %215, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* dereferenceable(24) %216)
          to label %218 unwind label %39

; <label>:218:                                    ; preds = %211
  %219 = load i32, i32* @x.1235
  %220 = load i32, i32* @y.1236
  %221 = sub i32 0, 1
  %222 = add i32 %219, %221
  %223 = sub i32 %219, 1
  %224 = mul i32 %219, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %220, 10
  %228 = and i1 %226, %227
  %229 = xor i1 %226, %227
  %230 = or i1 %228, %229
  %231 = or i1 %226, %227
  br i1 %230, label %232, label %431

; <label>:232:                                    ; preds = %218, %431
  %233 = bitcast %"struct.std::_Rb_tree_node.47"* %217 to %"struct.std::_Rb_tree_node_base"*
  %234 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %235 = bitcast %"struct.std::_Rb_tree_node.47"* %234 to %"struct.std::_Rb_tree_node_base"*
  %236 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %235, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %233, %"struct.std::_Rb_tree_node_base"** %236, align 8
  %237 = load i32, i32* @x.1235
  %238 = load i32, i32* @y.1236
  %239 = sub i32 0, 1
  %240 = add i32 %237, %239
  %241 = sub i32 %237, 1
  %242 = mul i32 %237, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %238, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 false, true
  %249 = and i1 %246, false
  %250 = and i1 %244, %248
  %251 = and i1 %247, false
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 false, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  br i1 %260, label %262, label %431

; <label>:262:                                    ; preds = %232
  br label %263

; <label>:263:                                    ; preds = %262, %195
  %264 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  store %"struct.std::_Rb_tree_node.47"* %264, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %265 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %266 = bitcast %"struct.std::_Rb_tree_node.47"* %265 to %"struct.std::_Rb_tree_node_base"*
  %267 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %266) #3
  store %"struct.std::_Rb_tree_node.47"* %267, %"struct.std::_Rb_tree_node.47"** %6, align 8
  br label %136

; <label>:268:                                    ; preds = %136
  br label %358

; <label>:269:                                    ; preds = %130, %88
  %270 = load i32, i32* @x.1235
  %271 = load i32, i32* @y.1236
  %272 = add i32 %270, 1752680116
  %273 = sub i32 %272, 1
  %274 = sub i32 %273, 1752680116
  %275 = sub i32 %270, 1
  %276 = mul i32 %270, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %271, 10
  %280 = and i1 %278, %279
  %281 = xor i1 %278, %279
  %282 = or i1 %280, %281
  %283 = or i1 %278, %279
  br i1 %282, label %284, label %436

; <label>:284:                                    ; preds = %269, %436
  %285 = landingpad { i8*, i32 }
          cleanup
  %286 = extractvalue { i8*, i32 } %285, 0
  store i8* %286, i8** %10, align 8
  %287 = extractvalue { i8*, i32 } %285, 1
  store i32 %287, i32* %11, align 4
  %288 = load i32, i32* @x.1235
  %289 = load i32, i32* @y.1236
  %290 = add i32 %288, -655233
  %291 = sub i32 %290, 1
  %292 = sub i32 %291, -655233
  %293 = sub i32 %288, 1
  %294 = mul i32 %288, %292
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %289, 10
  %298 = xor i1 %296, true
  %299 = xor i1 %297, true
  %300 = xor i1 false, true
  %301 = and i1 %298, false
  %302 = and i1 %296, %300
  %303 = and i1 %299, false
  %304 = and i1 %297, %300
  %305 = or i1 %301, %302
  %306 = or i1 %303, %304
  %307 = xor i1 %305, %306
  %308 = or i1 %298, %299
  %309 = xor i1 %308, true
  %310 = or i1 false, %300
  %311 = and i1 %309, %310
  %312 = or i1 %307, %311
  %313 = or i1 %296, %297
  br i1 %312, label %314, label %436

; <label>:314:                                    ; preds = %284
  invoke void @__cxa_end_catch()
          to label %315 unwind label %365

; <label>:315:                                    ; preds = %314
  %316 = load i32, i32* @x.1235
  %317 = load i32, i32* @y.1236
  %318 = sub i32 %316, -1322190481
  %319 = sub i32 %318, 1
  %320 = add i32 %319, -1322190481
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  br i1 %328, label %330, label %440

; <label>:330:                                    ; preds = %315, %440
  %331 = load i32, i32* @x.1235
  %332 = load i32, i32* @y.1236
  %333 = add i32 %331, -1183581966
  %334 = sub i32 %333, 1
  %335 = sub i32 %334, -1183581966
  %336 = sub i32 %331, 1
  %337 = mul i32 %331, %335
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %332, 10
  %341 = xor i1 %339, true
  %342 = xor i1 %340, true
  %343 = xor i1 false, true
  %344 = and i1 %341, false
  %345 = and i1 %339, %343
  %346 = and i1 %342, false
  %347 = and i1 %340, %343
  %348 = or i1 %344, %345
  %349 = or i1 %346, %347
  %350 = xor i1 %348, %349
  %351 = or i1 %341, %342
  %352 = xor i1 %351, true
  %353 = or i1 false, %343
  %354 = and i1 %352, %353
  %355 = or i1 %350, %354
  %356 = or i1 %339, %340
  br i1 %355, label %357, label %440

; <label>:357:                                    ; preds = %330
  br label %360

; <label>:358:                                    ; preds = %268
  %359 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %9, align 8
  ret %"struct.std::_Rb_tree_node.47"* %359

; <label>:360:                                    ; preds = %357
  %361 = load i8*, i8** %10, align 8
  %362 = load i32, i32* %11, align 4
  %363 = insertvalue { i8*, i32 } undef, i8* %361, 0
  %364 = insertvalue { i8*, i32 } %363, i32 %362, 1
  resume { i8*, i32 } %364

; <label>:365:                                    ; preds = %314
  %366 = load i32, i32* @x.1235
  %367 = load i32, i32* @y.1236
  %368 = sub i32 %366, -2081459729
  %369 = sub i32 %368, 1
  %370 = add i32 %369, -2081459729
  %371 = sub i32 %366, 1
  %372 = mul i32 %366, %370
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %367, 10
  %376 = xor i1 %374, true
  %377 = xor i1 %375, true
  %378 = xor i1 false, true
  %379 = and i1 %376, false
  %380 = and i1 %374, %378
  %381 = and i1 %377, false
  %382 = and i1 %375, %378
  %383 = or i1 %379, %380
  %384 = or i1 %381, %382
  %385 = xor i1 %383, %384
  %386 = or i1 %376, %377
  %387 = xor i1 %386, true
  %388 = or i1 false, %378
  %389 = and i1 %387, %388
  %390 = or i1 %385, %389
  %391 = or i1 %374, %375
  br i1 %390, label %392, label %441

; <label>:392:                                    ; preds = %365, %441
  %393 = landingpad { i8*, i32 }
          catch i8* null
  %394 = extractvalue { i8*, i32 } %393, 0
  call void @__clang_call_terminate(i8* %394) #12
  %395 = load i32, i32* @x.1235
  %396 = load i32, i32* @y.1236
  %397 = add i32 %395, -1421866988
  %398 = sub i32 %397, 1
  %399 = sub i32 %398, -1421866988
  %400 = sub i32 %395, 1
  %401 = mul i32 %395, %399
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %396, 10
  %405 = xor i1 %403, true
  %406 = xor i1 %404, true
  %407 = xor i1 true, true
  %408 = and i1 %405, true
  %409 = and i1 %403, %407
  %410 = and i1 %406, true
  %411 = and i1 %404, %407
  %412 = or i1 %408, %409
  %413 = or i1 %410, %411
  %414 = xor i1 %412, %413
  %415 = or i1 %405, %406
  %416 = xor i1 %415, true
  %417 = or i1 true, %407
  %418 = and i1 %416, %417
  %419 = or i1 %414, %418
  %420 = or i1 %403, %404
  br i1 %419, label %421, label %441

; <label>:421:                                    ; preds = %392
  unreachable

; <label>:422:                                    ; preds = %130
  unreachable

; <label>:423:                                    ; preds = %70, %43
  %424 = load i8*, i8** %10, align 8
  %425 = call i8* @__cxa_begin_catch(i8* %424) #3
  %426 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %9, align 8
  br label %70

; <label>:427:                                    ; preds = %115, %89
  br label %115

; <label>:428:                                    ; preds = %165, %139
  %429 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %6, align 8
  %430 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %8, align 8
  br label %165

; <label>:431:                                    ; preds = %232, %218
  %432 = bitcast %"struct.std::_Rb_tree_node.47"* %217 to %"struct.std::_Rb_tree_node_base"*
  %433 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %12, align 8
  %434 = bitcast %"struct.std::_Rb_tree_node.47"* %433 to %"struct.std::_Rb_tree_node_base"*
  %435 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %434, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %432, %"struct.std::_Rb_tree_node_base"** %435, align 8
  br label %232

; <label>:436:                                    ; preds = %284, %269
  %437 = landingpad { i8*, i32 }
          cleanup
  %438 = extractvalue { i8*, i32 } %437, 0
  store i8* %438, i8** %10, align 8
  %439 = extractvalue { i8*, i32 } %437, 1
  store i32 %439, i32* %11, align 4
  br label %284

; <label>:440:                                    ; preds = %330, %315
  br label %330

; <label>:441:                                    ; preds = %392, %365
  %442 = landingpad { i8*, i32 }
          catch i8* null
  %443 = extractvalue { i8*, i32 } %442, 0
  call void @__clang_call_terminate(i8* %443) #12
  br label %392
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %2, align 8
  %3 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.47"*
  ret %"struct.std::_Rb_tree_node.47"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_M_rootEv(%"class.std::_Rb_tree.29"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.29"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %2, align 8
  %3 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.29", %"class.std::_Rb_tree.29"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_minimumEPS_(%"struct.std::_Rb_tree_node_base"* %3) #3
  ret %"struct.std::_Rb_tree_node_base"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1243
  %6 = load i32, i32* @y.1244
  %7 = add i32 %5, 534500425
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 534500425
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2130453814, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2130453814, label %19
    i32 1917476409, label %39
    i32 2082165556, label %69
    i32 1525803083, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1917476409, i32 1525803083
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"* %41) #3
  store %"struct.std::_Rb_tree_node_base"* %42, %"struct.std::_Rb_tree_node_base"** %2
  %43 = load i32, i32* @x.1243
  %44 = load i32, i32* @y.1244
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 2082165556, i32 1525803083
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %72, align 8
  %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %72, align 8
  %74 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"* %73) #3
  store i32 1917476409, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %3, i32 0, i32 2
  %5 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %3, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.47"*
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %5, %"struct.std::_Rb_tree_node.47"* %8)
          to label %9 unwind label %10

; <label>:9:                                      ; preds = %1
  ret void

; <label>:10:                                     ; preds = %1
  %11 = landingpad { i8*, i32 }
          catch i8* null
  %12 = extractvalue { i8*, i32 } %11, 0
  call void @__clang_call_terminate(i8* %12) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_M_clone_nodeINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_RT_(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::_Rb_tree.29"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %6 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %4, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %5, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %2, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %6, align 8
  %8 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %4, align 8
  %9 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %6, align 8
  %10 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %5, align 8
  %11 = call %"struct.std::pair.49"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"* %10)
  %12 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %9, %"struct.std::pair.49"* dereferenceable(16) %11)
  store %"struct.std::_Rb_tree_node.47"* %12, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %13 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %5, align 8
  %14 = bitcast %"struct.std::_Rb_tree_node.47"* %13 to %"struct.std::_Rb_tree_node_base"*
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node.47"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %18, i32 0, i32 0
  store i32 %16, i32* %19, align 8
  %20 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %21 = bitcast %"struct.std::_Rb_tree_node.47"* %20 to %"struct.std::_Rb_tree_node_base"*
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %21, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %23 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  %24 = bitcast %"struct.std::_Rb_tree_node.47"* %23 to %"struct.std::_Rb_tree_node_base"*
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %24, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %26 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %7, align 8
  ret %"struct.std::_Rb_tree_node.47"* %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.47"*
  ret %"struct.std::_Rb_tree_node.47"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.47"*
  ret %"struct.std::_Rb_tree_node.47"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::pair.49"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.47"*
  %4 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*
  %5 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %6 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, align 8
  %7 = alloca %"struct.std::pair.49"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %6, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %7, align 8
  %9 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %6, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %9, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %10 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %10)
  %12 = bitcast %"struct.std::_Rb_tree_node_base"* %11 to %"struct.std::_Rb_tree_node.47"*
  store %"struct.std::_Rb_tree_node.47"* %12, %"struct.std::_Rb_tree_node.47"** %8, align 8
  %13 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %8, align 8
  store %"struct.std::_Rb_tree_node.47"* %13, %"struct.std::_Rb_tree_node.47"** %3
  %14 = alloca i32
  store i32 -709573359, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %43
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -709573359, label %18
    i32 -165887232, label %22
    i32 265105299, label %34
    i32 -496004948, label %41
  ]

; <label>:17:                                     ; preds = %15
  br label %43

; <label>:18:                                     ; preds = %15
  %19 = load volatile %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %3
  %20 = icmp ne %"struct.std::_Rb_tree_node.47"* %19, null
  %21 = select i1 %20, i32 -165887232, i32 265105299
  store i32 %21, i32* %14
  br label %43

; <label>:22:                                     ; preds = %15
  %23 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %24 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %23, i32 0, i32 2
  %25 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %24, align 8
  %26 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %8, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %25, %"struct.std::_Rb_tree_node.47"* %26) #3
  %27 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %28 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %27, i32 0, i32 2
  %29 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %28, align 8
  %30 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %8, align 8
  %31 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %7, align 8
  %32 = call dereferenceable(16) %"struct.std::pair.49"* @_ZSt7forwardIRKSt4pairIKxxEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.49"* dereferenceable(16) %31) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"* %29, %"struct.std::_Rb_tree_node.47"* %30, %"struct.std::pair.49"* dereferenceable(16) %32)
  %33 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %8, align 8
  store %"struct.std::_Rb_tree_node.47"* %33, %"struct.std::_Rb_tree_node.47"** %5, align 8
  store i32 -496004948, i32* %14
  br label %43

; <label>:34:                                     ; preds = %15
  %35 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %4
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %35, i32 0, i32 2
  %37 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %36, align 8
  %38 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %7, align 8
  %39 = call dereferenceable(16) %"struct.std::pair.49"* @_ZSt7forwardIRKSt4pairIKxxEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.49"* dereferenceable(16) %38) #3
  %40 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"* %37, %"struct.std::pair.49"* dereferenceable(16) %39)
  store %"struct.std::_Rb_tree_node.47"* %40, %"struct.std::_Rb_tree_node.47"** %5, align 8
  store i32 -496004948, i32* %14
  br label %43

; <label>:41:                                     ; preds = %15
  %42 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %5, align 8
  ret %"struct.std::_Rb_tree_node.47"* %42

; <label>:43:                                     ; preds = %34, %22, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca %"struct.std::_Rb_tree_node_base"*
  %5 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*
  %6 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %7 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %7, align 8
  %9 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %7, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %9, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %10 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %10, i32 0, i32 1
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %4
  %13 = alloca i32
  store i32 -1088557945, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %277
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1088557945, label %17
    i32 -1228963793, label %21
    i32 613666152, label %25
    i32 1272833687, label %41
    i32 -116002235, label %83
    i32 743099047, label %86
    i32 -1583910720, label %95
    i32 504964528, label %107
    i32 2134943094, label %115
    i32 1624352125, label %123
    i32 1565433187, label %131
    i32 -523418972, label %146
    i32 -853057529, label %168
    i32 -1541823820, label %171
    i32 771575850, label %179
    i32 -1698232643, label %180
    i32 -956116719, label %181
    i32 -1250848470, label %209
    i32 336457349, label %241
    i32 198953222, label %242
    i32 840145579, label %243
    i32 1879256646, label %246
    i32 -627104554, label %248
    i32 -1001371784, label %250
    i32 -614488588, label %265
    i32 -214457969, label %272
  ]

; <label>:16:                                     ; preds = %14
  br label %277

; <label>:17:                                     ; preds = %14
  %18 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4
  %19 = icmp ne %"struct.std::_Rb_tree_node_base"* %18, null
  %20 = select i1 %19, i32 613666152, i32 -1228963793
  store i32 %20, i32* %13
  br label %277

; <label>:21:                                     ; preds = %14
  %22 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %23 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %22, i32 0, i32 1
  %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
  store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %6, align 8
  store i32 -627104554, i32* %13
  br label %277

; <label>:25:                                     ; preds = %14
  %26 = load i32, i32* @x.1255
  %27 = load i32, i32* @y.1256
  %28 = sub i32 %26, 202053711
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 202053711
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 1272833687, i32 -1001371784
  store i32 %40, i32* %13
  br label %277

; <label>:41:                                     ; preds = %14
  %42 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %42, i32 0, i32 1
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %45 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %46 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %45, i32 0, i32 1
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %47, i32 0, i32 1
  %49 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %50 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %51 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %50, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %51, align 8
  %52 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %53 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %52, i32 0, i32 1
  %54 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %53, align 8
  %55 = icmp ne %"struct.std::_Rb_tree_node_base"* %54, null
  store i1 %55, i1* %3
  %56 = load i32, i32* @x.1255
  %57 = load i32, i32* @y.1256
  %58 = sub i32 %56, 1961203854
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 1961203854
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -116002235, i32 -1001371784
  store i32 %82, i32* %13
  br label %277

; <label>:83:                                     ; preds = %14
  %84 = load volatile i1, i1* %3
  %85 = select i1 %84, i32 743099047, i32 840145579
  store i32 %85, i32* %13
  br label %277

; <label>:86:                                     ; preds = %14
  %87 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %88 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %87, i32 0, i32 1
  %89 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %90 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %89, i32 0, i32 3
  %91 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %90, align 8
  %92 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %93 = icmp eq %"struct.std::_Rb_tree_node_base"* %91, %92
  %94 = select i1 %93, i32 -1583910720, i32 -956116719
  store i32 %94, i32* %13
  br label %277

; <label>:95:                                     ; preds = %14
  %96 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %97 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %96, i32 0, i32 1
  %98 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %97, align 8
  %99 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %98, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %99, align 8
  %100 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %101 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %100, i32 0, i32 1
  %102 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %101, align 8
  %103 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %102, i32 0, i32 2
  %104 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %103, align 8
  %105 = icmp ne %"struct.std::_Rb_tree_node_base"* %104, null
  %106 = select i1 %105, i32 504964528, i32 -1698232643
  store i32 %106, i32* %13
  br label %277

; <label>:107:                                    ; preds = %14
  %108 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %109 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %108, i32 0, i32 1
  %110 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %109, align 8
  %111 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %110, i32 0, i32 2
  %112 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %111, align 8
  %113 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %114 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %113, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %112, %"struct.std::_Rb_tree_node_base"** %114, align 8
  store i32 2134943094, i32* %13
  br label %277

; <label>:115:                                    ; preds = %14
  %116 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %117 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %116, i32 0, i32 1
  %118 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %117, align 8
  %119 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %118, i32 0, i32 3
  %120 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %119, align 8
  %121 = icmp ne %"struct.std::_Rb_tree_node_base"* %120, null
  %122 = select i1 %121, i32 1624352125, i32 1565433187
  store i32 %122, i32* %13
  br label %277

; <label>:123:                                    ; preds = %14
  %124 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %125 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %124, i32 0, i32 1
  %126 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %126, i32 0, i32 3
  %128 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %127, align 8
  %129 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %130 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %129, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %128, %"struct.std::_Rb_tree_node_base"** %130, align 8
  store i32 2134943094, i32* %13
  br label %277

; <label>:131:                                    ; preds = %14
  %132 = load i32, i32* @x.1255
  %133 = load i32, i32* @y.1256
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  %145 = select i1 %143, i32 -523418972, i32 -614488588
  store i32 %145, i32* %13
  br label %277

; <label>:146:                                    ; preds = %14
  %147 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %148 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %147, i32 0, i32 1
  %149 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %148, align 8
  %150 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %149, i32 0, i32 2
  %151 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %150, align 8
  %152 = icmp ne %"struct.std::_Rb_tree_node_base"* %151, null
  store i1 %152, i1* %2
  %153 = load i32, i32* @x.1255
  %154 = load i32, i32* @y.1256
  %155 = add i32 %153, 997300256
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, 997300256
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  %167 = select i1 %165, i32 -853057529, i32 -614488588
  store i32 %167, i32* %13
  br label %277

; <label>:168:                                    ; preds = %14
  %169 = load volatile i1, i1* %2
  %170 = select i1 %169, i32 -1541823820, i32 771575850
  store i32 %170, i32* %13
  br label %277

; <label>:171:                                    ; preds = %14
  %172 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %173 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %172, i32 0, i32 1
  %174 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %173, align 8
  %175 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %174, i32 0, i32 2
  %176 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %175, align 8
  %177 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %178 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %177, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %176, %"struct.std::_Rb_tree_node_base"** %178, align 8
  store i32 771575850, i32* %13
  br label %277

; <label>:179:                                    ; preds = %14
  store i32 -1698232643, i32* %13
  br label %277

; <label>:180:                                    ; preds = %14
  store i32 198953222, i32* %13
  br label %277

; <label>:181:                                    ; preds = %14
  %182 = load i32, i32* @x.1255
  %183 = load i32, i32* @y.1256
  %184 = sub i32 %182, 1424842911
  %185 = sub i32 %184, 1
  %186 = add i32 %185, 1424842911
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  %208 = select i1 %206, i32 -1250848470, i32 -214457969
  store i32 %208, i32* %13
  br label %277

; <label>:209:                                    ; preds = %14
  %210 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %211 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %210, i32 0, i32 1
  %212 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %211, align 8
  %213 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %212, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %213, align 8
  %214 = load i32, i32* @x.1255
  %215 = load i32, i32* @y.1256
  %216 = add i32 %214, -2039319591
  %217 = sub i32 %216, 1
  %218 = sub i32 %217, -2039319591
  %219 = sub i32 %214, 1
  %220 = mul i32 %214, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %215, 10
  %224 = xor i1 %222, true
  %225 = xor i1 %223, true
  %226 = xor i1 false, true
  %227 = and i1 %224, false
  %228 = and i1 %222, %226
  %229 = and i1 %225, false
  %230 = and i1 %223, %226
  %231 = or i1 %227, %228
  %232 = or i1 %229, %230
  %233 = xor i1 %231, %232
  %234 = or i1 %224, %225
  %235 = xor i1 %234, true
  %236 = or i1 false, %226
  %237 = and i1 %235, %236
  %238 = or i1 %233, %237
  %239 = or i1 %222, %223
  %240 = select i1 %238, i32 336457349, i32 -214457969
  store i32 %240, i32* %13
  br label %277

; <label>:241:                                    ; preds = %14
  store i32 198953222, i32* %13
  br label %277

; <label>:242:                                    ; preds = %14
  store i32 1879256646, i32* %13
  br label %277

; <label>:243:                                    ; preds = %14
  %244 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %245 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %244, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %245, align 8
  store i32 1879256646, i32* %13
  br label %277

; <label>:246:                                    ; preds = %14
  %247 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %247, %"struct.std::_Rb_tree_node_base"** %6, align 8
  store i32 -627104554, i32* %13
  br label %277

; <label>:248:                                    ; preds = %14
  %249 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret %"struct.std::_Rb_tree_node_base"* %249

; <label>:250:                                    ; preds = %14
  %251 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %252 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %251, i32 0, i32 1
  %253 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %252, align 8
  store %"struct.std::_Rb_tree_node_base"* %253, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %254 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %255 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %254, i32 0, i32 1
  %256 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %255, align 8
  %257 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %256, i32 0, i32 1
  %258 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %257, align 8
  %259 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %260 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %259, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %258, %"struct.std::_Rb_tree_node_base"** %260, align 8
  %261 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %262 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %261, i32 0, i32 1
  %263 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %262, align 8
  %264 = icmp ne %"struct.std::_Rb_tree_node_base"* %263, null
  store i32 1272833687, i32* %13
  br label %277

; <label>:265:                                    ; preds = %14
  %266 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %267 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %266, i32 0, i32 1
  %268 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %267, align 8
  %269 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %268, i32 0, i32 2
  %270 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %269, align 8
  %271 = icmp ne %"struct.std::_Rb_tree_node_base"* %270, null
  store i32 -523418972, i32* %13
  br label %277

; <label>:272:                                    ; preds = %14
  %273 = load volatile %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"** %5
  %274 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Reuse_or_alloc_node"* %273, i32 0, i32 1
  %275 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %274, align 8
  %276 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %275, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %276, align 8
  store i32 -1250848470, i32* %13
  br label %277

; <label>:277:                                    ; preds = %272, %265, %250, %246, %243, %242, %241, %209, %181, %180, %179, %171, %168, %146, %131, %123, %115, %107, %95, %86, %83, %41, %25, %21, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"*, %"struct.std::_Rb_tree_node.47"*, %"struct.std::pair.49"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.1257
  %5 = load i32, i32* @y.1258
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %138

; <label>:29:                                     ; preds = %3, %138
  %30 = alloca %"class.std::_Rb_tree.29"*, align 8
  %31 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %32 = alloca %"struct.std::pair.49"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %30, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %31, align 8
  store %"struct.std::pair.49"* %2, %"struct.std::pair.49"** %32, align 8
  %35 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %30, align 8
  %36 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %31, align 8
  %37 = bitcast %"struct.std::_Rb_tree_node.47"* %36 to i8*
  %38 = bitcast i8* %37 to %"struct.std::_Rb_tree_node.47"*
  %39 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.29"* %35) #3
  %40 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %31, align 8
  %41 = load i32, i32* @x.1257
  %42 = load i32, i32* @y.1258
  %43 = sub i32 %41, 22549452
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 22549452
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %138

; <label>:67:                                     ; preds = %29
  %68 = invoke %"struct.std::pair.49"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.47"* %40)
          to label %69 unwind label %73

; <label>:69:                                     ; preds = %67
  %70 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %32, align 8
  %71 = call dereferenceable(16) %"struct.std::pair.49"* @_ZSt7forwardIRKSt4pairIKxxEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.49"* dereferenceable(16) %70) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKS3_EEEvRS5_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1) %39, %"struct.std::pair.49"* %68, %"struct.std::pair.49"* dereferenceable(16) %71)
          to label %72 unwind label %73

; <label>:72:                                     ; preds = %69
  br label %128

; <label>:73:                                     ; preds = %69, %67
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %33, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %34, align 4
  br label %77

; <label>:77:                                     ; preds = %73
  %78 = load i8*, i8** %33, align 8
  %79 = call i8* @__cxa_begin_catch(i8* %78) #3
  %80 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %31, align 8
  %81 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %31, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.29"* %35, %"struct.std::_Rb_tree_node.47"* %81) #3
  invoke void @__cxa_rethrow() #14
          to label %137 unwind label %82

; <label>:82:                                     ; preds = %77
  %83 = load i32, i32* @x.1257
  %84 = load i32, i32* @y.1258
  %85 = add i32 %83, 1030233634
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, 1030233634
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 true, true
  %96 = and i1 %93, true
  %97 = and i1 %91, %95
  %98 = and i1 %94, true
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 true, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %150

; <label>:109:                                    ; preds = %82, %150
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %33, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %34, align 4
  %113 = load i32, i32* @x.1257
  %114 = load i32, i32* @y.1258
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  br i1 %124, label %126, label %150

; <label>:126:                                    ; preds = %109
  invoke void @__cxa_end_catch()
          to label %127 unwind label %134

; <label>:127:                                    ; preds = %126
  br label %129

; <label>:128:                                    ; preds = %72
  ret void

; <label>:129:                                    ; preds = %127
  %130 = load i8*, i8** %33, align 8
  %131 = load i32, i32* %34, align 4
  %132 = insertvalue { i8*, i32 } undef, i8* %130, 0
  %133 = insertvalue { i8*, i32 } %132, i32 %131, 1
  resume { i8*, i32 } %133

; <label>:134:                                    ; preds = %126
  %135 = landingpad { i8*, i32 }
          catch i8* null
  %136 = extractvalue { i8*, i32 } %135, 0
  call void @__clang_call_terminate(i8* %136) #12
  unreachable

; <label>:137:                                    ; preds = %77
  unreachable

; <label>:138:                                    ; preds = %29, %3
  %139 = alloca %"class.std::_Rb_tree.29"*, align 8
  %140 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  %141 = alloca %"struct.std::pair.49"*, align 8
  %142 = alloca i8*
  %143 = alloca i32
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %139, align 8
  store %"struct.std::_Rb_tree_node.47"* %1, %"struct.std::_Rb_tree_node.47"** %140, align 8
  store %"struct.std::pair.49"* %2, %"struct.std::pair.49"** %141, align 8
  %144 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %139, align 8
  %145 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %140, align 8
  %146 = bitcast %"struct.std::_Rb_tree_node.47"* %145 to i8*
  %147 = bitcast i8* %146 to %"struct.std::_Rb_tree_node.47"*
  %148 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.29"* %144) #3
  %149 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %140, align 8
  br label %29

; <label>:150:                                    ; preds = %109, %82
  %151 = landingpad { i8*, i32 }
          cleanup
  %152 = extractvalue { i8*, i32 } %151, 0
  store i8* %152, i8** %33, align 8
  %153 = extractvalue { i8*, i32 } %151, 1
  store i32 %153, i32* %34, align 4
  br label %109
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.49"* @_ZSt7forwardIRKSt4pairIKxxEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.49"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair.49"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1259
  %6 = load i32, i32* @y.1260
  %7 = add i32 %5, -242078031
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -242078031
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -875237024, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -875237024, label %19
    i32 740741991, label %27
    i32 1411999757, label %57
    i32 -1843177477, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 740741991, i32 -1843177477
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair.49"*, align 8
  store %"struct.std::pair.49"* %0, %"struct.std::pair.49"** %28, align 8
  %29 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %28, align 8
  store %"struct.std::pair.49"* %29, %"struct.std::pair.49"** %2
  %30 = load i32, i32* @x.1259
  %31 = load i32, i32* @y.1260
  %32 = add i32 %30, -1058573743
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1058573743
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1411999757, i32 -1843177477
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::pair.49"*, %"struct.std::pair.49"** %2
  ret %"struct.std::pair.49"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::pair.49"*, align 8
  store %"struct.std::pair.49"* %0, %"struct.std::pair.49"** %60, align 8
  %61 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %60, align 8
  store i32 740741991, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"*, %"struct.std::pair.49"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.47"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1261
  %7 = load i32, i32* @y.1262
  %8 = sub i32 %6, 1771650699
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1771650699
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1723695609, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1723695609, label %20
    i32 -58314090, label %40
    i32 552940152, label %65
    i32 54523366, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -58314090, i32 54523366
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::_Rb_tree.29"*, align 8
  %42 = alloca %"struct.std::pair.49"*, align 8
  %43 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %41, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %42, align 8
  %44 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %41, align 8
  %45 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree.29"* %44)
  store %"struct.std::_Rb_tree_node.47"* %45, %"struct.std::_Rb_tree_node.47"** %43, align 8
  %46 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %43, align 8
  %47 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %42, align 8
  %48 = call dereferenceable(16) %"struct.std::pair.49"* @_ZSt7forwardIRKSt4pairIKxxEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.49"* dereferenceable(16) %47) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"* %44, %"struct.std::_Rb_tree_node.47"* %46, %"struct.std::pair.49"* dereferenceable(16) %48)
  %49 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %43, align 8
  store %"struct.std::_Rb_tree_node.47"* %49, %"struct.std::_Rb_tree_node.47"** %3
  %50 = load i32, i32* @x.1261
  %51 = load i32, i32* @y.1262
  %52 = add i32 %50, 962468010
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 962468010
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 552940152, i32 54523366
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %3
  ret %"struct.std::_Rb_tree_node.47"* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::_Rb_tree.29"*, align 8
  %69 = alloca %"struct.std::pair.49"*, align 8
  %70 = alloca %"struct.std::_Rb_tree_node.47"*, align 8
  store %"class.std::_Rb_tree.29"* %0, %"class.std::_Rb_tree.29"** %68, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %69, align 8
  %71 = load %"class.std::_Rb_tree.29"*, %"class.std::_Rb_tree.29"** %68, align 8
  %72 = call %"struct.std::_Rb_tree_node.47"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree.29"* %71)
  store %"struct.std::_Rb_tree_node.47"* %72, %"struct.std::_Rb_tree_node.47"** %70, align 8
  %73 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %70, align 8
  %74 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %69, align 8
  %75 = call dereferenceable(16) %"struct.std::pair.49"* @_ZSt7forwardIRKSt4pairIKxxEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.49"* dereferenceable(16) %74) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.29"* %71, %"struct.std::_Rb_tree_node.47"* %73, %"struct.std::pair.49"* dereferenceable(16) %75)
  %76 = load %"struct.std::_Rb_tree_node.47"*, %"struct.std::_Rb_tree_node.47"** %70, align 8
  store i32 -58314090, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKS3_EEEvRS5_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1), %"struct.std::pair.49"*, %"struct.std::pair.49"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.30"*, align 8
  %5 = alloca %"struct.std::pair.49"*, align 8
  %6 = alloca %"struct.std::pair.49"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %4, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %5, align 8
  store %"struct.std::pair.49"* %2, %"struct.std::pair.49"** %6, align 8
  %7 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  %8 = bitcast %"class.std::allocator.30"* %7 to %"class.__gnu_cxx::new_allocator.31"*
  %9 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %5, align 8
  %10 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %6, align 8
  %11 = call dereferenceable(16) %"struct.std::pair.49"* @_ZSt7forwardIRKSt4pairIKxxEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.49"* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKS4_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"* %8, %"struct.std::pair.49"* %9, %"struct.std::pair.49"* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKS4_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"*, %"struct.std::pair.49"*, %"struct.std::pair.49"* dereferenceable(16)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %5 = alloca %"struct.std::pair.49"*, align 8
  %6 = alloca %"struct.std::pair.49"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  store %"struct.std::pair.49"* %1, %"struct.std::pair.49"** %5, align 8
  store %"struct.std::pair.49"* %2, %"struct.std::pair.49"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %8 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %5, align 8
  %9 = bitcast %"struct.std::pair.49"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.std::pair.49"*
  %11 = load %"struct.std::pair.49"*, %"struct.std::pair.49"** %6, align 8
  %12 = call dereferenceable(16) %"struct.std::pair.49"* @_ZSt7forwardIRKSt4pairIKxxEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::pair.49"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.std::pair.49"* %10 to i8*
  %14 = bitcast %"struct.std::pair.49"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.7"*, i64, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.1267
  %5 = load i32, i32* @y.1268
  %6 = add i32 %4, -1624165170
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1624165170
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %106

; <label>:18:                                     ; preds = %3, %106
  %19 = alloca %"struct.std::_Vector_base.7"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::allocator.8"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %21, align 8
  %24 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %19, align 8
  %25 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %24, i32 0, i32 0
  %26 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %21, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %25, %"class.std::allocator.8"* dereferenceable(1) %26) #3
  %27 = load i64, i64* %20, align 8
  %28 = load i32, i32* @x.1267
  %29 = load i32, i32* @y.1268
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %106

; <label>:41:                                     ; preds = %18
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.7"* %24, i64 %27)
          to label %42 unwind label %97

; <label>:42:                                     ; preds = %41
  %43 = load i32, i32* @x.1267
  %44 = load i32, i32* @y.1268
  %45 = sub i32 %43, -1809295877
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1809295877
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %116

; <label>:69:                                     ; preds = %42, %116
  %70 = load i32, i32* @x.1267
  %71 = load i32, i32* @y.1268
  %72 = add i32 %70, -1635762975
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -1635762975
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %116

; <label>:96:                                     ; preds = %69
  ret void

; <label>:97:                                     ; preds = %41
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %22, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %23, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %25) #3
  br label %101

; <label>:101:                                    ; preds = %97
  %102 = load i8*, i8** %22, align 8
  %103 = load i32, i32* %23, align 4
  %104 = insertvalue { i8*, i32 } undef, i8* %102, 0
  %105 = insertvalue { i8*, i32 } %104, i32 %103, 1
  resume { i8*, i32 } %105

; <label>:106:                                    ; preds = %18, %3
  %107 = alloca %"struct.std::_Vector_base.7"*, align 8
  %108 = alloca i64, align 8
  %109 = alloca %"class.std::allocator.8"*, align 8
  %110 = alloca i8*
  %111 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %107, align 8
  store i64 %1, i64* %108, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %109, align 8
  %112 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %107, align 8
  %113 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %112, i32 0, i32 0
  %114 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %109, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %113, %"class.std::allocator.8"* dereferenceable(1) %114) #3
  %115 = load i64, i64* %108, align 8
  br label %18

; <label>:116:                                    ; preds = %69, %42
  br label %69
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.6"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %8 = bitcast %"class.std::vector.6"* %7 to %"struct.std::_Vector_base.7"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = bitcast %"class.std::vector.6"* %7 to %"struct.std::_Vector_base.7"*
  %15 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %14) #3
  %16 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %11, i64 %12, i64* dereferenceable(8) %13, %"class.std::allocator.8"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.6"* %7 to %"struct.std::_Vector_base.7"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %18, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5 to %"class.std::allocator.8"*
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.8"* %6, %"class.std::allocator.8"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.7"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.7"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.7"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 0
  store i64* %7, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 1
  store i64* %12, i64** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i64, i64* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 2
  store i64* %19, i64** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.8"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1277
  %8 = load i32, i32* @y.1278
  %9 = sub i32 %7, 562279144
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 562279144
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1460680122, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1460680122, label %21
    i32 -437790676, label %41
    i32 1855570384, label %65
    i32 -795685844, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -437790676, i32 -795685844
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64*, align 8
  %45 = alloca i8, align 1
  store i64* %0, i64** %42, align 8
  store i64 %1, i64* %43, align 8
  store i64* %2, i64** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i64*, i64** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %46, i64 %47, i64* dereferenceable(8) %48)
  store i64* %49, i64** %4
  %50 = load i32, i32* @x.1277
  %51 = load i32, i32* @y.1278
  %52 = sub i32 %50, 1747997631
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1747997631
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1855570384, i32 -795685844
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i64*, i64** %4
  ret i64* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i64*, align 8
  %69 = alloca i64, align 8
  %70 = alloca i64*, align 8
  %71 = alloca i8, align 1
  store i64* %0, i64** %68, align 8
  store i64 %1, i64* %69, align 8
  store i64* %2, i64** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i64*, i64** %68, align 8
  %73 = load i64, i64* %69, align 8
  %74 = load i64*, i64** %70, align 8
  %75 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %72, i64 %73, i64* dereferenceable(8) %74)
  store i32 -437790676, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %7, i64 %8, i64* dereferenceable(8) %9)
  ret i64* %10
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s864484413.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.4()
  call void @__cxx_global_var_init.5()
  call void @__cxx_global_var_init.6()
  call void @__cxx_global_var_init.7()
  call void @__cxx_global_var_init.8()
  call void @__cxx_global_var_init.9()
  call void @__cxx_global_var_init.10()
  call void @__cxx_global_var_init.11()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
