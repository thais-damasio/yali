; ModuleID = 'Project_CodeNet_C++1400/p00747/s184136047.cpp'
source_filename = "Project_CodeNet_C++1400/p00747/s184136047.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { double*, double*, double* }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%class.Graph = type { %"class.std::vector.13" }
%"class.std::vector.13" = type { %"struct.std::_Vector_base.14" }
%"struct.std::_Vector_base.14" = type { %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl" = type { %"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"* }
%"struct.Graph::Node" = type { i64, %"class.std::vector.18" }
%"class.std::vector.18" = type { %"struct.std::_Vector_base.19" }
%"struct.std::_Vector_base.19" = type { %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl" = type { %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"* }
%"struct.Graph::Edge" = type { i64, i64 }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.Graph::Edge"* }
%"class.__gnu_cxx::__normal_iterator.24" = type { %"struct.Graph::Edge"* }
%"class.std::priority_queue" = type <{ %"class.std::vector.25", %"struct.std::less", [7 x i8] }>
%"class.std::vector.25" = type { %"struct.std::_Vector_base.26" }
%"struct.std::_Vector_base.26" = type { %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl" = type { %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* }
%"struct.Graph::QInfo" = type { i64, i64 }
%"struct.std::less" = type { i8 }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" = type { %"struct.std::less.33", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less.33" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair" = type <{ %"struct.std::_Rb_tree_const_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.std::allocator.20" = type { i8 }
%"class.__gnu_cxx::new_allocator.21" = type { i8 }
%"class.std::move_iterator" = type { %"struct.Graph::Node"* }
%"class.std::move_iterator.23" = type { %"struct.Graph::Edge"* }
%"class.__gnu_cxx::__normal_iterator.35" = type { %"struct.Graph::QInfo"* }
%"class.std::allocator.27" = type { i8 }
%"struct.std::pair.37" = type <{ %"struct.std::_Rb_tree_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.__gnu_cxx::new_allocator.28" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %"struct.std::less" }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %"struct.std::less" }
%"class.std::allocator.30" = type { i8 }
%"class.__gnu_cxx::new_allocator.31" = type { i8 }
%"class.std::move_iterator.36" = type { %"struct.Graph::QInfo"* }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node" = type { %"class.std::_Rb_tree"* }
%"struct.std::pair.39" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Identity" = type { i8 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"class.__gnu_cxx::__normal_iterator.40" = type { %"struct.Graph::QInfo"* }
%"struct.std::pair.41" = type { %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator" }
%"class.std::allocator.0" = type { i8 }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%"class.std::move_iterator.42" = type { i64* }
%"class.std::allocator.5" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.std::move_iterator.43" = type { double* }
%"class.std::allocator.10" = type { i8 }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"class.std::move_iterator.44" = type { %"class.std::__cxx11::basic_string"* }

$_ZNSt6vectorIxSaIxEE9push_backEOx = comdat any

$_ZNSt6vectorIdSaIdEE9push_backEOd = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ = comdat any

$_ZN5GraphC2Ex = comdat any

$_ZN5Graph8makeEdgeExxxb = comdat any

$_ZN5Graph10deleteEdgeExxb = comdat any

$_ZN5Graph8dijkstraExx = comdat any

$_ZN5GraphD2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE9push_backEOS1_ = comdat any

$_ZN5Graph4NodeC2Ev = comdat any

$_ZN5Graph4NodeD2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph4NodeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN5Graph4NodeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZN5Graph4NodeC2EOS0_ = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSt6vectorIN5Graph4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_ = comdat any

$_ZSt4swapIPN5Graph4EdgeEEvRT_S4_ = comdat any

$_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNKSt6vectorIN5Graph4NodeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4NodeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4NodeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN5Graph4NodeEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5Graph4NodeEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4NodeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4NodeEEppEv = comdat any

$_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_ = comdat any

$_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_ = comdat any

$_ZSt8_DestroyIN5Graph4NodeEEvPT_ = comdat any

$_ZNSt13move_iteratorIPN5Graph4NodeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph4EdgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4EdgeEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE10deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSaIN5Graph4NodeEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev = comdat any

$_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_ = comdat any

$_ZN5Graph4EdgeC2Exx = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN5Graph4EdgeEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4EdgeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4EdgeEEppEv = comdat any

$_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv = comdat any

$_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEmmEi = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZN9__gnu_cxxmiIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE6cbeginEv = comdat any

$_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_ = comdat any

$_ZSt13__copy_move_aILb1EPN5Graph4EdgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN5Graph4EdgeES5_EET0_T_S7_S6_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2Ev = comdat any

$_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EEC2ERKS6_OS4_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev = comdat any

$_ZNSt3setIxSt4lessIxESaIxEEC2Ev = comdat any

$_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_ = comdat any

$_ZN5Graph5QInfoC2Exx = comdat any

$_ZNSt3setIxSt4lessIxESaIxEE6insertERKx = comdat any

$_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE5emptyEv = comdat any

$_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv = comdat any

$_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3popEv = comdat any

$_ZN5Graph4NodeC2ERKS0_ = comdat any

$_ZNSt3setIxSt4lessIxESaIxEE5eraseERKx = comdat any

$_ZNSt3setIxSt4lessIxESaIxEE4findERKx = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_ = comdat any

$_ZNKSt3setIxSt4lessIxESaIxEE3endEv = comdat any

$_ZNSt3setIxSt4lessIxESaIxEED2Ev = comdat any

$_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph5QInfoEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2Ev = comdat any

$_ZSt4moveIRSt6vectorIN5Graph5QInfoESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2EOS3_ = comdat any

$_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaIN5Graph5QInfoEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZNSaIN5Graph5QInfoEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2ERKS3_ = comdat any

$_ZSt4swapIPN5Graph5QInfoEEvRT_S4_ = comdat any

$_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_ = comdat any

$_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE = comdat any

$_ZNKSt4lessIN5Graph5QInfoEEclERKS1_S4_ = comdat any

$_ZNK5Graph5QInfoltERKS0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEC2ES5_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEC2ES5_ = comdat any

$_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN5Graph5QInfoEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph5QInfoEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE10deallocateEPS2_m = comdat any

$_ZNSaIN5Graph5QInfoEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE9push_backEOS1_ = comdat any

$_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph5QInfoES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph5QInfoEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph5QInfoEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph5QInfoEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN5Graph5QInfoEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5Graph5QInfoEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph5QInfoEEdeEv = comdat any

$_ZNSt13move_iteratorIPN5Graph5QInfoEEppEv = comdat any

$_ZSteqIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph5QInfoEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN5Graph5QInfoEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE7destroyIS2_EEvPT_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmiEl = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EES7_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_ = comdat any

$_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx = comdat any

$_ZNKSt9_IdentityIxEclERKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_ = comdat any

$_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv = comdat any

$_ZNKSt4lessIxEclERKxS2_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIxEmmEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m = comdat any

$_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE = comdat any

$_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5emptyEv = comdat any

$_ZN9__gnu_cxxeqIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5frontEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorIN5Graph5QInfoESaIS1_EE8pop_backEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmmEv = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_ = comdat any

$_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaIN5Graph4EdgeEED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE3endEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaIN5Graph4EdgeEEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE17_M_create_storageEm = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZSt10_ConstructIN5Graph4EdgeEJRKS1_EEvPT_DpOT0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZSt7forwardIRKN5Graph4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseERKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11equal_rangeERKx = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxES7_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_lower_boundEPSt13_Rb_tree_nodeIxES8_RKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_upper_boundEPSt13_Rb_tree_nodeIxES8_RKx = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIxES1_EC2IS1_S1_vEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxES7_ = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5clearEv = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxE = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEppEi = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEppEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4findERKx = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev = comdat any

$_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_ = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_ = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNKSt6vectorIxSaIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPxE4baseEv = comdat any

$_ZNSt13move_iteratorIPxEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_ = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_ = comdat any

$_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm = comdat any

$_ZNKSt6vectorIdSaIdEE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_ = comdat any

$_ZSt8_DestroyIPddEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm = comdat any

$_ZNKSt6vectorIdSaIdEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIdEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPdE4baseEv = comdat any

$_ZNSt13move_iteratorIPdEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_ = comdat any

$_ZSt8_DestroyIPdEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ = comdat any

$_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_ = comdat any

$_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ = comdat any

$_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ = comdat any

$_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ = comdat any

$_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s184136047.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0
@x.905 = common global i32 0
@y.906 = common global i32 0
@x.907 = common global i32 0
@y.908 = common global i32 0
@x.909 = common global i32 0
@y.910 = common global i32 0
@x.911 = common global i32 0
@y.912 = common global i32 0
@x.913 = common global i32 0
@y.914 = common global i32 0
@x.915 = common global i32 0
@y.916 = common global i32 0
@x.917 = common global i32 0
@y.918 = common global i32 0
@x.919 = common global i32 0
@y.920 = common global i32 0
@x.921 = common global i32 0
@y.922 = common global i32 0
@x.923 = common global i32 0
@y.924 = common global i32 0
@x.925 = common global i32 0
@y.926 = common global i32 0
@x.927 = common global i32 0
@y.928 = common global i32 0
@x.929 = common global i32 0
@y.930 = common global i32 0
@x.931 = common global i32 0
@y.932 = common global i32 0
@x.933 = common global i32 0
@y.934 = common global i32 0
@x.935 = common global i32 0
@y.936 = common global i32 0
@x.937 = common global i32 0
@y.938 = common global i32 0
@x.939 = common global i32 0
@y.940 = common global i32 0
@x.941 = common global i32 0
@y.942 = common global i32 0
@x.943 = common global i32 0
@y.944 = common global i32 0
@x.945 = common global i32 0
@y.946 = common global i32 0
@x.947 = common global i32 0
@y.948 = common global i32 0
@x.949 = common global i32 0
@y.950 = common global i32 0
@x.951 = common global i32 0
@y.952 = common global i32 0
@x.953 = common global i32 0
@y.954 = common global i32 0
@x.955 = common global i32 0
@y.956 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = sub i32 %3, 1806100522
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1806100522
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 1123684200, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %57
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1123684200, label %17
    i32 -355724171, label %25
    i32 1187820935, label %54
    i32 -1227957824, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %57

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -355724171, i32 -1227957824
  store i32 %24, i32* %13
  br label %57

; <label>:25:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %26 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  %27 = load i32, i32* @x
  %28 = load i32, i32* @y
  %29 = add i32 %27, -497218140
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, -497218140
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 1187820935, i32 -1227957824
  store i32 %53, i32* %13
  br label %57

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %56 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  store i32 -355724171, i32* %13
  br label %57

; <label>:57:                                     ; preds = %55, %25, %17, %16
  br label %14
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define i64 @_Z7nextIntv() #0 {
  %1 = alloca i64, align 8
  %2 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %1)
  %3 = load i64, i64* %1, align 8
  ret i64 %3
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define signext i8 @_Z8nextCharv() #0 {
  %1 = alloca i8, align 1
  %2 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, i8* dereferenceable(1) %1)
  %3 = load i8, i8* %1, align 1
  ret i8 %3
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

; Function Attrs: noinline uwtable
define double @_Z10nextDoublev() #0 {
  %1 = alloca double, align 8
  %2 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERd(%"class.std::basic_istream"* @_ZSt3cin, double* dereferenceable(8) %1)
  %3 = load double, double* %1, align 8
  ret double %3
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERd(%"class.std::basic_istream"*, double* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define void @_Z10nextStringB5cxx11v(%"class.std::__cxx11::basic_string"* noalias sret) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 %2, 1195262321
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1195262321
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %166

; <label>:28:                                     ; preds = %1, %166
  %29 = alloca i1, align 1
  %30 = alloca i8*
  %31 = alloca i32
  store i1 false, i1* %29, align 1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  %32 = load i32, i32* @x.7
  %33 = load i32, i32* @y.8
  %34 = add i32 %32, 905402474
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 905402474
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %166

; <label>:58:                                     ; preds = %28
  %59 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* dereferenceable(32) %0)
          to label %60 unwind label %62

; <label>:60:                                     ; preds = %58
  store i1 true, i1* %29, align 1
  %61 = load i1, i1* %29, align 1
  br i1 %61, label %107, label %66

; <label>:62:                                     ; preds = %58
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %30, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %31, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  br label %108

; <label>:66:                                     ; preds = %60
  %67 = load i32, i32* @x.7
  %68 = load i32, i32* @y.8
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %170

; <label>:92:                                     ; preds = %66, %170
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  %93 = load i32, i32* @x.7
  %94 = load i32, i32* @y.8
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %170

; <label>:106:                                    ; preds = %92
  br label %107

; <label>:107:                                    ; preds = %106, %60
  ret void

; <label>:108:                                    ; preds = %62
  %109 = load i32, i32* @x.7
  %110 = load i32, i32* @y.8
  %111 = add i32 %109, 2135465153
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, 2135465153
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %171

; <label>:135:                                    ; preds = %108, %171
  %136 = load i8*, i8** %30, align 8
  %137 = load i32, i32* %31, align 4
  %138 = insertvalue { i8*, i32 } undef, i8* %136, 0
  %139 = insertvalue { i8*, i32 } %138, i32 %137, 1
  %140 = load i32, i32* @x.7
  %141 = load i32, i32* @y.8
  %142 = sub i32 0, 1
  %143 = add i32 %140, %142
  %144 = sub i32 %140, 1
  %145 = mul i32 %140, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %141, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 false, true
  %152 = and i1 %149, false
  %153 = and i1 %147, %151
  %154 = and i1 %150, false
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 false, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  br i1 %163, label %165, label %171

; <label>:165:                                    ; preds = %135
  resume { i8*, i32 } %139

; <label>:166:                                    ; preds = %28, %1
  %167 = alloca i1, align 1
  %168 = alloca i8*
  %169 = alloca i32
  store i1 false, i1* %167, align 1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  br label %28

; <label>:170:                                    ; preds = %92, %66
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %0) #3
  br label %92

; <label>:171:                                    ; preds = %135, %108
  %172 = load i8*, i8** %30, align 8
  %173 = load i32, i32* %31, align 4
  %174 = insertvalue { i8*, i32 } undef, i8* %172, 0
  %175 = insertvalue { i8*, i32 } %174, i32 %173, 1
  br label %135
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define void @_Z11inputVectorRSt6vectorIxSaIxEERx(%"class.std::vector"* dereferenceable(24), i64* dereferenceable(8)) #0 {
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca i64**
  %6 = alloca %"class.std::vector"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.9
  %10 = load i32, i32* @y.10
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 1431950904, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %245
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1431950904, label %22
    i32 -686584074, label %30
    i32 -1906625752, label %65
    i32 1809215029, label %66
    i32 1837541897, label %74
    i32 -1857124861, label %102
    i32 -753224136, label %135
    i32 -110677726, label %136
    i32 -1504677759, label %151
    i32 -584713697, label %174
    i32 -1600813086, label %175
    i32 -929510201, label %190
    i32 169071939, label %218
    i32 1714967616, label %219
    i32 -1089361611, label %224
    i32 -1850447525, label %230
    i32 1835034752, label %244
  ]

; <label>:21:                                     ; preds = %19
  br label %245

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -686584074, i32 1714967616
  store i32 %29, i32* %18
  br label %245

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"** %31, %"class.std::vector"*** %6
  %32 = alloca i64*, align 8
  store i64** %32, i64*** %5
  %33 = alloca i64, align 8
  store i64* %33, i64** %4
  %34 = alloca i64, align 8
  store i64* %34, i64** %3
  %35 = load volatile %"class.std::vector"**, %"class.std::vector"*** %6
  store %"class.std::vector"* %0, %"class.std::vector"** %35, align 8
  %36 = load volatile i64**, i64*** %5
  store i64* %1, i64** %36, align 8
  %37 = load volatile i64*, i64** %4
  store i64 0, i64* %37, align 8
  %38 = load i32, i32* @x.9
  %39 = load i32, i32* @y.10
  %40 = add i32 %38, -1687037160
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1687037160
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1906625752, i32 1714967616
  store i32 %64, i32* %18
  br label %245

; <label>:65:                                     ; preds = %19
  store i32 1809215029, i32* %18
  br label %245

; <label>:66:                                     ; preds = %19
  %67 = load volatile i64*, i64** %4
  %68 = load i64, i64* %67, align 8
  %69 = load volatile i64**, i64*** %5
  %70 = load i64*, i64** %69, align 8
  %71 = load i64, i64* %70, align 8
  %72 = icmp slt i64 %68, %71
  %73 = select i1 %72, i32 1837541897, i32 -1600813086
  store i32 %73, i32* %18
  br label %245

; <label>:74:                                     ; preds = %19
  %75 = load i32, i32* @x.9
  %76 = load i32, i32* @y.10
  %77 = sub i32 %75, -407515932
  %78 = sub i32 %77, 1
  %79 = add i32 %78, -407515932
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 -1857124861, i32 -1089361611
  store i32 %101, i32* %18
  br label %245

; <label>:102:                                    ; preds = %19
  %103 = load volatile %"class.std::vector"**, %"class.std::vector"*** %6
  %104 = load %"class.std::vector"*, %"class.std::vector"** %103, align 8
  %105 = call i64 @_Z7nextIntv()
  %106 = load volatile i64*, i64** %3
  store i64 %105, i64* %106, align 8
  %107 = load volatile i64*, i64** %3
  call void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector"* %104, i64* dereferenceable(8) %107)
  %108 = load i32, i32* @x.9
  %109 = load i32, i32* @y.10
  %110 = add i32 %108, -1383380664
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -1383380664
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -753224136, i32 -1089361611
  store i32 %134, i32* %18
  br label %245

; <label>:135:                                    ; preds = %19
  store i32 -110677726, i32* %18
  br label %245

; <label>:136:                                    ; preds = %19
  %137 = load i32, i32* @x.9
  %138 = load i32, i32* @y.10
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  %150 = select i1 %148, i32 -1504677759, i32 -1850447525
  store i32 %150, i32* %18
  br label %245

; <label>:151:                                    ; preds = %19
  %152 = load volatile i64*, i64** %4
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %153, -556709471939764018
  %155 = add i64 %154, 1
  %156 = add i64 %155, -556709471939764018
  %157 = add nsw i64 %153, 1
  %158 = load volatile i64*, i64** %4
  store i64 %156, i64* %158, align 8
  %159 = load i32, i32* @x.9
  %160 = load i32, i32* @y.10
  %161 = add i32 %159, -676277689
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, -676277689
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  %173 = select i1 %171, i32 -584713697, i32 -1850447525
  store i32 %173, i32* %18
  br label %245

; <label>:174:                                    ; preds = %19
  store i32 1809215029, i32* %18
  br label %245

; <label>:175:                                    ; preds = %19
  %176 = load i32, i32* @x.9
  %177 = load i32, i32* @y.10
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  %189 = select i1 %187, i32 -929510201, i32 1835034752
  store i32 %189, i32* %18
  br label %245

; <label>:190:                                    ; preds = %19
  %191 = load i32, i32* @x.9
  %192 = load i32, i32* @y.10
  %193 = add i32 %191, 1023428217
  %194 = sub i32 %193, 1
  %195 = sub i32 %194, 1023428217
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 false, true
  %204 = and i1 %201, false
  %205 = and i1 %199, %203
  %206 = and i1 %202, false
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 false, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  %217 = select i1 %215, i32 169071939, i32 1835034752
  store i32 %217, i32* %18
  br label %245

; <label>:218:                                    ; preds = %19
  ret void

; <label>:219:                                    ; preds = %19
  %220 = alloca %"class.std::vector"*, align 8
  %221 = alloca i64*, align 8
  %222 = alloca i64, align 8
  %223 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %220, align 8
  store i64* %1, i64** %221, align 8
  store i64 0, i64* %222, align 8
  store i32 -686584074, i32* %18
  br label %245

; <label>:224:                                    ; preds = %19
  %225 = load volatile %"class.std::vector"**, %"class.std::vector"*** %6
  %226 = load %"class.std::vector"*, %"class.std::vector"** %225, align 8
  %227 = call i64 @_Z7nextIntv()
  %228 = load volatile i64*, i64** %3
  store i64 %227, i64* %228, align 8
  %229 = load volatile i64*, i64** %3
  call void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector"* %226, i64* dereferenceable(8) %229)
  store i32 -1857124861, i32* %18
  br label %245

; <label>:230:                                    ; preds = %19
  %231 = load volatile i64*, i64** %4
  %232 = load i64, i64* %231, align 8
  %233 = sub i64 0, %232
  %234 = add i64 0, %233
  %235 = sub i64 0, %232
  %236 = sub i64 0, 1
  %237 = sub i64 %234, %236
  %238 = add i64 %234, 1
  %239 = sub i64 %232, -8438371683697186368
  %240 = add i64 %239, 1
  %241 = add i64 %240, -8438371683697186368
  %242 = add nsw i64 %232, 1
  %243 = load volatile i64*, i64** %4
  store i64 %241, i64* %243, align 8
  store i32 -1504677759, i32* %18
  br label %245

; <label>:244:                                    ; preds = %19
  store i32 -929510201, i32* %18
  br label %245

; <label>:245:                                    ; preds = %244, %230, %224, %219, %190, %175, %174, %151, %136, %135, %102, %74, %66, %65, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  call void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector"* %5, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z11inputVectorRSt6vectorIdSaIdEERx(%"class.std::vector.3"* dereferenceable(24), i64* dereferenceable(8)) #0 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i64* %1, i64** %4, align 8
  store i64 0, i64* %5, align 8
  %7 = alloca i32
  store i32 -1013202853, i32* %7
  br label %8

; <label>:8:                                      ; preds = %2, %83
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 -1013202853, label %11
    i32 826542309, label %17
    i32 434703634, label %20
    i32 94598345, label %26
    i32 -1366428087, label %54
    i32 -1234065354, label %81
    i32 -1362137335, label %82
  ]

; <label>:10:                                     ; preds = %8
  br label %83

; <label>:11:                                     ; preds = %8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %4, align 8
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %12, %14
  %16 = select i1 %15, i32 826542309, i32 94598345
  store i32 %16, i32* %7
  br label %83

; <label>:17:                                     ; preds = %8
  %18 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %19 = call double @_Z10nextDoublev()
  store double %19, double* %6, align 8
  call void @_ZNSt6vectorIdSaIdEE9push_backEOd(%"class.std::vector.3"* %18, double* dereferenceable(8) %6)
  store i32 434703634, i32* %7
  br label %83

; <label>:20:                                     ; preds = %8
  %21 = load i64, i64* %5, align 8
  %22 = sub i64 %21, 8806356134394180126
  %23 = add i64 %22, 1
  %24 = add i64 %23, 8806356134394180126
  %25 = add nsw i64 %21, 1
  store i64 %24, i64* %5, align 8
  store i32 -1013202853, i32* %7
  br label %83

; <label>:26:                                     ; preds = %8
  %27 = load i32, i32* @x.13
  %28 = load i32, i32* @y.14
  %29 = add i32 %27, 1221900215
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 1221900215
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1366428087, i32 -1362137335
  store i32 %53, i32* %7
  br label %83

; <label>:54:                                     ; preds = %8
  %55 = load i32, i32* @x.13
  %56 = load i32, i32* @y.14
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -1234065354, i32 -1362137335
  store i32 %80, i32* %7
  br label %83

; <label>:81:                                     ; preds = %8
  ret void

; <label>:82:                                     ; preds = %8
  store i32 -1366428087, i32* %7
  br label %83

; <label>:83:                                     ; preds = %82, %54, %26, %20, %17, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE9push_backEOd(%"class.std::vector.3"*, double* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load double*, double** %4, align 8
  %7 = call dereferenceable(8) double* @_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_(double* dereferenceable(8) %6) #3
  call void @_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_(%"class.std::vector.3"* %5, double* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define void @_Z11inputVectorRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EERx(%"class.std::vector.8"* dereferenceable(24), i64* dereferenceable(8)) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string", align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store i64* %1, i64** %4, align 8
  store i64 0, i64* %5, align 8
  br label %9

; <label>:9:                                      ; preds = %63, %2
  %10 = load i64, i64* %5, align 8
  %11 = load i64*, i64** %4, align 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %14, label %68

; <label>:14:                                     ; preds = %9
  %15 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  call void @_Z10nextStringB5cxx11v(%"class.std::__cxx11::basic_string"* sret %6)
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_(%"class.std::vector.8"* %15, %"class.std::__cxx11::basic_string"* dereferenceable(32) %6)
          to label %16 unwind label %64

; <label>:16:                                     ; preds = %14
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %6) #3
  br label %17

; <label>:17:                                     ; preds = %16
  %18 = load i32, i32* @x.17
  %19 = load i32, i32* @y.18
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %74

; <label>:31:                                     ; preds = %17, %74
  %32 = load i64, i64* %5, align 8
  %33 = add i64 %32, 6297425181399967097
  %34 = add i64 %33, 1
  %35 = sub i64 %34, 6297425181399967097
  %36 = add nsw i64 %32, 1
  store i64 %35, i64* %5, align 8
  %37 = load i32, i32* @x.17
  %38 = load i32, i32* @y.18
  %39 = add i32 %37, -890748375
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -890748375
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %74

; <label>:63:                                     ; preds = %31
  br label %9

; <label>:64:                                     ; preds = %14
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %7, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %8, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %6) #3
  br label %69

; <label>:68:                                     ; preds = %9
  ret void

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %7, align 8
  %71 = load i32, i32* %8, align 4
  %72 = insertvalue { i8*, i32 } undef, i8* %70, 0
  %73 = insertvalue { i8*, i32 } %72, i32 %71, 1
  resume { i8*, i32 } %73

; <label>:74:                                     ; preds = %31, %17
  %75 = load i64, i64* %5, align 8
  %76 = sub i64 0, -71418128241257723
  %77 = sub i64 %76, %75
  %78 = add i64 %77, -71418128241257723
  %79 = sub i64 0, %75
  %80 = add i64 %78, 6258364801756488543
  %81 = add i64 %80, 1
  %82 = sub i64 %81, 6258364801756488543
  %83 = add i64 %78, 1
  %84 = shl i64 %75, 1
  %85 = sub i64 0, 1
  %86 = add i64 %75, %85
  %87 = sub i64 %75, 1
  %88 = mul i64 %86, 1
  %89 = add i64 0, 8562982978230484689
  %90 = sub i64 %89, %75
  %91 = sub i64 %90, 8562982978230484689
  %92 = sub i64 0, %75
  %93 = sub i64 %91, 2514353974902635216
  %94 = add i64 %93, 1
  %95 = add i64 %94, 2514353974902635216
  %96 = add i64 %91, 1
  %97 = sub i64 0, 1
  %98 = sub i64 %75, %97
  %99 = add nsw i64 %75, 1
  store i64 %98, i64* %5, align 8
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_(%"class.std::vector.8"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %7 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %6) #3
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_(%"class.std::vector.8"* %5, %"class.std::__cxx11::basic_string"* dereferenceable(32) %7)
  ret void
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %class.Graph, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca i64, align 8
  %17 = alloca i8, align 1
  %18 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  br label %19

; <label>:19:                                     ; preds = %0, %956
  %20 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %2)
  %21 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %20, i64* dereferenceable(8) %3)
  %22 = load i64, i64* %2, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %19
  br label %957

; <label>:25:                                     ; preds = %19
  %26 = load i32, i32* @x.21
  %27 = load i32, i32* @y.22
  %28 = add i32 %26, -108286633
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -108286633
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %963

; <label>:40:                                     ; preds = %25, %963
  %41 = load i64, i64* %2, align 8
  %42 = load i64, i64* %3, align 8
  %43 = mul nsw i64 %41, %42
  call void @_ZN5GraphC2Ex(%class.Graph* %4, i64 %43)
  store i64 0, i64* %5, align 8
  %44 = load i32, i32* @x.21
  %45 = load i32, i32* @y.22
  %46 = add i32 %44, -1643798260
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1643798260
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %963

; <label>:70:                                     ; preds = %40
  br label %71

; <label>:71:                                     ; preds = %156, %70
  %72 = load i64, i64* %5, align 8
  %73 = load i64, i64* %3, align 8
  %74 = sub i64 0, 1
  %75 = add i64 %73, %74
  %76 = sub nsw i64 %73, 1
  %77 = icmp slt i64 %72, %75
  br i1 %77, label %78, label %163

; <label>:78:                                     ; preds = %71
  store i64 0, i64* %6, align 8
  br label %79

; <label>:79:                                     ; preds = %144, %78
  %80 = load i32, i32* @x.21
  %81 = load i32, i32* @y.22
  %82 = sub i32 %80, -111521391
  %83 = sub i32 %82, 1
  %84 = add i32 %83, -111521391
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %976

; <label>:94:                                     ; preds = %79, %976
  %95 = load i64, i64* %6, align 8
  %96 = load i64, i64* %2, align 8
  %97 = icmp slt i64 %95, %96
  %98 = load i32, i32* @x.21
  %99 = load i32, i32* @y.22
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %976

; <label>:123:                                    ; preds = %94
  br i1 %97, label %124, label %155

; <label>:124:                                    ; preds = %123
  %125 = load i64, i64* %5, align 8
  %126 = load i64, i64* %2, align 8
  %127 = mul nsw i64 %125, %126
  %128 = load i64, i64* %6, align 8
  %129 = sub i64 0, %128
  %130 = sub i64 %127, %129
  %131 = add nsw i64 %127, %128
  %132 = load i64, i64* %5, align 8
  %133 = sub i64 0, 1
  %134 = sub i64 %132, %133
  %135 = add nsw i64 %132, 1
  %136 = load i64, i64* %2, align 8
  %137 = mul nsw i64 %134, %136
  %138 = load i64, i64* %6, align 8
  %139 = add i64 %137, 9121627170700818967
  %140 = add i64 %139, %138
  %141 = sub i64 %140, 9121627170700818967
  %142 = add nsw i64 %137, %138
  invoke void @_ZN5Graph8makeEdgeExxxb(%class.Graph* %4, i64 %130, i64 %141, i64 1, i1 zeroext true)
          to label %143 unwind label %151

; <label>:143:                                    ; preds = %124
  br label %144

; <label>:144:                                    ; preds = %143
  %145 = load i64, i64* %6, align 8
  %146 = sub i64 0, %145
  %147 = sub i64 0, 1
  %148 = add i64 %146, %147
  %149 = sub i64 0, %148
  %150 = add nsw i64 %145, 1
  store i64 %149, i64* %6, align 8
  br label %79

; <label>:151:                                    ; preds = %954, %952, %803, %580, %575, %444, %439, %237, %124
  %152 = landingpad { i8*, i32 }
          cleanup
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %7, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %8, align 4
  call void @_ZN5GraphD2Ev(%class.Graph* %4) #3
  br label %958

; <label>:155:                                    ; preds = %123
  br label %156

; <label>:156:                                    ; preds = %155
  %157 = load i64, i64* %5, align 8
  %158 = sub i64 0, %157
  %159 = sub i64 0, 1
  %160 = add i64 %158, %159
  %161 = sub i64 0, %160
  %162 = add nsw i64 %157, 1
  store i64 %161, i64* %5, align 8
  br label %71

; <label>:163:                                    ; preds = %71
  store i64 0, i64* %9, align 8
  br label %164

; <label>:164:                                    ; preds = %297, %163
  %165 = load i64, i64* %9, align 8
  %166 = load i64, i64* %3, align 8
  %167 = icmp slt i64 %165, %166
  br i1 %167, label %168, label %303

; <label>:168:                                    ; preds = %164
  %169 = load i32, i32* @x.21
  %170 = load i32, i32* @y.22
  %171 = sub i32 %169, -783817713
  %172 = sub i32 %171, 1
  %173 = add i32 %172, -783817713
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  br i1 %181, label %183, label %980

; <label>:183:                                    ; preds = %168, %980
  store i64 0, i64* %10, align 8
  %184 = load i32, i32* @x.21
  %185 = load i32, i32* @y.22
  %186 = add i32 %184, 764478866
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, 764478866
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  br i1 %196, label %198, label %980

; <label>:198:                                    ; preds = %183
  br label %199

; <label>:199:                                    ; preds = %289, %198
  %200 = load i32, i32* @x.21
  %201 = load i32, i32* @y.22
  %202 = add i32 %200, 476760419
  %203 = sub i32 %202, 1
  %204 = sub i32 %203, 476760419
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = and i1 %208, %209
  %211 = xor i1 %208, %209
  %212 = or i1 %210, %211
  %213 = or i1 %208, %209
  br i1 %212, label %214, label %981

; <label>:214:                                    ; preds = %199, %981
  %215 = load i64, i64* %10, align 8
  %216 = load i64, i64* %2, align 8
  %217 = sub i64 %216, -603675740175025640
  %218 = sub i64 %217, 1
  %219 = add i64 %218, -603675740175025640
  %220 = sub nsw i64 %216, 1
  %221 = icmp slt i64 %215, %219
  %222 = load i32, i32* @x.21
  %223 = load i32, i32* @y.22
  %224 = sub i32 %222, 877239944
  %225 = sub i32 %224, 1
  %226 = add i32 %225, 877239944
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  br i1 %234, label %236, label %981

; <label>:236:                                    ; preds = %214
  br i1 %221, label %237, label %296

; <label>:237:                                    ; preds = %236
  %238 = load i64, i64* %9, align 8
  %239 = load i64, i64* %2, align 8
  %240 = mul nsw i64 %238, %239
  %241 = load i64, i64* %10, align 8
  %242 = add i64 %240, -1084540370959889386
  %243 = add i64 %242, %241
  %244 = sub i64 %243, -1084540370959889386
  %245 = add nsw i64 %240, %241
  %246 = load i64, i64* %9, align 8
  %247 = load i64, i64* %2, align 8
  %248 = mul nsw i64 %246, %247
  %249 = load i64, i64* %10, align 8
  %250 = sub i64 %248, -8696185038620798138
  %251 = add i64 %250, %249
  %252 = add i64 %251, -8696185038620798138
  %253 = add nsw i64 %248, %249
  %254 = add i64 %252, 2047787188082894911
  %255 = add i64 %254, 1
  %256 = sub i64 %255, 2047787188082894911
  %257 = add nsw i64 %252, 1
  invoke void @_ZN5Graph8makeEdgeExxxb(%class.Graph* %4, i64 %244, i64 %256, i64 1, i1 zeroext true)
          to label %258 unwind label %151

; <label>:258:                                    ; preds = %237
  %259 = load i32, i32* @x.21
  %260 = load i32, i32* @y.22
  %261 = sub i32 %259, -235251730
  %262 = sub i32 %261, 1
  %263 = add i32 %262, -235251730
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = and i1 %267, %268
  %270 = xor i1 %267, %268
  %271 = or i1 %269, %270
  %272 = or i1 %267, %268
  br i1 %271, label %273, label %1017

; <label>:273:                                    ; preds = %258, %1017
  %274 = load i32, i32* @x.21
  %275 = load i32, i32* @y.22
  %276 = sub i32 %274, -1930330108
  %277 = sub i32 %276, 1
  %278 = add i32 %277, -1930330108
  %279 = sub i32 %274, 1
  %280 = mul i32 %274, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %275, 10
  %284 = and i1 %282, %283
  %285 = xor i1 %282, %283
  %286 = or i1 %284, %285
  %287 = or i1 %282, %283
  br i1 %286, label %288, label %1017

; <label>:288:                                    ; preds = %273
  br label %289

; <label>:289:                                    ; preds = %288
  %290 = load i64, i64* %10, align 8
  %291 = sub i64 0, %290
  %292 = sub i64 0, 1
  %293 = add i64 %291, %292
  %294 = sub i64 0, %293
  %295 = add nsw i64 %290, 1
  store i64 %294, i64* %10, align 8
  br label %199

; <label>:296:                                    ; preds = %236
  br label %297

; <label>:297:                                    ; preds = %296
  %298 = load i64, i64* %9, align 8
  %299 = sub i64 %298, 5317550179339407952
  %300 = add i64 %299, 1
  %301 = add i64 %300, 5317550179339407952
  %302 = add nsw i64 %298, 1
  store i64 %301, i64* %9, align 8
  br label %164

; <label>:303:                                    ; preds = %164
  %304 = load i32, i32* @x.21
  %305 = load i32, i32* @y.22
  %306 = sub i32 0, 1
  %307 = add i32 %304, %306
  %308 = sub i32 %304, 1
  %309 = mul i32 %304, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %305, 10
  %313 = xor i1 %311, true
  %314 = xor i1 %312, true
  %315 = xor i1 true, true
  %316 = and i1 %313, true
  %317 = and i1 %311, %315
  %318 = and i1 %314, true
  %319 = and i1 %312, %315
  %320 = or i1 %316, %317
  %321 = or i1 %318, %319
  %322 = xor i1 %320, %321
  %323 = or i1 %313, %314
  %324 = xor i1 %323, true
  %325 = or i1 true, %315
  %326 = and i1 %324, %325
  %327 = or i1 %322, %326
  %328 = or i1 %311, %312
  br i1 %327, label %329, label %1018

; <label>:329:                                    ; preds = %303, %1018
  store i64 0, i64* %11, align 8
  store i64 0, i64* %12, align 8
  %330 = load i32, i32* @x.21
  %331 = load i32, i32* @y.22
  %332 = add i32 %330, 1001141802
  %333 = sub i32 %332, 1
  %334 = sub i32 %333, 1001141802
  %335 = sub i32 %330, 1
  %336 = mul i32 %330, %334
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %331, 10
  %340 = and i1 %338, %339
  %341 = xor i1 %338, %339
  %342 = or i1 %340, %341
  %343 = or i1 %338, %339
  br i1 %342, label %344, label %1018

; <label>:344:                                    ; preds = %329
  br label %345

; <label>:345:                                    ; preds = %750, %344
  %346 = load i32, i32* @x.21
  %347 = load i32, i32* @y.22
  %348 = add i32 %346, -1241968368
  %349 = sub i32 %348, 1
  %350 = sub i32 %349, -1241968368
  %351 = sub i32 %346, 1
  %352 = mul i32 %346, %350
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %347, 10
  %356 = and i1 %354, %355
  %357 = xor i1 %354, %355
  %358 = or i1 %356, %357
  %359 = or i1 %354, %355
  br i1 %358, label %360, label %1019

; <label>:360:                                    ; preds = %345, %1019
  %361 = load i64, i64* %12, align 8
  %362 = load i64, i64* %3, align 8
  %363 = mul nsw i64 %362, 2
  %364 = sub i64 %363, 5105652038963424637
  %365 = sub i64 %364, 1
  %366 = add i64 %365, 5105652038963424637
  %367 = sub nsw i64 %363, 1
  %368 = icmp slt i64 %361, %366
  %369 = load i32, i32* @x.21
  %370 = load i32, i32* @y.22
  %371 = sub i32 %369, -1388817495
  %372 = sub i32 %371, 1
  %373 = add i32 %372, -1388817495
  %374 = sub i32 %369, 1
  %375 = mul i32 %369, %373
  %376 = urem i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %370, 10
  %379 = and i1 %377, %378
  %380 = xor i1 %377, %378
  %381 = or i1 %379, %380
  %382 = or i1 %377, %378
  br i1 %381, label %383, label %1019

; <label>:383:                                    ; preds = %360
  br i1 %368, label %384, label %755

; <label>:384:                                    ; preds = %383
  %385 = load i32, i32* @x.21
  %386 = load i32, i32* @y.22
  %387 = add i32 %385, 174392566
  %388 = sub i32 %387, 1
  %389 = sub i32 %388, 174392566
  %390 = sub i32 %385, 1
  %391 = mul i32 %385, %389
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %386, 10
  %395 = and i1 %393, %394
  %396 = xor i1 %393, %394
  %397 = or i1 %395, %396
  %398 = or i1 %393, %394
  br i1 %397, label %399, label %1082

; <label>:399:                                    ; preds = %384, %1082
  %400 = load i64, i64* %12, align 8
  %401 = sdiv i64 %400, 2
  store i64 %401, i64* %13, align 8
  %402 = load i64, i64* %12, align 8
  %403 = srem i64 %402, 2
  %404 = icmp eq i64 %403, 0
  %405 = load i32, i32* @x.21
  %406 = load i32, i32* @y.22
  %407 = sub i32 0, 1
  %408 = add i32 %405, %407
  %409 = sub i32 %405, 1
  %410 = mul i32 %405, %408
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %406, 10
  %414 = xor i1 %412, true
  %415 = xor i1 %413, true
  %416 = xor i1 false, true
  %417 = and i1 %414, false
  %418 = and i1 %412, %416
  %419 = and i1 %415, false
  %420 = and i1 %413, %416
  %421 = or i1 %417, %418
  %422 = or i1 %419, %420
  %423 = xor i1 %421, %422
  %424 = or i1 %414, %415
  %425 = xor i1 %424, true
  %426 = or i1 false, %416
  %427 = and i1 %425, %426
  %428 = or i1 %423, %427
  %429 = or i1 %412, %413
  br i1 %428, label %430, label %1082

; <label>:430:                                    ; preds = %399
  br i1 %404, label %431, label %475

; <label>:431:                                    ; preds = %430
  store i64 0, i64* %14, align 8
  br label %432

; <label>:432:                                    ; preds = %468, %431
  %433 = load i64, i64* %14, align 8
  %434 = load i64, i64* %2, align 8
  %435 = sub i64 0, 1
  %436 = add i64 %434, %435
  %437 = sub nsw i64 %434, 1
  %438 = icmp slt i64 %433, %436
  br i1 %438, label %439, label %474

; <label>:439:                                    ; preds = %432
  %440 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERb(%"class.std::basic_istream"* @_ZSt3cin, i8* dereferenceable(1) %15)
          to label %441 unwind label %151

; <label>:441:                                    ; preds = %439
  %442 = load i8, i8* %15, align 1
  %443 = trunc i8 %442 to i1
  br i1 %443, label %444, label %467

; <label>:444:                                    ; preds = %441
  %445 = load i64, i64* %13, align 8
  %446 = load i64, i64* %2, align 8
  %447 = mul nsw i64 %445, %446
  %448 = load i64, i64* %14, align 8
  %449 = sub i64 %447, 452068486504765037
  %450 = add i64 %449, %448
  %451 = add i64 %450, 452068486504765037
  %452 = add nsw i64 %447, %448
  %453 = load i64, i64* %13, align 8
  %454 = load i64, i64* %2, align 8
  %455 = mul nsw i64 %453, %454
  %456 = load i64, i64* %14, align 8
  %457 = add i64 %455, 1328535269925141032
  %458 = add i64 %457, %456
  %459 = sub i64 %458, 1328535269925141032
  %460 = add nsw i64 %455, %456
  %461 = sub i64 %459, 4251484287011164080
  %462 = add i64 %461, 1
  %463 = add i64 %462, 4251484287011164080
  %464 = add nsw i64 %459, 1
  %465 = invoke zeroext i1 @_ZN5Graph10deleteEdgeExxb(%class.Graph* %4, i64 %451, i64 %463, i1 zeroext true)
          to label %466 unwind label %151

; <label>:466:                                    ; preds = %444
  br label %467

; <label>:467:                                    ; preds = %466, %441
  br label %468

; <label>:468:                                    ; preds = %467
  %469 = load i64, i64* %14, align 8
  %470 = sub i64 %469, -205745549844380647
  %471 = add i64 %470, 1
  %472 = add i64 %471, -205745549844380647
  %473 = add nsw i64 %469, 1
  store i64 %472, i64* %14, align 8
  br label %432

; <label>:474:                                    ; preds = %432
  br label %708

; <label>:475:                                    ; preds = %430
  %476 = load i32, i32* @x.21
  %477 = load i32, i32* @y.22
  %478 = add i32 %476, -2032122706
  %479 = sub i32 %478, 1
  %480 = sub i32 %479, -2032122706
  %481 = sub i32 %476, 1
  %482 = mul i32 %476, %480
  %483 = urem i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %477, 10
  %486 = xor i1 %484, true
  %487 = xor i1 %485, true
  %488 = xor i1 true, true
  %489 = and i1 %486, true
  %490 = and i1 %484, %488
  %491 = and i1 %487, true
  %492 = and i1 %485, %488
  %493 = or i1 %489, %490
  %494 = or i1 %491, %492
  %495 = xor i1 %493, %494
  %496 = or i1 %486, %487
  %497 = xor i1 %496, true
  %498 = or i1 true, %488
  %499 = and i1 %497, %498
  %500 = or i1 %495, %499
  %501 = or i1 %484, %485
  br i1 %500, label %502, label %1152

; <label>:502:                                    ; preds = %475, %1152
  store i64 0, i64* %16, align 8
  %503 = load i32, i32* @x.21
  %504 = load i32, i32* @y.22
  %505 = sub i32 %503, -1840543188
  %506 = sub i32 %505, 1
  %507 = add i32 %506, -1840543188
  %508 = sub i32 %503, 1
  %509 = mul i32 %503, %507
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %504, 10
  %513 = xor i1 %511, true
  %514 = xor i1 %512, true
  %515 = xor i1 true, true
  %516 = and i1 %513, true
  %517 = and i1 %511, %515
  %518 = and i1 %514, true
  %519 = and i1 %512, %515
  %520 = or i1 %516, %517
  %521 = or i1 %518, %519
  %522 = xor i1 %520, %521
  %523 = or i1 %513, %514
  %524 = xor i1 %523, true
  %525 = or i1 true, %515
  %526 = and i1 %524, %525
  %527 = or i1 %522, %526
  %528 = or i1 %511, %512
  br i1 %527, label %529, label %1152

; <label>:529:                                    ; preds = %502
  br label %530

; <label>:530:                                    ; preds = %701, %529
  %531 = load i64, i64* %16, align 8
  %532 = load i64, i64* %2, align 8
  %533 = icmp slt i64 %531, %532
  br i1 %533, label %534, label %707

; <label>:534:                                    ; preds = %530
  %535 = load i32, i32* @x.21
  %536 = load i32, i32* @y.22
  %537 = sub i32 0, 1
  %538 = add i32 %535, %537
  %539 = sub i32 %535, 1
  %540 = mul i32 %535, %538
  %541 = urem i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = icmp slt i32 %536, 10
  %544 = and i1 %542, %543
  %545 = xor i1 %542, %543
  %546 = or i1 %544, %545
  %547 = or i1 %542, %543
  br i1 %546, label %548, label %1153

; <label>:548:                                    ; preds = %534, %1153
  %549 = load i32, i32* @x.21
  %550 = load i32, i32* @y.22
  %551 = add i32 %549, -737303430
  %552 = sub i32 %551, 1
  %553 = sub i32 %552, -737303430
  %554 = sub i32 %549, 1
  %555 = mul i32 %549, %553
  %556 = urem i32 %555, 2
  %557 = icmp eq i32 %556, 0
  %558 = icmp slt i32 %550, 10
  %559 = xor i1 %557, true
  %560 = xor i1 %558, true
  %561 = xor i1 false, true
  %562 = and i1 %559, false
  %563 = and i1 %557, %561
  %564 = and i1 %560, false
  %565 = and i1 %558, %561
  %566 = or i1 %562, %563
  %567 = or i1 %564, %565
  %568 = xor i1 %566, %567
  %569 = or i1 %559, %560
  %570 = xor i1 %569, true
  %571 = or i1 false, %561
  %572 = and i1 %570, %571
  %573 = or i1 %568, %572
  %574 = or i1 %557, %558
  br i1 %573, label %575, label %1153

; <label>:575:                                    ; preds = %548
  %576 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERb(%"class.std::basic_istream"* @_ZSt3cin, i8* dereferenceable(1) %17)
          to label %577 unwind label %151

; <label>:577:                                    ; preds = %575
  %578 = load i8, i8* %17, align 1
  %579 = trunc i8 %578 to i1
  br i1 %579, label %580, label %646

; <label>:580:                                    ; preds = %577
  %581 = load i64, i64* %13, align 8
  %582 = load i64, i64* %2, align 8
  %583 = mul nsw i64 %581, %582
  %584 = load i64, i64* %16, align 8
  %585 = add i64 %583, 1854348318587860973
  %586 = add i64 %585, %584
  %587 = sub i64 %586, 1854348318587860973
  %588 = add nsw i64 %583, %584
  %589 = load i64, i64* %13, align 8
  %590 = sub i64 0, %589
  %591 = sub i64 0, 1
  %592 = add i64 %590, %591
  %593 = sub i64 0, %592
  %594 = add nsw i64 %589, 1
  %595 = load i64, i64* %2, align 8
  %596 = mul nsw i64 %593, %595
  %597 = load i64, i64* %16, align 8
  %598 = sub i64 %596, 4236084837158272205
  %599 = add i64 %598, %597
  %600 = add i64 %599, 4236084837158272205
  %601 = add nsw i64 %596, %597
  %602 = invoke zeroext i1 @_ZN5Graph10deleteEdgeExxb(%class.Graph* %4, i64 %587, i64 %600, i1 zeroext true)
          to label %603 unwind label %151

; <label>:603:                                    ; preds = %580
  %604 = load i32, i32* @x.21
  %605 = load i32, i32* @y.22
  %606 = add i32 %604, -951593747
  %607 = sub i32 %606, 1
  %608 = sub i32 %607, -951593747
  %609 = sub i32 %604, 1
  %610 = mul i32 %604, %608
  %611 = urem i32 %610, 2
  %612 = icmp eq i32 %611, 0
  %613 = icmp slt i32 %605, 10
  %614 = xor i1 %612, true
  %615 = xor i1 %613, true
  %616 = xor i1 true, true
  %617 = and i1 %614, true
  %618 = and i1 %612, %616
  %619 = and i1 %615, true
  %620 = and i1 %613, %616
  %621 = or i1 %617, %618
  %622 = or i1 %619, %620
  %623 = xor i1 %621, %622
  %624 = or i1 %614, %615
  %625 = xor i1 %624, true
  %626 = or i1 true, %616
  %627 = and i1 %625, %626
  %628 = or i1 %623, %627
  %629 = or i1 %612, %613
  br i1 %628, label %630, label %1154

; <label>:630:                                    ; preds = %603, %1154
  %631 = load i32, i32* @x.21
  %632 = load i32, i32* @y.22
  %633 = sub i32 %631, -871968040
  %634 = sub i32 %633, 1
  %635 = add i32 %634, -871968040
  %636 = sub i32 %631, 1
  %637 = mul i32 %631, %635
  %638 = urem i32 %637, 2
  %639 = icmp eq i32 %638, 0
  %640 = icmp slt i32 %632, 10
  %641 = and i1 %639, %640
  %642 = xor i1 %639, %640
  %643 = or i1 %641, %642
  %644 = or i1 %639, %640
  br i1 %643, label %645, label %1154

; <label>:645:                                    ; preds = %630
  br label %646

; <label>:646:                                    ; preds = %645, %577
  %647 = load i32, i32* @x.21
  %648 = load i32, i32* @y.22
  %649 = add i32 %647, -1168499509
  %650 = sub i32 %649, 1
  %651 = sub i32 %650, -1168499509
  %652 = sub i32 %647, 1
  %653 = mul i32 %647, %651
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %648, 10
  %657 = xor i1 %655, true
  %658 = xor i1 %656, true
  %659 = xor i1 false, true
  %660 = and i1 %657, false
  %661 = and i1 %655, %659
  %662 = and i1 %658, false
  %663 = and i1 %656, %659
  %664 = or i1 %660, %661
  %665 = or i1 %662, %663
  %666 = xor i1 %664, %665
  %667 = or i1 %657, %658
  %668 = xor i1 %667, true
  %669 = or i1 false, %659
  %670 = and i1 %668, %669
  %671 = or i1 %666, %670
  %672 = or i1 %655, %656
  br i1 %671, label %673, label %1155

; <label>:673:                                    ; preds = %646, %1155
  %674 = load i32, i32* @x.21
  %675 = load i32, i32* @y.22
  %676 = sub i32 %674, -848433046
  %677 = sub i32 %676, 1
  %678 = add i32 %677, -848433046
  %679 = sub i32 %674, 1
  %680 = mul i32 %674, %678
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %675, 10
  %684 = xor i1 %682, true
  %685 = xor i1 %683, true
  %686 = xor i1 false, true
  %687 = and i1 %684, false
  %688 = and i1 %682, %686
  %689 = and i1 %685, false
  %690 = and i1 %683, %686
  %691 = or i1 %687, %688
  %692 = or i1 %689, %690
  %693 = xor i1 %691, %692
  %694 = or i1 %684, %685
  %695 = xor i1 %694, true
  %696 = or i1 false, %686
  %697 = and i1 %695, %696
  %698 = or i1 %693, %697
  %699 = or i1 %682, %683
  br i1 %698, label %700, label %1155

; <label>:700:                                    ; preds = %673
  br label %701

; <label>:701:                                    ; preds = %700
  %702 = load i64, i64* %16, align 8
  %703 = add i64 %702, 1133063781990103053
  %704 = add i64 %703, 1
  %705 = sub i64 %704, 1133063781990103053
  %706 = add nsw i64 %702, 1
  store i64 %705, i64* %16, align 8
  br label %530

; <label>:707:                                    ; preds = %530
  br label %708

; <label>:708:                                    ; preds = %707, %474
  %709 = load i32, i32* @x.21
  %710 = load i32, i32* @y.22
  %711 = sub i32 0, 1
  %712 = add i32 %709, %711
  %713 = sub i32 %709, 1
  %714 = mul i32 %709, %712
  %715 = urem i32 %714, 2
  %716 = icmp eq i32 %715, 0
  %717 = icmp slt i32 %710, 10
  %718 = and i1 %716, %717
  %719 = xor i1 %716, %717
  %720 = or i1 %718, %719
  %721 = or i1 %716, %717
  br i1 %720, label %722, label %1156

; <label>:722:                                    ; preds = %708, %1156
  %723 = load i32, i32* @x.21
  %724 = load i32, i32* @y.22
  %725 = add i32 %723, 1172203054
  %726 = sub i32 %725, 1
  %727 = sub i32 %726, 1172203054
  %728 = sub i32 %723, 1
  %729 = mul i32 %723, %727
  %730 = urem i32 %729, 2
  %731 = icmp eq i32 %730, 0
  %732 = icmp slt i32 %724, 10
  %733 = xor i1 %731, true
  %734 = xor i1 %732, true
  %735 = xor i1 true, true
  %736 = and i1 %733, true
  %737 = and i1 %731, %735
  %738 = and i1 %734, true
  %739 = and i1 %732, %735
  %740 = or i1 %736, %737
  %741 = or i1 %738, %739
  %742 = xor i1 %740, %741
  %743 = or i1 %733, %734
  %744 = xor i1 %743, true
  %745 = or i1 true, %735
  %746 = and i1 %744, %745
  %747 = or i1 %742, %746
  %748 = or i1 %731, %732
  br i1 %747, label %749, label %1156

; <label>:749:                                    ; preds = %722
  br label %750

; <label>:750:                                    ; preds = %749
  %751 = load i64, i64* %12, align 8
  %752 = sub i64 0, 1
  %753 = sub i64 %751, %752
  %754 = add nsw i64 %751, 1
  store i64 %753, i64* %12, align 8
  br label %345

; <label>:755:                                    ; preds = %383
  %756 = load i32, i32* @x.21
  %757 = load i32, i32* @y.22
  %758 = sub i32 0, 1
  %759 = add i32 %756, %758
  %760 = sub i32 %756, 1
  %761 = mul i32 %756, %759
  %762 = urem i32 %761, 2
  %763 = icmp eq i32 %762, 0
  %764 = icmp slt i32 %757, 10
  %765 = xor i1 %763, true
  %766 = xor i1 %764, true
  %767 = xor i1 false, true
  %768 = and i1 %765, false
  %769 = and i1 %763, %767
  %770 = and i1 %766, false
  %771 = and i1 %764, %767
  %772 = or i1 %768, %769
  %773 = or i1 %770, %771
  %774 = xor i1 %772, %773
  %775 = or i1 %765, %766
  %776 = xor i1 %775, true
  %777 = or i1 false, %767
  %778 = and i1 %776, %777
  %779 = or i1 %774, %778
  %780 = or i1 %763, %764
  br i1 %779, label %781, label %1157

; <label>:781:                                    ; preds = %755, %1157
  %782 = load i64, i64* %3, align 8
  %783 = load i64, i64* %2, align 8
  %784 = mul nsw i64 %782, %783
  %785 = sub i64 %784, -6737718171706464317
  %786 = sub i64 %785, 1
  %787 = add i64 %786, -6737718171706464317
  %788 = sub nsw i64 %784, 1
  %789 = load i32, i32* @x.21
  %790 = load i32, i32* @y.22
  %791 = add i32 %789, -69423454
  %792 = sub i32 %791, 1
  %793 = sub i32 %792, -69423454
  %794 = sub i32 %789, 1
  %795 = mul i32 %789, %793
  %796 = urem i32 %795, 2
  %797 = icmp eq i32 %796, 0
  %798 = icmp slt i32 %790, 10
  %799 = and i1 %797, %798
  %800 = xor i1 %797, %798
  %801 = or i1 %799, %800
  %802 = or i1 %797, %798
  br i1 %801, label %803, label %1157

; <label>:803:                                    ; preds = %781
  %804 = invoke i64 @_ZN5Graph8dijkstraExx(%class.Graph* %4, i64 0, i64 %787)
          to label %805 unwind label %151

; <label>:805:                                    ; preds = %803
  %806 = load i32, i32* @x.21
  %807 = load i32, i32* @y.22
  %808 = sub i32 %806, -829745368
  %809 = sub i32 %808, 1
  %810 = add i32 %809, -829745368
  %811 = sub i32 %806, 1
  %812 = mul i32 %806, %810
  %813 = urem i32 %812, 2
  %814 = icmp eq i32 %813, 0
  %815 = icmp slt i32 %807, 10
  %816 = and i1 %814, %815
  %817 = xor i1 %814, %815
  %818 = or i1 %816, %817
  %819 = or i1 %814, %815
  br i1 %818, label %820, label %1191

; <label>:820:                                    ; preds = %805, %1191
  store i64 %804, i64* %18, align 8
  %821 = load i64, i64* %18, align 8
  %822 = icmp eq i64 %821, 9223372036854775807
  %823 = load i32, i32* @x.21
  %824 = load i32, i32* @y.22
  %825 = sub i32 0, 1
  %826 = add i32 %823, %825
  %827 = sub i32 %823, 1
  %828 = mul i32 %823, %826
  %829 = urem i32 %828, 2
  %830 = icmp eq i32 %829, 0
  %831 = icmp slt i32 %824, 10
  %832 = and i1 %830, %831
  %833 = xor i1 %830, %831
  %834 = or i1 %832, %833
  %835 = or i1 %830, %831
  br i1 %834, label %836, label %1191

; <label>:836:                                    ; preds = %820
  br i1 %822, label %837, label %891

; <label>:837:                                    ; preds = %836
  %838 = load i32, i32* @x.21
  %839 = load i32, i32* @y.22
  %840 = sub i32 0, 1
  %841 = add i32 %838, %840
  %842 = sub i32 %838, 1
  %843 = mul i32 %838, %841
  %844 = urem i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = icmp slt i32 %839, 10
  %847 = xor i1 %845, true
  %848 = xor i1 %846, true
  %849 = xor i1 false, true
  %850 = and i1 %847, false
  %851 = and i1 %845, %849
  %852 = and i1 %848, false
  %853 = and i1 %846, %849
  %854 = or i1 %850, %851
  %855 = or i1 %852, %853
  %856 = xor i1 %854, %855
  %857 = or i1 %847, %848
  %858 = xor i1 %857, true
  %859 = or i1 false, %849
  %860 = and i1 %858, %859
  %861 = or i1 %856, %860
  %862 = or i1 %845, %846
  br i1 %861, label %863, label %1194

; <label>:863:                                    ; preds = %837, %1194
  %864 = load i32, i32* @x.21
  %865 = load i32, i32* @y.22
  %866 = add i32 %864, -663197301
  %867 = sub i32 %866, 1
  %868 = sub i32 %867, -663197301
  %869 = sub i32 %864, 1
  %870 = mul i32 %864, %868
  %871 = urem i32 %870, 2
  %872 = icmp eq i32 %871, 0
  %873 = icmp slt i32 %865, 10
  %874 = xor i1 %872, true
  %875 = xor i1 %873, true
  %876 = xor i1 true, true
  %877 = and i1 %874, true
  %878 = and i1 %872, %876
  %879 = and i1 %875, true
  %880 = and i1 %873, %876
  %881 = or i1 %877, %878
  %882 = or i1 %879, %880
  %883 = xor i1 %881, %882
  %884 = or i1 %874, %875
  %885 = xor i1 %884, true
  %886 = or i1 true, %876
  %887 = and i1 %885, %886
  %888 = or i1 %883, %887
  %889 = or i1 %872, %873
  br i1 %888, label %890, label %1194

; <label>:890:                                    ; preds = %863
  br label %897

; <label>:891:                                    ; preds = %836
  %892 = load i64, i64* %18, align 8
  %893 = sub i64 %892, -6346745442349427858
  %894 = add i64 %893, 1
  %895 = add i64 %894, -6346745442349427858
  %896 = add nsw i64 %892, 1
  br label %897

; <label>:897:                                    ; preds = %891, %890
  %898 = phi i64 [ 0, %890 ], [ %895, %891 ]
  %899 = load i32, i32* @x.21
  %900 = load i32, i32* @y.22
  %901 = add i32 %899, -1846124422
  %902 = sub i32 %901, 1
  %903 = sub i32 %902, -1846124422
  %904 = sub i32 %899, 1
  %905 = mul i32 %899, %903
  %906 = urem i32 %905, 2
  %907 = icmp eq i32 %906, 0
  %908 = icmp slt i32 %900, 10
  %909 = xor i1 %907, true
  %910 = xor i1 %908, true
  %911 = xor i1 false, true
  %912 = and i1 %909, false
  %913 = and i1 %907, %911
  %914 = and i1 %910, false
  %915 = and i1 %908, %911
  %916 = or i1 %912, %913
  %917 = or i1 %914, %915
  %918 = xor i1 %916, %917
  %919 = or i1 %909, %910
  %920 = xor i1 %919, true
  %921 = or i1 false, %911
  %922 = and i1 %920, %921
  %923 = or i1 %918, %922
  %924 = or i1 %907, %908
  br i1 %923, label %925, label %1195

; <label>:925:                                    ; preds = %897, %1195
  %926 = load i32, i32* @x.21
  %927 = load i32, i32* @y.22
  %928 = add i32 %926, -291612238
  %929 = sub i32 %928, 1
  %930 = sub i32 %929, -291612238
  %931 = sub i32 %926, 1
  %932 = mul i32 %926, %930
  %933 = urem i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = icmp slt i32 %927, 10
  %936 = xor i1 %934, true
  %937 = xor i1 %935, true
  %938 = xor i1 true, true
  %939 = and i1 %936, true
  %940 = and i1 %934, %938
  %941 = and i1 %937, true
  %942 = and i1 %935, %938
  %943 = or i1 %939, %940
  %944 = or i1 %941, %942
  %945 = xor i1 %943, %944
  %946 = or i1 %936, %937
  %947 = xor i1 %946, true
  %948 = or i1 true, %938
  %949 = and i1 %947, %948
  %950 = or i1 %945, %949
  %951 = or i1 %934, %935
  br i1 %950, label %952, label %1195

; <label>:952:                                    ; preds = %925
  %953 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %898)
          to label %954 unwind label %151

; <label>:954:                                    ; preds = %952
  %955 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %953, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %956 unwind label %151

; <label>:956:                                    ; preds = %954
  call void @_ZN5GraphD2Ev(%class.Graph* %4) #3
  br label %19

; <label>:957:                                    ; preds = %24
  ret i32 0

; <label>:958:                                    ; preds = %151
  %959 = load i8*, i8** %7, align 8
  %960 = load i32, i32* %8, align 4
  %961 = insertvalue { i8*, i32 } undef, i8* %959, 0
  %962 = insertvalue { i8*, i32 } %961, i32 %960, 1
  resume { i8*, i32 } %962

; <label>:963:                                    ; preds = %40, %25
  %964 = load i64, i64* %2, align 8
  %965 = load i64, i64* %3, align 8
  %966 = sub i64 0, %965
  %967 = add i64 %964, %966
  %968 = sub i64 %964, %965
  %969 = mul i64 %967, %965
  %970 = add i64 %964, 644617877691137441
  %971 = sub i64 %970, %965
  %972 = sub i64 %971, 644617877691137441
  %973 = sub i64 %964, %965
  %974 = mul i64 %972, %965
  %975 = mul nsw i64 %964, %965
  call void @_ZN5GraphC2Ex(%class.Graph* %4, i64 %975)
  store i64 0, i64* %5, align 8
  br label %40

; <label>:976:                                    ; preds = %94, %79
  %977 = load i64, i64* %6, align 8
  %978 = load i64, i64* %2, align 8
  %979 = icmp slt i64 %977, %978
  br label %94

; <label>:980:                                    ; preds = %183, %168
  store i64 0, i64* %10, align 8
  br label %183

; <label>:981:                                    ; preds = %214, %199
  %982 = load i64, i64* %10, align 8
  %983 = load i64, i64* %2, align 8
  %984 = sub i64 %983, 3783247622472175929
  %985 = sub i64 %984, 1
  %986 = add i64 %985, 3783247622472175929
  %987 = sub i64 %983, 1
  %988 = mul i64 %986, 1
  %989 = sub i64 %983, 8146727578715245921
  %990 = sub i64 %989, 1
  %991 = add i64 %990, 8146727578715245921
  %992 = sub i64 %983, 1
  %993 = mul i64 %991, 1
  %994 = shl i64 %983, 1
  %995 = shl i64 %983, 1
  %996 = sub i64 0, -1927114265645193489
  %997 = sub i64 %996, %983
  %998 = add i64 %997, -1927114265645193489
  %999 = sub i64 0, %983
  %1000 = add i64 %998, -3010985330790656146
  %1001 = add i64 %1000, 1
  %1002 = sub i64 %1001, -3010985330790656146
  %1003 = add i64 %998, 1
  %1004 = sub i64 0, 1
  %1005 = add i64 %983, %1004
  %1006 = sub i64 %983, 1
  %1007 = mul i64 %1005, 1
  %1008 = shl i64 %983, 1
  %1009 = sub i64 0, 1
  %1010 = add i64 %983, %1009
  %1011 = sub i64 %983, 1
  %1012 = mul i64 %1010, 1
  %1013 = sub i64 0, 1
  %1014 = add i64 %983, %1013
  %1015 = sub nsw i64 %983, 1
  %1016 = icmp slt i64 %982, %1014
  br label %214

; <label>:1017:                                   ; preds = %273, %258
  br label %273

; <label>:1018:                                   ; preds = %329, %303
  store i64 0, i64* %11, align 8
  store i64 0, i64* %12, align 8
  br label %329

; <label>:1019:                                   ; preds = %360, %345
  %1020 = load i64, i64* %12, align 8
  %1021 = load i64, i64* %3, align 8
  %1022 = shl i64 %1021, 2
  %1023 = sub i64 0, %1021
  %1024 = add i64 0, %1023
  %1025 = sub i64 0, %1021
  %1026 = sub i64 %1024, 2629968252981098069
  %1027 = add i64 %1026, 2
  %1028 = add i64 %1027, 2629968252981098069
  %1029 = add i64 %1024, 2
  %1030 = sub i64 0, 2
  %1031 = add i64 %1021, %1030
  %1032 = sub i64 %1021, 2
  %1033 = mul i64 %1031, 2
  %1034 = sub i64 0, 2
  %1035 = add i64 %1021, %1034
  %1036 = sub i64 %1021, 2
  %1037 = mul i64 %1035, 2
  %1038 = add i64 0, -2230755590464720405
  %1039 = sub i64 %1038, %1021
  %1040 = sub i64 %1039, -2230755590464720405
  %1041 = sub i64 0, %1021
  %1042 = sub i64 0, 2
  %1043 = sub i64 %1040, %1042
  %1044 = add i64 %1040, 2
  %1045 = sub i64 0, 2
  %1046 = add i64 %1021, %1045
  %1047 = sub i64 %1021, 2
  %1048 = mul i64 %1046, 2
  %1049 = sub i64 0, %1021
  %1050 = add i64 0, %1049
  %1051 = sub i64 0, %1021
  %1052 = sub i64 0, %1050
  %1053 = sub i64 0, 2
  %1054 = add i64 %1052, %1053
  %1055 = sub i64 0, %1054
  %1056 = add i64 %1050, 2
  %1057 = mul nsw i64 %1021, 2
  %1058 = shl i64 %1057, 1
  %1059 = sub i64 0, %1057
  %1060 = add i64 0, %1059
  %1061 = sub i64 0, %1057
  %1062 = sub i64 %1060, 3210167143576632113
  %1063 = add i64 %1062, 1
  %1064 = add i64 %1063, 3210167143576632113
  %1065 = add i64 %1060, 1
  %1066 = sub i64 0, 6943974897057699978
  %1067 = sub i64 %1066, %1057
  %1068 = add i64 %1067, 6943974897057699978
  %1069 = sub i64 0, %1057
  %1070 = sub i64 %1068, -9186258123494725161
  %1071 = add i64 %1070, 1
  %1072 = add i64 %1071, -9186258123494725161
  %1073 = add i64 %1068, 1
  %1074 = sub i64 0, 1
  %1075 = add i64 %1057, %1074
  %1076 = sub i64 %1057, 1
  %1077 = mul i64 %1075, 1
  %1078 = sub i64 0, 1
  %1079 = add i64 %1057, %1078
  %1080 = sub nsw i64 %1057, 1
  %1081 = icmp slt i64 %1020, %1079
  br label %360

; <label>:1082:                                   ; preds = %399, %384
  %1083 = load i64, i64* %12, align 8
  %1084 = sub i64 0, %1083
  %1085 = add i64 0, %1084
  %1086 = sub i64 0, %1083
  %1087 = add i64 %1085, 3214140470373958659
  %1088 = add i64 %1087, 2
  %1089 = sub i64 %1088, 3214140470373958659
  %1090 = add i64 %1085, 2
  %1091 = add i64 %1083, -3163022148394337428
  %1092 = sub i64 %1091, 2
  %1093 = sub i64 %1092, -3163022148394337428
  %1094 = sub i64 %1083, 2
  %1095 = mul i64 %1093, 2
  %1096 = sub i64 0, 2
  %1097 = add i64 %1083, %1096
  %1098 = sub i64 %1083, 2
  %1099 = mul i64 %1097, 2
  %1100 = sub i64 0, %1083
  %1101 = add i64 0, %1100
  %1102 = sub i64 0, %1083
  %1103 = sub i64 0, %1101
  %1104 = sub i64 0, 2
  %1105 = add i64 %1103, %1104
  %1106 = sub i64 0, %1105
  %1107 = add i64 %1101, 2
  %1108 = sub i64 0, 2
  %1109 = add i64 %1083, %1108
  %1110 = sub i64 %1083, 2
  %1111 = mul i64 %1109, 2
  %1112 = add i64 %1083, 2896220532304997554
  %1113 = sub i64 %1112, 2
  %1114 = sub i64 %1113, 2896220532304997554
  %1115 = sub i64 %1083, 2
  %1116 = mul i64 %1114, 2
  %1117 = sub i64 %1083, 2757632728908413340
  %1118 = sub i64 %1117, 2
  %1119 = add i64 %1118, 2757632728908413340
  %1120 = sub i64 %1083, 2
  %1121 = mul i64 %1119, 2
  %1122 = sdiv i64 %1083, 2
  store i64 %1122, i64* %13, align 8
  %1123 = load i64, i64* %12, align 8
  %1124 = shl i64 %1123, 2
  %1125 = add i64 0, 4897898888256377747
  %1126 = sub i64 %1125, %1123
  %1127 = sub i64 %1126, 4897898888256377747
  %1128 = sub i64 0, %1123
  %1129 = add i64 %1127, 8692624578397088881
  %1130 = add i64 %1129, 2
  %1131 = sub i64 %1130, 8692624578397088881
  %1132 = add i64 %1127, 2
  %1133 = shl i64 %1123, 2
  %1134 = sub i64 0, 5052206641243315994
  %1135 = sub i64 %1134, %1123
  %1136 = add i64 %1135, 5052206641243315994
  %1137 = sub i64 0, %1123
  %1138 = sub i64 %1136, 7917020782848028247
  %1139 = add i64 %1138, 2
  %1140 = add i64 %1139, 7917020782848028247
  %1141 = add i64 %1136, 2
  %1142 = sub i64 0, %1123
  %1143 = add i64 0, %1142
  %1144 = sub i64 0, %1123
  %1145 = sub i64 0, %1143
  %1146 = sub i64 0, 2
  %1147 = add i64 %1145, %1146
  %1148 = sub i64 0, %1147
  %1149 = add i64 %1143, 2
  %1150 = srem i64 %1123, 2
  %1151 = icmp eq i64 %1150, 0
  br label %399

; <label>:1152:                                   ; preds = %502, %475
  store i64 0, i64* %16, align 8
  br label %502

; <label>:1153:                                   ; preds = %548, %534
  br label %548

; <label>:1154:                                   ; preds = %630, %603
  br label %630

; <label>:1155:                                   ; preds = %673, %646
  br label %673

; <label>:1156:                                   ; preds = %722, %708
  br label %722

; <label>:1157:                                   ; preds = %781, %755
  %1158 = load i64, i64* %3, align 8
  %1159 = load i64, i64* %2, align 8
  %1160 = add i64 0, 7719111679384759940
  %1161 = sub i64 %1160, %1158
  %1162 = sub i64 %1161, 7719111679384759940
  %1163 = sub i64 0, %1158
  %1164 = sub i64 0, %1159
  %1165 = sub i64 %1162, %1164
  %1166 = add i64 %1162, %1159
  %1167 = mul nsw i64 %1158, %1159
  %1168 = add i64 0, -1184447788701274057
  %1169 = sub i64 %1168, %1167
  %1170 = sub i64 %1169, -1184447788701274057
  %1171 = sub i64 0, %1167
  %1172 = sub i64 0, 1
  %1173 = sub i64 %1170, %1172
  %1174 = add i64 %1170, 1
  %1175 = shl i64 %1167, 1
  %1176 = sub i64 0, 1
  %1177 = add i64 %1167, %1176
  %1178 = sub i64 %1167, 1
  %1179 = mul i64 %1177, 1
  %1180 = add i64 0, 7780370576583979771
  %1181 = sub i64 %1180, %1167
  %1182 = sub i64 %1181, 7780370576583979771
  %1183 = sub i64 0, %1167
  %1184 = sub i64 %1182, 2371623920141349922
  %1185 = add i64 %1184, 1
  %1186 = add i64 %1185, 2371623920141349922
  %1187 = add i64 %1182, 1
  %1188 = sub i64 0, 1
  %1189 = add i64 %1167, %1188
  %1190 = sub nsw i64 %1167, 1
  br label %781

; <label>:1191:                                   ; preds = %820, %805
  store i64 %804, i64* %18, align 8
  %1192 = load i64, i64* %18, align 8
  %1193 = icmp eq i64 %1192, 9223372036854775807
  br label %820

; <label>:1194:                                   ; preds = %863, %837
  br label %863

; <label>:1195:                                   ; preds = %925, %897
  br label %925
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5GraphC2Ex(%class.Graph*, i64) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Graph*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::Node", align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %class.Graph* %0, %class.Graph** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load %class.Graph*, %class.Graph** %3, align 8
  %10 = getelementptr inbounds %class.Graph, %class.Graph* %9, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EEC2Ev(%"class.std::vector.13"* %10) #3
  store i64 0, i64* %5, align 8
  br label %11

; <label>:11:                                     ; preds = %19, %2
  %12 = load i64, i64* %5, align 8
  %13 = load i64, i64* %4, align 8
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %15, label %83

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %class.Graph, %class.Graph* %9, i32 0, i32 0
  %17 = bitcast %"struct.Graph::Node"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 32, i32 8, i1 false)
  call void @_ZN5Graph4NodeC2Ev(%"struct.Graph::Node"* %6) #3
  invoke void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE9push_backEOS1_(%"class.std::vector.13"* %16, %"struct.Graph::Node"* dereferenceable(32) %6)
          to label %18 unwind label %25

; <label>:18:                                     ; preds = %15
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  br label %19

; <label>:19:                                     ; preds = %18
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 %20, 7709956319302303432
  %22 = add i64 %21, 1
  %23 = add i64 %22, 7709956319302303432
  %24 = add nsw i64 %20, 1
  store i64 %23, i64* %5, align 8
  br label %11

; <label>:25:                                     ; preds = %15
  %26 = load i32, i32* @x.23
  %27 = load i32, i32* @y.24
  %28 = add i32 %26, -2041391910
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -2041391910
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %89

; <label>:52:                                     ; preds = %25, %89
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %7, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %8, align 4
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"* %10) #3
  %56 = load i32, i32* @x.23
  %57 = load i32, i32* @y.24
  %58 = add i32 %56, 2137916320
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 2137916320
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %89

; <label>:82:                                     ; preds = %52
  br label %84

; <label>:83:                                     ; preds = %11
  ret void

; <label>:84:                                     ; preds = %82
  %85 = load i8*, i8** %7, align 8
  %86 = load i32, i32* %8, align 4
  %87 = insertvalue { i8*, i32 } undef, i8* %85, 0
  %88 = insertvalue { i8*, i32 } %87, i32 %86, 1
  resume { i8*, i32 } %88

; <label>:89:                                     ; preds = %52, %25
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = extractvalue { i8*, i32 } %90, 0
  store i8* %91, i8** %7, align 8
  %92 = extractvalue { i8*, i32 } %90, 1
  store i32 %92, i32* %8, align 4
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %6) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"* %10) #3
  br label %52
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Graph8makeEdgeExxxb(%class.Graph*, i64, i64, i64, i1 zeroext) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca %class.Graph*
  %8 = alloca %"struct.Graph::Edge"*
  %9 = alloca i64*
  %10 = alloca i64*
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.25
  %15 = load i32, i32* @y.26
  %16 = add i32 %14, -1802211536
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1802211536
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 1642541845, i32* %24
  br label %25

; <label>:25:                                     ; preds = %5, %167
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 1642541845, label %28
    i32 -1254568971, label %36
    i32 -922168248, label %76
    i32 1017736335, label %79
    i32 -1944211156, label %92
    i32 -1633097497, label %119
    i32 2113698178, label %147
    i32 1290982296, label %148
    i32 -1704522973, label %166
  ]

; <label>:27:                                     ; preds = %25
  br label %167

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -1254568971, i32 1290982296
  store i32 %35, i32* %24
  br label %167

; <label>:36:                                     ; preds = %25
  %37 = alloca %class.Graph*, align 8
  %38 = alloca i64, align 8
  store i64* %38, i64** %11
  %39 = alloca i64, align 8
  store i64* %39, i64** %10
  %40 = alloca i64, align 8
  store i64* %40, i64** %9
  %41 = alloca i8, align 1
  %42 = alloca %"struct.Graph::Edge", align 8
  %43 = alloca %"struct.Graph::Edge", align 8
  store %"struct.Graph::Edge"* %43, %"struct.Graph::Edge"** %8
  store %class.Graph* %0, %class.Graph** %37, align 8
  %44 = load volatile i64*, i64** %11
  store i64 %1, i64* %44, align 8
  %45 = load volatile i64*, i64** %10
  store i64 %2, i64* %45, align 8
  %46 = load volatile i64*, i64** %9
  store i64 %3, i64* %46, align 8
  %47 = zext i1 %4 to i8
  store i8 %47, i8* %41, align 1
  %48 = load %class.Graph*, %class.Graph** %37, align 8
  store %class.Graph* %48, %class.Graph** %7
  %49 = load volatile %class.Graph*, %class.Graph** %7
  %50 = getelementptr inbounds %class.Graph, %class.Graph* %49, i32 0, i32 0
  %51 = load volatile i64*, i64** %11
  %52 = load i64, i64* %51, align 8
  %53 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %50, i64 %52) #3
  %54 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %53, i32 0, i32 1
  %55 = load volatile i64*, i64** %10
  %56 = load i64, i64* %55, align 8
  %57 = load volatile i64*, i64** %9
  %58 = load i64, i64* %57, align 8
  call void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"* %42, i64 %56, i64 %58)
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %54, %"struct.Graph::Edge"* dereferenceable(16) %42)
  %59 = load i8, i8* %41, align 1
  %60 = trunc i8 %59 to i1
  store i1 %60, i1* %6
  %61 = load i32, i32* @x.25
  %62 = load i32, i32* @y.26
  %63 = add i32 %61, -587071177
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -587071177
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 -922168248, i32 1290982296
  store i32 %75, i32* %24
  br label %167

; <label>:76:                                     ; preds = %25
  %77 = load volatile i1, i1* %6
  %78 = select i1 %77, i32 1017736335, i32 -1944211156
  store i32 %78, i32* %24
  br label %167

; <label>:79:                                     ; preds = %25
  %80 = load volatile %class.Graph*, %class.Graph** %7
  %81 = getelementptr inbounds %class.Graph, %class.Graph* %80, i32 0, i32 0
  %82 = load volatile i64*, i64** %10
  %83 = load i64, i64* %82, align 8
  %84 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %81, i64 %83) #3
  %85 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %84, i32 0, i32 1
  %86 = load volatile i64*, i64** %11
  %87 = load i64, i64* %86, align 8
  %88 = load volatile i64*, i64** %9
  %89 = load i64, i64* %88, align 8
  %90 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8
  call void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"* %90, i64 %87, i64 %89)
  %91 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %85, %"struct.Graph::Edge"* dereferenceable(16) %91)
  store i32 -1944211156, i32* %24
  br label %167

; <label>:92:                                     ; preds = %25
  %93 = load i32, i32* @x.25
  %94 = load i32, i32* @y.26
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 -1633097497, i32 -1704522973
  store i32 %118, i32* %24
  br label %167

; <label>:119:                                    ; preds = %25
  %120 = load i32, i32* @x.25
  %121 = load i32, i32* @y.26
  %122 = add i32 %120, -1184986579
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -1184986579
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  %146 = select i1 %144, i32 2113698178, i32 -1704522973
  store i32 %146, i32* %24
  br label %167

; <label>:147:                                    ; preds = %25
  ret void

; <label>:148:                                    ; preds = %25
  %149 = alloca %class.Graph*, align 8
  %150 = alloca i64, align 8
  %151 = alloca i64, align 8
  %152 = alloca i64, align 8
  %153 = alloca i8, align 1
  %154 = alloca %"struct.Graph::Edge", align 8
  %155 = alloca %"struct.Graph::Edge", align 8
  store %class.Graph* %0, %class.Graph** %149, align 8
  store i64 %1, i64* %150, align 8
  store i64 %2, i64* %151, align 8
  store i64 %3, i64* %152, align 8
  %156 = zext i1 %4 to i8
  store i8 %156, i8* %153, align 1
  %157 = load %class.Graph*, %class.Graph** %149, align 8
  %158 = getelementptr inbounds %class.Graph, %class.Graph* %157, i32 0, i32 0
  %159 = load i64, i64* %150, align 8
  %160 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %158, i64 %159) #3
  %161 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %160, i32 0, i32 1
  %162 = load i64, i64* %151, align 8
  %163 = load i64, i64* %152, align 8
  call void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"* %154, i64 %162, i64 %163)
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"* %161, %"struct.Graph::Edge"* dereferenceable(16) %154)
  %164 = load i8, i8* %153, align 1
  %165 = trunc i8 %164 to i1
  store i32 -1254568971, i32* %24
  br label %167

; <label>:166:                                    ; preds = %25
  store i32 -1633097497, i32* %24
  br label %167

; <label>:167:                                    ; preds = %166, %148, %119, %92, %79, %76, %36, %28, %27
  br label %25
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERb(%"class.std::basic_istream"*, i8* dereferenceable(1)) #1

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN5Graph10deleteEdgeExxb(%class.Graph*, i64, i64, i1 zeroext) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %class.Graph*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.24"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.24"*
  %17 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %18 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %19 = alloca i8*
  %20 = alloca i8*
  %21 = alloca i64*
  %22 = alloca i64*
  %23 = alloca i1*
  %24 = alloca i1
  %25 = alloca i1
  %26 = load i32, i32* @x.27
  %27 = load i32, i32* @y.28
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  store i1 %33, i1* %25
  %34 = icmp slt i32 %27, 10
  store i1 %34, i1* %24
  %35 = alloca i32
  store i32 1659059923, i32* %35
  br label %36

; <label>:36:                                     ; preds = %4, %525
  %37 = load i32, i32* %35
  switch i32 %37, label %38 [
    i32 1659059923, label %39
    i32 -363551624, label %59
    i32 41728696, label %123
    i32 -667654007, label %124
    i32 482785285, label %138
    i32 -1469536371, label %147
    i32 -1587661272, label %175
    i32 -402397459, label %210
    i32 1485196166, label %211
    i32 831129485, label %238
    i32 151207976, label %254
    i32 1987921682, label %255
    i32 1288730940, label %271
    i32 1594788029, label %290
    i32 395119058, label %291
    i32 91774845, label %296
    i32 1656037923, label %301
    i32 100232151, label %329
    i32 -1709213577, label %357
    i32 -351245564, label %358
    i32 -748983799, label %372
    i32 -895071392, label %388
    i32 -1520611325, label %410
    i32 1079023905, label %413
    i32 -301646303, label %433
    i32 1026061257, label %434
    i32 867360375, label %439
    i32 2042369408, label %444
    i32 -480084794, label %447
    i32 2064467338, label %477
    i32 685103905, label %497
    i32 -118991951, label %498
    i32 -96406431, label %503
    i32 2126490720, label %517
  ]

; <label>:38:                                     ; preds = %36
  br label %525

; <label>:39:                                     ; preds = %36
  %40 = load volatile i1, i1* %25
  %41 = load volatile i1, i1* %24
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -363551624, i32 -480084794
  store i32 %58, i32* %35
  br label %525

; <label>:59:                                     ; preds = %36
  %60 = alloca i1, align 1
  store i1* %60, i1** %23
  %61 = alloca %class.Graph*, align 8
  %62 = alloca i64, align 8
  store i64* %62, i64** %22
  %63 = alloca i64, align 8
  store i64* %63, i64** %21
  %64 = alloca i8, align 1
  store i8* %64, i8** %20
  %65 = alloca i8, align 1
  store i8* %65, i8** %19
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %66, %"class.__gnu_cxx::__normal_iterator"** %18
  %67 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %68, %"class.__gnu_cxx::__normal_iterator"** %17
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %69, %"class.__gnu_cxx::__normal_iterator.24"** %16
  %70 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %70, %"class.__gnu_cxx::__normal_iterator"** %15
  %71 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %71, %"class.__gnu_cxx::__normal_iterator"** %14
  %72 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %72, %"class.__gnu_cxx::__normal_iterator"** %13
  %73 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %73, %"class.__gnu_cxx::__normal_iterator"** %12
  %74 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %74, %"class.__gnu_cxx::__normal_iterator"** %11
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %75, %"class.__gnu_cxx::__normal_iterator.24"** %10
  %76 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %76, %"class.__gnu_cxx::__normal_iterator"** %9
  %77 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %77, %"class.__gnu_cxx::__normal_iterator"** %8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %78, %"class.__gnu_cxx::__normal_iterator"** %7
  store %class.Graph* %0, %class.Graph** %61, align 8
  %79 = load volatile i64*, i64** %22
  store i64 %1, i64* %79, align 8
  %80 = load volatile i64*, i64** %21
  store i64 %2, i64* %80, align 8
  %81 = zext i1 %3 to i8
  %82 = load volatile i8*, i8** %20
  store i8 %81, i8* %82, align 1
  %83 = load %class.Graph*, %class.Graph** %61, align 8
  store %class.Graph* %83, %class.Graph** %6
  %84 = load volatile i8*, i8** %19
  store i8 0, i8* %84, align 1
  %85 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator"* %85) #3
  %86 = load volatile %class.Graph*, %class.Graph** %6
  %87 = getelementptr inbounds %class.Graph, %class.Graph* %86, i32 0, i32 0
  %88 = load volatile i64*, i64** %22
  %89 = load i64, i64* %88, align 8
  %90 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %87, i64 %89) #3
  %91 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %90, i32 0, i32 1
  %92 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %91) #3
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %67, i32 0, i32 0
  store %"struct.Graph::Edge"* %92, %"struct.Graph::Edge"** %93, align 8
  %94 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator"* %94 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = load i32, i32* @x.27
  %98 = load i32, i32* @y.28
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 41728696, i32 -480084794
  store i32 %122, i32* %35
  br label %525

; <label>:123:                                    ; preds = %36
  store i32 -667654007, i32* %35
  br label %525

; <label>:124:                                    ; preds = %36
  %125 = load volatile %class.Graph*, %class.Graph** %6
  %126 = getelementptr inbounds %class.Graph, %class.Graph* %125, i32 0, i32 0
  %127 = load volatile i64*, i64** %22
  %128 = load i64, i64* %127, align 8
  %129 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %126, i64 %128) #3
  %130 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %129, i32 0, i32 1
  %131 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %130) #3
  %132 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %132, i32 0, i32 0
  store %"struct.Graph::Edge"* %131, %"struct.Graph::Edge"** %133, align 8
  %134 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %135 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %17
  %136 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %134, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %135) #3
  %137 = select i1 %136, i32 482785285, i32 395119058
  store i32 %137, i32* %35
  br label %525

; <label>:138:                                    ; preds = %36
  %139 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %140 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %139) #3
  %141 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %140, i32 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = load volatile i64*, i64** %21
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %142, %144
  %146 = select i1 %145, i32 -1469536371, i32 1485196166
  store i32 %146, i32* %35
  br label %525

; <label>:147:                                    ; preds = %36
  %148 = load i32, i32* @x.27
  %149 = load i32, i32* @y.28
  %150 = add i32 %148, 849337671
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, 849337671
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  %174 = select i1 %172, i32 -1587661272, i32 2064467338
  store i32 %174, i32* %35
  br label %525

; <label>:175:                                    ; preds = %36
  %176 = load volatile %class.Graph*, %class.Graph** %6
  %177 = getelementptr inbounds %class.Graph, %class.Graph* %176, i32 0, i32 0
  %178 = load volatile i64*, i64** %22
  %179 = load i64, i64* %178, align 8
  %180 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %177, i64 %179) #3
  %181 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %180, i32 0, i32 1
  %182 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %183 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %16
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"* %183, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %182) #3
  %184 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %16
  %185 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %184, i32 0, i32 0
  %186 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %185, align 8
  %187 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE(%"class.std::vector.18"* %181, %"struct.Graph::Edge"* %186)
  %188 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %189 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %188, i32 0, i32 0
  store %"struct.Graph::Edge"* %187, %"struct.Graph::Edge"** %189, align 8
  %190 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %191 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEmmEi(%"class.__gnu_cxx::__normal_iterator"* %190, i32 0) #3
  %192 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %193 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %192, i32 0, i32 0
  store %"struct.Graph::Edge"* %191, %"struct.Graph::Edge"** %193, align 8
  %194 = load volatile i8*, i8** %19
  store i8 1, i8* %194, align 1
  %195 = load i32, i32* @x.27
  %196 = load i32, i32* @y.28
  %197 = sub i32 %195, -175760441
  %198 = sub i32 %197, 1
  %199 = add i32 %198, -175760441
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  %209 = select i1 %207, i32 -402397459, i32 2064467338
  store i32 %209, i32* %35
  br label %525

; <label>:210:                                    ; preds = %36
  store i32 1485196166, i32* %35
  br label %525

; <label>:211:                                    ; preds = %36
  %212 = load i32, i32* @x.27
  %213 = load i32, i32* @y.28
  %214 = sub i32 0, 1
  %215 = add i32 %212, %214
  %216 = sub i32 %212, 1
  %217 = mul i32 %212, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %213, 10
  %221 = xor i1 %219, true
  %222 = xor i1 %220, true
  %223 = xor i1 false, true
  %224 = and i1 %221, false
  %225 = and i1 %219, %223
  %226 = and i1 %222, false
  %227 = and i1 %220, %223
  %228 = or i1 %224, %225
  %229 = or i1 %226, %227
  %230 = xor i1 %228, %229
  %231 = or i1 %221, %222
  %232 = xor i1 %231, true
  %233 = or i1 false, %223
  %234 = and i1 %232, %233
  %235 = or i1 %230, %234
  %236 = or i1 %219, %220
  %237 = select i1 %235, i32 831129485, i32 685103905
  store i32 %237, i32* %35
  br label %525

; <label>:238:                                    ; preds = %36
  %239 = load i32, i32* @x.27
  %240 = load i32, i32* @y.28
  %241 = sub i32 %239, -1902124141
  %242 = sub i32 %241, 1
  %243 = add i32 %242, -1902124141
  %244 = sub i32 %239, 1
  %245 = mul i32 %239, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %240, 10
  %249 = and i1 %247, %248
  %250 = xor i1 %247, %248
  %251 = or i1 %249, %250
  %252 = or i1 %247, %248
  %253 = select i1 %251, i32 151207976, i32 685103905
  store i32 %253, i32* %35
  br label %525

; <label>:254:                                    ; preds = %36
  store i32 1987921682, i32* %35
  br label %525

; <label>:255:                                    ; preds = %36
  %256 = load i32, i32* @x.27
  %257 = load i32, i32* @y.28
  %258 = sub i32 %256, -574535270
  %259 = sub i32 %258, 1
  %260 = add i32 %259, -574535270
  %261 = sub i32 %256, 1
  %262 = mul i32 %256, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %257, 10
  %266 = and i1 %264, %265
  %267 = xor i1 %264, %265
  %268 = or i1 %266, %267
  %269 = or i1 %264, %265
  %270 = select i1 %268, i32 1288730940, i32 -118991951
  store i32 %270, i32* %35
  br label %525

; <label>:271:                                    ; preds = %36
  %272 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %273 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"* %272, i32 0) #3
  %274 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %275 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %274, i32 0, i32 0
  store %"struct.Graph::Edge"* %273, %"struct.Graph::Edge"** %275, align 8
  %276 = load i32, i32* @x.27
  %277 = load i32, i32* @y.28
  %278 = sub i32 0, 1
  %279 = add i32 %276, %278
  %280 = sub i32 %276, 1
  %281 = mul i32 %276, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %277, 10
  %285 = and i1 %283, %284
  %286 = xor i1 %283, %284
  %287 = or i1 %285, %286
  %288 = or i1 %283, %284
  %289 = select i1 %287, i32 1594788029, i32 -118991951
  store i32 %289, i32* %35
  br label %525

; <label>:290:                                    ; preds = %36
  store i32 -667654007, i32* %35
  br label %525

; <label>:291:                                    ; preds = %36
  %292 = load volatile i8*, i8** %20
  %293 = load i8, i8* %292, align 1
  %294 = trunc i8 %293 to i1
  %295 = select i1 %294, i32 1656037923, i32 91774845
  store i32 %295, i32* %35
  br label %525

; <label>:296:                                    ; preds = %36
  %297 = load volatile i8*, i8** %19
  %298 = load i8, i8* %297, align 1
  %299 = trunc i8 %298 to i1
  %300 = load volatile i1*, i1** %23
  store i1 %299, i1* %300, align 1
  store i32 2042369408, i32* %35
  br label %525

; <label>:301:                                    ; preds = %36
  %302 = load i32, i32* @x.27
  %303 = load i32, i32* @y.28
  %304 = add i32 %302, -358984104
  %305 = sub i32 %304, 1
  %306 = sub i32 %305, -358984104
  %307 = sub i32 %302, 1
  %308 = mul i32 %302, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %303, 10
  %312 = xor i1 %310, true
  %313 = xor i1 %311, true
  %314 = xor i1 true, true
  %315 = and i1 %312, true
  %316 = and i1 %310, %314
  %317 = and i1 %313, true
  %318 = and i1 %311, %314
  %319 = or i1 %315, %316
  %320 = or i1 %317, %318
  %321 = xor i1 %319, %320
  %322 = or i1 %312, %313
  %323 = xor i1 %322, true
  %324 = or i1 true, %314
  %325 = and i1 %323, %324
  %326 = or i1 %321, %325
  %327 = or i1 %310, %311
  %328 = select i1 %326, i32 100232151, i32 -96406431
  store i32 %328, i32* %35
  br label %525

; <label>:329:                                    ; preds = %36
  %330 = load volatile %class.Graph*, %class.Graph** %6
  %331 = getelementptr inbounds %class.Graph, %class.Graph* %330, i32 0, i32 0
  %332 = load volatile i64*, i64** %21
  %333 = load i64, i64* %332, align 8
  %334 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %331, i64 %333) #3
  %335 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %334, i32 0, i32 1
  %336 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %335) #3
  %337 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %338 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %337, i32 0, i32 0
  store %"struct.Graph::Edge"* %336, %"struct.Graph::Edge"** %338, align 8
  %339 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %340 = bitcast %"class.__gnu_cxx::__normal_iterator"* %339 to i8*
  %341 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %342 = bitcast %"class.__gnu_cxx::__normal_iterator"* %341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %340, i8* %342, i64 8, i32 8, i1 false)
  %343 = load i32, i32* @x.27
  %344 = load i32, i32* @y.28
  %345 = sub i32 0, 1
  %346 = add i32 %343, %345
  %347 = sub i32 %343, 1
  %348 = mul i32 %343, %346
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %344, 10
  %352 = and i1 %350, %351
  %353 = xor i1 %350, %351
  %354 = or i1 %352, %353
  %355 = or i1 %350, %351
  %356 = select i1 %354, i32 -1709213577, i32 -96406431
  store i32 %356, i32* %35
  br label %525

; <label>:357:                                    ; preds = %36
  store i32 -351245564, i32* %35
  br label %525

; <label>:358:                                    ; preds = %36
  %359 = load volatile %class.Graph*, %class.Graph** %6
  %360 = getelementptr inbounds %class.Graph, %class.Graph* %359, i32 0, i32 0
  %361 = load volatile i64*, i64** %21
  %362 = load i64, i64* %361, align 8
  %363 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %360, i64 %362) #3
  %364 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %363, i32 0, i32 1
  %365 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %364) #3
  %366 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %367 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %366, i32 0, i32 0
  store %"struct.Graph::Edge"* %365, %"struct.Graph::Edge"** %367, align 8
  %368 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %369 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %11
  %370 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %368, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %369) #3
  %371 = select i1 %370, i32 -748983799, i32 867360375
  store i32 %371, i32* %35
  br label %525

; <label>:372:                                    ; preds = %36
  %373 = load i32, i32* @x.27
  %374 = load i32, i32* @y.28
  %375 = sub i32 %373, -1696097018
  %376 = sub i32 %375, 1
  %377 = add i32 %376, -1696097018
  %378 = sub i32 %373, 1
  %379 = mul i32 %373, %377
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %374, 10
  %383 = and i1 %381, %382
  %384 = xor i1 %381, %382
  %385 = or i1 %383, %384
  %386 = or i1 %381, %382
  %387 = select i1 %385, i32 -895071392, i32 2126490720
  store i32 %387, i32* %35
  br label %525

; <label>:388:                                    ; preds = %36
  %389 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %390 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %389) #3
  %391 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %390, i32 0, i32 0
  %392 = load i64, i64* %391, align 8
  %393 = load volatile i64*, i64** %22
  %394 = load i64, i64* %393, align 8
  %395 = icmp eq i64 %392, %394
  store i1 %395, i1* %5
  %396 = load i32, i32* @x.27
  %397 = load i32, i32* @y.28
  %398 = sub i32 0, 1
  %399 = add i32 %396, %398
  %400 = sub i32 %396, 1
  %401 = mul i32 %396, %399
  %402 = urem i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = icmp slt i32 %397, 10
  %405 = and i1 %403, %404
  %406 = xor i1 %403, %404
  %407 = or i1 %405, %406
  %408 = or i1 %403, %404
  %409 = select i1 %407, i32 -1520611325, i32 2126490720
  store i32 %409, i32* %35
  br label %525

; <label>:410:                                    ; preds = %36
  %411 = load volatile i1, i1* %5
  %412 = select i1 %411, i32 1079023905, i32 -301646303
  store i32 %412, i32* %35
  br label %525

; <label>:413:                                    ; preds = %36
  %414 = load volatile %class.Graph*, %class.Graph** %6
  %415 = getelementptr inbounds %class.Graph, %class.Graph* %414, i32 0, i32 0
  %416 = load volatile i64*, i64** %21
  %417 = load i64, i64* %416, align 8
  %418 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %415, i64 %417) #3
  %419 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %418, i32 0, i32 1
  %420 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %421 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %10
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"* %421, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %420) #3
  %422 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %10
  %423 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %422, i32 0, i32 0
  %424 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %423, align 8
  %425 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE(%"class.std::vector.18"* %419, %"struct.Graph::Edge"* %424)
  %426 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %9
  %427 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %426, i32 0, i32 0
  store %"struct.Graph::Edge"* %425, %"struct.Graph::Edge"** %427, align 8
  %428 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %429 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEmmEi(%"class.__gnu_cxx::__normal_iterator"* %428, i32 0) #3
  %430 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %431 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %430, i32 0, i32 0
  store %"struct.Graph::Edge"* %429, %"struct.Graph::Edge"** %431, align 8
  %432 = load volatile i8*, i8** %19
  store i8 1, i8* %432, align 1
  store i32 -301646303, i32* %35
  br label %525

; <label>:433:                                    ; preds = %36
  store i32 1026061257, i32* %35
  br label %525

; <label>:434:                                    ; preds = %36
  %435 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %436 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"* %435, i32 0) #3
  %437 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %438 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %437, i32 0, i32 0
  store %"struct.Graph::Edge"* %436, %"struct.Graph::Edge"** %438, align 8
  store i32 -351245564, i32* %35
  br label %525

; <label>:439:                                    ; preds = %36
  %440 = load volatile i8*, i8** %19
  %441 = load i8, i8* %440, align 1
  %442 = trunc i8 %441 to i1
  %443 = load volatile i1*, i1** %23
  store i1 %442, i1* %443, align 1
  store i32 2042369408, i32* %35
  br label %525

; <label>:444:                                    ; preds = %36
  %445 = load volatile i1*, i1** %23
  %446 = load i1, i1* %445, align 1
  ret i1 %446

; <label>:447:                                    ; preds = %36
  %448 = alloca i1, align 1
  %449 = alloca %class.Graph*, align 8
  %450 = alloca i64, align 8
  %451 = alloca i64, align 8
  %452 = alloca i8, align 1
  %453 = alloca i8, align 1
  %454 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %455 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %456 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %457 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %458 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %459 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %460 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %461 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %462 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %463 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %464 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %465 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %466 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %class.Graph* %0, %class.Graph** %449, align 8
  store i64 %1, i64* %450, align 8
  store i64 %2, i64* %451, align 8
  %467 = zext i1 %3 to i8
  store i8 %467, i8* %452, align 1
  %468 = load %class.Graph*, %class.Graph** %449, align 8
  store i8 0, i8* %453, align 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator"* %454) #3
  %469 = getelementptr inbounds %class.Graph, %class.Graph* %468, i32 0, i32 0
  %470 = load i64, i64* %450, align 8
  %471 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %469, i64 %470) #3
  %472 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %471, i32 0, i32 1
  %473 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %472) #3
  %474 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %455, i32 0, i32 0
  store %"struct.Graph::Edge"* %473, %"struct.Graph::Edge"** %474, align 8
  %475 = bitcast %"class.__gnu_cxx::__normal_iterator"* %454 to i8*
  %476 = bitcast %"class.__gnu_cxx::__normal_iterator"* %455 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %475, i8* %476, i64 8, i32 8, i1 false)
  store i32 -363551624, i32* %35
  br label %525

; <label>:477:                                    ; preds = %36
  %478 = load volatile %class.Graph*, %class.Graph** %6
  %479 = getelementptr inbounds %class.Graph, %class.Graph* %478, i32 0, i32 0
  %480 = load volatile i64*, i64** %22
  %481 = load i64, i64* %480, align 8
  %482 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %479, i64 %481) #3
  %483 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %482, i32 0, i32 1
  %484 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %485 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %16
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"* %485, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %484) #3
  %486 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %16
  %487 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %486, i32 0, i32 0
  %488 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %487, align 8
  %489 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE(%"class.std::vector.18"* %483, %"struct.Graph::Edge"* %488)
  %490 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %15
  %491 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %490, i32 0, i32 0
  store %"struct.Graph::Edge"* %489, %"struct.Graph::Edge"** %491, align 8
  %492 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %493 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEmmEi(%"class.__gnu_cxx::__normal_iterator"* %492, i32 0) #3
  %494 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %14
  %495 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %494, i32 0, i32 0
  store %"struct.Graph::Edge"* %493, %"struct.Graph::Edge"** %495, align 8
  %496 = load volatile i8*, i8** %19
  store i8 1, i8* %496, align 1
  store i32 -1587661272, i32* %35
  br label %525

; <label>:497:                                    ; preds = %36
  store i32 831129485, i32* %35
  br label %525

; <label>:498:                                    ; preds = %36
  %499 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %500 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"* %499, i32 0) #3
  %501 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %13
  %502 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %501, i32 0, i32 0
  store %"struct.Graph::Edge"* %500, %"struct.Graph::Edge"** %502, align 8
  store i32 1288730940, i32* %35
  br label %525

; <label>:503:                                    ; preds = %36
  %504 = load volatile %class.Graph*, %class.Graph** %6
  %505 = getelementptr inbounds %class.Graph, %class.Graph* %504, i32 0, i32 0
  %506 = load volatile i64*, i64** %21
  %507 = load i64, i64* %506, align 8
  %508 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %505, i64 %507) #3
  %509 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %508, i32 0, i32 1
  %510 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %509) #3
  %511 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %512 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %511, i32 0, i32 0
  store %"struct.Graph::Edge"* %510, %"struct.Graph::Edge"** %512, align 8
  %513 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %514 = bitcast %"class.__gnu_cxx::__normal_iterator"* %513 to i8*
  %515 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %12
  %516 = bitcast %"class.__gnu_cxx::__normal_iterator"* %515 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %514, i8* %516, i64 8, i32 8, i1 false)
  store i32 100232151, i32* %35
  br label %525

; <label>:517:                                    ; preds = %36
  %518 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %18
  %519 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %518) #3
  %520 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %519, i32 0, i32 0
  %521 = load i64, i64* %520, align 8
  %522 = load volatile i64*, i64** %22
  %523 = load i64, i64* %522, align 8
  %524 = icmp eq i64 %521, %523
  store i32 -895071392, i32* %35
  br label %525

; <label>:525:                                    ; preds = %517, %503, %498, %497, %477, %447, %439, %434, %433, %413, %410, %388, %372, %358, %357, %329, %301, %296, %291, %290, %271, %255, %254, %238, %211, %210, %175, %147, %138, %124, %123, %59, %39, %38
  br label %36
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN5Graph8dijkstraExx(%class.Graph*, i64, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Graph*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::priority_queue", align 8
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca %"class.std::vector.25", align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %"class.std::set", align 8
  %14 = alloca %"struct.Graph::QInfo", align 8
  %15 = alloca %"struct.std::pair", align 8
  %16 = alloca %"struct.Graph::QInfo", align 8
  %17 = alloca %"struct.Graph::Node", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca i64, align 8
  %21 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %22 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %23 = alloca %"struct.Graph::QInfo", align 8
  %24 = alloca %"struct.std::pair", align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %class.Graph* %0, %class.Graph** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %26 = load %class.Graph*, %class.Graph** %4, align 8
  store i64 0, i64* %7, align 8
  br label %27

; <label>:27:                                     ; preds = %77, %3
  %28 = load i32, i32* @x.29
  %29 = load i32, i32* @y.30
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %507

; <label>:53:                                     ; preds = %27, %507
  %54 = load i64, i64* %7, align 8
  %55 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %56 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %55) #3
  %57 = icmp ult i64 %54, %56
  %58 = load i32, i32* @x.29
  %59 = load i32, i32* @y.30
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %507

; <label>:71:                                     ; preds = %53
  br i1 %57, label %72, label %83

; <label>:72:                                     ; preds = %71
  %73 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %74 = load i64, i64* %7, align 8
  %75 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %73, i64 %74) #3
  %76 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %75, i32 0, i32 0
  store i64 9223372036854775807, i64* %76, align 8
  br label %77

; <label>:77:                                     ; preds = %72
  %78 = load i64, i64* %7, align 8
  %79 = add i64 %78, 2360292599135403590
  %80 = add i64 %79, 1
  %81 = sub i64 %80, 2360292599135403590
  %82 = add nsw i64 %78, 1
  store i64 %81, i64* %7, align 8
  br label %27

; <label>:83:                                     ; preds = %71
  %84 = load i32, i32* @x.29
  %85 = load i32, i32* @y.30
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %512

; <label>:109:                                    ; preds = %83, %512
  %110 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %111 = load i64, i64* %5, align 8
  %112 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %110, i64 %111) #3
  %113 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %112, i32 0, i32 0
  store i64 0, i64* %113, align 8
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2Ev(%"class.std::vector.25"* %10) #3
  %114 = load i32, i32* @x.29
  %115 = load i32, i32* @y.30
  %116 = add i32 %114, -90579225
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, -90579225
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  br i1 %126, label %128, label %512

; <label>:128:                                    ; preds = %109
  invoke void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"* %8, %"struct.std::less"* dereferenceable(1) %9, %"class.std::vector.25"* dereferenceable(24) %10)
          to label %129 unwind label %396

; <label>:129:                                    ; preds = %128
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %10) #3
  call void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set"* %13) #3
  %130 = load i64, i64* %5, align 8
  invoke void @_ZN5Graph5QInfoC2Exx(%"struct.Graph::QInfo"* %14, i64 %130, i64 0)
          to label %131 unwind label %400

; <label>:131:                                    ; preds = %129
  invoke void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_(%"class.std::priority_queue"* %8, %"struct.Graph::QInfo"* dereferenceable(16) %14)
          to label %132 unwind label %400

; <label>:132:                                    ; preds = %131
  %133 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set"* %13, i64* dereferenceable(8) %5)
          to label %134 unwind label %400

; <label>:134:                                    ; preds = %132
  %135 = bitcast %"struct.std::pair"* %15 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %136 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %135, i32 0, i32 0
  %137 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %133, 0
  store %"struct.std::_Rb_tree_node_base"* %137, %"struct.std::_Rb_tree_node_base"** %136, align 8
  %138 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %135, i32 0, i32 1
  %139 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %133, 1
  store i8 %139, i8* %138, align 8
  br label %140

; <label>:140:                                    ; preds = %441, %134
  %141 = invoke zeroext i1 @_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE5emptyEv(%"class.std::priority_queue"* %8)
          to label %142 unwind label %400

; <label>:142:                                    ; preds = %140
  %143 = xor i1 %141, true
  %144 = and i1 true, %143
  %145 = xor i1 true, true
  %146 = and i1 %141, %145
  %147 = xor i1 true, true
  %148 = and i1 %147, true
  %149 = and i1 true, %145
  %150 = or i1 %144, %146
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = xor i1 %141, true
  br i1 %152, label %154, label %442

; <label>:154:                                    ; preds = %142
  %155 = invoke dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv(%"class.std::priority_queue"* %8)
          to label %156 unwind label %400

; <label>:156:                                    ; preds = %154
  %157 = bitcast %"struct.Graph::QInfo"* %16 to i8*
  %158 = bitcast %"struct.Graph::QInfo"* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %157, i8* %158, i64 16, i32 8, i1 false)
  invoke void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3popEv(%"class.std::priority_queue"* %8)
          to label %159 unwind label %400

; <label>:159:                                    ; preds = %156
  %160 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %16, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %160, i64 %162) #3
  invoke void @_ZN5Graph4NodeC2ERKS0_(%"struct.Graph::Node"* %17, %"struct.Graph::Node"* dereferenceable(32) %163)
          to label %164 unwind label %400

; <label>:164:                                    ; preds = %159
  %165 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %16, i32 0, i32 0
  %166 = invoke i64 @_ZNSt3setIxSt4lessIxESaIxEE5eraseERKx(%"class.std::set"* %13, i64* dereferenceable(8) %165)
          to label %167 unwind label %432

; <label>:167:                                    ; preds = %164
  %168 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 1
  %169 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %168) #3
  %170 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %18, i32 0, i32 0
  store %"struct.Graph::Edge"* %169, %"struct.Graph::Edge"** %170, align 8
  br label %171

; <label>:171:                                    ; preds = %438, %167
  %172 = load i32, i32* @x.29
  %173 = load i32, i32* @y.30
  %174 = sub i32 0, 1
  %175 = add i32 %172, %174
  %176 = sub i32 %172, 1
  %177 = mul i32 %172, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %173, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %517

; <label>:185:                                    ; preds = %171, %517
  %186 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 1
  %187 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %186) #3
  %188 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.Graph::Edge"* %187, %"struct.Graph::Edge"** %188, align 8
  %189 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %18, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19) #3
  %190 = load i32, i32* @x.29
  %191 = load i32, i32* @y.30
  %192 = add i32 %190, 1733815378
  %193 = sub i32 %192, 1
  %194 = sub i32 %193, 1733815378
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  br i1 %202, label %204, label %517

; <label>:204:                                    ; preds = %185
  br i1 %189, label %205, label %441

; <label>:205:                                    ; preds = %204
  %206 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %207 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %206, i32 0, i32 0
  %208 = load i64, i64* %207, align 8
  store i64 %208, i64* %20, align 8
  %209 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 0
  %210 = load i64, i64* %209, align 8
  %211 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %212 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %211, i32 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = add i64 %210, 3771157709861408153
  %215 = add i64 %214, %213
  %216 = sub i64 %215, 3771157709861408153
  %217 = add nsw i64 %210, %213
  %218 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %219 = load i64, i64* %20, align 8
  %220 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %218, i64 %219) #3
  %221 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %220, i32 0, i32 0
  %222 = load i64, i64* %221, align 8
  %223 = icmp slt i64 %216, %222
  br i1 %223, label %224, label %437

; <label>:224:                                    ; preds = %205
  %225 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %18) #3
  %228 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %227, i32 0, i32 1
  %229 = load i64, i64* %228, align 8
  %230 = sub i64 %226, -8512313578841722660
  %231 = add i64 %230, %229
  %232 = add i64 %231, -8512313578841722660
  %233 = add nsw i64 %226, %229
  %234 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %235 = load i64, i64* %20, align 8
  %236 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %234, i64 %235) #3
  %237 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %236, i32 0, i32 0
  store i64 %232, i64* %237, align 8
  %238 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIxSt4lessIxESaIxEE4findERKx(%"class.std::set"* %13, i64* dereferenceable(8) %20)
          to label %239 unwind label %432

; <label>:239:                                    ; preds = %224
  %240 = load i32, i32* @x.29
  %241 = load i32, i32* @y.30
  %242 = add i32 %240, 1055092267
  %243 = sub i32 %242, 1
  %244 = sub i32 %243, 1055092267
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = xor i1 %248, true
  %251 = xor i1 %249, true
  %252 = xor i1 false, true
  %253 = and i1 %250, false
  %254 = and i1 %248, %252
  %255 = and i1 %251, false
  %256 = and i1 %249, %252
  %257 = or i1 %253, %254
  %258 = or i1 %255, %256
  %259 = xor i1 %257, %258
  %260 = or i1 %250, %251
  %261 = xor i1 %260, true
  %262 = or i1 false, %252
  %263 = and i1 %261, %262
  %264 = or i1 %259, %263
  %265 = or i1 %248, %249
  br i1 %264, label %266, label %522

; <label>:266:                                    ; preds = %239, %522
  %267 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %21, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %238, %"struct.std::_Rb_tree_node_base"** %267, align 8
  %268 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIxSt4lessIxESaIxEE3endEv(%"class.std::set"* %13) #3
  %269 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %22, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %268, %"struct.std::_Rb_tree_node_base"** %269, align 8
  %270 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"* %21, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %22) #3
  %271 = load i32, i32* @x.29
  %272 = load i32, i32* @y.30
  %273 = sub i32 0, 1
  %274 = add i32 %271, %273
  %275 = sub i32 %271, 1
  %276 = mul i32 %271, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %272, 10
  %280 = xor i1 %278, true
  %281 = xor i1 %279, true
  %282 = xor i1 false, true
  %283 = and i1 %280, false
  %284 = and i1 %278, %282
  %285 = and i1 %281, false
  %286 = and i1 %279, %282
  %287 = or i1 %283, %284
  %288 = or i1 %285, %286
  %289 = xor i1 %287, %288
  %290 = or i1 %280, %281
  %291 = xor i1 %290, true
  %292 = or i1 false, %282
  %293 = and i1 %291, %292
  %294 = or i1 %289, %293
  %295 = or i1 %278, %279
  br i1 %294, label %296, label %522

; <label>:296:                                    ; preds = %266
  br i1 %270, label %297, label %436

; <label>:297:                                    ; preds = %296
  %298 = load i64, i64* %20, align 8
  %299 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %300 = load i64, i64* %20, align 8
  %301 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %299, i64 %300) #3
  %302 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %301, i32 0, i32 0
  %303 = load i64, i64* %302, align 8
  invoke void @_ZN5Graph5QInfoC2Exx(%"struct.Graph::QInfo"* %23, i64 %298, i64 %303)
          to label %304 unwind label %432

; <label>:304:                                    ; preds = %297
  invoke void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_(%"class.std::priority_queue"* %8, %"struct.Graph::QInfo"* dereferenceable(16) %23)
          to label %305 unwind label %432

; <label>:305:                                    ; preds = %304
  %306 = load i32, i32* @x.29
  %307 = load i32, i32* @y.30
  %308 = add i32 %306, 982026547
  %309 = sub i32 %308, 1
  %310 = sub i32 %309, 982026547
  %311 = sub i32 %306, 1
  %312 = mul i32 %306, %310
  %313 = urem i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = icmp slt i32 %307, 10
  %316 = xor i1 %314, true
  %317 = xor i1 %315, true
  %318 = xor i1 false, true
  %319 = and i1 %316, false
  %320 = and i1 %314, %318
  %321 = and i1 %317, false
  %322 = and i1 %315, %318
  %323 = or i1 %319, %320
  %324 = or i1 %321, %322
  %325 = xor i1 %323, %324
  %326 = or i1 %316, %317
  %327 = xor i1 %326, true
  %328 = or i1 false, %318
  %329 = and i1 %327, %328
  %330 = or i1 %325, %329
  %331 = or i1 %314, %315
  br i1 %330, label %332, label %527

; <label>:332:                                    ; preds = %305, %527
  %333 = load i32, i32* @x.29
  %334 = load i32, i32* @y.30
  %335 = sub i32 0, 1
  %336 = add i32 %333, %335
  %337 = sub i32 %333, 1
  %338 = mul i32 %333, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %334, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 false, true
  %345 = and i1 %342, false
  %346 = and i1 %340, %344
  %347 = and i1 %343, false
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 false, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  br i1 %356, label %358, label %527

; <label>:358:                                    ; preds = %332
  %359 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set"* %13, i64* dereferenceable(8) %5)
          to label %360 unwind label %432

; <label>:360:                                    ; preds = %358
  %361 = load i32, i32* @x.29
  %362 = load i32, i32* @y.30
  %363 = add i32 %361, -153916378
  %364 = sub i32 %363, 1
  %365 = sub i32 %364, -153916378
  %366 = sub i32 %361, 1
  %367 = mul i32 %361, %365
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %362, 10
  %371 = and i1 %369, %370
  %372 = xor i1 %369, %370
  %373 = or i1 %371, %372
  %374 = or i1 %369, %370
  br i1 %373, label %375, label %528

; <label>:375:                                    ; preds = %360, %528
  %376 = bitcast %"struct.std::pair"* %24 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %377 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %376, i32 0, i32 0
  %378 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %359, 0
  store %"struct.std::_Rb_tree_node_base"* %378, %"struct.std::_Rb_tree_node_base"** %377, align 8
  %379 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %376, i32 0, i32 1
  %380 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %359, 1
  store i8 %380, i8* %379, align 8
  %381 = load i32, i32* @x.29
  %382 = load i32, i32* @y.30
  %383 = add i32 %381, 1440637177
  %384 = sub i32 %383, 1
  %385 = sub i32 %384, 1440637177
  %386 = sub i32 %381, 1
  %387 = mul i32 %381, %385
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %382, 10
  %391 = and i1 %389, %390
  %392 = xor i1 %389, %390
  %393 = or i1 %391, %392
  %394 = or i1 %389, %390
  br i1 %393, label %395, label %528

; <label>:395:                                    ; preds = %375
  br label %436

; <label>:396:                                    ; preds = %128
  %397 = landingpad { i8*, i32 }
          cleanup
  %398 = extractvalue { i8*, i32 } %397, 0
  store i8* %398, i8** %11, align 8
  %399 = extractvalue { i8*, i32 } %397, 1
  store i32 %399, i32* %12, align 4
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %10) #3
  br label %502

; <label>:400:                                    ; preds = %159, %156, %154, %140, %132, %131, %129
  %401 = load i32, i32* @x.29
  %402 = load i32, i32* @y.30
  %403 = sub i32 0, 1
  %404 = add i32 %401, %403
  %405 = sub i32 %401, 1
  %406 = mul i32 %401, %404
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %402, 10
  %410 = and i1 %408, %409
  %411 = xor i1 %408, %409
  %412 = or i1 %410, %411
  %413 = or i1 %408, %409
  br i1 %412, label %414, label %534

; <label>:414:                                    ; preds = %400, %534
  %415 = landingpad { i8*, i32 }
          cleanup
  %416 = extractvalue { i8*, i32 } %415, 0
  store i8* %416, i8** %11, align 8
  %417 = extractvalue { i8*, i32 } %415, 1
  store i32 %417, i32* %12, align 4
  %418 = load i32, i32* @x.29
  %419 = load i32, i32* @y.30
  %420 = sub i32 0, 1
  %421 = add i32 %418, %420
  %422 = sub i32 %418, 1
  %423 = mul i32 %418, %421
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %419, 10
  %427 = and i1 %425, %426
  %428 = xor i1 %425, %426
  %429 = or i1 %427, %428
  %430 = or i1 %425, %426
  br i1 %429, label %431, label %534

; <label>:431:                                    ; preds = %414
  br label %501

; <label>:432:                                    ; preds = %358, %304, %297, %224, %164
  %433 = landingpad { i8*, i32 }
          cleanup
  %434 = extractvalue { i8*, i32 } %433, 0
  store i8* %434, i8** %11, align 8
  %435 = extractvalue { i8*, i32 } %433, 1
  store i32 %435, i32* %12, align 4
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %17) #3
  br label %501

; <label>:436:                                    ; preds = %395, %296
  br label %437

; <label>:437:                                    ; preds = %436, %205
  br label %438

; <label>:438:                                    ; preds = %437
  %439 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"* %18, i32 0) #3
  %440 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %25, i32 0, i32 0
  store %"struct.Graph::Edge"* %439, %"struct.Graph::Edge"** %440, align 8
  br label %171

; <label>:441:                                    ; preds = %204
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %17) #3
  br label %140

; <label>:442:                                    ; preds = %142
  %443 = load i32, i32* @x.29
  %444 = load i32, i32* @y.30
  %445 = sub i32 0, 1
  %446 = add i32 %443, %445
  %447 = sub i32 %443, 1
  %448 = mul i32 %443, %446
  %449 = urem i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = icmp slt i32 %444, 10
  %452 = xor i1 %450, true
  %453 = xor i1 %451, true
  %454 = xor i1 true, true
  %455 = and i1 %452, true
  %456 = and i1 %450, %454
  %457 = and i1 %453, true
  %458 = and i1 %451, %454
  %459 = or i1 %455, %456
  %460 = or i1 %457, %458
  %461 = xor i1 %459, %460
  %462 = or i1 %452, %453
  %463 = xor i1 %462, true
  %464 = or i1 true, %454
  %465 = and i1 %463, %464
  %466 = or i1 %461, %465
  %467 = or i1 %450, %451
  br i1 %466, label %468, label %538

; <label>:468:                                    ; preds = %442, %538
  %469 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %470 = load i64, i64* %6, align 8
  %471 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %469, i64 %470) #3
  %472 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %471, i32 0, i32 0
  %473 = load i64, i64* %472, align 8
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"* %13) #3
  call void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"* %8) #3
  %474 = load i32, i32* @x.29
  %475 = load i32, i32* @y.30
  %476 = sub i32 %474, 31560562
  %477 = sub i32 %476, 1
  %478 = add i32 %477, 31560562
  %479 = sub i32 %474, 1
  %480 = mul i32 %474, %478
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %475, 10
  %484 = xor i1 %482, true
  %485 = xor i1 %483, true
  %486 = xor i1 false, true
  %487 = and i1 %484, false
  %488 = and i1 %482, %486
  %489 = and i1 %485, false
  %490 = and i1 %483, %486
  %491 = or i1 %487, %488
  %492 = or i1 %489, %490
  %493 = xor i1 %491, %492
  %494 = or i1 %484, %485
  %495 = xor i1 %494, true
  %496 = or i1 false, %486
  %497 = and i1 %495, %496
  %498 = or i1 %493, %497
  %499 = or i1 %482, %483
  br i1 %498, label %500, label %538

; <label>:500:                                    ; preds = %468
  ret i64 %473

; <label>:501:                                    ; preds = %432, %431
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"* %13) #3
  call void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"* %8) #3
  br label %502

; <label>:502:                                    ; preds = %501, %396
  %503 = load i8*, i8** %11, align 8
  %504 = load i32, i32* %12, align 4
  %505 = insertvalue { i8*, i32 } undef, i8* %503, 0
  %506 = insertvalue { i8*, i32 } %505, i32 %504, 1
  resume { i8*, i32 } %506

; <label>:507:                                    ; preds = %53, %27
  %508 = load i64, i64* %7, align 8
  %509 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %510 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %509) #3
  %511 = icmp ult i64 %508, %510
  br label %53

; <label>:512:                                    ; preds = %109, %83
  %513 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %514 = load i64, i64* %5, align 8
  %515 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %513, i64 %514) #3
  %516 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %515, i32 0, i32 0
  store i64 0, i64* %516, align 8
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2Ev(%"class.std::vector.25"* %10) #3
  br label %109

; <label>:517:                                    ; preds = %185, %171
  %518 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %17, i32 0, i32 1
  %519 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %518) #3
  %520 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %"struct.Graph::Edge"* %519, %"struct.Graph::Edge"** %520, align 8
  %521 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %18, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19) #3
  br label %185

; <label>:522:                                    ; preds = %266, %239
  %523 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %21, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %238, %"struct.std::_Rb_tree_node_base"** %523, align 8
  %524 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIxSt4lessIxESaIxEE3endEv(%"class.std::set"* %13) #3
  %525 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %22, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %524, %"struct.std::_Rb_tree_node_base"** %525, align 8
  %526 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"* %21, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %22) #3
  br label %266

; <label>:527:                                    ; preds = %332, %305
  br label %332

; <label>:528:                                    ; preds = %375, %360
  %529 = bitcast %"struct.std::pair"* %24 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %530 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %529, i32 0, i32 0
  %531 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %359, 0
  store %"struct.std::_Rb_tree_node_base"* %531, %"struct.std::_Rb_tree_node_base"** %530, align 8
  %532 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %529, i32 0, i32 1
  %533 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %359, 1
  store i8 %533, i8* %532, align 8
  br label %375

; <label>:534:                                    ; preds = %414, %400
  %535 = landingpad { i8*, i32 }
          cleanup
  %536 = extractvalue { i8*, i32 } %535, 0
  store i8* %536, i8** %11, align 8
  %537 = extractvalue { i8*, i32 } %535, 1
  store i32 %537, i32* %12, align 4
  br label %414

; <label>:538:                                    ; preds = %468, %442
  %539 = getelementptr inbounds %class.Graph, %class.Graph* %26, i32 0, i32 0
  %540 = load i64, i64* %6, align 8
  %541 = call dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"* %539, i64 %540) #3
  %542 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %541, i32 0, i32 0
  %543 = load i64, i64* %542, align 8
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"* %13) #3
  call void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"* %8) #3
  br label %468
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5GraphD2Ev(%class.Graph*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %class.Graph*, align 8
  store %class.Graph* %0, %class.Graph** %2, align 8
  %3 = load %class.Graph*, %class.Graph** %2, align 8
  %4 = getelementptr inbounds %class.Graph, %class.Graph* %3, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EEC2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.33
  %3 = load i32, i32* @y.34
  %4 = sub i32 %2, 875129823
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 875129823
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %39

; <label>:16:                                     ; preds = %1, %39
  %17 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %17, align 8
  %18 = load %"class.std::vector.13"*, %"class.std::vector.13"** %17, align 8
  %19 = bitcast %"class.std::vector.13"* %18 to %"struct.std::_Vector_base.14"*
  %20 = load i32, i32* @x.33
  %21 = load i32, i32* @y.34
  %22 = add i32 %20, 147116068
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 147116068
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %39

; <label>:34:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EEC2Ev(%"struct.std::_Vector_base.14"* %19)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %34
  ret void

; <label>:36:                                     ; preds = %34
  %37 = landingpad { i8*, i32 }
          catch i8* null
  %38 = extractvalue { i8*, i32 } %37, 0
  call void @__clang_call_terminate(i8* %38) #10
  unreachable

; <label>:39:                                     ; preds = %16, %1
  %40 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %40, align 8
  %41 = load %"class.std::vector.13"*, %"class.std::vector.13"** %40, align 8
  %42 = bitcast %"class.std::vector.13"* %41 to %"struct.std::_Vector_base.14"*
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE9push_backEOS1_(%"class.std::vector.13"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %7 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt4moveIRN5Graph4NodeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Node"* dereferenceable(32) %6) #3
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.13"* %5, %"struct.Graph::Node"* dereferenceable(32) %7)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4NodeC2Ev(%"struct.Graph::Node"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  %4 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %3, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2Ev(%"class.std::vector.18"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.39
  %5 = load i32, i32* @y.40
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -463871828, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -463871828, label %17
    i32 1221196569, label %25
    i32 -2033694476, label %43
    i32 449654700, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1221196569, i32 449654700
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %26, align 8
  %27 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %26, align 8
  %28 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %27, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev(%"class.std::vector.18"* %28) #3
  %29 = load i32, i32* @x.39
  %30 = load i32, i32* @y.40
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -2033694476, i32 449654700
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %45, align 8
  %46 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %45, align 8
  %47 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %46, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev(%"class.std::vector.18"* %47) #3
  store i32 1221196569, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EED2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %8, align 8
  %10 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %12, align 8
  %14 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %15 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %14) #3
  invoke void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"* %9, %"struct.Graph::Node"* %13, %"class.std::allocator.15"* dereferenceable(1) %15)
          to label %16 unwind label %60

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.41
  %18 = load i32, i32* @y.42
  %19 = add i32 %17, 197004887
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 197004887
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %67

; <label>:43:                                     ; preds = %16, %67
  %44 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %44) #3
  %45 = load i32, i32* @x.41
  %46 = load i32, i32* @y.42
  %47 = sub i32 %45, -739507392
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -739507392
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %67

; <label>:59:                                     ; preds = %43
  ret void

; <label>:60:                                     ; preds = %1
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  %64 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %66) #10
  unreachable

; <label>:67:                                     ; preds = %43, %16
  %68 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %68) #3
  br label %43
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EEC2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #10
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaIN5Graph4NodeEEC2Ev(%"class.std::allocator.15"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4NodeEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.13"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*
  %4 = alloca %"struct.Graph::Node"*
  %5 = alloca %"class.std::vector.13"*
  %6 = alloca %"class.std::vector.13"*, align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %6, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %7, align 8
  %8 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  store %"class.std::vector.13"* %8, %"class.std::vector.13"** %5
  %9 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %10 = bitcast %"class.std::vector.13"* %9 to %"struct.std::_Vector_base.14"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %12, align 8
  store %"struct.Graph::Node"* %13, %"struct.Graph::Node"** %4
  %14 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %15 = bitcast %"class.std::vector.13"* %14 to %"struct.std::_Vector_base.14"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %17, align 8
  store %"struct.Graph::Node"* %18, %"struct.Graph::Node"** %3
  %19 = alloca i32
  store i32 -1716400810, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %51
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1716400810, label %23
    i32 -114537887, label %28
    i32 1662497735, label %46
    i32 -1444841024, label %50
  ]

; <label>:22:                                     ; preds = %20
  br label %51

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %4
  %25 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %3
  %26 = icmp ne %"struct.Graph::Node"* %24, %25
  %27 = select i1 %26, i32 -114537887, i32 1662497735
  store i32 %27, i32* %19
  br label %51

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %30 = bitcast %"class.std::vector.13"* %29 to %"struct.std::_Vector_base.14"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %31 to %"class.std::allocator.15"*
  %33 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %34 = bitcast %"class.std::vector.13"* %33 to %"struct.std::_Vector_base.14"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %36, align 8
  %38 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %39 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %38) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %32, %"struct.Graph::Node"* %37, %"struct.Graph::Node"* dereferenceable(32) %39)
  %40 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  %41 = bitcast %"class.std::vector.13"* %40 to %"struct.std::_Vector_base.14"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %43, align 8
  %45 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %44, i32 1
  store %"struct.Graph::Node"* %45, %"struct.Graph::Node"** %43, align 8
  store i32 -1444841024, i32* %19
  br label %51

; <label>:46:                                     ; preds = %20
  %47 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %48 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %47) #3
  %49 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %5
  call void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.13"* %49, %"struct.Graph::Node"* dereferenceable(32) %48)
  store i32 -1444841024, i32* %19
  br label %51

; <label>:50:                                     ; preds = %20
  ret void

; <label>:51:                                     ; preds = %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZSt4moveIRN5Graph4NodeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.55
  %6 = load i32, i32* @y.56
  %7 = add i32 %5, 1498947540
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1498947540
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 451532361, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 451532361, label %19
    i32 -1189959365, label %39
    i32 -870198610, label %57
    i32 2126299097, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1189959365, i32 2126299097
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %40, align 8
  %41 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %40, align 8
  store %"struct.Graph::Node"* %41, %"struct.Graph::Node"** %2
  %42 = load i32, i32* @x.55
  %43 = load i32, i32* @y.56
  %44 = add i32 %42, -1935467797
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1935467797
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -870198610, i32 2126299097
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %2
  ret %"struct.Graph::Node"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %60, align 8
  %61 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %60, align 8
  store i32 -1189959365, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1), %"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %10 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %11 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %8, %"struct.Graph::Node"* %9, %"struct.Graph::Node"* dereferenceable(32) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  ret %"struct.Graph::Node"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4NodeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.13"*, %"struct.Graph::Node"* dereferenceable(32)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %10 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.13"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Graph::Node"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.14"* %12, i64 %13)
  store %"struct.Graph::Node"* %14, %"struct.Graph::Node"** %6, align 8
  %15 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  store %"struct.Graph::Node"* %15, %"struct.Graph::Node"** %7, align 8
  %16 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %17 to %"class.std::allocator.15"*
  %19 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %10) #3
  %21 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %19, i64 %20
  %22 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %23 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %18, %"struct.Graph::Node"* %21, %"struct.Graph::Node"* dereferenceable(32) %23)
          to label %24 unwind label %81

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.61
  %26 = load i32, i32* @y.62
  %27 = sub i32 %25, 619696639
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 619696639
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %290

; <label>:39:                                     ; preds = %24, %290
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %7, align 8
  %40 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %41, i32 0, i32 0
  %43 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %42, align 8
  %44 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %45, i32 0, i32 1
  %47 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %46, align 8
  %48 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %49 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %50 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %49) #3
  %51 = load i32, i32* @x.61
  %52 = load i32, i32* @y.62
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %290

; <label>:76:                                     ; preds = %39
  %77 = invoke %"struct.Graph::Node"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4NodeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Node"* %43, %"struct.Graph::Node"* %47, %"struct.Graph::Node"* %48, %"class.std::allocator.15"* dereferenceable(1) %50)
          to label %78 unwind label %81

; <label>:78:                                     ; preds = %76
  store %"struct.Graph::Node"* %77, %"struct.Graph::Node"** %7, align 8
  %79 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %80 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %79, i32 1
  store %"struct.Graph::Node"* %80, %"struct.Graph::Node"** %7, align 8
  br label %237

; <label>:81:                                     ; preds = %76, %2
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %8, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %9, align 4
  br label %85

; <label>:85:                                     ; preds = %81
  %86 = load i8*, i8** %8, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #3
  %88 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %89 = icmp ne %"struct.Graph::Node"* %88, null
  br i1 %89, label %143, label %90

; <label>:90:                                     ; preds = %85
  %91 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %91, i32 0, i32 0
  %93 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %92 to %"class.std::allocator.15"*
  %94 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %95 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %10) #3
  %96 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %94, i64 %95
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1) %93, %"struct.Graph::Node"* %96)
          to label %97 unwind label %139

; <label>:97:                                     ; preds = %90
  %98 = load i32, i32* @x.61
  %99 = load i32, i32* @y.62
  %100 = sub i32 %98, -1462062547
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -1462062547
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %302

; <label>:124:                                    ; preds = %97, %302
  %125 = load i32, i32* @x.61
  %126 = load i32, i32* @y.62
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  br i1 %136, label %138, label %302

; <label>:138:                                    ; preds = %124
  br label %190

; <label>:139:                                    ; preds = %194, %190, %143, %90
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %8, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %195 unwind label %286

; <label>:143:                                    ; preds = %85
  %144 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %145 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %146 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %147 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %146) #3
  invoke void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"* %144, %"struct.Graph::Node"* %145, %"class.std::allocator.15"* dereferenceable(1) %147)
          to label %148 unwind label %139

; <label>:148:                                    ; preds = %143
  %149 = load i32, i32* @x.61
  %150 = load i32, i32* @y.62
  %151 = sub i32 %149, -1647975470
  %152 = sub i32 %151, 1
  %153 = add i32 %152, -1647975470
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = xor i1 %157, true
  %160 = xor i1 %158, true
  %161 = xor i1 false, true
  %162 = and i1 %159, false
  %163 = and i1 %157, %161
  %164 = and i1 %160, false
  %165 = and i1 %158, %161
  %166 = or i1 %162, %163
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = or i1 %159, %160
  %170 = xor i1 %169, true
  %171 = or i1 false, %161
  %172 = and i1 %170, %171
  %173 = or i1 %168, %172
  %174 = or i1 %157, %158
  br i1 %173, label %175, label %303

; <label>:175:                                    ; preds = %148, %303
  %176 = load i32, i32* @x.61
  %177 = load i32, i32* @y.62
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  br i1 %187, label %189, label %303

; <label>:189:                                    ; preds = %175
  br label %190

; <label>:190:                                    ; preds = %189, %138
  %191 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %192 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %193 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %191, %"struct.Graph::Node"* %192, i64 %193)
          to label %194 unwind label %139

; <label>:194:                                    ; preds = %190
  invoke void @__cxa_rethrow() #13
          to label %289 unwind label %139

; <label>:195:                                    ; preds = %139
  %196 = load i32, i32* @x.61
  %197 = load i32, i32* @y.62
  %198 = add i32 %196, 1283187251
  %199 = sub i32 %198, 1
  %200 = sub i32 %199, 1283187251
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = xor i1 %204, true
  %207 = xor i1 %205, true
  %208 = xor i1 false, true
  %209 = and i1 %206, false
  %210 = and i1 %204, %208
  %211 = and i1 %207, false
  %212 = and i1 %205, %208
  %213 = or i1 %209, %210
  %214 = or i1 %211, %212
  %215 = xor i1 %213, %214
  %216 = or i1 %206, %207
  %217 = xor i1 %216, true
  %218 = or i1 false, %208
  %219 = and i1 %217, %218
  %220 = or i1 %215, %219
  %221 = or i1 %204, %205
  br i1 %220, label %222, label %304

; <label>:222:                                    ; preds = %195, %304
  %223 = load i32, i32* @x.61
  %224 = load i32, i32* @y.62
  %225 = sub i32 0, 1
  %226 = add i32 %223, %225
  %227 = sub i32 %223, 1
  %228 = mul i32 %223, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %224, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  br i1 %234, label %236, label %304

; <label>:236:                                    ; preds = %222
  br label %281

; <label>:237:                                    ; preds = %78
  %238 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %239 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %238, i32 0, i32 0
  %240 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %239, i32 0, i32 0
  %241 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %240, align 8
  %242 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %243 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %242, i32 0, i32 0
  %244 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %243, i32 0, i32 1
  %245 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %244, align 8
  %246 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %247 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %246) #3
  call void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"* %241, %"struct.Graph::Node"* %245, %"class.std::allocator.15"* dereferenceable(1) %247)
  %248 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %249 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %250 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %249, i32 0, i32 0
  %251 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %250, i32 0, i32 0
  %252 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %251, align 8
  %253 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %254 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %253, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %254, i32 0, i32 2
  %256 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %255, align 8
  %257 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %258 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %257, i32 0, i32 0
  %259 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %258, i32 0, i32 0
  %260 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %259, align 8
  %261 = ptrtoint %"struct.Graph::Node"* %256 to i64
  %262 = ptrtoint %"struct.Graph::Node"* %260 to i64
  %263 = sub i64 0, %262
  %264 = add i64 %261, %263
  %265 = sub i64 %261, %262
  %266 = sdiv exact i64 %264, 32
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %248, %"struct.Graph::Node"* %252, i64 %266)
  %267 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %268 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %269 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %268, i32 0, i32 0
  %270 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %269, i32 0, i32 0
  store %"struct.Graph::Node"* %267, %"struct.Graph::Node"** %270, align 8
  %271 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %272 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %273 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %272, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %273, i32 0, i32 1
  store %"struct.Graph::Node"* %271, %"struct.Graph::Node"** %274, align 8
  %275 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %276 = load i64, i64* %5, align 8
  %277 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %275, i64 %276
  %278 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %279 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %278, i32 0, i32 0
  %280 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %279, i32 0, i32 2
  store %"struct.Graph::Node"* %277, %"struct.Graph::Node"** %280, align 8
  ret void

; <label>:281:                                    ; preds = %236
  %282 = load i8*, i8** %8, align 8
  %283 = load i32, i32* %9, align 4
  %284 = insertvalue { i8*, i32 } undef, i8* %282, 0
  %285 = insertvalue { i8*, i32 } %284, i32 %283, 1
  resume { i8*, i32 } %285

; <label>:286:                                    ; preds = %139
  %287 = landingpad { i8*, i32 }
          catch i8* null
  %288 = extractvalue { i8*, i32 } %287, 0
  call void @__clang_call_terminate(i8* %288) #10
  unreachable

; <label>:289:                                    ; preds = %194
  unreachable

; <label>:290:                                    ; preds = %39, %24
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %7, align 8
  %291 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %292 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %291, i32 0, i32 0
  %293 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %292, i32 0, i32 0
  %294 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %293, align 8
  %295 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %296 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %295, i32 0, i32 0
  %297 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %296, i32 0, i32 1
  %298 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %297, align 8
  %299 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %300 = bitcast %"class.std::vector.13"* %10 to %"struct.std::_Vector_base.14"*
  %301 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %300) #3
  br label %39

; <label>:302:                                    ; preds = %124, %97
  br label %124

; <label>:303:                                    ; preds = %175, %148
  br label %175

; <label>:304:                                    ; preds = %222, %195
  br label %222
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %9 = bitcast %"struct.Graph::Node"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::Node"*
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %12 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %11) #3
  call void @_ZN5Graph4NodeC2EOS0_(%"struct.Graph::Node"* %10, %"struct.Graph::Node"* dereferenceable(32) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4NodeC2EOS0_(%"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %6 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %8 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  %10 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %5, i32 0, i32 1
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %12 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %11, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2EOS3_(%"class.std::vector.18"* %10, %"class.std::vector.18"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2EOS3_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5Graph4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.18"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.18"* %8 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.19"* %6, %"struct.std::_Vector_base.19"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5Graph4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store %"struct.std::_Vector_base.19"* %1, %"struct.std::_Vector_base.19"** %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %6, %"class.std::allocator.20"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  ret %"class.std::allocator.20"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5 to %"class.std::allocator.20"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5Graph4EdgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.20"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %6, %"class.std::allocator.20"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8) %6, %"struct.Graph::Edge"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8) %9, %"struct.Graph::Edge"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8) %12, %"struct.Graph::Edge"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.81
  %6 = load i32, i32* @y.82
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 380399631, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 380399631, label %18
    i32 2100141928, label %38
    i32 -1704255865, label %69
    i32 1747766750, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2100141928, i32 1747766750
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %40 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %39, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %1, %"class.__gnu_cxx::new_allocator.21"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %39, align 8
  %42 = load i32, i32* @x.81
  %43 = load i32, i32* @y.82
  %44 = sub i32 %42, 1619681705
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1619681705
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1704255865, i32 1747766750
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %72 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %71, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %1, %"class.__gnu_cxx::new_allocator.21"** %72, align 8
  %73 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %71, align 8
  store i32 2100141928, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN5Graph4EdgeEEvRT_S4_(%"struct.Graph::Edge"** dereferenceable(8), %"struct.Graph::Edge"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.Graph::Edge"**, align 8
  %4 = alloca %"struct.Graph::Edge"**, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"** %0, %"struct.Graph::Edge"*** %3, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %4, align 8
  %6 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %6) #3
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  store %"struct.Graph::Edge"* %8, %"struct.Graph::Edge"** %5, align 8
  %9 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %9) #3
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  %12 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %3, align 8
  store %"struct.Graph::Edge"* %11, %"struct.Graph::Edge"** %12, align 8
  %13 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8) %5) #3
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %13, align 8
  %15 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %4, align 8
  store %"struct.Graph::Edge"* %14, %"struct.Graph::Edge"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Edge"** @_ZSt4moveIRPN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::Edge"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"**, align 8
  store %"struct.Graph::Edge"** %0, %"struct.Graph::Edge"*** %2, align 8
  %3 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %2, align 8
  ret %"struct.Graph::Edge"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.13"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca %"class.std::vector.13"*
  %10 = alloca %"class.std::vector.13"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i8* %2, i8** %12, align 8
  %15 = load %"class.std::vector.13"*, %"class.std::vector.13"** %10, align 8
  store %"class.std::vector.13"* %15, %"class.std::vector.13"** %9
  %16 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %17 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %16) #3
  %18 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %19 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %18) #3
  %20 = add i64 %17, -7637175726674659959
  %21 = sub i64 %20, %19
  %22 = sub i64 %21, -7637175726674659959
  %23 = sub i64 %17, %19
  store i64 %22, i64* %8
  %24 = load i64, i64* %11, align 8
  store i64 %24, i64* %7
  %25 = alloca i32
  store i32 -466357202, i32* %25
  %26 = alloca i64
  br label %27

; <label>:27:                                     ; preds = %3, %194
  %28 = load i32, i32* %25
  switch i32 %28, label %29 [
    i32 -466357202, label %30
    i32 -865884063, label %35
    i32 1216244913, label %37
    i32 -191478112, label %65
    i32 -1383987610, label %94
    i32 1154511028, label %97
    i32 -556468943, label %103
    i32 -930232953, label %106
    i32 257108767, label %122
    i32 1862689167, label %139
    i32 -2108347834, label %141
    i32 1788441960, label %157
    i32 -552628201, label %173
    i32 1758396773, label %175
    i32 -290165921, label %191
    i32 82820187, label %193
  ]

; <label>:29:                                     ; preds = %27
  br label %194

; <label>:30:                                     ; preds = %27
  %31 = load volatile i64, i64* %8
  %32 = load volatile i64, i64* %7
  %33 = icmp ult i64 %31, %32
  %34 = select i1 %33, i32 -865884063, i32 1216244913
  store i32 %34, i32* %25
  br label %194

; <label>:35:                                     ; preds = %27
  %36 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %36) #13
  unreachable

; <label>:37:                                     ; preds = %27
  %38 = load i32, i32* @x.87
  %39 = load i32, i32* @y.88
  %40 = sub i32 %38, -1408473881
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1408473881
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -191478112, i32 1758396773
  store i32 %64, i32* %25
  br label %194

; <label>:65:                                     ; preds = %27
  %66 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %67 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %66) #3
  %68 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %69 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %68) #3
  store i64 %69, i64* %14, align 8
  %70 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %67, -1421290130298598068
  %73 = add i64 %72, %71
  %74 = add i64 %73, -1421290130298598068
  %75 = add i64 %67, %71
  store i64 %74, i64* %13, align 8
  %76 = load i64, i64* %13, align 8
  %77 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %78 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %77) #3
  %79 = icmp ult i64 %76, %78
  store i1 %79, i1* %6
  %80 = load i32, i32* @x.87
  %81 = load i32, i32* @y.88
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 -1383987610, i32 1758396773
  store i32 %93, i32* %25
  br label %194

; <label>:94:                                     ; preds = %27
  %95 = load volatile i1, i1* %6
  %96 = select i1 %95, i32 -556468943, i32 1154511028
  store i32 %96, i32* %25
  br label %194

; <label>:97:                                     ; preds = %27
  %98 = load i64, i64* %13, align 8
  %99 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %100 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %99) #3
  %101 = icmp ugt i64 %98, %100
  %102 = select i1 %101, i32 -556468943, i32 -930232953
  store i32 %102, i32* %25
  br label %194

; <label>:103:                                    ; preds = %27
  %104 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %105 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"* %104) #3
  store i32 -2108347834, i32* %25
  store i64 %105, i64* %26
  br label %194

; <label>:106:                                    ; preds = %27
  %107 = load i32, i32* @x.87
  %108 = load i32, i32* @y.88
  %109 = sub i32 %107, -1177019909
  %110 = sub i32 %109, 1
  %111 = add i32 %110, -1177019909
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 257108767, i32 -290165921
  store i32 %121, i32* %25
  br label %194

; <label>:122:                                    ; preds = %27
  %123 = load i64, i64* %13, align 8
  store i64 %123, i64* %5
  %124 = load i32, i32* @x.87
  %125 = load i32, i32* @y.88
  %126 = add i32 %124, -890618714
  %127 = sub i32 %126, 1
  %128 = sub i32 %127, -890618714
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 1862689167, i32 -290165921
  store i32 %138, i32* %25
  br label %194

; <label>:139:                                    ; preds = %27
  store i32 -2108347834, i32* %25
  %140 = load volatile i64, i64* %5
  store i64 %140, i64* %26
  br label %194

; <label>:141:                                    ; preds = %27
  %142 = load i64, i64* %26
  store i64 %142, i64* %4
  %143 = load i32, i32* @x.87
  %144 = load i32, i32* @y.88
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  %156 = select i1 %154, i32 1788441960, i32 82820187
  store i32 %156, i32* %25
  br label %194

; <label>:157:                                    ; preds = %27
  %158 = load i32, i32* @x.87
  %159 = load i32, i32* @y.88
  %160 = sub i32 %158, -283463450
  %161 = sub i32 %160, 1
  %162 = add i32 %161, -283463450
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = and i1 %166, %167
  %169 = xor i1 %166, %167
  %170 = or i1 %168, %169
  %171 = or i1 %166, %167
  %172 = select i1 %170, i32 -552628201, i32 82820187
  store i32 %172, i32* %25
  br label %194

; <label>:173:                                    ; preds = %27
  %174 = load volatile i64, i64* %4
  ret i64 %174

; <label>:175:                                    ; preds = %27
  %176 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %177 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %176) #3
  %178 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %179 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %178) #3
  store i64 %179, i64* %14, align 8
  %180 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %181 = load i64, i64* %180, align 8
  %182 = shl i64 %177, %181
  %183 = sub i64 %177, 1771219152006871505
  %184 = add i64 %183, %181
  %185 = add i64 %184, 1771219152006871505
  %186 = add i64 %177, %181
  store i64 %185, i64* %13, align 8
  %187 = load i64, i64* %13, align 8
  %188 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %9
  %189 = call i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"* %188) #3
  %190 = icmp ult i64 %187, %189
  store i32 -191478112, i32* %25
  br label %194

; <label>:191:                                    ; preds = %27
  %192 = load i64, i64* %13, align 8
  store i32 257108767, i32* %25
  br label %194

; <label>:193:                                    ; preds = %27
  store i32 1788441960, i32* %25
  br label %194

; <label>:194:                                    ; preds = %193, %191, %175, %157, %141, %139, %122, %106, %103, %97, %94, %65, %37, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.14"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Node"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca %"struct.std::_Vector_base.14"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %6, align 8
  store %"struct.std::_Vector_base.14"* %8, %"struct.std::_Vector_base.14"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -124004894, i32* %10
  %11 = alloca %"struct.Graph::Node"*
  br label %12

; <label>:12:                                     ; preds = %2, %134
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -124004894, label %15
    i32 -426469416, label %19
    i32 481505669, label %46
    i32 -1584850460, label %67
    i32 1213247548, label %69
    i32 740592942, label %96
    i32 -888754607, label %124
    i32 -775984778, label %125
    i32 -1948594609, label %127
    i32 -1917914973, label %133
  ]

; <label>:14:                                     ; preds = %12
  br label %134

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -426469416, i32 1213247548
  store i32 %18, i32* %10
  br label %134

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.89
  %21 = load i32, i32* @y.90
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 481505669, i32 -1948594609
  store i32 %45, i32* %10
  br label %134

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %48 to %"class.std::allocator.15"*
  %50 = load i64, i64* %7, align 8
  %51 = call %"struct.Graph::Node"* @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1) %49, i64 %50)
  store %"struct.Graph::Node"* %51, %"struct.Graph::Node"** %3
  %52 = load i32, i32* @x.89
  %53 = load i32, i32* @y.90
  %54 = add i32 %52, -460140850
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -460140850
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -1584850460, i32 -1948594609
  store i32 %66, i32* %10
  br label %134

; <label>:67:                                     ; preds = %12
  store i32 -775984778, i32* %10
  %68 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %3
  store %"struct.Graph::Node"* %68, %"struct.Graph::Node"** %11
  br label %134

; <label>:69:                                     ; preds = %12
  %70 = load i32, i32* @x.89
  %71 = load i32, i32* @y.90
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 740592942, i32 -1917914973
  store i32 %95, i32* %10
  br label %134

; <label>:96:                                     ; preds = %12
  %97 = load i32, i32* @x.89
  %98 = load i32, i32* @y.90
  %99 = sub i32 %97, 1164779259
  %100 = sub i32 %99, 1
  %101 = add i32 %100, 1164779259
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 -888754607, i32 -1917914973
  store i32 %123, i32* %10
  br label %134

; <label>:124:                                    ; preds = %12
  store i32 -775984778, i32* %10
  store %"struct.Graph::Node"* null, %"struct.Graph::Node"** %11
  br label %134

; <label>:125:                                    ; preds = %12
  %126 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %11
  ret %"struct.Graph::Node"* %126

; <label>:127:                                    ; preds = %12
  %128 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %129 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %128, i32 0, i32 0
  %130 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %129 to %"class.std::allocator.15"*
  %131 = load i64, i64* %7, align 8
  %132 = call %"struct.Graph::Node"* @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1) %130, i64 %131)
  store i32 481505669, i32* %10
  br label %134

; <label>:133:                                    ; preds = %12
  store i32 740592942, i32* %10
  br label %134

; <label>:134:                                    ; preds = %133, %127, %124, %96, %69, %67, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE4sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.91
  %6 = load i32, i32* @y.92
  %7 = sub i32 %5, 1268187407
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1268187407
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -38795454, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %101
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -38795454, label %19
    i32 -222565830, label %27
    i32 -876303157, label %60
    i32 597549427, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %101

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -222565830, i32 597549427
  store i32 %26, i32* %15
  br label %101

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %28, align 8
  %29 = load %"class.std::vector.13"*, %"class.std::vector.13"** %28, align 8
  %30 = bitcast %"class.std::vector.13"* %29 to %"struct.std::_Vector_base.14"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %32, align 8
  %34 = bitcast %"class.std::vector.13"* %29 to %"struct.std::_Vector_base.14"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %36, align 8
  %38 = ptrtoint %"struct.Graph::Node"* %33 to i64
  %39 = ptrtoint %"struct.Graph::Node"* %37 to i64
  %40 = sub i64 %38, 4001338399804638952
  %41 = sub i64 %40, %39
  %42 = add i64 %41, 4001338399804638952
  %43 = sub i64 %38, %39
  %44 = sdiv exact i64 %42, 32
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.91
  %46 = load i32, i32* @y.92
  %47 = add i32 %45, -1182898438
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1182898438
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -876303157, i32 597549427
  store i32 %59, i32* %15
  br label %101

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %63, align 8
  %64 = load %"class.std::vector.13"*, %"class.std::vector.13"** %63, align 8
  %65 = bitcast %"class.std::vector.13"* %64 to %"struct.std::_Vector_base.14"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %66, i32 0, i32 1
  %68 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %67, align 8
  %69 = bitcast %"class.std::vector.13"* %64 to %"struct.std::_Vector_base.14"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %71, align 8
  %73 = ptrtoint %"struct.Graph::Node"* %68 to i64
  %74 = ptrtoint %"struct.Graph::Node"* %72 to i64
  %75 = shl i64 %73, %74
  %76 = sub i64 0, %74
  %77 = add i64 %73, %76
  %78 = sub i64 %73, %74
  %79 = sub i64 0, 5230964895826351161
  %80 = sub i64 %79, %77
  %81 = add i64 %80, 5230964895826351161
  %82 = sub i64 0, %77
  %83 = sub i64 0, 32
  %84 = sub i64 %81, %83
  %85 = add i64 %81, 32
  %86 = shl i64 %77, 32
  %87 = shl i64 %77, 32
  %88 = sub i64 0, %77
  %89 = add i64 0, %88
  %90 = sub i64 0, %77
  %91 = sub i64 %89, 6744844758872872399
  %92 = add i64 %91, 32
  %93 = add i64 %92, 6744844758872872399
  %94 = add i64 %89, 32
  %95 = sub i64 %77, -2987366764096467287
  %96 = sub i64 %95, 32
  %97 = add i64 %96, -2987366764096467287
  %98 = sub i64 %77, 32
  %99 = mul i64 %97, 32
  %100 = sdiv exact i64 %77, 32
  store i32 -222565830, i32* %15
  br label %101

; <label>:101:                                    ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4NodeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::Node"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.93
  %9 = load i32, i32* @y.94
  %10 = sub i32 %8, -1939059703
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1939059703
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1155382541, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %99
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1155382541, label %22
    i32 -1230230855, label %30
    i32 555135307, label %77
    i32 -1363261382, label %79
  ]

; <label>:21:                                     ; preds = %19
  br label %99

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1230230855, i32 -1363261382
  store i32 %29, i32* %18
  br label %99

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.Graph::Node"*, align 8
  %32 = alloca %"struct.Graph::Node"*, align 8
  %33 = alloca %"struct.Graph::Node"*, align 8
  %34 = alloca %"class.std::allocator.15"*, align 8
  %35 = alloca %"class.std::move_iterator", align 8
  %36 = alloca %"class.std::move_iterator", align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %31, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %32, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %33, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %34, align 8
  %37 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %31, align 8
  %38 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  store %"struct.Graph::Node"* %38, %"struct.Graph::Node"** %39, align 8
  %40 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %32, align 8
  %41 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  store %"struct.Graph::Node"* %41, %"struct.Graph::Node"** %42, align 8
  %43 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %33, align 8
  %44 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %46 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  %48 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %47, align 8
  %49 = call %"struct.Graph::Node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Node"* %46, %"struct.Graph::Node"* %48, %"struct.Graph::Node"* %43, %"class.std::allocator.15"* dereferenceable(1) %44)
  store %"struct.Graph::Node"* %49, %"struct.Graph::Node"** %5
  %50 = load i32, i32* @x.93
  %51 = load i32, i32* @y.94
  %52 = add i32 %50, -1841010362
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1841010362
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 555135307, i32 -1363261382
  store i32 %76, i32* %18
  br label %99

; <label>:77:                                     ; preds = %19
  %78 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %5
  ret %"struct.Graph::Node"* %78

; <label>:79:                                     ; preds = %19
  %80 = alloca %"struct.Graph::Node"*, align 8
  %81 = alloca %"struct.Graph::Node"*, align 8
  %82 = alloca %"struct.Graph::Node"*, align 8
  %83 = alloca %"class.std::allocator.15"*, align 8
  %84 = alloca %"class.std::move_iterator", align 8
  %85 = alloca %"class.std::move_iterator", align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %80, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %81, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %82, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %83, align 8
  %86 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %80, align 8
  %87 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %86)
  %88 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  store %"struct.Graph::Node"* %87, %"struct.Graph::Node"** %88, align 8
  %89 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %81, align 8
  %90 = call %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"* %89)
  %91 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %85, i32 0, i32 0
  store %"struct.Graph::Node"* %90, %"struct.Graph::Node"** %91, align 8
  %92 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %82, align 8
  %93 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %83, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  %95 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %94, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %85, i32 0, i32 0
  %97 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %96, align 8
  %98 = call %"struct.Graph::Node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Node"* %95, %"struct.Graph::Node"* %97, %"struct.Graph::Node"* %92, %"class.std::allocator.15"* dereferenceable(1) %93)
  store i32 -1230230855, i32* %18
  br label %99

; <label>:99:                                     ; preds = %79, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.95
  %6 = load i32, i32* @y.96
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 199549051, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 199549051, label %18
    i32 -1860930106, label %38
    i32 1536782768, label %69
    i32 1821607117, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1860930106, i32 1821607117
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %39, align 8
  %40 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %41 to %"class.std::allocator.15"*
  store %"class.std::allocator.15"* %42, %"class.std::allocator.15"** %2
  %43 = load i32, i32* @x.95
  %44 = load i32, i32* @y.96
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1536782768, i32 1821607117
  store i32 %68, i32* %14
  br label %76

; <label>:69:                                     ; preds = %15
  %70 = load volatile %"class.std::allocator.15"*, %"class.std::allocator.15"** %2
  ret %"class.std::allocator.15"* %70

; <label>:71:                                     ; preds = %15
  %72 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %72, align 8
  %73 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %74 to %"class.std::allocator.15"*
  store i32 -1860930106, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1), %"struct.Graph::Node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"* %6, %"struct.Graph::Node"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4NodeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Graph::Node"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca %"class.std::allocator.15"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %6, align 8
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  call void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"* %7, %"struct.Graph::Node"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"*, %"struct.Graph::Node"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca i64*
  %7 = alloca %"struct.Graph::Node"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.101
  %11 = load i32, i32* @y.102
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1768852360, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %137
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1768852360, label %23
    i32 -1284468448, label %31
    i32 -938648720, label %55
    i32 1610918664, label %58
    i32 1064801372, label %85
    i32 -1212421887, label %120
    i32 -934773954, label %121
    i32 618996211, label %122
    i32 -4809943, label %129
  ]

; <label>:22:                                     ; preds = %20
  br label %137

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1284468448, i32 618996211
  store i32 %30, i32* %19
  br label %137

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.14"*, align 8
  %33 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"** %33, %"struct.Graph::Node"*** %7
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %32, align 8
  %35 = load volatile %"struct.Graph::Node"**, %"struct.Graph::Node"*** %7
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %35, align 8
  %36 = load volatile i64*, i64** %6
  store i64 %2, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %32, align 8
  store %"struct.std::_Vector_base.14"* %37, %"struct.std::_Vector_base.14"** %5
  %38 = load volatile %"struct.Graph::Node"**, %"struct.Graph::Node"*** %7
  %39 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %38, align 8
  %40 = icmp ne %"struct.Graph::Node"* %39, null
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.101
  %42 = load i32, i32* @y.102
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -938648720, i32 618996211
  store i32 %54, i32* %19
  br label %137

; <label>:55:                                     ; preds = %20
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 1610918664, i32 -934773954
  store i32 %57, i32* %19
  br label %137

; <label>:58:                                     ; preds = %20
  %59 = load i32, i32* @x.101
  %60 = load i32, i32* @y.102
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 1064801372, i32 -4809943
  store i32 %84, i32* %19
  br label %137

; <label>:85:                                     ; preds = %20
  %86 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %87 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %87 to %"class.std::allocator.15"*
  %89 = load volatile %"struct.Graph::Node"**, %"struct.Graph::Node"*** %7
  %90 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %89, align 8
  %91 = load volatile i64*, i64** %6
  %92 = load i64, i64* %91, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1) %88, %"struct.Graph::Node"* %90, i64 %92)
  %93 = load i32, i32* @x.101
  %94 = load i32, i32* @y.102
  %95 = sub i32 %93, -16568437
  %96 = sub i32 %95, 1
  %97 = add i32 %96, -16568437
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 true, true
  %106 = and i1 %103, true
  %107 = and i1 %101, %105
  %108 = and i1 %104, true
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 true, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 -1212421887, i32 -4809943
  store i32 %119, i32* %19
  br label %137

; <label>:120:                                    ; preds = %20
  store i32 -934773954, i32* %19
  br label %137

; <label>:121:                                    ; preds = %20
  ret void

; <label>:122:                                    ; preds = %20
  %123 = alloca %"struct.std::_Vector_base.14"*, align 8
  %124 = alloca %"struct.Graph::Node"*, align 8
  %125 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %123, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %124, align 8
  store i64 %2, i64* %125, align 8
  %126 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %123, align 8
  %127 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %124, align 8
  %128 = icmp ne %"struct.Graph::Node"* %127, null
  store i32 -1284468448, i32* %19
  br label %137

; <label>:129:                                    ; preds = %20
  %130 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %131 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %130, i32 0, i32 0
  %132 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %131 to %"class.std::allocator.15"*
  %133 = load volatile %"struct.Graph::Node"**, %"struct.Graph::Node"*** %7
  %134 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %133, align 8
  %135 = load volatile i64*, i64** %6
  %136 = load i64, i64* %135, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1) %132, %"struct.Graph::Node"* %134, i64 %136)
  store i32 1064801372, i32* %19
  br label %137

; <label>:137:                                    ; preds = %129, %122, %120, %85, %58, %55, %31, %23, %22
  br label %20
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4NodeESaIS1_EE8max_sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %5 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -149799229, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -149799229, label %16
    i32 1342217755, label %21
    i32 20804388, label %23
    i32 -580383010, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 1342217755, i32 20804388
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -580383010, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 -580383010, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.107
  %6 = load i32, i32* @y.108
  %7 = sub i32 %5, -1773563720
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1773563720
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1042322720, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1042322720, label %19
    i32 1544418135, label %27
    i32 -360518724, label %47
    i32 -1523324031, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1544418135, i32 -1523324031
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %28, align 8
  %29 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %28, align 8
  %30 = bitcast %"class.std::allocator.15"* %29 to %"class.__gnu_cxx::new_allocator.16"*
  %31 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %30) #3
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.107
  %33 = load i32, i32* @y.108
  %34 = sub i32 %32, -2097658789
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -2097658789
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -360518724, i32 -1523324031
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64, i64* %2
  ret i64 %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %50, align 8
  %51 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %50, align 8
  %52 = bitcast %"class.std::allocator.15"* %51 to %"class.__gnu_cxx::new_allocator.16"*
  %53 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %52) #3
  store i32 1544418135, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseIN5Graph4NodeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.111
  %5 = load i32, i32* @y.112
  %6 = sub i32 %4, -1131409901
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1131409901
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2127670535, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2127670535, label %18
    i32 -421768443, label %26
    i32 2004999104, label %56
    i32 -1460943191, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -421768443, i32 -1460943191
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %27, align 8
  %29 = load i32, i32* @x.111
  %30 = load i32, i32* @y.112
  %31 = sub i32 %29, 25854535
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 25854535
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 2004999104, i32 -1460943191
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 576460752303423487

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %58, align 8
  store i32 -421768443, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Graph::Node"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %6, i64 %7, i8* null)
  ret %"struct.Graph::Node"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.115
  %9 = load i32, i32* @y.116
  %10 = add i32 %8, 1545089923
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1545089923
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1413446190, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %85
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1413446190, label %22
    i32 -1564093642, label %42
    i32 -748973628, label %67
    i32 1402171604, label %70
    i32 -1995344703, label %71
    i32 -1450924327, label %77
  ]

; <label>:21:                                     ; preds = %19
  br label %85

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1564093642, i32 -1450924327
  store i32 %41, i32* %18
  br label %85

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.115
  %53 = load i32, i32* @y.116
  %54 = sub i32 %52, -706310631
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -706310631
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -748973628, i32 -1450924327
  store i32 %66, i32* %18
  br label %85

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 1402171604, i32 -1995344703
  store i32 %69, i32* %18
  br label %85

; <label>:70:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:71:                                     ; preds = %19
  %72 = load volatile i64*, i64** %5
  %73 = load i64, i64* %72, align 8
  %74 = mul i64 %73, 32
  %75 = call i8* @_Znwm(i64 %74)
  %76 = bitcast i8* %75 to %"struct.Graph::Node"*
  ret %"struct.Graph::Node"* %76

; <label>:77:                                     ; preds = %19
  %78 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %79 = alloca i64, align 8
  %80 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %78, align 8
  store i64 %1, i64* %79, align 8
  store i8* %2, i8** %80, align 8
  %81 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %78, align 8
  %82 = load i64, i64* %79, align 8
  %83 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4NodeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %81) #3
  %84 = icmp ugt i64 %82, %83
  store i32 -1564093642, i32* %18
  br label %85

; <label>:85:                                     ; preds = %77, %67, %42, %22, %21
  br label %19
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4NodeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %12, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %20, align 8
  %22 = call %"struct.Graph::Node"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4NodeEES3_ET0_T_S6_S5_(%"struct.Graph::Node"* %19, %"struct.Graph::Node"* %21, %"struct.Graph::Node"* %17)
  ret %"struct.Graph::Node"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4NodeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Node"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  %4 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4NodeEEC2ES2_(%"class.std::move_iterator"* %2, %"struct.Graph::Node"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  ret %"struct.Graph::Node"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4NodeEES3_ET0_T_S6_S5_(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat {
  %4 = alloca %"struct.Graph::Node"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.121
  %8 = load i32, i32* @y.122
  %9 = sub i32 %7, 1397849113
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1397849113
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1820519522, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %107
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1820519522, label %21
    i32 2071211993, label %41
    i32 1213407285, label %86
    i32 -1272087598, label %88
  ]

; <label>:20:                                     ; preds = %18
  br label %107

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 2071211993, i32 -1272087598
  store i32 %40, i32* %17
  br label %107

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator", align 8
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca %"struct.Graph::Node"*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.std::move_iterator", align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %49, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.std::move_iterator"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  %56 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %58 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %57, align 8
  %59 = call %"struct.Graph::Node"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_(%"struct.Graph::Node"* %56, %"struct.Graph::Node"* %58, %"struct.Graph::Node"* %54)
  store %"struct.Graph::Node"* %59, %"struct.Graph::Node"** %4
  %60 = load i32, i32* @x.121
  %61 = load i32, i32* @y.122
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 1213407285, i32 -1272087598
  store i32 %85, i32* %17
  br label %107

; <label>:86:                                     ; preds = %18
  %87 = load volatile %"struct.Graph::Node"*, %"struct.Graph::Node"** %4
  ret %"struct.Graph::Node"* %87

; <label>:88:                                     ; preds = %18
  %89 = alloca %"class.std::move_iterator", align 8
  %90 = alloca %"class.std::move_iterator", align 8
  %91 = alloca %"struct.Graph::Node"*, align 8
  %92 = alloca i8, align 1
  %93 = alloca %"class.std::move_iterator", align 8
  %94 = alloca %"class.std::move_iterator", align 8
  %95 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %89, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %95, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %90, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %96, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %91, align 8
  store i8 1, i8* %92, align 1
  %97 = bitcast %"class.std::move_iterator"* %93 to i8*
  %98 = bitcast %"class.std::move_iterator"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = bitcast %"class.std::move_iterator"* %94 to i8*
  %100 = bitcast %"class.std::move_iterator"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %91, align 8
  %102 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %93, i32 0, i32 0
  %103 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %102, align 8
  %104 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %94, i32 0, i32 0
  %105 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %104, align 8
  %106 = call %"struct.Graph::Node"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_(%"struct.Graph::Node"* %103, %"struct.Graph::Node"* %105, %"struct.Graph::Node"* %101)
  store i32 2071211993, i32* %17
  br label %107

; <label>:107:                                    ; preds = %88, %41, %21, %20
  br label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4NodeEES5_EET0_T_S8_S7_(%"struct.Graph::Node"*, %"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.Graph::Node"*, align 8
  %7 = alloca %"struct.Graph::Node"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %11, align 8
  store %"struct.Graph::Node"* %2, %"struct.Graph::Node"** %6, align 8
  %12 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  store %"struct.Graph::Node"* %12, %"struct.Graph::Node"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %139, %3
  %14 = invoke zeroext i1 @_ZStneIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %140

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %150

; <label>:16:                                     ; preds = %15
  %17 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %18 = call %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32) %17) #3
  %19 = invoke dereferenceable(32) %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEEdeEv(%"class.std::move_iterator"* %4)
          to label %20 unwind label %140

; <label>:20:                                     ; preds = %16
  invoke void @_ZSt10_ConstructIN5Graph4NodeEJS1_EEvPT_DpOT0_(%"struct.Graph::Node"* %18, %"struct.Graph::Node"* dereferenceable(32) %19)
          to label %21 unwind label %140

; <label>:21:                                     ; preds = %20
  %22 = load i32, i32* @x.123
  %23 = load i32, i32* @y.124
  %24 = add i32 %22, -2069647519
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -2069647519
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %167

; <label>:36:                                     ; preds = %21, %167
  %37 = load i32, i32* @x.123
  %38 = load i32, i32* @y.124
  %39 = sub i32 %37, 714440402
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 714440402
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %167

; <label>:51:                                     ; preds = %36
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* @x.123
  %54 = load i32, i32* @y.124
  %55 = sub i32 %53, 904934906
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 904934906
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %168

; <label>:67:                                     ; preds = %52, %168
  %68 = load i32, i32* @x.123
  %69 = load i32, i32* @y.124
  %70 = sub i32 %68, 1731691963
  %71 = sub i32 %70, 1
  %72 = add i32 %71, 1731691963
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %168

; <label>:94:                                     ; preds = %67
  %95 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN5Graph4NodeEEppEv(%"class.std::move_iterator"* %4)
          to label %96 unwind label %140

; <label>:96:                                     ; preds = %94
  %97 = load i32, i32* @x.123
  %98 = load i32, i32* @y.124
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %169

; <label>:110:                                    ; preds = %96, %169
  %111 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %112 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %111, i32 1
  store %"struct.Graph::Node"* %112, %"struct.Graph::Node"** %7, align 8
  %113 = load i32, i32* @x.123
  %114 = load i32, i32* @y.124
  %115 = add i32 %113, 331269420
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 331269420
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %169

; <label>:139:                                    ; preds = %110
  br label %13

; <label>:140:                                    ; preds = %94, %20, %16, %13
  %141 = landingpad { i8*, i32 }
          catch i8* null
  %142 = extractvalue { i8*, i32 } %141, 0
  store i8* %142, i8** %8, align 8
  %143 = extractvalue { i8*, i32 } %141, 1
  store i32 %143, i32* %9, align 4
  br label %144

; <label>:144:                                    ; preds = %140
  %145 = load i8*, i8** %8, align 8
  %146 = call i8* @__cxa_begin_catch(i8* %145) #3
  %147 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %6, align 8
  %148 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  invoke void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"* %147, %"struct.Graph::Node"* %148)
          to label %149 unwind label %152

; <label>:149:                                    ; preds = %144
  invoke void @__cxa_rethrow() #13
          to label %166 unwind label %152

; <label>:150:                                    ; preds = %15
  %151 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  ret %"struct.Graph::Node"* %151

; <label>:152:                                    ; preds = %149, %144
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %8, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %156 unwind label %163

; <label>:156:                                    ; preds = %152
  br label %158
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:158:                                    ; preds = %156
  %159 = load i8*, i8** %8, align 8
  %160 = load i32, i32* %9, align 4
  %161 = insertvalue { i8*, i32 } undef, i8* %159, 0
  %162 = insertvalue { i8*, i32 } %161, i32 %160, 1
  resume { i8*, i32 } %162

; <label>:163:                                    ; preds = %152
  %164 = landingpad { i8*, i32 }
          catch i8* null
  %165 = extractvalue { i8*, i32 } %164, 0
  call void @__clang_call_terminate(i8* %165) #10
  unreachable

; <label>:166:                                    ; preds = %149
  unreachable

; <label>:167:                                    ; preds = %36, %21
  br label %36

; <label>:168:                                    ; preds = %67, %52
  br label %67

; <label>:169:                                    ; preds = %110, %96
  %170 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %171 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %170, i32 1
  store %"struct.Graph::Node"* %171, %"struct.Graph::Node"** %7, align 8
  br label %110
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, true
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph4NodeEJS1_EEvPT_DpOT0_(%"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.Graph::Node"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %3, align 8
  %6 = bitcast %"struct.Graph::Node"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph::Node"*
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %9 = call dereferenceable(32) %"struct.Graph::Node"* @_ZSt7forwardIN5Graph4NodeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Node"* dereferenceable(32) %8) #3
  call void @_ZN5Graph4NodeC2EOS0_(%"struct.Graph::Node"* %7, %"struct.Graph::Node"* dereferenceable(32) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  %4 = bitcast %"struct.Graph::Node"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.Graph::Node"*
  ret %"struct.Graph::Node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  ret %"struct.Graph::Node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPN5Graph4NodeEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.133
  %6 = load i32, i32* @y.134
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1913331644, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %56
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1913331644, label %18
    i32 1388216655, label %26
    i32 914378144, label %48
    i32 -1372509774, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %56

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1388216655, i32 -1372509774
  store i32 %25, i32* %14
  br label %56

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %27, align 8
  %28 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %27, align 8
  store %"class.std::move_iterator"* %28, %"class.std::move_iterator"** %2
  %29 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  %30 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %29, i32 0, i32 0
  %31 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %30, align 8
  %32 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %31, i32 1
  store %"struct.Graph::Node"* %32, %"struct.Graph::Node"** %30, align 8
  %33 = load i32, i32* @x.133
  %34 = load i32, i32* @y.134
  %35 = sub i32 %33, 1111496489
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1111496489
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 914378144, i32 -1372509774
  store i32 %47, i32* %14
  br label %56

; <label>:48:                                     ; preds = %15
  %49 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  ret %"class.std::move_iterator"* %49

; <label>:50:                                     ; preds = %15
  %51 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %51, align 8
  %52 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %51, align 8
  %53 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %52, i32 0, i32 0
  %54 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %53, align 8
  %55 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %54, i32 1
  store %"struct.Graph::Node"* %55, %"struct.Graph::Node"** %53, align 8
  store i32 1388216655, i32* %14
  br label %56

; <label>:56:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4NodeEEvT_S3_(%"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.135
  %6 = load i32, i32* @y.136
  %7 = sub i32 %5, -2135211942
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2135211942
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -769407060, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -769407060, label %19
    i32 -1813571530, label %27
    i32 -1834112489, label %59
    i32 -1825186059, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1813571530, i32 -1825186059
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.Graph::Node"*, align 8
  %29 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %28, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %29, align 8
  %30 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %28, align 8
  %31 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %29, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_(%"struct.Graph::Node"* %30, %"struct.Graph::Node"* %31)
  %32 = load i32, i32* @x.135
  %33 = load i32, i32* @y.136
  %34 = add i32 %32, -1298306262
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1298306262
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1834112489, i32 -1825186059
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.Graph::Node"*, align 8
  %62 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %61, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %62, align 8
  %63 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %61, align 8
  %64 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %62, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_(%"struct.Graph::Node"* %63, %"struct.Graph::Node"* %64)
  store i32 -1813571530, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN5Graph4NodeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.137
  %7 = load i32, i32* @y.138
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1692673893, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1692673893, label %19
    i32 -1254681427, label %39
    i32 -358049427, label %62
    i32 253422601, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1254681427, i32 253422601
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  %41 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %41, align 8
  %42 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  %43 = call %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"* %42)
  %44 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %41, align 8
  %45 = call %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"* %44)
  %46 = icmp eq %"struct.Graph::Node"* %43, %45
  store i1 %46, i1* %3
  %47 = load i32, i32* @x.137
  %48 = load i32, i32* @y.138
  %49 = sub i32 %47, -1014484216
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1014484216
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -358049427, i32 253422601
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile i1, i1* %3
  ret i1 %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.std::move_iterator"*, align 8
  %66 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %65, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %66, align 8
  %67 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %65, align 8
  %68 = call %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"* %67)
  %69 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %66, align 8
  %70 = call %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"* %69)
  %71 = icmp eq %"struct.Graph::Node"* %68, %70
  store i32 -1254681427, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Node"* @_ZNKSt13move_iteratorIPN5Graph4NodeEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  ret %"struct.Graph::Node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5Graph4NodeEEEvT_S5_(%"struct.Graph::Node"*, %"struct.Graph::Node"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.Graph::Node"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  %6 = alloca i32
  store i32 -1285772220, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %115
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -1285772220, label %10
    i32 1593222079, label %25
    i32 1972216108, label %56
    i32 -1980876373, label %59
    i32 -1980564425, label %86
    i32 1678736150, label %103
    i32 1698409813, label %104
    i32 1299384081, label %107
    i32 -355887062, label %108
    i32 -1531889780, label %112
  ]

; <label>:9:                                      ; preds = %7
  br label %115

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.141
  %12 = load i32, i32* @y.142
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1593222079, i32 -355887062
  store i32 %24, i32* %6
  br label %115

; <label>:25:                                     ; preds = %7
  %26 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %27 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %28 = icmp ne %"struct.Graph::Node"* %26, %27
  store i1 %28, i1* %3
  %29 = load i32, i32* @x.141
  %30 = load i32, i32* @y.142
  %31 = add i32 %29, 1877467382
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1877467382
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1972216108, i32 -355887062
  store i32 %55, i32* %6
  br label %115

; <label>:56:                                     ; preds = %7
  %57 = load volatile i1, i1* %3
  %58 = select i1 %57, i32 -1980876373, i32 1299384081
  store i32 %58, i32* %6
  br label %115

; <label>:59:                                     ; preds = %7
  %60 = load i32, i32* @x.141
  %61 = load i32, i32* @y.142
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -1980564425, i32 -1531889780
  store i32 %85, i32* %6
  br label %115

; <label>:86:                                     ; preds = %7
  %87 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %88 = call %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32) %87) #3
  call void @_ZSt8_DestroyIN5Graph4NodeEEvPT_(%"struct.Graph::Node"* %88)
  %89 = load i32, i32* @x.141
  %90 = load i32, i32* @y.142
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 1678736150, i32 -1531889780
  store i32 %102, i32* %6
  br label %115

; <label>:103:                                    ; preds = %7
  store i32 1698409813, i32* %6
  br label %115

; <label>:104:                                    ; preds = %7
  %105 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %106 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %105, i32 1
  store %"struct.Graph::Node"* %106, %"struct.Graph::Node"** %4, align 8
  store i32 -1285772220, i32* %6
  br label %115

; <label>:107:                                    ; preds = %7
  ret void

; <label>:108:                                    ; preds = %7
  %109 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %110 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %111 = icmp ne %"struct.Graph::Node"* %109, %110
  store i32 1593222079, i32* %6
  br label %115

; <label>:112:                                    ; preds = %7
  %113 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  %114 = call %"struct.Graph::Node"* @_ZSt11__addressofIN5Graph4NodeEEPT_RS2_(%"struct.Graph::Node"* dereferenceable(32) %113) #3
  call void @_ZSt8_DestroyIN5Graph4NodeEEvPT_(%"struct.Graph::Node"* %114)
  store i32 -1980564425, i32* %6
  br label %115

; <label>:115:                                    ; preds = %112, %108, %104, %103, %86, %59, %56, %25, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyIN5Graph4NodeEEvPT_(%"struct.Graph::Node"*) #5 comdat {
  %2 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %2, align 8
  %3 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %2, align 8
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph4NodeEEC2ES2_(%"class.std::move_iterator"*, %"struct.Graph::Node"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"struct.Graph::Node"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %4, align 8
  store %"struct.Graph::Node"* %7, %"struct.Graph::Node"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.Graph::Node"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.147
  %6 = load i32, i32* @y.148
  %7 = add i32 %5, 1823784919
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1823784919
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1792869233, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1792869233, label %19
    i32 1390613005, label %39
    i32 1984565764, label %59
    i32 975539050, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1390613005, i32 975539050
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %41 = alloca %"struct.Graph::Node"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %40, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %40, align 8
  %43 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %41, align 8
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %43) #3
  %44 = load i32, i32* @x.147
  %45 = load i32, i32* @y.148
  %46 = add i32 %44, -819763422
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -819763422
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1984565764, i32 975539050
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %62 = alloca %"struct.Graph::Node"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %61, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %62, align 8
  %63 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %61, align 8
  %64 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %62, align 8
  call void @_ZN5Graph4NodeD2Ev(%"struct.Graph::Node"* %64) #3
  store i32 1390613005, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4NodeEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1), %"struct.Graph::Node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"struct.Graph::Node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"* %8, %"struct.Graph::Node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.Graph::Node"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.151
  %7 = load i32, i32* @y.152
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 513185511, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 513185511, label %19
    i32 1669588321, label %39
    i32 624022614, label %73
    i32 1354406936, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1669588321, i32 1354406936
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %41 = alloca %"struct.Graph::Node"*, align 8
  %42 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %40, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %40, align 8
  %44 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %41, align 8
  %45 = bitcast %"struct.Graph::Node"* %44 to i8*
  call void @_ZdlPv(i8* %45) #3
  %46 = load i32, i32* @x.151
  %47 = load i32, i32* @y.152
  %48 = add i32 %46, 1124972431
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1124972431
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 624022614, i32 1354406936
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %76 = alloca %"struct.Graph::Node"*, align 8
  %77 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %75, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %75, align 8
  %79 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %76, align 8
  %80 = bitcast %"struct.Graph::Node"* %79 to i8*
  call void @_ZdlPv(i8* %80) #3
  store i32 1669588321, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.153
  %3 = load i32, i32* @y.154
  %4 = add i32 %2, 747521614
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 747521614
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %51

; <label>:16:                                     ; preds = %1, %51
  %17 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %17, align 8
  %18 = load %"class.std::vector.18"*, %"class.std::vector.18"** %17, align 8
  %19 = bitcast %"class.std::vector.18"* %18 to %"struct.std::_Vector_base.19"*
  %20 = load i32, i32* @x.153
  %21 = load i32, i32* @y.154
  %22 = add i32 %20, 10562663
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 10562663
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %51

; <label>:46:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.19"* %19)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #10
  unreachable

; <label>:51:                                     ; preds = %16, %1
  %52 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %52, align 8
  %53 = load %"class.std::vector.18"*, %"class.std::vector.18"** %52, align 8
  %54 = bitcast %"class.std::vector.18"* %53 to %"struct.std::_Vector_base.19"*
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.157
  %5 = load i32, i32* @y.158
  %6 = sub i32 %4, 1542586505
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1542586505
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 652151787, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 652151787, label %18
    i32 1388572159, label %38
    i32 -1422208504, label %72
    i32 952775906, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1388572159, i32 952775906
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %40 to %"class.std::allocator.20"*
  call void @_ZNSaIN5Graph4EdgeEEC2Ev(%"class.std::allocator.20"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %40, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %40, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %40, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %44, align 8
  %45 = load i32, i32* @x.157
  %46 = load i32, i32* @y.158
  %47 = add i32 %45, -1790284224
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1790284224
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1422208504, i32 952775906
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %74, align 8
  %75 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %74, align 8
  %76 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %75 to %"class.std::allocator.20"*
  call void @_ZNSaIN5Graph4EdgeEEC2Ev(%"class.std::allocator.20"* %76) #3
  %77 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %75, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %75, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %78, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %75, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %79, align 8
  store i32 1388572159, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4EdgeEEC2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EED2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.18"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  %10 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %12, align 8
  %14 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %15 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %14) #3
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %9, %"struct.Graph::Edge"* %13, %"class.std::allocator.20"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.163
  %20 = load i32, i32* @y.164
  %21 = add i32 %19, 96380193
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 96380193
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %55

; <label>:33:                                     ; preds = %18, %55
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %37) #3
  %38 = load i32, i32* @x.163
  %39 = load i32, i32* @y.164
  %40 = add i32 %38, 1462874768
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1462874768
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %55

; <label>:52:                                     ; preds = %33
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %54) #10
  unreachable

; <label>:55:                                     ; preds = %33, %18
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %3, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %4, align 4
  %59 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %59) #3
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.165
  %7 = load i32, i32* @y.166
  %8 = sub i32 %6, 466839957
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 466839957
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -69355367, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %55
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -69355367, label %20
    i32 1740811403, label %28
    i32 -871403065, label %48
    i32 2028360696, label %49
  ]

; <label>:19:                                     ; preds = %17
  br label %55

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1740811403, i32 2028360696
  store i32 %27, i32* %16
  br label %55

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.Graph::Edge"*, align 8
  %30 = alloca %"struct.Graph::Edge"*, align 8
  %31 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %29, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %30, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %31, align 8
  %32 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %29, align 8
  %33 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %30, align 8
  call void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %32, %"struct.Graph::Edge"* %33)
  %34 = load i32, i32* @x.165
  %35 = load i32, i32* @y.166
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -871403065, i32 2028360696
  store i32 %47, i32* %16
  br label %55

; <label>:48:                                     ; preds = %17
  ret void

; <label>:49:                                     ; preds = %17
  %50 = alloca %"struct.Graph::Edge"*, align 8
  %51 = alloca %"struct.Graph::Edge"*, align 8
  %52 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %50, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %51, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %52, align 8
  %53 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %50, align 8
  %54 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %51, align 8
  call void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %53, %"struct.Graph::Edge"* %54)
  store i32 1740811403, i32* %16
  br label %55

; <label>:55:                                     ; preds = %49, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.167
  %3 = load i32, i32* @y.168
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %165

; <label>:27:                                     ; preds = %1, %165
  %28 = alloca %"struct.std::_Vector_base.19"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %28, align 8
  %31 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %39, align 8
  %41 = ptrtoint %"struct.Graph::Edge"* %37 to i64
  %42 = ptrtoint %"struct.Graph::Edge"* %40 to i64
  %43 = sub i64 %41, -3077985403715254171
  %44 = sub i64 %43, %42
  %45 = add i64 %44, -3077985403715254171
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 16
  %48 = load i32, i32* @x.167
  %49 = load i32, i32* @y.168
  %50 = add i32 %48, -136352841
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -136352841
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %165

; <label>:74:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %31, %"struct.Graph::Edge"* %34, i64 %47)
          to label %75 unwind label %118

; <label>:75:                                     ; preds = %74
  %76 = load i32, i32* @x.167
  %77 = load i32, i32* @y.168
  %78 = sub i32 %76, -193376251
  %79 = sub i32 %78, 1
  %80 = add i32 %79, -193376251
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %227

; <label>:90:                                     ; preds = %75, %227
  %91 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %91) #3
  %92 = load i32, i32* @x.167
  %93 = load i32, i32* @y.168
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %227

; <label>:117:                                    ; preds = %90
  ret void

; <label>:118:                                    ; preds = %74
  %119 = load i32, i32* @x.167
  %120 = load i32, i32* @y.168
  %121 = sub i32 0, 1
  %122 = add i32 %119, %121
  %123 = sub i32 %119, 1
  %124 = mul i32 %119, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %120, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %229

; <label>:144:                                    ; preds = %118, %229
  %145 = landingpad { i8*, i32 }
          catch i8* null
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %29, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %30, align 4
  %148 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %148) #3
  %149 = load i32, i32* @x.167
  %150 = load i32, i32* @y.168
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  br i1 %160, label %162, label %229

; <label>:162:                                    ; preds = %144
  br label %163

; <label>:163:                                    ; preds = %162
  %164 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %164) #10
  unreachable

; <label>:165:                                    ; preds = %27, %1
  %166 = alloca %"struct.std::_Vector_base.19"*, align 8
  %167 = alloca i8*
  %168 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %166, align 8
  %169 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %166, align 8
  %170 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %169, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %170, i32 0, i32 0
  %172 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %171, align 8
  %173 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %169, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %173, i32 0, i32 2
  %175 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %174, align 8
  %176 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %169, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %176, i32 0, i32 0
  %178 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %177, align 8
  %179 = ptrtoint %"struct.Graph::Edge"* %175 to i64
  %180 = ptrtoint %"struct.Graph::Edge"* %178 to i64
  %181 = add i64 %179, 7294018844535156613
  %182 = sub i64 %181, %180
  %183 = sub i64 %182, 7294018844535156613
  %184 = sub i64 %179, %180
  %185 = mul i64 %183, %180
  %186 = add i64 %179, -1233761779433866765
  %187 = sub i64 %186, %180
  %188 = sub i64 %187, -1233761779433866765
  %189 = sub i64 %179, %180
  %190 = add i64 0, -3523706229345298273
  %191 = sub i64 %190, %188
  %192 = sub i64 %191, -3523706229345298273
  %193 = sub i64 0, %188
  %194 = add i64 %192, -3553638289104699823
  %195 = add i64 %194, 16
  %196 = sub i64 %195, -3553638289104699823
  %197 = add i64 %192, 16
  %198 = add i64 0, 1532215359039488402
  %199 = sub i64 %198, %188
  %200 = sub i64 %199, 1532215359039488402
  %201 = sub i64 0, %188
  %202 = sub i64 %200, 7531141025992552361
  %203 = add i64 %202, 16
  %204 = add i64 %203, 7531141025992552361
  %205 = add i64 %200, 16
  %206 = add i64 0, 1902025415856996125
  %207 = sub i64 %206, %188
  %208 = sub i64 %207, 1902025415856996125
  %209 = sub i64 0, %188
  %210 = sub i64 0, %208
  %211 = sub i64 0, 16
  %212 = add i64 %210, %211
  %213 = sub i64 0, %212
  %214 = add i64 %208, 16
  %215 = sub i64 0, %188
  %216 = add i64 0, %215
  %217 = sub i64 0, %188
  %218 = sub i64 %216, 3104905688224542331
  %219 = add i64 %218, 16
  %220 = add i64 %219, 3104905688224542331
  %221 = add i64 %216, 16
  %222 = sub i64 0, 16
  %223 = add i64 %188, %222
  %224 = sub i64 %188, 16
  %225 = mul i64 %223, 16
  %226 = sdiv exact i64 %188, 16
  br label %27

; <label>:227:                                    ; preds = %90, %75
  %228 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %228) #3
  br label %90

; <label>:229:                                    ; preds = %144, %118
  %230 = landingpad { i8*, i32 }
          catch i8* null
  %231 = extractvalue { i8*, i32 } %230, 0
  store i8* %231, i8** %29, align 8
  %232 = extractvalue { i8*, i32 } %230, 1
  store i32 %232, i32* %30, align 4
  %233 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %233) #3
  br label %144
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4EdgeEEEvT_S5_(%"struct.Graph::Edge"* %5, %"struct.Graph::Edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4EdgeEEEvT_S5_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"*, %"struct.Graph::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.Graph::Edge"*
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca %"struct.std::_Vector_base.19"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %6, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %6, align 8
  store %"struct.std::_Vector_base.19"* %9, %"struct.std::_Vector_base.19"** %5
  %10 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  store %"struct.Graph::Edge"* %10, %"struct.Graph::Edge"** %4
  %11 = alloca i32
  store i32 -1462965218, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %83
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1462965218, label %15
    i32 12434081, label %19
    i32 -489915477, label %25
    i32 -1018405740, label %53
    i32 524815770, label %81
    i32 -883364792, label %82
  ]

; <label>:14:                                     ; preds = %12
  br label %83

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4
  %17 = icmp ne %"struct.Graph::Edge"* %16, null
  %18 = select i1 %17, i32 12434081, i32 -489915477
  store i32 %18, i32* %11
  br label %83

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %21 to %"class.std::allocator.20"*
  %23 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.20"* dereferenceable(1) %22, %"struct.Graph::Edge"* %23, i64 %24)
  store i32 -489915477, i32* %11
  br label %83

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.173
  %27 = load i32, i32* @y.174
  %28 = sub i32 %26, 1135431949
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 1135431949
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -1018405740, i32 -883364792
  store i32 %52, i32* %11
  br label %83

; <label>:53:                                     ; preds = %12
  %54 = load i32, i32* @x.173
  %55 = load i32, i32* @y.174
  %56 = add i32 %54, -667431607
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -667431607
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 524815770, i32 -883364792
  store i32 %80, i32* %11
  br label %83

; <label>:81:                                     ; preds = %12
  ret void

; <label>:82:                                     ; preds = %12
  store i32 -1018405740, i32* %11
  br label %83

; <label>:83:                                     ; preds = %82, %53, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %3 to %"class.std::allocator.20"*
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.20"* dereferenceable(1), %"struct.Graph::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.21"* %8, %"struct.Graph::Edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Graph::Edge"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %9 = bitcast %"struct.Graph::Edge"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EED2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %5 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %13, align 8
  %15 = ptrtoint %"struct.Graph::Node"* %11 to i64
  %16 = ptrtoint %"struct.Graph::Node"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 32
  invoke void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %5, %"struct.Graph::Node"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i32, i32* @x.183
  %30 = load i32, i32* @y.184
  %31 = add i32 %29, 1835500433
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1835500433
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %71

; <label>:43:                                     ; preds = %28, %71
  %44 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %44) #10
  %45 = load i32, i32* @x.183
  %46 = load i32, i32* @y.184
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %71

; <label>:70:                                     ; preds = %43
  unreachable

; <label>:71:                                     ; preds = %43, %28
  %72 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %72) #10
  br label %43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4NodeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaIN5Graph4NodeEED2Ev(%"class.std::allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4NodeEED2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.187
  %5 = load i32, i32* @y.188
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1092370792, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1092370792, label %17
    i32 306991526, label %25
    i32 -365695512, label %55
    i32 -368977006, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 306991526, i32 -368977006
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %26, align 8
  %27 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %26, align 8
  %28 = bitcast %"class.std::allocator.15"* %27 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %28) #3
  %29 = load i32, i32* @x.187
  %30 = load i32, i32* @y.188
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -365695512, i32 -368977006
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %57, align 8
  %58 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %57, align 8
  %59 = bitcast %"class.std::allocator.15"* %58 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %59) #3
  store i32 306991526, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4NodeEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.Graph::Node"* @_ZNSt6vectorIN5Graph4NodeESaIS1_EEixEm(%"class.std::vector.13"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Node, std::allocator<Graph::Node> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %9, i64 %10
  ret %"struct.Graph::Node"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.18"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %7 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Edge"* dereferenceable(16) %6) #3
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.18"* %5, %"struct.Graph::Edge"* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph4EdgeC2Exx(%"struct.Graph::Edge"*, i64, i64) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.195
  %7 = load i32, i32* @y.196
  %8 = sub i32 %6, 2132264137
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2132264137
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -981689368, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %85
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -981689368, label %20
    i32 -1026006585, label %40
    i32 719174372, label %75
    i32 -92394549, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %85

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1026006585, i32 -92394549
  store i32 %39, i32* %16
  br label %85

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.Graph::Edge"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i64, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %41, align 8
  store i64 %1, i64* %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %44, i32 0, i32 0
  store i64 %45, i64* %46, align 8
  %47 = load i64, i64* %43, align 8
  %48 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %44, i32 0, i32 1
  store i64 %47, i64* %48, align 8
  %49 = load i32, i32* @x.195
  %50 = load i32, i32* @y.196
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 719174372, i32 -92394549
  store i32 %74, i32* %16
  br label %85

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"struct.Graph::Edge"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i64, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %80, i32 0, i32 0
  store i64 %81, i64* %82, align 8
  %83 = load i64, i64* %79, align 8
  %84 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %80, i32 0, i32 1
  store i64 %83, i64* %84, align 8
  store i32 -1026006585, i32* %16
  br label %85

; <label>:85:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.18"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca %"struct.Graph::Edge"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.197
  %9 = load i32, i32* @y.198
  %10 = sub i32 %8, 2131225726
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 2131225726
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 378630593, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %102
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 378630593, label %22
    i32 1702647850, label %30
    i32 -1809997283, label %61
    i32 -1319889778, label %64
    i32 1477001563, label %83
    i32 1528854310, label %88
    i32 450533109, label %89
  ]

; <label>:21:                                     ; preds = %19
  br label %102

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1702647850, i32 450533109
  store i32 %29, i32* %18
  br label %102

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.18"*, align 8
  %32 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"** %32, %"struct.Graph::Edge"*** %5
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %31, align 8
  %33 = load volatile %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %5
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %33, align 8
  %34 = load %"class.std::vector.18"*, %"class.std::vector.18"** %31, align 8
  store %"class.std::vector.18"* %34, %"class.std::vector.18"** %4
  %35 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %36 = bitcast %"class.std::vector.18"* %35 to %"struct.std::_Vector_base.19"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %38, align 8
  %40 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %41 = bitcast %"class.std::vector.18"* %40 to %"struct.std::_Vector_base.19"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %42, i32 0, i32 2
  %44 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %43, align 8
  %45 = icmp ne %"struct.Graph::Edge"* %39, %44
  store i1 %45, i1* %3
  %46 = load i32, i32* @x.197
  %47 = load i32, i32* @y.198
  %48 = sub i32 %46, 479932681
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 479932681
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1809997283, i32 450533109
  store i32 %60, i32* %18
  br label %102

; <label>:61:                                     ; preds = %19
  %62 = load volatile i1, i1* %3
  %63 = select i1 %62, i32 -1319889778, i32 1477001563
  store i32 %63, i32* %18
  br label %102

; <label>:64:                                     ; preds = %19
  %65 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %66 = bitcast %"class.std::vector.18"* %65 to %"struct.std::_Vector_base.19"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %66, i32 0, i32 0
  %68 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %67 to %"class.std::allocator.20"*
  %69 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %70 = bitcast %"class.std::vector.18"* %69 to %"struct.std::_Vector_base.19"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %71, i32 0, i32 1
  %73 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %72, align 8
  %74 = load volatile %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %5
  %75 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %74, align 8
  %76 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %75) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %68, %"struct.Graph::Edge"* %73, %"struct.Graph::Edge"* dereferenceable(16) %76)
  %77 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %78 = bitcast %"class.std::vector.18"* %77 to %"struct.std::_Vector_base.19"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %79, i32 0, i32 1
  %81 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %80, align 8
  %82 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %81, i32 1
  store %"struct.Graph::Edge"* %82, %"struct.Graph::Edge"** %80, align 8
  store i32 1528854310, i32* %18
  br label %102

; <label>:83:                                     ; preds = %19
  %84 = load volatile %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %5
  %85 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %84, align 8
  %86 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %85) #3
  %87 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.18"* %87, %"struct.Graph::Edge"* dereferenceable(16) %86)
  store i32 1528854310, i32* %18
  br label %102

; <label>:88:                                     ; preds = %19
  ret void

; <label>:89:                                     ; preds = %19
  %90 = alloca %"class.std::vector.18"*, align 8
  %91 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %90, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %91, align 8
  %92 = load %"class.std::vector.18"*, %"class.std::vector.18"** %90, align 8
  %93 = bitcast %"class.std::vector.18"* %92 to %"struct.std::_Vector_base.19"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %94, i32 0, i32 1
  %96 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %95, align 8
  %97 = bitcast %"class.std::vector.18"* %92 to %"struct.std::_Vector_base.19"*
  %98 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %97, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %98, i32 0, i32 2
  %100 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %99, align 8
  %101 = icmp ne %"struct.Graph::Edge"* %96, %100
  store i32 1702647850, i32* %18
  br label %102

; <label>:102:                                    ; preds = %89, %83, %64, %61, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.199
  %6 = load i32, i32* @y.200
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1436142678, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1436142678, label %18
    i32 -1519880172, label %38
    i32 565135624, label %68
    i32 1971470974, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1519880172, i32 1971470974
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %39, align 8
  %40 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %39, align 8
  store %"struct.Graph::Edge"* %40, %"struct.Graph::Edge"** %2
  %41 = load i32, i32* @x.199
  %42 = load i32, i32* @y.200
  %43 = add i32 %41, 1348785706
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1348785706
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 565135624, i32 1971470974
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2
  ret %"struct.Graph::Edge"* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %71, align 8
  %72 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %71, align 8
  store i32 -1519880172, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1), %"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %10 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %11 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %8, %"struct.Graph::Edge"* %9, %"struct.Graph::Edge"* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  ret %"struct.Graph::Edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.18"*, %"struct.Graph::Edge"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.205
  %4 = load i32, i32* @y.206
  %5 = sub i32 %3, 1033355728
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1033355728
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %320

; <label>:17:                                     ; preds = %2, %320
  %18 = alloca %"class.std::vector.18"*, align 8
  %19 = alloca %"struct.Graph::Edge"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"struct.Graph::Edge"*, align 8
  %22 = alloca %"struct.Graph::Edge"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %18, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %19, align 8
  %25 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %26 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %25, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %26, i64* %20, align 8
  %27 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %28 = load i64, i64* %20, align 8
  %29 = call %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %27, i64 %28)
  store %"struct.Graph::Edge"* %29, %"struct.Graph::Edge"** %21, align 8
  %30 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  store %"struct.Graph::Edge"* %30, %"struct.Graph::Edge"** %22, align 8
  %31 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %32 to %"class.std::allocator.20"*
  %34 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %35 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %25) #3
  %36 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %34, i64 %35
  %37 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %38 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %37) #3
  %39 = load i32, i32* @x.205
  %40 = load i32, i32* @y.206
  %41 = add i32 %39, -319058561
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -319058561
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %320

; <label>:65:                                     ; preds = %17
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %33, %"struct.Graph::Edge"* %36, %"struct.Graph::Edge"* dereferenceable(16) %38)
          to label %66 unwind label %112

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* @x.205
  %68 = load i32, i32* @y.206
  %69 = sub i32 %67, -337143902
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -337143902
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %342

; <label>:81:                                     ; preds = %66, %342
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %22, align 8
  %82 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %84, align 8
  %86 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %87, i32 0, i32 1
  %89 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %88, align 8
  %90 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %91 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %92 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %91) #3
  %93 = load i32, i32* @x.205
  %94 = load i32, i32* @y.206
  %95 = sub i32 %93, 1339244649
  %96 = sub i32 %95, 1
  %97 = add i32 %96, 1339244649
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  br i1 %105, label %107, label %342

; <label>:107:                                    ; preds = %81
  %108 = invoke %"struct.Graph::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Edge"* %85, %"struct.Graph::Edge"* %89, %"struct.Graph::Edge"* %90, %"class.std::allocator.20"* dereferenceable(1) %92)
          to label %109 unwind label %112

; <label>:109:                                    ; preds = %107
  store %"struct.Graph::Edge"* %108, %"struct.Graph::Edge"** %22, align 8
  %110 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %111 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %110, i32 1
  store %"struct.Graph::Edge"* %111, %"struct.Graph::Edge"** %22, align 8
  br label %226

; <label>:112:                                    ; preds = %107, %65
  %113 = load i32, i32* @x.205
  %114 = load i32, i32* @y.206
  %115 = add i32 %113, 1720543136
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 1720543136
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %354

; <label>:139:                                    ; preds = %112, %354
  %140 = landingpad { i8*, i32 }
          catch i8* null
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %23, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %24, align 4
  %143 = load i32, i32* @x.205
  %144 = load i32, i32* @y.206
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 true, true
  %155 = and i1 %152, true
  %156 = and i1 %150, %154
  %157 = and i1 %153, true
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 true, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  br i1 %166, label %168, label %354

; <label>:168:                                    ; preds = %139
  br label %169

; <label>:169:                                    ; preds = %168
  %170 = load i8*, i8** %23, align 8
  %171 = call i8* @__cxa_begin_catch(i8* %170) #3
  %172 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %173 = icmp ne %"struct.Graph::Edge"* %172, null
  br i1 %173, label %186, label %174

; <label>:174:                                    ; preds = %169
  %175 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %176 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %175, i32 0, i32 0
  %177 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %176 to %"class.std::allocator.20"*
  %178 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %179 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %25) #3
  %180 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %178, i64 %179
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1) %177, %"struct.Graph::Edge"* %180)
          to label %181 unwind label %182

; <label>:181:                                    ; preds = %174
  br label %220

; <label>:182:                                    ; preds = %224, %220, %186, %174
  %183 = landingpad { i8*, i32 }
          cleanup
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %23, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %225 unwind label %316

; <label>:186:                                    ; preds = %169
  %187 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %188 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %189 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %190 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %189) #3
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %187, %"struct.Graph::Edge"* %188, %"class.std::allocator.20"* dereferenceable(1) %190)
          to label %191 unwind label %182

; <label>:191:                                    ; preds = %186
  %192 = load i32, i32* @x.205
  %193 = load i32, i32* @y.206
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = and i1 %199, %200
  %202 = xor i1 %199, %200
  %203 = or i1 %201, %202
  %204 = or i1 %199, %200
  br i1 %203, label %205, label %358

; <label>:205:                                    ; preds = %191, %358
  %206 = load i32, i32* @x.205
  %207 = load i32, i32* @y.206
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  br i1 %217, label %219, label %358

; <label>:219:                                    ; preds = %205
  br label %220

; <label>:220:                                    ; preds = %219, %181
  %221 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %222 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %223 = load i64, i64* %20, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %221, %"struct.Graph::Edge"* %222, i64 %223)
          to label %224 unwind label %182

; <label>:224:                                    ; preds = %220
  invoke void @__cxa_rethrow() #13
          to label %319 unwind label %182

; <label>:225:                                    ; preds = %182
  br label %311

; <label>:226:                                    ; preds = %109
  %227 = load i32, i32* @x.205
  %228 = load i32, i32* @y.206
  %229 = sub i32 0, 1
  %230 = add i32 %227, %229
  %231 = sub i32 %227, 1
  %232 = mul i32 %227, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %228, 10
  %236 = and i1 %234, %235
  %237 = xor i1 %234, %235
  %238 = or i1 %236, %237
  %239 = or i1 %234, %235
  br i1 %238, label %240, label %359

; <label>:240:                                    ; preds = %226, %359
  %241 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %242 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %241, i32 0, i32 0
  %243 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %242, i32 0, i32 0
  %244 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %243, align 8
  %245 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %246 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %245, i32 0, i32 0
  %247 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %246, i32 0, i32 1
  %248 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %247, align 8
  %249 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %250 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %249) #3
  call void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %244, %"struct.Graph::Edge"* %248, %"class.std::allocator.20"* dereferenceable(1) %250)
  %251 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %252 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %253 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %253, i32 0, i32 0
  %255 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %254, align 8
  %256 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %257 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %256, i32 0, i32 0
  %258 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %257, i32 0, i32 2
  %259 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %258, align 8
  %260 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %261 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %260, i32 0, i32 0
  %262 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %261, i32 0, i32 0
  %263 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %262, align 8
  %264 = ptrtoint %"struct.Graph::Edge"* %259 to i64
  %265 = ptrtoint %"struct.Graph::Edge"* %263 to i64
  %266 = sub i64 %264, 2618554657469095657
  %267 = sub i64 %266, %265
  %268 = add i64 %267, 2618554657469095657
  %269 = sub i64 %264, %265
  %270 = sdiv exact i64 %268, 16
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %251, %"struct.Graph::Edge"* %255, i64 %270)
  %271 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %272 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %273 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %272, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %273, i32 0, i32 0
  store %"struct.Graph::Edge"* %271, %"struct.Graph::Edge"** %274, align 8
  %275 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %276 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %277 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %276, i32 0, i32 0
  %278 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %277, i32 0, i32 1
  store %"struct.Graph::Edge"* %275, %"struct.Graph::Edge"** %278, align 8
  %279 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %280 = load i64, i64* %20, align 8
  %281 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %279, i64 %280
  %282 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %283 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %282, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %283, i32 0, i32 2
  store %"struct.Graph::Edge"* %281, %"struct.Graph::Edge"** %284, align 8
  %285 = load i32, i32* @x.205
  %286 = load i32, i32* @y.206
  %287 = sub i32 0, 1
  %288 = add i32 %285, %287
  %289 = sub i32 %285, 1
  %290 = mul i32 %285, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %286, 10
  %294 = xor i1 %292, true
  %295 = xor i1 %293, true
  %296 = xor i1 false, true
  %297 = and i1 %294, false
  %298 = and i1 %292, %296
  %299 = and i1 %295, false
  %300 = and i1 %293, %296
  %301 = or i1 %297, %298
  %302 = or i1 %299, %300
  %303 = xor i1 %301, %302
  %304 = or i1 %294, %295
  %305 = xor i1 %304, true
  %306 = or i1 false, %296
  %307 = and i1 %305, %306
  %308 = or i1 %303, %307
  %309 = or i1 %292, %293
  br i1 %308, label %310, label %359

; <label>:310:                                    ; preds = %240
  ret void

; <label>:311:                                    ; preds = %225
  %312 = load i8*, i8** %23, align 8
  %313 = load i32, i32* %24, align 4
  %314 = insertvalue { i8*, i32 } undef, i8* %312, 0
  %315 = insertvalue { i8*, i32 } %314, i32 %313, 1
  resume { i8*, i32 } %315

; <label>:316:                                    ; preds = %182
  %317 = landingpad { i8*, i32 }
          catch i8* null
  %318 = extractvalue { i8*, i32 } %317, 0
  call void @__clang_call_terminate(i8* %318) #10
  unreachable

; <label>:319:                                    ; preds = %224
  unreachable

; <label>:320:                                    ; preds = %17, %2
  %321 = alloca %"class.std::vector.18"*, align 8
  %322 = alloca %"struct.Graph::Edge"*, align 8
  %323 = alloca i64, align 8
  %324 = alloca %"struct.Graph::Edge"*, align 8
  %325 = alloca %"struct.Graph::Edge"*, align 8
  %326 = alloca i8*
  %327 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %321, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %322, align 8
  %328 = load %"class.std::vector.18"*, %"class.std::vector.18"** %321, align 8
  %329 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %328, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %329, i64* %323, align 8
  %330 = bitcast %"class.std::vector.18"* %328 to %"struct.std::_Vector_base.19"*
  %331 = load i64, i64* %323, align 8
  %332 = call %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %330, i64 %331)
  store %"struct.Graph::Edge"* %332, %"struct.Graph::Edge"** %324, align 8
  %333 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %324, align 8
  store %"struct.Graph::Edge"* %333, %"struct.Graph::Edge"** %325, align 8
  %334 = bitcast %"class.std::vector.18"* %328 to %"struct.std::_Vector_base.19"*
  %335 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %334, i32 0, i32 0
  %336 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %335 to %"class.std::allocator.20"*
  %337 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %324, align 8
  %338 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %328) #3
  %339 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %337, i64 %338
  %340 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %322, align 8
  %341 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %340) #3
  br label %17

; <label>:342:                                    ; preds = %81, %66
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %22, align 8
  %343 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %344 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %343, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %344, i32 0, i32 0
  %346 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %345, align 8
  %347 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %348 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %347, i32 0, i32 0
  %349 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %348, i32 0, i32 1
  %350 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %349, align 8
  %351 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %352 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %353 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %352) #3
  br label %81

; <label>:354:                                    ; preds = %139, %112
  %355 = landingpad { i8*, i32 }
          catch i8* null
  %356 = extractvalue { i8*, i32 } %355, 0
  store i8* %356, i8** %23, align 8
  %357 = extractvalue { i8*, i32 } %355, 1
  store i32 %357, i32* %24, align 4
  br label %139

; <label>:358:                                    ; preds = %205, %191
  br label %205

; <label>:359:                                    ; preds = %240, %226
  %360 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %361 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %360, i32 0, i32 0
  %362 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %361, i32 0, i32 0
  %363 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %362, align 8
  %364 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %365 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %364, i32 0, i32 0
  %366 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %365, i32 0, i32 1
  %367 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %366, align 8
  %368 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %369 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %368) #3
  call void @_ZSt8_DestroyIPN5Graph4EdgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::Edge"* %363, %"struct.Graph::Edge"* %367, %"class.std::allocator.20"* dereferenceable(1) %369)
  %370 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %371 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %372 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %371, i32 0, i32 0
  %373 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %372, i32 0, i32 0
  %374 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %373, align 8
  %375 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %376 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %375, i32 0, i32 0
  %377 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %376, i32 0, i32 2
  %378 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %377, align 8
  %379 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %380 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %379, i32 0, i32 0
  %381 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %380, i32 0, i32 0
  %382 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %381, align 8
  %383 = ptrtoint %"struct.Graph::Edge"* %378 to i64
  %384 = ptrtoint %"struct.Graph::Edge"* %382 to i64
  %385 = sub i64 0, -4035297932554465362
  %386 = sub i64 %385, %383
  %387 = add i64 %386, -4035297932554465362
  %388 = sub i64 0, %383
  %389 = add i64 %387, 8063588926328856608
  %390 = add i64 %389, %384
  %391 = sub i64 %390, 8063588926328856608
  %392 = add i64 %387, %384
  %393 = add i64 %383, -8234946781112298561
  %394 = sub i64 %393, %384
  %395 = sub i64 %394, -8234946781112298561
  %396 = sub i64 %383, %384
  %397 = mul i64 %395, %384
  %398 = shl i64 %383, %384
  %399 = sub i64 0, %384
  %400 = add i64 %383, %399
  %401 = sub i64 %383, %384
  %402 = mul i64 %400, %384
  %403 = sub i64 %383, -4414801122846134413
  %404 = sub i64 %403, %384
  %405 = add i64 %404, -4414801122846134413
  %406 = sub i64 %383, %384
  %407 = add i64 0, 1210193324596524916
  %408 = sub i64 %407, %405
  %409 = sub i64 %408, 1210193324596524916
  %410 = sub i64 0, %405
  %411 = sub i64 0, 16
  %412 = sub i64 %409, %411
  %413 = add i64 %409, 16
  %414 = add i64 %405, 364738492855179794
  %415 = sub i64 %414, 16
  %416 = sub i64 %415, 364738492855179794
  %417 = sub i64 %405, 16
  %418 = mul i64 %416, 16
  %419 = shl i64 %405, 16
  %420 = shl i64 %405, 16
  %421 = add i64 0, -3503153649363050399
  %422 = sub i64 %421, %405
  %423 = sub i64 %422, -3503153649363050399
  %424 = sub i64 0, %405
  %425 = sub i64 0, 16
  %426 = sub i64 %423, %425
  %427 = add i64 %423, 16
  %428 = sdiv exact i64 %405, 16
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.19"* %370, %"struct.Graph::Edge"* %374, i64 %428)
  %429 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %430 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %431 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %430, i32 0, i32 0
  %432 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %431, i32 0, i32 0
  store %"struct.Graph::Edge"* %429, %"struct.Graph::Edge"** %432, align 8
  %433 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %434 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %435 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %434, i32 0, i32 0
  %436 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %435, i32 0, i32 1
  store %"struct.Graph::Edge"* %433, %"struct.Graph::Edge"** %436, align 8
  %437 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %438 = load i64, i64* %20, align 8
  %439 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %437, i64 %438
  %440 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %441 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %440, i32 0, i32 0
  %442 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %441, i32 0, i32 2
  store %"struct.Graph::Edge"* %439, %"struct.Graph::Edge"** %442, align 8
  br label %240
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %9 = bitcast %"struct.Graph::Edge"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::Edge"*
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %12 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.Graph::Edge"* %10 to i8*
  %14 = bitcast %"struct.Graph::Edge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.18"*
  %8 = alloca %"class.std::vector.18"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  store %"class.std::vector.18"* %13, %"class.std::vector.18"** %7
  %14 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %15 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %14) #3
  %16 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %17 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %16) #3
  %18 = sub i64 0, %17
  %19 = add i64 %15, %18
  %20 = sub i64 %15, %17
  store i64 %19, i64* %6
  %21 = load i64, i64* %9, align 8
  store i64 %21, i64* %5
  %22 = alloca i32
  store i32 -1500497290, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %181
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -1500497290, label %27
    i32 -45561890, label %32
    i32 306080841, label %59
    i32 -1502450459, label %88
    i32 -1959933568, label %89
    i32 -1546708261, label %105
    i32 -939553079, label %133
    i32 1614978126, label %164
    i32 -1617911164, label %167
    i32 -468944395, label %170
    i32 -1523494682, label %172
    i32 225943604, label %174
    i32 -379690705, label %176
  ]

; <label>:26:                                     ; preds = %24
  br label %181

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %6
  %29 = load volatile i64, i64* %5
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 -45561890, i32 -1959933568
  store i32 %31, i32* %22
  br label %181

; <label>:32:                                     ; preds = %24
  %33 = load i32, i32* @x.209
  %34 = load i32, i32* @y.210
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 306080841, i32 225943604
  store i32 %58, i32* %22
  br label %181

; <label>:59:                                     ; preds = %24
  %60 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %60) #13
  %61 = load i32, i32* @x.209
  %62 = load i32, i32* @y.210
  %63 = add i32 %61, -1222263520
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -1222263520
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1502450459, i32 225943604
  store i32 %87, i32* %22
  br label %181

; <label>:88:                                     ; preds = %24
  unreachable

; <label>:89:                                     ; preds = %24
  %90 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %91 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %90) #3
  %92 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %93 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %92) #3
  store i64 %93, i64* %12, align 8
  %94 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %91, 6732744548112955011
  %97 = add i64 %96, %95
  %98 = sub i64 %97, 6732744548112955011
  %99 = add i64 %91, %95
  store i64 %98, i64* %11, align 8
  %100 = load i64, i64* %11, align 8
  %101 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %102 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %101) #3
  %103 = icmp ult i64 %100, %102
  %104 = select i1 %103, i32 -1617911164, i32 -1546708261
  store i32 %104, i32* %22
  br label %181

; <label>:105:                                    ; preds = %24
  %106 = load i32, i32* @x.209
  %107 = load i32, i32* @y.210
  %108 = sub i32 %106, -1763399735
  %109 = sub i32 %108, 1
  %110 = add i32 %109, -1763399735
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 -939553079, i32 -379690705
  store i32 %132, i32* %22
  br label %181

; <label>:133:                                    ; preds = %24
  %134 = load i64, i64* %11, align 8
  %135 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %136 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %135) #3
  %137 = icmp ugt i64 %134, %136
  store i1 %137, i1* %4
  %138 = load i32, i32* @x.209
  %139 = load i32, i32* @y.210
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 1614978126, i32 -379690705
  store i32 %163, i32* %22
  br label %181

; <label>:164:                                    ; preds = %24
  %165 = load volatile i1, i1* %4
  %166 = select i1 %165, i32 -1617911164, i32 -468944395
  store i32 %166, i32* %22
  br label %181

; <label>:167:                                    ; preds = %24
  %168 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %169 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %168) #3
  store i32 -1523494682, i32* %22
  store i64 %169, i64* %23
  br label %181

; <label>:170:                                    ; preds = %24
  %171 = load i64, i64* %11, align 8
  store i32 -1523494682, i32* %22
  store i64 %171, i64* %23
  br label %181

; <label>:172:                                    ; preds = %24
  %173 = load i64, i64* %23
  ret i64 %173

; <label>:174:                                    ; preds = %24
  %175 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %175) #13
  store i32 306080841, i32* %22
  br label %181

; <label>:176:                                    ; preds = %24
  %177 = load i64, i64* %11, align 8
  %178 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %179 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %178) #3
  %180 = icmp ugt i64 %177, %179
  store i32 -939553079, i32* %22
  br label %181

; <label>:181:                                    ; preds = %176, %174, %170, %167, %164, %133, %105, %89, %59, %32, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.19"*
  %5 = alloca %"struct.std::_Vector_base.19"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5, align 8
  store %"struct.std::_Vector_base.19"* %7, %"struct.std::_Vector_base.19"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1580736782, i32* %9
  %10 = alloca %"struct.Graph::Edge"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1580736782, label %14
    i32 -1161737160, label %18
    i32 2085257798, label %24
    i32 453266770, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1161737160, i32 2085257798
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %20 to %"class.std::allocator.20"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"struct.Graph::Edge"* @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8allocateERS2_m(%"class.std::allocator.20"* dereferenceable(1) %21, i64 %22)
  store i32 453266770, i32* %9
  store %"struct.Graph::Edge"* %23, %"struct.Graph::Edge"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 453266770, i32* %9
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10
  ret %"struct.Graph::Edge"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %8 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  %12 = ptrtoint %"struct.Graph::Edge"* %7 to i64
  %13 = ptrtoint %"struct.Graph::Edge"* %11 to i64
  %14 = add i64 %12, -1217159290533860300
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -1217159290533860300
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.23", align 8
  %10 = alloca %"class.std::move_iterator.23", align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %6, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %12 = call %"struct.Graph::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Edge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  store %"struct.Graph::Edge"* %12, %"struct.Graph::Edge"** %13, align 8
  %14 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %15 = call %"struct.Graph::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Edge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  store %"struct.Graph::Edge"* %15, %"struct.Graph::Edge"** %16, align 8
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %18 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %10, i32 0, i32 0
  %22 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %23 = call %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Edge"* %20, %"struct.Graph::Edge"* %22, %"struct.Graph::Edge"* %17, %"class.std::allocator.20"* dereferenceable(1) %18)
  ret %"struct.Graph::Edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1), %"struct.Graph::Edge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.21"* %6, %"struct.Graph::Edge"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.219
  %6 = load i32, i32* @y.220
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1736144489, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1736144489, label %18
    i32 2010473579, label %38
    i32 1108407043, label %71
    i32 -711990323, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2010473579, i32 -711990323
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %39, align 8
  %40 = load %"class.std::vector.18"*, %"class.std::vector.18"** %39, align 8
  %41 = bitcast %"class.std::vector.18"* %40 to %"struct.std::_Vector_base.19"*
  %42 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %41) #3
  %43 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.20"* dereferenceable(1) %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.219
  %45 = load i32, i32* @y.220
  %46 = add i32 %44, 909295422
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 909295422
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1108407043, i32 -711990323
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %74, align 8
  %75 = load %"class.std::vector.18"*, %"class.std::vector.18"** %74, align 8
  %76 = bitcast %"class.std::vector.18"* %75 to %"struct.std::_Vector_base.19"*
  %77 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %76) #3
  %78 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.20"* dereferenceable(1) %77) #3
  store i32 2010473579, i32* %14
  br label %79

; <label>:79:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.221
  %6 = load i32, i32* @y.222
  %7 = sub i32 %5, 561829016
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 561829016
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 677413450, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 677413450, label %19
    i32 -1488770369, label %39
    i32 -1493505268, label %58
    i32 1750982399, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1488770369, i32 1750982399
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %40, align 8
  %41 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %40, align 8
  %42 = bitcast %"class.std::allocator.20"* %41 to %"class.__gnu_cxx::new_allocator.21"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.221
  %45 = load i32, i32* @y.222
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1493505268, i32 1750982399
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %61, align 8
  %62 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %61, align 8
  %63 = bitcast %"class.std::allocator.20"* %62 to %"class.__gnu_cxx::new_allocator.21"*
  %64 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %63) #3
  store i32 -1488770369, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE8allocateERS2_m(%"class.std::allocator.20"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::Edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.227
  %7 = load i32, i32* @y.228
  %8 = add i32 %6, 1015900187
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1015900187
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1489343756, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1489343756, label %20
    i32 712385614, label %40
    i32 1342669567, label %74
    i32 1352820314, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 712385614, i32 1352820314
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.20"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %41, align 8
  %44 = bitcast %"class.std::allocator.20"* %43 to %"class.__gnu_cxx::new_allocator.21"*
  %45 = load i64, i64* %42, align 8
  %46 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %44, i64 %45, i8* null)
  store %"struct.Graph::Edge"* %46, %"struct.Graph::Edge"** %3
  %47 = load i32, i32* @x.227
  %48 = load i32, i32* @y.228
  %49 = add i32 %47, -1887561834
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1887561834
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1342669567, i32 1352820314
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3
  ret %"struct.Graph::Edge"* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.20"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %77, align 8
  store i64 %1, i64* %78, align 8
  %79 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %77, align 8
  %80 = bitcast %"class.std::allocator.20"* %79 to %"class.__gnu_cxx::new_allocator.21"*
  %81 = load i64, i64* %78, align 8
  %82 = call %"struct.Graph::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %80, i64 %81, i8* null)
  store i32 712385614, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1416901188, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1416901188, label %16
    i32 1714229176, label %21
    i32 -1821018098, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1714229176, i32 -1821018098
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 16
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.Graph::Edge"*
  ret %"struct.Graph::Edge"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::Edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.231
  %9 = load i32, i32* @y.232
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 991353461, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 991353461, label %21
    i32 2040779929, label %41
    i32 -282925645, label %74
    i32 -512364289, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 2040779929, i32 -512364289
  store i32 %40, i32* %17
  br label %95

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.23", align 8
  %43 = alloca %"class.std::move_iterator.23", align 8
  %44 = alloca %"struct.Graph::Edge"*, align 8
  %45 = alloca %"class.std::allocator.20"*, align 8
  %46 = alloca %"class.std::move_iterator.23", align 8
  %47 = alloca %"class.std::move_iterator.23", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %42, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %43, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %49, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %44, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %45, align 8
  %50 = bitcast %"class.std::move_iterator.23"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.23"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.23"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.23"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %46, i32 0, i32 0
  %56 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %47, i32 0, i32 0
  %58 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %57, align 8
  %59 = call %"struct.Graph::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_(%"struct.Graph::Edge"* %56, %"struct.Graph::Edge"* %58, %"struct.Graph::Edge"* %54)
  store %"struct.Graph::Edge"* %59, %"struct.Graph::Edge"** %5
  %60 = load i32, i32* @x.231
  %61 = load i32, i32* @y.232
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -282925645, i32 -512364289
  store i32 %73, i32* %17
  br label %95

; <label>:74:                                     ; preds = %18
  %75 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5
  ret %"struct.Graph::Edge"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::move_iterator.23", align 8
  %78 = alloca %"class.std::move_iterator.23", align 8
  %79 = alloca %"struct.Graph::Edge"*, align 8
  %80 = alloca %"class.std::allocator.20"*, align 8
  %81 = alloca %"class.std::move_iterator.23", align 8
  %82 = alloca %"class.std::move_iterator.23", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %77, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %78, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %84, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %79, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %80, align 8
  %85 = bitcast %"class.std::move_iterator.23"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.23"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.std::move_iterator.23"* %82 to i8*
  %88 = bitcast %"class.std::move_iterator.23"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %79, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %81, i32 0, i32 0
  %91 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %90, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %82, i32 0, i32 0
  %93 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %92, align 8
  %94 = call %"struct.Graph::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_(%"struct.Graph::Edge"* %91, %"struct.Graph::Edge"* %93, %"struct.Graph::Edge"* %89)
  store i32 2040779929, i32* %17
  br label %95

; <label>:95:                                     ; preds = %76, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::Edge"*) #0 comdat {
  %2 = alloca %"struct.Graph::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.233
  %6 = load i32, i32* @y.234
  %7 = sub i32 %5, 1457846486
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1457846486
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -924138406, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -924138406, label %19
    i32 304043883, label %39
    i32 -1590384038, label %59
    i32 1574903549, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 304043883, i32 1574903549
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.23", align 8
  %41 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %41, align 8
  %42 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %41, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_(%"class.std::move_iterator.23"* %40, %"struct.Graph::Edge"* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %40, i32 0, i32 0
  %44 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %43, align 8
  store %"struct.Graph::Edge"* %44, %"struct.Graph::Edge"** %2
  %45 = load i32, i32* @x.233
  %46 = load i32, i32* @y.234
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1590384038, i32 1574903549
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2
  ret %"struct.Graph::Edge"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.23", align 8
  %63 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %63, align 8
  %64 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %63, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_(%"class.std::move_iterator.23"* %62, %"struct.Graph::Edge"* %64)
  %65 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %62, i32 0, i32 0
  %66 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %65, align 8
  store i32 304043883, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4EdgeEES3_ET0_T_S6_S5_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.235
  %8 = load i32, i32* @y.236
  %9 = add i32 %7, -1665139543
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1665139543
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1025754172, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1025754172, label %21
    i32 537759364, label %41
    i32 -549260123, label %75
    i32 -265370499, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 537759364, i32 -265370499
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.23", align 8
  %43 = alloca %"class.std::move_iterator.23", align 8
  %44 = alloca %"struct.Graph::Edge"*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.std::move_iterator.23", align 8
  %47 = alloca %"class.std::move_iterator.23", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %42, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %43, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %49, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.std::move_iterator.23"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.23"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.23"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.23"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %46, i32 0, i32 0
  %56 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %47, i32 0, i32 0
  %58 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %57, align 8
  %59 = call %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_(%"struct.Graph::Edge"* %56, %"struct.Graph::Edge"* %58, %"struct.Graph::Edge"* %54)
  store %"struct.Graph::Edge"* %59, %"struct.Graph::Edge"** %4
  %60 = load i32, i32* @x.235
  %61 = load i32, i32* @y.236
  %62 = sub i32 %60, -1377292368
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -1377292368
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 -549260123, i32 -265370499
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4
  ret %"struct.Graph::Edge"* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::move_iterator.23", align 8
  %79 = alloca %"class.std::move_iterator.23", align 8
  %80 = alloca %"struct.Graph::Edge"*, align 8
  %81 = alloca i8, align 1
  %82 = alloca %"class.std::move_iterator.23", align 8
  %83 = alloca %"class.std::move_iterator.23", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %78, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %79, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %85, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %80, align 8
  store i8 1, i8* %81, align 1
  %86 = bitcast %"class.std::move_iterator.23"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator.23"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.std::move_iterator.23"* %83 to i8*
  %89 = bitcast %"class.std::move_iterator.23"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %80, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %82, i32 0, i32 0
  %92 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %91, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %83, i32 0, i32 0
  %94 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %93, align 8
  %95 = call %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_(%"struct.Graph::Edge"* %92, %"struct.Graph::Edge"* %94, %"struct.Graph::Edge"* %90)
  store i32 537759364, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph4EdgeEES5_EET0_T_S8_S7_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.237
  %5 = load i32, i32* @y.238
  %6 = sub i32 %4, -268428656
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -268428656
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %243

; <label>:18:                                     ; preds = %3, %243
  %19 = alloca %"class.std::move_iterator.23", align 8
  %20 = alloca %"class.std::move_iterator.23", align 8
  %21 = alloca %"struct.Graph::Edge"*, align 8
  %22 = alloca %"struct.Graph::Edge"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  %25 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %19, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %25, align 8
  %26 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %20, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %26, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %21, align 8
  %27 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  store %"struct.Graph::Edge"* %27, %"struct.Graph::Edge"** %22, align 8
  %28 = load i32, i32* @x.237
  %29 = load i32, i32* @y.238
  %30 = sub i32 %28, -197214209
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -197214209
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %243

; <label>:54:                                     ; preds = %18
  br label %55

; <label>:55:                                     ; preds = %119, %54
  %56 = invoke zeroext i1 @_ZStneIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.23"* dereferenceable(8) %19, %"class.std::move_iterator.23"* dereferenceable(8) %20)
          to label %57 unwind label %122

; <label>:57:                                     ; preds = %55
  %58 = load i32, i32* @x.237
  %59 = load i32, i32* @y.238
  %60 = sub i32 %58, 1425300539
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 1425300539
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %253

; <label>:84:                                     ; preds = %57, %253
  %85 = load i32, i32* @x.237
  %86 = load i32, i32* @y.238
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %253

; <label>:110:                                    ; preds = %84
  br i1 %56, label %111, label %172

; <label>:111:                                    ; preds = %110
  %112 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %113 = call %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16) %112) #3
  %114 = invoke dereferenceable(16) %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEEdeEv(%"class.std::move_iterator.23"* %19)
          to label %115 unwind label %122

; <label>:115:                                    ; preds = %111
  invoke void @_ZSt10_ConstructIN5Graph4EdgeEJS1_EEvPT_DpOT0_(%"struct.Graph::Edge"* %113, %"struct.Graph::Edge"* dereferenceable(16) %114)
          to label %116 unwind label %122

; <label>:116:                                    ; preds = %115
  br label %117

; <label>:117:                                    ; preds = %116
  %118 = invoke dereferenceable(8) %"class.std::move_iterator.23"* @_ZNSt13move_iteratorIPN5Graph4EdgeEEppEv(%"class.std::move_iterator.23"* %19)
          to label %119 unwind label %122

; <label>:119:                                    ; preds = %117
  %120 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %121 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %120, i32 1
  store %"struct.Graph::Edge"* %121, %"struct.Graph::Edge"** %22, align 8
  br label %55

; <label>:122:                                    ; preds = %117, %115, %111, %55
  %123 = landingpad { i8*, i32 }
          catch i8* null
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %23, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %24, align 4
  br label %126

; <label>:126:                                    ; preds = %122
  %127 = load i32, i32* @x.237
  %128 = load i32, i32* @y.238
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  br i1 %138, label %140, label %254

; <label>:140:                                    ; preds = %126, %254
  %141 = load i8*, i8** %23, align 8
  %142 = call i8* @__cxa_begin_catch(i8* %141) #3
  %143 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %144 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %145 = load i32, i32* @x.237
  %146 = load i32, i32* @y.238
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = xor i1 %152, true
  %155 = xor i1 %153, true
  %156 = xor i1 false, true
  %157 = and i1 %154, false
  %158 = and i1 %152, %156
  %159 = and i1 %155, false
  %160 = and i1 %153, %156
  %161 = or i1 %157, %158
  %162 = or i1 %159, %160
  %163 = xor i1 %161, %162
  %164 = or i1 %154, %155
  %165 = xor i1 %164, true
  %166 = or i1 false, %156
  %167 = and i1 %165, %166
  %168 = or i1 %163, %167
  %169 = or i1 %152, %153
  br i1 %168, label %170, label %254

; <label>:170:                                    ; preds = %140
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %143, %"struct.Graph::Edge"* %144)
          to label %171 unwind label %174

; <label>:171:                                    ; preds = %170
  invoke void @__cxa_rethrow() #13
          to label %242 unwind label %174

; <label>:172:                                    ; preds = %110
  %173 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  ret %"struct.Graph::Edge"* %173

; <label>:174:                                    ; preds = %171, %170
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %23, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %178 unwind label %239

; <label>:178:                                    ; preds = %174
  br label %234
                                                  ; No predecessors!
  %180 = load i32, i32* @x.237
  %181 = load i32, i32* @y.238
  %182 = sub i32 %180, -796752765
  %183 = sub i32 %182, 1
  %184 = add i32 %183, -796752765
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %259

; <label>:206:                                    ; preds = %179, %259
  call void @llvm.trap()
  %207 = load i32, i32* @x.237
  %208 = load i32, i32* @y.238
  %209 = add i32 %207, 843732915
  %210 = sub i32 %209, 1
  %211 = sub i32 %210, 843732915
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = xor i1 %215, true
  %218 = xor i1 %216, true
  %219 = xor i1 true, true
  %220 = and i1 %217, true
  %221 = and i1 %215, %219
  %222 = and i1 %218, true
  %223 = and i1 %216, %219
  %224 = or i1 %220, %221
  %225 = or i1 %222, %223
  %226 = xor i1 %224, %225
  %227 = or i1 %217, %218
  %228 = xor i1 %227, true
  %229 = or i1 true, %219
  %230 = and i1 %228, %229
  %231 = or i1 %226, %230
  %232 = or i1 %215, %216
  br i1 %231, label %233, label %259

; <label>:233:                                    ; preds = %206
  unreachable

; <label>:234:                                    ; preds = %178
  %235 = load i8*, i8** %23, align 8
  %236 = load i32, i32* %24, align 4
  %237 = insertvalue { i8*, i32 } undef, i8* %235, 0
  %238 = insertvalue { i8*, i32 } %237, i32 %236, 1
  resume { i8*, i32 } %238

; <label>:239:                                    ; preds = %174
  %240 = landingpad { i8*, i32 }
          catch i8* null
  %241 = extractvalue { i8*, i32 } %240, 0
  call void @__clang_call_terminate(i8* %241) #10
  unreachable

; <label>:242:                                    ; preds = %171
  unreachable

; <label>:243:                                    ; preds = %18, %3
  %244 = alloca %"class.std::move_iterator.23", align 8
  %245 = alloca %"class.std::move_iterator.23", align 8
  %246 = alloca %"struct.Graph::Edge"*, align 8
  %247 = alloca %"struct.Graph::Edge"*, align 8
  %248 = alloca i8*
  %249 = alloca i32
  %250 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %244, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %250, align 8
  %251 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %245, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %251, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %246, align 8
  %252 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %246, align 8
  store %"struct.Graph::Edge"* %252, %"struct.Graph::Edge"** %247, align 8
  br label %18

; <label>:253:                                    ; preds = %84, %57
  br label %84

; <label>:254:                                    ; preds = %140, %126
  %255 = load i8*, i8** %23, align 8
  %256 = call i8* @__cxa_begin_catch(i8* %255) #3
  %257 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %21, align 8
  %258 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  br label %140

; <label>:259:                                    ; preds = %206, %179
  call void @llvm.trap()
  br label %206
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.23"* dereferenceable(8), %"class.std::move_iterator.23"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.23"*, align 8
  %4 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %3, align 8
  store %"class.std::move_iterator.23"* %1, %"class.std::move_iterator.23"** %4, align 8
  %5 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %3, align 8
  %6 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.23"* dereferenceable(8) %5, %"class.std::move_iterator.23"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph4EdgeEJS1_EEvPT_DpOT0_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.241
  %6 = load i32, i32* @y.242
  %7 = sub i32 %5, -1255585918
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1255585918
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1820642122, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1820642122, label %19
    i32 -602290619, label %27
    i32 -500024850, label %52
    i32 2028633137, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -602290619, i32 2028633137
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.Graph::Edge"*, align 8
  %29 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %28, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %29, align 8
  %30 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %28, align 8
  %31 = bitcast %"struct.Graph::Edge"* %30 to i8*
  %32 = bitcast i8* %31 to %"struct.Graph::Edge"*
  %33 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %29, align 8
  %34 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %33) #3
  %35 = bitcast %"struct.Graph::Edge"* %32 to i8*
  %36 = bitcast %"struct.Graph::Edge"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = load i32, i32* @x.241
  %38 = load i32, i32* @y.242
  %39 = sub i32 %37, -474293036
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -474293036
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -500024850, i32 2028633137
  store i32 %51, i32* %15
  br label %63

; <label>:52:                                     ; preds = %16
  ret void

; <label>:53:                                     ; preds = %16
  %54 = alloca %"struct.Graph::Edge"*, align 8
  %55 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %54, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %55, align 8
  %56 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %54, align 8
  %57 = bitcast %"struct.Graph::Edge"* %56 to i8*
  %58 = bitcast i8* %57 to %"struct.Graph::Edge"*
  %59 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %55, align 8
  %60 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIN5Graph4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %59) #3
  %61 = bitcast %"struct.Graph::Edge"* %58 to i8*
  %62 = bitcast %"struct.Graph::Edge"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 16, i32 8, i1 false)
  store i32 -602290619, i32* %15
  br label %63

; <label>:63:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  %4 = bitcast %"struct.Graph::Edge"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.Graph::Edge"*
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEEdeEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %2, align 8
  %3 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.23"* @_ZNSt13move_iteratorIPN5Graph4EdgeEEppEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %2, align 8
  %3 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %5, i32 1
  store %"struct.Graph::Edge"* %6, %"struct.Graph::Edge"** %4, align 8
  ret %"class.std::move_iterator.23"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN5Graph4EdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.23"* dereferenceable(8), %"class.std::move_iterator.23"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.249
  %7 = load i32, i32* @y.250
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -864637992, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -864637992, label %19
    i32 274335671, label %39
    i32 1966738357, label %61
    i32 686368241, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 274335671, i32 686368241
  store i32 %38, i32* %15
  br label %71

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.23"*, align 8
  %41 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %40, align 8
  store %"class.std::move_iterator.23"* %1, %"class.std::move_iterator.23"** %41, align 8
  %42 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %40, align 8
  %43 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.23"* %42)
  %44 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %41, align 8
  %45 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.23"* %44)
  %46 = icmp eq %"struct.Graph::Edge"* %43, %45
  store i1 %46, i1* %3
  %47 = load i32, i32* @x.249
  %48 = load i32, i32* @y.250
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1966738357, i32 686368241
  store i32 %60, i32* %15
  br label %71

; <label>:61:                                     ; preds = %16
  %62 = load volatile i1, i1* %3
  ret i1 %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::move_iterator.23"*, align 8
  %65 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %64, align 8
  store %"class.std::move_iterator.23"* %1, %"class.std::move_iterator.23"** %65, align 8
  %66 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %64, align 8
  %67 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.23"* %66)
  %68 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %65, align 8
  %69 = call %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.23"* %68)
  %70 = icmp eq %"struct.Graph::Edge"* %67, %69
  store i32 274335671, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt13move_iteratorIPN5Graph4EdgeEE4baseEv(%"class.std::move_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.251
  %6 = load i32, i32* @y.252
  %7 = add i32 %5, 1811884348
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1811884348
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -398521211, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -398521211, label %19
    i32 -1445803937, label %27
    i32 -1249619254, label %59
    i32 1122237215, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1445803937, i32 1122237215
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %28, align 8
  %29 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %29, i32 0, i32 0
  %31 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %30, align 8
  store %"struct.Graph::Edge"* %31, %"struct.Graph::Edge"** %2
  %32 = load i32, i32* @x.251
  %33 = load i32, i32* @y.252
  %34 = sub i32 %32, 772247920
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 772247920
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1249619254, i32 1122237215
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2
  ret %"struct.Graph::Edge"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.23"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %62, align 8
  %63 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %63, i32 0, i32 0
  %65 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %64, align 8
  store i32 -1445803937, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph4EdgeEEC2ES2_(%"class.std::move_iterator.23"*, %"struct.Graph::Edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.23"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::move_iterator.23"* %0, %"class.std::move_iterator.23"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"class.std::move_iterator.23"*, %"class.std::move_iterator.23"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.23", %"class.std::move_iterator.23"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  store %"struct.Graph::Edge"* %7, %"struct.Graph::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Graph::Edge"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.255
  %6 = load i32, i32* @y.256
  %7 = add i32 %5, 1455330701
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1455330701
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1729130441, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1729130441, label %19
    i32 -794524884, label %39
    i32 30542394, label %71
    i32 570571092, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -794524884, i32 570571092
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %41 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %40, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %40, align 8
  %43 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %41, align 8
  %44 = load i32, i32* @x.255
  %45 = load i32, i32* @y.256
  %46 = sub i32 %44, -241501638
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -241501638
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 30542394, i32 570571092
  store i32 %70, i32* %15
  br label %77

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %74 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %73, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %74, align 8
  %75 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %73, align 8
  %76 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %74, align 8
  store i32 -794524884, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2Ev(%"class.__gnu_cxx::__normal_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.257
  %5 = load i32, i32* @y.258
  %6 = sub i32 %4, 562558175
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 562558175
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1865566691, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1865566691, label %18
    i32 -1365910550, label %26
    i32 1273007437, label %57
    i32 -1060083217, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1365910550, i32 -1060083217
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %29, align 8
  %30 = load i32, i32* @x.257
  %31 = load i32, i32* @y.258
  %32 = sub i32 %30, 199449096
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 199449096
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1273007437, i32 -1060083217
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %59, align 8
  %60 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %59, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %60, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %61, align 8
  store i32 -1365910550, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %4 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %5 = bitcast %"class.std::vector.18"* %4 to %"struct.std::_Vector_base.19"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.Graph::Edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  ret %"struct.Graph::Edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %9, align 8
  %11 = icmp ne %"struct.Graph::Edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %4 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %5 = bitcast %"class.std::vector.18"* %4 to %"struct.std::_Vector_base.19"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.Graph::Edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  ret %"struct.Graph::Edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE(%"class.std::vector.18"*, %"struct.Graph::Edge"*) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %9, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %5, align 8
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %11 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %10) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Graph::Edge"* %11, %"struct.Graph::Edge"** %12, align 8
  %13 = call %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE6cbeginEv(%"class.std::vector.18"* %10) #3
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %8, i32 0, i32 0
  store %"struct.Graph::Edge"* %13, %"struct.Graph::Edge"** %14, align 8
  %15 = call i64 @_ZN9__gnu_cxxmiIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %8) #3
  %16 = call %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %7, i64 %15) #3
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Graph::Edge"* %16, %"struct.Graph::Edge"** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %19 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %18, align 8
  %20 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE(%"class.std::vector.18"* %10, %"struct.Graph::Edge"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Graph::Edge"* %20, %"struct.Graph::Edge"** %21, align 8
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %23 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  ret %"struct.Graph::Edge"* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.269
  %6 = load i32, i32* @y.270
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2001649800, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %58
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2001649800, label %18
    i32 -784087416, label %26
    i32 -2095723489, label %49
    i32 -969383975, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %58

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -784087416, i32 -969383975
  store i32 %25, i32* %14
  br label %58

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %27, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %27, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %29, i32 0, i32 0
  %31 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %32 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %31) #3
  %33 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %32, align 8
  store %"struct.Graph::Edge"* %33, %"struct.Graph::Edge"** %30, align 8
  %34 = load i32, i32* @x.269
  %35 = load i32, i32* @y.270
  %36 = sub i32 %34, -118677881
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -118677881
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -2095723489, i32 -969383975
  store i32 %48, i32* %14
  br label %58

; <label>:49:                                     ; preds = %15
  ret void

; <label>:50:                                     ; preds = %15
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %51, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %51, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %53, i32 0, i32 0
  %55 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %56 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %55) #3
  %57 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %56, align 8
  store %"struct.Graph::Edge"* %57, %"struct.Graph::Edge"** %54, align 8
  store i32 -784087416, i32* %14
  br label %58

; <label>:58:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEmmEi(%"class.__gnu_cxx::__normal_iterator"*, i32) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  %10 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %9, i32 -1
  store %"struct.Graph::Edge"* %10, %"struct.Graph::Edge"** %8, align 8
  store %"struct.Graph::Edge"* %9, %"struct.Graph::Edge"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %3, %"struct.Graph::Edge"** dereferenceable(8) %6) #3
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %12 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %11, align 8
  ret %"struct.Graph::Edge"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEi(%"class.__gnu_cxx::__normal_iterator"*, i32) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::Edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.273
  %7 = load i32, i32* @y.274
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 529122241, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 529122241, label %19
    i32 2083858684, label %39
    i32 845578799, label %64
    i32 -1105267983, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2083858684, i32 -1105267983
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %42 = alloca i32, align 4
  %43 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  store i32 %1, i32* %42, align 4
  %44 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %46 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %45, align 8
  %47 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %46, i32 1
  store %"struct.Graph::Edge"* %47, %"struct.Graph::Edge"** %45, align 8
  store %"struct.Graph::Edge"* %46, %"struct.Graph::Edge"** %43, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %40, %"struct.Graph::Edge"** dereferenceable(8) %43) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %49 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %48, align 8
  store %"struct.Graph::Edge"* %49, %"struct.Graph::Edge"** %3
  %50 = load i32, i32* @x.273
  %51 = load i32, i32* @y.274
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 845578799, i32 -1105267983
  store i32 %63, i32* %15
  br label %77

; <label>:64:                                     ; preds = %16
  %65 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3
  ret %"struct.Graph::Edge"* %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %69 = alloca i32, align 4
  %70 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  store i32 %1, i32* %69, align 4
  %71 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %71, i32 0, i32 0
  %73 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %72, align 8
  %74 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %73, i32 1
  store %"struct.Graph::Edge"* %74, %"struct.Graph::Edge"** %72, align 8
  store %"struct.Graph::Edge"* %73, %"struct.Graph::Edge"** %70, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %67, %"struct.Graph::Edge"** dereferenceable(8) %70) #3
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %67, i32 0, i32 0
  %76 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %75, align 8
  store i32 2083858684, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.Graph::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.275
  %6 = load i32, i32* @y.276
  %7 = add i32 %5, 1835254491
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1835254491
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -98551341, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -98551341, label %19
    i32 -1984365515, label %39
    i32 1978720579, label %73
    i32 -1323088157, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1984365515, i32 -1323088157
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca %"struct.Graph::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %41, align 8
  %45 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %44, align 8
  store %"struct.Graph::Edge"* %45, %"struct.Graph::Edge"** %43, align 8
  %46 = load i32, i32* @x.275
  %47 = load i32, i32* @y.276
  %48 = sub i32 %46, -676612294
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -676612294
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1978720579, i32 -1323088157
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %76 = alloca %"struct.Graph::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %75, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %76, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %75, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  %79 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %76, align 8
  %80 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %79, align 8
  store %"struct.Graph::Edge"* %80, %"struct.Graph::Edge"** %78, align 8
  store i32 -1984365515, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"struct.Graph::Edge"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE(%"class.std::vector.18"*, %"struct.Graph::Edge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %13, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %6, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %14, %"class.std::vector.18"** %3
  %15 = call %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %5, i64 1) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Graph::Edge"* %15, %"struct.Graph::Edge"** %16, align 8
  %17 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  %18 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %17) #3
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.Graph::Edge"* %18, %"struct.Graph::Edge"** %19, align 8
  %20 = alloca i32
  store i32 -1327707312, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %63
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1327707312, label %24
    i32 -1429898661, label %27
    i32 -1018786878, label %43
  ]

; <label>:23:                                     ; preds = %21
  br label %63

; <label>:24:                                     ; preds = %21
  %25 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8) #3
  %26 = select i1 %25, i32 -1429898661, i32 -1018786878
  store i32 %26, i32* %20
  br label %63

; <label>:27:                                     ; preds = %21
  %28 = call %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %5, i64 1) #3
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store %"struct.Graph::Edge"* %28, %"struct.Graph::Edge"** %29, align 8
  %30 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  %31 = call %"struct.Graph::Edge"* @_ZNSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %30) #3
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  store %"struct.Graph::Edge"* %31, %"struct.Graph::Edge"** %32, align 8
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %34 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 8, i1 false)
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %36 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %35, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %38 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %37, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %40 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %39, align 8
  %41 = call %"struct.Graph::Edge"* @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%"struct.Graph::Edge"* %36, %"struct.Graph::Edge"* %38, %"struct.Graph::Edge"* %40)
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"struct.Graph::Edge"* %41, %"struct.Graph::Edge"** %42, align 8
  store i32 -1018786878, i32* %20
  br label %63

; <label>:43:                                     ; preds = %21
  %44 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  %45 = bitcast %"class.std::vector.18"* %44 to %"struct.std::_Vector_base.19"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %46, i32 0, i32 1
  %48 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %47, align 8
  %49 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %48, i32 -1
  store %"struct.Graph::Edge"* %49, %"struct.Graph::Edge"** %47, align 8
  %50 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  %51 = bitcast %"class.std::vector.18"* %50 to %"struct.std::_Vector_base.19"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %52 to %"class.std::allocator.20"*
  %54 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  %55 = bitcast %"class.std::vector.18"* %54 to %"struct.std::_Vector_base.19"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %56, i32 0, i32 1
  %58 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %57, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.20"* dereferenceable(1) %53, %"struct.Graph::Edge"* %58)
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 8, i1 false)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %62 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %61, align 8
  ret %"struct.Graph::Edge"* %62

; <label>:63:                                     ; preds = %27, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %9, i64 %10
  store %"struct.Graph::Edge"* %11, %"struct.Graph::Edge"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %3, %"struct.Graph::Edge"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %13 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %12, align 8
  ret %"struct.Graph::Edge"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.283
  %7 = load i32, i32* @y.284
  %8 = sub i32 %6, -29919064
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -29919064
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -944230657, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %140
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -944230657, label %20
    i32 376750151, label %40
    i32 -990491731, label %71
    i32 -208357844, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %140

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 376750151, i32 -208357844
  store i32 %39, i32* %16
  br label %140

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %41, align 8
  %44 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %43) #3
  %45 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %42, align 8
  %47 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %46) #3
  %48 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %47, align 8
  %49 = ptrtoint %"struct.Graph::Edge"* %45 to i64
  %50 = ptrtoint %"struct.Graph::Edge"* %48 to i64
  %51 = add i64 %49, -4478862063780090885
  %52 = sub i64 %51, %50
  %53 = sub i64 %52, -4478862063780090885
  %54 = sub i64 %49, %50
  %55 = sdiv exact i64 %53, 16
  store i64 %55, i64* %3
  %56 = load i32, i32* @x.283
  %57 = load i32, i32* @y.284
  %58 = add i32 %56, 428397609
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 428397609
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -990491731, i32 -208357844
  store i32 %70, i32* %16
  br label %140

; <label>:71:                                     ; preds = %17
  %72 = load volatile i64, i64* %3
  ret i64 %72

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %74, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %75, align 8
  %76 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %74, align 8
  %77 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %76) #3
  %78 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %77, align 8
  %79 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %75, align 8
  %80 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %79) #3
  %81 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %80, align 8
  %82 = ptrtoint %"struct.Graph::Edge"* %78 to i64
  %83 = ptrtoint %"struct.Graph::Edge"* %81 to i64
  %84 = add i64 0, -6888433613241661826
  %85 = sub i64 %84, %82
  %86 = sub i64 %85, -6888433613241661826
  %87 = sub i64 0, %82
  %88 = sub i64 0, %83
  %89 = sub i64 %86, %88
  %90 = add i64 %86, %83
  %91 = sub i64 0, %82
  %92 = add i64 0, %91
  %93 = sub i64 0, %82
  %94 = add i64 %92, -5073471872847758699
  %95 = add i64 %94, %83
  %96 = sub i64 %95, -5073471872847758699
  %97 = add i64 %92, %83
  %98 = sub i64 %82, 1164988713795307964
  %99 = sub i64 %98, %83
  %100 = add i64 %99, 1164988713795307964
  %101 = sub i64 %82, %83
  %102 = mul i64 %100, %83
  %103 = shl i64 %82, %83
  %104 = shl i64 %82, %83
  %105 = shl i64 %82, %83
  %106 = add i64 %82, 8459182231834094006
  %107 = sub i64 %106, %83
  %108 = sub i64 %107, 8459182231834094006
  %109 = sub i64 %82, %83
  %110 = sub i64 0, 16
  %111 = add i64 %108, %110
  %112 = sub i64 %108, 16
  %113 = mul i64 %111, 16
  %114 = sub i64 0, 16
  %115 = add i64 %108, %114
  %116 = sub i64 %108, 16
  %117 = mul i64 %115, 16
  %118 = sub i64 0, 16
  %119 = add i64 %108, %118
  %120 = sub i64 %108, 16
  %121 = mul i64 %119, 16
  %122 = sub i64 0, 3720968453240742092
  %123 = sub i64 %122, %108
  %124 = add i64 %123, 3720968453240742092
  %125 = sub i64 0, %108
  %126 = add i64 %124, 7796285374109872809
  %127 = add i64 %126, 16
  %128 = sub i64 %127, 7796285374109872809
  %129 = add i64 %124, 16
  %130 = add i64 0, -6953646577906400582
  %131 = sub i64 %130, %108
  %132 = sub i64 %131, -6953646577906400582
  %133 = sub i64 0, %108
  %134 = sub i64 %132, -6469065628012616369
  %135 = add i64 %134, 16
  %136 = add i64 %135, -6469065628012616369
  %137 = add i64 %132, 16
  %138 = shl i64 %108, 16
  %139 = sdiv exact i64 %108, 16
  store i32 376750151, i32* %16
  br label %140

; <label>:140:                                    ; preds = %73, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE6cbeginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.285
  %6 = load i32, i32* @y.286
  %7 = sub i32 %5, 78389789
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 78389789
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1079134180, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1079134180, label %19
    i32 916968869, label %27
    i32 -1591949631, label %53
    i32 1305531133, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 916968869, i32 1305531133
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %29 = alloca %"class.std::vector.18"*, align 8
  %30 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %29, align 8
  %31 = load %"class.std::vector.18"*, %"class.std::vector.18"** %29, align 8
  %32 = bitcast %"class.std::vector.18"* %31 to %"struct.std::_Vector_base.19"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %34, align 8
  store %"struct.Graph::Edge"* %35, %"struct.Graph::Edge"** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %28, %"struct.Graph::Edge"** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %28, i32 0, i32 0
  %37 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %36, align 8
  store %"struct.Graph::Edge"* %37, %"struct.Graph::Edge"** %2
  %38 = load i32, i32* @x.285
  %39 = load i32, i32* @y.286
  %40 = sub i32 %38, -764482541
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -764482541
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1591949631, i32 1305531133
  store i32 %52, i32* %15
  br label %66

; <label>:53:                                     ; preds = %16
  %54 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2
  ret %"struct.Graph::Edge"* %54

; <label>:55:                                     ; preds = %16
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %57 = alloca %"class.std::vector.18"*, align 8
  %58 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %57, align 8
  %59 = load %"class.std::vector.18"*, %"class.std::vector.18"** %57, align 8
  %60 = bitcast %"class.std::vector.18"* %59 to %"struct.std::_Vector_base.19"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %61, i32 0, i32 0
  %63 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %62, align 8
  store %"struct.Graph::Edge"* %63, %"struct.Graph::Edge"** %58, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %56, %"struct.Graph::Edge"** dereferenceable(8) %58) #3
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %56, i32 0, i32 0
  %65 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %64, align 8
  store i32 916968869, i32* %15
  br label %66

; <label>:66:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.287
  %8 = load i32, i32* @y.288
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1210123091, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %119
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1210123091, label %20
    i32 -1868456466, label %28
    i32 -447358075, label %80
    i32 -1910367663, label %82
  ]

; <label>:19:                                     ; preds = %17
  br label %119

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1868456466, i32 -1910367663
  store i32 %27, i32* %16
  br label %119

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %37 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %38, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %39, align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %40, align 8
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator"* %34 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  %44 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %43, align 8
  %45 = call %"struct.Graph::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %44)
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  store %"struct.Graph::Edge"* %45, %"struct.Graph::Edge"** %46, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %36 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  %50 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %49, align 8
  %51 = call %"struct.Graph::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %50)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  store %"struct.Graph::Edge"* %51, %"struct.Graph::Edge"** %52, align 8
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %37 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %56 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  %58 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %57, align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %37, i32 0, i32 0
  %60 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %59, align 8
  %61 = call %"struct.Graph::Edge"* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Graph::Edge"* %56, %"struct.Graph::Edge"* %58, %"struct.Graph::Edge"* %60)
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store %"struct.Graph::Edge"* %61, %"struct.Graph::Edge"** %62, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %64 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %63, align 8
  store %"struct.Graph::Edge"* %64, %"struct.Graph::Edge"** %4
  %65 = load i32, i32* @x.287
  %66 = load i32, i32* @y.288
  %67 = add i32 %65, 244142552
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 244142552
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 -447358075, i32 -1910367663
  store i32 %79, i32* %16
  br label %119

; <label>:80:                                     ; preds = %17
  %81 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4
  ret %"struct.Graph::Edge"* %81

; <label>:82:                                     ; preds = %17
  %83 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %84 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %85 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %86 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %87 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %88 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %84, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %92, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %85, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %93, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %86, i32 0, i32 0
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %94, align 8
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator"* %88 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %88, i32 0, i32 0
  %98 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %97, align 8
  %99 = call %"struct.Graph::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %98)
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %87, i32 0, i32 0
  store %"struct.Graph::Edge"* %99, %"struct.Graph::Edge"** %100, align 8
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator"* %90 to i8*
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %90, i32 0, i32 0
  %104 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %103, align 8
  %105 = call %"struct.Graph::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %104)
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %89, i32 0, i32 0
  store %"struct.Graph::Edge"* %105, %"struct.Graph::Edge"** %106, align 8
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator"* %91 to i8*
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 8, i1 false)
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %87, i32 0, i32 0
  %110 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %109, align 8
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %89, i32 0, i32 0
  %112 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %111, align 8
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %91, i32 0, i32 0
  %114 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %113, align 8
  %115 = call %"struct.Graph::Edge"* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Graph::Edge"* %110, %"struct.Graph::Edge"* %112, %"struct.Graph::Edge"* %114)
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %83, i32 0, i32 0
  store %"struct.Graph::Edge"* %115, %"struct.Graph::Edge"** %116, align 8
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %83, i32 0, i32 0
  %118 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %117, align 8
  store i32 -1868456466, i32* %16
  br label %119

; <label>:119:                                    ; preds = %82, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt14__copy_move_a2ILb1EN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"struct.Graph::Edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  %19 = call %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %23 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %22, align 8
  %24 = call %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %28 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %27, align 8
  %29 = call %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"* %28)
  %30 = call %"struct.Graph::Edge"* @_ZSt13__copy_move_aILb1EPN5Graph4EdgeES2_ET1_T0_S4_S3_(%"struct.Graph::Edge"* %19, %"struct.Graph::Edge"* %24, %"struct.Graph::Edge"* %29)
  store %"struct.Graph::Edge"* %30, %"struct.Graph::Edge"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %4, %"struct.Graph::Edge"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %32 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %31, align 8
  ret %"struct.Graph::Edge"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  %10 = call %"struct.Graph::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES8_(%"struct.Graph::Edge"* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Graph::Edge"* %10, %"struct.Graph::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %13 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %12, align 8
  ret %"struct.Graph::Edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt13__copy_move_aILb1EPN5Graph4EdgeES2_ET1_T0_S4_S3_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.293
  %8 = load i32, i32* @y.294
  %9 = sub i32 %7, 678017305
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 678017305
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -950869199, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -950869199, label %21
    i32 -1903567490, label %29
    i32 395049030, label %64
    i32 -700777458, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1903567490, i32 -700777458
  store i32 %28, i32* %17
  br label %75

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.Graph::Edge"*, align 8
  %31 = alloca %"struct.Graph::Edge"*, align 8
  %32 = alloca %"struct.Graph::Edge"*, align 8
  %33 = alloca i8, align 1
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %30, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %31, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %32, align 8
  store i8 0, i8* %33, align 1
  %34 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %30, align 8
  %35 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %31, align 8
  %36 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %32, align 8
  %37 = call %"struct.Graph::Edge"* @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN5Graph4EdgeES5_EET0_T_S7_S6_(%"struct.Graph::Edge"* %34, %"struct.Graph::Edge"* %35, %"struct.Graph::Edge"* %36)
  store %"struct.Graph::Edge"* %37, %"struct.Graph::Edge"** %4
  %38 = load i32, i32* @x.293
  %39 = load i32, i32* @y.294
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 395049030, i32 -700777458
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4
  ret %"struct.Graph::Edge"* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"struct.Graph::Edge"*, align 8
  %68 = alloca %"struct.Graph::Edge"*, align 8
  %69 = alloca %"struct.Graph::Edge"*, align 8
  %70 = alloca i8, align 1
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %67, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %68, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %69, align 8
  store i8 0, i8* %70, align 1
  %71 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %67, align 8
  %72 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %68, align 8
  %73 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %69, align 8
  %74 = call %"struct.Graph::Edge"* @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN5Graph4EdgeES5_EET0_T_S7_S6_(%"struct.Graph::Edge"* %71, %"struct.Graph::Edge"* %72, %"struct.Graph::Edge"* %73)
  store i32 -1903567490, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::Edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %9 = call %"struct.Graph::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Graph::Edge"* %8)
  ret %"struct.Graph::Edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN5Graph4EdgeES5_EET0_T_S7_S6_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #5 comdat align 2 {
  %4 = alloca %"struct.Graph::Edge"*, align 8
  %5 = alloca %"struct.Graph::Edge"*, align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca i64, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %4, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %5, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5, align 8
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %10 = ptrtoint %"struct.Graph::Edge"* %8 to i64
  %11 = ptrtoint %"struct.Graph::Edge"* %9 to i64
  %12 = add i64 %10, -920834535556059966
  %13 = sub i64 %12, %11
  %14 = sub i64 %13, -920834535556059966
  %15 = sub i64 %10, %11
  %16 = sdiv exact i64 %14, 16
  store i64 %16, i64* %7, align 8
  %17 = alloca i32
  store i32 -1029748168, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %43
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1029748168, label %21
    i32 574035938, label %25
    i32 -1421990789, label %35
    i32 1019606810, label %41
  ]

; <label>:20:                                     ; preds = %18
  br label %43

; <label>:21:                                     ; preds = %18
  %22 = load i64, i64* %7, align 8
  %23 = icmp sgt i64 %22, 0
  %24 = select i1 %23, i32 574035938, i32 1019606810
  store i32 %24, i32* %17
  br label %43

; <label>:25:                                     ; preds = %18
  %26 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %27 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt4moveIRN5Graph4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::Edge"* dereferenceable(16) %26) #3
  %28 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %29 = bitcast %"struct.Graph::Edge"* %28 to i8*
  %30 = bitcast %"struct.Graph::Edge"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 16, i32 8, i1 false)
  %31 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %32 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %31, i32 1
  store %"struct.Graph::Edge"* %32, %"struct.Graph::Edge"** %4, align 8
  %33 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %34 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %33, i32 1
  store %"struct.Graph::Edge"* %34, %"struct.Graph::Edge"** %6, align 8
  store i32 -1421990789, i32* %17
  br label %43

; <label>:35:                                     ; preds = %18
  %36 = load i64, i64* %7, align 8
  %37 = add i64 %36, 2228029948028260976
  %38 = add i64 %37, -1
  %39 = sub i64 %38, 2228029948028260976
  %40 = add nsw i64 %36, -1
  store i64 %39, i64* %7, align 8
  store i32 -1029748168, i32* %17
  br label %43

; <label>:41:                                     ; preds = %18
  %42 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  ret %"struct.Graph::Edge"* %42

; <label>:43:                                     ; preds = %35, %25, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Graph::Edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  %4 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES8_(%"struct.Graph::Edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  ret %"struct.Graph::Edge"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.303
  %6 = load i32, i32* @y.304
  %7 = sub i32 %5, 1128685122
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1128685122
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1440408717, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1440408717, label %19
    i32 2000767838, label %27
    i32 -997418647, label %58
    i32 -1280338615, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2000767838, i32 -1280338615
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %29, i32 0, i32 0
  store %"struct.Graph::Edge"** %30, %"struct.Graph::Edge"*** %2
  %31 = load i32, i32* @x.303
  %32 = load i32, i32* @y.304
  %33 = add i32 %31, -1530301726
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1530301726
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -997418647, i32 -1280338615
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %2
  ret %"struct.Graph::Edge"** %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %61, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %62, i32 0, i32 0
  store i32 2000767838, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"*, %"struct.Graph::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"struct.Graph::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"struct.Graph::Edge"** %1, %"struct.Graph::Edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::Edge"**, %"struct.Graph::Edge"*** %4, align 8
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  store %"struct.Graph::Edge"* %8, %"struct.Graph::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2Ev(%"class.std::vector.25"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.307
  %3 = load i32, i32* @y.308
  %4 = sub i32 %2, -1388125239
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1388125239
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %92

; <label>:28:                                     ; preds = %1, %92
  %29 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %29, align 8
  %30 = load %"class.std::vector.25"*, %"class.std::vector.25"** %29, align 8
  %31 = bitcast %"class.std::vector.25"* %30 to %"struct.std::_Vector_base.26"*
  %32 = load i32, i32* @x.307
  %33 = load i32, i32* @y.308
  %34 = sub i32 %32, -2126709264
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -2126709264
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %92

; <label>:46:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2Ev(%"struct.std::_Vector_base.26"* %31)
          to label %47 unwind label %89

; <label>:47:                                     ; preds = %46
  %48 = load i32, i32* @x.307
  %49 = load i32, i32* @y.308
  %50 = sub i32 %48, 1904623288
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1904623288
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %96

; <label>:62:                                     ; preds = %47, %96
  %63 = load i32, i32* @x.307
  %64 = load i32, i32* @y.308
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %96

; <label>:88:                                     ; preds = %62
  ret void

; <label>:89:                                     ; preds = %46
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  call void @__clang_call_terminate(i8* %91) #10
  unreachable

; <label>:92:                                     ; preds = %28, %1
  %93 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %93, align 8
  %94 = load %"class.std::vector.25"*, %"class.std::vector.25"** %93, align 8
  %95 = bitcast %"class.std::vector.25"* %94 to %"struct.std::_Vector_base.26"*
  br label %28

; <label>:96:                                     ; preds = %62, %47
  br label %62
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"*, %"struct.std::less"* dereferenceable(1), %"class.std::vector.25"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::priority_queue"*, align 8
  %5 = alloca %"struct.std::less"*, align 8
  %6 = alloca %"class.std::vector.25"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %4, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %5, align 8
  store %"class.std::vector.25"* %2, %"class.std::vector.25"** %6, align 8
  %12 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.25"*, %"class.std::vector.25"** %6, align 8
  %15 = call dereferenceable(24) %"class.std::vector.25"* @_ZSt4moveIRSt6vectorIN5Graph5QInfoESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.25"* dereferenceable(24) %14) #3
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2EOS3_(%"class.std::vector.25"* %13, %"class.std::vector.25"* dereferenceable(24) %15) #3
  %16 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %17 = load %"struct.std::less"*, %"struct.std::less"** %5, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %19 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  store %"struct.Graph::QInfo"* %19, %"struct.Graph::QInfo"** %20, align 8
  %21 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %22 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %8, i32 0, i32 0
  store %"struct.Graph::QInfo"* %22, %"struct.Graph::QInfo"** %23, align 8
  %24 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  %26 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %8, i32 0, i32 0
  %28 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %27, align 8
  invoke void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"* %26, %"struct.Graph::QInfo"* %28)
          to label %29 unwind label %60

; <label>:29:                                     ; preds = %3
  %30 = load i32, i32* @x.309
  %31 = load i32, i32* @y.310
  %32 = sub i32 %30, -1733277334
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1733277334
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %151

; <label>:44:                                     ; preds = %29, %151
  %45 = load i32, i32* @x.309
  %46 = load i32, i32* @y.310
  %47 = sub i32 %45, 2019521970
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 2019521970
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %151

; <label>:59:                                     ; preds = %44
  ret void

; <label>:60:                                     ; preds = %3
  %61 = load i32, i32* @x.309
  %62 = load i32, i32* @y.310
  %63 = add i32 %61, -552071527
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -552071527
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %152

; <label>:75:                                     ; preds = %60, %152
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %10, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %11, align 4
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %13) #3
  %79 = load i32, i32* @x.309
  %80 = load i32, i32* @y.310
  %81 = sub i32 %79, 584258186
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 584258186
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %152

; <label>:105:                                    ; preds = %75
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i32, i32* @x.309
  %108 = load i32, i32* @y.310
  %109 = sub i32 0, 1
  %110 = add i32 %107, %109
  %111 = sub i32 %107, 1
  %112 = mul i32 %107, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %108, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %156

; <label>:132:                                    ; preds = %106, %156
  %133 = load i8*, i8** %10, align 8
  %134 = load i32, i32* %11, align 4
  %135 = insertvalue { i8*, i32 } undef, i8* %133, 0
  %136 = insertvalue { i8*, i32 } %135, i32 %134, 1
  %137 = load i32, i32* @x.309
  %138 = load i32, i32* @y.310
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  br i1 %148, label %150, label %156

; <label>:150:                                    ; preds = %132
  resume { i8*, i32 } %136

; <label>:151:                                    ; preds = %44, %29
  br label %44

; <label>:152:                                    ; preds = %75, %60
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %10, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %11, align 4
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %13) #3
  br label %75

; <label>:156:                                    ; preds = %132, %106
  %157 = load i8*, i8** %10, align 8
  %158 = load i32, i32* %11, align 4
  %159 = insertvalue { i8*, i32 } undef, i8* %157, 0
  %160 = insertvalue { i8*, i32 } %159, i32 %158, 1
  br label %132
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.25"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  %10 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %12, align 8
  %14 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %15 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %14) #3
  invoke void @_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E(%"struct.Graph::QInfo"* %9, %"struct.Graph::QInfo"* %13, %"class.std::allocator.27"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EED2Ev(%"struct.std::_Vector_base.26"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EED2Ev(%"struct.std::_Vector_base.26"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.313
  %3 = load i32, i32* @y.314
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %61

; <label>:27:                                     ; preds = %1, %61
  %28 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %28, align 8
  %29 = load %"class.std::set"*, %"class.std::set"** %28, align 8
  %30 = getelementptr inbounds %"class.std::set", %"class.std::set"* %29, i32 0, i32 0
  %31 = load i32, i32* @x.313
  %32 = load i32, i32* @y.314
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %61

; <label>:56:                                     ; preds = %27
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree"* %30)
          to label %57 unwind label %58

; <label>:57:                                     ; preds = %56
  ret void

; <label>:58:                                     ; preds = %56
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  call void @__clang_call_terminate(i8* %60) #10
  unreachable

; <label>:61:                                     ; preds = %27, %1
  %62 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %62, align 8
  %63 = load %"class.std::set"*, %"class.std::set"** %62, align 8
  %64 = getelementptr inbounds %"class.std::set", %"class.std::set"* %63, i32 0, i32 0
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE4pushEOS1_(%"class.std::priority_queue"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.315
  %6 = load i32, i32* @y.316
  %7 = add i32 %5, -1735785154
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1735785154
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 227179215, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %96
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 227179215, label %19
    i32 1721388055, label %39
    i32 -2023029488, label %74
    i32 -268099508, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %96

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1721388055, i32 -268099508
  store i32 %38, i32* %15
  br label %96

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::priority_queue"*, align 8
  %41 = alloca %"struct.Graph::QInfo"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %44 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %40, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %41, align 8
  %45 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %40, align 8
  %46 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %45, i32 0, i32 0
  %47 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %41, align 8
  %48 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %47) #3
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE9push_backEOS1_(%"class.std::vector.25"* %46, %"struct.Graph::QInfo"* dereferenceable(16) %48)
  %49 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %45, i32 0, i32 0
  %50 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %49) #3
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %42, i32 0, i32 0
  store %"struct.Graph::QInfo"* %50, %"struct.Graph::QInfo"** %51, align 8
  %52 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %45, i32 0, i32 0
  %53 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %52) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %43, i32 0, i32 0
  store %"struct.Graph::QInfo"* %53, %"struct.Graph::QInfo"** %54, align 8
  %55 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %45, i32 0, i32 1
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %42, i32 0, i32 0
  %57 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %43, i32 0, i32 0
  %59 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %58, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"* %57, %"struct.Graph::QInfo"* %59)
  %60 = load i32, i32* @x.315
  %61 = load i32, i32* @y.316
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -2023029488, i32 -268099508
  store i32 %73, i32* %15
  br label %96

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::priority_queue"*, align 8
  %77 = alloca %"struct.Graph::QInfo"*, align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %80 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %76, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %77, align 8
  %81 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %76, align 8
  %82 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %81, i32 0, i32 0
  %83 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %77, align 8
  %84 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %83) #3
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE9push_backEOS1_(%"class.std::vector.25"* %82, %"struct.Graph::QInfo"* dereferenceable(16) %84)
  %85 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %81, i32 0, i32 0
  %86 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %85) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %78, i32 0, i32 0
  store %"struct.Graph::QInfo"* %86, %"struct.Graph::QInfo"** %87, align 8
  %88 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %81, i32 0, i32 0
  %89 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %88) #3
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %79, i32 0, i32 0
  store %"struct.Graph::QInfo"* %89, %"struct.Graph::QInfo"** %90, align 8
  %91 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %81, i32 0, i32 1
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %78, i32 0, i32 0
  %93 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %92, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %79, i32 0, i32 0
  %95 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %94, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"* %93, %"struct.Graph::QInfo"* %95)
  store i32 1721388055, i32* %15
  br label %96

; <label>:96:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5Graph5QInfoC2Exx(%"struct.Graph::QInfo"*, i64, i64) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.317
  %7 = load i32, i32* @y.318
  %8 = add i32 %6, -1204327706
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1204327706
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 552783452, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 552783452, label %20
    i32 969658699, label %40
    i32 14750689, label %64
    i32 -98450330, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 969658699, i32 -98450330
  store i32 %39, i32* %16
  br label %74

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.Graph::QInfo"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i64, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %41, align 8
  store i64 %1, i64* %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %44, i32 0, i32 0
  store i64 %45, i64* %46, align 8
  %47 = load i64, i64* %43, align 8
  %48 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %44, i32 0, i32 1
  store i64 %47, i64* %48, align 8
  %49 = load i32, i32* @x.317
  %50 = load i32, i32* @y.318
  %51 = sub i32 %49, -934676042
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -934676042
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 14750689, i32 -98450330
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = alloca %"struct.Graph::QInfo"*, align 8
  %67 = alloca i64, align 8
  %68 = alloca i64, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %66, align 8
  store i64 %1, i64* %67, align 8
  store i64 %2, i64* %68, align 8
  %69 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %66, align 8
  %70 = load i64, i64* %67, align 8
  %71 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %69, i32 0, i32 0
  store i64 %70, i64* %71, align 8
  %72 = load i64, i64* %68, align 8
  %73 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %69, i32 0, i32 1
  store i64 %72, i64* %73, align 8
  store i32 969658699, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertERKx(%"class.std::set"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca { %"struct.std::_Rb_tree_node_base"*, i8 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.319
  %7 = load i32, i32* @y.320
  %8 = sub i32 %6, 1872891920
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1872891920
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1235455428, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %92
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1235455428, label %20
    i32 -1643791746, label %28
    i32 969220245, label %72
    i32 1965733459, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %92

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1643791746, i32 1965733459
  store i32 %27, i32* %16
  br label %92

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair", align 8
  %30 = alloca %"class.std::set"*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca %"struct.std::pair.37", align 8
  store %"class.std::set"* %0, %"class.std::set"** %30, align 8
  store i64* %1, i64** %31, align 8
  %33 = load %"class.std::set"*, %"class.std::set"** %30, align 8
  %34 = getelementptr inbounds %"class.std::set", %"class.std::set"* %33, i32 0, i32 0
  %35 = load i64*, i64** %31, align 8
  %36 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree"* %34, i64* dereferenceable(8) %35)
  %37 = bitcast %"struct.std::pair.37"* %32 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %38 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %37, i32 0, i32 0
  %39 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %36, 0
  store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %40 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %37, i32 0, i32 1
  %41 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %36, 1
  store i8 %41, i8* %40, align 8
  %42 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %32, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %32, i32 0, i32 1
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"* %29, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %42, i8* dereferenceable(1) %43)
  %44 = bitcast %"struct.std::pair"* %29 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %45 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %44, align 8
  store { %"struct.std::_Rb_tree_node_base"*, i8 } %45, { %"struct.std::_Rb_tree_node_base"*, i8 }* %3
  %46 = load i32, i32* @x.319
  %47 = load i32, i32* @y.320
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 969220245, i32 1965733459
  store i32 %71, i32* %16
  br label %92

; <label>:72:                                     ; preds = %17
  %73 = load volatile { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %3
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %73

; <label>:74:                                     ; preds = %17
  %75 = alloca %"struct.std::pair", align 8
  %76 = alloca %"class.std::set"*, align 8
  %77 = alloca i64*, align 8
  %78 = alloca %"struct.std::pair.37", align 8
  store %"class.std::set"* %0, %"class.std::set"** %76, align 8
  store i64* %1, i64** %77, align 8
  %79 = load %"class.std::set"*, %"class.std::set"** %76, align 8
  %80 = getelementptr inbounds %"class.std::set", %"class.std::set"* %79, i32 0, i32 0
  %81 = load i64*, i64** %77, align 8
  %82 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree"* %80, i64* dereferenceable(8) %81)
  %83 = bitcast %"struct.std::pair.37"* %78 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %84 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %83, i32 0, i32 0
  %85 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %82, 0
  store %"struct.std::_Rb_tree_node_base"* %85, %"struct.std::_Rb_tree_node_base"** %84, align 8
  %86 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %83, i32 0, i32 1
  %87 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %82, 1
  store i8 %87, i8* %86, align 8
  %88 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %78, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %78, i32 0, i32 1
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"* %75, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %88, i8* dereferenceable(1) %89)
  %90 = bitcast %"struct.std::pair"* %75 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %91 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %90, align 8
  store i32 -1643791746, i32* %16
  br label %92

; <label>:92:                                     ; preds = %74, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE5emptyEv(%"class.std::priority_queue"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.321
  %6 = load i32, i32* @y.322
  %7 = sub i32 %5, -1009077337
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1009077337
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 322215396, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 322215396, label %19
    i32 -1723639599, label %39
    i32 1772035555, label %70
    i32 -744425986, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1723639599, i32 -744425986
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %40, align 8
  %41 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %40, align 8
  %42 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %41, i32 0, i32 0
  %43 = call zeroext i1 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5emptyEv(%"class.std::vector.25"* %42) #3
  store i1 %43, i1* %2
  %44 = load i32, i32* @x.321
  %45 = load i32, i32* @y.322
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1772035555, i32 -744425986
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile i1, i1* %2
  ret i1 %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %73, align 8
  %74 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %73, align 8
  %75 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %74, i32 0, i32 0
  %76 = call zeroext i1 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5emptyEv(%"class.std::vector.25"* %75) #3
  store i32 -1723639599, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3topEv(%"class.std::priority_queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5frontEv(%"class.std::vector.25"* %4) #3
  ret %"struct.Graph::QInfo"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EE3popEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.325
  %5 = load i32, i32* @y.326
  %6 = sub i32 %4, 87719596
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 87719596
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 399838809, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %89
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 399838809, label %18
    i32 -2016750321, label %26
    i32 930043051, label %70
    i32 1012876380, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %89

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2016750321, i32 1012876380
  store i32 %25, i32* %14
  br label %89

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::priority_queue"*, align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %30 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %27, align 8
  %31 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %27, align 8
  %32 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %31, i32 0, i32 0
  %33 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %32) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %28, i32 0, i32 0
  store %"struct.Graph::QInfo"* %33, %"struct.Graph::QInfo"** %34, align 8
  %35 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %31, i32 0, i32 0
  %36 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %35) #3
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %29, i32 0, i32 0
  store %"struct.Graph::QInfo"* %36, %"struct.Graph::QInfo"** %37, align 8
  %38 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %31, i32 0, i32 1
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %28, i32 0, i32 0
  %40 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %29, i32 0, i32 0
  %42 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %41, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"* %40, %"struct.Graph::QInfo"* %42)
  %43 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %31, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE8pop_backEv(%"class.std::vector.25"* %43) #3
  %44 = load i32, i32* @x.325
  %45 = load i32, i32* @y.326
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 930043051, i32 1012876380
  store i32 %69, i32* %14
  br label %89

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.std::priority_queue"*, align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %75 = alloca %"struct.std::less", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %72, align 8
  %76 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %72, align 8
  %77 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %76, i32 0, i32 0
  %78 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %77) #3
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %73, i32 0, i32 0
  store %"struct.Graph::QInfo"* %78, %"struct.Graph::QInfo"** %79, align 8
  %80 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %76, i32 0, i32 0
  %81 = call %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %80) #3
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %74, i32 0, i32 0
  store %"struct.Graph::QInfo"* %81, %"struct.Graph::QInfo"** %82, align 8
  %83 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %76, i32 0, i32 1
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %73, i32 0, i32 0
  %85 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %84, align 8
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %74, i32 0, i32 0
  %87 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %86, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"* %85, %"struct.Graph::QInfo"* %87)
  %88 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %76, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE8pop_backEv(%"class.std::vector.25"* %88) #3
  store i32 -2016750321, i32* %14
  br label %89

; <label>:89:                                     ; preds = %71, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Graph4NodeC2ERKS0_(%"struct.Graph::Node"*, %"struct.Graph::Node"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.327
  %6 = load i32, i32* @y.328
  %7 = add i32 %5, 540519753
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 540519753
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -163960626, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -163960626, label %19
    i32 1661898079, label %39
    i32 -1663284544, label %65
    i32 382471356, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1661898079, i32 382471356
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph::Node"*, align 8
  %41 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %40, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %41, align 8
  %42 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %40, align 8
  %43 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %42, i32 0, i32 0
  %44 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %41, align 8
  %45 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %44, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  %47 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %42, i32 0, i32 1
  %48 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %41, align 8
  %49 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %48, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.18"* %47, %"class.std::vector.18"* dereferenceable(24) %49)
  %50 = load i32, i32* @x.327
  %51 = load i32, i32* @y.328
  %52 = add i32 %50, 1026451155
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1026451155
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1663284544, i32 382471356
  store i32 %64, i32* %15
  br label %77

; <label>:65:                                     ; preds = %16
  ret void

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.Graph::Node"*, align 8
  %68 = alloca %"struct.Graph::Node"*, align 8
  store %"struct.Graph::Node"* %0, %"struct.Graph::Node"** %67, align 8
  store %"struct.Graph::Node"* %1, %"struct.Graph::Node"** %68, align 8
  %69 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %67, align 8
  %70 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %69, i32 0, i32 0
  %71 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %68, align 8
  %72 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %71, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %70, align 8
  %74 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %69, i32 0, i32 1
  %75 = load %"struct.Graph::Node"*, %"struct.Graph::Node"** %68, align 8
  %76 = getelementptr inbounds %"struct.Graph::Node", %"struct.Graph::Node"* %75, i32 0, i32 1
  call void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.18"* %74, %"class.std::vector.18"* dereferenceable(24) %76)
  store i32 1661898079, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt3setIxSt4lessIxESaIxEE5eraseERKx(%"class.std::set"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %6 = getelementptr inbounds %"class.std::set", %"class.std::set"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  %8 = call i64 @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseERKx(%"class.std::_Rb_tree"* %6, i64* dereferenceable(8) %7)
  ret i64 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIxSt4lessIxESaIxEE4findERKx(%"class.std::set"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store i64* %1, i64** %5, align 8
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = getelementptr inbounds %"class.std::set", %"class.std::set"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4findERKx(%"class.std::_Rb_tree"* %8, i64* dereferenceable(8) %9)
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %11, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %3, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret %"struct.std::_Rb_tree_node_base"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIxSt4lessIxESaIxEE3endEv(%"class.std::set"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  %4 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.337
  %5 = load i32, i32* @y.338
  %6 = add i32 %4, -2108886526
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -2108886526
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 948119465, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 948119465, label %18
    i32 -505269655, label %38
    i32 -1731860050, label %69
    i32 -2065333475, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -505269655, i32 -2065333475
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %39, align 8
  %40 = load %"class.std::set"*, %"class.std::set"** %39, align 8
  %41 = getelementptr inbounds %"class.std::set", %"class.std::set"* %40, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree"* %41) #3
  %42 = load i32, i32* @x.337
  %43 = load i32, i32* @y.338
  %44 = sub i32 %42, -314860700
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -314860700
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1731860050, i32 -2065333475
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %71, align 8
  %72 = load %"class.std::set"*, %"class.std::set"** %71, align 8
  %73 = getelementptr inbounds %"class.std::set", %"class.std::set"* %72, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree"* %73) #3
  store i32 -505269655, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14priority_queueIN5Graph5QInfoESt6vectorIS1_SaIS1_EESt4lessIS1_EED2Ev(%"class.std::priority_queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EED2Ev(%"class.std::vector.25"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2Ev(%"struct.std::_Vector_base.26"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.341
  %5 = load i32, i32* @y.342
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1327177457, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1327177457, label %17
    i32 28318545, label %25
    i32 1475990918, label %43
    i32 -799644722, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 28318545, i32 -799644722
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %26, align 8
  %27 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %27, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %28)
  %29 = load i32, i32* @x.341
  %30 = load i32, i32* @y.342
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1475990918, i32 -799644722
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %45, align 8
  %46 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %46, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %47)
  store i32 28318545, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %3 to %"class.std::allocator.27"*
  call void @_ZNSaIN5Graph5QInfoEEC2Ev(%"class.std::allocator.27"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph5QInfoEEC2Ev(%"class.std::allocator.27"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.345
  %5 = load i32, i32* @y.346
  %6 = sub i32 %4, -488431645
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -488431645
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1105379395, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1105379395, label %18
    i32 -1297590785, label %38
    i32 -1469862898, label %69
    i32 -169240832, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1297590785, i32 -169240832
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %39, align 8
  %40 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %39, align 8
  %41 = bitcast %"class.std::allocator.27"* %40 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2Ev(%"class.__gnu_cxx::new_allocator.28"* %41) #3
  %42 = load i32, i32* @x.345
  %43 = load i32, i32* @y.346
  %44 = sub i32 %42, 1799469181
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1799469181
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1469862898, i32 -169240832
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %71, align 8
  %72 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %71, align 8
  %73 = bitcast %"class.std::allocator.27"* %72 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2Ev(%"class.__gnu_cxx::new_allocator.28"* %73) #3
  store i32 -1297590785, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.347
  %5 = load i32, i32* @y.348
  %6 = sub i32 %4, 640846024
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 640846024
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2069943148, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2069943148, label %18
    i32 -701496764, label %38
    i32 769673854, label %68
    i32 -1503722576, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -701496764, i32 -1503722576
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %39, align 8
  %41 = load i32, i32* @x.347
  %42 = load i32, i32* @y.348
  %43 = add i32 %41, 50091395
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 50091395
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 769673854, i32 -1503722576
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %70, align 8
  store i32 -701496764, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.25"* @_ZSt4moveIRSt6vectorIN5Graph5QInfoESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.25"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  ret %"class.std::vector.25"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EEC2EOS3_(%"class.std::vector.25"*, %"class.std::vector.25"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  store %"class.std::vector.25"* %1, %"class.std::vector.25"** %4, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = load %"class.std::vector.25"*, %"class.std::vector.25"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.25"* @_ZSt4moveIRSt6vectorIN5Graph5QInfoESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.25"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.25"* %8 to %"struct.std::_Vector_base.26"*
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.26"* %6, %"struct.std::_Vector_base.26"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"struct.std::less", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca %"struct.std::less", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %3, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %7 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_()
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %6, i32 0, i32 0
  %18 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  %20 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %19, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_(%"struct.Graph::QInfo"* %18, %"struct.Graph::QInfo"* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %3 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  %4 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %5 = bitcast %"class.std::vector.25"* %4 to %"struct.std::_Vector_base.26"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %2, %"struct.Graph::QInfo"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  ret %"struct.Graph::QInfo"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %3 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  %4 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %5 = bitcast %"class.std::vector.25"* %4 to %"struct.std::_Vector_base.26"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %2, %"struct.Graph::QInfo"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  ret %"struct.Graph::QInfo"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.26"*, align 8
  %4 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %3, align 8
  store %"struct.std::_Vector_base.26"* %1, %"struct.std::_Vector_base.26"** %4, align 8
  %5 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.27"* @_ZSt4moveIRSaIN5Graph5QInfoEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.27"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %6, %"class.std::allocator.27"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %10, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.27"* @_ZSt4moveIRSaIN5Graph5QInfoEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.27"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  ret %"class.std::allocator.27"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %2, align 8
  %3 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %4 to %"class.std::allocator.27"*
  ret %"class.std::allocator.27"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"class.std::allocator.27"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.27"*, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.27"* %1, %"class.std::allocator.27"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5 to %"class.std::allocator.27"*
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.27"* @_ZSt4moveIRSaIN5Graph5QInfoEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.27"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5Graph5QInfoEEC2ERKS1_(%"class.std::allocator.27"* %6, %"class.std::allocator.27"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN5Graph5QInfoEEvRT_S4_(%"struct.Graph::QInfo"** dereferenceable(8) %6, %"struct.Graph::QInfo"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN5Graph5QInfoEEvRT_S4_(%"struct.Graph::QInfo"** dereferenceable(8) %9, %"struct.Graph::QInfo"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN5Graph5QInfoEEvRT_S4_(%"struct.Graph::QInfo"** dereferenceable(8) %12, %"struct.Graph::QInfo"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph5QInfoEEC2ERKS1_(%"class.std::allocator.27"*, %"class.std::allocator.27"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.369
  %6 = load i32, i32* @y.370
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -206450837, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -206450837, label %18
    i32 1032023223, label %26
    i32 -382682814, label %60
    i32 -1673825028, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1032023223, i32 -1673825028
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.27"*, align 8
  %28 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %27, align 8
  store %"class.std::allocator.27"* %1, %"class.std::allocator.27"** %28, align 8
  %29 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %27, align 8
  %30 = bitcast %"class.std::allocator.27"* %29 to %"class.__gnu_cxx::new_allocator.28"*
  %31 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %28, align 8
  %32 = bitcast %"class.std::allocator.27"* %31 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.28"* %30, %"class.__gnu_cxx::new_allocator.28"* dereferenceable(1) %32) #3
  %33 = load i32, i32* @x.369
  %34 = load i32, i32* @y.370
  %35 = add i32 %33, 1868408028
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1868408028
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -382682814, i32 -1673825028
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::allocator.27"*, align 8
  %63 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %62, align 8
  store %"class.std::allocator.27"* %1, %"class.std::allocator.27"** %63, align 8
  %64 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %62, align 8
  %65 = bitcast %"class.std::allocator.27"* %64 to %"class.__gnu_cxx::new_allocator.28"*
  %66 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %63, align 8
  %67 = bitcast %"class.std::allocator.27"* %66 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.28"* %65, %"class.__gnu_cxx::new_allocator.28"* dereferenceable(1) %67) #3
  store i32 1032023223, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %1, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN5Graph5QInfoEEvRT_S4_(%"struct.Graph::QInfo"** dereferenceable(8), %"struct.Graph::QInfo"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.Graph::QInfo"**, align 8
  %4 = alloca %"struct.Graph::QInfo"**, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"** %0, %"struct.Graph::QInfo"*** %3, align 8
  store %"struct.Graph::QInfo"** %1, %"struct.Graph::QInfo"*** %4, align 8
  %6 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::QInfo"** dereferenceable(8) %6) #3
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  store %"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"** %5, align 8
  %9 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::QInfo"** dereferenceable(8) %9) #3
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %10, align 8
  %12 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %3, align 8
  store %"struct.Graph::QInfo"* %11, %"struct.Graph::QInfo"** %12, align 8
  %13 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::QInfo"** dereferenceable(8) %5) #3
  %14 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %13, align 8
  %15 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %4, align 8
  store %"struct.Graph::QInfo"* %14, %"struct.Graph::QInfo"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::QInfo"** @_ZSt4moveIRPN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::QInfo"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.Graph::QInfo"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.375
  %6 = load i32, i32* @y.376
  %7 = sub i32 %5, 1758790536
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1758790536
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2018636778, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2018636778, label %19
    i32 -652426217, label %39
    i32 930989689, label %57
    i32 1435794869, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -652426217, i32 1435794869
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph::QInfo"**, align 8
  store %"struct.Graph::QInfo"** %0, %"struct.Graph::QInfo"*** %40, align 8
  %41 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %40, align 8
  store %"struct.Graph::QInfo"** %41, %"struct.Graph::QInfo"*** %2
  %42 = load i32, i32* @x.375
  %43 = load i32, i32* @y.376
  %44 = sub i32 %42, 435816272
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 435816272
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 930989689, i32 1435794869
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %2
  ret %"struct.Graph::QInfo"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.Graph::QInfo"**, align 8
  store %"struct.Graph::QInfo"** %0, %"struct.Graph::QInfo"*** %60, align 8
  %61 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %60, align 8
  store i32 -652426217, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.Graph::QInfo", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %12 = alloca %"struct.Graph::QInfo", align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %15, align 8
  %16 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %4) #3
  store i64 %16, i64* %3
  %17 = alloca i32
  store i32 -187516008, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %114
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -187516008, label %21
    i32 794162338, label %25
    i32 1440671069, label %41
    i32 -1441904768, label %69
    i32 -1706734051, label %70
    i32 40685403, label %78
    i32 1028523519, label %105
    i32 2095577186, label %106
    i32 713534469, label %112
    i32 964714415, label %113
  ]

; <label>:20:                                     ; preds = %18
  br label %114

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %3
  %23 = icmp slt i64 %22, 2
  %24 = select i1 %23, i32 794162338, i32 -1706734051
  store i32 %24, i32* %17
  br label %114

; <label>:25:                                     ; preds = %18
  %26 = load i32, i32* @x.377
  %27 = load i32, i32* @y.378
  %28 = add i32 %26, -1693023074
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -1693023074
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 1440671069, i32 964714415
  store i32 %40, i32* %17
  br label %114

; <label>:41:                                     ; preds = %18
  %42 = load i32, i32* @x.377
  %43 = load i32, i32* @y.378
  %44 = sub i32 %42, 949096446
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 949096446
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1441904768, i32 964714415
  store i32 %68, i32* %17
  br label %114

; <label>:69:                                     ; preds = %18
  store i32 713534469, i32* %17
  br label %114

; <label>:70:                                     ; preds = %18
  %71 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %4) #3
  store i64 %71, i64* %7, align 8
  %72 = load i64, i64* %7, align 8
  %73 = sub i64 %72, 6961374468243498940
  %74 = sub i64 %73, 2
  %75 = add i64 %74, 6961374468243498940
  %76 = sub nsw i64 %72, 2
  %77 = sdiv i64 %75, 2
  store i64 %77, i64* %8, align 8
  store i32 40685403, i32* %17
  br label %114

; <label>:78:                                     ; preds = %18
  %79 = load i64, i64* %8, align 8
  %80 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %4, i64 %79) #3
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %10, i32 0, i32 0
  store %"struct.Graph::QInfo"* %80, %"struct.Graph::QInfo"** %81, align 8
  %82 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %10) #3
  %83 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %82) #3
  %84 = bitcast %"struct.Graph::QInfo"* %9 to i8*
  %85 = bitcast %"struct.Graph::QInfo"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 16, i32 8, i1 false)
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %11 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = load i64, i64* %8, align 8
  %89 = load i64, i64* %7, align 8
  %90 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %9) #3
  %91 = bitcast %"struct.Graph::QInfo"* %12 to i8*
  %92 = bitcast %"struct.Graph::QInfo"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 16, i32 8, i1 false)
  %93 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %13 to i8*
  %94 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 1, i32 1, i1 false)
  %95 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %11, i32 0, i32 0
  %96 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %95, align 8
  %97 = bitcast %"struct.Graph::QInfo"* %12 to { i64, i64 }*
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %97, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %97, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"* %96, i64 %88, i64 %89, i64 %99, i64 %101)
  %102 = load i64, i64* %8, align 8
  %103 = icmp eq i64 %102, 0
  %104 = select i1 %103, i32 1028523519, i32 2095577186
  store i32 %104, i32* %17
  br label %114

; <label>:105:                                    ; preds = %18
  store i32 713534469, i32* %17
  br label %114

; <label>:106:                                    ; preds = %18
  %107 = load i64, i64* %8, align 8
  %108 = sub i64 %107, 740843114390145102
  %109 = add i64 %108, -1
  %110 = add i64 %109, 740843114390145102
  %111 = add nsw i64 %107, -1
  store i64 %110, i64* %8, align 8
  store i32 40685403, i32* %17
  br label %114

; <label>:112:                                    ; preds = %18
  ret void

; <label>:113:                                    ; preds = %18
  store i32 1440671069, i32* %17
  br label %114

; <label>:114:                                    ; preds = %113, %106, %105, %78, %70, %69, %41, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %1, %"class.__gnu_cxx::__normal_iterator.35"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.35"* %5) #3
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.35"* %8) #3
  %10 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %9, align 8
  %11 = ptrtoint %"struct.Graph::QInfo"* %7 to i64
  %12 = ptrtoint %"struct.Graph::QInfo"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 16
  ret i64 %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::QInfo"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.383
  %6 = load i32, i32* @y.384
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2128020263, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2128020263, label %18
    i32 -1011134983, label %38
    i32 1362557353, label %56
    i32 -411143062, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1011134983, i32 -411143062
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %39, align 8
  %40 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %39, align 8
  store %"struct.Graph::QInfo"* %40, %"struct.Graph::QInfo"** %2
  %41 = load i32, i32* @x.383
  %42 = load i32, i32* @y.384
  %43 = sub i32 %41, -369956362
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -369956362
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1362557353, i32 -411143062
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %2
  ret %"struct.Graph::QInfo"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %59, align 8
  %60 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %59, align 8
  store i32 -1011134983, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %9, i64 %10
  store %"struct.Graph::QInfo"* %11, %"struct.Graph::QInfo"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %3, %"struct.Graph::QInfo"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %3, i32 0, i32 0
  %13 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %12, align 8
  ret %"struct.Graph::QInfo"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  ret %"struct.Graph::QInfo"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca i1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %8 = alloca %"struct.Graph::QInfo", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %21 = alloca %"struct.Graph::QInfo", align 8
  %22 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %23 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %24 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %25, align 8
  %26 = bitcast %"struct.Graph::QInfo"* %8 to { i64, i64 }*
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  store i64 %3, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  store i64 %4, i64* %28, align 8
  store i64 %1, i64* %10, align 8
  store i64 %2, i64* %11, align 8
  %29 = load i64, i64* %10, align 8
  store i64 %29, i64* %12, align 8
  %30 = load i64, i64* %10, align 8
  store i64 %30, i64* %13, align 8
  %31 = alloca i32
  store i32 293843109, i32* %31
  br label %32

; <label>:32:                                     ; preds = %5, %445
  %33 = load i32, i32* %31
  switch i32 %33, label %34 [
    i32 293843109, label %35
    i32 -46348566, label %45
    i32 -1464176666, label %73
    i32 683860957, label %119
    i32 -2122302878, label %122
    i32 1206377238, label %138
    i32 1277195455, label %159
    i32 -1855992872, label %160
    i32 402577195, label %188
    i32 1452702210, label %216
    i32 1667957367, label %217
    i32 1662519516, label %229
    i32 2009101198, label %239
    i32 147307917, label %267
    i32 844291736, label %284
    i32 671928844, label %368
    i32 1205258772, label %432
  ]

; <label>:34:                                     ; preds = %32
  br label %445

; <label>:35:                                     ; preds = %32
  %36 = load i64, i64* %13, align 8
  %37 = load i64, i64* %11, align 8
  %38 = sub i64 %37, -201215218307923878
  %39 = sub i64 %38, 1
  %40 = add i64 %39, -201215218307923878
  %41 = sub nsw i64 %37, 1
  %42 = sdiv i64 %40, 2
  %43 = icmp slt i64 %36, %42
  %44 = select i1 %43, i32 -46348566, i32 1667957367
  store i32 %44, i32* %31
  br label %445

; <label>:45:                                     ; preds = %32
  %46 = load i32, i32* @x.389
  %47 = load i32, i32* @y.390
  %48 = sub i32 %46, 1089295764
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1089295764
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1464176666, i32 844291736
  store i32 %72, i32* %31
  br label %445

; <label>:73:                                     ; preds = %32
  %74 = load i64, i64* %13, align 8
  %75 = sub i64 0, 1
  %76 = sub i64 %74, %75
  %77 = add nsw i64 %74, 1
  %78 = mul nsw i64 2, %76
  store i64 %78, i64* %13, align 8
  %79 = load i64, i64* %13, align 8
  %80 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %79) #3
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  store %"struct.Graph::QInfo"* %80, %"struct.Graph::QInfo"** %81, align 8
  %82 = load i64, i64* %13, align 8
  %83 = sub i64 0, 1
  %84 = add i64 %82, %83
  %85 = sub nsw i64 %82, 1
  %86 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %84) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  store %"struct.Graph::QInfo"* %86, %"struct.Graph::QInfo"** %87, align 8
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  %89 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %88, align 8
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  %91 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %90, align 8
  %92 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, %"struct.Graph::QInfo"* %89, %"struct.Graph::QInfo"* %91)
  store i1 %92, i1* %6
  %93 = load i32, i32* @x.389
  %94 = load i32, i32* @y.390
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 683860957, i32 844291736
  store i32 %118, i32* %31
  br label %445

; <label>:119:                                    ; preds = %32
  %120 = load volatile i1, i1* %6
  %121 = select i1 %120, i32 -2122302878, i32 -1855992872
  store i32 %121, i32* %31
  br label %445

; <label>:122:                                    ; preds = %32
  %123 = load i32, i32* @x.389
  %124 = load i32, i32* @y.390
  %125 = add i32 %123, 1154607002
  %126 = sub i32 %125, 1
  %127 = sub i32 %126, 1154607002
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  %137 = select i1 %135, i32 1206377238, i32 671928844
  store i32 %137, i32* %31
  br label %445

; <label>:138:                                    ; preds = %32
  %139 = load i64, i64* %13, align 8
  %140 = sub i64 0, %139
  %141 = sub i64 0, -1
  %142 = add i64 %140, %141
  %143 = sub i64 0, %142
  %144 = add nsw i64 %139, -1
  store i64 %143, i64* %13, align 8
  %145 = load i32, i32* @x.389
  %146 = load i32, i32* @y.390
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 1277195455, i32 671928844
  store i32 %158, i32* %31
  br label %445

; <label>:159:                                    ; preds = %32
  store i32 -1855992872, i32* %31
  br label %445

; <label>:160:                                    ; preds = %32
  %161 = load i32, i32* @x.389
  %162 = load i32, i32* @y.390
  %163 = add i32 %161, -1333259623
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, -1333259623
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  %187 = select i1 %185, i32 402577195, i32 1205258772
  store i32 %187, i32* %31
  br label %445

; <label>:188:                                    ; preds = %32
  %189 = load i64, i64* %13, align 8
  %190 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %189) #3
  %191 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %16, i32 0, i32 0
  store %"struct.Graph::QInfo"* %190, %"struct.Graph::QInfo"** %191, align 8
  %192 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %16) #3
  %193 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %192) #3
  %194 = load i64, i64* %10, align 8
  %195 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %194) #3
  %196 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %17, i32 0, i32 0
  store %"struct.Graph::QInfo"* %195, %"struct.Graph::QInfo"** %196, align 8
  %197 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %17) #3
  %198 = bitcast %"struct.Graph::QInfo"* %197 to i8*
  %199 = bitcast %"struct.Graph::QInfo"* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %198, i8* %199, i64 16, i32 8, i1 false)
  %200 = load i64, i64* %13, align 8
  store i64 %200, i64* %10, align 8
  %201 = load i32, i32* @x.389
  %202 = load i32, i32* @y.390
  %203 = add i32 %201, 776711043
  %204 = sub i32 %203, 1
  %205 = sub i32 %204, 776711043
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = and i1 %209, %210
  %212 = xor i1 %209, %210
  %213 = or i1 %211, %212
  %214 = or i1 %209, %210
  %215 = select i1 %213, i32 1452702210, i32 1205258772
  store i32 %215, i32* %31
  br label %445

; <label>:216:                                    ; preds = %32
  store i32 293843109, i32* %31
  br label %445

; <label>:217:                                    ; preds = %32
  %218 = load i64, i64* %11, align 8
  %219 = xor i64 %218, -1
  %220 = xor i64 1, -1
  %221 = xor i64 -1097806793751174316, -1
  %222 = or i64 %219, %220
  %223 = or i64 -1097806793751174316, %221
  %224 = xor i64 %222, -1
  %225 = and i64 %224, %223
  %226 = and i64 %218, 1
  %227 = icmp eq i64 %225, 0
  %228 = select i1 %227, i32 1662519516, i32 147307917
  store i32 %228, i32* %31
  br label %445

; <label>:229:                                    ; preds = %32
  %230 = load i64, i64* %13, align 8
  %231 = load i64, i64* %11, align 8
  %232 = sub i64 %231, -822517637123961979
  %233 = sub i64 %232, 2
  %234 = add i64 %233, -822517637123961979
  %235 = sub nsw i64 %231, 2
  %236 = sdiv i64 %234, 2
  %237 = icmp eq i64 %230, %236
  %238 = select i1 %237, i32 2009101198, i32 147307917
  store i32 %238, i32* %31
  br label %445

; <label>:239:                                    ; preds = %32
  %240 = load i64, i64* %13, align 8
  %241 = sub i64 0, %240
  %242 = sub i64 0, 1
  %243 = add i64 %241, %242
  %244 = sub i64 0, %243
  %245 = add nsw i64 %240, 1
  %246 = mul nsw i64 2, %244
  store i64 %246, i64* %13, align 8
  %247 = load i64, i64* %13, align 8
  %248 = sub i64 %247, -5460605980368809624
  %249 = sub i64 %248, 1
  %250 = add i64 %249, -5460605980368809624
  %251 = sub nsw i64 %247, 1
  %252 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %250) #3
  %253 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %18, i32 0, i32 0
  store %"struct.Graph::QInfo"* %252, %"struct.Graph::QInfo"** %253, align 8
  %254 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %18) #3
  %255 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %254) #3
  %256 = load i64, i64* %10, align 8
  %257 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %256) #3
  %258 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %19, i32 0, i32 0
  store %"struct.Graph::QInfo"* %257, %"struct.Graph::QInfo"** %258, align 8
  %259 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %19) #3
  %260 = bitcast %"struct.Graph::QInfo"* %259 to i8*
  %261 = bitcast %"struct.Graph::QInfo"* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %260, i8* %261, i64 16, i32 8, i1 false)
  %262 = load i64, i64* %13, align 8
  %263 = sub i64 %262, 4452591815633052301
  %264 = sub i64 %263, 1
  %265 = add i64 %264, 4452591815633052301
  %266 = sub nsw i64 %262, 1
  store i64 %265, i64* %10, align 8
  store i32 147307917, i32* %31
  br label %445

; <label>:267:                                    ; preds = %32
  %268 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %20 to i8*
  %269 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %268, i8* %269, i64 8, i32 8, i1 false)
  %270 = load i64, i64* %10, align 8
  %271 = load i64, i64* %12, align 8
  %272 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %8) #3
  %273 = bitcast %"struct.Graph::QInfo"* %21 to i8*
  %274 = bitcast %"struct.Graph::QInfo"* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %273, i8* %274, i64 16, i32 8, i1 false)
  %275 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %23 to i8*
  %276 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %275, i8* %276, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE()
  %277 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %20, i32 0, i32 0
  %278 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %277, align 8
  %279 = bitcast %"struct.Graph::QInfo"* %21 to { i64, i64 }*
  %280 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %279, i32 0, i32 0
  %281 = load i64, i64* %280, align 8
  %282 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %279, i32 0, i32 1
  %283 = load i64, i64* %282, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"* %278, i64 %270, i64 %271, i64 %281, i64 %283)
  ret void

; <label>:284:                                    ; preds = %32
  %285 = load i64, i64* %13, align 8
  %286 = sub i64 0, -1229856145905007340
  %287 = sub i64 %286, %285
  %288 = add i64 %287, -1229856145905007340
  %289 = sub i64 0, %285
  %290 = sub i64 %288, -5271284479270580921
  %291 = add i64 %290, 1
  %292 = add i64 %291, -5271284479270580921
  %293 = add i64 %288, 1
  %294 = sub i64 0, %285
  %295 = add i64 0, %294
  %296 = sub i64 0, %285
  %297 = add i64 %295, 3411841833111909114
  %298 = add i64 %297, 1
  %299 = sub i64 %298, 3411841833111909114
  %300 = add i64 %295, 1
  %301 = shl i64 %285, 1
  %302 = add i64 %285, -2656521345978893294
  %303 = sub i64 %302, 1
  %304 = sub i64 %303, -2656521345978893294
  %305 = sub i64 %285, 1
  %306 = mul i64 %304, 1
  %307 = shl i64 %285, 1
  %308 = sub i64 0, 9193771345643411099
  %309 = sub i64 %308, %285
  %310 = add i64 %309, 9193771345643411099
  %311 = sub i64 0, %285
  %312 = sub i64 %310, 8717332639205419133
  %313 = add i64 %312, 1
  %314 = add i64 %313, 8717332639205419133
  %315 = add i64 %310, 1
  %316 = sub i64 %285, -8119247855872519692
  %317 = add i64 %316, 1
  %318 = add i64 %317, -8119247855872519692
  %319 = add nsw i64 %285, 1
  %320 = shl i64 2, %318
  %321 = mul nsw i64 2, %318
  store i64 %321, i64* %13, align 8
  %322 = load i64, i64* %13, align 8
  %323 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %322) #3
  %324 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  store %"struct.Graph::QInfo"* %323, %"struct.Graph::QInfo"** %324, align 8
  %325 = load i64, i64* %13, align 8
  %326 = shl i64 %325, 1
  %327 = shl i64 %325, 1
  %328 = sub i64 0, 1
  %329 = add i64 %325, %328
  %330 = sub i64 %325, 1
  %331 = mul i64 %329, 1
  %332 = sub i64 0, 1
  %333 = add i64 %325, %332
  %334 = sub i64 %325, 1
  %335 = mul i64 %333, 1
  %336 = add i64 %325, 906233985355554546
  %337 = sub i64 %336, 1
  %338 = sub i64 %337, 906233985355554546
  %339 = sub i64 %325, 1
  %340 = mul i64 %338, 1
  %341 = sub i64 0, 672148707543747325
  %342 = sub i64 %341, %325
  %343 = add i64 %342, 672148707543747325
  %344 = sub i64 0, %325
  %345 = sub i64 0, 1
  %346 = sub i64 %343, %345
  %347 = add i64 %343, 1
  %348 = sub i64 0, %325
  %349 = add i64 0, %348
  %350 = sub i64 0, %325
  %351 = sub i64 %349, -3690610229637828209
  %352 = add i64 %351, 1
  %353 = add i64 %352, -3690610229637828209
  %354 = add i64 %349, 1
  %355 = shl i64 %325, 1
  %356 = shl i64 %325, 1
  %357 = add i64 %325, 3799671240174142075
  %358 = sub i64 %357, 1
  %359 = sub i64 %358, 3799671240174142075
  %360 = sub nsw i64 %325, 1
  %361 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %359) #3
  %362 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  store %"struct.Graph::QInfo"* %361, %"struct.Graph::QInfo"** %362, align 8
  %363 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  %364 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %363, align 8
  %365 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  %366 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %365, align 8
  %367 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, %"struct.Graph::QInfo"* %364, %"struct.Graph::QInfo"* %366)
  store i32 -1464176666, i32* %31
  br label %445

; <label>:368:                                    ; preds = %32
  %369 = load i64, i64* %13, align 8
  %370 = add i64 0, -2052058125509538402
  %371 = sub i64 %370, %369
  %372 = sub i64 %371, -2052058125509538402
  %373 = sub i64 0, %369
  %374 = add i64 %372, 1994623949324646894
  %375 = add i64 %374, -1
  %376 = sub i64 %375, 1994623949324646894
  %377 = add i64 %372, -1
  %378 = sub i64 %369, 4251917183836741469
  %379 = sub i64 %378, -1
  %380 = add i64 %379, 4251917183836741469
  %381 = sub i64 %369, -1
  %382 = mul i64 %380, -1
  %383 = add i64 0, -790380118208127756
  %384 = sub i64 %383, %369
  %385 = sub i64 %384, -790380118208127756
  %386 = sub i64 0, %369
  %387 = sub i64 %385, -8530603154009248869
  %388 = add i64 %387, -1
  %389 = add i64 %388, -8530603154009248869
  %390 = add i64 %385, -1
  %391 = sub i64 %369, 1423297068338330761
  %392 = sub i64 %391, -1
  %393 = add i64 %392, 1423297068338330761
  %394 = sub i64 %369, -1
  %395 = mul i64 %393, -1
  %396 = add i64 0, 8537208473759658752
  %397 = sub i64 %396, %369
  %398 = sub i64 %397, 8537208473759658752
  %399 = sub i64 0, %369
  %400 = add i64 %398, -7365528765114279323
  %401 = add i64 %400, -1
  %402 = sub i64 %401, -7365528765114279323
  %403 = add i64 %398, -1
  %404 = sub i64 0, %369
  %405 = add i64 0, %404
  %406 = sub i64 0, %369
  %407 = add i64 %405, 8066737661879968652
  %408 = add i64 %407, -1
  %409 = sub i64 %408, 8066737661879968652
  %410 = add i64 %405, -1
  %411 = sub i64 0, 5504824579836255225
  %412 = sub i64 %411, %369
  %413 = add i64 %412, 5504824579836255225
  %414 = sub i64 0, %369
  %415 = add i64 %413, -7998806251050144498
  %416 = add i64 %415, -1
  %417 = sub i64 %416, -7998806251050144498
  %418 = add i64 %413, -1
  %419 = sub i64 0, %369
  %420 = add i64 0, %419
  %421 = sub i64 0, %369
  %422 = sub i64 0, %420
  %423 = sub i64 0, -1
  %424 = add i64 %422, %423
  %425 = sub i64 0, %424
  %426 = add i64 %420, -1
  %427 = sub i64 0, %369
  %428 = sub i64 0, -1
  %429 = add i64 %427, %428
  %430 = sub i64 0, %429
  %431 = add nsw i64 %369, -1
  store i64 %430, i64* %13, align 8
  store i32 1206377238, i32* %31
  br label %445

; <label>:432:                                    ; preds = %32
  %433 = load i64, i64* %13, align 8
  %434 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %433) #3
  %435 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %16, i32 0, i32 0
  store %"struct.Graph::QInfo"* %434, %"struct.Graph::QInfo"** %435, align 8
  %436 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %16) #3
  %437 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %436) #3
  %438 = load i64, i64* %10, align 8
  %439 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %438) #3
  %440 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %17, i32 0, i32 0
  store %"struct.Graph::QInfo"* %439, %"struct.Graph::QInfo"** %440, align 8
  %441 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %17) #3
  %442 = bitcast %"struct.Graph::QInfo"* %441 to i8*
  %443 = bitcast %"struct.Graph::QInfo"* %437 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %442, i8* %443, i64 16, i32 8, i1 false)
  %444 = load i64, i64* %13, align 8
  store i64 %444, i64* %10, align 8
  store i32 402577195, i32* %31
  br label %445

; <label>:445:                                    ; preds = %432, %368, %284, %239, %229, %217, %216, %188, %160, %159, %138, %122, %119, %73, %45, %35, %34
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.35"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::QInfo"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.391
  %6 = load i32, i32* @y.392
  %7 = sub i32 %5, -1924150249
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1924150249
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1557450289, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1557450289, label %19
    i32 526039363, label %27
    i32 527547355, label %46
    i32 -1162304078, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 526039363, i32 -1162304078
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %29, i32 0, i32 0
  store %"struct.Graph::QInfo"** %30, %"struct.Graph::QInfo"*** %2
  %31 = load i32, i32* @x.391
  %32 = load i32, i32* @y.392
  %33 = sub i32 %31, -1116427293
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1116427293
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 527547355, i32 -1162304078
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %2
  ret %"struct.Graph::QInfo"** %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %49, align 8
  %50 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %50, i32 0, i32 0
  store i32 526039363, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"*, %"struct.Graph::QInfo"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %4 = alloca %"struct.Graph::QInfo"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %3, align 8
  store %"struct.Graph::QInfo"** %1, %"struct.Graph::QInfo"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  store %"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %10 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, i32 0, i32 0
  %11 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %4) #3
  %12 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %5) #3
  %13 = call zeroext i1 @_ZNKSt4lessIN5Graph5QInfoEEclERKS1_S4_(%"struct.std::less"* %10, %"struct.Graph::QInfo"* dereferenceable(16) %11, %"struct.Graph::QInfo"* dereferenceable(16) %12)
  ret i1 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca i1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %8 = alloca %"struct.Graph::QInfo", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %7, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %17, align 8
  %18 = bitcast %"struct.Graph::QInfo"* %8 to { i64, i64 }*
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %4, i64* %20, align 8
  store i64 %1, i64* %10, align 8
  store i64 %2, i64* %11, align 8
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 720278172022269980
  %23 = sub i64 %22, 1
  %24 = sub i64 %23, 720278172022269980
  %25 = sub nsw i64 %21, 1
  %26 = sdiv i64 %24, 2
  store i64 %26, i64* %12, align 8
  %27 = alloca i32
  store i32 -1774332141, i32* %27
  %28 = alloca i1
  br label %29

; <label>:29:                                     ; preds = %5, %170
  %30 = load i32, i32* %27
  switch i32 %30, label %31 [
    i32 -1774332141, label %32
    i32 892750863, label %37
    i32 716339064, label %44
    i32 323240769, label %60
    i32 -139721710, label %75
    i32 1507732900, label %78
    i32 -978746740, label %97
    i32 1381447347, label %125
    i32 1252596203, label %160
    i32 -985158868, label %161
    i32 -2066311682, label %162
  ]

; <label>:31:                                     ; preds = %29
  br label %170

; <label>:32:                                     ; preds = %29
  %33 = load i64, i64* %10, align 8
  %34 = load i64, i64* %11, align 8
  %35 = icmp sgt i64 %33, %34
  %36 = select i1 %35, i32 892750863, i32 716339064
  store i32 %36, i32* %27
  store i1 false, i1* %28
  br label %170

; <label>:37:                                     ; preds = %29
  %38 = load i64, i64* %12, align 8
  %39 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %38) #3
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  store %"struct.Graph::QInfo"* %39, %"struct.Graph::QInfo"** %40, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %13, i32 0, i32 0
  %42 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %41, align 8
  %43 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %9, %"struct.Graph::QInfo"* %42, %"struct.Graph::QInfo"* dereferenceable(16) %8)
  store i32 716339064, i32* %27
  store i1 %43, i1* %28
  br label %170

; <label>:44:                                     ; preds = %29
  %45 = load i1, i1* %28
  store i1 %45, i1* %6
  %46 = load i32, i32* @x.397
  %47 = load i32, i32* @y.398
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 323240769, i32 -985158868
  store i32 %59, i32* %27
  br label %170

; <label>:60:                                     ; preds = %29
  %61 = load i32, i32* @x.397
  %62 = load i32, i32* @y.398
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 -139721710, i32 -985158868
  store i32 %74, i32* %27
  br label %170

; <label>:75:                                     ; preds = %29
  %76 = load volatile i1, i1* %6
  %77 = select i1 %76, i32 1507732900, i32 -978746740
  store i32 %77, i32* %27
  br label %170

; <label>:78:                                     ; preds = %29
  %79 = load i64, i64* %12, align 8
  %80 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %79) #3
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %14, i32 0, i32 0
  store %"struct.Graph::QInfo"* %80, %"struct.Graph::QInfo"** %81, align 8
  %82 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %14) #3
  %83 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %82) #3
  %84 = load i64, i64* %10, align 8
  %85 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %84) #3
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %15, i32 0, i32 0
  store %"struct.Graph::QInfo"* %85, %"struct.Graph::QInfo"** %86, align 8
  %87 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %15) #3
  %88 = bitcast %"struct.Graph::QInfo"* %87 to i8*
  %89 = bitcast %"struct.Graph::QInfo"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 16, i32 8, i1 false)
  %90 = load i64, i64* %12, align 8
  store i64 %90, i64* %10, align 8
  %91 = load i64, i64* %10, align 8
  %92 = sub i64 %91, -7771531924951238270
  %93 = sub i64 %92, 1
  %94 = add i64 %93, -7771531924951238270
  %95 = sub nsw i64 %91, 1
  %96 = sdiv i64 %94, 2
  store i64 %96, i64* %12, align 8
  store i32 -1774332141, i32* %27
  br label %170

; <label>:97:                                     ; preds = %29
  %98 = load i32, i32* @x.397
  %99 = load i32, i32* @y.398
  %100 = add i32 %98, -824809865
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, -824809865
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 1381447347, i32 -2066311682
  store i32 %124, i32* %27
  br label %170

; <label>:125:                                    ; preds = %29
  %126 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %8) #3
  %127 = load i64, i64* %10, align 8
  %128 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %127) #3
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %16, i32 0, i32 0
  store %"struct.Graph::QInfo"* %128, %"struct.Graph::QInfo"** %129, align 8
  %130 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %16) #3
  %131 = bitcast %"struct.Graph::QInfo"* %130 to i8*
  %132 = bitcast %"struct.Graph::QInfo"* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %132, i64 16, i32 8, i1 false)
  %133 = load i32, i32* @x.397
  %134 = load i32, i32* @y.398
  %135 = add i32 %133, -1987412025
  %136 = sub i32 %135, 1
  %137 = sub i32 %136, -1987412025
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 true, true
  %146 = and i1 %143, true
  %147 = and i1 %141, %145
  %148 = and i1 %144, true
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 true, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  %159 = select i1 %157, i32 1252596203, i32 -2066311682
  store i32 %159, i32* %27
  br label %170

; <label>:160:                                    ; preds = %29
  ret void

; <label>:161:                                    ; preds = %29
  store i32 323240769, i32* %27
  br label %170

; <label>:162:                                    ; preds = %29
  %163 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %8) #3
  %164 = load i64, i64* %10, align 8
  %165 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.35"* %7, i64 %164) #3
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %16, i32 0, i32 0
  store %"struct.Graph::QInfo"* %165, %"struct.Graph::QInfo"** %166, align 8
  %167 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %16) #3
  %168 = bitcast %"struct.Graph::QInfo"* %167 to i8*
  %169 = bitcast %"struct.Graph::QInfo"* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %168, i8* %169, i64 16, i32 8, i1 false)
  store i32 1381447347, i32* %27
  br label %170

; <label>:170:                                    ; preds = %162, %161, %125, %97, %78, %75, %60, %44, %37, %32, %31
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %"struct.std::less", align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIN5Graph5QInfoEEclERKS1_S4_(%"struct.std::less"*, %"struct.Graph::QInfo"* dereferenceable(16), %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"struct.std::less"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %10 = call zeroext i1 @_ZNK5Graph5QInfoltERKS0_(%"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"* dereferenceable(16) %9)
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK5Graph5QInfoltERKS0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::QInfo"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %3, align 8
  %6 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %5, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %9 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %8, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %5, align 8
  %9 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %8, i32 0, i32 0
  %10 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %4) #3
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %12 = call zeroext i1 @_ZNKSt4lessIN5Graph5QInfoEEclERKS1_S4_(%"struct.std::less"* %9, %"struct.Graph::QInfo"* dereferenceable(16) %10, %"struct.Graph::QInfo"* dereferenceable(16) %11)
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"class.std::allocator.27"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.411
  %7 = load i32, i32* @y.412
  %8 = add i32 %6, 1631114827
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1631114827
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2044454925, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2044454925, label %20
    i32 457581502, label %28
    i32 -635951581, label %60
    i32 1639271453, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 457581502, i32 1639271453
  store i32 %27, i32* %16
  br label %67

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.Graph::QInfo"*, align 8
  %30 = alloca %"struct.Graph::QInfo"*, align 8
  %31 = alloca %"class.std::allocator.27"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %29, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %30, align 8
  store %"class.std::allocator.27"* %2, %"class.std::allocator.27"** %31, align 8
  %32 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %29, align 8
  %33 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %30, align 8
  call void @_ZSt8_DestroyIPN5Graph5QInfoEEvT_S3_(%"struct.Graph::QInfo"* %32, %"struct.Graph::QInfo"* %33)
  %34 = load i32, i32* @x.411
  %35 = load i32, i32* @y.412
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -635951581, i32 1639271453
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca %"struct.Graph::QInfo"*, align 8
  %63 = alloca %"struct.Graph::QInfo"*, align 8
  %64 = alloca %"class.std::allocator.27"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %62, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %63, align 8
  store %"class.std::allocator.27"* %2, %"class.std::allocator.27"** %64, align 8
  %65 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %62, align 8
  %66 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %63, align 8
  call void @_ZSt8_DestroyIPN5Graph5QInfoEEvT_S3_(%"struct.Graph::QInfo"* %65, %"struct.Graph::QInfo"* %66)
  store i32 457581502, i32* %16
  br label %67

; <label>:67:                                     ; preds = %61, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EED2Ev(%"struct.std::_Vector_base.26"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.26"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %2, align 8
  %5 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %13, align 8
  %15 = ptrtoint %"struct.Graph::QInfo"* %11 to i64
  %16 = ptrtoint %"struct.Graph::QInfo"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 16
  invoke void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %5, %"struct.Graph::QInfo"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.413
  %25 = load i32, i32* @y.414
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %83

; <label>:49:                                     ; preds = %23, %83
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %3, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %4, align 4
  %53 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %53) #3
  %54 = load i32, i32* @x.413
  %55 = load i32, i32* @y.414
  %56 = add i32 %54, 1752974152
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 1752974152
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %83

; <label>:80:                                     ; preds = %49
  br label %81

; <label>:81:                                     ; preds = %80
  %82 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %82) #10
  unreachable

; <label>:83:                                     ; preds = %49, %23
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %3, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %4, align 4
  %87 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %87) #3
  br label %49
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph5QInfoEEvT_S3_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.415
  %6 = load i32, i32* @y.416
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 730428463, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %75
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 730428463, label %18
    i32 787341712, label %38
    i32 1096595204, label %69
    i32 -305358698, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %75

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 787341712, i32 -305358698
  store i32 %37, i32* %14
  br label %75

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.Graph::QInfo"*, align 8
  %40 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %39, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %40, align 8
  %41 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %39, align 8
  %42 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %40, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph5QInfoEEEvT_S5_(%"struct.Graph::QInfo"* %41, %"struct.Graph::QInfo"* %42)
  %43 = load i32, i32* @x.415
  %44 = load i32, i32* @y.416
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1096595204, i32 -305358698
  store i32 %68, i32* %14
  br label %75

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.Graph::QInfo"*, align 8
  %72 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %71, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %72, align 8
  %73 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %71, align 8
  %74 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %72, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph5QInfoEEEvT_S5_(%"struct.Graph::QInfo"* %73, %"struct.Graph::QInfo"* %74)
  store i32 787341712, i32* %14
  br label %75

; <label>:75:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph5QInfoEEEvT_S5_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.417
  %6 = load i32, i32* @y.418
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 233368147, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 233368147, label %18
    i32 1049576506, label %38
    i32 -1449608531, label %67
    i32 734330884, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1049576506, i32 734330884
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.Graph::QInfo"*, align 8
  %40 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %39, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %40, align 8
  %41 = load i32, i32* @x.417
  %42 = load i32, i32* @y.418
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1449608531, i32 734330884
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"struct.Graph::QInfo"*, align 8
  %70 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %69, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %70, align 8
  store i32 1049576506, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"*, %"struct.Graph::QInfo"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.26"*
  %6 = alloca i64*
  %7 = alloca %"struct.Graph::QInfo"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.419
  %11 = load i32, i32* @y.420
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1466891316, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %119
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1466891316, label %23
    i32 -1934975493, label %31
    i32 531955524, label %68
    i32 -688588241, label %71
    i32 -1004229373, label %79
    i32 -1931612101, label %94
    i32 -1319212094, label %110
    i32 30852562, label %111
    i32 1108370418, label %118
  ]

; <label>:22:                                     ; preds = %20
  br label %119

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1934975493, i32 30852562
  store i32 %30, i32* %19
  br label %119

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.26"*, align 8
  %33 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"** %33, %"struct.Graph::QInfo"*** %7
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %32, align 8
  %35 = load volatile %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %7
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %35, align 8
  %36 = load volatile i64*, i64** %6
  store i64 %2, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %32, align 8
  store %"struct.std::_Vector_base.26"* %37, %"struct.std::_Vector_base.26"** %5
  %38 = load volatile %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %7
  %39 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %38, align 8
  %40 = icmp ne %"struct.Graph::QInfo"* %39, null
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.419
  %42 = load i32, i32* @y.420
  %43 = add i32 %41, -301477624
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -301477624
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 531955524, i32 30852562
  store i32 %67, i32* %19
  br label %119

; <label>:68:                                     ; preds = %20
  %69 = load volatile i1, i1* %4
  %70 = select i1 %69, i32 -688588241, i32 -1004229373
  store i32 %70, i32* %19
  br label %119

; <label>:71:                                     ; preds = %20
  %72 = load volatile %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %5
  %73 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %72, i32 0, i32 0
  %74 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %73 to %"class.std::allocator.27"*
  %75 = load volatile %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %7
  %76 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %75, align 8
  %77 = load volatile i64*, i64** %6
  %78 = load i64, i64* %77, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE10deallocateERS2_PS1_m(%"class.std::allocator.27"* dereferenceable(1) %74, %"struct.Graph::QInfo"* %76, i64 %78)
  store i32 -1004229373, i32* %19
  br label %119

; <label>:79:                                     ; preds = %20
  %80 = load i32, i32* @x.419
  %81 = load i32, i32* @y.420
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 -1931612101, i32 1108370418
  store i32 %93, i32* %19
  br label %119

; <label>:94:                                     ; preds = %20
  %95 = load i32, i32* @x.419
  %96 = load i32, i32* @y.420
  %97 = sub i32 %95, -139434357
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -139434357
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 -1319212094, i32 1108370418
  store i32 %109, i32* %19
  br label %119

; <label>:110:                                    ; preds = %20
  ret void

; <label>:111:                                    ; preds = %20
  %112 = alloca %"struct.std::_Vector_base.26"*, align 8
  %113 = alloca %"struct.Graph::QInfo"*, align 8
  %114 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %112, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %113, align 8
  store i64 %2, i64* %114, align 8
  %115 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %112, align 8
  %116 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %113, align 8
  %117 = icmp ne %"struct.Graph::QInfo"* %116, null
  store i32 -1934975493, i32* %19
  br label %119

; <label>:118:                                    ; preds = %20
  store i32 -1931612101, i32* %19
  br label %119

; <label>:119:                                    ; preds = %118, %111, %94, %79, %71, %68, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %3 to %"class.std::allocator.27"*
  call void @_ZNSaIN5Graph5QInfoEED2Ev(%"class.std::allocator.27"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE10deallocateERS2_PS1_m(%"class.std::allocator.27"* dereferenceable(1), %"struct.Graph::QInfo"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.423
  %7 = load i32, i32* @y.424
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -677897123, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -677897123, label %19
    i32 1851882169, label %27
    i32 -1521386732, label %50
    i32 1734538495, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1851882169, i32 1734538495
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.27"*, align 8
  %29 = alloca %"struct.Graph::QInfo"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %28, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %28, align 8
  %32 = bitcast %"class.std::allocator.27"* %31 to %"class.__gnu_cxx::new_allocator.28"*
  %33 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %29, align 8
  %34 = load i64, i64* %30, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"* %32, %"struct.Graph::QInfo"* %33, i64 %34)
  %35 = load i32, i32* @x.423
  %36 = load i32, i32* @y.424
  %37 = add i32 %35, 1846016351
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1846016351
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1521386732, i32 1734538495
  store i32 %49, i32* %15
  br label %59

; <label>:50:                                     ; preds = %16
  ret void

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::allocator.27"*, align 8
  %53 = alloca %"struct.Graph::QInfo"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %52, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %52, align 8
  %56 = bitcast %"class.std::allocator.27"* %55 to %"class.__gnu_cxx::new_allocator.28"*
  %57 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %53, align 8
  %58 = load i64, i64* %54, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"* %56, %"struct.Graph::QInfo"* %57, i64 %58)
  store i32 1851882169, i32* %15
  br label %59

; <label>:59:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.28"*, %"struct.Graph::QInfo"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %9 = bitcast %"struct.Graph::QInfo"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph5QInfoEED2Ev(%"class.std::allocator.27"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.427
  %5 = load i32, i32* @y.428
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1465406072, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1465406072, label %17
    i32 -54215539, label %37
    i32 301622152, label %55
    i32 -1969221333, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -54215539, i32 -1969221333
  store i32 %36, i32* %13
  br label %60

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %38, align 8
  %39 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %38, align 8
  %40 = bitcast %"class.std::allocator.27"* %39 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEED2Ev(%"class.__gnu_cxx::new_allocator.28"* %40) #3
  %41 = load i32, i32* @x.427
  %42 = load i32, i32* @y.428
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 301622152, i32 -1969221333
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %57, align 8
  %58 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %57, align 8
  %59 = bitcast %"class.std::allocator.27"* %58 to %"class.__gnu_cxx::new_allocator.28"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEED2Ev(%"class.__gnu_cxx::new_allocator.28"* %59) #3
  store i32 -54215539, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEED2Ev(%"class.__gnu_cxx::new_allocator.28"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.431
  %5 = load i32, i32* @y.432
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -683492591, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -683492591, label %17
    i32 83026194, label %37
    i32 1437520803, label %56
    i32 464009289, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 83026194, i32 464009289
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %38, align 8
  %39 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %38, align 8
  %40 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %39, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %40)
  %41 = load i32, i32* @x.431
  %42 = load i32, i32* @y.432
  %43 = add i32 %41, 643987518
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 643987518
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1437520803, i32 464009289
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %58, align 8
  %59 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %58, align 8
  %60 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %59, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %60)
  store i32 83026194, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.433
  %3 = load i32, i32* @y.434
  %4 = sub i32 %2, 1665967597
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1665967597
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %76

; <label>:28:                                     ; preds = %1, %76
  %29 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %29, align 8
  %32 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %29, align 8
  %33 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %32 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.30"* %33) #3
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %32, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %32, i32 0, i32 1
  %36 = bitcast %"struct.std::_Rb_tree_node_base"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* %36, i8 0, i64 32, i32 8, i1 false)
  %37 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %32, i32 0, i32 2
  store i64 0, i64* %37, align 8
  %38 = load i32, i32* @x.433
  %39 = load i32, i32* @y.434
  %40 = add i32 %38, 1810455442
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1810455442
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %76

; <label>:64:                                     ; preds = %28
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %32)
          to label %65 unwind label %66

; <label>:65:                                     ; preds = %64
  ret void

; <label>:66:                                     ; preds = %64
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %30, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %31, align 4
  %70 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %32 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.30"* %70) #3
  br label %71

; <label>:71:                                     ; preds = %66
  %72 = load i8*, i8** %30, align 8
  %73 = load i32, i32* %31, align 4
  %74 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %75 = insertvalue { i8*, i32 } %74, i32 %73, 1
  resume { i8*, i32 } %75

; <label>:76:                                     ; preds = %28, %1
  %77 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %78 = alloca i8*
  %79 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %77, align 8
  %80 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %77, align 8
  %81 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %80 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.30"* %81) #3
  %82 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %80, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %80, i32 0, i32 1
  %84 = bitcast %"struct.std::_Rb_tree_node_base"* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* %84, i8 0, i64 32, i32 8, i1 false)
  %85 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %80, i32 0, i32 2
  store i64 0, i64* %85, align 8
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.30"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.435
  %5 = load i32, i32* @y.436
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2017522023, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2017522023, label %17
    i32 -588941311, label %37
    i32 312646881, label %56
    i32 1111045260, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -588941311, i32 1111045260
  store i32 %36, i32* %13
  br label %61

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %38, align 8
  %39 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %38, align 8
  %40 = bitcast %"class.std::allocator.30"* %39 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.31"* %40) #3
  %41 = load i32, i32* @x.435
  %42 = load i32, i32* @y.436
  %43 = add i32 %41, 121719505
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 121719505
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 312646881, i32 1111045260
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %58, align 8
  %59 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %58, align 8
  %60 = bitcast %"class.std::allocator.30"* %59 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.31"* %60) #3
  store i32 -588941311, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.30"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %2, align 8
  %3 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %2, align 8
  %4 = bitcast %"class.std::allocator.30"* %3 to %"class.__gnu_cxx::new_allocator.31"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.31"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.31"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE9push_backEOS1_(%"class.std::vector.25"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %7 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %6) #3
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.25"* %5, %"struct.Graph::QInfo"* dereferenceable(16) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.447
  %6 = load i32, i32* @y.448
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1063417230, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %124
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1063417230, label %18
    i32 184989849, label %38
    i32 1533839020, label %87
    i32 -11094183, label %88
  ]

; <label>:17:                                     ; preds = %15
  br label %124

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 184989849, i32 -11094183
  store i32 %37, i32* %14
  br label %124

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %41 = alloca %"struct.std::less", align 1
  %42 = alloca %"struct.Graph::QInfo", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %45 = alloca %"struct.Graph::QInfo", align 8
  %46 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %47 = alloca %"struct.std::less", align 1
  %48 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %39, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %49, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %40, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %50, align 8
  %51 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.35"* %40, i64 1) #3
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %43, i32 0, i32 0
  store %"struct.Graph::QInfo"* %51, %"struct.Graph::QInfo"** %52, align 8
  %53 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %43) #3
  %54 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %53) #3
  %55 = bitcast %"struct.Graph::QInfo"* %42 to i8*
  %56 = bitcast %"struct.Graph::QInfo"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 16, i32 8, i1 false)
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %44 to i8*
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 8, i1 false)
  %59 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %40, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %39) #3
  %60 = sub i64 0, 1
  %61 = add i64 %59, %60
  %62 = sub nsw i64 %59, 1
  %63 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %42) #3
  %64 = bitcast %"struct.Graph::QInfo"* %45 to i8*
  %65 = bitcast %"struct.Graph::QInfo"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 16, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EES7_()
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %44, i32 0, i32 0
  %67 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %66, align 8
  %68 = bitcast %"struct.Graph::QInfo"* %45 to { i64, i64 }*
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %68, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %68, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"* %67, i64 %61, i64 0, i64 %70, i64 %72)
  %73 = load i32, i32* @x.447
  %74 = load i32, i32* @y.448
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 1533839020, i32 -11094183
  store i32 %86, i32* %14
  br label %124

; <label>:87:                                     ; preds = %15
  ret void

; <label>:88:                                     ; preds = %15
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %91 = alloca %"struct.std::less", align 1
  %92 = alloca %"struct.Graph::QInfo", align 8
  %93 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %95 = alloca %"struct.Graph::QInfo", align 8
  %96 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %97 = alloca %"struct.std::less", align 1
  %98 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %89, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %99, align 8
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %90, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %100, align 8
  %101 = call %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.35"* %90, i64 1) #3
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %93, i32 0, i32 0
  store %"struct.Graph::QInfo"* %101, %"struct.Graph::QInfo"** %102, align 8
  %103 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %93) #3
  %104 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %103) #3
  %105 = bitcast %"struct.Graph::QInfo"* %92 to i8*
  %106 = bitcast %"struct.Graph::QInfo"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 16, i32 8, i1 false)
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %94 to i8*
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 8, i32 8, i1 false)
  %109 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %90, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %89) #3
  %110 = shl i64 %109, 1
  %111 = sub i64 0, 1
  %112 = add i64 %109, %111
  %113 = sub nsw i64 %109, 1
  %114 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %92) #3
  %115 = bitcast %"struct.Graph::QInfo"* %95 to i8*
  %116 = bitcast %"struct.Graph::QInfo"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %116, i64 16, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EES7_()
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %94, i32 0, i32 0
  %118 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %117, align 8
  %119 = bitcast %"struct.Graph::QInfo"* %95 to { i64, i64 }*
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %119, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %119, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"* %118, i64 %112, i64 0, i64 %121, i64 %123)
  store i32 184989849, i32* %14
  br label %124

; <label>:124:                                    ; preds = %88, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.25"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.25"*
  %5 = alloca %"struct.Graph::QInfo"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.449
  %9 = load i32, i32* @y.450
  %10 = sub i32 %8, -1891230641
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -1891230641
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -970320409, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %147
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -970320409, label %22
    i32 821909877, label %30
    i32 1779065529, label %73
    i32 1830765255, label %76
    i32 1960981493, label %95
    i32 1663545177, label %100
    i32 823510855, label %116
    i32 -537421423, label %132
    i32 -1413302522, label %133
    i32 832505098, label %146
  ]

; <label>:21:                                     ; preds = %19
  br label %147

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 821909877, i32 -1413302522
  store i32 %29, i32* %18
  br label %147

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.25"*, align 8
  %32 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"** %32, %"struct.Graph::QInfo"*** %5
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %31, align 8
  %33 = load volatile %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %5
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %33, align 8
  %34 = load %"class.std::vector.25"*, %"class.std::vector.25"** %31, align 8
  store %"class.std::vector.25"* %34, %"class.std::vector.25"** %4
  %35 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %4
  %36 = bitcast %"class.std::vector.25"* %35 to %"struct.std::_Vector_base.26"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %38, align 8
  %40 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %4
  %41 = bitcast %"class.std::vector.25"* %40 to %"struct.std::_Vector_base.26"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %42, i32 0, i32 2
  %44 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %43, align 8
  %45 = icmp ne %"struct.Graph::QInfo"* %39, %44
  store i1 %45, i1* %3
  %46 = load i32, i32* @x.449
  %47 = load i32, i32* @y.450
  %48 = add i32 %46, -815524483
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -815524483
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1779065529, i32 -1413302522
  store i32 %72, i32* %18
  br label %147

; <label>:73:                                     ; preds = %19
  %74 = load volatile i1, i1* %3
  %75 = select i1 %74, i32 1830765255, i32 1960981493
  store i32 %75, i32* %18
  br label %147

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %4
  %78 = bitcast %"class.std::vector.25"* %77 to %"struct.std::_Vector_base.26"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %78, i32 0, i32 0
  %80 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %79 to %"class.std::allocator.27"*
  %81 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %4
  %82 = bitcast %"class.std::vector.25"* %81 to %"struct.std::_Vector_base.26"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %83, i32 0, i32 1
  %85 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %84, align 8
  %86 = load volatile %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %5
  %87 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %86, align 8
  %88 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %87) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.27"* dereferenceable(1) %80, %"struct.Graph::QInfo"* %85, %"struct.Graph::QInfo"* dereferenceable(16) %88)
  %89 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %4
  %90 = bitcast %"class.std::vector.25"* %89 to %"struct.std::_Vector_base.26"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %91, i32 0, i32 1
  %93 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %92, align 8
  %94 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %93, i32 1
  store %"struct.Graph::QInfo"* %94, %"struct.Graph::QInfo"** %92, align 8
  store i32 1663545177, i32* %18
  br label %147

; <label>:95:                                     ; preds = %19
  %96 = load volatile %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %5
  %97 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %96, align 8
  %98 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %97) #3
  %99 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %4
  call void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.25"* %99, %"struct.Graph::QInfo"* dereferenceable(16) %98)
  store i32 1663545177, i32* %18
  br label %147

; <label>:100:                                    ; preds = %19
  %101 = load i32, i32* @x.449
  %102 = load i32, i32* @y.450
  %103 = sub i32 %101, -1153384880
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -1153384880
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  %115 = select i1 %113, i32 823510855, i32 832505098
  store i32 %115, i32* %18
  br label %147

; <label>:116:                                    ; preds = %19
  %117 = load i32, i32* @x.449
  %118 = load i32, i32* @y.450
  %119 = sub i32 %117, 967962332
  %120 = sub i32 %119, 1
  %121 = add i32 %120, 967962332
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 -537421423, i32 832505098
  store i32 %131, i32* %18
  br label %147

; <label>:132:                                    ; preds = %19
  ret void

; <label>:133:                                    ; preds = %19
  %134 = alloca %"class.std::vector.25"*, align 8
  %135 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %134, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %135, align 8
  %136 = load %"class.std::vector.25"*, %"class.std::vector.25"** %134, align 8
  %137 = bitcast %"class.std::vector.25"* %136 to %"struct.std::_Vector_base.26"*
  %138 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %137, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %138, i32 0, i32 1
  %140 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %139, align 8
  %141 = bitcast %"class.std::vector.25"* %136 to %"struct.std::_Vector_base.26"*
  %142 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %141, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %142, i32 0, i32 2
  %144 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %143, align 8
  %145 = icmp ne %"struct.Graph::QInfo"* %140, %144
  store i32 821909877, i32* %18
  br label %147

; <label>:146:                                    ; preds = %19
  store i32 823510855, i32* %18
  br label %147

; <label>:147:                                    ; preds = %146, %133, %116, %100, %95, %76, %73, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.27"* dereferenceable(1), %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.27"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  %7 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %4, align 8
  %8 = bitcast %"class.std::allocator.27"* %7 to %"class.__gnu_cxx::new_allocator.28"*
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %10 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %11 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.28"* %8, %"struct.Graph::QInfo"* %9, %"struct.Graph::QInfo"* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %2, align 8
  %3 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %2, align 8
  ret %"struct.Graph::QInfo"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.25"*, %"struct.Graph::QInfo"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  %7 = alloca %"struct.Graph::QInfo"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %10 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.25"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Graph::QInfo"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.26"* %12, i64 %13)
  store %"struct.Graph::QInfo"* %14, %"struct.Graph::QInfo"** %6, align 8
  %15 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  store %"struct.Graph::QInfo"* %15, %"struct.Graph::QInfo"** %7, align 8
  %16 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %17 to %"class.std::allocator.27"*
  %19 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %10) #3
  %21 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %19, i64 %20
  %22 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %23 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.27"* dereferenceable(1) %18, %"struct.Graph::QInfo"* %21, %"struct.Graph::QInfo"* dereferenceable(16) %23)
          to label %24 unwind label %94

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.455
  %26 = load i32, i32* @y.456
  %27 = add i32 %25, 96394695
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 96394695
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %407

; <label>:51:                                     ; preds = %24, %407
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %7, align 8
  %52 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %53, i32 0, i32 0
  %55 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %54, align 8
  %56 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %58, align 8
  %60 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %61 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %62 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %61) #3
  %63 = load i32, i32* @x.455
  %64 = load i32, i32* @y.456
  %65 = sub i32 %63, -47220803
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -47220803
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %407

; <label>:89:                                     ; preds = %51
  %90 = invoke %"struct.Graph::QInfo"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph5QInfoES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::QInfo"* %55, %"struct.Graph::QInfo"* %59, %"struct.Graph::QInfo"* %60, %"class.std::allocator.27"* dereferenceable(1) %62)
          to label %91 unwind label %94

; <label>:91:                                     ; preds = %89
  store %"struct.Graph::QInfo"* %90, %"struct.Graph::QInfo"** %7, align 8
  %92 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %93 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %92, i32 1
  store %"struct.Graph::QInfo"* %93, %"struct.Graph::QInfo"** %7, align 8
  br label %353

; <label>:94:                                     ; preds = %89, %2
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %8, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %9, align 4
  br label %98

; <label>:98:                                     ; preds = %94
  %99 = load i32, i32* @x.455
  %100 = load i32, i32* @y.456
  %101 = sub i32 %99, -1422222383
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -1422222383
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %419

; <label>:125:                                    ; preds = %98, %419
  %126 = load i8*, i8** %8, align 8
  %127 = call i8* @__cxa_begin_catch(i8* %126) #3
  %128 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %129 = icmp ne %"struct.Graph::QInfo"* %128, null
  %130 = load i32, i32* @x.455
  %131 = load i32, i32* @y.456
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %419

; <label>:143:                                    ; preds = %125
  br i1 %129, label %239, label %144

; <label>:144:                                    ; preds = %143
  %145 = load i32, i32* @x.455
  %146 = load i32, i32* @y.456
  %147 = add i32 %145, 294448773
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 294448773
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  br i1 %157, label %159, label %424

; <label>:159:                                    ; preds = %144, %424
  %160 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %160, i32 0, i32 0
  %162 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %161 to %"class.std::allocator.27"*
  %163 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %164 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %10) #3
  %165 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %163, i64 %164
  %166 = load i32, i32* @x.455
  %167 = load i32, i32* @y.456
  %168 = sub i32 %166, 1188715250
  %169 = sub i32 %168, 1
  %170 = add i32 %169, 1188715250
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = and i1 %174, %175
  %177 = xor i1 %174, %175
  %178 = or i1 %176, %177
  %179 = or i1 %174, %175
  br i1 %178, label %180, label %424

; <label>:180:                                    ; preds = %159
  invoke void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.27"* dereferenceable(1) %162, %"struct.Graph::QInfo"* %165)
          to label %181 unwind label %182

; <label>:181:                                    ; preds = %180
  br label %275

; <label>:182:                                    ; preds = %309, %308, %239, %180
  %183 = load i32, i32* @x.455
  %184 = load i32, i32* @y.456
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 true, true
  %195 = and i1 %192, true
  %196 = and i1 %190, %194
  %197 = and i1 %193, true
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 true, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %431

; <label>:208:                                    ; preds = %182, %431
  %209 = landingpad { i8*, i32 }
          cleanup
  %210 = extractvalue { i8*, i32 } %209, 0
  store i8* %210, i8** %8, align 8
  %211 = extractvalue { i8*, i32 } %209, 1
  store i32 %211, i32* %9, align 4
  %212 = load i32, i32* @x.455
  %213 = load i32, i32* @y.456
  %214 = add i32 %212, -186012726
  %215 = sub i32 %214, 1
  %216 = sub i32 %215, -186012726
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 false, true
  %225 = and i1 %222, false
  %226 = and i1 %220, %224
  %227 = and i1 %223, false
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 false, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  br i1 %236, label %238, label %431

; <label>:238:                                    ; preds = %208
  invoke void @__cxa_end_catch()
          to label %310 unwind label %403

; <label>:239:                                    ; preds = %143
  %240 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %241 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %242 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %243 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %242) #3
  invoke void @_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E(%"struct.Graph::QInfo"* %240, %"struct.Graph::QInfo"* %241, %"class.std::allocator.27"* dereferenceable(1) %243)
          to label %244 unwind label %182

; <label>:244:                                    ; preds = %239
  %245 = load i32, i32* @x.455
  %246 = load i32, i32* @y.456
  %247 = sub i32 %245, 1728471206
  %248 = sub i32 %247, 1
  %249 = add i32 %248, 1728471206
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = and i1 %253, %254
  %256 = xor i1 %253, %254
  %257 = or i1 %255, %256
  %258 = or i1 %253, %254
  br i1 %257, label %259, label %435

; <label>:259:                                    ; preds = %244, %435
  %260 = load i32, i32* @x.455
  %261 = load i32, i32* @y.456
  %262 = sub i32 %260, -986780110
  %263 = sub i32 %262, 1
  %264 = add i32 %263, -986780110
  %265 = sub i32 %260, 1
  %266 = mul i32 %260, %264
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %261, 10
  %270 = and i1 %268, %269
  %271 = xor i1 %268, %269
  %272 = or i1 %270, %271
  %273 = or i1 %268, %269
  br i1 %272, label %274, label %435

; <label>:274:                                    ; preds = %259
  br label %275

; <label>:275:                                    ; preds = %274, %181
  %276 = load i32, i32* @x.455
  %277 = load i32, i32* @y.456
  %278 = add i32 %276, 2011143446
  %279 = sub i32 %278, 1
  %280 = sub i32 %279, 2011143446
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = and i1 %284, %285
  %287 = xor i1 %284, %285
  %288 = or i1 %286, %287
  %289 = or i1 %284, %285
  br i1 %288, label %290, label %436

; <label>:290:                                    ; preds = %275, %436
  %291 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %292 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %293 = load i64, i64* %5, align 8
  %294 = load i32, i32* @x.455
  %295 = load i32, i32* @y.456
  %296 = sub i32 %294, 1783128408
  %297 = sub i32 %296, 1
  %298 = add i32 %297, 1783128408
  %299 = sub i32 %294, 1
  %300 = mul i32 %294, %298
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %295, 10
  %304 = and i1 %302, %303
  %305 = xor i1 %302, %303
  %306 = or i1 %304, %305
  %307 = or i1 %302, %303
  br i1 %306, label %308, label %436

; <label>:308:                                    ; preds = %290
  invoke void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %291, %"struct.Graph::QInfo"* %292, i64 %293)
          to label %309 unwind label %182

; <label>:309:                                    ; preds = %308
  invoke void @__cxa_rethrow() #13
          to label %406 unwind label %182

; <label>:310:                                    ; preds = %238
  %311 = load i32, i32* @x.455
  %312 = load i32, i32* @y.456
  %313 = add i32 %311, -1328875782
  %314 = sub i32 %313, 1
  %315 = sub i32 %314, -1328875782
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = xor i1 %319, true
  %322 = xor i1 %320, true
  %323 = xor i1 true, true
  %324 = and i1 %321, true
  %325 = and i1 %319, %323
  %326 = and i1 %322, true
  %327 = and i1 %320, %323
  %328 = or i1 %324, %325
  %329 = or i1 %326, %327
  %330 = xor i1 %328, %329
  %331 = or i1 %321, %322
  %332 = xor i1 %331, true
  %333 = or i1 true, %323
  %334 = and i1 %332, %333
  %335 = or i1 %330, %334
  %336 = or i1 %319, %320
  br i1 %335, label %337, label %440

; <label>:337:                                    ; preds = %310, %440
  %338 = load i32, i32* @x.455
  %339 = load i32, i32* @y.456
  %340 = sub i32 %338, -268150860
  %341 = sub i32 %340, 1
  %342 = add i32 %341, -268150860
  %343 = sub i32 %338, 1
  %344 = mul i32 %338, %342
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %339, 10
  %348 = and i1 %346, %347
  %349 = xor i1 %346, %347
  %350 = or i1 %348, %349
  %351 = or i1 %346, %347
  br i1 %350, label %352, label %440

; <label>:352:                                    ; preds = %337
  br label %398

; <label>:353:                                    ; preds = %91
  %354 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %355 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %354, i32 0, i32 0
  %356 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %355, i32 0, i32 0
  %357 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %356, align 8
  %358 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %358, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %359, i32 0, i32 1
  %361 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %360, align 8
  %362 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %363 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %362) #3
  call void @_ZSt8_DestroyIPN5Graph5QInfoES1_EvT_S3_RSaIT0_E(%"struct.Graph::QInfo"* %357, %"struct.Graph::QInfo"* %361, %"class.std::allocator.27"* dereferenceable(1) %363)
  %364 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %365 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %366 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %365, i32 0, i32 0
  %367 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %366, i32 0, i32 0
  %368 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %367, align 8
  %369 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %370 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %369, i32 0, i32 0
  %371 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %370, i32 0, i32 2
  %372 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %371, align 8
  %373 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %374 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %373, i32 0, i32 0
  %375 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %374, i32 0, i32 0
  %376 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %375, align 8
  %377 = ptrtoint %"struct.Graph::QInfo"* %372 to i64
  %378 = ptrtoint %"struct.Graph::QInfo"* %376 to i64
  %379 = add i64 %377, -6979381111114288715
  %380 = sub i64 %379, %378
  %381 = sub i64 %380, -6979381111114288715
  %382 = sub i64 %377, %378
  %383 = sdiv exact i64 %381, 16
  call void @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.26"* %364, %"struct.Graph::QInfo"* %368, i64 %383)
  %384 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %385 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %386 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %385, i32 0, i32 0
  %387 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %386, i32 0, i32 0
  store %"struct.Graph::QInfo"* %384, %"struct.Graph::QInfo"** %387, align 8
  %388 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %389 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %390 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %389, i32 0, i32 0
  %391 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %390, i32 0, i32 1
  store %"struct.Graph::QInfo"* %388, %"struct.Graph::QInfo"** %391, align 8
  %392 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %393 = load i64, i64* %5, align 8
  %394 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %392, i64 %393
  %395 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %395, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %396, i32 0, i32 2
  store %"struct.Graph::QInfo"* %394, %"struct.Graph::QInfo"** %397, align 8
  ret void

; <label>:398:                                    ; preds = %352
  %399 = load i8*, i8** %8, align 8
  %400 = load i32, i32* %9, align 4
  %401 = insertvalue { i8*, i32 } undef, i8* %399, 0
  %402 = insertvalue { i8*, i32 } %401, i32 %400, 1
  resume { i8*, i32 } %402

; <label>:403:                                    ; preds = %238
  %404 = landingpad { i8*, i32 }
          catch i8* null
  %405 = extractvalue { i8*, i32 } %404, 0
  call void @__clang_call_terminate(i8* %405) #10
  unreachable

; <label>:406:                                    ; preds = %309
  unreachable

; <label>:407:                                    ; preds = %51, %24
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %7, align 8
  %408 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %409 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %408, i32 0, i32 0
  %410 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %409, i32 0, i32 0
  %411 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %410, align 8
  %412 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %413 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %412, i32 0, i32 0
  %414 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %413, i32 0, i32 1
  %415 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %414, align 8
  %416 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %417 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %418 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %417) #3
  br label %51

; <label>:419:                                    ; preds = %125, %98
  %420 = load i8*, i8** %8, align 8
  %421 = call i8* @__cxa_begin_catch(i8* %420) #3
  %422 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %7, align 8
  %423 = icmp ne %"struct.Graph::QInfo"* %422, null
  br label %125

; <label>:424:                                    ; preds = %159, %144
  %425 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %426 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %425, i32 0, i32 0
  %427 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %426 to %"class.std::allocator.27"*
  %428 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %429 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %10) #3
  %430 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %428, i64 %429
  br label %159

; <label>:431:                                    ; preds = %208, %182
  %432 = landingpad { i8*, i32 }
          cleanup
  %433 = extractvalue { i8*, i32 } %432, 0
  store i8* %433, i8** %8, align 8
  %434 = extractvalue { i8*, i32 } %432, 1
  store i32 %434, i32* %9, align 4
  br label %208

; <label>:435:                                    ; preds = %259, %244
  br label %259

; <label>:436:                                    ; preds = %290, %275
  %437 = bitcast %"class.std::vector.25"* %10 to %"struct.std::_Vector_base.26"*
  %438 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %439 = load i64, i64* %5, align 8
  br label %290

; <label>:440:                                    ; preds = %337, %310
  br label %337
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.28"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %5 = alloca %"struct.Graph::QInfo"*, align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %5, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %4, align 8
  %8 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  %9 = bitcast %"struct.Graph::QInfo"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::QInfo"*
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %12 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.Graph::QInfo"* %10 to i8*
  %14 = bitcast %"struct.Graph::QInfo"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.25"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.25"*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i8**
  %9 = alloca i64*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.459
  %13 = load i32, i32* @y.460
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %11
  %20 = icmp slt i32 %13, 10
  store i1 %20, i1* %10
  %21 = alloca i32
  store i32 -1027275883, i32* %21
  %22 = alloca i64
  br label %23

; <label>:23:                                     ; preds = %3, %199
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 -1027275883, label %26
    i32 2126111761, label %34
    i32 -1603725052, label %81
    i32 -1499136666, label %84
    i32 1525044456, label %100
    i32 511814520, label %130
    i32 1929131525, label %131
    i32 2115436652, label %152
    i32 1458278916, label %159
    i32 1616424343, label %162
    i32 -2062988421, label %165
    i32 -153418747, label %167
    i32 -1262913177, label %196
  ]

; <label>:25:                                     ; preds = %23
  br label %199

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %11
  %28 = load volatile i1, i1* %10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 2126111761, i32 -153418747
  store i32 %33, i32* %21
  br label %199

; <label>:34:                                     ; preds = %23
  %35 = alloca %"class.std::vector.25"*, align 8
  %36 = alloca i64, align 8
  store i64* %36, i64** %9
  %37 = alloca i8*, align 8
  store i8** %37, i8*** %8
  %38 = alloca i64, align 8
  store i64* %38, i64** %7
  %39 = alloca i64, align 8
  store i64* %39, i64** %6
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %35, align 8
  %40 = load volatile i64*, i64** %9
  store i64 %1, i64* %40, align 8
  %41 = load volatile i8**, i8*** %8
  store i8* %2, i8** %41, align 8
  %42 = load %"class.std::vector.25"*, %"class.std::vector.25"** %35, align 8
  store %"class.std::vector.25"* %42, %"class.std::vector.25"** %5
  %43 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %44 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %43) #3
  %45 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %46 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %45) #3
  %47 = sub i64 %44, 321520257454226837
  %48 = sub i64 %47, %46
  %49 = add i64 %48, 321520257454226837
  %50 = sub i64 %44, %46
  %51 = load volatile i64*, i64** %9
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %49, %52
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.459
  %55 = load i32, i32* @y.460
  %56 = sub i32 %54, 384341107
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 384341107
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -1603725052, i32 -153418747
  store i32 %80, i32* %21
  br label %199

; <label>:81:                                     ; preds = %23
  %82 = load volatile i1, i1* %4
  %83 = select i1 %82, i32 -1499136666, i32 1929131525
  store i32 %83, i32* %21
  br label %199

; <label>:84:                                     ; preds = %23
  %85 = load i32, i32* @x.459
  %86 = load i32, i32* @y.460
  %87 = sub i32 %85, 226213685
  %88 = sub i32 %87, 1
  %89 = add i32 %88, 226213685
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 1525044456, i32 -1262913177
  store i32 %99, i32* %21
  br label %199

; <label>:100:                                    ; preds = %23
  %101 = load volatile i8**, i8*** %8
  %102 = load i8*, i8** %101, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %102) #13
  %103 = load i32, i32* @x.459
  %104 = load i32, i32* @y.460
  %105 = sub i32 %103, 1939595066
  %106 = sub i32 %105, 1
  %107 = add i32 %106, 1939595066
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 511814520, i32 -1262913177
  store i32 %129, i32* %21
  br label %199

; <label>:130:                                    ; preds = %23
  unreachable

; <label>:131:                                    ; preds = %23
  %132 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %133 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %132) #3
  %134 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %135 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %134) #3
  %136 = load volatile i64*, i64** %6
  store i64 %135, i64* %136, align 8
  %137 = load volatile i64*, i64** %9
  %138 = load volatile i64*, i64** %6
  %139 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %138, i64* dereferenceable(8) %137)
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %133, -735537853930813909
  %142 = add i64 %141, %140
  %143 = add i64 %142, -735537853930813909
  %144 = add i64 %133, %140
  %145 = load volatile i64*, i64** %7
  store i64 %143, i64* %145, align 8
  %146 = load volatile i64*, i64** %7
  %147 = load i64, i64* %146, align 8
  %148 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %149 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %148) #3
  %150 = icmp ult i64 %147, %149
  %151 = select i1 %150, i32 1458278916, i32 2115436652
  store i32 %151, i32* %21
  br label %199

; <label>:152:                                    ; preds = %23
  %153 = load volatile i64*, i64** %7
  %154 = load i64, i64* %153, align 8
  %155 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %156 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %155) #3
  %157 = icmp ugt i64 %154, %156
  %158 = select i1 %157, i32 1458278916, i32 1616424343
  store i32 %158, i32* %21
  br label %199

; <label>:159:                                    ; preds = %23
  %160 = load volatile %"class.std::vector.25"*, %"class.std::vector.25"** %5
  %161 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %160) #3
  store i32 -2062988421, i32* %21
  store i64 %161, i64* %22
  br label %199

; <label>:162:                                    ; preds = %23
  %163 = load volatile i64*, i64** %7
  %164 = load i64, i64* %163, align 8
  store i32 -2062988421, i32* %21
  store i64 %164, i64* %22
  br label %199

; <label>:165:                                    ; preds = %23
  %166 = load i64, i64* %22
  ret i64 %166

; <label>:167:                                    ; preds = %23
  %168 = alloca %"class.std::vector.25"*, align 8
  %169 = alloca i64, align 8
  %170 = alloca i8*, align 8
  %171 = alloca i64, align 8
  %172 = alloca i64, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %168, align 8
  store i64 %1, i64* %169, align 8
  store i8* %2, i8** %170, align 8
  %173 = load %"class.std::vector.25"*, %"class.std::vector.25"** %168, align 8
  %174 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"* %173) #3
  %175 = call i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"* %173) #3
  %176 = sub i64 %174, -7685110931079882743
  %177 = sub i64 %176, %175
  %178 = add i64 %177, -7685110931079882743
  %179 = sub i64 %174, %175
  %180 = mul i64 %178, %175
  %181 = add i64 0, 5253128326918177589
  %182 = sub i64 %181, %174
  %183 = sub i64 %182, 5253128326918177589
  %184 = sub i64 0, %174
  %185 = sub i64 %183, 4457012971168366008
  %186 = add i64 %185, %175
  %187 = add i64 %186, 4457012971168366008
  %188 = add i64 %183, %175
  %189 = shl i64 %174, %175
  %190 = sub i64 %174, -6663183471168163247
  %191 = sub i64 %190, %175
  %192 = add i64 %191, -6663183471168163247
  %193 = sub i64 %174, %175
  %194 = load i64, i64* %169, align 8
  %195 = icmp ult i64 %192, %194
  store i32 2126111761, i32* %21
  br label %199

; <label>:196:                                    ; preds = %23
  %197 = load volatile i8**, i8*** %8
  %198 = load i8*, i8** %197, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %198) #13
  store i32 1525044456, i32* %21
  br label %199

; <label>:199:                                    ; preds = %196, %167, %162, %159, %152, %131, %100, %84, %81, %34, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt12_Vector_baseIN5Graph5QInfoESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.26"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.26"*
  %5 = alloca %"struct.std::_Vector_base.26"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %5, align 8
  store %"struct.std::_Vector_base.26"* %7, %"struct.std::_Vector_base.26"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1138605048, i32* %9
  %10 = alloca %"struct.Graph::QInfo"*
  br label %11

; <label>:11:                                     ; preds = %2, %82
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1138605048, label %14
    i32 1294063749, label %18
    i32 -311850625, label %24
    i32 1777045650, label %51
    i32 -1563684173, label %78
    i32 643265587, label %79
    i32 -70561007, label %81
  ]

; <label>:13:                                     ; preds = %11
  br label %82

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1294063749, i32 -311850625
  store i32 %17, i32* %9
  br label %82

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %20 to %"class.std::allocator.27"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"struct.Graph::QInfo"* @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8allocateERS2_m(%"class.std::allocator.27"* dereferenceable(1) %21, i64 %22)
  store i32 643265587, i32* %9
  store %"struct.Graph::QInfo"* %23, %"struct.Graph::QInfo"** %10
  br label %82

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.461
  %26 = load i32, i32* @y.462
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 1777045650, i32 -70561007
  store i32 %50, i32* %9
  br label %82

; <label>:51:                                     ; preds = %11
  %52 = load i32, i32* @x.461
  %53 = load i32, i32* @y.462
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -1563684173, i32 -70561007
  store i32 %77, i32* %9
  br label %82

; <label>:78:                                     ; preds = %11
  store i32 643265587, i32* %9
  store %"struct.Graph::QInfo"* null, %"struct.Graph::QInfo"** %10
  br label %82

; <label>:79:                                     ; preds = %11
  %80 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %10
  ret %"struct.Graph::QInfo"* %80

; <label>:81:                                     ; preds = %11
  store i32 1777045650, i32* %9
  br label %82

; <label>:82:                                     ; preds = %81, %78, %51, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE4sizeEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %8 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %10, align 8
  %12 = ptrtoint %"struct.Graph::QInfo"* %7 to i64
  %13 = ptrtoint %"struct.Graph::QInfo"* %11 to i64
  %14 = add i64 %12, 4772043328211758516
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 4772043328211758516
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph5QInfoES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"class.std::allocator.27"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::QInfo"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.465
  %9 = load i32, i32* @y.466
  %10 = sub i32 %8, 884866272
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 884866272
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -980709318, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %99
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -980709318, label %22
    i32 -1374594912, label %30
    i32 84583129, label %77
    i32 1060715477, label %79
  ]

; <label>:21:                                     ; preds = %19
  br label %99

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1374594912, i32 1060715477
  store i32 %29, i32* %18
  br label %99

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.Graph::QInfo"*, align 8
  %32 = alloca %"struct.Graph::QInfo"*, align 8
  %33 = alloca %"struct.Graph::QInfo"*, align 8
  %34 = alloca %"class.std::allocator.27"*, align 8
  %35 = alloca %"class.std::move_iterator.36", align 8
  %36 = alloca %"class.std::move_iterator.36", align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %31, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %32, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %33, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %34, align 8
  %37 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %31, align 8
  %38 = call %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %35, i32 0, i32 0
  store %"struct.Graph::QInfo"* %38, %"struct.Graph::QInfo"** %39, align 8
  %40 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %32, align 8
  %41 = call %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %36, i32 0, i32 0
  store %"struct.Graph::QInfo"* %41, %"struct.Graph::QInfo"** %42, align 8
  %43 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %33, align 8
  %44 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %35, i32 0, i32 0
  %46 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %36, i32 0, i32 0
  %48 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %47, align 8
  %49 = call %"struct.Graph::QInfo"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph5QInfoEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::QInfo"* %46, %"struct.Graph::QInfo"* %48, %"struct.Graph::QInfo"* %43, %"class.std::allocator.27"* dereferenceable(1) %44)
  store %"struct.Graph::QInfo"* %49, %"struct.Graph::QInfo"** %5
  %50 = load i32, i32* @x.465
  %51 = load i32, i32* @y.466
  %52 = sub i32 %50, -961755576
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -961755576
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 84583129, i32 1060715477
  store i32 %76, i32* %18
  br label %99

; <label>:77:                                     ; preds = %19
  %78 = load volatile %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5
  ret %"struct.Graph::QInfo"* %78

; <label>:79:                                     ; preds = %19
  %80 = alloca %"struct.Graph::QInfo"*, align 8
  %81 = alloca %"struct.Graph::QInfo"*, align 8
  %82 = alloca %"struct.Graph::QInfo"*, align 8
  %83 = alloca %"class.std::allocator.27"*, align 8
  %84 = alloca %"class.std::move_iterator.36", align 8
  %85 = alloca %"class.std::move_iterator.36", align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %80, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %81, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %82, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %83, align 8
  %86 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %80, align 8
  %87 = call %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"* %86)
  %88 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %84, i32 0, i32 0
  store %"struct.Graph::QInfo"* %87, %"struct.Graph::QInfo"** %88, align 8
  %89 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %81, align 8
  %90 = call %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"* %89)
  %91 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %85, i32 0, i32 0
  store %"struct.Graph::QInfo"* %90, %"struct.Graph::QInfo"** %91, align 8
  %92 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %82, align 8
  %93 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %83, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %84, i32 0, i32 0
  %95 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %94, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %85, i32 0, i32 0
  %97 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %96, align 8
  %98 = call %"struct.Graph::QInfo"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph5QInfoEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::QInfo"* %95, %"struct.Graph::QInfo"* %97, %"struct.Graph::QInfo"* %92, %"class.std::allocator.27"* dereferenceable(1) %93)
  store i32 -1374594912, i32* %18
  br label %99

; <label>:99:                                     ; preds = %79, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.27"* dereferenceable(1), %"struct.Graph::QInfo"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.27"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %3, align 8
  %6 = bitcast %"class.std::allocator.27"* %5 to %"class.__gnu_cxx::new_allocator.28"*
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.28"* %6, %"struct.Graph::QInfo"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE8max_sizeEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %5 = call dereferenceable(1) %"class.std::allocator.27"* @_ZNKSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8max_sizeERKS2_(%"class.std::allocator.27"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8max_sizeERKS2_(%"class.std::allocator.27"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %2, align 8
  %3 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %2, align 8
  %4 = bitcast %"class.std::allocator.27"* %3 to %"class.__gnu_cxx::new_allocator.28"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.27"* @_ZNKSt12_Vector_baseIN5Graph5QInfoESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.26"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.27"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.473
  %6 = load i32, i32* @y.474
  %7 = add i32 %5, 274097412
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 274097412
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 785074640, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 785074640, label %19
    i32 -1506849993, label %27
    i32 -1781918613, label %58
    i32 -211968934, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1506849993, i32 -211968934
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %28, align 8
  %29 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %30 to %"class.std::allocator.27"*
  store %"class.std::allocator.27"* %31, %"class.std::allocator.27"** %2
  %32 = load i32, i32* @x.473
  %33 = load i32, i32* @y.474
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1781918613, i32 -211968934
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.27"*, %"class.std::allocator.27"** %2
  ret %"class.std::allocator.27"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.26"*, align 8
  store %"struct.std::_Vector_base.26"* %0, %"struct.std::_Vector_base.26"** %61, align 8
  %62 = load %"struct.std::_Vector_base.26"*, %"struct.std::_Vector_base.26"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %63 to %"class.std::allocator.27"*
  store i32 -1506849993, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE8allocateERS2_m(%"class.std::allocator.27"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::QInfo"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.477
  %7 = load i32, i32* @y.478
  %8 = sub i32 %6, -148047516
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -148047516
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2041998176, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2041998176, label %20
    i32 1293091821, label %28
    i32 -2025464151, label %62
    i32 -904314374, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1293091821, i32 -904314374
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.27"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %29, align 8
  %32 = bitcast %"class.std::allocator.27"* %31 to %"class.__gnu_cxx::new_allocator.28"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"struct.Graph::QInfo"* @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %32, i64 %33, i8* null)
  store %"struct.Graph::QInfo"* %34, %"struct.Graph::QInfo"** %3
  %35 = load i32, i32* @x.477
  %36 = load i32, i32* @y.478
  %37 = sub i32 %35, -1667785788
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1667785788
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -2025464151, i32 -904314374
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %3
  ret %"struct.Graph::QInfo"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.27"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.27"* %0, %"class.std::allocator.27"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.27"*, %"class.std::allocator.27"** %65, align 8
  %68 = bitcast %"class.std::allocator.27"* %67 to %"class.__gnu_cxx::new_allocator.28"*
  %69 = load i64, i64* %66, align 8
  %70 = call %"struct.Graph::QInfo"* @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"* %68, i64 %69, i8* null)
  store i32 1293091821, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.28"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.479
  %9 = load i32, i32* @y.480
  %10 = add i32 %8, -1862068921
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1862068921
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1676098546, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %96
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1676098546, label %22
    i32 -1886191510, label %42
    i32 1258448006, label %78
    i32 1297168376, label %81
    i32 -755086528, label %82
    i32 338410129, label %88
  ]

; <label>:21:                                     ; preds = %19
  br label %96

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1886191510, i32 338410129
  store i32 %41, i32* %18
  br label %96

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.479
  %53 = load i32, i32* @y.480
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1258448006, i32 338410129
  store i32 %77, i32* %18
  br label %96

; <label>:78:                                     ; preds = %19
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 1297168376, i32 -755086528
  store i32 %80, i32* %18
  br label %96

; <label>:81:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:82:                                     ; preds = %19
  %83 = load volatile i64*, i64** %5
  %84 = load i64, i64* %83, align 8
  %85 = mul i64 %84, 16
  %86 = call i8* @_Znwm(i64 %85)
  %87 = bitcast i8* %86 to %"struct.Graph::QInfo"*
  ret %"struct.Graph::QInfo"* %87

; <label>:88:                                     ; preds = %19
  %89 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %90 = alloca i64, align 8
  %91 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %89, align 8
  store i64 %1, i64* %90, align 8
  store i8* %2, i8** %91, align 8
  %92 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %89, align 8
  %93 = load i64, i64* %90, align 8
  %94 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph5QInfoEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.28"* %92) #3
  %95 = icmp ugt i64 %93, %94
  store i32 -1886191510, i32* %18
  br label %96

; <label>:96:                                     ; preds = %88, %78, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph5QInfoEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"class.std::allocator.27"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::QInfo"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.481
  %9 = load i32, i32* @y.482
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1934376649, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1934376649, label %21
    i32 579924826, label %41
    i32 -1756574075, label %74
    i32 -1803437483, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 579924826, i32 -1803437483
  store i32 %40, i32* %17
  br label %95

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.36", align 8
  %43 = alloca %"class.std::move_iterator.36", align 8
  %44 = alloca %"struct.Graph::QInfo"*, align 8
  %45 = alloca %"class.std::allocator.27"*, align 8
  %46 = alloca %"class.std::move_iterator.36", align 8
  %47 = alloca %"class.std::move_iterator.36", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %42, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %43, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %49, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %44, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %45, align 8
  %50 = bitcast %"class.std::move_iterator.36"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.36"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.36"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.36"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %46, i32 0, i32 0
  %56 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %47, i32 0, i32 0
  %58 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %57, align 8
  %59 = call %"struct.Graph::QInfo"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph5QInfoEES3_ET0_T_S6_S5_(%"struct.Graph::QInfo"* %56, %"struct.Graph::QInfo"* %58, %"struct.Graph::QInfo"* %54)
  store %"struct.Graph::QInfo"* %59, %"struct.Graph::QInfo"** %5
  %60 = load i32, i32* @x.481
  %61 = load i32, i32* @y.482
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1756574075, i32 -1803437483
  store i32 %73, i32* %17
  br label %95

; <label>:74:                                     ; preds = %18
  %75 = load volatile %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5
  ret %"struct.Graph::QInfo"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::move_iterator.36", align 8
  %78 = alloca %"class.std::move_iterator.36", align 8
  %79 = alloca %"struct.Graph::QInfo"*, align 8
  %80 = alloca %"class.std::allocator.27"*, align 8
  %81 = alloca %"class.std::move_iterator.36", align 8
  %82 = alloca %"class.std::move_iterator.36", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %77, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %78, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %84, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %79, align 8
  store %"class.std::allocator.27"* %3, %"class.std::allocator.27"** %80, align 8
  %85 = bitcast %"class.std::move_iterator.36"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.36"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.std::move_iterator.36"* %82 to i8*
  %88 = bitcast %"class.std::move_iterator.36"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %79, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %81, i32 0, i32 0
  %91 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %90, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %82, i32 0, i32 0
  %93 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %92, align 8
  %94 = call %"struct.Graph::QInfo"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph5QInfoEES3_ET0_T_S6_S5_(%"struct.Graph::QInfo"* %91, %"struct.Graph::QInfo"* %93, %"struct.Graph::QInfo"* %89)
  store i32 579924826, i32* %17
  br label %95

; <label>:95:                                     ; preds = %76, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph5QInfoESt13move_iteratorIS2_EET0_T_(%"struct.Graph::QInfo"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.36", align 8
  %3 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %3, align 8
  %4 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5Graph5QInfoEEC2ES2_(%"class.std::move_iterator.36"* %2, %"struct.Graph::QInfo"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %2, i32 0, i32 0
  %6 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %5, align 8
  ret %"struct.Graph::QInfo"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph5QInfoEES3_ET0_T_S6_S5_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.36", align 8
  %5 = alloca %"class.std::move_iterator.36", align 8
  %6 = alloca %"struct.Graph::QInfo"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.36", align 8
  %9 = alloca %"class.std::move_iterator.36", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %11, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.36"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.36"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.36"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.36"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %8, i32 0, i32 0
  %18 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %19, align 8
  %21 = call %"struct.Graph::QInfo"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph5QInfoEES5_EET0_T_S8_S7_(%"struct.Graph::QInfo"* %18, %"struct.Graph::QInfo"* %20, %"struct.Graph::QInfo"* %16)
  ret %"struct.Graph::QInfo"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5Graph5QInfoEES5_EET0_T_S8_S7_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.487
  %5 = load i32, i32* @y.488
  %6 = sub i32 %4, -1343280888
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1343280888
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %271

; <label>:30:                                     ; preds = %3, %271
  %31 = alloca %"class.std::move_iterator.36", align 8
  %32 = alloca %"class.std::move_iterator.36", align 8
  %33 = alloca %"struct.Graph::QInfo"*, align 8
  %34 = alloca %"struct.Graph::QInfo"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %31, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %32, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %38, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %33, align 8
  %39 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %33, align 8
  store %"struct.Graph::QInfo"* %39, %"struct.Graph::QInfo"** %34, align 8
  %40 = load i32, i32* @x.487
  %41 = load i32, i32* @y.488
  %42 = sub i32 %40, 301924700
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 301924700
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %271

; <label>:66:                                     ; preds = %30
  br label %67

; <label>:67:                                     ; preds = %190, %66
  %68 = invoke zeroext i1 @_ZStneIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.36"* dereferenceable(8) %31, %"class.std::move_iterator.36"* dereferenceable(8) %32)
          to label %69 unwind label %191

; <label>:69:                                     ; preds = %67
  br i1 %68, label %70, label %201

; <label>:70:                                     ; preds = %69
  %71 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %34, align 8
  %72 = call %"struct.Graph::QInfo"* @_ZSt11__addressofIN5Graph5QInfoEEPT_RS2_(%"struct.Graph::QInfo"* dereferenceable(16) %71) #3
  %73 = invoke dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEEdeEv(%"class.std::move_iterator.36"* %31)
          to label %74 unwind label %191

; <label>:74:                                     ; preds = %70
  %75 = load i32, i32* @x.487
  %76 = load i32, i32* @y.488
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %281

; <label>:88:                                     ; preds = %74, %281
  %89 = load i32, i32* @x.487
  %90 = load i32, i32* @y.488
  %91 = add i32 %89, 53513519
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, 53513519
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %281

; <label>:103:                                    ; preds = %88
  invoke void @_ZSt10_ConstructIN5Graph5QInfoEJS1_EEvPT_DpOT0_(%"struct.Graph::QInfo"* %72, %"struct.Graph::QInfo"* dereferenceable(16) %73)
          to label %104 unwind label %191

; <label>:104:                                    ; preds = %103
  %105 = load i32, i32* @x.487
  %106 = load i32, i32* @y.488
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %282

; <label>:118:                                    ; preds = %104, %282
  %119 = load i32, i32* @x.487
  %120 = load i32, i32* @y.488
  %121 = sub i32 0, 1
  %122 = add i32 %119, %121
  %123 = sub i32 %119, 1
  %124 = mul i32 %119, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %120, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %282

; <label>:144:                                    ; preds = %118
  br label %145

; <label>:145:                                    ; preds = %144
  %146 = invoke dereferenceable(8) %"class.std::move_iterator.36"* @_ZNSt13move_iteratorIPN5Graph5QInfoEEppEv(%"class.std::move_iterator.36"* %31)
          to label %147 unwind label %191

; <label>:147:                                    ; preds = %145
  %148 = load i32, i32* @x.487
  %149 = load i32, i32* @y.488
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %283

; <label>:161:                                    ; preds = %147, %283
  %162 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %34, align 8
  %163 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %162, i32 1
  store %"struct.Graph::QInfo"* %163, %"struct.Graph::QInfo"** %34, align 8
  %164 = load i32, i32* @x.487
  %165 = load i32, i32* @y.488
  %166 = sub i32 %164, -1127273514
  %167 = sub i32 %166, 1
  %168 = add i32 %167, -1127273514
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = xor i1 %172, true
  %175 = xor i1 %173, true
  %176 = xor i1 false, true
  %177 = and i1 %174, false
  %178 = and i1 %172, %176
  %179 = and i1 %175, false
  %180 = and i1 %173, %176
  %181 = or i1 %177, %178
  %182 = or i1 %179, %180
  %183 = xor i1 %181, %182
  %184 = or i1 %174, %175
  %185 = xor i1 %184, true
  %186 = or i1 false, %176
  %187 = and i1 %185, %186
  %188 = or i1 %183, %187
  %189 = or i1 %172, %173
  br i1 %188, label %190, label %283

; <label>:190:                                    ; preds = %161
  br label %67

; <label>:191:                                    ; preds = %145, %103, %70, %67
  %192 = landingpad { i8*, i32 }
          catch i8* null
  %193 = extractvalue { i8*, i32 } %192, 0
  store i8* %193, i8** %35, align 8
  %194 = extractvalue { i8*, i32 } %192, 1
  store i32 %194, i32* %36, align 4
  br label %195

; <label>:195:                                    ; preds = %191
  %196 = load i8*, i8** %35, align 8
  %197 = call i8* @__cxa_begin_catch(i8* %196) #3
  %198 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %33, align 8
  %199 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %34, align 8
  invoke void @_ZSt8_DestroyIPN5Graph5QInfoEEvT_S3_(%"struct.Graph::QInfo"* %198, %"struct.Graph::QInfo"* %199)
          to label %200 unwind label %203

; <label>:200:                                    ; preds = %195
  invoke void @__cxa_rethrow() #13
          to label %270 unwind label %203

; <label>:201:                                    ; preds = %69
  %202 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %34, align 8
  ret %"struct.Graph::QInfo"* %202

; <label>:203:                                    ; preds = %200, %195
  %204 = load i32, i32* @x.487
  %205 = load i32, i32* @y.488
  %206 = add i32 %204, 1708115840
  %207 = sub i32 %206, 1
  %208 = sub i32 %207, 1708115840
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 true, true
  %217 = and i1 %214, true
  %218 = and i1 %212, %216
  %219 = and i1 %215, true
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 true, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %286

; <label>:230:                                    ; preds = %203, %286
  %231 = landingpad { i8*, i32 }
          cleanup
  %232 = extractvalue { i8*, i32 } %231, 0
  store i8* %232, i8** %35, align 8
  %233 = extractvalue { i8*, i32 } %231, 1
  store i32 %233, i32* %36, align 4
  %234 = load i32, i32* @x.487
  %235 = load i32, i32* @y.488
  %236 = sub i32 0, 1
  %237 = add i32 %234, %236
  %238 = sub i32 %234, 1
  %239 = mul i32 %234, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %235, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 true, true
  %246 = and i1 %243, true
  %247 = and i1 %241, %245
  %248 = and i1 %244, true
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 true, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  br i1 %257, label %259, label %286

; <label>:259:                                    ; preds = %230
  invoke void @__cxa_end_catch()
          to label %260 unwind label %267

; <label>:260:                                    ; preds = %259
  br label %262
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:262:                                    ; preds = %260
  %263 = load i8*, i8** %35, align 8
  %264 = load i32, i32* %36, align 4
  %265 = insertvalue { i8*, i32 } undef, i8* %263, 0
  %266 = insertvalue { i8*, i32 } %265, i32 %264, 1
  resume { i8*, i32 } %266

; <label>:267:                                    ; preds = %259
  %268 = landingpad { i8*, i32 }
          catch i8* null
  %269 = extractvalue { i8*, i32 } %268, 0
  call void @__clang_call_terminate(i8* %269) #10
  unreachable

; <label>:270:                                    ; preds = %200
  unreachable

; <label>:271:                                    ; preds = %30, %3
  %272 = alloca %"class.std::move_iterator.36", align 8
  %273 = alloca %"class.std::move_iterator.36", align 8
  %274 = alloca %"struct.Graph::QInfo"*, align 8
  %275 = alloca %"struct.Graph::QInfo"*, align 8
  %276 = alloca i8*
  %277 = alloca i32
  %278 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %272, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %278, align 8
  %279 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %273, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %279, align 8
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %274, align 8
  %280 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %274, align 8
  store %"struct.Graph::QInfo"* %280, %"struct.Graph::QInfo"** %275, align 8
  br label %30

; <label>:281:                                    ; preds = %88, %74
  br label %88

; <label>:282:                                    ; preds = %118, %104
  br label %118

; <label>:283:                                    ; preds = %161, %147
  %284 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %34, align 8
  %285 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %284, i32 1
  store %"struct.Graph::QInfo"* %285, %"struct.Graph::QInfo"** %34, align 8
  br label %161

; <label>:286:                                    ; preds = %230, %203
  %287 = landingpad { i8*, i32 }
          cleanup
  %288 = extractvalue { i8*, i32 } %287, 0
  store i8* %288, i8** %35, align 8
  %289 = extractvalue { i8*, i32 } %287, 1
  store i32 %289, i32* %36, align 4
  br label %230
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.36"* dereferenceable(8), %"class.std::move_iterator.36"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.36"*, align 8
  %4 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %3, align 8
  store %"class.std::move_iterator.36"* %1, %"class.std::move_iterator.36"** %4, align 8
  %5 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %3, align 8
  %6 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.36"* dereferenceable(8) %5, %"class.std::move_iterator.36"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, true
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph5QInfoEJS1_EEvPT_DpOT0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.491
  %6 = load i32, i32* @y.492
  %7 = sub i32 %5, -95708720
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -95708720
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 468950577, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %86
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 468950577, label %19
    i32 2021355303, label %39
    i32 1602223571, label %75
    i32 2005126857, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %86

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2021355303, i32 2005126857
  store i32 %38, i32* %15
  br label %86

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph::QInfo"*, align 8
  %41 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %40, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %41, align 8
  %42 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %40, align 8
  %43 = bitcast %"struct.Graph::QInfo"* %42 to i8*
  %44 = bitcast i8* %43 to %"struct.Graph::QInfo"*
  %45 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %41, align 8
  %46 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %45) #3
  %47 = bitcast %"struct.Graph::QInfo"* %44 to i8*
  %48 = bitcast %"struct.Graph::QInfo"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false)
  %49 = load i32, i32* @x.491
  %50 = load i32, i32* @y.492
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1602223571, i32 2005126857
  store i32 %74, i32* %15
  br label %86

; <label>:75:                                     ; preds = %16
  ret void

; <label>:76:                                     ; preds = %16
  %77 = alloca %"struct.Graph::QInfo"*, align 8
  %78 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %77, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %78, align 8
  %79 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %77, align 8
  %80 = bitcast %"struct.Graph::QInfo"* %79 to i8*
  %81 = bitcast i8* %80 to %"struct.Graph::QInfo"*
  %82 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %78, align 8
  %83 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt7forwardIN5Graph5QInfoEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::QInfo"* dereferenceable(16) %82) #3
  %84 = bitcast %"struct.Graph::QInfo"* %81 to i8*
  %85 = bitcast %"struct.Graph::QInfo"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 16, i32 8, i1 false)
  store i32 2021355303, i32* %15
  br label %86

; <label>:86:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZSt11__addressofIN5Graph5QInfoEEPT_RS2_(%"struct.Graph::QInfo"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::QInfo"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.493
  %6 = load i32, i32* @y.494
  %7 = sub i32 %5, 102556603
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 102556603
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -836957083, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -836957083, label %19
    i32 1188281287, label %39
    i32 1225496514, label %71
    i32 593614477, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1188281287, i32 593614477
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %40, align 8
  %41 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %40, align 8
  %42 = bitcast %"struct.Graph::QInfo"* %41 to i8*
  %43 = bitcast i8* %42 to %"struct.Graph::QInfo"*
  store %"struct.Graph::QInfo"* %43, %"struct.Graph::QInfo"** %2
  %44 = load i32, i32* @x.493
  %45 = load i32, i32* @y.494
  %46 = sub i32 %44, 1805151055
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1805151055
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1225496514, i32 593614477
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %2
  ret %"struct.Graph::QInfo"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.Graph::QInfo"*, align 8
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %74, align 8
  %75 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %74, align 8
  %76 = bitcast %"struct.Graph::QInfo"* %75 to i8*
  %77 = bitcast i8* %76 to %"struct.Graph::QInfo"*
  store i32 1188281287, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEEdeEv(%"class.std::move_iterator.36"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %2, align 8
  %3 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  ret %"struct.Graph::QInfo"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.36"* @_ZNSt13move_iteratorIPN5Graph5QInfoEEppEv(%"class.std::move_iterator.36"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %2, align 8
  %3 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %5, i32 1
  store %"struct.Graph::QInfo"* %6, %"struct.Graph::QInfo"** %4, align 8
  ret %"class.std::move_iterator.36"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN5Graph5QInfoEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.36"* dereferenceable(8), %"class.std::move_iterator.36"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.36"*, align 8
  %4 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %3, align 8
  store %"class.std::move_iterator.36"* %1, %"class.std::move_iterator.36"** %4, align 8
  %5 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %3, align 8
  %6 = call %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEE4baseEv(%"class.std::move_iterator.36"* %5)
  %7 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %4, align 8
  %8 = call %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEE4baseEv(%"class.std::move_iterator.36"* %7)
  %9 = icmp eq %"struct.Graph::QInfo"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNKSt13move_iteratorIPN5Graph5QInfoEE4baseEv(%"class.std::move_iterator.36"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.36"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %2, align 8
  %3 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  ret %"struct.Graph::QInfo"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph5QInfoEEC2ES2_(%"class.std::move_iterator.36"*, %"struct.Graph::QInfo"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.36"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::move_iterator.36"* %0, %"class.std::move_iterator.36"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"class.std::move_iterator.36"*, %"class.std::move_iterator.36"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.36", %"class.std::move_iterator.36"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  store %"struct.Graph::QInfo"* %7, %"struct.Graph::QInfo"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph5QInfoEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.28"*, %"struct.Graph::QInfo"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.28"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::new_allocator.28"* %0, %"class.__gnu_cxx::new_allocator.28"** %3, align 8
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.28"*, %"class.__gnu_cxx::new_allocator.28"** %3, align 8
  %6 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.35"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::QInfo"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.507
  %7 = load i32, i32* @y.508
  %8 = add i32 %6, -1182855560
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1182855560
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -926762463, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %88
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -926762463, label %20
    i32 -264731167, label %40
    i32 1936626060, label %71
    i32 1320321671, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %88

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -264731167, i32 1320321671
  store i32 %39, i32* %16
  br label %88

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %42, align 8
  store i64 %1, i64* %43, align 8
  %45 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %42, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %45, i32 0, i32 0
  %47 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %46, align 8
  %48 = load i64, i64* %43, align 8
  %49 = add i64 0, -4777711515398569350
  %50 = sub i64 %49, %48
  %51 = sub i64 %50, -4777711515398569350
  %52 = sub i64 0, %48
  %53 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %47, i64 %51
  store %"struct.Graph::QInfo"* %53, %"struct.Graph::QInfo"** %44, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %41, %"struct.Graph::QInfo"** dereferenceable(8) %44) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %41, i32 0, i32 0
  %55 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %54, align 8
  store %"struct.Graph::QInfo"* %55, %"struct.Graph::QInfo"** %3
  %56 = load i32, i32* @x.507
  %57 = load i32, i32* @y.508
  %58 = sub i32 %56, 293492925
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 293492925
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 1936626060, i32 1320321671
  store i32 %70, i32* %16
  br label %88

; <label>:71:                                     ; preds = %17
  %72 = load volatile %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %3
  ret %"struct.Graph::QInfo"* %72

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  %76 = alloca i64, align 8
  %77 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %75, align 8
  store i64 %1, i64* %76, align 8
  %78 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %75, align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %78, i32 0, i32 0
  %80 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %79, align 8
  %81 = load i64, i64* %76, align 8
  %82 = sub i64 0, %81
  %83 = add i64 0, %82
  %84 = sub i64 0, %81
  %85 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %80, i64 %83
  store %"struct.Graph::QInfo"* %85, %"struct.Graph::QInfo"** %77, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.35"* %74, %"struct.Graph::QInfo"** dereferenceable(8) %77) #3
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %74, i32 0, i32 0
  %87 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %86, align 8
  store i32 -264731167, i32* %16
  br label %88

; <label>:88:                                     ; preds = %73, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt4lessIN5Graph5QInfoEEEENS0_14_Iter_comp_valIT_EES7_() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"struct.std::less", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt4lessIN5Graph5QInfoEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIRKxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca { %"struct.std::_Rb_tree_node_base"*, i8 }
  %4 = alloca i1
  %5 = alloca %"class.std::_Rb_tree"*
  %6 = alloca i8*
  %7 = alloca %"struct.std::_Rb_tree_iterator"*
  %8 = alloca i8*
  %9 = alloca %"struct.std::_Rb_tree_iterator"*
  %10 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*
  %11 = alloca %"struct.std::pair.39"*
  %12 = alloca i64**
  %13 = alloca %"struct.std::pair.37"*
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.511
  %17 = load i32, i32* @y.512
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  store i1 %23, i1* %15
  %24 = icmp slt i32 %17, 10
  store i1 %24, i1* %14
  %25 = alloca i32
  store i32 747897024, i32* %25
  br label %26

; <label>:26:                                     ; preds = %2, %189
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 747897024, label %29
    i32 1344284432, label %37
    i32 1766261354, label %80
    i32 -1106525609, label %83
    i32 -1010860919, label %104
    i32 2105689516, label %115
    i32 -327495572, label %142
    i32 -830785476, label %160
    i32 -170185445, label %162
    i32 1043733515, label %185
  ]

; <label>:28:                                     ; preds = %26
  br label %189

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %15
  %31 = load volatile i1, i1* %14
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 1344284432, i32 -170185445
  store i32 %36, i32* %25
  br label %189

; <label>:37:                                     ; preds = %26
  %38 = alloca %"struct.std::pair.37", align 8
  store %"struct.std::pair.37"* %38, %"struct.std::pair.37"** %13
  %39 = alloca %"class.std::_Rb_tree"*, align 8
  %40 = alloca i64*, align 8
  store i64** %40, i64*** %12
  %41 = alloca %"struct.std::pair.39", align 8
  store %"struct.std::pair.39"* %41, %"struct.std::pair.39"** %11
  %42 = alloca %"struct.std::_Identity", align 1
  %43 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %43, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %10
  %44 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %44, %"struct.std::_Rb_tree_iterator"** %9
  %45 = alloca i8, align 1
  store i8* %45, i8** %8
  %46 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %46, %"struct.std::_Rb_tree_iterator"** %7
  %47 = alloca i8, align 1
  store i8* %47, i8** %6
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %39, align 8
  %48 = load volatile i64**, i64*** %12
  store i64* %1, i64** %48, align 8
  %49 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %39, align 8
  store %"class.std::_Rb_tree"* %49, %"class.std::_Rb_tree"** %5
  %50 = load volatile i64**, i64*** %12
  %51 = load i64*, i64** %50, align 8
  %52 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %42, i64* dereferenceable(8) %51)
  %53 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %54 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree"* %53, i64* dereferenceable(8) %52)
  %55 = load volatile %"struct.std::pair.39"*, %"struct.std::pair.39"** %11
  %56 = bitcast %"struct.std::pair.39"* %55 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %57 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %56, i32 0, i32 0
  %58 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %54, 0
  store %"struct.std::_Rb_tree_node_base"* %58, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %59 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %56, i32 0, i32 1
  %60 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %54, 1
  store %"struct.std::_Rb_tree_node_base"* %60, %"struct.std::_Rb_tree_node_base"** %59, align 8
  %61 = load volatile %"struct.std::pair.39"*, %"struct.std::pair.39"** %11
  %62 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %61, i32 0, i32 1
  %63 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = icmp ne %"struct.std::_Rb_tree_node_base"* %63, null
  store i1 %64, i1* %4
  %65 = load i32, i32* @x.511
  %66 = load i32, i32* @y.512
  %67 = add i32 %65, 513352637
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 513352637
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 1766261354, i32 -170185445
  store i32 %79, i32* %25
  br label %189

; <label>:80:                                     ; preds = %26
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 -1106525609, i32 -1010860919
  store i32 %82, i32* %25
  br label %189

; <label>:83:                                     ; preds = %26
  %84 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %10
  %85 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %84, %"class.std::_Rb_tree"* dereferenceable(48) %85)
  %86 = load volatile %"struct.std::pair.39"*, %"struct.std::pair.39"** %11
  %87 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %86, i32 0, i32 0
  %88 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %87, align 8
  %89 = load volatile %"struct.std::pair.39"*, %"struct.std::pair.39"** %11
  %90 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %89, i32 0, i32 1
  %91 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %90, align 8
  %92 = load volatile i64**, i64*** %12
  %93 = load i64*, i64** %92, align 8
  %94 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %93) #3
  %95 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %10
  %96 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %97 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"* %96, %"struct.std::_Rb_tree_node_base"* %88, %"struct.std::_Rb_tree_node_base"* %91, i64* dereferenceable(8) %94, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8) %95)
  %98 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %9
  %99 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %98, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %97, %"struct.std::_Rb_tree_node_base"** %99, align 8
  %100 = load volatile i8*, i8** %8
  store i8 1, i8* %100, align 1
  %101 = load volatile %"struct.std::pair.37"*, %"struct.std::pair.37"** %13
  %102 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %9
  %103 = load volatile i8*, i8** %8
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.37"* %101, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %102, i8* dereferenceable(1) %103)
  store i32 2105689516, i32* %25
  br label %189

; <label>:104:                                    ; preds = %26
  %105 = load volatile %"struct.std::pair.39"*, %"struct.std::pair.39"** %11
  %106 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %105, i32 0, i32 0
  %107 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %106, align 8
  %108 = bitcast %"struct.std::_Rb_tree_node_base"* %107 to %"struct.std::_Rb_tree_node"*
  %109 = bitcast %"struct.std::_Rb_tree_node"* %108 to %"struct.std::_Rb_tree_node_base"*
  %110 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %7
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %110, %"struct.std::_Rb_tree_node_base"* %109) #3
  %111 = load volatile i8*, i8** %6
  store i8 0, i8* %111, align 1
  %112 = load volatile %"struct.std::pair.37"*, %"struct.std::pair.37"** %13
  %113 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %7
  %114 = load volatile i8*, i8** %6
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.37"* %112, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %113, i8* dereferenceable(1) %114)
  store i32 2105689516, i32* %25
  br label %189

; <label>:115:                                    ; preds = %26
  %116 = load i32, i32* @x.511
  %117 = load i32, i32* @y.512
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 false, true
  %128 = and i1 %125, false
  %129 = and i1 %123, %127
  %130 = and i1 %126, false
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 false, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  %141 = select i1 %139, i32 -327495572, i32 1043733515
  store i32 %141, i32* %25
  br label %189

; <label>:142:                                    ; preds = %26
  %143 = load volatile %"struct.std::pair.37"*, %"struct.std::pair.37"** %13
  %144 = bitcast %"struct.std::pair.37"* %143 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %145 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %144, align 8
  store { %"struct.std::_Rb_tree_node_base"*, i8 } %145, { %"struct.std::_Rb_tree_node_base"*, i8 }* %3
  %146 = load i32, i32* @x.511
  %147 = load i32, i32* @y.512
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 -830785476, i32 1043733515
  store i32 %159, i32* %25
  br label %189

; <label>:160:                                    ; preds = %26
  %161 = load volatile { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %3
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %161

; <label>:162:                                    ; preds = %26
  %163 = alloca %"struct.std::pair.37", align 8
  %164 = alloca %"class.std::_Rb_tree"*, align 8
  %165 = alloca i64*, align 8
  %166 = alloca %"struct.std::pair.39", align 8
  %167 = alloca %"struct.std::_Identity", align 1
  %168 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", align 8
  %169 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %170 = alloca i8, align 1
  %171 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %172 = alloca i8, align 1
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %164, align 8
  store i64* %1, i64** %165, align 8
  %173 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %164, align 8
  %174 = load i64*, i64** %165, align 8
  %175 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %167, i64* dereferenceable(8) %174)
  %176 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree"* %173, i64* dereferenceable(8) %175)
  %177 = bitcast %"struct.std::pair.39"* %166 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %178 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %177, i32 0, i32 0
  %179 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %176, 0
  store %"struct.std::_Rb_tree_node_base"* %179, %"struct.std::_Rb_tree_node_base"** %178, align 8
  %180 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %177, i32 0, i32 1
  %181 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %176, 1
  store %"struct.std::_Rb_tree_node_base"* %181, %"struct.std::_Rb_tree_node_base"** %180, align 8
  %182 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %166, i32 0, i32 1
  %183 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %182, align 8
  %184 = icmp ne %"struct.std::_Rb_tree_node_base"* %183, null
  store i32 1344284432, i32* %25
  br label %189

; <label>:185:                                    ; preds = %26
  %186 = load volatile %"struct.std::pair.37"*, %"struct.std::pair.37"** %13
  %187 = bitcast %"struct.std::pair.37"* %186 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %188 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %187, align 8
  store i32 -327495572, i32* %25
  br label %189

; <label>:189:                                    ; preds = %185, %162, %142, %115, %104, %83, %80, %37, %29, %28
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.513
  %7 = load i32, i32* @y.514
  %8 = add i32 %6, 22407678
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 22407678
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 714301808, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 714301808, label %20
    i32 790668512, label %28
    i32 1280422492, label %56
    i32 1568102796, label %57
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 790668512, i32 1568102796
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %31 = alloca i8*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %29, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %30, align 8
  store i8* %2, i8** %31, align 8
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %32, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %30, align 8
  %35 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %34) #3
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %33, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %35) #3
  %36 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %32, i32 0, i32 1
  %37 = load i8*, i8** %31, align 8
  %38 = call dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1) %37) #3
  %39 = load i8, i8* %38, align 1
  %40 = trunc i8 %39 to i1
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %36, align 8
  %42 = load i32, i32* @x.513
  %43 = load i32, i32* @y.514
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1280422492, i32 1568102796
  store i32 %55, i32* %16
  br label %71

; <label>:56:                                     ; preds = %17
  ret void

; <label>:57:                                     ; preds = %17
  %58 = alloca %"struct.std::pair"*, align 8
  %59 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %60 = alloca i8*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %58, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %59, align 8
  store i8* %2, i8** %60, align 8
  %61 = load %"struct.std::pair"*, %"struct.std::pair"** %58, align 8
  %62 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %61, i32 0, i32 0
  %63 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %59, align 8
  %64 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %63) #3
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %62, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %64) #3
  %65 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %61, i32 0, i32 1
  %66 = load i8*, i8** %60, align 8
  %67 = call dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1) %66) #3
  %68 = load i8, i8* %67, align 1
  %69 = trunc i8 %68 to i1
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %65, align 8
  store i32 790668512, i32* %16
  br label %71

; <label>:71:                                     ; preds = %57, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node"*
  %7 = alloca %"struct.std::_Rb_tree_node"*
  %8 = alloca i1
  %9 = alloca %"class.std::_Rb_tree"*
  %10 = alloca %"struct.std::pair.39", align 8
  %11 = alloca %"class.std::_Rb_tree"*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %14 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %15 = alloca i8, align 1
  %16 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %17 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %18 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %11, align 8
  store i64* %1, i64** %12, align 8
  %19 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11, align 8
  store %"class.std::_Rb_tree"* %19, %"class.std::_Rb_tree"** %9
  %20 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %21 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %20) #3
  store %"struct.std::_Rb_tree_node"* %21, %"struct.std::_Rb_tree_node"** %13, align 8
  %22 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %23 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %22) #3
  store %"struct.std::_Rb_tree_node"* %23, %"struct.std::_Rb_tree_node"** %14, align 8
  store i8 1, i8* %15, align 1
  %24 = alloca i32
  store i32 -1398737391, i32* %24
  %25 = alloca %"struct.std::_Rb_tree_node"*
  br label %26

; <label>:26:                                     ; preds = %2, %420
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -1398737391, label %29
    i32 1596370834, label %33
    i32 375785300, label %61
    i32 -101099270, label %88
    i32 -1693786402, label %91
    i32 2071657055, label %107
    i32 220992735, label %125
    i32 -1311585091, label %127
    i32 -659381933, label %142
    i32 1921704999, label %173
    i32 -536364059, label %175
    i32 -398263387, label %204
    i32 -985846520, label %221
    i32 590837247, label %222
    i32 1601148245, label %250
    i32 -1035877518, label %281
    i32 179020512, label %284
    i32 -301692568, label %311
    i32 -837313436, label %331
    i32 763736605, label %334
    i32 1194753538, label %335
    i32 -1379157359, label %351
    i32 -543013246, label %368
    i32 37345371, label %369
    i32 -1215552869, label %370
    i32 87108394, label %380
    i32 -1145485375, label %381
    i32 -1553347593, label %383
    i32 -750834958, label %386
    i32 1274782363, label %398
    i32 107310406, label %402
    i32 728251555, label %406
    i32 833762288, label %408
    i32 -1787324971, label %413
    i32 -818428476, label %418
  ]

; <label>:28:                                     ; preds = %26
  br label %420

; <label>:29:                                     ; preds = %26
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %31 = icmp ne %"struct.std::_Rb_tree_node"* %30, null
  %32 = select i1 %31, i32 1596370834, i32 590837247
  store i32 %32, i32* %24
  br label %420

; <label>:33:                                     ; preds = %26
  %34 = load i32, i32* @x.515
  %35 = load i32, i32* @y.516
  %36 = add i32 %34, 261376844
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 261376844
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 375785300, i32 -750834958
  store i32 %60, i32* %24
  br label %420

; <label>:61:                                     ; preds = %26
  %62 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  store %"struct.std::_Rb_tree_node"* %62, %"struct.std::_Rb_tree_node"** %14, align 8
  %63 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %64 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %64, i32 0, i32 0
  %66 = load i64*, i64** %12, align 8
  %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %68 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %67)
  %69 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %65, i64* dereferenceable(8) %66, i64* dereferenceable(8) %68)
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %15, align 1
  %71 = load i8, i8* %15, align 1
  %72 = trunc i8 %71 to i1
  store i1 %72, i1* %8
  %73 = load i32, i32* @x.515
  %74 = load i32, i32* @y.516
  %75 = add i32 %73, 1102838625
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 1102838625
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 -101099270, i32 -750834958
  store i32 %87, i32* %24
  br label %420

; <label>:88:                                     ; preds = %26
  %89 = load volatile i1, i1* %8
  %90 = select i1 %89, i32 -1693786402, i32 -1311585091
  store i32 %90, i32* %24
  br label %420

; <label>:91:                                     ; preds = %26
  %92 = load i32, i32* @x.515
  %93 = load i32, i32* @y.516
  %94 = sub i32 %92, -718190398
  %95 = sub i32 %94, 1
  %96 = add i32 %95, -718190398
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 2071657055, i32 1274782363
  store i32 %106, i32* %24
  br label %420

; <label>:107:                                    ; preds = %26
  %108 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %109 = bitcast %"struct.std::_Rb_tree_node"* %108 to %"struct.std::_Rb_tree_node_base"*
  %110 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %109) #3
  store %"struct.std::_Rb_tree_node"* %110, %"struct.std::_Rb_tree_node"** %7
  %111 = load i32, i32* @x.515
  %112 = load i32, i32* @y.516
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 220992735, i32 1274782363
  store i32 %124, i32* %24
  br label %420

; <label>:125:                                    ; preds = %26
  store i32 -536364059, i32* %24
  %126 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7
  store %"struct.std::_Rb_tree_node"* %126, %"struct.std::_Rb_tree_node"** %25
  br label %420

; <label>:127:                                    ; preds = %26
  %128 = load i32, i32* @x.515
  %129 = load i32, i32* @y.516
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  %141 = select i1 %139, i32 -659381933, i32 107310406
  store i32 %141, i32* %24
  br label %420

; <label>:142:                                    ; preds = %26
  %143 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %144 = bitcast %"struct.std::_Rb_tree_node"* %143 to %"struct.std::_Rb_tree_node_base"*
  %145 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %144) #3
  store %"struct.std::_Rb_tree_node"* %145, %"struct.std::_Rb_tree_node"** %6
  %146 = load i32, i32* @x.515
  %147 = load i32, i32* @y.516
  %148 = add i32 %146, 1170691817
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, 1170691817
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 false, true
  %159 = and i1 %156, false
  %160 = and i1 %154, %158
  %161 = and i1 %157, false
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 false, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  %172 = select i1 %170, i32 1921704999, i32 107310406
  store i32 %172, i32* %24
  br label %420

; <label>:173:                                    ; preds = %26
  store i32 -536364059, i32* %24
  %174 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6
  store %"struct.std::_Rb_tree_node"* %174, %"struct.std::_Rb_tree_node"** %25
  br label %420

; <label>:175:                                    ; preds = %26
  %176 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %25
  store %"struct.std::_Rb_tree_node"* %176, %"struct.std::_Rb_tree_node"** %3
  %177 = load i32, i32* @x.515
  %178 = load i32, i32* @y.516
  %179 = add i32 %177, 639423268
  %180 = sub i32 %179, 1
  %181 = sub i32 %180, 639423268
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 true, true
  %190 = and i1 %187, true
  %191 = and i1 %185, %189
  %192 = and i1 %188, true
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 true, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  %203 = select i1 %201, i32 -398263387, i32 728251555
  store i32 %203, i32* %24
  br label %420

; <label>:204:                                    ; preds = %26
  %205 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %205, %"struct.std::_Rb_tree_node"** %13, align 8
  %206 = load i32, i32* @x.515
  %207 = load i32, i32* @y.516
  %208 = add i32 %206, -1811822682
  %209 = sub i32 %208, 1
  %210 = sub i32 %209, -1811822682
  %211 = sub i32 %206, 1
  %212 = mul i32 %206, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %207, 10
  %216 = and i1 %214, %215
  %217 = xor i1 %214, %215
  %218 = or i1 %216, %217
  %219 = or i1 %214, %215
  %220 = select i1 %218, i32 -985846520, i32 728251555
  store i32 %220, i32* %24
  br label %420

; <label>:221:                                    ; preds = %26
  store i32 -1398737391, i32* %24
  br label %420

; <label>:222:                                    ; preds = %26
  %223 = load i32, i32* @x.515
  %224 = load i32, i32* @y.516
  %225 = add i32 %223, -1672875654
  %226 = sub i32 %225, 1
  %227 = sub i32 %226, -1672875654
  %228 = sub i32 %223, 1
  %229 = mul i32 %223, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %224, 10
  %233 = xor i1 %231, true
  %234 = xor i1 %232, true
  %235 = xor i1 false, true
  %236 = and i1 %233, false
  %237 = and i1 %231, %235
  %238 = and i1 %234, false
  %239 = and i1 %232, %235
  %240 = or i1 %236, %237
  %241 = or i1 %238, %239
  %242 = xor i1 %240, %241
  %243 = or i1 %233, %234
  %244 = xor i1 %243, true
  %245 = or i1 false, %235
  %246 = and i1 %244, %245
  %247 = or i1 %242, %246
  %248 = or i1 %231, %232
  %249 = select i1 %247, i32 1601148245, i32 833762288
  store i32 %249, i32* %24
  br label %420

; <label>:250:                                    ; preds = %26
  %251 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %252 = bitcast %"struct.std::_Rb_tree_node"* %251 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %16, %"struct.std::_Rb_tree_node_base"* %252) #3
  %253 = load i8, i8* %15, align 1
  %254 = trunc i8 %253 to i1
  store i1 %254, i1* %5
  %255 = load i32, i32* @x.515
  %256 = load i32, i32* @y.516
  %257 = sub i32 0, 1
  %258 = add i32 %255, %257
  %259 = sub i32 %255, 1
  %260 = mul i32 %255, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %256, 10
  %264 = xor i1 %262, true
  %265 = xor i1 %263, true
  %266 = xor i1 true, true
  %267 = and i1 %264, true
  %268 = and i1 %262, %266
  %269 = and i1 %265, true
  %270 = and i1 %263, %266
  %271 = or i1 %267, %268
  %272 = or i1 %269, %270
  %273 = xor i1 %271, %272
  %274 = or i1 %264, %265
  %275 = xor i1 %274, true
  %276 = or i1 true, %266
  %277 = and i1 %275, %276
  %278 = or i1 %273, %277
  %279 = or i1 %262, %263
  %280 = select i1 %278, i32 -1035877518, i32 833762288
  store i32 %280, i32* %24
  br label %420

; <label>:281:                                    ; preds = %26
  %282 = load volatile i1, i1* %5
  %283 = select i1 %282, i32 179020512, i32 -1215552869
  store i32 %283, i32* %24
  br label %420

; <label>:284:                                    ; preds = %26
  %285 = load i32, i32* @x.515
  %286 = load i32, i32* @y.516
  %287 = sub i32 0, 1
  %288 = add i32 %285, %287
  %289 = sub i32 %285, 1
  %290 = mul i32 %285, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %286, 10
  %294 = xor i1 %292, true
  %295 = xor i1 %293, true
  %296 = xor i1 false, true
  %297 = and i1 %294, false
  %298 = and i1 %292, %296
  %299 = and i1 %295, false
  %300 = and i1 %293, %296
  %301 = or i1 %297, %298
  %302 = or i1 %299, %300
  %303 = xor i1 %301, %302
  %304 = or i1 %294, %295
  %305 = xor i1 %304, true
  %306 = or i1 false, %296
  %307 = and i1 %305, %306
  %308 = or i1 %303, %307
  %309 = or i1 %292, %293
  %310 = select i1 %308, i32 -301692568, i32 -1787324971
  store i32 %310, i32* %24
  br label %420

; <label>:311:                                    ; preds = %26
  %312 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %313 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"* %312) #3
  %314 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %17, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %313, %"struct.std::_Rb_tree_node_base"** %314, align 8
  %315 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %16, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %17) #3
  store i1 %315, i1* %4
  %316 = load i32, i32* @x.515
  %317 = load i32, i32* @y.516
  %318 = sub i32 %316, 1039821307
  %319 = sub i32 %318, 1
  %320 = add i32 %319, 1039821307
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  %330 = select i1 %328, i32 -837313436, i32 -1787324971
  store i32 %330, i32* %24
  br label %420

; <label>:331:                                    ; preds = %26
  %332 = load volatile i1, i1* %4
  %333 = select i1 %332, i32 763736605, i32 1194753538
  store i32 %333, i32* %24
  br label %420

; <label>:334:                                    ; preds = %26
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.39"* %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %13, %"struct.std::_Rb_tree_node"** dereferenceable(8) %14)
  store i32 -1553347593, i32* %24
  br label %420

; <label>:335:                                    ; preds = %26
  %336 = load i32, i32* @x.515
  %337 = load i32, i32* @y.516
  %338 = sub i32 %336, 1774134
  %339 = sub i32 %338, 1
  %340 = add i32 %339, 1774134
  %341 = sub i32 %336, 1
  %342 = mul i32 %336, %340
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %337, 10
  %346 = and i1 %344, %345
  %347 = xor i1 %344, %345
  %348 = or i1 %346, %347
  %349 = or i1 %344, %345
  %350 = select i1 %348, i32 -1379157359, i32 -818428476
  store i32 %350, i32* %24
  br label %420

; <label>:351:                                    ; preds = %26
  %352 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"* %16) #3
  %353 = load i32, i32* @x.515
  %354 = load i32, i32* @y.516
  %355 = add i32 %353, -1342547523
  %356 = sub i32 %355, 1
  %357 = sub i32 %356, -1342547523
  %358 = sub i32 %353, 1
  %359 = mul i32 %353, %357
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %354, 10
  %363 = and i1 %361, %362
  %364 = xor i1 %361, %362
  %365 = or i1 %363, %364
  %366 = or i1 %361, %362
  %367 = select i1 %365, i32 -543013246, i32 -818428476
  store i32 %367, i32* %24
  br label %420

; <label>:368:                                    ; preds = %26
  store i32 37345371, i32* %24
  br label %420

; <label>:369:                                    ; preds = %26
  store i32 -1215552869, i32* %24
  br label %420

; <label>:370:                                    ; preds = %26
  %371 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %372 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %371, i32 0, i32 0
  %373 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %372, i32 0, i32 0
  %374 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %375 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %374, align 8
  %376 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %375)
  %377 = load i64*, i64** %12, align 8
  %378 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %373, i64* dereferenceable(8) %376, i64* dereferenceable(8) %377)
  %379 = select i1 %378, i32 87108394, i32 -1145485375
  store i32 %379, i32* %24
  br label %420

; <label>:380:                                    ; preds = %26
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.39"* %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %13, %"struct.std::_Rb_tree_node"** dereferenceable(8) %14)
  store i32 -1553347593, i32* %24
  br label %420

; <label>:381:                                    ; preds = %26
  %382 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %18, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.39"* %10, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %382, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18)
  store i32 -1553347593, i32* %24
  br label %420

; <label>:383:                                    ; preds = %26
  %384 = bitcast %"struct.std::pair.39"* %10 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %385 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %384, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %385

; <label>:386:                                    ; preds = %26
  %387 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  store %"struct.std::_Rb_tree_node"* %387, %"struct.std::_Rb_tree_node"** %14, align 8
  %388 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %389 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %388, i32 0, i32 0
  %390 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %389, i32 0, i32 0
  %391 = load i64*, i64** %12, align 8
  %392 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %393 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %392)
  %394 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %390, i64* dereferenceable(8) %391, i64* dereferenceable(8) %393)
  %395 = zext i1 %394 to i8
  store i8 %395, i8* %15, align 1
  %396 = load i8, i8* %15, align 1
  %397 = trunc i8 %396 to i1
  store i32 375785300, i32* %24
  br label %420

; <label>:398:                                    ; preds = %26
  %399 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %400 = bitcast %"struct.std::_Rb_tree_node"* %399 to %"struct.std::_Rb_tree_node_base"*
  %401 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %400) #3
  store i32 2071657055, i32* %24
  br label %420

; <label>:402:                                    ; preds = %26
  %403 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %404 = bitcast %"struct.std::_Rb_tree_node"* %403 to %"struct.std::_Rb_tree_node_base"*
  %405 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %404) #3
  store i32 -659381933, i32* %24
  br label %420

; <label>:406:                                    ; preds = %26
  %407 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %407, %"struct.std::_Rb_tree_node"** %13, align 8
  store i32 -398263387, i32* %24
  br label %420

; <label>:408:                                    ; preds = %26
  %409 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %14, align 8
  %410 = bitcast %"struct.std::_Rb_tree_node"* %409 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %16, %"struct.std::_Rb_tree_node_base"* %410) #3
  %411 = load i8, i8* %15, align 1
  %412 = trunc i8 %411 to i1
  store i32 1601148245, i32* %24
  br label %420

; <label>:413:                                    ; preds = %26
  %414 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %415 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"* %414) #3
  %416 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %17, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %415, %"struct.std::_Rb_tree_node_base"** %416, align 8
  %417 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %16, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %17) #3
  store i32 -301692568, i32* %24
  br label %420

; <label>:418:                                    ; preds = %26
  %419 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"* %16) #3
  store i32 -1379157359, i32* %24
  br label %420

; <label>:420:                                    ; preds = %418, %413, %408, %406, %402, %398, %386, %381, %380, %370, %369, %368, %351, %335, %334, %331, %311, %284, %281, %250, %222, %221, %204, %175, %173, %142, %127, %125, %107, %91, %88, %61, %33, %29, %28
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"*, i64* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Identity"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"class.std::_Rb_tree"* dereferenceable(48)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.519
  %6 = load i32, i32* @y.520
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 473084636, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 473084636, label %18
    i32 1213657925, label %26
    i32 -1213227182, label %58
    i32 434439019, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1213657925, i32 434439019
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %28 = alloca %"class.std::_Rb_tree"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %27, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %28, align 8
  %29 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %29, i32 0, i32 0
  %31 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %28, align 8
  store %"class.std::_Rb_tree"* %31, %"class.std::_Rb_tree"** %30, align 8
  %32 = load i32, i32* @x.519
  %33 = load i32, i32* @y.520
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1213227182, i32 434439019
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %61 = alloca %"class.std::_Rb_tree"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %60, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %61, align 8
  %62 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %60, align 8
  %63 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %62, i32 0, i32 0
  %64 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %61, align 8
  store %"class.std::_Rb_tree"* %64, %"class.std::_Rb_tree"** %63, align 8
  store i32 1213657925, i32* %14
  br label %65

; <label>:65:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IRKxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8), %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"struct.std::_Rb_tree_node_base"*
  %9 = alloca %"class.std::_Rb_tree"*
  %10 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %11 = alloca %"class.std::_Rb_tree"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %13 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %16 = alloca i8, align 1
  %17 = alloca %"struct.std::_Identity", align 1
  %18 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %12, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store i64* %3, i64** %14, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %15, align 8
  %19 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11, align 8
  store %"class.std::_Rb_tree"* %19, %"class.std::_Rb_tree"** %9
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %8
  %21 = alloca i32
  store i32 -504336428, i32* %21
  %22 = alloca i1
  br label %23

; <label>:23:                                     ; preds = %5, %177
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 -504336428, label %26
    i32 1046987528, label %30
    i32 1472433496, label %46
    i32 1944055531, label %66
    i32 716842700, label %69
    i32 -2079315370, label %97
    i32 -1582390904, label %133
    i32 247021561, label %135
    i32 1275106144, label %162
    i32 1999975358, label %168
  ]

; <label>:25:                                     ; preds = %23
  br label %177

; <label>:26:                                     ; preds = %23
  %27 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8
  %28 = icmp ne %"struct.std::_Rb_tree_node_base"* %27, null
  %29 = select i1 %28, i32 247021561, i32 1046987528
  store i32 %29, i32* %21
  store i1 true, i1* %22
  br label %177

; <label>:30:                                     ; preds = %23
  %31 = load i32, i32* @x.521
  %32 = load i32, i32* @y.522
  %33 = sub i32 %31, -1692411758
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1692411758
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1472433496, i32 1275106144
  store i32 %45, i32* %21
  br label %177

; <label>:46:                                     ; preds = %23
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %48 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %49 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %48) #3
  %50 = bitcast %"struct.std::_Rb_tree_node"* %49 to %"struct.std::_Rb_tree_node_base"*
  %51 = icmp eq %"struct.std::_Rb_tree_node_base"* %47, %50
  store i1 %51, i1* %7
  %52 = load i32, i32* @x.521
  %53 = load i32, i32* @y.522
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1944055531, i32 1275106144
  store i32 %65, i32* %21
  br label %177

; <label>:66:                                     ; preds = %23
  %67 = load volatile i1, i1* %7
  %68 = select i1 %67, i32 247021561, i32 716842700
  store i32 %68, i32* %21
  store i1 true, i1* %22
  br label %177

; <label>:69:                                     ; preds = %23
  %70 = load i32, i32* @x.521
  %71 = load i32, i32* @y.522
  %72 = add i32 %70, 1816221714
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 1816221714
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 -2079315370, i32 1999975358
  store i32 %96, i32* %21
  br label %177

; <label>:97:                                     ; preds = %23
  %98 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %99 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %99, i32 0, i32 0
  %101 = load i64*, i64** %14, align 8
  %102 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %17, i64* dereferenceable(8) %101)
  %103 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %104 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %103)
  %105 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %100, i64* dereferenceable(8) %102, i64* dereferenceable(8) %104)
  store i1 %105, i1* %6
  %106 = load i32, i32* @x.521
  %107 = load i32, i32* @y.522
  %108 = sub i32 %106, -406897600
  %109 = sub i32 %108, 1
  %110 = add i32 %109, -406897600
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 -1582390904, i32 1999975358
  store i32 %132, i32* %21
  br label %177

; <label>:133:                                    ; preds = %23
  store i32 247021561, i32* %21
  %134 = load volatile i1, i1* %6
  store i1 %134, i1* %22
  br label %177

; <label>:135:                                    ; preds = %23
  %136 = load i1, i1* %22
  %137 = zext i1 %136 to i8
  store i8 %137, i8* %16, align 1
  %138 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %15, align 8
  %139 = load i64*, i64** %14, align 8
  %140 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %139) #3
  %141 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %138, i64* dereferenceable(8) %140)
  store %"struct.std::_Rb_tree_node"* %141, %"struct.std::_Rb_tree_node"** %18, align 8
  %142 = load i8, i8* %16, align 1
  %143 = trunc i8 %142 to i1
  %144 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %18, align 8
  %145 = bitcast %"struct.std::_Rb_tree_node"* %144 to %"struct.std::_Rb_tree_node_base"*
  %146 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %147 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %148 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %148, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %143, %"struct.std::_Rb_tree_node_base"* %145, %"struct.std::_Rb_tree_node_base"* %146, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %149) #3
  %150 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %151 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %150, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %151, i32 0, i32 2
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %153, 3610337429723071081
  %155 = add i64 %154, 1
  %156 = add i64 %155, 3610337429723071081
  %157 = add i64 %153, 1
  store i64 %156, i64* %152, align 8
  %158 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %18, align 8
  %159 = bitcast %"struct.std::_Rb_tree_node"* %158 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %10, %"struct.std::_Rb_tree_node_base"* %159) #3
  %160 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %10, i32 0, i32 0
  %161 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %160, align 8
  ret %"struct.std::_Rb_tree_node_base"* %161

; <label>:162:                                    ; preds = %23
  %163 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %164 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %165 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %164) #3
  %166 = bitcast %"struct.std::_Rb_tree_node"* %165 to %"struct.std::_Rb_tree_node_base"*
  %167 = icmp eq %"struct.std::_Rb_tree_node_base"* %163, %166
  store i32 1472433496, i32* %21
  br label %177

; <label>:168:                                    ; preds = %23
  %169 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %170 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %169, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %170, i32 0, i32 0
  %172 = load i64*, i64** %14, align 8
  %173 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %17, i64* dereferenceable(8) %172)
  %174 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %175 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %174)
  %176 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %171, i64* dereferenceable(8) %173, i64* dereferenceable(8) %175)
  store i32 -2079315370, i32* %21
  br label %177

; <label>:177:                                    ; preds = %168, %162, %133, %97, %69, %66, %46, %30, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.37"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair.37"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair.37"* %0, %"struct.std::pair.37"** %4, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair.37"*, %"struct.std::pair.37"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9) #3
  %11 = bitcast %"struct.std::_Rb_tree_iterator"* %8 to i8*
  %12 = bitcast %"struct.std::_Rb_tree_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"struct.std::pair.37", %"struct.std::pair.37"* %7, i32 0, i32 1
  %14 = load i8*, i8** %6, align 8
  %15 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %14) #3
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.527
  %6 = load i32, i32* @y.528
  %7 = add i32 %5, -1509113953
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1509113953
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2106925102, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2106925102, label %19
    i32 -938774862, label %39
    i32 448286473, label %72
    i32 329748490, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -938774862, i32 329748490
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %41 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %40, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %42 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %41, align 8
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = load i32, i32* @x.527
  %46 = load i32, i32* @y.528
  %47 = sub i32 %45, 1853444567
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1853444567
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 448286473, i32 329748490
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %75 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %74, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %76 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %74, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %76, i32 0, i32 0
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store i32 -938774862, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.531
  %6 = load i32, i32* @y.532
  %7 = add i32 %5, -2098783531
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2098783531
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2031680614, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2031680614, label %19
    i32 1636513907, label %39
    i32 729974308, label %60
    i32 1377887496, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1636513907, i32 1377887496
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %40, align 8
  %41 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = bitcast %"struct.std::_Rb_tree_node_base"* %43 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %44, %"struct.std::_Rb_tree_node"** %2
  %45 = load i32, i32* @x.531
  %46 = load i32, i32* @y.532
  %47 = sub i32 %45, -1469999233
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1469999233
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 729974308, i32 1377887496
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %63, align 8
  %64 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %65, i32 0, i32 1
  %67 = bitcast %"struct.std::_Rb_tree_node_base"* %66 to %"struct.std::_Rb_tree_node"*
  store i32 1636513907, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"*, i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.533
  %8 = load i32, i32* @y.534
  %9 = add i32 %7, -1930822451
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1930822451
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 367452837, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %77
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 367452837, label %21
    i32 -61093666, label %41
    i32 1450995248, label %65
    i32 553493321, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %77

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -61093666, i32 553493321
  store i32 %40, i32* %17
  br label %77

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::less.33"*, align 8
  %43 = alloca i64*, align 8
  %44 = alloca i64*, align 8
  store %"struct.std::less.33"* %0, %"struct.std::less.33"** %42, align 8
  store i64* %1, i64** %43, align 8
  store i64* %2, i64** %44, align 8
  %45 = load %"struct.std::less.33"*, %"struct.std::less.33"** %42, align 8
  %46 = load i64*, i64** %43, align 8
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %47, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.533
  %52 = load i32, i32* @y.534
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1450995248, i32 553493321
  store i32 %64, i32* %17
  br label %77

; <label>:65:                                     ; preds = %18
  %66 = load volatile i1, i1* %4
  ret i1 %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %"struct.std::less.33"*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  store %"struct.std::less.33"* %0, %"struct.std::less.33"** %68, align 8
  store i64* %1, i64** %69, align 8
  store i64* %2, i64** %70, align 8
  %71 = load %"struct.std::less.33"*, %"struct.std::less.33"** %68, align 8
  %72 = load i64*, i64** %69, align 8
  %73 = load i64, i64* %72, align 8
  %74 = load i64*, i64** %70, align 8
  %75 = load i64, i64* %74, align 8
  %76 = icmp slt i64 %73, %75
  store i32 -61093666, i32* %17
  br label %77

; <label>:77:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.535
  %6 = load i32, i32* @y.536
  %7 = sub i32 %5, -472668067
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -472668067
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1439945007, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1439945007, label %19
    i32 1977727011, label %39
    i32 -2086419371, label %71
    i32 -1384206766, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1977727011, i32 -1384206766
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %41 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %40, align 8
  %42 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %40, align 8
  %43 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %42)
  %44 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %41, i64* dereferenceable(8) %43)
  store i64* %44, i64** %2
  %45 = load i32, i32* @x.535
  %46 = load i32, i32* @y.536
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -2086419371, i32 -1384206766
  store i32 %70, i32* %15
  br label %79

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64*, i64** %2
  ret i64* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %75 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %74, align 8
  %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %74, align 8
  %77 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %76)
  %78 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %75, i64* dereferenceable(8) %77)
  store i32 1977727011, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.539
  %6 = load i32, i32* @y.540
  %7 = add i32 %5, 362957262
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 362957262
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -563001758, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -563001758, label %19
    i32 -80513673, label %27
    i32 -302570590, label %60
    i32 -40758008, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -80513673, i32 -40758008
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %29, i32 0, i32 3
  %31 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %32 = bitcast %"struct.std::_Rb_tree_node_base"* %31 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %32, %"struct.std::_Rb_tree_node"** %2
  %33 = load i32, i32* @x.539
  %34 = load i32, i32* @y.540
  %35 = sub i32 %33, 540503798
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 540503798
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -302570590, i32 -40758008
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %64, i32 0, i32 3
  %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %65, align 8
  %67 = bitcast %"struct.std::_Rb_tree_node_base"* %66 to %"struct.std::_Rb_tree_node"*
  store i32 -80513673, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.543
  %6 = load i32, i32* @y.544
  %7 = sub i32 %5, 1578799457
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1578799457
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1764049877, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1764049877, label %19
    i32 -1775995920, label %27
    i32 161398751, label %52
    i32 1501691343, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1775995920, i32 1501691343
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %29 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %29, align 8
  %30 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %29, align 8
  %31 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %31, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %32, i32 0, i32 2
  %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %33, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %28, %"struct.std::_Rb_tree_node_base"* %34) #3
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %28, i32 0, i32 0
  %36 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %35, align 8
  store %"struct.std::_Rb_tree_node_base"* %36, %"struct.std::_Rb_tree_node_base"** %2
  %37 = load i32, i32* @x.543
  %38 = load i32, i32* @y.544
  %39 = add i32 %37, 499985167
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 499985167
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 161398751, i32 1501691343
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %56 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %56, align 8
  %57 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %56, align 8
  %58 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %58, i32 0, i32 1
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %59, i32 0, i32 2
  %61 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %60, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %55, %"struct.std::_Rb_tree_node_base"* %61) #3
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %55, i32 0, i32 0
  %63 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %62, align 8
  store i32 -1775995920, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.39"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.545
  %7 = load i32, i32* @y.546
  %8 = add i32 %6, -765302903
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -765302903
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -807538591, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %98
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -807538591, label %20
    i32 798843788, label %40
    i32 -624891217, label %82
    i32 1264754297, label %83
  ]

; <label>:19:                                     ; preds = %17
  br label %98

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 798843788, i32 1264754297
  store i32 %39, i32* %16
  br label %98

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.39"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %43 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.39"* %0, %"struct.std::pair.39"** %41, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %42, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %43, align 8
  %44 = load %"struct.std::pair.39"*, %"struct.std::pair.39"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %44, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %46) #3
  %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node"* %48 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %50 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %44, i32 0, i32 1
  %51 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %43, align 8
  %52 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %51) #3
  %53 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %52, align 8
  %54 = bitcast %"struct.std::_Rb_tree_node"* %53 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %54, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %55 = load i32, i32* @x.545
  %56 = load i32, i32* @y.546
  %57 = add i32 %55, -538922475
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -538922475
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -624891217, i32 1264754297
  store i32 %81, i32* %16
  br label %98

; <label>:82:                                     ; preds = %17
  ret void

; <label>:83:                                     ; preds = %17
  %84 = alloca %"struct.std::pair.39"*, align 8
  %85 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %86 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.39"* %0, %"struct.std::pair.39"** %84, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %85, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %86, align 8
  %87 = load %"struct.std::pair.39"*, %"struct.std::pair.39"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %87, i32 0, i32 0
  %89 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %85, align 8
  %90 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %89) #3
  %91 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %90, align 8
  %92 = bitcast %"struct.std::_Rb_tree_node"* %91 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %92, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %93 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %87, i32 0, i32 1
  %94 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %86, align 8
  %95 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %94) #3
  %96 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %95, align 8
  %97 = bitcast %"struct.std::_Rb_tree_node"* %96 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %97, %"struct.std::_Rb_tree_node_base"** %93, align 8
  store i32 798843788, i32* %16
  br label %98

; <label>:98:                                     ; preds = %83, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.547
  %6 = load i32, i32* @y.548
  %7 = sub i32 %5, 1780019952
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1780019952
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 344279979, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 344279979, label %19
    i32 1756044431, label %27
    i32 813727979, label %63
    i32 -585689132, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1756044431, i32 -585689132
  store i32 %26, i32* %15
  br label %72

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %28, align 8
  store %"struct.std::_Rb_tree_iterator"* %29, %"struct.std::_Rb_tree_iterator"** %2
  %30 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %32) #14
  %34 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %34, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %36 = load i32, i32* @x.547
  %37 = load i32, i32* @y.548
  %38 = add i32 %36, 527905530
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 527905530
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 813727979, i32 -585689132
  store i32 %62, i32* %15
  br label %72

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  ret %"struct.std::_Rb_tree_iterator"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %66, align 8
  %67 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %69) #14
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %67, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  store i32 1756044431, i32* %15
  br label %72

; <label>:72:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %3, i64* dereferenceable(8) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.39"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.551
  %7 = load i32, i32* @y.552
  %8 = add i32 %6, 1919684841
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1919684841
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -279848006, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -279848006, label %20
    i32 -1975527539, label %40
    i32 1945862157, label %67
    i32 1232304135, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1975527539, i32 1232304135
  store i32 %39, i32* %16
  br label %80

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.39"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %43 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.39"* %0, %"struct.std::pair.39"** %41, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %42, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %43, align 8
  %44 = load %"struct.std::pair.39"*, %"struct.std::pair.39"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %44, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %46) #3
  %48 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %47, align 8
  store %"struct.std::_Rb_tree_node_base"* %48, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %49 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %44, i32 0, i32 1
  %50 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %43, align 8
  %51 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %50, align 8
  store %"struct.std::_Rb_tree_node_base"* %51, %"struct.std::_Rb_tree_node_base"** %49, align 8
  %52 = load i32, i32* @x.551
  %53 = load i32, i32* @y.552
  %54 = add i32 %52, 1660736243
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1660736243
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1945862157, i32 1232304135
  store i32 %66, i32* %16
  br label %80

; <label>:67:                                     ; preds = %17
  ret void

; <label>:68:                                     ; preds = %17
  %69 = alloca %"struct.std::pair.39"*, align 8
  %70 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %71 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.39"* %0, %"struct.std::pair.39"** %69, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %70, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %71, align 8
  %72 = load %"struct.std::pair.39"*, %"struct.std::pair.39"** %69, align 8
  %73 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %72, i32 0, i32 0
  %74 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %70, align 8
  %75 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %74) #3
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  store %"struct.std::_Rb_tree_node_base"* %76, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %77 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %72, i32 0, i32 1
  %78 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %71, align 8
  %79 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %78, align 8
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store i32 -1975527539, i32* %16
  br label %80

; <label>:80:                                     ; preds = %68, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.559
  %6 = load i32, i32* @y.560
  %7 = sub i32 %5, 809758403
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 809758403
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1550247926, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1550247926, label %19
    i32 -1542518126, label %39
    i32 1674336969, label %59
    i32 946148402, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1542518126, i32 946148402
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %40, align 8
  %41 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %40, align 8
  %42 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %41, i32 0, i32 0
  %43 = bitcast [8 x i8]* %42 to i8*
  store i8* %43, i8** %2
  %44 = load i32, i32* @x.559
  %45 = load i32, i32* @y.560
  %46 = add i32 %44, -728021989
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -728021989
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1674336969, i32 946148402
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i8*, i8** %2
  ret i8* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %62, align 8
  %63 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %62, align 8
  %64 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %63, i32 0, i32 0
  %65 = bitcast [8 x i8]* %64 to i8*
  store i32 -1542518126, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
  ret %"struct.std::_Rb_tree_node"** %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node"*
  %5 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %4)
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIRKxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %8) #3
  %10 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"* %7, i64* dereferenceable(8) %9)
  ret %"struct.std::_Rb_tree_node"* %10
}

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJRKxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.569
  %7 = load i32, i32* @y.570
  %8 = add i32 %6, 1557319285
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1557319285
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 4284368, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 4284368, label %20
    i32 -529719989, label %40
    i32 628075973, label %77
    i32 648252819, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -529719989, i32 648252819
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::_Rb_tree"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %41, align 8
  store i64* %1, i64** %42, align 8
  %44 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %41, align 8
  %45 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree"* %44)
  store %"struct.std::_Rb_tree_node"* %45, %"struct.std::_Rb_tree_node"** %43, align 8
  %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %43, align 8
  %47 = load i64*, i64** %42, align 8
  %48 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %47) #3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"* %44, %"struct.std::_Rb_tree_node"* %46, i64* dereferenceable(8) %48)
  %49 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %43, align 8
  store %"struct.std::_Rb_tree_node"* %49, %"struct.std::_Rb_tree_node"** %3
  %50 = load i32, i32* @x.569
  %51 = load i32, i32* @y.570
  %52 = add i32 %50, -2114604468
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -2114604468
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 628075973, i32 648252819
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  ret %"struct.std::_Rb_tree_node"* %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.std::_Rb_tree"*, align 8
  %81 = alloca i64*, align 8
  %82 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %80, align 8
  store i64* %1, i64** %81, align 8
  %83 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %80, align 8
  %84 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree"* %83)
  store %"struct.std::_Rb_tree_node"* %84, %"struct.std::_Rb_tree_node"** %82, align 8
  %85 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %82, align 8
  %86 = load i64*, i64** %81, align 8
  %87 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %86) #3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"* %83, %"struct.std::_Rb_tree_node"* %85, i64* dereferenceable(8) %87)
  %88 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %82, align 8
  store i32 -529719989, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.30"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJRKxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.573
  %5 = load i32, i32* @y.574
  %6 = sub i32 %4, -561373037
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -561373037
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %115

; <label>:30:                                     ; preds = %3, %115
  %31 = alloca %"class.std::_Rb_tree"*, align 8
  %32 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %33 = alloca i64*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %31, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %32, align 8
  store i64* %2, i64** %33, align 8
  %36 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %31, align 8
  %37 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %32, align 8
  %38 = bitcast %"struct.std::_Rb_tree_node"* %37 to i8*
  %39 = bitcast i8* %38 to %"struct.std::_Rb_tree_node"*
  %40 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %36) #3
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %32, align 8
  %42 = load i32, i32* @x.573
  %43 = load i32, i32* @y.574
  %44 = add i32 %42, 1848609321
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1848609321
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %115

; <label>:56:                                     ; preds = %30
  %57 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %41)
          to label %58 unwind label %62

; <label>:58:                                     ; preds = %56
  %59 = load i64*, i64** %33, align 8
  %60 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %59) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1) %40, i64* %57, i64* dereferenceable(8) %60)
          to label %61 unwind label %62

; <label>:61:                                     ; preds = %58
  br label %105

; <label>:62:                                     ; preds = %58, %56
  %63 = load i32, i32* @x.573
  %64 = load i32, i32* @y.574
  %65 = add i32 %63, 391618620
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, 391618620
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %127

; <label>:77:                                     ; preds = %62, %127
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %34, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %35, align 4
  %81 = load i32, i32* @x.573
  %82 = load i32, i32* @y.574
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %127

; <label>:94:                                     ; preds = %77
  br label %95

; <label>:95:                                     ; preds = %94
  %96 = load i8*, i8** %34, align 8
  %97 = call i8* @__cxa_begin_catch(i8* %96) #3
  %98 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %32, align 8
  %99 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %32, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %36, %"struct.std::_Rb_tree_node"* %99) #3
  invoke void @__cxa_rethrow() #13
          to label %114 unwind label %100

; <label>:100:                                    ; preds = %95
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  store i8* %102, i8** %34, align 8
  %103 = extractvalue { i8*, i32 } %101, 1
  store i32 %103, i32* %35, align 4
  invoke void @__cxa_end_catch()
          to label %104 unwind label %111

; <label>:104:                                    ; preds = %100
  br label %106

; <label>:105:                                    ; preds = %61
  ret void

; <label>:106:                                    ; preds = %104
  %107 = load i8*, i8** %34, align 8
  %108 = load i32, i32* %35, align 4
  %109 = insertvalue { i8*, i32 } undef, i8* %107, 0
  %110 = insertvalue { i8*, i32 } %109, i32 %108, 1
  resume { i8*, i32 } %110

; <label>:111:                                    ; preds = %100
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  call void @__clang_call_terminate(i8* %113) #10
  unreachable

; <label>:114:                                    ; preds = %95
  unreachable

; <label>:115:                                    ; preds = %30, %3
  %116 = alloca %"class.std::_Rb_tree"*, align 8
  %117 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %118 = alloca i64*, align 8
  %119 = alloca i8*
  %120 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %116, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %117, align 8
  store i64* %2, i64** %118, align 8
  %121 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %116, align 8
  %122 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %117, align 8
  %123 = bitcast %"struct.std::_Rb_tree_node"* %122 to i8*
  %124 = bitcast i8* %123 to %"struct.std::_Rb_tree_node"*
  %125 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %121) #3
  %126 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %117, align 8
  br label %30

; <label>:127:                                    ; preds = %77, %62
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %34, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %35, align 4
  br label %77
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.30"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.30"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %3, align 8
  %6 = bitcast %"class.std::allocator.30"* %5 to %"class.__gnu_cxx::new_allocator.31"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.30"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.577
  %6 = load i32, i32* @y.578
  %7 = sub i32 %5, 597743697
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 597743697
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 533150493, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 533150493, label %19
    i32 2046223420, label %39
    i32 2039040792, label %58
    i32 1895656216, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2046223420, i32 1895656216
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %40, align 8
  %41 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %42 to %"class.std::allocator.30"*
  store %"class.std::allocator.30"* %43, %"class.std::allocator.30"** %2
  %44 = load i32, i32* @x.577
  %45 = load i32, i32* @y.578
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 2039040792, i32 1895656216
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.30"*, %"class.std::allocator.30"** %2
  ret %"class.std::allocator.30"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %61, align 8
  %62 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %61, align 8
  %63 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %63 to %"class.std::allocator.30"*
  store i32 2046223420, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.31"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -255158522, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -255158522, label %16
    i32 135721599, label %21
    i32 -1048996844, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 135721599, i32 -1048996844
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 40
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.31"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %2, align 8
  ret i64 461168601842738790
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.30"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.30"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  %8 = bitcast %"class.std::allocator.30"* %7 to %"class.__gnu_cxx::new_allocator.31"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"* %8, i64* %9, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.587
  %4 = load i32, i32* @y.588
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %105

; <label>:16:                                     ; preds = %2, %105
  %17 = alloca %"class.std::_Rb_tree"*, align 8
  %18 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %17, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %18, align 8
  %19 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %17, align 8
  %20 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %19) #3
  %21 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %18, align 8
  %22 = load i32, i32* @x.587
  %23 = load i32, i32* @y.588
  %24 = add i32 %22, -1424456398
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -1424456398
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %105

; <label>:48:                                     ; preds = %16
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.30"* dereferenceable(1) %20, %"struct.std::_Rb_tree_node"* %21, i64 1)
          to label %49 unwind label %50

; <label>:49:                                     ; preds = %48
  ret void

; <label>:50:                                     ; preds = %48
  %51 = load i32, i32* @x.587
  %52 = load i32, i32* @y.588
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %111

; <label>:76:                                     ; preds = %50, %111
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  call void @__clang_call_terminate(i8* %78) #10
  %79 = load i32, i32* @x.587
  %80 = load i32, i32* @y.588
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %111

; <label>:104:                                    ; preds = %76
  unreachable

; <label>:105:                                    ; preds = %16, %2
  %106 = alloca %"class.std::_Rb_tree"*, align 8
  %107 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %106, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %107, align 8
  %108 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %106, align 8
  %109 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %108) #3
  %110 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %107, align 8
  br label %16

; <label>:111:                                    ; preds = %76, %50
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  call void @__clang_call_terminate(i8* %113) #10
  br label %76
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.31"*, i64*, i64* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  %10 = bitcast i8* %9 to i64*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.591
  %6 = load i32, i32* @y.592
  %7 = sub i32 %5, -1962341982
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1962341982
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1156035532, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1156035532, label %19
    i32 14376291, label %39
    i32 209655084, label %70
    i32 -556933353, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 14376291, i32 -556933353
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %40, align 8
  %41 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %40, align 8
  %42 = call i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %41) #3
  %43 = bitcast i8* %42 to i64*
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.591
  %45 = load i32, i32* @y.592
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 209655084, i32 -556933353
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64*, i64** %2
  ret i64* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %73, align 8
  %74 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %73, align 8
  %75 = call i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %74) #3
  %76 = bitcast i8* %75 to i64*
  store i32 14376291, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [8 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.30"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.30"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %4, align 8
  %8 = bitcast %"class.std::allocator.30"* %7 to %"class.__gnu_cxx::new_allocator.31"*
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.31"* %8, %"struct.std::_Rb_tree_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.31"*, %"struct.std::_Rb_tree_node"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.597
  %7 = load i32, i32* @y.598
  %8 = sub i32 %6, -1511584721
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1511584721
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1261009093, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1261009093, label %20
    i32 -2050369070, label %28
    i32 -469385213, label %61
    i32 1120155125, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2050369070, i32 1120155125
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %29, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %29, align 8
  %33 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %30, align 8
  %34 = bitcast %"struct.std::_Rb_tree_node"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.597
  %36 = load i32, i32* @y.598
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -469385213, i32 1120155125
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %64 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %63, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %63, align 8
  %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %64, align 8
  %68 = bitcast %"struct.std::_Rb_tree_node"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 -2050369070, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1)) #5 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.603
  %6 = load i32, i32* @y.604
  %7 = sub i32 %5, -1094247839
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1094247839
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1836310331, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1836310331, label %19
    i32 1167911699, label %27
    i32 1497313183, label %57
    i32 136832293, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1167911699, i32 136832293
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %28, align 8
  store %"struct.std::_Rb_tree_iterator"* %29, %"struct.std::_Rb_tree_iterator"** %2
  %30 = load i32, i32* @x.603
  %31 = load i32, i32* @y.604
  %32 = sub i32 %30, -734742065
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -734742065
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1497313183, i32 136832293
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  ret %"struct.std::_Rb_tree_iterator"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %60, align 8
  %61 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %60, align 8
  store i32 1167911699, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.605
  %6 = load i32, i32* @y.606
  %7 = sub i32 %5, 884748943
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 884748943
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1701622235, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %58
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1701622235, label %19
    i32 -859682148, label %27
    i32 233323436, label %49
    i32 657485991, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %58

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -859682148, i32 657485991
  store i32 %26, i32* %15
  br label %58

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %29, align 8
  %30 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %32, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %33, align 8
  store %"struct.std::_Rb_tree_node_base"* %34, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %35 = load i32, i32* @x.605
  %36 = load i32, i32* @y.606
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 233323436, i32 657485991
  store i32 %48, i32* %15
  br label %58

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %52 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %51, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %52, align 8
  %53 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %51, align 8
  %54 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %53, i32 0, i32 0
  %55 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %52, align 8
  %56 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %55, i32 0, i32 0
  %57 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %56, align 8
  store %"struct.std::_Rb_tree_node_base"* %57, %"struct.std::_Rb_tree_node_base"** %54, align 8
  store i32 -859682148, i32* %15
  br label %58

; <label>:58:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1)) #5 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5emptyEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %6 = call %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %5) #3
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %3, i32 0, i32 0
  store %"struct.Graph::QInfo"* %6, %"struct.Graph::QInfo"** %7, align 8
  %8 = call %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"* %5) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"** %9, align 8
  %10 = call zeroext i1 @_ZN9__gnu_cxxeqIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.40"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.40"* dereferenceable(8) %4) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.40"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.40"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %1, %"class.__gnu_cxx::__normal_iterator.40"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.40"* %5) #3
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.40"* %8) #3
  %10 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %9, align 8
  %11 = icmp eq %"struct.Graph::QInfo"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  store %"struct.Graph::QInfo"* %9, %"struct.Graph::QInfo"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.40"* %2, %"struct.Graph::QInfo"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %10, align 8
  ret %"struct.Graph::QInfo"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE3endEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  %3 = alloca %"class.std::vector.25"*, align 8
  %4 = alloca %"struct.Graph::QInfo"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %3, align 8
  %5 = load %"class.std::vector.25"*, %"class.std::vector.25"** %3, align 8
  %6 = bitcast %"class.std::vector.25"* %5 to %"struct.std::_Vector_base.26"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %8, align 8
  store %"struct.Graph::QInfo"* %9, %"struct.Graph::QInfo"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.40"* %2, %"struct.Graph::QInfo"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %10, align 8
  ret %"struct.Graph::QInfo"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::QInfo"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.40"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %3, i32 0, i32 0
  ret %"struct.Graph::QInfo"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.40"*, %"struct.Graph::QInfo"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.619
  %6 = load i32, i32* @y.620
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1814287814, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %56
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1814287814, label %18
    i32 609352357, label %26
    i32 535795920, label %48
    i32 -5089745, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %56

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 609352357, i32 -5089745
  store i32 %25, i32* %14
  br label %56

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  %28 = alloca %"struct.Graph::QInfo"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %27, align 8
  store %"struct.Graph::QInfo"** %1, %"struct.Graph::QInfo"*** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %27, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %29, i32 0, i32 0
  %31 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %28, align 8
  %32 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %31, align 8
  store %"struct.Graph::QInfo"* %32, %"struct.Graph::QInfo"** %30, align 8
  %33 = load i32, i32* @x.619
  %34 = load i32, i32* @y.620
  %35 = add i32 %33, 2064432761
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 2064432761
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 535795920, i32 -5089745
  store i32 %47, i32* %14
  br label %56

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  %51 = alloca %"struct.Graph::QInfo"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %50, align 8
  store %"struct.Graph::QInfo"** %1, %"struct.Graph::QInfo"*** %51, align 8
  %52 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %50, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %52, i32 0, i32 0
  %54 = load %"struct.Graph::QInfo"**, %"struct.Graph::QInfo"*** %51, align 8
  %55 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %54, align 8
  store %"struct.Graph::QInfo"* %55, %"struct.Graph::QInfo"** %53, align 8
  store i32 609352357, i32* %14
  br label %56

; <label>:56:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5frontEv(%"class.std::vector.25"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.25"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.40", align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %4 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %5 = call %"struct.Graph::QInfo"* @_ZNKSt6vectorIN5Graph5QInfoESaIS1_EE5beginEv(%"class.std::vector.25"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %3, i32 0, i32 0
  store %"struct.Graph::QInfo"* %5, %"struct.Graph::QInfo"** %6, align 8
  %7 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.40"* %3) #3
  ret %"struct.Graph::QInfo"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.40"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.40"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.40"* %0, %"class.__gnu_cxx::__normal_iterator.40"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.40"*, %"class.__gnu_cxx::__normal_iterator.40"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.40", %"class.__gnu_cxx::__normal_iterator.40"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  ret %"struct.Graph::QInfo"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEESt4lessIS3_EEvT_SB_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.35"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.35"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.35"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.35"*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.625
  %12 = load i32, i32* @y.626
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %10
  %19 = icmp slt i32 %12, 10
  store i1 %19, i1* %9
  %20 = alloca i32
  store i32 1643663055, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %119
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1643663055, label %24
    i32 -1309988709, label %44
    i32 -1188845805, label %77
    i32 -1546641690, label %80
    i32 -575426057, label %104
    i32 -95144528, label %105
  ]

; <label>:23:                                     ; preds = %21
  br label %119

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %10
  %26 = load volatile i1, i1* %9
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1309988709, i32 -95144528
  store i32 %43, i32* %20
  br label %119

; <label>:44:                                     ; preds = %21
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %45, %"class.__gnu_cxx::__normal_iterator.35"** %8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %46, %"class.__gnu_cxx::__normal_iterator.35"** %7
  %47 = alloca %"struct.std::less", align 1
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %48, %"class.__gnu_cxx::__normal_iterator.35"** %6
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %49, %"class.__gnu_cxx::__normal_iterator.35"** %5
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %50, %"class.__gnu_cxx::__normal_iterator.35"** %4
  %51 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %52 = alloca %"struct.std::less", align 1
  %53 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %54 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %54, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %55, align 8
  %56 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %7
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %56, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %57, align 8
  %58 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %8
  %59 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %7
  %60 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %59, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %58) #3
  %61 = icmp sgt i64 %60, 1
  store i1 %61, i1* %3
  %62 = load i32, i32* @x.625
  %63 = load i32, i32* @y.626
  %64 = add i32 %62, -289112716
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -289112716
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 -1188845805, i32 -95144528
  store i32 %76, i32* %20
  br label %119

; <label>:77:                                     ; preds = %21
  %78 = load volatile i1, i1* %3
  %79 = select i1 %78, i32 -1546641690, i32 -575426057
  store i32 %79, i32* %20
  br label %119

; <label>:80:                                     ; preds = %21
  %81 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %7
  %82 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.35"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.35"* %81) #3
  %83 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %6
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %83 to i8*
  %85 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %8
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %86, i64 8, i32 8, i1 false)
  %87 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %5
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %87 to i8*
  %89 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %7
  %90 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %90, i64 8, i32 8, i1 false)
  %91 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %4
  %92 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %91 to i8*
  %93 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %7
  %94 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %94, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt4lessIN5Graph5QInfoEEEENS0_15_Iter_comp_iterIT_EES7_()
  %95 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %6
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %95, i32 0, i32 0
  %97 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %96, align 8
  %98 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %5
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %98, i32 0, i32 0
  %100 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %99, align 8
  %101 = load volatile %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %4
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %101, i32 0, i32 0
  %103 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %102, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_(%"struct.Graph::QInfo"* %97, %"struct.Graph::QInfo"* %100, %"struct.Graph::QInfo"* %103)
  store i32 -575426057, i32* %20
  br label %119

; <label>:104:                                    ; preds = %21
  ret void

; <label>:105:                                    ; preds = %21
  %106 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %107 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %108 = alloca %"struct.std::less", align 1
  %109 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %110 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %111 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %112 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %113 = alloca %"struct.std::less", align 1
  %114 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %115 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %106, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %115, align 8
  %116 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %107, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %116, align 8
  %117 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %107, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %106) #3
  %118 = icmp sgt i64 %117, 1
  store i32 -1309988709, i32* %20
  br label %119

; <label>:119:                                    ; preds = %105, %80, %77, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph5QInfoESaIS1_EE8pop_backEv(%"class.std::vector.25"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.25"*, align 8
  store %"class.std::vector.25"* %0, %"class.std::vector.25"** %2, align 8
  %3 = load %"class.std::vector.25"*, %"class.std::vector.25"** %2, align 8
  %4 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %6, align 8
  %8 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %7, i32 -1
  store %"struct.Graph::QInfo"* %8, %"struct.Graph::QInfo"** %6, align 8
  %9 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %10 to %"class.std::allocator.27"*
  %12 = bitcast %"class.std::vector.25"* %3 to %"struct.std::_Vector_base.26"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.26", %"struct.std::_Vector_base.26"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl", %"struct.std::_Vector_base<Graph::QInfo, std::allocator<Graph::QInfo> >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %14, align 8
  invoke void @_ZNSt16allocator_traitsISaIN5Graph5QInfoEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.27"* dereferenceable(1) %11, %"struct.Graph::QInfo"* %15)
          to label %16 unwind label %70

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.627
  %18 = load i32, i32* @y.628
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %73

; <label>:42:                                     ; preds = %16, %73
  %43 = load i32, i32* @x.627
  %44 = load i32, i32* @y.628
  %45 = add i32 %43, -1713736785
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1713736785
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %73

; <label>:69:                                     ; preds = %42
  ret void

; <label>:70:                                     ; preds = %1
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  call void @__clang_call_terminate(i8* %72) #10
  unreachable

; <label>:73:                                     ; preds = %42, %16
  br label %42
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.35"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.35"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.35"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.35"* %0, %"class.__gnu_cxx::__normal_iterator.35"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.35"*, %"class.__gnu_cxx::__normal_iterator.35"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::QInfo", %"struct.Graph::QInfo"* %5, i32 -1
  store %"struct.Graph::QInfo"* %6, %"struct.Graph::QInfo"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.35"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_SE_SE_T0_(%"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %8 = alloca %"struct.Graph::QInfo", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.35", align 8
  %10 = alloca %"struct.Graph::QInfo", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %4, i32 0, i32 0
  store %"struct.Graph::QInfo"* %0, %"struct.Graph::QInfo"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %5, i32 0, i32 0
  store %"struct.Graph::QInfo"* %1, %"struct.Graph::QInfo"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %6, i32 0, i32 0
  store %"struct.Graph::QInfo"* %2, %"struct.Graph::QInfo"** %14, align 8
  %15 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %6) #3
  %16 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %15) #3
  %17 = bitcast %"struct.Graph::QInfo"* %8 to i8*
  %18 = bitcast %"struct.Graph::QInfo"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 16, i32 8, i1 false)
  %19 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %4) #3
  %20 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %19) #3
  %21 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.35"* %6) #3
  %22 = bitcast %"struct.Graph::QInfo"* %21 to i8*
  %23 = bitcast %"struct.Graph::QInfo"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %9 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.35"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = call i64 @_ZN9__gnu_cxxmiIPN5Graph5QInfoESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.35"* dereferenceable(8) %4) #3
  %27 = call dereferenceable(16) %"struct.Graph::QInfo"* @_ZSt4moveIRN5Graph5QInfoEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::QInfo"* dereferenceable(16) %8) #3
  %28 = bitcast %"struct.Graph::QInfo"* %10 to i8*
  %29 = bitcast %"struct.Graph::QInfo"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %11 to i8*
  %31 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 1, i32 1, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.35", %"class.__gnu_cxx::__normal_iterator.35"* %9, i32 0, i32 0
  %33 = load %"struct.Graph::QInfo"*, %"struct.Graph::QInfo"** %32, align 8
  %34 = bitcast %"struct.Graph::QInfo"* %10 to { i64, i64 }*
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5Graph5QInfoESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt4lessIS3_EEEEvT_T0_SF_T1_T2_(%"struct.Graph::QInfo"* %33, i64 0, i64 %26, i64 %36, i64 %38)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.633
  %4 = load i32, i32* @y.634
  %5 = add i32 %3, -979774206
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -979774206
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %124

; <label>:17:                                     ; preds = %2, %124
  %18 = alloca %"class.std::vector.18"*, align 8
  %19 = alloca %"class.std::vector.18"*, align 8
  %20 = alloca %"class.std::allocator.20", align 1
  %21 = alloca i8*
  %22 = alloca i32
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %18, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %19, align 8
  %25 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %26 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %27 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %28 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %27) #3
  %29 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %30 = bitcast %"class.std::vector.18"* %29 to %"struct.std::_Vector_base.19"*
  %31 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %30) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.20"* sret %20, %"class.std::allocator.20"* dereferenceable(1) %31)
  %32 = load i32, i32* @x.633
  %33 = load i32, i32* @y.634
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %124

; <label>:45:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.19"* %26, i64 %28, %"class.std::allocator.20"* dereferenceable(1) %20)
          to label %46 unwind label %110

; <label>:46:                                     ; preds = %45
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %20) #3
  %47 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %48 = call %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"* %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %23, i32 0, i32 0
  store %"struct.Graph::Edge"* %48, %"struct.Graph::Edge"** %49, align 8
  %50 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %51 = call %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"* %50) #3
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %24, i32 0, i32 0
  store %"struct.Graph::Edge"* %51, %"struct.Graph::Edge"** %52, align 8
  %53 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %54, i32 0, i32 0
  %56 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %55, align 8
  %57 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %58 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %57) #3
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %23, i32 0, i32 0
  %60 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %59, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %24, i32 0, i32 0
  %62 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %61, align 8
  %63 = invoke %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::Edge"* %60, %"struct.Graph::Edge"* %62, %"struct.Graph::Edge"* %56, %"class.std::allocator.20"* dereferenceable(1) %58)
          to label %64 unwind label %114

; <label>:64:                                     ; preds = %46
  %65 = load i32, i32* @x.633
  %66 = load i32, i32* @y.634
  %67 = sub i32 %65, 1481636405
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 1481636405
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %139

; <label>:91:                                     ; preds = %64, %139
  %92 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %93, i32 0, i32 1
  store %"struct.Graph::Edge"* %63, %"struct.Graph::Edge"** %94, align 8
  %95 = load i32, i32* @x.633
  %96 = load i32, i32* @y.634
  %97 = add i32 %95, 1960993674
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, 1960993674
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  br i1 %107, label %109, label %139

; <label>:109:                                    ; preds = %91
  ret void

; <label>:110:                                    ; preds = %45
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %21, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %22, align 4
  call void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"* %20) #3
  br label %119

; <label>:114:                                    ; preds = %46
  %115 = landingpad { i8*, i32 }
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %21, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %22, align 4
  %118 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.19"* %118) #3
  br label %119

; <label>:119:                                    ; preds = %114, %110
  %120 = load i8*, i8** %21, align 8
  %121 = load i32, i32* %22, align 4
  %122 = insertvalue { i8*, i32 } undef, i8* %120, 0
  %123 = insertvalue { i8*, i32 } %122, i32 %121, 1
  resume { i8*, i32 } %123

; <label>:124:                                    ; preds = %17, %2
  %125 = alloca %"class.std::vector.18"*, align 8
  %126 = alloca %"class.std::vector.18"*, align 8
  %127 = alloca %"class.std::allocator.20", align 1
  %128 = alloca i8*
  %129 = alloca i32
  %130 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %131 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %125, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %126, align 8
  %132 = load %"class.std::vector.18"*, %"class.std::vector.18"** %125, align 8
  %133 = bitcast %"class.std::vector.18"* %132 to %"struct.std::_Vector_base.19"*
  %134 = load %"class.std::vector.18"*, %"class.std::vector.18"** %126, align 8
  %135 = call i64 @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE4sizeEv(%"class.std::vector.18"* %134) #3
  %136 = load %"class.std::vector.18"*, %"class.std::vector.18"** %126, align 8
  %137 = bitcast %"class.std::vector.18"* %136 to %"struct.std::_Vector_base.19"*
  %138 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5Graph4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %137) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.20"* sret %127, %"class.std::allocator.20"* dereferenceable(1) %138)
  br label %17

; <label>:139:                                    ; preds = %91, %64
  %140 = bitcast %"class.std::vector.18"* %25 to %"struct.std::_Vector_base.19"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %141, i32 0, i32 1
  store %"struct.Graph::Edge"* %63, %"struct.Graph::Edge"** %142, align 8
  br label %91
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.20"* noalias sret, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %3, align 8
  %4 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.20"* sret %0, %"class.std::allocator.20"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.19"*, i64, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %9 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %6, align 8
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, %"class.std::allocator.20"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.19"* %9, i64 %12)
          to label %13 unwind label %68

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.637
  %15 = load i32, i32* @y.638
  %16 = add i32 %14, -1306336872
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1306336872
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %77

; <label>:40:                                     ; preds = %13, %77
  %41 = load i32, i32* @x.637
  %42 = load i32, i32* @y.638
  %43 = sub i32 %41, -1217005250
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1217005250
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %77

; <label>:67:                                     ; preds = %40
  ret void

; <label>:68:                                     ; preds = %3
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %7, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10) #3
  br label %72

; <label>:72:                                     ; preds = %68
  %73 = load i8*, i8** %7, align 8
  %74 = load i32, i32* %8, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  resume { i8*, i32 } %76

; <label>:77:                                     ; preds = %40, %13
  br label %40
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4EdgeEED2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::Edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.641
  %9 = load i32, i32* @y.642
  %10 = sub i32 %8, -758487166
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -758487166
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 210389579, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 210389579, label %22
    i32 1586369440, label %30
    i32 -557388270, label %76
    i32 -304569233, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1586369440, i32 -304569233
  store i32 %29, i32* %18
  br label %97

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %33 = alloca %"struct.Graph::Edge"*, align 8
  %34 = alloca %"class.std::allocator.20"*, align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %31, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %32, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %38, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %33, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %34, align 8
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %35 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %36 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %33, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %35, i32 0, i32 0
  %45 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %36, i32 0, i32 0
  %47 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %46, align 8
  %48 = call %"struct.Graph::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::Edge"* %45, %"struct.Graph::Edge"* %47, %"struct.Graph::Edge"* %43)
  store %"struct.Graph::Edge"* %48, %"struct.Graph::Edge"** %5
  %49 = load i32, i32* @x.641
  %50 = load i32, i32* @y.642
  %51 = add i32 %49, 1885073887
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1885073887
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -557388270, i32 -304569233
  store i32 %75, i32* %18
  br label %97

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %5
  ret %"struct.Graph::Edge"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %81 = alloca %"struct.Graph::Edge"*, align 8
  %82 = alloca %"class.std::allocator.20"*, align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %84 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %79, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %85, align 8
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %80, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %86, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %81, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %82, align 8
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %83 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %84 to i8*
  %90 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 8, i32 8, i1 false)
  %91 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %81, align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %83, i32 0, i32 0
  %93 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %92, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %84, i32 0, i32 0
  %95 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %94, align 8
  %96 = call %"struct.Graph::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::Edge"* %93, %"struct.Graph::Edge"* %95, %"struct.Graph::Edge"* %91)
  store i32 1586369440, i32* %18
  br label %97

; <label>:97:                                     ; preds = %78, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE5beginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.643
  %6 = load i32, i32* @y.644
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1309768134, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1309768134, label %18
    i32 -698478309, label %38
    i32 658805573, label %64
    i32 -1472659174, label %66
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -698478309, i32 -1472659174
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %40 = alloca %"class.std::vector.18"*, align 8
  %41 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %40, align 8
  %42 = load %"class.std::vector.18"*, %"class.std::vector.18"** %40, align 8
  %43 = bitcast %"class.std::vector.18"* %42 to %"struct.std::_Vector_base.19"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %45, align 8
  store %"struct.Graph::Edge"* %46, %"struct.Graph::Edge"** %41, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %39, %"struct.Graph::Edge"** dereferenceable(8) %41) #3
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %39, i32 0, i32 0
  %48 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %47, align 8
  store %"struct.Graph::Edge"* %48, %"struct.Graph::Edge"** %2
  %49 = load i32, i32* @x.643
  %50 = load i32, i32* @y.644
  %51 = sub i32 %49, 690531492
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 690531492
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 658805573, i32 -1472659174
  store i32 %63, i32* %14
  br label %77

; <label>:64:                                     ; preds = %15
  %65 = load volatile %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2
  ret %"struct.Graph::Edge"* %65

; <label>:66:                                     ; preds = %15
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %68 = alloca %"class.std::vector.18"*, align 8
  %69 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %68, align 8
  %70 = load %"class.std::vector.18"*, %"class.std::vector.18"** %68, align 8
  %71 = bitcast %"class.std::vector.18"* %70 to %"struct.std::_Vector_base.19"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %73, align 8
  store %"struct.Graph::Edge"* %74, %"struct.Graph::Edge"** %69, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %67, %"struct.Graph::Edge"** dereferenceable(8) %69) #3
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %67, i32 0, i32 0
  %76 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %75, align 8
  store i32 -698478309, i32* %14
  br label %77

; <label>:77:                                     ; preds = %66, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNKSt6vectorIN5Graph4EdgeESaIS1_EE3endEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %8, align 8
  store %"struct.Graph::Edge"* %9, %"struct.Graph::Edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.24"* %2, %"struct.Graph::Edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %10, align 8
  ret %"struct.Graph::Edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4EdgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.20"* noalias sret, %"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %3, align 8
  %4 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %0, %"class.std::allocator.20"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  %6 = bitcast %"class.std::allocator.20"* %5 to %"class.__gnu_cxx::new_allocator.21"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.21"* %6, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.651
  %6 = load i32, i32* @y.652
  %7 = sub i32 %5, 1519372121
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1519372121
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1397604484, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1397604484, label %19
    i32 1662853410, label %27
    i32 -1943554946, label %63
    i32 -2041996505, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1662853410, i32 -2041996505
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %29, align 8
  %30 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %30 to %"class.std::allocator.20"*
  %32 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %29, align 8
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %31, %"class.std::allocator.20"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %30, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %30, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %30, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %35, align 8
  %36 = load i32, i32* @x.651
  %37 = load i32, i32* @y.652
  %38 = sub i32 %36, 1227011528
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1227011528
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1943554946, i32 -2041996505
  store i32 %62, i32* %15
  br label %73

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, align 8
  %66 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %65, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %66, align 8
  %67 = load %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"** %65, align 8
  %68 = bitcast %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %67 to %"class.std::allocator.20"*
  %69 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %66, align 8
  call void @_ZNSaIN5Graph4EdgeEEC2ERKS1_(%"class.std::allocator.20"* %68, %"class.std::allocator.20"* dereferenceable(1) %69) #3
  %70 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %67, i32 0, i32 0
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %67, i32 0, i32 1
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %67, i32 0, i32 2
  store %"struct.Graph::Edge"* null, %"struct.Graph::Edge"** %72, align 8
  store i32 1662853410, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"struct.Graph::Edge"* @_ZNSt12_Vector_baseIN5Graph4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %8, i32 0, i32 0
  store %"struct.Graph::Edge"* %7, %"struct.Graph::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %13, i32 0, i32 1
  store %"struct.Graph::Edge"* %12, %"struct.Graph::Edge"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::Edge, std::allocator<Graph::Edge> >::_Vector_impl"* %20, i32 0, i32 2
  store %"struct.Graph::Edge"* %19, %"struct.Graph::Edge"** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %11, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.24"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %8, i32 0, i32 0
  %18 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %19, align 8
  %21 = call %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::Edge"* %18, %"struct.Graph::Edge"* %20, %"struct.Graph::Edge"* %16)
  ret %"struct.Graph::Edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::Edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"*, %"struct.Graph::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %6 = alloca %"struct.Graph::Edge"*, align 8
  %7 = alloca %"struct.Graph::Edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %4, i32 0, i32 0
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %11, align 8
  store %"struct.Graph::Edge"* %2, %"struct.Graph::Edge"** %6, align 8
  %12 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  store %"struct.Graph::Edge"* %12, %"struct.Graph::Edge"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %74, %3
  %14 = load i32, i32* @x.657
  %15 = load i32, i32* @y.658
  %16 = sub i32 %14, -152416117
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -152416117
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %205

; <label>:40:                                     ; preds = %13, %205
  %41 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %5) #3
  %42 = load i32, i32* @x.657
  %43 = load i32, i32* @y.658
  %44 = sub i32 %42, -1914245176
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1914245176
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %205

; <label>:68:                                     ; preds = %40
  br i1 %41, label %69, label %117

; <label>:69:                                     ; preds = %68
  %70 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %71 = call %"struct.Graph::Edge"* @_ZSt11__addressofIN5Graph4EdgeEEPT_RS2_(%"struct.Graph::Edge"* dereferenceable(16) %70) #3
  %72 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.24"* %4) #3
  invoke void @_ZSt10_ConstructIN5Graph4EdgeEJRKS1_EEvPT_DpOT0_(%"struct.Graph::Edge"* %71, %"struct.Graph::Edge"* dereferenceable(16) %72)
          to label %73 unwind label %78

; <label>:73:                                     ; preds = %69
  br label %74

; <label>:74:                                     ; preds = %73
  %75 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.24"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.24"* %4) #3
  %76 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  %77 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %76, i32 1
  store %"struct.Graph::Edge"* %77, %"struct.Graph::Edge"** %7, align 8
  br label %13

; <label>:78:                                     ; preds = %69
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %8, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %9, align 4
  br label %82

; <label>:82:                                     ; preds = %78
  %83 = load i8*, i8** %8, align 8
  %84 = call i8* @__cxa_begin_catch(i8* %83) #3
  %85 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %86 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  invoke void @_ZSt8_DestroyIPN5Graph4EdgeEEvT_S3_(%"struct.Graph::Edge"* %85, %"struct.Graph::Edge"* %86)
          to label %87 unwind label %119

; <label>:87:                                     ; preds = %82
  %88 = load i32, i32* @x.657
  %89 = load i32, i32* @y.658
  %90 = sub i32 %88, -1577069284
  %91 = sub i32 %90, 1
  %92 = add i32 %91, -1577069284
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %207

; <label>:102:                                    ; preds = %87, %207
  %103 = load i32, i32* @x.657
  %104 = load i32, i32* @y.658
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  br i1 %114, label %116, label %207

; <label>:116:                                    ; preds = %102
  invoke void @__cxa_rethrow() #13
          to label %204 unwind label %119

; <label>:117:                                    ; preds = %68
  %118 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %7, align 8
  ret %"struct.Graph::Edge"* %118

; <label>:119:                                    ; preds = %116, %82
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %8, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %123 unwind label %172

; <label>:123:                                    ; preds = %119
  br label %125
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:125:                                    ; preds = %123
  %126 = load i32, i32* @x.657
  %127 = load i32, i32* @y.658
  %128 = add i32 %126, 958696399
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, 958696399
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  br i1 %138, label %140, label %208

; <label>:140:                                    ; preds = %125, %208
  %141 = load i8*, i8** %8, align 8
  %142 = load i32, i32* %9, align 4
  %143 = insertvalue { i8*, i32 } undef, i8* %141, 0
  %144 = insertvalue { i8*, i32 } %143, i32 %142, 1
  %145 = load i32, i32* @x.657
  %146 = load i32, i32* @y.658
  %147 = add i32 %145, 32938181
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 32938181
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 false, true
  %158 = and i1 %155, false
  %159 = and i1 %153, %157
  %160 = and i1 %156, false
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 false, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %208

; <label>:171:                                    ; preds = %140
  resume { i8*, i32 } %144

; <label>:172:                                    ; preds = %119
  %173 = load i32, i32* @x.657
  %174 = load i32, i32* @y.658
  %175 = add i32 %173, 1572657566
  %176 = sub i32 %175, 1
  %177 = sub i32 %176, 1572657566
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  br i1 %185, label %187, label %213

; <label>:187:                                    ; preds = %172, %213
  %188 = landingpad { i8*, i32 }
          catch i8* null
  %189 = extractvalue { i8*, i32 } %188, 0
  call void @__clang_call_terminate(i8* %189) #10
  %190 = load i32, i32* @x.657
  %191 = load i32, i32* @y.658
  %192 = sub i32 0, 1
  %193 = add i32 %190, %192
  %194 = sub i32 %190, 1
  %195 = mul i32 %190, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %191, 10
  %199 = and i1 %197, %198
  %200 = xor i1 %197, %198
  %201 = or i1 %199, %200
  %202 = or i1 %197, %198
  br i1 %201, label %203, label %213

; <label>:203:                                    ; preds = %187
  unreachable

; <label>:204:                                    ; preds = %116
  unreachable

; <label>:205:                                    ; preds = %40, %13
  %206 = call zeroext i1 @_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %5) #3
  br label %40

; <label>:207:                                    ; preds = %102, %87
  br label %102

; <label>:208:                                    ; preds = %140, %125
  %209 = load i8*, i8** %8, align 8
  %210 = load i32, i32* %9, align 4
  %211 = insertvalue { i8*, i32 } undef, i8* %209, 0
  %212 = insertvalue { i8*, i32 } %211, i32 %210, 1
  br label %140

; <label>:213:                                    ; preds = %187, %172
  %214 = landingpad { i8*, i32 }
          catch i8* null
  %215 = extractvalue { i8*, i32 } %214, 0
  call void @__clang_call_terminate(i8* %215) #10
  br label %187
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %5) #3
  %7 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %8) #3
  %10 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %9, align 8
  %11 = icmp ne %"struct.Graph::Edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN5Graph4EdgeEJRKS1_EEvPT_DpOT0_(%"struct.Graph::Edge"*, %"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %3 = alloca %"struct.Graph::Edge"*, align 8
  %4 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %3, align 8
  store %"struct.Graph::Edge"* %1, %"struct.Graph::Edge"** %4, align 8
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %3, align 8
  %6 = bitcast %"struct.Graph::Edge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Graph::Edge"*
  %8 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  %9 = call dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIRKN5Graph4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.Graph::Edge"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.Graph::Edge"* %7 to i8*
  %11 = bitcast %"struct.Graph::Edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %4, align 8
  ret %"struct.Graph::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.24"* @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.665
  %6 = load i32, i32* @y.666
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 834552480, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 834552480, label %18
    i32 1803298432, label %38
    i32 -2072455020, label %72
    i32 -1279018443, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1803298432, i32 -1279018443
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %39, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %40, %"class.__gnu_cxx::__normal_iterator.24"** %2
  %41 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %41, i32 0, i32 0
  %43 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %42, align 8
  %44 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %43, i32 1
  store %"struct.Graph::Edge"* %44, %"struct.Graph::Edge"** %42, align 8
  %45 = load i32, i32* @x.665
  %46 = load i32, i32* @y.666
  %47 = add i32 %45, -1681017790
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1681017790
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -2072455020, i32 -1279018443
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  %73 = load volatile %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2
  ret %"class.__gnu_cxx::__normal_iterator.24"* %73

; <label>:74:                                     ; preds = %15
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %75, align 8
  %76 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %75, align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %76, i32 0, i32 0
  %78 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %77, align 8
  %79 = getelementptr inbounds %"struct.Graph::Edge", %"struct.Graph::Edge"* %78, i32 1
  store %"struct.Graph::Edge"* %79, %"struct.Graph::Edge"** %77, align 8
  store i32 1803298432, i32* %14
  br label %80

; <label>:80:                                     ; preds = %74, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.Graph::Edge"* @_ZSt7forwardIRKN5Graph4EdgeEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.Graph::Edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.Graph::Edge"*, align 8
  store %"struct.Graph::Edge"* %0, %"struct.Graph::Edge"** %2, align 8
  %3 = load %"struct.Graph::Edge"*, %"struct.Graph::Edge"** %2, align 8
  ret %"struct.Graph::Edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseERKx(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::pair.41", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store i64* %1, i64** %4, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %11 = load i64*, i64** %4, align 8
  %12 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11equal_rangeERKx(%"class.std::_Rb_tree"* %10, i64* dereferenceable(8) %11)
  %13 = bitcast %"struct.std::pair.41"* %5 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %14 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %13, i32 0, i32 0
  %15 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %12, 0
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %16 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %13, i32 0, i32 1
  %17 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %12, 1
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %18 = call i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree"* %10) #3
  store i64 %18, i64* %6, align 8
  %19 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %5, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %7, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %19) #3
  %20 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %5, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %8, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %20) #3
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  %22 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
  %25 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxES7_(%"class.std::_Rb_tree"* %10, %"struct.std::_Rb_tree_node_base"* %22, %"struct.std::_Rb_tree_node_base"* %24)
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %25, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %27 = load i64, i64* %6, align 8
  %28 = call i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree"* %10) #3
  %29 = add i64 %27, 4622558633796698773
  %30 = sub i64 %29, %28
  %31 = sub i64 %30, 4622558633796698773
  %32 = sub i64 %27, %28
  ret i64 %31
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11equal_rangeERKx(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::_Rb_tree"*
  %6 = alloca %"struct.std::pair.41", align 8
  %7 = alloca %"class.std::_Rb_tree"*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %16 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %7, align 8
  store i64* %1, i64** %8, align 8
  %17 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7, align 8
  store %"class.std::_Rb_tree"* %17, %"class.std::_Rb_tree"** %5
  %18 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %19 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %18) #3
  store %"struct.std::_Rb_tree_node"* %19, %"struct.std::_Rb_tree_node"** %9, align 8
  %20 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %21 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %20) #3
  store %"struct.std::_Rb_tree_node"* %21, %"struct.std::_Rb_tree_node"** %10, align 8
  %22 = alloca i32
  store i32 2035821344, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %250
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 2035821344, label %26
    i32 -564124872, label %30
    i32 366944131, label %46
    i32 -1241132676, label %81
    i32 874789214, label %84
    i32 187347566, label %88
    i32 -485387124, label %116
    i32 235614581, label %138
    i32 719835034, label %141
    i32 -1678236028, label %146
    i32 1117202786, label %168
    i32 1967712565, label %195
    i32 1606821776, label %223
    i32 -1421020012, label %224
    i32 -2018682480, label %225
    i32 575086575, label %230
    i32 1902709705, label %233
    i32 -880357520, label %241
    i32 361834849, label %249
  ]

; <label>:25:                                     ; preds = %23
  br label %250

; <label>:26:                                     ; preds = %23
  %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %28 = icmp ne %"struct.std::_Rb_tree_node"* %27, null
  %29 = select i1 %28, i32 -564124872, i32 -2018682480
  store i32 %29, i32* %22
  br label %250

; <label>:30:                                     ; preds = %23
  %31 = load i32, i32* @x.671
  %32 = load i32, i32* @y.672
  %33 = add i32 %31, -2115435415
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -2115435415
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 366944131, i32 1902709705
  store i32 %45, i32* %22
  br label %250

; <label>:46:                                     ; preds = %23
  %47 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %48 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %48, i32 0, i32 0
  %50 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %51 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %50)
  %52 = load i64*, i64** %8, align 8
  %53 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %49, i64* dereferenceable(8) %51, i64* dereferenceable(8) %52)
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.671
  %55 = load i32, i32* @y.672
  %56 = sub i32 %54, 1904767634
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 1904767634
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 -1241132676, i32 1902709705
  store i32 %80, i32* %22
  br label %250

; <label>:81:                                     ; preds = %23
  %82 = load volatile i1, i1* %4
  %83 = select i1 %82, i32 874789214, i32 187347566
  store i32 %83, i32* %22
  br label %250

; <label>:84:                                     ; preds = %23
  %85 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %86 = bitcast %"struct.std::_Rb_tree_node"* %85 to %"struct.std::_Rb_tree_node_base"*
  %87 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %86) #3
  store %"struct.std::_Rb_tree_node"* %87, %"struct.std::_Rb_tree_node"** %9, align 8
  store i32 -1421020012, i32* %22
  br label %250

; <label>:88:                                     ; preds = %23
  %89 = load i32, i32* @x.671
  %90 = load i32, i32* @y.672
  %91 = sub i32 %89, -1580652406
  %92 = sub i32 %91, 1
  %93 = add i32 %92, -1580652406
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 -485387124, i32 -880357520
  store i32 %115, i32* %22
  br label %250

; <label>:116:                                    ; preds = %23
  %117 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %118 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %118, i32 0, i32 0
  %120 = load i64*, i64** %8, align 8
  %121 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %122 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %121)
  %123 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %119, i64* dereferenceable(8) %120, i64* dereferenceable(8) %122)
  store i1 %123, i1* %3
  %124 = load i32, i32* @x.671
  %125 = load i32, i32* @y.672
  %126 = sub i32 0, 1
  %127 = add i32 %124, %126
  %128 = sub i32 %124, 1
  %129 = mul i32 %124, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %125, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  %137 = select i1 %135, i32 235614581, i32 -880357520
  store i32 %137, i32* %22
  br label %250

; <label>:138:                                    ; preds = %23
  %139 = load volatile i1, i1* %3
  %140 = select i1 %139, i32 719835034, i32 -1678236028
  store i32 %140, i32* %22
  br label %250

; <label>:141:                                    ; preds = %23
  %142 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  store %"struct.std::_Rb_tree_node"* %142, %"struct.std::_Rb_tree_node"** %10, align 8
  %143 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %144 = bitcast %"struct.std::_Rb_tree_node"* %143 to %"struct.std::_Rb_tree_node_base"*
  %145 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %144) #3
  store %"struct.std::_Rb_tree_node"* %145, %"struct.std::_Rb_tree_node"** %9, align 8
  store i32 1117202786, i32* %22
  br label %250

; <label>:146:                                    ; preds = %23
  %147 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  store %"struct.std::_Rb_tree_node"* %147, %"struct.std::_Rb_tree_node"** %11, align 8
  %148 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  store %"struct.std::_Rb_tree_node"* %148, %"struct.std::_Rb_tree_node"** %12, align 8
  %149 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  store %"struct.std::_Rb_tree_node"* %149, %"struct.std::_Rb_tree_node"** %10, align 8
  %150 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %151 = bitcast %"struct.std::_Rb_tree_node"* %150 to %"struct.std::_Rb_tree_node_base"*
  %152 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %151) #3
  store %"struct.std::_Rb_tree_node"* %152, %"struct.std::_Rb_tree_node"** %9, align 8
  %153 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %154 = bitcast %"struct.std::_Rb_tree_node"* %153 to %"struct.std::_Rb_tree_node_base"*
  %155 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %154) #3
  store %"struct.std::_Rb_tree_node"* %155, %"struct.std::_Rb_tree_node"** %11, align 8
  %156 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %157 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %158 = load i64*, i64** %8, align 8
  %159 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %160 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_lower_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"* %159, %"struct.std::_Rb_tree_node"* %156, %"struct.std::_Rb_tree_node"* %157, i64* dereferenceable(8) %158)
  %161 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %160, %"struct.std::_Rb_tree_node_base"** %161, align 8
  %162 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %163 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %164 = load i64*, i64** %8, align 8
  %165 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %166 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_upper_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"* %165, %"struct.std::_Rb_tree_node"* %162, %"struct.std::_Rb_tree_node"* %163, i64* dereferenceable(8) %164)
  %167 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %166, %"struct.std::_Rb_tree_node_base"** %167, align 8
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxES1_EC2IS1_S1_vEEOT_OT0_(%"struct.std::pair.41"* %6, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %13, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %14)
  store i32 575086575, i32* %22
  br label %250

; <label>:168:                                    ; preds = %23
  %169 = load i32, i32* @x.671
  %170 = load i32, i32* @y.672
  %171 = sub i32 0, 1
  %172 = add i32 %169, %171
  %173 = sub i32 %169, 1
  %174 = mul i32 %169, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %170, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 true, true
  %181 = and i1 %178, true
  %182 = and i1 %176, %180
  %183 = and i1 %179, true
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 true, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  %194 = select i1 %192, i32 1967712565, i32 361834849
  store i32 %194, i32* %22
  br label %250

; <label>:195:                                    ; preds = %23
  %196 = load i32, i32* @x.671
  %197 = load i32, i32* @y.672
  %198 = add i32 %196, -458421002
  %199 = sub i32 %198, 1
  %200 = sub i32 %199, -458421002
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = xor i1 %204, true
  %207 = xor i1 %205, true
  %208 = xor i1 true, true
  %209 = and i1 %206, true
  %210 = and i1 %204, %208
  %211 = and i1 %207, true
  %212 = and i1 %205, %208
  %213 = or i1 %209, %210
  %214 = or i1 %211, %212
  %215 = xor i1 %213, %214
  %216 = or i1 %206, %207
  %217 = xor i1 %216, true
  %218 = or i1 true, %208
  %219 = and i1 %217, %218
  %220 = or i1 %215, %219
  %221 = or i1 %204, %205
  %222 = select i1 %220, i32 1606821776, i32 361834849
  store i32 %222, i32* %22
  br label %250

; <label>:223:                                    ; preds = %23
  store i32 -1421020012, i32* %22
  br label %250

; <label>:224:                                    ; preds = %23
  store i32 2035821344, i32* %22
  br label %250

; <label>:225:                                    ; preds = %23
  %226 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %227 = bitcast %"struct.std::_Rb_tree_node"* %226 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %15, %"struct.std::_Rb_tree_node_base"* %227) #3
  %228 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %229 = bitcast %"struct.std::_Rb_tree_node"* %228 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %16, %"struct.std::_Rb_tree_node_base"* %229) #3
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxES1_EC2IS1_S1_vEEOT_OT0_(%"struct.std::pair.41"* %6, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %15, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %16)
  store i32 575086575, i32* %22
  br label %250

; <label>:230:                                    ; preds = %23
  %231 = bitcast %"struct.std::pair.41"* %6 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %232 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %231, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %232

; <label>:233:                                    ; preds = %23
  %234 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %235 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %234, i32 0, i32 0
  %236 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %235, i32 0, i32 0
  %237 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %238 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %237)
  %239 = load i64*, i64** %8, align 8
  %240 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %236, i64* dereferenceable(8) %238, i64* dereferenceable(8) %239)
  store i32 366944131, i32* %22
  br label %250

; <label>:241:                                    ; preds = %23
  %242 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %243 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %242, i32 0, i32 0
  %244 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %243, i32 0, i32 0
  %245 = load i64*, i64** %8, align 8
  %246 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %247 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %246)
  %248 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %244, i64* dereferenceable(8) %245, i64* dereferenceable(8) %247)
  store i32 -485387124, i32* %22
  br label %250

; <label>:249:                                    ; preds = %23
  store i32 1967712565, i32* %22
  br label %250

; <label>:250:                                    ; preds = %249, %241, %233, %225, %224, %223, %195, %168, %146, %141, %138, %116, %88, %84, %81, %46, %30, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxES7_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"class.std::_Rb_tree"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %7, align 8
  %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7, align 8
  %13 = bitcast %"struct.std::_Rb_tree_const_iterator"* %8 to i8*
  %14 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"struct.std::_Rb_tree_const_iterator"* %9 to i8*
  %16 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %19, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxES7_(%"class.std::_Rb_tree"* %12, %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"* %20)
  %21 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %21, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
  ret %"struct.std::_Rb_tree_node_base"* %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_lower_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca i64**
  %8 = alloca %"struct.std::_Rb_tree_node"**
  %9 = alloca %"struct.std::_Rb_tree_node"**
  %10 = alloca %"struct.std::_Rb_tree_iterator"*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.677
  %14 = load i32, i32* @y.678
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 -1644002106, i32* %22
  br label %23

; <label>:23:                                     ; preds = %4, %225
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -1644002106, label %26
    i32 464723447, label %34
    i32 -1264348002, label %71
    i32 -1285243204, label %72
    i32 -1599170384, label %100
    i32 -1018791422, label %131
    i32 -301047553, label %134
    i32 999339474, label %145
    i32 944720141, label %154
    i32 -2085776310, label %160
    i32 1328801754, label %176
    i32 -1267805368, label %204
    i32 -1565388270, label %205
    i32 439553013, label %213
    i32 295177738, label %220
    i32 -2013544909, label %224
  ]

; <label>:25:                                     ; preds = %23
  br label %225

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %12
  %28 = load volatile i1, i1* %11
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 464723447, i32 439553013
  store i32 %33, i32* %22
  br label %225

; <label>:34:                                     ; preds = %23
  %35 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %35, %"struct.std::_Rb_tree_iterator"** %10
  %36 = alloca %"class.std::_Rb_tree"*, align 8
  %37 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %37, %"struct.std::_Rb_tree_node"*** %9
  %38 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %38, %"struct.std::_Rb_tree_node"*** %8
  %39 = alloca i64*, align 8
  store i64** %39, i64*** %7
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %36, align 8
  %40 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %40, align 8
  %41 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %41, align 8
  %42 = load volatile i64**, i64*** %7
  store i64* %3, i64** %42, align 8
  %43 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %36, align 8
  store %"class.std::_Rb_tree"* %43, %"class.std::_Rb_tree"** %6
  %44 = load i32, i32* @x.677
  %45 = load i32, i32* @y.678
  %46 = sub i32 %44, -1654444768
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1654444768
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1264348002, i32 439553013
  store i32 %70, i32* %22
  br label %225

; <label>:71:                                     ; preds = %23
  store i32 -1285243204, i32* %22
  br label %225

; <label>:72:                                     ; preds = %23
  %73 = load i32, i32* @x.677
  %74 = load i32, i32* @y.678
  %75 = add i32 %73, -1493784390
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -1493784390
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -1599170384, i32 295177738
  store i32 %99, i32* %22
  br label %225

; <label>:100:                                    ; preds = %23
  %101 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %102 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %101, align 8
  %103 = icmp ne %"struct.std::_Rb_tree_node"* %102, null
  store i1 %103, i1* %5
  %104 = load i32, i32* @x.677
  %105 = load i32, i32* @y.678
  %106 = sub i32 %104, -1432613151
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -1432613151
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  %130 = select i1 %128, i32 -1018791422, i32 295177738
  store i32 %130, i32* %22
  br label %225

; <label>:131:                                    ; preds = %23
  %132 = load volatile i1, i1* %5
  %133 = select i1 %132, i32 -301047553, i32 -1565388270
  store i32 %133, i32* %22
  br label %225

; <label>:134:                                    ; preds = %23
  %135 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %136 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %136, i32 0, i32 0
  %138 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %139 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %138, align 8
  %140 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %139)
  %141 = load volatile i64**, i64*** %7
  %142 = load i64*, i64** %141, align 8
  %143 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %137, i64* dereferenceable(8) %140, i64* dereferenceable(8) %142)
  %144 = select i1 %143, i32 944720141, i32 999339474
  store i32 %144, i32* %22
  br label %225

; <label>:145:                                    ; preds = %23
  %146 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %147 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %146, align 8
  %148 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  store %"struct.std::_Rb_tree_node"* %147, %"struct.std::_Rb_tree_node"** %148, align 8
  %149 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %150 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %149, align 8
  %151 = bitcast %"struct.std::_Rb_tree_node"* %150 to %"struct.std::_Rb_tree_node_base"*
  %152 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %151) #3
  %153 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  store %"struct.std::_Rb_tree_node"* %152, %"struct.std::_Rb_tree_node"** %153, align 8
  store i32 -2085776310, i32* %22
  br label %225

; <label>:154:                                    ; preds = %23
  %155 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %156 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %155, align 8
  %157 = bitcast %"struct.std::_Rb_tree_node"* %156 to %"struct.std::_Rb_tree_node_base"*
  %158 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %157) #3
  %159 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  store %"struct.std::_Rb_tree_node"* %158, %"struct.std::_Rb_tree_node"** %159, align 8
  store i32 -2085776310, i32* %22
  br label %225

; <label>:160:                                    ; preds = %23
  %161 = load i32, i32* @x.677
  %162 = load i32, i32* @y.678
  %163 = add i32 %161, -1417790647
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, -1417790647
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  %175 = select i1 %173, i32 1328801754, i32 -2013544909
  store i32 %175, i32* %22
  br label %225

; <label>:176:                                    ; preds = %23
  %177 = load i32, i32* @x.677
  %178 = load i32, i32* @y.678
  %179 = add i32 %177, 2051356899
  %180 = sub i32 %179, 1
  %181 = sub i32 %180, 2051356899
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 false, true
  %190 = and i1 %187, false
  %191 = and i1 %185, %189
  %192 = and i1 %188, false
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 false, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  %203 = select i1 %201, i32 -1267805368, i32 -2013544909
  store i32 %203, i32* %22
  br label %225

; <label>:204:                                    ; preds = %23
  store i32 -1285243204, i32* %22
  br label %225

; <label>:205:                                    ; preds = %23
  %206 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  %207 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %206, align 8
  %208 = bitcast %"struct.std::_Rb_tree_node"* %207 to %"struct.std::_Rb_tree_node_base"*
  %209 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %10
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %209, %"struct.std::_Rb_tree_node_base"* %208) #3
  %210 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %10
  %211 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %210, i32 0, i32 0
  %212 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %211, align 8
  ret %"struct.std::_Rb_tree_node_base"* %212

; <label>:213:                                    ; preds = %23
  %214 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %215 = alloca %"class.std::_Rb_tree"*, align 8
  %216 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %217 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %218 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %215, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %216, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %217, align 8
  store i64* %3, i64** %218, align 8
  %219 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %215, align 8
  store i32 464723447, i32* %22
  br label %225

; <label>:220:                                    ; preds = %23
  %221 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %222 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %221, align 8
  %223 = icmp ne %"struct.std::_Rb_tree_node"* %222, null
  store i32 -1599170384, i32* %22
  br label %225

; <label>:224:                                    ; preds = %23
  store i32 1328801754, i32* %22
  br label %225

; <label>:225:                                    ; preds = %224, %220, %213, %204, %176, %160, %154, %145, %134, %131, %100, %72, %71, %34, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_upper_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree"*
  %6 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %7 = alloca %"class.std::_Rb_tree"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %10 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %7, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %8, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %9, align 8
  store i64* %3, i64** %10, align 8
  %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7, align 8
  store %"class.std::_Rb_tree"* %11, %"class.std::_Rb_tree"** %5
  %12 = alloca i32
  store i32 -1933641879, i32* %12
  br label %13

; <label>:13:                                     ; preds = %4, %44
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1933641879, label %16
    i32 -728126666, label %20
    i32 -88886650, label %29
    i32 1093722713, label %34
    i32 259553608, label %38
    i32 -1032582100, label %39
  ]

; <label>:15:                                     ; preds = %13
  br label %44

; <label>:16:                                     ; preds = %13
  %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %18 = icmp ne %"struct.std::_Rb_tree_node"* %17, null
  %19 = select i1 %18, i32 -728126666, i32 -1032582100
  store i32 %19, i32* %12
  br label %44

; <label>:20:                                     ; preds = %13
  %21 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %22 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %22, i32 0, i32 0
  %24 = load i64*, i64** %10, align 8
  %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %26 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %25)
  %27 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %23, i64* dereferenceable(8) %24, i64* dereferenceable(8) %26)
  %28 = select i1 %27, i32 -88886650, i32 1093722713
  store i32 %28, i32* %12
  br label %44

; <label>:29:                                     ; preds = %13
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  store %"struct.std::_Rb_tree_node"* %30, %"struct.std::_Rb_tree_node"** %9, align 8
  %31 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %32 = bitcast %"struct.std::_Rb_tree_node"* %31 to %"struct.std::_Rb_tree_node_base"*
  %33 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %32) #3
  store %"struct.std::_Rb_tree_node"* %33, %"struct.std::_Rb_tree_node"** %8, align 8
  store i32 259553608, i32* %12
  br label %44

; <label>:34:                                     ; preds = %13
  %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %36 = bitcast %"struct.std::_Rb_tree_node"* %35 to %"struct.std::_Rb_tree_node_base"*
  %37 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %36) #3
  store %"struct.std::_Rb_tree_node"* %37, %"struct.std::_Rb_tree_node"** %8, align 8
  store i32 259553608, i32* %12
  br label %44

; <label>:38:                                     ; preds = %13
  store i32 -1933641879, i32* %12
  br label %44

; <label>:39:                                     ; preds = %13
  %40 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %41 = bitcast %"struct.std::_Rb_tree_node"* %40 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %6, %"struct.std::_Rb_tree_node_base"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  ret %"struct.std::_Rb_tree_node_base"* %43

; <label>:44:                                     ; preds = %38, %34, %29, %20, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIxES1_EC2IS1_S1_vEEOT_OT0_(%"struct.std::pair.41"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair.41"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::pair.41"* %0, %"struct.std::pair.41"** %4, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %5, align 8
  store %"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_iterator"** %6, align 8
  %7 = load %"struct.std::pair.41"*, %"struct.std::pair.41"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9) #3
  %11 = bitcast %"struct.std::_Rb_tree_iterator"* %8 to i8*
  %12 = bitcast %"struct.std::_Rb_tree_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"struct.std::pair.41", %"struct.std::pair.41"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %14) #3
  %16 = bitcast %"struct.std::_Rb_tree_iterator"* %13 to i8*
  %17 = bitcast %"struct.std::_Rb_tree_iterator"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxES7_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"class.std::_Rb_tree"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %12 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %17, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %9, align 8
  %18 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9, align 8
  store %"class.std::_Rb_tree"* %18, %"class.std::_Rb_tree"** %6
  %19 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %20 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree"* %19) #3
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %10, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %11) #3
  %22 = alloca i32
  store i32 1946780996, i32* %22
  %23 = alloca i1
  br label %24

; <label>:24:                                     ; preds = %3, %150
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 1946780996, label %27
    i32 6429921, label %30
    i32 -2108829508, label %46
    i32 -2060549343, label %78
    i32 577456996, label %80
    i32 -465127597, label %83
    i32 -1364173607, label %85
    i32 290400419, label %86
    i32 -604350566, label %113
    i32 -597243167, label %130
    i32 1692235807, label %133
    i32 -972132947, label %141
    i32 -387490644, label %142
    i32 674459206, label %143
    i32 -1424369077, label %148
  ]

; <label>:26:                                     ; preds = %24
  br label %150

; <label>:27:                                     ; preds = %24
  %28 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"* %7, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %10) #3
  %29 = select i1 %28, i32 6429921, i32 577456996
  store i32 %29, i32* %22
  store i1 false, i1* %23
  br label %150

; <label>:30:                                     ; preds = %24
  %31 = load i32, i32* @x.683
  %32 = load i32, i32* @y.684
  %33 = sub i32 %31, -932971689
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -932971689
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -2108829508, i32 674459206
  store i32 %45, i32* %22
  br label %150

; <label>:46:                                     ; preds = %24
  %47 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %48 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %47) #3
  %49 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %48, %"struct.std::_Rb_tree_node_base"** %49, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %12, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %13) #3
  %50 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"* %8, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %12) #3
  store i1 %50, i1* %5
  %51 = load i32, i32* @x.683
  %52 = load i32, i32* @y.684
  %53 = add i32 %51, 1835348096
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 1835348096
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -2060549343, i32 674459206
  store i32 %77, i32* %22
  br label %150

; <label>:78:                                     ; preds = %24
  store i32 577456996, i32* %22
  %79 = load volatile i1, i1* %5
  store i1 %79, i1* %23
  br label %150

; <label>:80:                                     ; preds = %24
  %81 = load i1, i1* %23
  %82 = select i1 %81, i32 -465127597, i32 -1364173607
  store i32 %82, i32* %22
  br label %150

; <label>:83:                                     ; preds = %24
  %84 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5clearEv(%"class.std::_Rb_tree"* %84) #3
  store i32 -387490644, i32* %22
  br label %150

; <label>:85:                                     ; preds = %24
  store i32 290400419, i32* %22
  br label %150

; <label>:86:                                     ; preds = %24
  %87 = load i32, i32* @x.683
  %88 = load i32, i32* @y.684
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  %112 = select i1 %110, i32 -604350566, i32 -1424369077
  store i32 %112, i32* %22
  br label %150

; <label>:113:                                    ; preds = %24
  %114 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %7, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %8) #3
  store i1 %114, i1* %4
  %115 = load i32, i32* @x.683
  %116 = load i32, i32* @y.684
  %117 = sub i32 %115, 394587560
  %118 = sub i32 %117, 1
  %119 = add i32 %118, 394587560
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  %129 = select i1 %127, i32 -597243167, i32 -1424369077
  store i32 %129, i32* %22
  br label %150

; <label>:130:                                    ; preds = %24
  %131 = load volatile i1, i1* %4
  %132 = select i1 %131, i32 1692235807, i32 -972132947
  store i32 %132, i32* %22
  br label %150

; <label>:133:                                    ; preds = %24
  %134 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorIxEppEi(%"struct.std::_Rb_tree_const_iterator"* %7, i32 0) #3
  %135 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %134, %"struct.std::_Rb_tree_node_base"** %135, align 8
  %136 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %14, i32 0, i32 0
  %137 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %136, align 8
  %138 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %139 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxE(%"class.std::_Rb_tree"* %138, %"struct.std::_Rb_tree_node_base"* %137)
  %140 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %15, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %139, %"struct.std::_Rb_tree_node_base"** %140, align 8
  store i32 290400419, i32* %22
  br label %150

; <label>:141:                                    ; preds = %24
  store i32 -387490644, i32* %22
  br label %150

; <label>:142:                                    ; preds = %24
  ret void

; <label>:143:                                    ; preds = %24
  %144 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %145 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %144) #3
  %146 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %145, %"struct.std::_Rb_tree_node_base"** %146, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %12, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %13) #3
  %147 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_const_iterator"* %8, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %12) #3
  store i32 -2108829508, i32* %22
  br label %150

; <label>:148:                                    ; preds = %24
  %149 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %7, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %8) #3
  store i32 -604350566, i32* %22
  br label %150

; <label>:150:                                    ; preds = %148, %143, %141, %133, %130, %113, %86, %85, %83, %80, %78, %46, %30, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.685
  %6 = load i32, i32* @y.686
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 443852460, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 443852460, label %18
    i32 1760083282, label %26
    i32 1447258119, label %60
    i32 -2103075004, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1760083282, i32 -2103075004
  store i32 %25, i32* %14
  br label %70

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %28 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %29, i32 0, i32 0
  %31 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %30, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %27, %"struct.std::_Rb_tree_node_base"* %31) #3
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %27, i32 0, i32 0
  %33 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %32, align 8
  store %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"** %2
  %34 = load i32, i32* @x.685
  %35 = load i32, i32* @y.686
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1447258119, i32 -2103075004
  store i32 %59, i32* %14
  br label %70

; <label>:60:                                     ; preds = %15
  %61 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %61

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %64 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %64, align 8
  %65 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %65, i32 0, i32 0
  %67 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %66, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %63, %"struct.std::_Rb_tree_node_base"* %67) #3
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %63, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  store i32 1760083282, i32* %14
  br label %70

; <label>:70:                                     ; preds = %62, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5clearEv(%"class.std::_Rb_tree"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %3) #3
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %3, %"struct.std::_Rb_tree_node"* %4)
          to label %5 unwind label %61

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.689
  %7 = load i32, i32* @y.690
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %64

; <label>:31:                                     ; preds = %5, %64
  %32 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %33 = load i32, i32* @x.689
  %34 = load i32, i32* @y.690
  %35 = sub i32 %33, 164038340
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 164038340
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %64

; <label>:59:                                     ; preds = %31
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %32)
          to label %60 unwind label %61

; <label>:60:                                     ; preds = %59
  ret void

; <label>:61:                                     ; preds = %59, %1
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  call void @__clang_call_terminate(i8* %63) #10
  unreachable

; <label>:64:                                     ; preds = %31, %5
  %65 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %10 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  %11 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 8, i1 false)
  %12 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIxEppEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %13 = bitcast %"struct.std::_Rb_tree_const_iterator"* %7 to i8*
  %14 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxE(%"class.std::_Rb_tree"* %9, %"struct.std::_Rb_tree_node_base"* %16)
  %17 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIxE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %19, align 8
  ret %"struct.std::_Rb_tree_node_base"* %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorIxEppEi(%"struct.std::_Rb_tree_const_iterator"*, i32) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %5 = alloca i32, align 4
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %7 = bitcast %"struct.std::_Rb_tree_const_iterator"* %3 to i8*
  %8 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 8, i1 false)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %10) #14
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret %"struct.std::_Rb_tree_node_base"* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  store %"class.std::_Rb_tree"* %7, %"class.std::_Rb_tree"** %3
  %8 = alloca i32
  store i32 -1723370109, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %73
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -1723370109, label %12
    i32 -2030279037, label %16
    i32 -1566187811, label %27
    i32 -479574368, label %55
    i32 489076431, label %71
    i32 678069132, label %72
  ]

; <label>:11:                                     ; preds = %9
  br label %73

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %14 = icmp ne %"struct.std::_Rb_tree_node"* %13, null
  %15 = select i1 %14, i32 -2030279037, i32 -1566187811
  store i32 %15, i32* %8
  br label %73

; <label>:16:                                     ; preds = %9
  %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %18) #3
  %20 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %20, %"struct.std::_Rb_tree_node"* %19)
  %21 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %22 = bitcast %"struct.std::_Rb_tree_node"* %21 to %"struct.std::_Rb_tree_node_base"*
  %23 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %22) #3
  store %"struct.std::_Rb_tree_node"* %23, %"struct.std::_Rb_tree_node"** %6, align 8
  %24 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %25 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %25, %"struct.std::_Rb_tree_node"* %24) #3
  %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %26, %"struct.std::_Rb_tree_node"** %5, align 8
  store i32 -1723370109, i32* %8
  br label %73

; <label>:27:                                     ; preds = %9
  %28 = load i32, i32* @x.697
  %29 = load i32, i32* @y.698
  %30 = add i32 %28, 1695953776
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1695953776
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -479574368, i32 678069132
  store i32 %54, i32* %8
  br label %73

; <label>:55:                                     ; preds = %9
  %56 = load i32, i32* @x.697
  %57 = load i32, i32* @y.698
  %58 = sub i32 %56, -2030387701
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -2030387701
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 489076431, i32 678069132
  store i32 %70, i32* %8
  br label %73

; <label>:71:                                     ; preds = %9
  ret void

; <label>:72:                                     ; preds = %9
  store i32 -479574368, i32* %8
  br label %73

; <label>:73:                                     ; preds = %72, %55, %27, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.699
  %5 = load i32, i32* @y.700
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -827665736, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %76
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -827665736, label %17
    i32 419085392, label %37
    i32 300829054, label %63
    i32 589504780, label %64
  ]

; <label>:16:                                     ; preds = %14
  br label %76

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 419085392, i32 589504780
  store i32 %36, i32* %13
  br label %76

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %38, align 8
  %39 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %39, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %40, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %39, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %39, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %42, %"struct.std::_Rb_tree_node_base"** %44, align 8
  %45 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %39, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %39, i32 0, i32 1
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %46, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %39, i32 0, i32 2
  store i64 0, i64* %48, align 8
  %49 = load i32, i32* @x.699
  %50 = load i32, i32* @y.700
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 300829054, i32 589504780
  store i32 %62, i32* %13
  br label %76

; <label>:63:                                     ; preds = %14
  ret void

; <label>:64:                                     ; preds = %14
  %65 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %65, align 8
  %66 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %65, align 8
  %67 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %66, i32 0, i32 1
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %67, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %69 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %66, i32 0, i32 1
  %70 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %66, i32 0, i32 1
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %70, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %69, %"struct.std::_Rb_tree_node_base"** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %66, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %66, i32 0, i32 1
  %74 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %73, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %72, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %75 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %66, i32 0, i32 2
  store i64 0, i64* %75, align 8
  store i32 419085392, i32* %13
  br label %76

; <label>:76:                                     ; preds = %64, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.30"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %8 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %7)
          to label %9 unwind label %12

; <label>:9:                                      ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.30"* dereferenceable(1) %6, i64* %8)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %9
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  ret void

; <label>:12:                                     ; preds = %9, %2
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  call void @__clang_call_terminate(i8* %14) #10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.30"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.30"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::allocator.30"* %0, %"class.std::allocator.30"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::allocator.30"*, %"class.std::allocator.30"** %3, align 8
  %6 = bitcast %"class.std::allocator.30"* %5 to %"class.__gnu_cxx::new_allocator.31"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.31"* %6, i64* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.31"*, i64*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.31"*, align 8
  %4 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.31"* %0, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.31"*, %"class.__gnu_cxx::new_allocator.31"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIxEppEv(%"struct.std::_Rb_tree_const_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #14
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_const_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_erase_auxESt23_Rb_tree_const_iteratorIxE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %6, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %10 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %7, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %10, i32 0, i32 1
  %12 = call %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %11) #3
  %13 = bitcast %"struct.std::_Rb_tree_node_base"* %12 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %5, align 8
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %7, %"struct.std::_Rb_tree_node"* %14) #3
  %15 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %7, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 0, %17
  %19 = sub i64 0, -1
  %20 = add i64 %18, %19
  %21 = sub i64 0, %20
  %22 = add i64 %17, -1
  store i64 %21, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: nounwind
declare %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4findERKx(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Rb_tree"*
  %5 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store i64* %1, i64** %7, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  store %"class.std::_Rb_tree"* %10, %"class.std::_Rb_tree"** %4
  %11 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %12 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %11) #3
  %13 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %14 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree"* %13) #3
  %15 = load i64*, i64** %7, align 8
  %16 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %17 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_lower_boundEPSt13_Rb_tree_nodeIxES8_RKx(%"class.std::_Rb_tree"* %16, %"struct.std::_Rb_tree_node"* %12, %"struct.std::_Rb_tree_node"* %14, i64* dereferenceable(8) %15)
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %20 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %19) #3
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %22 = alloca i32
  store i32 1168173311, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %208
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 1168173311, label %26
    i32 513016297, label %29
    i32 -982534828, label %56
    i32 909671870, label %80
    i32 -369759110, label %83
    i32 1297029840, label %99
    i32 -1956224477, label %129
    i32 -1661401822, label %130
    i32 1436391467, label %158
    i32 -2136060381, label %188
    i32 -761646501, label %189
    i32 285422796, label %192
    i32 -1366460179, label %201
    i32 -546109009, label %205
  ]

; <label>:25:                                     ; preds = %23
  br label %208

; <label>:26:                                     ; preds = %23
  %27 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %8, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9) #3
  %28 = select i1 %27, i32 -369759110, i32 513016297
  store i32 %28, i32* %22
  br label %208

; <label>:29:                                     ; preds = %23
  %30 = load i32, i32* @x.713
  %31 = load i32, i32* @y.714
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -982534828, i32 285422796
  store i32 %55, i32* %22
  br label %208

; <label>:56:                                     ; preds = %23
  %57 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %58 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %58, i32 0, i32 0
  %60 = load i64*, i64** %7, align 8
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %63 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %62)
  %64 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %59, i64* dereferenceable(8) %60, i64* dereferenceable(8) %63)
  store i1 %64, i1* %3
  %65 = load i32, i32* @x.713
  %66 = load i32, i32* @y.714
  %67 = add i32 %65, 1164423912
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 1164423912
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 909671870, i32 285422796
  store i32 %79, i32* %22
  br label %208

; <label>:80:                                     ; preds = %23
  %81 = load volatile i1, i1* %3
  %82 = select i1 %81, i32 -369759110, i32 -1661401822
  store i32 %82, i32* %22
  br label %208

; <label>:83:                                     ; preds = %23
  %84 = load i32, i32* @x.713
  %85 = load i32, i32* @y.714
  %86 = sub i32 %84, -1302949554
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -1302949554
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 1297029840, i32 -1366460179
  store i32 %98, i32* %22
  br label %208

; <label>:99:                                     ; preds = %23
  %100 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %101 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %100) #3
  %102 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %101, %"struct.std::_Rb_tree_node_base"** %102, align 8
  %103 = load i32, i32* @x.713
  %104 = load i32, i32* @y.714
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 -1956224477, i32 -1366460179
  store i32 %128, i32* %22
  br label %208

; <label>:129:                                    ; preds = %23
  store i32 -761646501, i32* %22
  br label %208

; <label>:130:                                    ; preds = %23
  %131 = load i32, i32* @x.713
  %132 = load i32, i32* @y.714
  %133 = sub i32 %131, -1699184683
  %134 = sub i32 %133, 1
  %135 = add i32 %134, -1699184683
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 true, true
  %144 = and i1 %141, true
  %145 = and i1 %139, %143
  %146 = and i1 %142, true
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 true, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  %157 = select i1 %155, i32 1436391467, i32 -546109009
  store i32 %157, i32* %22
  br label %208

; <label>:158:                                    ; preds = %23
  %159 = bitcast %"struct.std::_Rb_tree_iterator"* %5 to i8*
  %160 = bitcast %"struct.std::_Rb_tree_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %159, i8* %160, i64 8, i32 8, i1 false)
  %161 = load i32, i32* @x.713
  %162 = load i32, i32* @y.714
  %163 = add i32 %161, 212465069
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, 212465069
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 true, true
  %174 = and i1 %171, true
  %175 = and i1 %169, %173
  %176 = and i1 %172, true
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 true, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  %187 = select i1 %185, i32 -2136060381, i32 -546109009
  store i32 %187, i32* %22
  br label %208

; <label>:188:                                    ; preds = %23
  store i32 -761646501, i32* %22
  br label %208

; <label>:189:                                    ; preds = %23
  %190 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %191 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %190, align 8
  ret %"struct.std::_Rb_tree_node_base"* %191

; <label>:192:                                    ; preds = %23
  %193 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %194 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %193, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %194, i32 0, i32 0
  %196 = load i64*, i64** %7, align 8
  %197 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %198 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %197, align 8
  %199 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %198)
  %200 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less.33"* %195, i64* dereferenceable(8) %196, i64* dereferenceable(8) %199)
  store i32 -982534828, i32* %22
  br label %208

; <label>:201:                                    ; preds = %23
  %202 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %203 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"* %202) #3
  %204 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %203, %"struct.std::_Rb_tree_node_base"** %204, align 8
  store i32 1297029840, i32* %22
  br label %208

; <label>:205:                                    ; preds = %23
  %206 = bitcast %"struct.std::_Rb_tree_iterator"* %5 to i8*
  %207 = bitcast %"struct.std::_Rb_tree_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %206, i8* %207, i64 8, i32 8, i1 false)
  store i32 1436391467, i32* %22
  br label %208

; <label>:208:                                    ; preds = %205, %201, %192, %188, %158, %130, %129, %99, %83, %80, %56, %29, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.719
  %3 = load i32, i32* @y.720
  %4 = sub i32 %2, -531219450
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -531219450
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %46

; <label>:16:                                     ; preds = %1, %46
  %17 = alloca %"class.std::_Rb_tree"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %17, align 8
  %20 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %17, align 8
  %21 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %20) #3
  %22 = load i32, i32* @x.719
  %23 = load i32, i32* @y.720
  %24 = add i32 %22, -1267048596
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -1267048596
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %46

; <label>:36:                                     ; preds = %16
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree"* %20, %"struct.std::_Rb_tree_node"* %21)
          to label %37 unwind label %39

; <label>:37:                                     ; preds = %36
  %38 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %20, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %38) #3
  ret void

; <label>:39:                                     ; preds = %36
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %18, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %19, align 4
  %43 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %20, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %43) #3
  br label %44

; <label>:44:                                     ; preds = %39
  %45 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %45) #10
  unreachable

; <label>:46:                                     ; preds = %16, %1
  %47 = alloca %"class.std::_Rb_tree"*, align 8
  %48 = alloca i8*
  %49 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %47, align 8
  %50 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %47, align 8
  %51 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree"* %50) #3
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.721
  %5 = load i32, i32* @y.722
  %6 = add i32 %4, 977143695
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 977143695
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1411043013, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1411043013, label %18
    i32 -1980371647, label %38
    i32 957939562, label %68
    i32 272331694, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1980371647, i32 272331694
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %39, align 8
  %40 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %40 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.30"* %41) #3
  %42 = load i32, i32* @x.721
  %43 = load i32, i32* @y.722
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 957939562, i32 272331694
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %70, align 8
  %71 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %70, align 8
  %72 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %71 to %"class.std::allocator.30"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.30"* %72) #3
  store i32 -1980371647, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector"*
  %5 = alloca i64**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.723
  %9 = load i32, i32* @y.724
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 755077176, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %124
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 755077176, label %21
    i32 1791281746, label %41
    i32 1551325864, label %83
    i32 -1889023818, label %86
    i32 411187551, label %105
    i32 -1485908981, label %110
    i32 1234911053, label %111
  ]

; <label>:20:                                     ; preds = %18
  br label %124

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1791281746, i32 1234911053
  store i32 %40, i32* %17
  br label %124

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector"*, align 8
  %43 = alloca i64*, align 8
  store i64** %43, i64*** %5
  store %"class.std::vector"* %0, %"class.std::vector"** %42, align 8
  %44 = load volatile i64**, i64*** %5
  store i64* %1, i64** %44, align 8
  %45 = load %"class.std::vector"*, %"class.std::vector"** %42, align 8
  store %"class.std::vector"* %45, %"class.std::vector"** %4
  %46 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %47 = bitcast %"class.std::vector"* %46 to %"struct.std::_Vector_base"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %48, i32 0, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %52 = bitcast %"class.std::vector"* %51 to %"struct.std::_Vector_base"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %53, i32 0, i32 2
  %55 = load i64*, i64** %54, align 8
  %56 = icmp ne i64* %50, %55
  store i1 %56, i1* %3
  %57 = load i32, i32* @x.723
  %58 = load i32, i32* @y.724
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 1551325864, i32 1234911053
  store i32 %82, i32* %17
  br label %124

; <label>:83:                                     ; preds = %18
  %84 = load volatile i1, i1* %3
  %85 = select i1 %84, i32 -1889023818, i32 411187551
  store i32 %85, i32* %17
  br label %124

; <label>:86:                                     ; preds = %18
  %87 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %88 = bitcast %"class.std::vector"* %87 to %"struct.std::_Vector_base"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %88, i32 0, i32 0
  %90 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %89 to %"class.std::allocator.0"*
  %91 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %92 = bitcast %"class.std::vector"* %91 to %"struct.std::_Vector_base"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %93, i32 0, i32 1
  %95 = load i64*, i64** %94, align 8
  %96 = load volatile i64**, i64*** %5
  %97 = load i64*, i64** %96, align 8
  %98 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %97) #3
  call void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %90, i64* %95, i64* dereferenceable(8) %98)
  %99 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %100 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %101 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %101, i32 0, i32 1
  %103 = load i64*, i64** %102, align 8
  %104 = getelementptr inbounds i64, i64* %103, i32 1
  store i64* %104, i64** %102, align 8
  store i32 -1485908981, i32* %17
  br label %124

; <label>:105:                                    ; preds = %18
  %106 = load volatile i64**, i64*** %5
  %107 = load i64*, i64** %106, align 8
  %108 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %107) #3
  %109 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  call void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector"* %109, i64* dereferenceable(8) %108)
  store i32 -1485908981, i32* %17
  br label %124

; <label>:110:                                    ; preds = %18
  ret void

; <label>:111:                                    ; preds = %18
  %112 = alloca %"class.std::vector"*, align 8
  %113 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %112, align 8
  store i64* %1, i64** %113, align 8
  %114 = load %"class.std::vector"*, %"class.std::vector"** %112, align 8
  %115 = bitcast %"class.std::vector"* %114 to %"struct.std::_Vector_base"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %116, i32 0, i32 1
  %118 = load i64*, i64** %117, align 8
  %119 = bitcast %"class.std::vector"* %114 to %"struct.std::_Vector_base"*
  %120 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %119, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %120, i32 0, i32 2
  %122 = load i64*, i64** %121, align 8
  %123 = icmp ne i64* %118, %122
  store i32 1791281746, i32* %17
  br label %124

; <label>:124:                                    ; preds = %111, %105, %86, %83, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.727
  %7 = load i32, i32* @y.728
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 285469285, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 285469285, label %19
    i32 512825424, label %39
    i32 1200524930, label %62
    i32 -1843240190, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 512825424, i32 -1843240190
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.0"*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i64*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %40, align 8
  store i64* %1, i64** %41, align 8
  store i64* %2, i64** %42, align 8
  %43 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %40, align 8
  %44 = bitcast %"class.std::allocator.0"* %43 to %"class.__gnu_cxx::new_allocator.1"*
  %45 = load i64*, i64** %41, align 8
  %46 = load i64*, i64** %42, align 8
  %47 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %46) #3
  call void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"* %44, i64* %45, i64* dereferenceable(8) %47)
  %48 = load i32, i32* @x.727
  %49 = load i32, i32* @y.728
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1200524930, i32 -1843240190
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator.0"*, align 8
  %65 = alloca i64*, align 8
  %66 = alloca i64*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %64, align 8
  store i64* %1, i64** %65, align 8
  store i64* %2, i64** %66, align 8
  %67 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %64, align 8
  %68 = bitcast %"class.std::allocator.0"* %67 to %"class.__gnu_cxx::new_allocator.1"*
  %69 = load i64*, i64** %65, align 8
  %70 = load i64*, i64** %66, align 8
  %71 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %70) #3
  call void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"* %68, i64* %69, i64* dereferenceable(8) %71)
  store i32 512825424, i32* %15
  br label %72

; <label>:72:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64* %1, i64** %4, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %5, align 8
  %14 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %12, i64 %13)
  store i64* %14, i64** %6, align 8
  %15 = load i64*, i64** %6, align 8
  store i64* %15, i64** %7, align 8
  %16 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %17 to %"class.std::allocator.0"*
  %19 = load i64*, i64** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %10) #3
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = load i64*, i64** %4, align 8
  %23 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %18, i64* %21, i64* dereferenceable(8) %23)
          to label %24 unwind label %136

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.731
  %26 = load i32, i32* @y.732
  %27 = sub i32 %25, 1148077408
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 1148077408
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %388

; <label>:51:                                     ; preds = %24, %388
  store i64* null, i64** %7, align 8
  %52 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load i64*, i64** %58, align 8
  %60 = load i64*, i64** %6, align 8
  %61 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %62 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %61) #3
  %63 = load i32, i32* @x.731
  %64 = load i32, i32* @y.732
  %65 = sub i32 %63, -1498175727
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1498175727
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %388

; <label>:89:                                     ; preds = %51
  %90 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %55, i64* %59, i64* %60, %"class.std::allocator.0"* dereferenceable(1) %62)
          to label %91 unwind label %136

; <label>:91:                                     ; preds = %89
  %92 = load i32, i32* @x.731
  %93 = load i32, i32* @y.732
  %94 = sub i32 %92, -1839171203
  %95 = sub i32 %94, 1
  %96 = add i32 %95, -1839171203
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %400

; <label>:106:                                    ; preds = %91, %400
  store i64* %90, i64** %7, align 8
  %107 = load i64*, i64** %7, align 8
  %108 = getelementptr inbounds i64, i64* %107, i32 1
  store i64* %108, i64** %7, align 8
  %109 = load i32, i32* @x.731
  %110 = load i32, i32* @y.732
  %111 = add i32 %109, 456674162
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, 456674162
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %400

; <label>:135:                                    ; preds = %106
  br label %251

; <label>:136:                                    ; preds = %89, %2
  %137 = landingpad { i8*, i32 }
          catch i8* null
  %138 = extractvalue { i8*, i32 } %137, 0
  store i8* %138, i8** %8, align 8
  %139 = extractvalue { i8*, i32 } %137, 1
  store i32 %139, i32* %9, align 4
  br label %140

; <label>:140:                                    ; preds = %136
  %141 = load i32, i32* @x.731
  %142 = load i32, i32* @y.732
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %403

; <label>:166:                                    ; preds = %140, %403
  %167 = load i8*, i8** %8, align 8
  %168 = call i8* @__cxa_begin_catch(i8* %167) #3
  %169 = load i64*, i64** %7, align 8
  %170 = icmp ne i64* %169, null
  %171 = load i32, i32* @x.731
  %172 = load i32, i32* @y.732
  %173 = add i32 %171, -2012648523
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, -2012648523
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %403

; <label>:185:                                    ; preds = %166
  br i1 %170, label %198, label %186

; <label>:186:                                    ; preds = %185
  %187 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %187, i32 0, i32 0
  %189 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %188 to %"class.std::allocator.0"*
  %190 = load i64*, i64** %6, align 8
  %191 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %10) #3
  %192 = getelementptr inbounds i64, i64* %190, i64 %191
  invoke void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1) %189, i64* %192)
          to label %193 unwind label %194

; <label>:193:                                    ; preds = %186
  br label %204

; <label>:194:                                    ; preds = %249, %248, %198, %186
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %8, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %250 unwind label %342

; <label>:198:                                    ; preds = %185
  %199 = load i64*, i64** %6, align 8
  %200 = load i64*, i64** %7, align 8
  %201 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %202 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %201) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %199, i64* %200, %"class.std::allocator.0"* dereferenceable(1) %202)
          to label %203 unwind label %194

; <label>:203:                                    ; preds = %198
  br label %204

; <label>:204:                                    ; preds = %203, %193
  %205 = load i32, i32* @x.731
  %206 = load i32, i32* @y.732
  %207 = sub i32 0, 1
  %208 = add i32 %205, %207
  %209 = sub i32 %205, 1
  %210 = mul i32 %205, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %206, 10
  %214 = and i1 %212, %213
  %215 = xor i1 %212, %213
  %216 = or i1 %214, %215
  %217 = or i1 %212, %213
  br i1 %216, label %218, label %408

; <label>:218:                                    ; preds = %204, %408
  %219 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %220 = load i64*, i64** %6, align 8
  %221 = load i64, i64* %5, align 8
  %222 = load i32, i32* @x.731
  %223 = load i32, i32* @y.732
  %224 = sub i32 %222, 1638348540
  %225 = sub i32 %224, 1
  %226 = add i32 %225, 1638348540
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = xor i1 %230, true
  %233 = xor i1 %231, true
  %234 = xor i1 true, true
  %235 = and i1 %232, true
  %236 = and i1 %230, %234
  %237 = and i1 %233, true
  %238 = and i1 %231, %234
  %239 = or i1 %235, %236
  %240 = or i1 %237, %238
  %241 = xor i1 %239, %240
  %242 = or i1 %232, %233
  %243 = xor i1 %242, true
  %244 = or i1 true, %234
  %245 = and i1 %243, %244
  %246 = or i1 %241, %245
  %247 = or i1 %230, %231
  br i1 %246, label %248, label %408

; <label>:248:                                    ; preds = %218
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %219, i64* %220, i64 %221)
          to label %249 unwind label %194

; <label>:249:                                    ; preds = %248
  invoke void @__cxa_rethrow() #13
          to label %387 unwind label %194

; <label>:250:                                    ; preds = %194
  br label %337

; <label>:251:                                    ; preds = %135
  %252 = load i32, i32* @x.731
  %253 = load i32, i32* @y.732
  %254 = sub i32 0, 1
  %255 = add i32 %252, %254
  %256 = sub i32 %252, 1
  %257 = mul i32 %252, %255
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %253, 10
  %261 = and i1 %259, %260
  %262 = xor i1 %259, %260
  %263 = or i1 %261, %262
  %264 = or i1 %259, %260
  br i1 %263, label %265, label %412

; <label>:265:                                    ; preds = %251, %412
  %266 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %267 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %266, i32 0, i32 0
  %268 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %267, i32 0, i32 0
  %269 = load i64*, i64** %268, align 8
  %270 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %271 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %270, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %271, i32 0, i32 1
  %273 = load i64*, i64** %272, align 8
  %274 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %275 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %274) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %269, i64* %273, %"class.std::allocator.0"* dereferenceable(1) %275)
  %276 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %277 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %278 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %277, i32 0, i32 0
  %279 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %278, i32 0, i32 0
  %280 = load i64*, i64** %279, align 8
  %281 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %282 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %281, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %282, i32 0, i32 2
  %284 = load i64*, i64** %283, align 8
  %285 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %286 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %285, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %286, i32 0, i32 0
  %288 = load i64*, i64** %287, align 8
  %289 = ptrtoint i64* %284 to i64
  %290 = ptrtoint i64* %288 to i64
  %291 = add i64 %289, -3537635979589397244
  %292 = sub i64 %291, %290
  %293 = sub i64 %292, -3537635979589397244
  %294 = sub i64 %289, %290
  %295 = sdiv exact i64 %293, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %276, i64* %280, i64 %295)
  %296 = load i64*, i64** %6, align 8
  %297 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %298 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %298, i32 0, i32 0
  store i64* %296, i64** %299, align 8
  %300 = load i64*, i64** %7, align 8
  %301 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %302 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %302, i32 0, i32 1
  store i64* %300, i64** %303, align 8
  %304 = load i64*, i64** %6, align 8
  %305 = load i64, i64* %5, align 8
  %306 = getelementptr inbounds i64, i64* %304, i64 %305
  %307 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %308 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %307, i32 0, i32 0
  %309 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %308, i32 0, i32 2
  store i64* %306, i64** %309, align 8
  %310 = load i32, i32* @x.731
  %311 = load i32, i32* @y.732
  %312 = sub i32 %310, -829288902
  %313 = sub i32 %312, 1
  %314 = add i32 %313, -829288902
  %315 = sub i32 %310, 1
  %316 = mul i32 %310, %314
  %317 = urem i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = icmp slt i32 %311, 10
  %320 = xor i1 %318, true
  %321 = xor i1 %319, true
  %322 = xor i1 true, true
  %323 = and i1 %320, true
  %324 = and i1 %318, %322
  %325 = and i1 %321, true
  %326 = and i1 %319, %322
  %327 = or i1 %323, %324
  %328 = or i1 %325, %326
  %329 = xor i1 %327, %328
  %330 = or i1 %320, %321
  %331 = xor i1 %330, true
  %332 = or i1 true, %322
  %333 = and i1 %331, %332
  %334 = or i1 %329, %333
  %335 = or i1 %318, %319
  br i1 %334, label %336, label %412

; <label>:336:                                    ; preds = %265
  ret void

; <label>:337:                                    ; preds = %250
  %338 = load i8*, i8** %8, align 8
  %339 = load i32, i32* %9, align 4
  %340 = insertvalue { i8*, i32 } undef, i8* %338, 0
  %341 = insertvalue { i8*, i32 } %340, i32 %339, 1
  resume { i8*, i32 } %341

; <label>:342:                                    ; preds = %194
  %343 = load i32, i32* @x.731
  %344 = load i32, i32* @y.732
  %345 = add i32 %343, -2041186376
  %346 = sub i32 %345, 1
  %347 = sub i32 %346, -2041186376
  %348 = sub i32 %343, 1
  %349 = mul i32 %343, %347
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %344, 10
  %353 = xor i1 %351, true
  %354 = xor i1 %352, true
  %355 = xor i1 false, true
  %356 = and i1 %353, false
  %357 = and i1 %351, %355
  %358 = and i1 %354, false
  %359 = and i1 %352, %355
  %360 = or i1 %356, %357
  %361 = or i1 %358, %359
  %362 = xor i1 %360, %361
  %363 = or i1 %353, %354
  %364 = xor i1 %363, true
  %365 = or i1 false, %355
  %366 = and i1 %364, %365
  %367 = or i1 %362, %366
  %368 = or i1 %351, %352
  br i1 %367, label %369, label %498

; <label>:369:                                    ; preds = %342, %498
  %370 = landingpad { i8*, i32 }
          catch i8* null
  %371 = extractvalue { i8*, i32 } %370, 0
  call void @__clang_call_terminate(i8* %371) #10
  %372 = load i32, i32* @x.731
  %373 = load i32, i32* @y.732
  %374 = add i32 %372, -220399107
  %375 = sub i32 %374, 1
  %376 = sub i32 %375, -220399107
  %377 = sub i32 %372, 1
  %378 = mul i32 %372, %376
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %373, 10
  %382 = and i1 %380, %381
  %383 = xor i1 %380, %381
  %384 = or i1 %382, %383
  %385 = or i1 %380, %381
  br i1 %384, label %386, label %498

; <label>:386:                                    ; preds = %369
  unreachable

; <label>:387:                                    ; preds = %249
  unreachable

; <label>:388:                                    ; preds = %51, %24
  store i64* null, i64** %7, align 8
  %389 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %390 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %389, i32 0, i32 0
  %391 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %390, i32 0, i32 0
  %392 = load i64*, i64** %391, align 8
  %393 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %394 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %393, i32 0, i32 0
  %395 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %394, i32 0, i32 1
  %396 = load i64*, i64** %395, align 8
  %397 = load i64*, i64** %6, align 8
  %398 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %399 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %398) #3
  br label %51

; <label>:400:                                    ; preds = %106, %91
  store i64* %90, i64** %7, align 8
  %401 = load i64*, i64** %7, align 8
  %402 = getelementptr inbounds i64, i64* %401, i32 1
  store i64* %402, i64** %7, align 8
  br label %106

; <label>:403:                                    ; preds = %166, %140
  %404 = load i8*, i8** %8, align 8
  %405 = call i8* @__cxa_begin_catch(i8* %404) #3
  %406 = load i64*, i64** %7, align 8
  %407 = icmp ne i64* %406, null
  br label %166

; <label>:408:                                    ; preds = %218, %204
  %409 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %410 = load i64*, i64** %6, align 8
  %411 = load i64, i64* %5, align 8
  br label %218

; <label>:412:                                    ; preds = %265, %251
  %413 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %414 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %413, i32 0, i32 0
  %415 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %414, i32 0, i32 0
  %416 = load i64*, i64** %415, align 8
  %417 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %418 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %417, i32 0, i32 0
  %419 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %418, i32 0, i32 1
  %420 = load i64*, i64** %419, align 8
  %421 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %422 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %421) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %416, i64* %420, %"class.std::allocator.0"* dereferenceable(1) %422)
  %423 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %424 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %425 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %424, i32 0, i32 0
  %426 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %425, i32 0, i32 0
  %427 = load i64*, i64** %426, align 8
  %428 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %429 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %428, i32 0, i32 0
  %430 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %429, i32 0, i32 2
  %431 = load i64*, i64** %430, align 8
  %432 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %433 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %432, i32 0, i32 0
  %434 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %433, i32 0, i32 0
  %435 = load i64*, i64** %434, align 8
  %436 = ptrtoint i64* %431 to i64
  %437 = ptrtoint i64* %435 to i64
  %438 = sub i64 %436, 8313279345221522945
  %439 = sub i64 %438, %437
  %440 = add i64 %439, 8313279345221522945
  %441 = sub i64 %436, %437
  %442 = mul i64 %440, %437
  %443 = shl i64 %436, %437
  %444 = shl i64 %436, %437
  %445 = shl i64 %436, %437
  %446 = sub i64 0, -8068344863196736402
  %447 = sub i64 %446, %436
  %448 = add i64 %447, -8068344863196736402
  %449 = sub i64 0, %436
  %450 = sub i64 0, %448
  %451 = sub i64 0, %437
  %452 = add i64 %450, %451
  %453 = sub i64 0, %452
  %454 = add i64 %448, %437
  %455 = shl i64 %436, %437
  %456 = add i64 0, -8799637059777425984
  %457 = sub i64 %456, %436
  %458 = sub i64 %457, -8799637059777425984
  %459 = sub i64 0, %436
  %460 = sub i64 0, %437
  %461 = sub i64 %458, %460
  %462 = add i64 %458, %437
  %463 = sub i64 0, -7679287903906546415
  %464 = sub i64 %463, %436
  %465 = add i64 %464, -7679287903906546415
  %466 = sub i64 0, %436
  %467 = add i64 %465, -4267994939640170446
  %468 = add i64 %467, %437
  %469 = sub i64 %468, -4267994939640170446
  %470 = add i64 %465, %437
  %471 = sub i64 0, %437
  %472 = add i64 %436, %471
  %473 = sub i64 %436, %437
  %474 = sub i64 0, 8103869951752008429
  %475 = sub i64 %474, %472
  %476 = add i64 %475, 8103869951752008429
  %477 = sub i64 0, %472
  %478 = sub i64 0, 8
  %479 = sub i64 %476, %478
  %480 = add i64 %476, 8
  %481 = shl i64 %472, 8
  %482 = shl i64 %472, 8
  %483 = sdiv exact i64 %472, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %423, i64* %427, i64 %483)
  %484 = load i64*, i64** %6, align 8
  %485 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %486 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %485, i32 0, i32 0
  %487 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %486, i32 0, i32 0
  store i64* %484, i64** %487, align 8
  %488 = load i64*, i64** %7, align 8
  %489 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %490 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %489, i32 0, i32 0
  %491 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %490, i32 0, i32 1
  store i64* %488, i64** %491, align 8
  %492 = load i64*, i64** %6, align 8
  %493 = load i64, i64* %5, align 8
  %494 = getelementptr inbounds i64, i64* %492, i64 %493
  %495 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %496 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %495, i32 0, i32 0
  %497 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %496, i32 0, i32 2
  store i64* %494, i64** %497, align 8
  br label %265

; <label>:498:                                    ; preds = %369, %342
  %499 = landingpad { i8*, i32 }
          catch i8* null
  %500 = extractvalue { i8*, i32 } %499, 0
  call void @__clang_call_terminate(i8* %500) #10
  br label %369
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"*, i64*, i64* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.733
  %7 = load i32, i32* @y.734
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1198730722, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1198730722, label %19
    i32 -264540809, label %39
    i32 -375696275, label %77
    i32 887392353, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -264540809, i32 887392353
  store i32 %38, i32* %15
  br label %89

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %40, align 8
  store i64* %1, i64** %41, align 8
  store i64* %2, i64** %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %40, align 8
  %44 = load i64*, i64** %41, align 8
  %45 = bitcast i64* %44 to i8*
  %46 = bitcast i8* %45 to i64*
  %47 = load i64*, i64** %42, align 8
  %48 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %47) #3
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %46, align 8
  %50 = load i32, i32* @x.733
  %51 = load i32, i32* @y.734
  %52 = sub i32 %50, 524283297
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 524283297
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -375696275, i32 887392353
  store i32 %76, i32* %15
  br label %89

; <label>:77:                                     ; preds = %16
  ret void

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %80 = alloca i64*, align 8
  %81 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %79, align 8
  store i64* %1, i64** %80, align 8
  store i64* %2, i64** %81, align 8
  %82 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %79, align 8
  %83 = load i64*, i64** %80, align 8
  %84 = bitcast i64* %83 to i8*
  %85 = bitcast i8* %84 to i64*
  %86 = load i64*, i64** %81, align 8
  %87 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %86) #3
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %85, align 8
  store i32 -264540809, i32* %15
  br label %89

; <label>:89:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector"*
  %9 = alloca %"class.std::vector"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  store %"class.std::vector"* %14, %"class.std::vector"** %8
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %16 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %15) #3
  %17 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %18 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %17) #3
  %19 = sub i64 0, %18
  %20 = add i64 %16, %19
  %21 = sub i64 %16, %18
  store i64 %20, i64* %7
  %22 = load i64, i64* %10, align 8
  store i64 %22, i64* %6
  %23 = alloca i32
  store i32 -622715795, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %162
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -622715795, label %28
    i32 -981809727, label %33
    i32 -1594399867, label %35
    i32 -2137099777, label %51
    i32 915149988, label %80
    i32 -494152018, label %83
    i32 1638744765, label %89
    i32 1739502195, label %92
    i32 1017992371, label %120
    i32 818075421, label %137
    i32 -111870078, label %139
    i32 1603311522, label %141
    i32 1391214057, label %160
  ]

; <label>:27:                                     ; preds = %25
  br label %162

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %7
  %30 = load volatile i64, i64* %6
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 -981809727, i32 -1594399867
  store i32 %32, i32* %23
  br label %162

; <label>:33:                                     ; preds = %25
  %34 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #13
  unreachable

; <label>:35:                                     ; preds = %25
  %36 = load i32, i32* @x.735
  %37 = load i32, i32* @y.736
  %38 = sub i32 %36, -734105306
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -734105306
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -2137099777, i32 1603311522
  store i32 %50, i32* %23
  br label %162

; <label>:51:                                     ; preds = %25
  %52 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %53 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %52) #3
  %54 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %55 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %54) #3
  store i64 %55, i64* %13, align 8
  %56 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 0, %57
  %59 = sub i64 %53, %58
  %60 = add i64 %53, %57
  store i64 %59, i64* %12, align 8
  %61 = load i64, i64* %12, align 8
  %62 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %63 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %62) #3
  %64 = icmp ult i64 %61, %63
  store i1 %64, i1* %5
  %65 = load i32, i32* @x.735
  %66 = load i32, i32* @y.736
  %67 = sub i32 %65, -338506421
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -338506421
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 915149988, i32 1603311522
  store i32 %79, i32* %23
  br label %162

; <label>:80:                                     ; preds = %25
  %81 = load volatile i1, i1* %5
  %82 = select i1 %81, i32 1638744765, i32 -494152018
  store i32 %82, i32* %23
  br label %162

; <label>:83:                                     ; preds = %25
  %84 = load i64, i64* %12, align 8
  %85 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %86 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %85) #3
  %87 = icmp ugt i64 %84, %86
  %88 = select i1 %87, i32 1638744765, i32 1739502195
  store i32 %88, i32* %23
  br label %162

; <label>:89:                                     ; preds = %25
  %90 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %91 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"* %90) #3
  store i32 -111870078, i32* %23
  store i64 %91, i64* %24
  br label %162

; <label>:92:                                     ; preds = %25
  %93 = load i32, i32* @x.735
  %94 = load i32, i32* @y.736
  %95 = add i32 %93, -1318107203
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, -1318107203
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 1017992371, i32 1391214057
  store i32 %119, i32* %23
  br label %162

; <label>:120:                                    ; preds = %25
  %121 = load i64, i64* %12, align 8
  store i64 %121, i64* %4
  %122 = load i32, i32* @x.735
  %123 = load i32, i32* @y.736
  %124 = sub i32 %122, 312921386
  %125 = sub i32 %124, 1
  %126 = add i32 %125, 312921386
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  %136 = select i1 %134, i32 818075421, i32 1391214057
  store i32 %136, i32* %23
  br label %162

; <label>:137:                                    ; preds = %25
  store i32 -111870078, i32* %23
  %138 = load volatile i64, i64* %4
  store i64 %138, i64* %24
  br label %162

; <label>:139:                                    ; preds = %25
  %140 = load i64, i64* %24
  ret i64 %140

; <label>:141:                                    ; preds = %25
  %142 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %143 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %142) #3
  %144 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %145 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %144) #3
  store i64 %145, i64* %13, align 8
  %146 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %143, 7117362938622133840
  %149 = sub i64 %148, %147
  %150 = add i64 %149, 7117362938622133840
  %151 = sub i64 %143, %147
  %152 = mul i64 %150, %147
  %153 = sub i64 0, %147
  %154 = sub i64 %143, %153
  %155 = add i64 %143, %147
  store i64 %154, i64* %12, align 8
  %156 = load i64, i64* %12, align 8
  %157 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %158 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %157) #3
  %159 = icmp ult i64 %156, %158
  store i32 -2137099777, i32* %23
  br label %162

; <label>:160:                                    ; preds = %25
  %161 = load i64, i64* %12, align 8
  store i32 1017992371, i32* %23
  br label %162

; <label>:162:                                    ; preds = %160, %141, %137, %120, %92, %89, %83, %80, %51, %35, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %8, %"struct.std::_Vector_base"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -127044043, i32* %10
  %11 = alloca i64*
  br label %12

; <label>:12:                                     ; preds = %2, %119
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -127044043, label %15
    i32 2049074606, label %19
    i32 724695884, label %25
    i32 -1689689955, label %53
    i32 -295737945, label %69
    i32 978146449, label %70
    i32 1742752304, label %99
    i32 -1324244071, label %115
    i32 -67161380, label %117
    i32 -1454940051, label %118
  ]

; <label>:14:                                     ; preds = %12
  br label %119

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 2049074606, i32 724695884
  store i32 %18, i32* %10
  br label %119

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %21 to %"class.std::allocator.0"*
  %23 = load i64, i64* %7, align 8
  %24 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %22, i64 %23)
  store i32 978146449, i32* %10
  store i64* %24, i64** %11
  br label %119

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.737
  %27 = load i32, i32* @y.738
  %28 = sub i32 %26, -1059078861
  %29 = sub i32 %28, 1
  %30 = add i32 %29, -1059078861
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -1689689955, i32 -67161380
  store i32 %52, i32* %10
  br label %119

; <label>:53:                                     ; preds = %12
  %54 = load i32, i32* @x.737
  %55 = load i32, i32* @y.738
  %56 = add i32 %54, -1665756794
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -1665756794
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -295737945, i32 -67161380
  store i32 %68, i32* %10
  br label %119

; <label>:69:                                     ; preds = %12
  store i32 978146449, i32* %10
  store i64* null, i64** %11
  br label %119

; <label>:70:                                     ; preds = %12
  %71 = load i64*, i64** %11
  store i64* %71, i64** %3
  %72 = load i32, i32* @x.737
  %73 = load i32, i32* @y.738
  %74 = sub i32 %72, -1739442203
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -1739442203
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 true, true
  %85 = and i1 %82, true
  %86 = and i1 %80, %84
  %87 = and i1 %83, true
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 true, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 1742752304, i32 -1454940051
  store i32 %98, i32* %10
  br label %119

; <label>:99:                                     ; preds = %12
  %100 = load i32, i32* @x.737
  %101 = load i32, i32* @y.738
  %102 = add i32 %100, -1363727594
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, -1363727594
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 -1324244071, i32 -1454940051
  store i32 %114, i32* %10
  br label %119

; <label>:115:                                    ; preds = %12
  %116 = load volatile i64*, i64** %3
  ret i64* %116

; <label>:117:                                    ; preds = %12
  store i32 -1689689955, i32* %10
  br label %119

; <label>:118:                                    ; preds = %12
  store i32 1742752304, i32* %10
  br label %119

; <label>:119:                                    ; preds = %118, %117, %99, %70, %69, %53, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 %12, -6519037796047195073
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -6519037796047195073
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.std::move_iterator.42", align 8
  %10 = alloca %"class.std::move_iterator.42", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.0"* dereferenceable(1) %18)
  ret i64* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.745
  %6 = load i32, i32* @y.746
  %7 = sub i32 %5, 1270587357
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1270587357
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 362689227, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 362689227, label %19
    i32 856479021, label %39
    i32 2047875939, label %60
    i32 -600450928, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 856479021, i32 -600450928
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.0"*, align 8
  %41 = alloca i64*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %40, align 8
  store i64* %1, i64** %41, align 8
  %42 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %40, align 8
  %43 = bitcast %"class.std::allocator.0"* %42 to %"class.__gnu_cxx::new_allocator.1"*
  %44 = load i64*, i64** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.1"* %43, i64* %44)
  %45 = load i32, i32* @x.745
  %46 = load i32, i32* @y.746
  %47 = add i32 %45, 512188877
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 512188877
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 2047875939, i32 -600450928
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.0"*, align 8
  %63 = alloca i64*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %62, align 8
  store i64* %1, i64** %63, align 8
  %64 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %62, align 8
  %65 = bitcast %"class.std::allocator.0"* %64 to %"class.__gnu_cxx::new_allocator.1"*
  %66 = load i64*, i64** %63, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.1"* %65, i64* %66)
  store i32 856479021, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 -1251504797, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %144
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1251504797, label %15
    i32 -497306566, label %19
    i32 246476805, label %46
    i32 190775965, label %79
    i32 1066762778, label %80
    i32 -1547744562, label %108
    i32 -1315030354, label %136
    i32 802983564, label %137
    i32 931582542, label %143
  ]

; <label>:14:                                     ; preds = %12
  br label %144

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 -497306566, i32 1066762778
  store i32 %18, i32* %11
  br label %144

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.749
  %21 = load i32, i32* @y.750
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 246476805, i32 802983564
  store i32 %45, i32* %11
  br label %144

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %48 to %"class.std::allocator.0"*
  %50 = load i64*, i64** %7, align 8
  %51 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.0"* dereferenceable(1) %49, i64* %50, i64 %51)
  %52 = load i32, i32* @x.749
  %53 = load i32, i32* @y.750
  %54 = add i32 %52, -123037066
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -123037066
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 190775965, i32 802983564
  store i32 %78, i32* %11
  br label %144

; <label>:79:                                     ; preds = %12
  store i32 1066762778, i32* %11
  br label %144

; <label>:80:                                     ; preds = %12
  %81 = load i32, i32* @x.749
  %82 = load i32, i32* @y.750
  %83 = add i32 %81, 386150794
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 386150794
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 -1547744562, i32 931582542
  store i32 %107, i32* %11
  br label %144

; <label>:108:                                    ; preds = %12
  %109 = load i32, i32* @x.749
  %110 = load i32, i32* @y.750
  %111 = add i32 %109, 1875918629
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, 1875918629
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 true, true
  %122 = and i1 %119, true
  %123 = and i1 %117, %121
  %124 = and i1 %120, true
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 true, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  %135 = select i1 %133, i32 -1315030354, i32 931582542
  store i32 %135, i32* %11
  br label %144

; <label>:136:                                    ; preds = %12
  ret void

; <label>:137:                                    ; preds = %12
  %138 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %139 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %138, i32 0, i32 0
  %140 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %139 to %"class.std::allocator.0"*
  %141 = load i64*, i64** %7, align 8
  %142 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.0"* dereferenceable(1) %140, i64* %141, i64 %142)
  store i32 246476805, i32* %11
  br label %144

; <label>:143:                                    ; preds = %12
  store i32 -1547744562, i32* %11
  br label %144

; <label>:144:                                    ; preds = %143, %137, %108, %80, %79, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.0"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.755
  %6 = load i32, i32* @y.756
  %7 = sub i32 %5, -711717372
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -711717372
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -987057153, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -987057153, label %19
    i32 -1720654026, label %39
    i32 356557399, label %58
    i32 -2024103260, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1720654026, i32 -2024103260
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42 to %"class.std::allocator.0"*
  store %"class.std::allocator.0"* %43, %"class.std::allocator.0"** %2
  %44 = load i32, i32* @x.755
  %45 = load i32, i32* @y.756
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 356557399, i32 -2024103260
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.0"*, %"class.std::allocator.0"** %2
  ret %"class.std::allocator.0"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %61, align 8
  %62 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %63 to %"class.std::allocator.0"*
  store i32 -1720654026, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.759
  %7 = load i32, i32* @y.760
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1231744407, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %58
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1231744407, label %19
    i32 67138490, label %27
    i32 -1979015981, label %49
    i32 1379830662, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %58

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 67138490, i32 1379830662
  store i32 %26, i32* %15
  br label %58

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.0"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %28, align 8
  %31 = bitcast %"class.std::allocator.0"* %30 to %"class.__gnu_cxx::new_allocator.1"*
  %32 = load i64, i64* %29, align 8
  %33 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %31, i64 %32, i8* null)
  store i64* %33, i64** %3
  %34 = load i32, i32* @x.759
  %35 = load i32, i32* @y.760
  %36 = sub i32 %34, -2109199720
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -2109199720
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1979015981, i32 1379830662
  store i32 %48, i32* %15
  br label %58

; <label>:49:                                     ; preds = %16
  %50 = load volatile i64*, i64** %3
  ret i64* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::allocator.0"*, align 8
  %53 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %52, align 8
  store i64 %1, i64* %53, align 8
  %54 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %52, align 8
  %55 = bitcast %"class.std::allocator.0"* %54 to %"class.__gnu_cxx::new_allocator.1"*
  %56 = load i64, i64* %53, align 8
  %57 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %55, i64 %56, i8* null)
  store i32 67138490, i32* %15
  br label %58

; <label>:58:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1469541844, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1469541844, label %16
    i32 1006192203, label %21
    i32 -1324239147, label %49
    i32 -1790840568, label %65
    i32 709210016, label %66
    i32 838376372, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1006192203, i32 709210016
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.761
  %23 = load i32, i32* @y.762
  %24 = sub i32 %22, 1641798376
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 1641798376
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -1324239147, i32 838376372
  store i32 %48, i32* %12
  br label %72

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  %50 = load i32, i32* @x.761
  %51 = load i32, i32* @y.762
  %52 = sub i32 %50, -234522835
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -234522835
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1790840568, i32 838376372
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 8
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to i64*
  ret i64* %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  store i32 -1324239147, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.42", align 8
  %6 = alloca %"class.std::move_iterator.42", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca %"class.std::move_iterator.42", align 8
  %10 = alloca %"class.std::move_iterator.42", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.42"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.42"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.42"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.42", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.42"* %2, i64* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.42", align 8
  %5 = alloca %"class.std::move_iterator.42", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.42", align 8
  %9 = alloca %"class.std::move_iterator.42", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.42"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.42"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.42"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.42", align 8
  %5 = alloca %"class.std::move_iterator.42", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.42", align 8
  %8 = alloca %"class.std::move_iterator.42", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.42"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.42"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.42"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.42", align 8
  %5 = alloca %"class.std::move_iterator.42", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.42", align 8
  %8 = alloca %"class.std::move_iterator.42", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.42"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.42"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %14)
  %16 = bitcast %"class.std::move_iterator.42"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %15, i64* %20, i64* %21)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.42", align 8
  %3 = alloca %"class.std::move_iterator.42", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.std::move_iterator.42"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.42"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.777
  %8 = load i32, i32* @y.778
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -322935855, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %63
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -322935855, label %20
    i32 2035337361, label %28
    i32 583045685, label %52
    i32 760443343, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %63

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 2035337361, i32 760443343
  store i32 %27, i32* %16
  br label %63

; <label>:28:                                     ; preds = %17
  %29 = alloca i64*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i8, align 1
  store i64* %0, i64** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load i64*, i64** %29, align 8
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %33, i64* %34, i64* %35)
  store i64* %36, i64** %4
  %37 = load i32, i32* @x.777
  %38 = load i32, i32* @y.778
  %39 = add i32 %37, 380696530
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 380696530
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 583045685, i32 760443343
  store i32 %51, i32* %16
  br label %63

; <label>:52:                                     ; preds = %17
  %53 = load volatile i64*, i64** %4
  ret i64* %53

; <label>:54:                                     ; preds = %17
  %55 = alloca i64*, align 8
  %56 = alloca i64*, align 8
  %57 = alloca i64*, align 8
  %58 = alloca i8, align 1
  store i64* %0, i64** %55, align 8
  store i64* %1, i64** %56, align 8
  store i64* %2, i64** %57, align 8
  store i8 1, i8* %58, align 1
  %59 = load i64*, i64** %55, align 8
  %60 = load i64*, i64** %56, align 8
  %61 = load i64*, i64** %57, align 8
  %62 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %59, i64* %60, i64* %61)
  store i32 2035337361, i32* %16
  br label %63

; <label>:63:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.779
  %6 = load i32, i32* @y.780
  %7 = sub i32 %5, 1515414065
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1515414065
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -354439247, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -354439247, label %19
    i32 2118349578, label %39
    i32 -26971696, label %58
    i32 -1304920472, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2118349578, i32 -1304920472
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  store i64* %0, i64** %40, align 8
  %41 = load i64*, i64** %40, align 8
  %42 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %41)
  store i64* %42, i64** %2
  %43 = load i32, i32* @x.779
  %44 = load i32, i32* @y.780
  %45 = sub i32 %43, 1771279472
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1771279472
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -26971696, i32 -1304920472
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile i64*, i64** %2
  ret i64* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca i64*, align 8
  store i64* %0, i64** %61, align 8
  %62 = load i64*, i64** %61, align 8
  %63 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %62)
  store i32 2118349578, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.781
  %11 = load i32, i32* @y.782
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -152837242, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %152
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -152837242, label %23
    i32 1346940193, label %31
    i32 1609710915, label %66
    i32 -50934488, label %69
    i32 -2000470523, label %79
    i32 -1859814170, label %85
  ]

; <label>:22:                                     ; preds = %20
  br label %152

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1346940193, i32 -1859814170
  store i32 %30, i32* %19
  br label %152

; <label>:31:                                     ; preds = %20
  %32 = alloca i64*, align 8
  store i64** %32, i64*** %7
  %33 = alloca i64*, align 8
  %34 = alloca i64*, align 8
  store i64** %34, i64*** %6
  %35 = alloca i64, align 8
  store i64* %35, i64** %5
  %36 = load volatile i64**, i64*** %7
  store i64* %0, i64** %36, align 8
  store i64* %1, i64** %33, align 8
  %37 = load volatile i64**, i64*** %6
  store i64* %2, i64** %37, align 8
  %38 = load i64*, i64** %33, align 8
  %39 = load volatile i64**, i64*** %7
  %40 = load i64*, i64** %39, align 8
  %41 = ptrtoint i64* %38 to i64
  %42 = ptrtoint i64* %40 to i64
  %43 = add i64 %41, 3374113090002212414
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, 3374113090002212414
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 8
  %48 = load volatile i64*, i64** %5
  store i64 %47, i64* %48, align 8
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.781
  %53 = load i32, i32* @y.782
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1609710915, i32 -1859814170
  store i32 %65, i32* %19
  br label %152

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -50934488, i32 -2000470523
  store i32 %68, i32* %19
  br label %152

; <label>:69:                                     ; preds = %20
  %70 = load volatile i64**, i64*** %6
  %71 = load i64*, i64** %70, align 8
  %72 = bitcast i64* %71 to i8*
  %73 = load volatile i64**, i64*** %7
  %74 = load i64*, i64** %73, align 8
  %75 = bitcast i64* %74 to i8*
  %76 = load volatile i64*, i64** %5
  %77 = load i64, i64* %76, align 8
  %78 = mul i64 8, %77
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %72, i8* %75, i64 %78, i32 8, i1 false)
  store i32 -2000470523, i32* %19
  br label %152

; <label>:79:                                     ; preds = %20
  %80 = load volatile i64**, i64*** %6
  %81 = load i64*, i64** %80, align 8
  %82 = load volatile i64*, i64** %5
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds i64, i64* %81, i64 %83
  ret i64* %84

; <label>:85:                                     ; preds = %20
  %86 = alloca i64*, align 8
  %87 = alloca i64*, align 8
  %88 = alloca i64*, align 8
  %89 = alloca i64, align 8
  store i64* %0, i64** %86, align 8
  store i64* %1, i64** %87, align 8
  store i64* %2, i64** %88, align 8
  %90 = load i64*, i64** %87, align 8
  %91 = load i64*, i64** %86, align 8
  %92 = ptrtoint i64* %90 to i64
  %93 = ptrtoint i64* %91 to i64
  %94 = shl i64 %92, %93
  %95 = add i64 0, 161492011959911260
  %96 = sub i64 %95, %92
  %97 = sub i64 %96, 161492011959911260
  %98 = sub i64 0, %92
  %99 = add i64 %97, -245479932977094537
  %100 = add i64 %99, %93
  %101 = sub i64 %100, -245479932977094537
  %102 = add i64 %97, %93
  %103 = sub i64 0, %92
  %104 = add i64 0, %103
  %105 = sub i64 0, %92
  %106 = sub i64 0, %93
  %107 = sub i64 %104, %106
  %108 = add i64 %104, %93
  %109 = add i64 %92, 3788146600315651336
  %110 = sub i64 %109, %93
  %111 = sub i64 %110, 3788146600315651336
  %112 = sub i64 %92, %93
  %113 = mul i64 %111, %93
  %114 = sub i64 0, -7553627411023996886
  %115 = sub i64 %114, %92
  %116 = add i64 %115, -7553627411023996886
  %117 = sub i64 0, %92
  %118 = sub i64 0, %93
  %119 = sub i64 %116, %118
  %120 = add i64 %116, %93
  %121 = sub i64 0, %93
  %122 = add i64 %92, %121
  %123 = sub i64 %92, %93
  %124 = shl i64 %122, 8
  %125 = sub i64 %122, -5847277556735738336
  %126 = sub i64 %125, 8
  %127 = add i64 %126, -5847277556735738336
  %128 = sub i64 %122, 8
  %129 = mul i64 %127, 8
  %130 = sub i64 0, %122
  %131 = add i64 0, %130
  %132 = sub i64 0, %122
  %133 = add i64 %131, 2861125252039903027
  %134 = add i64 %133, 8
  %135 = sub i64 %134, 2861125252039903027
  %136 = add i64 %131, 8
  %137 = shl i64 %122, 8
  %138 = add i64 0, 1309904705810121050
  %139 = sub i64 %138, %122
  %140 = sub i64 %139, 1309904705810121050
  %141 = sub i64 0, %122
  %142 = sub i64 0, %140
  %143 = sub i64 0, 8
  %144 = add i64 %142, %143
  %145 = sub i64 0, %144
  %146 = add i64 %140, 8
  %147 = shl i64 %122, 8
  %148 = shl i64 %122, 8
  %149 = sdiv exact i64 %122, 8
  store i64 %149, i64* %89, align 8
  %150 = load i64, i64* %89, align 8
  %151 = icmp ne i64 %150, 0
  store i32 1346940193, i32* %19
  br label %152

; <label>:152:                                    ; preds = %85, %69, %66, %31, %23, %22
  br label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #5 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.42", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.42"* %2)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.42"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.42"*, align 8
  store %"class.std::move_iterator.42"* %0, %"class.std::move_iterator.42"** %2, align 8
  %3 = load %"class.std::move_iterator.42"*, %"class.std::move_iterator.42"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.42"*, i64*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.42"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::move_iterator.42"* %0, %"class.std::move_iterator.42"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::move_iterator.42"*, %"class.std::move_iterator.42"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.42", %"class.std::move_iterator.42"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.1"*, i64*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %4 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #5 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.0"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.1"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.1"*, i64*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE12emplace_backIJdEEEvDpOT_(%"class.std::vector.3"*, double* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca double*
  %4 = alloca double*
  %5 = alloca %"class.std::vector.3"*
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca double*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %6, align 8
  store double* %1, double** %7, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  store %"class.std::vector.3"* %8, %"class.std::vector.3"** %5
  %9 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %10 = bitcast %"class.std::vector.3"* %9 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load double*, double** %12, align 8
  store double* %13, double** %4
  %14 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %15 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load double*, double** %17, align 8
  store double* %18, double** %3
  %19 = alloca i32
  store i32 2049242360, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %169
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 2049242360, label %23
    i32 578944497, label %28
    i32 -408355707, label %44
    i32 -1684327514, label %89
    i32 685687500, label %90
    i32 -996553526, label %94
    i32 201284672, label %121
    i32 1561215386, label %149
    i32 1775823246, label %150
    i32 754004390, label %168
  ]

; <label>:22:                                     ; preds = %20
  br label %169

; <label>:23:                                     ; preds = %20
  %24 = load volatile double*, double** %4
  %25 = load volatile double*, double** %3
  %26 = icmp ne double* %24, %25
  %27 = select i1 %26, i32 578944497, i32 685687500
  store i32 %27, i32* %19
  br label %169

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.801
  %30 = load i32, i32* @y.802
  %31 = sub i32 %29, -559904657
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -559904657
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -408355707, i32 1775823246
  store i32 %43, i32* %19
  br label %169

; <label>:44:                                     ; preds = %20
  %45 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %46 = bitcast %"class.std::vector.3"* %45 to %"struct.std::_Vector_base.4"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %46, i32 0, i32 0
  %48 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %47 to %"class.std::allocator.5"*
  %49 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %50 = bitcast %"class.std::vector.3"* %49 to %"struct.std::_Vector_base.4"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %51, i32 0, i32 1
  %53 = load double*, double** %52, align 8
  %54 = load double*, double** %7, align 8
  %55 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %54) #3
  call void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %48, double* %53, double* dereferenceable(8) %55)
  %56 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %57 = bitcast %"class.std::vector.3"* %56 to %"struct.std::_Vector_base.4"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %58, i32 0, i32 1
  %60 = load double*, double** %59, align 8
  %61 = getelementptr inbounds double, double* %60, i32 1
  store double* %61, double** %59, align 8
  %62 = load i32, i32* @x.801
  %63 = load i32, i32* @y.802
  %64 = sub i32 %62, 1413725383
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 1413725383
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -1684327514, i32 1775823246
  store i32 %88, i32* %19
  br label %169

; <label>:89:                                     ; preds = %20
  store i32 -996553526, i32* %19
  br label %169

; <label>:90:                                     ; preds = %20
  %91 = load double*, double** %7, align 8
  %92 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %91) #3
  %93 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  call void @_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_(%"class.std::vector.3"* %93, double* dereferenceable(8) %92)
  store i32 -996553526, i32* %19
  br label %169

; <label>:94:                                     ; preds = %20
  %95 = load i32, i32* @x.801
  %96 = load i32, i32* @y.802
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 201284672, i32 754004390
  store i32 %120, i32* %19
  br label %169

; <label>:121:                                    ; preds = %20
  %122 = load i32, i32* @x.801
  %123 = load i32, i32* @y.802
  %124 = sub i32 %122, 565767695
  %125 = sub i32 %124, 1
  %126 = add i32 %125, 565767695
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  %148 = select i1 %146, i32 1561215386, i32 754004390
  store i32 %148, i32* %19
  br label %169

; <label>:149:                                    ; preds = %20
  ret void

; <label>:150:                                    ; preds = %20
  %151 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %152 = bitcast %"class.std::vector.3"* %151 to %"struct.std::_Vector_base.4"*
  %153 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %152, i32 0, i32 0
  %154 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %153 to %"class.std::allocator.5"*
  %155 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %156 = bitcast %"class.std::vector.3"* %155 to %"struct.std::_Vector_base.4"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %156, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %157, i32 0, i32 1
  %159 = load double*, double** %158, align 8
  %160 = load double*, double** %7, align 8
  %161 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %160) #3
  call void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %154, double* %159, double* dereferenceable(8) %161)
  %162 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %163 = bitcast %"class.std::vector.3"* %162 to %"struct.std::_Vector_base.4"*
  %164 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %163, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %164, i32 0, i32 1
  %166 = load double*, double** %165, align 8
  %167 = getelementptr inbounds double, double* %166, i32 1
  store double* %167, double** %165, align 8
  store i32 -408355707, i32* %19
  br label %169

; <label>:168:                                    ; preds = %20
  store i32 201284672, i32* %19
  br label %169

; <label>:169:                                    ; preds = %168, %150, %121, %94, %90, %89, %44, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_(double* dereferenceable(8)) #5 comdat {
  %2 = alloca double*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.803
  %6 = load i32, i32* @y.804
  %7 = add i32 %5, 1495291608
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1495291608
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -377391993, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -377391993, label %19
    i32 -201581538, label %39
    i32 -1168129627, label %57
    i32 1897327323, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -201581538, i32 1897327323
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca double*, align 8
  store double* %0, double** %40, align 8
  %41 = load double*, double** %40, align 8
  store double* %41, double** %2
  %42 = load i32, i32* @x.803
  %43 = load i32, i32* @y.804
  %44 = sub i32 %42, -1749649951
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1749649951
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1168129627, i32 1897327323
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile double*, double** %2
  ret double* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca double*, align 8
  store double* %0, double** %60, align 8
  %61 = load double*, double** %60, align 8
  store i32 -201581538, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), double*, double* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %8, double* %9, double* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8)) #5 comdat {
  %2 = alloca double*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.807
  %6 = load i32, i32* @y.808
  %7 = add i32 %5, -1098117168
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1098117168
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2107939226, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2107939226, label %19
    i32 -258200844, label %27
    i32 -548460250, label %45
    i32 -1393876060, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -258200844, i32 -1393876060
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca double*, align 8
  store double* %0, double** %28, align 8
  %29 = load double*, double** %28, align 8
  store double* %29, double** %2
  %30 = load i32, i32* @x.807
  %31 = load i32, i32* @y.808
  %32 = sub i32 %30, -835518383
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -835518383
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -548460250, i32 -1393876060
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile double*, double** %2
  ret double* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca double*, align 8
  store double* %0, double** %48, align 8
  %49 = load double*, double** %48, align 8
  store i32 -258200844, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIdSaIdEE19_M_emplace_back_auxIJdEEEvDpOT_(%"class.std::vector.3"*, double* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca double*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store double* %1, double** %4, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.3"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %13 = load i64, i64* %5, align 8
  %14 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.4"* %12, i64 %13)
  store double* %14, double** %6, align 8
  %15 = load double*, double** %6, align 8
  store double* %15, double** %7, align 8
  %16 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %17 to %"class.std::allocator.5"*
  %19 = load double*, double** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %10) #3
  %21 = getelementptr inbounds double, double* %19, i64 %20
  %22 = load double*, double** %4, align 8
  %23 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %18, double* %21, double* dereferenceable(8) %23)
          to label %24 unwind label %94

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.809
  %26 = load i32, i32* @y.810
  %27 = add i32 %25, -44567657
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, -44567657
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %494

; <label>:51:                                     ; preds = %24, %494
  store double* null, double** %7, align 8
  %52 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %53, i32 0, i32 0
  %55 = load double*, double** %54, align 8
  %56 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load double*, double** %58, align 8
  %60 = load double*, double** %6, align 8
  %61 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %62 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %61) #3
  %63 = load i32, i32* @x.809
  %64 = load i32, i32* @y.810
  %65 = sub i32 %63, -1675773541
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1675773541
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %494

; <label>:89:                                     ; preds = %51
  %90 = invoke double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %55, double* %59, double* %60, %"class.std::allocator.5"* dereferenceable(1) %62)
          to label %91 unwind label %94

; <label>:91:                                     ; preds = %89
  store double* %90, double** %7, align 8
  %92 = load double*, double** %7, align 8
  %93 = getelementptr inbounds double, double* %92, i32 1
  store double* %93, double** %7, align 8
  br label %341

; <label>:94:                                     ; preds = %89, %2
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %8, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %9, align 4
  br label %98

; <label>:98:                                     ; preds = %94
  %99 = load i32, i32* @x.809
  %100 = load i32, i32* @y.810
  %101 = sub i32 %99, 484296298
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 484296298
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %506

; <label>:125:                                    ; preds = %98, %506
  %126 = load i8*, i8** %8, align 8
  %127 = call i8* @__cxa_begin_catch(i8* %126) #3
  %128 = load double*, double** %7, align 8
  %129 = icmp ne double* %128, null
  %130 = load i32, i32* @x.809
  %131 = load i32, i32* @y.810
  %132 = add i32 %130, -1379653798
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, -1379653798
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 false, true
  %143 = and i1 %140, false
  %144 = and i1 %138, %142
  %145 = and i1 %141, false
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 false, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  br i1 %154, label %156, label %506

; <label>:156:                                    ; preds = %125
  br i1 %129, label %222, label %157

; <label>:157:                                    ; preds = %156
  %158 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %159 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %158, i32 0, i32 0
  %160 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %159 to %"class.std::allocator.5"*
  %161 = load double*, double** %6, align 8
  %162 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %10) #3
  %163 = getelementptr inbounds double, double* %161, i64 %162
  invoke void @_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1) %160, double* %163)
          to label %164 unwind label %165

; <label>:164:                                    ; preds = %157
  br label %228

; <label>:165:                                    ; preds = %285, %284, %222, %157
  %166 = load i32, i32* @x.809
  %167 = load i32, i32* @y.810
  %168 = sub i32 %166, 1888228357
  %169 = sub i32 %168, 1
  %170 = add i32 %169, 1888228357
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 false, true
  %179 = and i1 %176, false
  %180 = and i1 %174, %178
  %181 = and i1 %177, false
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 false, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  br i1 %190, label %192, label %511

; <label>:192:                                    ; preds = %165, %511
  %193 = landingpad { i8*, i32 }
          cleanup
  %194 = extractvalue { i8*, i32 } %193, 0
  store i8* %194, i8** %8, align 8
  %195 = extractvalue { i8*, i32 } %193, 1
  store i32 %195, i32* %9, align 4
  %196 = load i32, i32* @x.809
  %197 = load i32, i32* @y.810
  %198 = sub i32 0, 1
  %199 = add i32 %196, %198
  %200 = sub i32 %196, 1
  %201 = mul i32 %196, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %197, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 false, true
  %208 = and i1 %205, false
  %209 = and i1 %203, %207
  %210 = and i1 %206, false
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 false, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  br i1 %219, label %221, label %511

; <label>:221:                                    ; preds = %192
  invoke void @__cxa_end_catch()
          to label %286 unwind label %432

; <label>:222:                                    ; preds = %156
  %223 = load double*, double** %6, align 8
  %224 = load double*, double** %7, align 8
  %225 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %226 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %225) #3
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %223, double* %224, %"class.std::allocator.5"* dereferenceable(1) %226)
          to label %227 unwind label %165

; <label>:227:                                    ; preds = %222
  br label %228

; <label>:228:                                    ; preds = %227, %164
  %229 = load i32, i32* @x.809
  %230 = load i32, i32* @y.810
  %231 = add i32 %229, -38343075
  %232 = sub i32 %231, 1
  %233 = sub i32 %232, -38343075
  %234 = sub i32 %229, 1
  %235 = mul i32 %229, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %230, 10
  %239 = xor i1 %237, true
  %240 = xor i1 %238, true
  %241 = xor i1 false, true
  %242 = and i1 %239, false
  %243 = and i1 %237, %241
  %244 = and i1 %240, false
  %245 = and i1 %238, %241
  %246 = or i1 %242, %243
  %247 = or i1 %244, %245
  %248 = xor i1 %246, %247
  %249 = or i1 %239, %240
  %250 = xor i1 %249, true
  %251 = or i1 false, %241
  %252 = and i1 %250, %251
  %253 = or i1 %248, %252
  %254 = or i1 %237, %238
  br i1 %253, label %255, label %515

; <label>:255:                                    ; preds = %228, %515
  %256 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %257 = load double*, double** %6, align 8
  %258 = load i64, i64* %5, align 8
  %259 = load i32, i32* @x.809
  %260 = load i32, i32* @y.810
  %261 = sub i32 0, 1
  %262 = add i32 %259, %261
  %263 = sub i32 %259, 1
  %264 = mul i32 %259, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %260, 10
  %268 = xor i1 %266, true
  %269 = xor i1 %267, true
  %270 = xor i1 true, true
  %271 = and i1 %268, true
  %272 = and i1 %266, %270
  %273 = and i1 %269, true
  %274 = and i1 %267, %270
  %275 = or i1 %271, %272
  %276 = or i1 %273, %274
  %277 = xor i1 %275, %276
  %278 = or i1 %268, %269
  %279 = xor i1 %278, true
  %280 = or i1 true, %270
  %281 = and i1 %279, %280
  %282 = or i1 %277, %281
  %283 = or i1 %266, %267
  br i1 %282, label %284, label %515

; <label>:284:                                    ; preds = %255
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* %256, double* %257, i64 %258)
          to label %285 unwind label %165

; <label>:285:                                    ; preds = %284
  invoke void @__cxa_rethrow() #13
          to label %464 unwind label %165

; <label>:286:                                    ; preds = %221
  %287 = load i32, i32* @x.809
  %288 = load i32, i32* @y.810
  %289 = sub i32 %287, -252833340
  %290 = sub i32 %289, 1
  %291 = add i32 %290, -252833340
  %292 = sub i32 %287, 1
  %293 = mul i32 %287, %291
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %288, 10
  %297 = xor i1 %295, true
  %298 = xor i1 %296, true
  %299 = xor i1 false, true
  %300 = and i1 %297, false
  %301 = and i1 %295, %299
  %302 = and i1 %298, false
  %303 = and i1 %296, %299
  %304 = or i1 %300, %301
  %305 = or i1 %302, %303
  %306 = xor i1 %304, %305
  %307 = or i1 %297, %298
  %308 = xor i1 %307, true
  %309 = or i1 false, %299
  %310 = and i1 %308, %309
  %311 = or i1 %306, %310
  %312 = or i1 %295, %296
  br i1 %311, label %313, label %519

; <label>:313:                                    ; preds = %286, %519
  %314 = load i32, i32* @x.809
  %315 = load i32, i32* @y.810
  %316 = sub i32 %314, 1811283075
  %317 = sub i32 %316, 1
  %318 = add i32 %317, 1811283075
  %319 = sub i32 %314, 1
  %320 = mul i32 %314, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %315, 10
  %324 = xor i1 %322, true
  %325 = xor i1 %323, true
  %326 = xor i1 false, true
  %327 = and i1 %324, false
  %328 = and i1 %322, %326
  %329 = and i1 %325, false
  %330 = and i1 %323, %326
  %331 = or i1 %327, %328
  %332 = or i1 %329, %330
  %333 = xor i1 %331, %332
  %334 = or i1 %324, %325
  %335 = xor i1 %334, true
  %336 = or i1 false, %326
  %337 = and i1 %335, %336
  %338 = or i1 %333, %337
  %339 = or i1 %322, %323
  br i1 %338, label %340, label %519

; <label>:340:                                    ; preds = %313
  br label %385

; <label>:341:                                    ; preds = %91
  %342 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %343 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %342, i32 0, i32 0
  %344 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %343, i32 0, i32 0
  %345 = load double*, double** %344, align 8
  %346 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %347 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %346, i32 0, i32 0
  %348 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %347, i32 0, i32 1
  %349 = load double*, double** %348, align 8
  %350 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %351 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %350) #3
  call void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %345, double* %349, %"class.std::allocator.5"* dereferenceable(1) %351)
  %352 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %353 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %354 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %353, i32 0, i32 0
  %355 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %354, i32 0, i32 0
  %356 = load double*, double** %355, align 8
  %357 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %358 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %357, i32 0, i32 0
  %359 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %358, i32 0, i32 2
  %360 = load double*, double** %359, align 8
  %361 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %361, i32 0, i32 0
  %363 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %362, i32 0, i32 0
  %364 = load double*, double** %363, align 8
  %365 = ptrtoint double* %360 to i64
  %366 = ptrtoint double* %364 to i64
  %367 = sub i64 0, %366
  %368 = add i64 %365, %367
  %369 = sub i64 %365, %366
  %370 = sdiv exact i64 %368, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* %352, double* %356, i64 %370)
  %371 = load double*, double** %6, align 8
  %372 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %373 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %372, i32 0, i32 0
  %374 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %373, i32 0, i32 0
  store double* %371, double** %374, align 8
  %375 = load double*, double** %7, align 8
  %376 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %377 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %376, i32 0, i32 0
  %378 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %377, i32 0, i32 1
  store double* %375, double** %378, align 8
  %379 = load double*, double** %6, align 8
  %380 = load i64, i64* %5, align 8
  %381 = getelementptr inbounds double, double* %379, i64 %380
  %382 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %383 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %382, i32 0, i32 0
  %384 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %383, i32 0, i32 2
  store double* %381, double** %384, align 8
  ret void

; <label>:385:                                    ; preds = %340
  %386 = load i32, i32* @x.809
  %387 = load i32, i32* @y.810
  %388 = add i32 %386, -650429671
  %389 = sub i32 %388, 1
  %390 = sub i32 %389, -650429671
  %391 = sub i32 %386, 1
  %392 = mul i32 %386, %390
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %387, 10
  %396 = xor i1 %394, true
  %397 = xor i1 %395, true
  %398 = xor i1 false, true
  %399 = and i1 %396, false
  %400 = and i1 %394, %398
  %401 = and i1 %397, false
  %402 = and i1 %395, %398
  %403 = or i1 %399, %400
  %404 = or i1 %401, %402
  %405 = xor i1 %403, %404
  %406 = or i1 %396, %397
  %407 = xor i1 %406, true
  %408 = or i1 false, %398
  %409 = and i1 %407, %408
  %410 = or i1 %405, %409
  %411 = or i1 %394, %395
  br i1 %410, label %412, label %520

; <label>:412:                                    ; preds = %385, %520
  %413 = load i8*, i8** %8, align 8
  %414 = load i32, i32* %9, align 4
  %415 = insertvalue { i8*, i32 } undef, i8* %413, 0
  %416 = insertvalue { i8*, i32 } %415, i32 %414, 1
  %417 = load i32, i32* @x.809
  %418 = load i32, i32* @y.810
  %419 = sub i32 %417, 1132307784
  %420 = sub i32 %419, 1
  %421 = add i32 %420, 1132307784
  %422 = sub i32 %417, 1
  %423 = mul i32 %417, %421
  %424 = urem i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %418, 10
  %427 = and i1 %425, %426
  %428 = xor i1 %425, %426
  %429 = or i1 %427, %428
  %430 = or i1 %425, %426
  br i1 %429, label %431, label %520

; <label>:431:                                    ; preds = %412
  resume { i8*, i32 } %416

; <label>:432:                                    ; preds = %221
  %433 = load i32, i32* @x.809
  %434 = load i32, i32* @y.810
  %435 = sub i32 %433, 304519145
  %436 = sub i32 %435, 1
  %437 = add i32 %436, 304519145
  %438 = sub i32 %433, 1
  %439 = mul i32 %433, %437
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %434, 10
  %443 = and i1 %441, %442
  %444 = xor i1 %441, %442
  %445 = or i1 %443, %444
  %446 = or i1 %441, %442
  br i1 %445, label %447, label %525

; <label>:447:                                    ; preds = %432, %525
  %448 = landingpad { i8*, i32 }
          catch i8* null
  %449 = extractvalue { i8*, i32 } %448, 0
  call void @__clang_call_terminate(i8* %449) #10
  %450 = load i32, i32* @x.809
  %451 = load i32, i32* @y.810
  %452 = sub i32 0, 1
  %453 = add i32 %450, %452
  %454 = sub i32 %450, 1
  %455 = mul i32 %450, %453
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %451, 10
  %459 = and i1 %457, %458
  %460 = xor i1 %457, %458
  %461 = or i1 %459, %460
  %462 = or i1 %457, %458
  br i1 %461, label %463, label %525

; <label>:463:                                    ; preds = %447
  unreachable

; <label>:464:                                    ; preds = %285
  %465 = load i32, i32* @x.809
  %466 = load i32, i32* @y.810
  %467 = sub i32 %465, -1387255714
  %468 = sub i32 %467, 1
  %469 = add i32 %468, -1387255714
  %470 = sub i32 %465, 1
  %471 = mul i32 %465, %469
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %466, 10
  %475 = and i1 %473, %474
  %476 = xor i1 %473, %474
  %477 = or i1 %475, %476
  %478 = or i1 %473, %474
  br i1 %477, label %479, label %528

; <label>:479:                                    ; preds = %464, %528
  %480 = load i32, i32* @x.809
  %481 = load i32, i32* @y.810
  %482 = sub i32 0, 1
  %483 = add i32 %480, %482
  %484 = sub i32 %480, 1
  %485 = mul i32 %480, %483
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %481, 10
  %489 = and i1 %487, %488
  %490 = xor i1 %487, %488
  %491 = or i1 %489, %490
  %492 = or i1 %487, %488
  br i1 %491, label %493, label %528

; <label>:493:                                    ; preds = %479
  unreachable

; <label>:494:                                    ; preds = %51, %24
  store double* null, double** %7, align 8
  %495 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %496 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %495, i32 0, i32 0
  %497 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %496, i32 0, i32 0
  %498 = load double*, double** %497, align 8
  %499 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %500 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %499, i32 0, i32 0
  %501 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %500, i32 0, i32 1
  %502 = load double*, double** %501, align 8
  %503 = load double*, double** %6, align 8
  %504 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %505 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %504) #3
  br label %51

; <label>:506:                                    ; preds = %125, %98
  %507 = load i8*, i8** %8, align 8
  %508 = call i8* @__cxa_begin_catch(i8* %507) #3
  %509 = load double*, double** %7, align 8
  %510 = icmp ne double* %509, null
  br label %125

; <label>:511:                                    ; preds = %192, %165
  %512 = landingpad { i8*, i32 }
          cleanup
  %513 = extractvalue { i8*, i32 } %512, 0
  store i8* %513, i8** %8, align 8
  %514 = extractvalue { i8*, i32 } %512, 1
  store i32 %514, i32* %9, align 4
  br label %192

; <label>:515:                                    ; preds = %255, %228
  %516 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %517 = load double*, double** %6, align 8
  %518 = load i64, i64* %5, align 8
  br label %255

; <label>:519:                                    ; preds = %313, %286
  br label %313

; <label>:520:                                    ; preds = %412, %385
  %521 = load i8*, i8** %8, align 8
  %522 = load i32, i32* %9, align 4
  %523 = insertvalue { i8*, i32 } undef, i8* %521, 0
  %524 = insertvalue { i8*, i32 } %523, i32 %522, 1
  br label %412

; <label>:525:                                    ; preds = %447, %432
  %526 = landingpad { i8*, i32 }
          catch i8* null
  %527 = extractvalue { i8*, i32 } %526, 0
  call void @__clang_call_terminate(i8* %527) #10
  br label %447

; <label>:528:                                    ; preds = %479, %464
  br label %479
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, double*, double* dereferenceable(8)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast double* %8 to i8*
  %10 = bitcast i8* %9 to double*
  %11 = load double*, double** %6, align 8
  %12 = call dereferenceable(8) double* @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE(double* dereferenceable(8) %11) #3
  %13 = load double, double* %12, align 8
  store double %13, double* %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca %"class.std::vector.3"*
  %10 = alloca %"class.std::vector.3"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i8* %2, i8** %12, align 8
  %15 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  store %"class.std::vector.3"* %15, %"class.std::vector.3"** %9
  %16 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %17 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %16) #3
  %18 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %19 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %18) #3
  %20 = sub i64 0, %19
  %21 = add i64 %17, %20
  %22 = sub i64 %17, %19
  store i64 %21, i64* %8
  %23 = load i64, i64* %11, align 8
  store i64 %23, i64* %7
  %24 = alloca i32
  store i32 1166197747, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %206
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 1166197747, label %29
    i32 -694550035, label %34
    i32 -568875106, label %36
    i32 290928284, label %51
    i32 -267547332, label %79
    i32 -632829396, label %99
    i32 237124786, label %102
    i32 1451882145, label %105
    i32 -708594392, label %133
    i32 -760379865, label %150
    i32 -563165049, label %152
    i32 1545370200, label %168
    i32 -81067840, label %196
    i32 2009797116, label %198
    i32 -913378446, label %203
    i32 -331272130, label %205
  ]

; <label>:28:                                     ; preds = %26
  br label %206

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %8
  %31 = load volatile i64, i64* %7
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -694550035, i32 -568875106
  store i32 %33, i32* %24
  br label %206

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #13
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %38 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %37) #3
  %39 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %40 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %39) #3
  store i64 %40, i64* %14, align 8
  %41 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 0, %42
  %44 = sub i64 %38, %43
  %45 = add i64 %38, %42
  store i64 %44, i64* %13, align 8
  %46 = load i64, i64* %13, align 8
  %47 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %48 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* %47) #3
  %49 = icmp ult i64 %46, %48
  %50 = select i1 %49, i32 237124786, i32 290928284
  store i32 %50, i32* %24
  br label %206

; <label>:51:                                     ; preds = %26
  %52 = load i32, i32* @x.813
  %53 = load i32, i32* @y.814
  %54 = sub i32 %52, 1163245633
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 1163245633
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -267547332, i32 2009797116
  store i32 %78, i32* %24
  br label %206

; <label>:79:                                     ; preds = %26
  %80 = load i64, i64* %13, align 8
  %81 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %82 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %81) #3
  %83 = icmp ugt i64 %80, %82
  store i1 %83, i1* %6
  %84 = load i32, i32* @x.813
  %85 = load i32, i32* @y.814
  %86 = sub i32 %84, -1424650238
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -1424650238
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 -632829396, i32 2009797116
  store i32 %98, i32* %24
  br label %206

; <label>:99:                                     ; preds = %26
  %100 = load volatile i1, i1* %6
  %101 = select i1 %100, i32 237124786, i32 1451882145
  store i32 %101, i32* %24
  br label %206

; <label>:102:                                    ; preds = %26
  %103 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %104 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %103) #3
  store i32 -563165049, i32* %24
  store i64 %104, i64* %25
  br label %206

; <label>:105:                                    ; preds = %26
  %106 = load i32, i32* @x.813
  %107 = load i32, i32* @y.814
  %108 = add i32 %106, 86755422
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, 86755422
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 -708594392, i32 -913378446
  store i32 %132, i32* %24
  br label %206

; <label>:133:                                    ; preds = %26
  %134 = load i64, i64* %13, align 8
  store i64 %134, i64* %5
  %135 = load i32, i32* @x.813
  %136 = load i32, i32* @y.814
  %137 = add i32 %135, -620826670
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, -620826670
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 -760379865, i32 -913378446
  store i32 %149, i32* %24
  br label %206

; <label>:150:                                    ; preds = %26
  store i32 -563165049, i32* %24
  %151 = load volatile i64, i64* %5
  store i64 %151, i64* %25
  br label %206

; <label>:152:                                    ; preds = %26
  %153 = load i64, i64* %25
  store i64 %153, i64* %4
  %154 = load i32, i32* @x.813
  %155 = load i32, i32* @y.814
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  %167 = select i1 %165, i32 1545370200, i32 -331272130
  store i32 %167, i32* %24
  br label %206

; <label>:168:                                    ; preds = %26
  %169 = load i32, i32* @x.813
  %170 = load i32, i32* @y.814
  %171 = add i32 %169, -748319666
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -748319666
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 false, true
  %182 = and i1 %179, false
  %183 = and i1 %177, %181
  %184 = and i1 %180, false
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 false, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 -81067840, i32 -331272130
  store i32 %195, i32* %24
  br label %206

; <label>:196:                                    ; preds = %26
  %197 = load volatile i64, i64* %4
  ret i64 %197

; <label>:198:                                    ; preds = %26
  %199 = load i64, i64* %13, align 8
  %200 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %9
  %201 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* %200) #3
  %202 = icmp ugt i64 %199, %201
  store i32 -267547332, i32* %24
  br label %206

; <label>:203:                                    ; preds = %26
  %204 = load i64, i64* %13, align 8
  store i32 -708594392, i32* %24
  br label %206

; <label>:205:                                    ; preds = %26
  store i32 1545370200, i32* %24
  br label %206

; <label>:206:                                    ; preds = %205, %203, %198, %168, %152, %150, %133, %105, %102, %99, %79, %51, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca double*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %8, %"struct.std::_Vector_base.4"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -1857711121, i32* %10
  %11 = alloca double*
  br label %12

; <label>:12:                                     ; preds = %2, %66
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -1857711121, label %15
    i32 -220379758, label %19
    i32 316759458, label %35
    i32 1038010123, label %55
    i32 -1756925596, label %57
    i32 -378600567, label %58
    i32 663990314, label %60
  ]

; <label>:14:                                     ; preds = %12
  br label %66

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -220379758, i32 -1756925596
  store i32 %18, i32* %10
  br label %66

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.815
  %21 = load i32, i32* @y.816
  %22 = add i32 %20, 1169078430
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1169078430
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 316759458, i32 663990314
  store i32 %34, i32* %10
  br label %66

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %37 to %"class.std::allocator.5"*
  %39 = load i64, i64* %7, align 8
  %40 = call double* @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1) %38, i64 %39)
  store double* %40, double** %3
  %41 = load i32, i32* @x.815
  %42 = load i32, i32* @y.816
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1038010123, i32 663990314
  store i32 %54, i32* %10
  br label %66

; <label>:55:                                     ; preds = %12
  store i32 -378600567, i32* %10
  %56 = load volatile double*, double** %3
  store double* %56, double** %11
  br label %66

; <label>:57:                                     ; preds = %12
  store i32 -378600567, i32* %10
  store double* null, double** %11
  br label %66

; <label>:58:                                     ; preds = %12
  %59 = load double*, double** %11
  ret double* %59

; <label>:60:                                     ; preds = %12
  %61 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %62 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %62 to %"class.std::allocator.5"*
  %64 = load i64, i64* %7, align 8
  %65 = call double* @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1) %63, i64 %64)
  store i32 316759458, i32* %10
  br label %66

; <label>:66:                                     ; preds = %60, %57, %55, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load double*, double** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl", %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load double*, double** %10, align 8
  %12 = ptrtoint double* %7 to i64
  %13 = ptrtoint double* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt34__uninitialized_move_if_noexcept_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double*, double*, double*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator.43", align 8
  %10 = alloca %"class.std::move_iterator.43", align 8
  store double* %0, double** %5, align 8
  store double* %1, double** %6, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load double*, double** %5, align 8
  %12 = call double* @_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_(double* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %9, i32 0, i32 0
  store double* %12, double** %13, align 8
  %14 = load double*, double** %6, align 8
  %15 = call double* @_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_(double* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %10, i32 0, i32 0
  store double* %15, double** %16, align 8
  %17 = load double*, double** %7, align 8
  %18 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %9, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %10, i32 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = call double* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E(double* %20, double* %22, double* %17, %"class.std::allocator.5"* dereferenceable(1) %18)
  ret double* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE7destroyIdEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1), double*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load double*, double** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_(%"class.__gnu_cxx::new_allocator.6"* %6, double* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double*, double*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load double*, double** %4, align 8
  %8 = load double*, double** %5, align 8
  call void @_ZSt8_DestroyIPdEvT_S1_(double* %7, double* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"*, double*, i64) #0 comdat align 2 {
  %4 = alloca double*
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca double*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store double* %1, double** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %9, %"struct.std::_Vector_base.4"** %5
  %10 = load double*, double** %7, align 8
  store double* %10, double** %4
  %11 = alloca i32
  store i32 -335414131, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %70
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -335414131, label %15
    i32 1211745936, label %19
    i32 1320061235, label %25
    i32 94487814, label %40
    i32 -321179842, label %68
    i32 1128778236, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %70

; <label>:15:                                     ; preds = %12
  %16 = load volatile double*, double** %4
  %17 = icmp ne double* %16, null
  %18 = select i1 %17, i32 1211745936, i32 1320061235
  store i32 %18, i32* %11
  br label %70

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %21 to %"class.std::allocator.5"*
  %23 = load double*, double** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(%"class.std::allocator.5"* dereferenceable(1) %22, double* %23, i64 %24)
  store i32 1320061235, i32* %11
  br label %70

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.827
  %27 = load i32, i32* @y.828
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 94487814, i32 1128778236
  store i32 %39, i32* %11
  br label %70

; <label>:40:                                     ; preds = %12
  %41 = load i32, i32* @x.827
  %42 = load i32, i32* @y.828
  %43 = add i32 %41, -1056585913
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1056585913
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -321179842, i32 1128778236
  store i32 %67, i32* %11
  br label %70

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  store i32 94487814, i32* %11
  br label %70

; <label>:70:                                     ; preds = %69, %40, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.833
  %6 = load i32, i32* @y.834
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 331299834, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 331299834, label %18
    i32 32215034, label %26
    i32 735537445, label %58
    i32 583855720, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 32215034, i32 583855720
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %27, align 8
  %28 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %29 to %"class.std::allocator.5"*
  store %"class.std::allocator.5"* %30, %"class.std::allocator.5"** %2
  %31 = load i32, i32* @x.833
  %32 = load i32, i32* @y.834
  %33 = sub i32 %31, 1811877947
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1811877947
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 735537445, i32 583855720
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator.5"*, %"class.std::allocator.5"** %2
  ret %"class.std::allocator.5"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %61, align 8
  %62 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl"* %63 to %"class.std::allocator.5"*
  store i32 32215034, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret double* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1032817730, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %83
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1032817730, label %16
    i32 -659496315, label %21
    i32 1810631402, label %49
    i32 448916307, label %76
    i32 1770837368, label %77
    i32 1512789646, label %82
  ]

; <label>:15:                                     ; preds = %13
  br label %83

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -659496315, i32 1770837368
  store i32 %20, i32* %12
  br label %83

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.839
  %23 = load i32, i32* @y.840
  %24 = sub i32 %22, -1477155404
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -1477155404
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 1810631402, i32 1512789646
  store i32 %48, i32* %12
  br label %83

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  %50 = load i32, i32* @x.839
  %51 = load i32, i32* @y.840
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 448916307, i32 1512789646
  store i32 %75, i32* %12
  br label %83

; <label>:76:                                     ; preds = %13
  unreachable

; <label>:77:                                     ; preds = %13
  %78 = load i64, i64* %7, align 8
  %79 = mul i64 %78, 8
  %80 = call i8* @_Znwm(i64 %79)
  %81 = bitcast i8* %80 to double*
  ret double* %81

; <label>:82:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #13
  store i32 1810631402, i32* %12
  br label %83

; <label>:83:                                     ; preds = %82, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPdES1_dET0_T_S4_S3_RSaIT1_E(double*, double*, double*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.43", align 8
  %6 = alloca %"class.std::move_iterator.43", align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator.43", align 8
  %10 = alloca %"class.std::move_iterator.43", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %5, i32 0, i32 0
  store double* %0, double** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %6, i32 0, i32 0
  store double* %1, double** %12, align 8
  store double* %2, double** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.43"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.43"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.43"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load double*, double** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %9, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %10, i32 0, i32 0
  %21 = load double*, double** %20, align 8
  %22 = call double* @_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double* %19, double* %21, double* %17)
  ret double* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt32__make_move_if_noexcept_iteratorIPdSt13move_iteratorIS0_EET0_T_(double*) #0 comdat {
  %2 = alloca double*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.843
  %6 = load i32, i32* @y.844
  %7 = add i32 %5, 2108121254
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2108121254
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1115276968, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1115276968, label %19
    i32 1582594204, label %39
    i32 -913348702, label %72
    i32 -620568344, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1582594204, i32 -620568344
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.43", align 8
  %41 = alloca double*, align 8
  store double* %0, double** %41, align 8
  %42 = load double*, double** %41, align 8
  call void @_ZNSt13move_iteratorIPdEC2ES0_(%"class.std::move_iterator.43"* %40, double* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %40, i32 0, i32 0
  %44 = load double*, double** %43, align 8
  store double* %44, double** %2
  %45 = load i32, i32* @x.843
  %46 = load i32, i32* @y.844
  %47 = sub i32 %45, 1035725267
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1035725267
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -913348702, i32 -620568344
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile double*, double** %2
  ret double* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::move_iterator.43", align 8
  %76 = alloca double*, align 8
  store double* %0, double** %76, align 8
  %77 = load double*, double** %76, align 8
  call void @_ZNSt13move_iteratorIPdEC2ES0_(%"class.std::move_iterator.43"* %75, double* %77)
  %78 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %75, i32 0, i32 0
  %79 = load double*, double** %78, align 8
  store i32 1582594204, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt18uninitialized_copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.43", align 8
  %5 = alloca %"class.std::move_iterator.43", align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.43", align 8
  %9 = alloca %"class.std::move_iterator.43", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %4, i32 0, i32 0
  store double* %0, double** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %5, i32 0, i32 0
  store double* %1, double** %11, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.43"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.43"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.43"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load double*, double** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %8, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %9, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = call double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_(double* %18, double* %20, double* %16)
  ret double* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPdES3_EET0_T_S6_S5_(double*, double*, double*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.43", align 8
  %5 = alloca %"class.std::move_iterator.43", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.std::move_iterator.43", align 8
  %8 = alloca %"class.std::move_iterator.43", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.std::move_iterator.43"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.43"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.43"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load double*, double** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %7, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double* %17, double* %19, double* %15)
  ret double* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt4copyISt13move_iteratorIPdES1_ET0_T_S4_S3_(double*, double*, double*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.43", align 8
  %5 = alloca %"class.std::move_iterator.43", align 8
  %6 = alloca double*, align 8
  %7 = alloca %"class.std::move_iterator.43", align 8
  %8 = alloca %"class.std::move_iterator.43", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %4, i32 0, i32 0
  store double* %0, double** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %5, i32 0, i32 0
  store double* %1, double** %10, align 8
  store double* %2, double** %6, align 8
  %11 = bitcast %"class.std::move_iterator.43"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.43"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %7, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = call double* @_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_(double* %14)
  %16 = bitcast %"class.std::move_iterator.43"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %8, i32 0, i32 0
  %19 = load double*, double** %18, align 8
  %20 = call double* @_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_(double* %19)
  %21 = load double*, double** %6, align 8
  %22 = call double* @_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_(double* %15, double* %20, double* %21)
  ret double* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt14__copy_move_a2ILb1EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.851
  %8 = load i32, i32* @y.852
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -989354003, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %66
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -989354003, label %20
    i32 -1201688499, label %28
    i32 1790339848, label %53
    i32 937188525, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %66

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1201688499, i32 937188525
  store i32 %27, i32* %16
  br label %66

; <label>:28:                                     ; preds = %17
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca double*, align 8
  store double* %0, double** %29, align 8
  store double* %1, double** %30, align 8
  store double* %2, double** %31, align 8
  %32 = load double*, double** %29, align 8
  %33 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %32)
  %34 = load double*, double** %30, align 8
  %35 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %34)
  %36 = load double*, double** %31, align 8
  %37 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %36)
  %38 = call double* @_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_(double* %33, double* %35, double* %37)
  store double* %38, double** %4
  %39 = load i32, i32* @x.851
  %40 = load i32, i32* @y.852
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1790339848, i32 937188525
  store i32 %52, i32* %16
  br label %66

; <label>:53:                                     ; preds = %17
  %54 = load volatile double*, double** %4
  ret double* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca double*, align 8
  %57 = alloca double*, align 8
  %58 = alloca double*, align 8
  store double* %0, double** %56, align 8
  store double* %1, double** %57, align 8
  store double* %2, double** %58, align 8
  %59 = load double*, double** %56, align 8
  %60 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %59)
  %61 = load double*, double** %57, align 8
  %62 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %61)
  %63 = load double*, double** %58, align 8
  %64 = call double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double* %63)
  %65 = call double* @_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_(double* %60, double* %62, double* %64)
  store i32 -1201688499, i32* %16
  br label %66

; <label>:66:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__miter_baseISt13move_iteratorIPdEENSt11_Miter_baseIT_E13iterator_typeES4_(double*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.43", align 8
  %3 = alloca %"class.std::move_iterator.43", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %2, i32 0, i32 0
  store double* %0, double** %4, align 8
  %5 = bitcast %"class.std::move_iterator.43"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.43"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %3, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  %9 = call double* @_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_(double* %8)
  ret double* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt13__copy_move_aILb1EPdS0_ET1_T0_S2_S1_(double*, double*, double*) #0 comdat {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i8, align 1
  store double* %0, double** %4, align 8
  store double* %1, double** %5, align 8
  store double* %2, double** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load double*, double** %4, align 8
  %9 = load double*, double** %5, align 8
  %10 = load double*, double** %6, align 8
  %11 = call double* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double* %8, double* %9, double* %10)
  ret double* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_(double*) #0 comdat {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8
  %3 = load double*, double** %2, align 8
  %4 = call double* @_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_(double* %3)
  ret double* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_(double*, double*, double*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca i64, align 8
  store double* %0, double** %5, align 8
  store double* %1, double** %6, align 8
  store double* %2, double** %7, align 8
  %9 = load double*, double** %6, align 8
  %10 = load double*, double** %5, align 8
  %11 = ptrtoint double* %9 to i64
  %12 = ptrtoint double* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 -1127485394, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %37
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1127485394, label %22
    i32 -2001355163, label %26
    i32 429265856, label %33
  ]

; <label>:21:                                     ; preds = %19
  br label %37

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -2001355163, i32 429265856
  store i32 %25, i32* %18
  br label %37

; <label>:26:                                     ; preds = %19
  %27 = load double*, double** %7, align 8
  %28 = bitcast double* %27 to i8*
  %29 = load double*, double** %5, align 8
  %30 = bitcast double* %29 to i8*
  %31 = load i64, i64* %8, align 8
  %32 = mul i64 8, %31
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %28, i8* %30, i64 %32, i32 8, i1 false)
  store i32 429265856, i32* %18
  br label %37

; <label>:33:                                     ; preds = %19
  %34 = load double*, double** %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = getelementptr inbounds double, double* %34, i64 %35
  ret double* %36

; <label>:37:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_(double*) #5 comdat align 2 {
  %2 = alloca double*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.861
  %6 = load i32, i32* @y.862
  %7 = sub i32 %5, -423210696
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -423210696
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 790588357, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 790588357, label %19
    i32 -1088765970, label %39
    i32 -1717853983, label %69
    i32 -1835981418, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1088765970, i32 -1835981418
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca double*, align 8
  store double* %0, double** %40, align 8
  %41 = load double*, double** %40, align 8
  store double* %41, double** %2
  %42 = load i32, i32* @x.861
  %43 = load i32, i32* @y.862
  %44 = add i32 %42, 606639059
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 606639059
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1717853983, i32 -1835981418
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile double*, double** %2
  ret double* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca double*, align 8
  store double* %0, double** %72, align 8
  %73 = load double*, double** %72, align 8
  store i32 -1088765970, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr double* @_ZNSt10_Iter_baseISt13move_iteratorIPdELb1EE7_S_baseES2_(double*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.43", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %2, i32 0, i32 0
  store double* %0, double** %3, align 8
  %4 = call double* @_ZNKSt13move_iteratorIPdE4baseEv(%"class.std::move_iterator.43"* %2)
  ret double* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double* @_ZNKSt13move_iteratorIPdE4baseEv(%"class.std::move_iterator.43"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.43"*, align 8
  store %"class.std::move_iterator.43"* %0, %"class.std::move_iterator.43"** %2, align 8
  %3 = load %"class.std::move_iterator.43"*, %"class.std::move_iterator.43"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %3, i32 0, i32 0
  %5 = load double*, double** %4, align 8
  ret double* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPdEC2ES0_(%"class.std::move_iterator.43"*, double*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.43"*, align 8
  %4 = alloca double*, align 8
  store %"class.std::move_iterator.43"* %0, %"class.std::move_iterator.43"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.std::move_iterator.43"*, %"class.std::move_iterator.43"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.43", %"class.std::move_iterator.43"* %5, i32 0, i32 0
  %7 = load double*, double** %4, align 8
  store double* %7, double** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE7destroyIdEEvPT_(%"class.__gnu_cxx::new_allocator.6"*, double*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca double*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPdEvT_S1_(double*, double*) #0 comdat {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  %5 = load double*, double** %3, align 8
  %6 = load double*, double** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %5, double* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double*, double*) #5 comdat align 2 {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  store double* %1, double** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(%"class.std::allocator.5"* dereferenceable(1), double*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load double*, double** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.6"* %8, double* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.6"*, double*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store double* %1, double** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load double*, double** %5, align 8
  %9 = bitcast double* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_(%"class.std::vector.8"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca %"class.std::__cxx11::basic_string"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.879
  %9 = load i32, i32* @y.880
  %10 = sub i32 %8, 237486557
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 237486557
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -928485356, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %153
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -928485356, label %22
    i32 -305707850, label %30
    i32 1574952025, label %61
    i32 -1326047024, label %64
    i32 -1425694874, label %80
    i32 -154754700, label %114
    i32 508865385, label %115
    i32 2090734299, label %120
    i32 92719432, label %121
    i32 1276676496, label %134
  ]

; <label>:21:                                     ; preds = %19
  br label %153

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -305707850, i32 92719432
  store i32 %29, i32* %18
  br label %153

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.8"*, align 8
  %32 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"** %32, %"class.std::__cxx11::basic_string"*** %5
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %31, align 8
  %33 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %33, align 8
  %34 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  store %"class.std::vector.8"* %34, %"class.std::vector.8"** %4
  %35 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %36 = bitcast %"class.std::vector.8"* %35 to %"struct.std::_Vector_base.9"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %38, align 8
  %40 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %41 = bitcast %"class.std::vector.8"* %40 to %"struct.std::_Vector_base.9"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %42, i32 0, i32 2
  %44 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %43, align 8
  %45 = icmp ne %"class.std::__cxx11::basic_string"* %39, %44
  store i1 %45, i1* %3
  %46 = load i32, i32* @x.879
  %47 = load i32, i32* @y.880
  %48 = add i32 %46, -804453481
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -804453481
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1574952025, i32 92719432
  store i32 %60, i32* %18
  br label %153

; <label>:61:                                     ; preds = %19
  %62 = load volatile i1, i1* %3
  %63 = select i1 %62, i32 -1326047024, i32 508865385
  store i32 %63, i32* %18
  br label %153

; <label>:64:                                     ; preds = %19
  %65 = load i32, i32* @x.879
  %66 = load i32, i32* @y.880
  %67 = sub i32 %65, 1888803599
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 1888803599
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 -1425694874, i32 1276676496
  store i32 %79, i32* %18
  br label %153

; <label>:80:                                     ; preds = %19
  %81 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %82 = bitcast %"class.std::vector.8"* %81 to %"struct.std::_Vector_base.9"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %82, i32 0, i32 0
  %84 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %83 to %"class.std::allocator.10"*
  %85 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %86 = bitcast %"class.std::vector.8"* %85 to %"struct.std::_Vector_base.9"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %87, i32 0, i32 1
  %89 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %88, align 8
  %90 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  %91 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %90, align 8
  %92 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %91) #3
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %84, %"class.std::__cxx11::basic_string"* %89, %"class.std::__cxx11::basic_string"* dereferenceable(32) %92)
  %93 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %94 = bitcast %"class.std::vector.8"* %93 to %"struct.std::_Vector_base.9"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %95, i32 0, i32 1
  %97 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %97, i32 1
  store %"class.std::__cxx11::basic_string"* %98, %"class.std::__cxx11::basic_string"** %96, align 8
  %99 = load i32, i32* @x.879
  %100 = load i32, i32* @y.880
  %101 = sub i32 %99, -1466787680
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -1466787680
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 -154754700, i32 1276676496
  store i32 %113, i32* %18
  br label %153

; <label>:114:                                    ; preds = %19
  store i32 2090734299, i32* %18
  br label %153

; <label>:115:                                    ; preds = %19
  %116 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  %117 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %116, align 8
  %118 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %117) #3
  %119 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_(%"class.std::vector.8"* %119, %"class.std::__cxx11::basic_string"* dereferenceable(32) %118)
  store i32 2090734299, i32* %18
  br label %153

; <label>:120:                                    ; preds = %19
  ret void

; <label>:121:                                    ; preds = %19
  %122 = alloca %"class.std::vector.8"*, align 8
  %123 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %122, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %123, align 8
  %124 = load %"class.std::vector.8"*, %"class.std::vector.8"** %122, align 8
  %125 = bitcast %"class.std::vector.8"* %124 to %"struct.std::_Vector_base.9"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %125, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %126, i32 0, i32 1
  %128 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %127, align 8
  %129 = bitcast %"class.std::vector.8"* %124 to %"struct.std::_Vector_base.9"*
  %130 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %129, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %130, i32 0, i32 2
  %132 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %131, align 8
  %133 = icmp ne %"class.std::__cxx11::basic_string"* %128, %132
  store i32 -305707850, i32* %18
  br label %153

; <label>:134:                                    ; preds = %19
  %135 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %136 = bitcast %"class.std::vector.8"* %135 to %"struct.std::_Vector_base.9"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %136, i32 0, i32 0
  %138 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %137 to %"class.std::allocator.10"*
  %139 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %140 = bitcast %"class.std::vector.8"* %139 to %"struct.std::_Vector_base.9"*
  %141 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %141, i32 0, i32 1
  %143 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %142, align 8
  %144 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %5
  %145 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %144, align 8
  %146 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %145) #3
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %138, %"class.std::__cxx11::basic_string"* %143, %"class.std::__cxx11::basic_string"* dereferenceable(32) %146)
  %147 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %148 = bitcast %"class.std::vector.8"* %147 to %"struct.std::_Vector_base.9"*
  %149 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %149, i32 0, i32 1
  %151 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %150, align 8
  %152 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %151, i32 1
  store %"class.std::__cxx11::basic_string"* %152, %"class.std::__cxx11::basic_string"** %150, align 8
  store i32 -1425694874, i32* %18
  br label %153

; <label>:153:                                    ; preds = %134, %121, %115, %114, %80, %64, %61, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  ret %"class.std::__cxx11::basic_string"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %11 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %8, %"class.std::__cxx11::basic_string"* %9, %"class.std::__cxx11::basic_string"* dereferenceable(32) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  ret %"class.std::__cxx11::basic_string"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJS5_EEEvDpOT_(%"class.std::vector.8"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.8"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %12, i64 %13)
  store %"class.std::__cxx11::basic_string"* %14, %"class.std::__cxx11::basic_string"** %6, align 8
  %15 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %7, align 8
  %16 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %17 to %"class.std::allocator.10"*
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 %20
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %23 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %22) #3
  invoke void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %18, %"class.std::__cxx11::basic_string"* %21, %"class.std::__cxx11::basic_string"* dereferenceable(32) %23)
          to label %24 unwind label %135

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.887
  %26 = load i32, i32* @y.888
  %27 = sub i32 %25, -582349866
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -582349866
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %334

; <label>:51:                                     ; preds = %24, %334
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %7, align 8
  %52 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %53, i32 0, i32 0
  %55 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %54, align 8
  %56 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %58, align 8
  %60 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %61 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %62 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %61) #3
  %63 = load i32, i32* @x.887
  %64 = load i32, i32* @y.888
  %65 = sub i32 %63, -1722286838
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1722286838
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %334

; <label>:77:                                     ; preds = %51
  %78 = invoke %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"* %55, %"class.std::__cxx11::basic_string"* %59, %"class.std::__cxx11::basic_string"* %60, %"class.std::allocator.10"* dereferenceable(1) %62)
          to label %79 unwind label %135

; <label>:79:                                     ; preds = %77
  %80 = load i32, i32* @x.887
  %81 = load i32, i32* @y.888
  %82 = add i32 %80, 832018982
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 832018982
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 false, true
  %93 = and i1 %90, false
  %94 = and i1 %88, %92
  %95 = and i1 %91, false
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 false, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %346

; <label>:106:                                    ; preds = %79, %346
  store %"class.std::__cxx11::basic_string"* %78, %"class.std::__cxx11::basic_string"** %7, align 8
  %107 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %107, i32 1
  store %"class.std::__cxx11::basic_string"* %108, %"class.std::__cxx11::basic_string"** %7, align 8
  %109 = load i32, i32* @x.887
  %110 = load i32, i32* @y.888
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  br i1 %132, label %134, label %346

; <label>:134:                                    ; preds = %106
  br label %239

; <label>:135:                                    ; preds = %77, %2
  %136 = landingpad { i8*, i32 }
          catch i8* null
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %8, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %9, align 4
  br label %139

; <label>:139:                                    ; preds = %135
  %140 = load i32, i32* @x.887
  %141 = load i32, i32* @y.888
  %142 = add i32 %140, -1399283453
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, -1399283453
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 true, true
  %153 = and i1 %150, true
  %154 = and i1 %148, %152
  %155 = and i1 %151, true
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 true, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %349

; <label>:166:                                    ; preds = %139, %349
  %167 = load i8*, i8** %8, align 8
  %168 = call i8* @__cxa_begin_catch(i8* %167) #3
  %169 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %170 = icmp ne %"class.std::__cxx11::basic_string"* %169, null
  %171 = load i32, i32* @x.887
  %172 = load i32, i32* @y.888
  %173 = sub i32 %171, -2065437784
  %174 = sub i32 %173, 1
  %175 = add i32 %174, -2065437784
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %349

; <label>:185:                                    ; preds = %166
  br i1 %170, label %198, label %186

; <label>:186:                                    ; preds = %185
  %187 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %187, i32 0, i32 0
  %189 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %188 to %"class.std::allocator.10"*
  %190 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %191 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %192 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %190, i64 %191
  invoke void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator.10"* dereferenceable(1) %189, %"class.std::__cxx11::basic_string"* %192)
          to label %193 unwind label %194

; <label>:193:                                    ; preds = %186
  br label %204

; <label>:194:                                    ; preds = %208, %204, %198, %186
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %8, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %209 unwind label %330

; <label>:198:                                    ; preds = %185
  %199 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %200 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %201 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %202 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %201) #3
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %199, %"class.std::__cxx11::basic_string"* %200, %"class.std::allocator.10"* dereferenceable(1) %202)
          to label %203 unwind label %194

; <label>:203:                                    ; preds = %198
  br label %204

; <label>:204:                                    ; preds = %203, %193
  %205 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %206 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %207 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.9"* %205, %"class.std::__cxx11::basic_string"* %206, i64 %207)
          to label %208 unwind label %194

; <label>:208:                                    ; preds = %204
  invoke void @__cxa_rethrow() #13
          to label %333 unwind label %194

; <label>:209:                                    ; preds = %194
  %210 = load i32, i32* @x.887
  %211 = load i32, i32* @y.888
  %212 = add i32 %210, 924903477
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, 924903477
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  br i1 %222, label %224, label %354

; <label>:224:                                    ; preds = %209, %354
  %225 = load i32, i32* @x.887
  %226 = load i32, i32* @y.888
  %227 = sub i32 0, 1
  %228 = add i32 %225, %227
  %229 = sub i32 %225, 1
  %230 = mul i32 %225, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %226, 10
  %234 = and i1 %232, %233
  %235 = xor i1 %232, %233
  %236 = or i1 %234, %235
  %237 = or i1 %232, %233
  br i1 %236, label %238, label %354

; <label>:238:                                    ; preds = %224
  br label %284

; <label>:239:                                    ; preds = %134
  %240 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %241 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %241, i32 0, i32 0
  %243 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %242, align 8
  %244 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %245, i32 0, i32 1
  %247 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %246, align 8
  %248 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %249 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %248) #3
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %243, %"class.std::__cxx11::basic_string"* %247, %"class.std::allocator.10"* dereferenceable(1) %249)
  %250 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %251 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %252 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %251, i32 0, i32 0
  %253 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %252, i32 0, i32 0
  %254 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %253, align 8
  %255 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %256 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %255, i32 0, i32 0
  %257 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %256, i32 0, i32 2
  %258 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %257, align 8
  %259 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %260 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %259, i32 0, i32 0
  %261 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %260, i32 0, i32 0
  %262 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %261, align 8
  %263 = ptrtoint %"class.std::__cxx11::basic_string"* %258 to i64
  %264 = ptrtoint %"class.std::__cxx11::basic_string"* %262 to i64
  %265 = add i64 %263, -7298959505021393556
  %266 = sub i64 %265, %264
  %267 = sub i64 %266, -7298959505021393556
  %268 = sub i64 %263, %264
  %269 = sdiv exact i64 %267, 32
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.9"* %250, %"class.std::__cxx11::basic_string"* %254, i64 %269)
  %270 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %271 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %272 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %271, i32 0, i32 0
  %273 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %272, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %270, %"class.std::__cxx11::basic_string"** %273, align 8
  %274 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %275 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %276 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %275, i32 0, i32 0
  %277 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %276, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %274, %"class.std::__cxx11::basic_string"** %277, align 8
  %278 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %279 = load i64, i64* %5, align 8
  %280 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %278, i64 %279
  %281 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %282 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %281, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %282, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %280, %"class.std::__cxx11::basic_string"** %283, align 8
  ret void

; <label>:284:                                    ; preds = %238
  %285 = load i32, i32* @x.887
  %286 = load i32, i32* @y.888
  %287 = sub i32 %285, -1091516962
  %288 = sub i32 %287, 1
  %289 = add i32 %288, -1091516962
  %290 = sub i32 %285, 1
  %291 = mul i32 %285, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %286, 10
  %295 = xor i1 %293, true
  %296 = xor i1 %294, true
  %297 = xor i1 false, true
  %298 = and i1 %295, false
  %299 = and i1 %293, %297
  %300 = and i1 %296, false
  %301 = and i1 %294, %297
  %302 = or i1 %298, %299
  %303 = or i1 %300, %301
  %304 = xor i1 %302, %303
  %305 = or i1 %295, %296
  %306 = xor i1 %305, true
  %307 = or i1 false, %297
  %308 = and i1 %306, %307
  %309 = or i1 %304, %308
  %310 = or i1 %293, %294
  br i1 %309, label %311, label %355

; <label>:311:                                    ; preds = %284, %355
  %312 = load i8*, i8** %8, align 8
  %313 = load i32, i32* %9, align 4
  %314 = insertvalue { i8*, i32 } undef, i8* %312, 0
  %315 = insertvalue { i8*, i32 } %314, i32 %313, 1
  %316 = load i32, i32* @x.887
  %317 = load i32, i32* @y.888
  %318 = sub i32 0, 1
  %319 = add i32 %316, %318
  %320 = sub i32 %316, 1
  %321 = mul i32 %316, %319
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %317, 10
  %325 = and i1 %323, %324
  %326 = xor i1 %323, %324
  %327 = or i1 %325, %326
  %328 = or i1 %323, %324
  br i1 %327, label %329, label %355

; <label>:329:                                    ; preds = %311
  resume { i8*, i32 } %315

; <label>:330:                                    ; preds = %194
  %331 = landingpad { i8*, i32 }
          catch i8* null
  %332 = extractvalue { i8*, i32 } %331, 0
  call void @__clang_call_terminate(i8* %332) #10
  unreachable

; <label>:333:                                    ; preds = %208
  unreachable

; <label>:334:                                    ; preds = %51, %24
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %7, align 8
  %335 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %336 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %335, i32 0, i32 0
  %337 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %336, i32 0, i32 0
  %338 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %337, align 8
  %339 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %340 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %340, i32 0, i32 1
  %342 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %341, align 8
  %343 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %344 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %345 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %344) #3
  br label %51

; <label>:346:                                    ; preds = %106, %79
  store %"class.std::__cxx11::basic_string"* %78, %"class.std::__cxx11::basic_string"** %7, align 8
  %347 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %348 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %347, i32 1
  store %"class.std::__cxx11::basic_string"* %348, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %106

; <label>:349:                                    ; preds = %166, %139
  %350 = load i8*, i8** %8, align 8
  %351 = call i8* @__cxa_begin_catch(i8* %350) #3
  %352 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %353 = icmp ne %"class.std::__cxx11::basic_string"* %352, null
  br label %166

; <label>:354:                                    ; preds = %224, %209
  br label %224

; <label>:355:                                    ; preds = %311, %284
  %356 = load i8*, i8** %8, align 8
  %357 = load i32, i32* %9, align 4
  %358 = insertvalue { i8*, i32 } undef, i8* %356, 0
  %359 = insertvalue { i8*, i32 } %358, i32 %357, 1
  br label %311
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %9 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  %10 = bitcast i8* %9 to %"class.std::__cxx11::basic_string"*
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %12 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %11) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %10, %"class.std::__cxx11::basic_string"* dereferenceable(32) %12) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.8"*
  %9 = alloca %"class.std::vector.8"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %9, align 8
  store %"class.std::vector.8"* %14, %"class.std::vector.8"** %8
  %15 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %16 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %15) #3
  %17 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %18 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %17) #3
  %19 = add i64 %16, -2378270916481719138
  %20 = sub i64 %19, %18
  %21 = sub i64 %20, -2378270916481719138
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -1752555555, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %192
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -1752555555, label %29
    i32 -1296024455, label %34
    i32 -893548750, label %49
    i32 127892578, label %66
    i32 187901674, label %67
    i32 -91514256, label %83
    i32 -1823062674, label %89
    i32 -2132501474, label %105
    i32 -1525165415, label %135
    i32 -2000994617, label %137
    i32 -1985434597, label %139
    i32 1957428781, label %168
    i32 761559620, label %184
    i32 -1142393990, label %186
    i32 -1195455434, label %188
    i32 -563133005, label %191
  ]

; <label>:28:                                     ; preds = %26
  br label %192

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -1296024455, i32 187901674
  store i32 %33, i32* %24
  br label %192

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.891
  %36 = load i32, i32* @y.892
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -893548750, i32 -1142393990
  store i32 %48, i32* %24
  br label %192

; <label>:49:                                     ; preds = %26
  %50 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %50) #13
  %51 = load i32, i32* @x.891
  %52 = load i32, i32* @y.892
  %53 = add i32 %51, -1846430287
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1846430287
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 127892578, i32 -1142393990
  store i32 %65, i32* %24
  br label %192

; <label>:66:                                     ; preds = %26
  unreachable

; <label>:67:                                     ; preds = %26
  %68 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %69 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %68) #3
  %70 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %71 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %70) #3
  store i64 %71, i64* %13, align 8
  %72 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %69, -5212991624130447132
  %75 = add i64 %74, %73
  %76 = sub i64 %75, -5212991624130447132
  %77 = add i64 %69, %73
  store i64 %76, i64* %12, align 8
  %78 = load i64, i64* %12, align 8
  %79 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %80 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"* %79) #3
  %81 = icmp ult i64 %78, %80
  %82 = select i1 %81, i32 -1823062674, i32 -91514256
  store i32 %82, i32* %24
  br label %192

; <label>:83:                                     ; preds = %26
  %84 = load i64, i64* %12, align 8
  %85 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %86 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %85) #3
  %87 = icmp ugt i64 %84, %86
  %88 = select i1 %87, i32 -1823062674, i32 -2000994617
  store i32 %88, i32* %24
  br label %192

; <label>:89:                                     ; preds = %26
  %90 = load i32, i32* @x.891
  %91 = load i32, i32* @y.892
  %92 = sub i32 %90, -374413328
  %93 = sub i32 %92, 1
  %94 = add i32 %93, -374413328
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  %104 = select i1 %102, i32 -2132501474, i32 -1195455434
  store i32 %104, i32* %24
  br label %192

; <label>:105:                                    ; preds = %26
  %106 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %107 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %106) #3
  store i64 %107, i64* %5
  %108 = load i32, i32* @x.891
  %109 = load i32, i32* @y.892
  %110 = sub i32 %108, 714826513
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 714826513
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -1525165415, i32 -1195455434
  store i32 %134, i32* %24
  br label %192

; <label>:135:                                    ; preds = %26
  store i32 -1985434597, i32* %24
  %136 = load volatile i64, i64* %5
  store i64 %136, i64* %25
  br label %192

; <label>:137:                                    ; preds = %26
  %138 = load i64, i64* %12, align 8
  store i32 -1985434597, i32* %24
  store i64 %138, i64* %25
  br label %192

; <label>:139:                                    ; preds = %26
  %140 = load i64, i64* %25
  store i64 %140, i64* %4
  %141 = load i32, i32* @x.891
  %142 = load i32, i32* @y.892
  %143 = sub i32 %141, -285105867
  %144 = sub i32 %143, 1
  %145 = add i32 %144, -285105867
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  %167 = select i1 %165, i32 1957428781, i32 -563133005
  store i32 %167, i32* %24
  br label %192

; <label>:168:                                    ; preds = %26
  %169 = load i32, i32* @x.891
  %170 = load i32, i32* @y.892
  %171 = sub i32 %169, 1259222189
  %172 = sub i32 %171, 1
  %173 = add i32 %172, 1259222189
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  %183 = select i1 %181, i32 761559620, i32 -563133005
  store i32 %183, i32* %24
  br label %192

; <label>:184:                                    ; preds = %26
  %185 = load volatile i64, i64* %4
  ret i64 %185

; <label>:186:                                    ; preds = %26
  %187 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %187) #13
  store i32 -893548750, i32* %24
  br label %192

; <label>:188:                                    ; preds = %26
  %189 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %190 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"* %189) #3
  store i32 -2132501474, i32* %24
  br label %192

; <label>:191:                                    ; preds = %26
  store i32 1957428781, i32* %24
  br label %192

; <label>:192:                                    ; preds = %191, %188, %186, %168, %139, %137, %135, %105, %89, %83, %67, %49, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::basic_string"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.893
  %10 = load i32, i32* @y.894
  %11 = add i32 %9, 452473477
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 452473477
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -270573074, i32* %19
  %20 = alloca %"class.std::__cxx11::basic_string"*
  br label %21

; <label>:21:                                     ; preds = %2, %137
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -270573074, label %24
    i32 -1519764446, label %32
    i32 928708291, label %67
    i32 1183609406, label %70
    i32 -298880633, label %97
    i32 646405784, label %119
    i32 446269385, label %121
    i32 1677570668, label %122
    i32 -39164477, label %124
    i32 1660490077, label %130
  ]

; <label>:23:                                     ; preds = %21
  br label %137

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1519764446, i32 -39164477
  store i32 %31, i32* %19
  br label %137

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.9"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %33, align 8
  store %"struct.std::_Vector_base.9"* %36, %"struct.std::_Vector_base.9"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.893
  %41 = load i32, i32* @y.894
  %42 = add i32 %40, -1917981820
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1917981820
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 928708291, i32 -39164477
  store i32 %66, i32* %19
  br label %137

; <label>:67:                                     ; preds = %21
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 1183609406, i32 446269385
  store i32 %69, i32* %19
  br label %137

; <label>:70:                                     ; preds = %21
  %71 = load i32, i32* @x.893
  %72 = load i32, i32* @y.894
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 -298880633, i32 1660490077
  store i32 %96, i32* %19
  br label %137

; <label>:97:                                     ; preds = %21
  %98 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %99 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %98, i32 0, i32 0
  %100 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %99 to %"class.std::allocator.10"*
  %101 = load volatile i64*, i64** %6
  %102 = load i64, i64* %101, align 8
  %103 = call %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.10"* dereferenceable(1) %100, i64 %102)
  store %"class.std::__cxx11::basic_string"* %103, %"class.std::__cxx11::basic_string"** %3
  %104 = load i32, i32* @x.893
  %105 = load i32, i32* @y.894
  %106 = sub i32 %104, -1663647809
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -1663647809
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 646405784, i32 1660490077
  store i32 %118, i32* %19
  br label %137

; <label>:119:                                    ; preds = %21
  store i32 1677570668, i32* %19
  %120 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3
  store %"class.std::__cxx11::basic_string"* %120, %"class.std::__cxx11::basic_string"** %20
  br label %137

; <label>:121:                                    ; preds = %21
  store i32 1677570668, i32* %19
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %20
  br label %137

; <label>:122:                                    ; preds = %21
  %123 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %20
  ret %"class.std::__cxx11::basic_string"* %123

; <label>:124:                                    ; preds = %21
  %125 = alloca %"struct.std::_Vector_base.9"*, align 8
  %126 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %125, align 8
  store i64 %1, i64* %126, align 8
  %127 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %125, align 8
  %128 = load i64, i64* %126, align 8
  %129 = icmp ne i64 %128, 0
  store i32 -1519764446, i32* %19
  br label %137

; <label>:130:                                    ; preds = %21
  %131 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %132 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %131, i32 0, i32 0
  %133 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %132 to %"class.std::allocator.10"*
  %134 = load volatile i64*, i64** %6
  %135 = load i64, i64* %134, align 8
  %136 = call %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.10"* dereferenceable(1) %133, i64 %135)
  store i32 -298880633, i32* %19
  br label %137

; <label>:137:                                    ; preds = %130, %124, %121, %119, %97, %70, %67, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %10, align 8
  %12 = ptrtoint %"class.std::__cxx11::basic_string"* %7 to i64
  %13 = ptrtoint %"class.std::__cxx11::basic_string"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 32
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.44", align 8
  %10 = alloca %"class.std::move_iterator.44", align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %9, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %13, align 8
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %15 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %10, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %16, align 8
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %18 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %10, i32 0, i32 0
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %21, align 8
  %23 = call %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"* %20, %"class.std::__cxx11::basic_string"* %22, %"class.std::__cxx11::basic_string"* %17, %"class.std::allocator.10"* dereferenceable(1) %18)
  ret %"class.std::__cxx11::basic_string"* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator.10"* dereferenceable(1), %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.std::__cxx11::basic_string"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.903
  %7 = load i32, i32* @y.904
  %8 = add i32 %6, 1421554533
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1421554533
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1195314025, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %56
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1195314025, label %20
    i32 851546815, label %28
    i32 1504164228, label %49
    i32 1339087009, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %56

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 851546815, i32 1339087009
  store i32 %27, i32* %16
  br label %56

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %30 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %31 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %29, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %30, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %31, align 8
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %29, align 8
  %33 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %30, align 8
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %32, %"class.std::__cxx11::basic_string"* %33)
  %34 = load i32, i32* @x.903
  %35 = load i32, i32* @y.904
  %36 = sub i32 %34, -498108908
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -498108908
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1504164228, i32 1339087009
  store i32 %48, i32* %16
  br label %56

; <label>:49:                                     ; preds = %17
  ret void

; <label>:50:                                     ; preds = %17
  %51 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %52 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %53 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %51, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %52, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %53, align 8
  %54 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %51, align 8
  %55 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %52, align 8
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %54, %"class.std::__cxx11::basic_string"* %55)
  store i32 851546815, i32* %16
  br label %56

; <label>:56:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.9"*, %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %9, %"struct.std::_Vector_base.9"** %5
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::__cxx11::basic_string"* %10, %"class.std::__cxx11::basic_string"** %4
  %11 = alloca i32
  store i32 -1101673223, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1101673223, label %15
    i32 -603037254, label %19
    i32 997667750, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  %17 = icmp ne %"class.std::__cxx11::basic_string"* %16, null
  %18 = select i1 %17, i32 -603037254, i32 997667750
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %21 to %"class.std::allocator.10"*
  %23 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.10"* dereferenceable(1) %22, %"class.std::__cxx11::basic_string"* %23, i64 %24)
  store i32 997667750, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.913
  %5 = load i32, i32* @y.914
  %6 = sub i32 %4, -348999424
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -348999424
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1233816438, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1233816438, label %18
    i32 -1842652850, label %38
    i32 -1399464826, label %67
    i32 -45114200, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1842652850, i32 -45114200
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %39, align 8
  %41 = load i32, i32* @x.913
  %42 = load i32, i32* @y.914
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1399464826, i32 -45114200
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret i64 576460752303423487

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %69, align 8
  store i32 -1842652850, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.10"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %6, i64 %7, i8* null)
  ret %"class.std::__cxx11::basic_string"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.917
  %9 = load i32, i32* @y.918
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1987656550, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1987656550, label %21
    i32 1543947404, label %29
    i32 -779929248, label %66
    i32 -292750490, label %69
    i32 1375765402, label %70
    i32 -1247468430, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1543947404, i32 -1247468430
  store i32 %28, i32* %17
  br label %84

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %5
  %32 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %30, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  store i8* %2, i8** %32, align 8
  %34 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %30, align 8
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %34) #3
  %38 = icmp ugt i64 %36, %37
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.917
  %40 = load i32, i32* @y.918
  %41 = sub i32 %39, -703622204
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -703622204
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -779929248, i32 -1247468430
  store i32 %65, i32* %17
  br label %84

; <label>:66:                                     ; preds = %18
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -292750490, i32 1375765402
  store i32 %68, i32* %17
  br label %84

; <label>:69:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:70:                                     ; preds = %18
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 32
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to %"class.std::__cxx11::basic_string"*
  ret %"class.std::__cxx11::basic_string"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %80) #3
  %83 = icmp ugt i64 %81, %82
  store i32 1543947404, i32* %17
  br label %84

; <label>:84:                                     ; preds = %76, %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.44", align 8
  %6 = alloca %"class.std::move_iterator.44", align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.44", align 8
  %10 = alloca %"class.std::move_iterator.44", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %6, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %12, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.44"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.44"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.44"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.44"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %9, i32 0, i32 0
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %10, i32 0, i32 0
  %21 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %20, align 8
  %22 = call %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"* %19, %"class.std::__cxx11::basic_string"* %21, %"class.std::__cxx11::basic_string"* %17)
  ret %"class.std::__cxx11::basic_string"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.44", align 8
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  call void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator.44"* %2, %"class.std::__cxx11::basic_string"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %2, i32 0, i32 0
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  ret %"class.std::__cxx11::basic_string"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.44", align 8
  %5 = alloca %"class.std::move_iterator.44", align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.44", align 8
  %9 = alloca %"class.std::move_iterator.44", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %4, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %11, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.44"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.44"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.44"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.44"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %8, i32 0, i32 0
  %18 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8
  %21 = call %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* %18, %"class.std::__cxx11::basic_string"* %20, %"class.std::__cxx11::basic_string"* %16)
  ret %"class.std::__cxx11::basic_string"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.44", align 8
  %5 = alloca %"class.std::move_iterator.44", align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %4, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %11, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %118, %3
  %14 = load i32, i32* @x.925
  %15 = load i32, i32* @y.926
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %232

; <label>:39:                                     ; preds = %13, %232
  %40 = load i32, i32* @x.925
  %41 = load i32, i32* @y.926
  %42 = sub i32 %40, 1325913864
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1325913864
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %232

; <label>:66:                                     ; preds = %39
  %67 = invoke zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.44"* dereferenceable(8) %4, %"class.std::move_iterator.44"* dereferenceable(8) %5)
          to label %68 unwind label %121

; <label>:68:                                     ; preds = %66
  br i1 %67, label %69, label %131

; <label>:69:                                     ; preds = %68
  %70 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %71 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %70) #3
  %72 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator.44"* %4)
          to label %73 unwind label %121

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* @x.925
  %75 = load i32, i32* @y.926
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %233

; <label>:99:                                     ; preds = %73, %233
  %100 = load i32, i32* @x.925
  %101 = load i32, i32* @y.926
  %102 = sub i32 %100, 642850617
  %103 = sub i32 %102, 1
  %104 = add i32 %103, 642850617
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  br i1 %112, label %114, label %233

; <label>:114:                                    ; preds = %99
  invoke void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"* %71, %"class.std::__cxx11::basic_string"* dereferenceable(32) %72)
          to label %115 unwind label %121

; <label>:115:                                    ; preds = %114
  br label %116

; <label>:116:                                    ; preds = %115
  %117 = invoke dereferenceable(8) %"class.std::move_iterator.44"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator.44"* %4)
          to label %118 unwind label %121

; <label>:118:                                    ; preds = %116
  %119 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %120 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %119, i32 1
  store %"class.std::__cxx11::basic_string"* %120, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %13

; <label>:121:                                    ; preds = %116, %114, %69, %66
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %8, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %9, align 4
  br label %125

; <label>:125:                                    ; preds = %121
  %126 = load i8*, i8** %8, align 8
  %127 = call i8* @__cxa_begin_catch(i8* %126) #3
  %128 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %129 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %128, %"class.std::__cxx11::basic_string"* %129)
          to label %130 unwind label %187

; <label>:130:                                    ; preds = %125
  invoke void @__cxa_rethrow() #13
          to label %231 unwind label %187

; <label>:131:                                    ; preds = %68
  %132 = load i32, i32* @x.925
  %133 = load i32, i32* @y.926
  %134 = add i32 %132, -288049177
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, -288049177
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %234

; <label>:158:                                    ; preds = %131, %234
  %159 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %160 = load i32, i32* @x.925
  %161 = load i32, i32* @y.926
  %162 = add i32 %160, -1891196424
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, -1891196424
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = xor i1 %168, true
  %171 = xor i1 %169, true
  %172 = xor i1 true, true
  %173 = and i1 %170, true
  %174 = and i1 %168, %172
  %175 = and i1 %171, true
  %176 = and i1 %169, %172
  %177 = or i1 %173, %174
  %178 = or i1 %175, %176
  %179 = xor i1 %177, %178
  %180 = or i1 %170, %171
  %181 = xor i1 %180, true
  %182 = or i1 true, %172
  %183 = and i1 %181, %182
  %184 = or i1 %179, %183
  %185 = or i1 %168, %169
  br i1 %184, label %186, label %234

; <label>:186:                                    ; preds = %158
  ret %"class.std::__cxx11::basic_string"* %159

; <label>:187:                                    ; preds = %130, %125
  %188 = landingpad { i8*, i32 }
          cleanup
  %189 = extractvalue { i8*, i32 } %188, 0
  store i8* %189, i8** %8, align 8
  %190 = extractvalue { i8*, i32 } %188, 1
  store i32 %190, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %191 unwind label %228

; <label>:191:                                    ; preds = %187
  br label %223
                                                  ; No predecessors!
  %193 = load i32, i32* @x.925
  %194 = load i32, i32* @y.926
  %195 = sub i32 %193, -2079003464
  %196 = sub i32 %195, 1
  %197 = add i32 %196, -2079003464
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %236

; <label>:207:                                    ; preds = %192, %236
  call void @llvm.trap()
  %208 = load i32, i32* @x.925
  %209 = load i32, i32* @y.926
  %210 = add i32 %208, -717904712
  %211 = sub i32 %210, 1
  %212 = sub i32 %211, -717904712
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = and i1 %216, %217
  %219 = xor i1 %216, %217
  %220 = or i1 %218, %219
  %221 = or i1 %216, %217
  br i1 %220, label %222, label %236

; <label>:222:                                    ; preds = %207
  unreachable

; <label>:223:                                    ; preds = %191
  %224 = load i8*, i8** %8, align 8
  %225 = load i32, i32* %9, align 4
  %226 = insertvalue { i8*, i32 } undef, i8* %224, 0
  %227 = insertvalue { i8*, i32 } %226, i32 %225, 1
  resume { i8*, i32 } %227

; <label>:228:                                    ; preds = %187
  %229 = landingpad { i8*, i32 }
          catch i8* null
  %230 = extractvalue { i8*, i32 } %229, 0
  call void @__clang_call_terminate(i8* %230) #10
  unreachable

; <label>:231:                                    ; preds = %130
  unreachable

; <label>:232:                                    ; preds = %39, %13
  br label %39

; <label>:233:                                    ; preds = %99, %73
  br label %99

; <label>:234:                                    ; preds = %158, %131
  %235 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %158

; <label>:236:                                    ; preds = %207, %192
  call void @llvm.trap()
  br label %207
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.44"* dereferenceable(8), %"class.std::move_iterator.44"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.44"*, align 8
  %4 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %3, align 8
  store %"class.std::move_iterator.44"* %1, %"class.std::move_iterator.44"** %4, align 8
  %5 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %3, align 8
  %6 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.44"* dereferenceable(8) %5, %"class.std::move_iterator.44"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %6 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::__cxx11::basic_string"*
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %9 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %8) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"* dereferenceable(32) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.931
  %6 = load i32, i32* @y.932
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1955007670, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1955007670, label %18
    i32 1150581355, label %26
    i32 395611885, label %57
    i32 1355065989, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1150581355, i32 1355065989
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %27, align 8
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %27, align 8
  %29 = bitcast %"class.std::__cxx11::basic_string"* %28 to i8*
  %30 = bitcast i8* %29 to %"class.std::__cxx11::basic_string"*
  store %"class.std::__cxx11::basic_string"* %30, %"class.std::__cxx11::basic_string"** %2
  %31 = load i32, i32* @x.931
  %32 = load i32, i32* @y.932
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 395611885, i32 1355065989
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2
  ret %"class.std::__cxx11::basic_string"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %60, align 8
  %61 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %60, align 8
  %62 = bitcast %"class.std::__cxx11::basic_string"* %61 to i8*
  %63 = bitcast i8* %62 to %"class.std::__cxx11::basic_string"*
  store i32 1150581355, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator.44"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %2, align 8
  %3 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.44"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator.44"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %2, align 8
  %3 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %5, i32 1
  store %"class.std::__cxx11::basic_string"* %6, %"class.std::__cxx11::basic_string"** %4, align 8
  ret %"class.std::move_iterator.44"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"* %5, %"class.std::__cxx11::basic_string"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.44"* dereferenceable(8), %"class.std::move_iterator.44"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.939
  %7 = load i32, i32* @y.940
  %8 = add i32 %6, -1357571777
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1357571777
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1832705223, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1832705223, label %20
    i32 -1423366831, label %28
    i32 1920459535, label %62
    i32 -310000380, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1423366831, i32 -310000380
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.44"*, align 8
  %30 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %29, align 8
  store %"class.std::move_iterator.44"* %1, %"class.std::move_iterator.44"** %30, align 8
  %31 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %29, align 8
  %32 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.44"* %31)
  %33 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %30, align 8
  %34 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.44"* %33)
  %35 = icmp eq %"class.std::__cxx11::basic_string"* %32, %34
  store i1 %35, i1* %3
  %36 = load i32, i32* @x.939
  %37 = load i32, i32* @y.940
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1920459535, i32 -310000380
  store i32 %61, i32* %16
  br label %72

; <label>:62:                                     ; preds = %17
  %63 = load volatile i1, i1* %3
  ret i1 %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::move_iterator.44"*, align 8
  %66 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %65, align 8
  store %"class.std::move_iterator.44"* %1, %"class.std::move_iterator.44"** %66, align 8
  %67 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %65, align 8
  %68 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.44"* %67)
  %69 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %66, align 8
  %70 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.44"* %69)
  %71 = icmp eq %"class.std::__cxx11::basic_string"* %68, %70
  store i32 -1423366831, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.44"*) #5 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::basic_string"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.941
  %6 = load i32, i32* @y.942
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1655020899, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1655020899, label %18
    i32 -1476792459, label %38
    i32 -1873548544, label %57
    i32 734090072, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1476792459, i32 734090072
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %39, align 8
  %40 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %39, align 8
  %41 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %40, i32 0, i32 0
  %42 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %41, align 8
  store %"class.std::__cxx11::basic_string"* %42, %"class.std::__cxx11::basic_string"** %2
  %43 = load i32, i32* @x.941
  %44 = load i32, i32* @y.942
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1873548544, i32 734090072
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2
  ret %"class.std::__cxx11::basic_string"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::move_iterator.44"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %60, align 8
  %61 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %60, align 8
  %62 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %61, i32 0, i32 0
  %63 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %62, align 8
  store i32 -1476792459, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = alloca i32
  store i32 152851283, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %112
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 152851283, label %9
    i32 -1419076403, label %14
    i32 -770245488, label %41
    i32 1136322355, label %70
    i32 -589702405, label %71
    i32 1341339363, label %87
    i32 -599086004, label %104
    i32 1172276030, label %105
    i32 1846558387, label %106
    i32 -1554889499, label %109
  ]

; <label>:8:                                      ; preds = %6
  br label %112

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %12 = icmp ne %"class.std::__cxx11::basic_string"* %10, %11
  %13 = select i1 %12, i32 -1419076403, i32 1172276030
  store i32 %13, i32* %5
  br label %112

; <label>:14:                                     ; preds = %6
  %15 = load i32, i32* @x.943
  %16 = load i32, i32* @y.944
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -770245488, i32 1846558387
  store i32 %40, i32* %5
  br label %112

; <label>:41:                                     ; preds = %6
  %42 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %43 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %42) #3
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %43)
  %44 = load i32, i32* @x.943
  %45 = load i32, i32* @y.944
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1136322355, i32 1846558387
  store i32 %69, i32* %5
  br label %112

; <label>:70:                                     ; preds = %6
  store i32 -589702405, i32* %5
  br label %112

; <label>:71:                                     ; preds = %6
  %72 = load i32, i32* @x.943
  %73 = load i32, i32* @y.944
  %74 = add i32 %72, 876555824
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, 876555824
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 1341339363, i32 -1554889499
  store i32 %86, i32* %5
  br label %112

; <label>:87:                                     ; preds = %6
  %88 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %89 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %88, i32 1
  store %"class.std::__cxx11::basic_string"* %89, %"class.std::__cxx11::basic_string"** %3, align 8
  %90 = load i32, i32* @x.943
  %91 = load i32, i32* @y.944
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  %103 = select i1 %101, i32 -599086004, i32 -1554889499
  store i32 %103, i32* %5
  br label %112

; <label>:104:                                    ; preds = %6
  store i32 152851283, i32* %5
  br label %112

; <label>:105:                                    ; preds = %6
  ret void

; <label>:106:                                    ; preds = %6
  %107 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %108 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %107) #3
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %108)
  store i32 -770245488, i32* %5
  br label %112

; <label>:109:                                    ; preds = %6
  %110 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %111 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %110, i32 1
  store %"class.std::__cxx11::basic_string"* %111, %"class.std::__cxx11::basic_string"** %3, align 8
  store i32 1341339363, i32* %5
  br label %112

; <label>:112:                                    ; preds = %109, %106, %104, %87, %71, %70, %41, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"*) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator.44"*, %"class.std::__cxx11::basic_string"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.44"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::move_iterator.44"* %0, %"class.std::move_iterator.44"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::move_iterator.44"*, %"class.std::move_iterator.44"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.44", %"class.std::move_iterator.44"* %5, i32 0, i32 0
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::__cxx11::basic_string"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.10"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.951
  %7 = load i32, i32* @y.952
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1681397881, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1681397881, label %19
    i32 -1232533443, label %39
    i32 106590293, label %62
    i32 1381336757, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1232533443, i32 1381336757
  store i32 %38, i32* %15
  br label %71

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.10"*, align 8
  %41 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %40, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %40, align 8
  %44 = bitcast %"class.std::allocator.10"* %43 to %"class.__gnu_cxx::new_allocator.11"*
  %45 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %41, align 8
  %46 = load i64, i64* %42, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.11"* %44, %"class.std::__cxx11::basic_string"* %45, i64 %46)
  %47 = load i32, i32* @x.951
  %48 = load i32, i32* @y.952
  %49 = add i32 %47, 409934454
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 409934454
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 106590293, i32 1381336757
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator.10"*, align 8
  %65 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %64, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %64, align 8
  %68 = bitcast %"class.std::allocator.10"* %67 to %"class.__gnu_cxx::new_allocator.11"*
  %69 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %65, align 8
  %70 = load i64, i64* %66, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.11"* %68, %"class.std::__cxx11::basic_string"* %69, i64 %70)
  store i32 -1232533443, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.11"*, %"class.std::__cxx11::basic_string"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.953
  %7 = load i32, i32* @y.954
  %8 = add i32 %6, 799349901
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 799349901
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1955341990, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1955341990, label %20
    i32 -2125305900, label %28
    i32 -1510698703, label %62
    i32 88309086, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2125305900, i32 88309086
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %30 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  %33 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %30, align 8
  %34 = bitcast %"class.std::__cxx11::basic_string"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.953
  %36 = load i32, i32* @y.954
  %37 = sub i32 %35, -1789511830
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1789511830
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1510698703, i32 88309086
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %65 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %64, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %64, align 8
  %68 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %65, align 8
  %69 = bitcast %"class.std::__cxx11::basic_string"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -2125305900, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s184136047.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn }
attributes #14 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
